{"ast":null,"code":"import hoistNonReactStatics from 'hoist-non-react-statics';\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { cleanUpAction } from '../actions/cleanUp';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const connectWithCleanUp = (mapStateToProps, mapDispatchToProps, stateSelector) => Component => {\n  const ConnectedComponent = connect(mapStateToProps, mapDispatchToProps // @ts-ignore\n  )(Component);\n\n  const ConnectedComponentWithCleanUp = props => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      return function cleanUp() {\n        dispatch(cleanUpAction({\n          stateSelector\n        }));\n      };\n    }, [dispatch]); // @ts-ignore\n\n    return /*#__PURE__*/_jsx(ConnectedComponent, Object.assign({}, props));\n  };\n\n  ConnectedComponentWithCleanUp.displayName = `ConnectWithCleanUp(${ConnectedComponent.displayName})`;\n  hoistNonReactStatics(ConnectedComponentWithCleanUp, Component);\n  return ConnectedComponentWithCleanUp;\n};","map":{"version":3,"names":["hoistNonReactStatics","React","useEffect","connect","useDispatch","cleanUpAction","connectWithCleanUp","mapStateToProps","mapDispatchToProps","stateSelector","Component","ConnectedComponent","ConnectedComponentWithCleanUp","props","dispatch","cleanUp","displayName"],"sources":["/home/soula/grafana/public/app/core/components/connectWithCleanUp.tsx"],"sourcesContent":["import hoistNonReactStatics from 'hoist-non-react-statics';\nimport React, { ComponentType, FunctionComponent, useEffect } from 'react';\nimport { connect, MapDispatchToPropsParam, MapStateToPropsParam, useDispatch } from 'react-redux';\n\nimport { cleanUpAction, StateSelector } from '../actions/cleanUp';\n\nexport const connectWithCleanUp =\n  <\n    TStateProps extends {} = {},\n    TDispatchProps = {},\n    TOwnProps = {},\n    State = {},\n    TSelector extends object = {},\n    Statics = {}\n  >(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    stateSelector: StateSelector<TSelector>\n  ) =>\n  (Component: ComponentType<any>) => {\n    const ConnectedComponent = connect(\n      mapStateToProps,\n      mapDispatchToProps\n      // @ts-ignore\n    )(Component);\n\n    const ConnectedComponentWithCleanUp: FunctionComponent = (props) => {\n      const dispatch = useDispatch();\n      useEffect(() => {\n        return function cleanUp() {\n          dispatch(cleanUpAction({ stateSelector }));\n        };\n      }, [dispatch]);\n      // @ts-ignore\n      return <ConnectedComponent {...props} />;\n    };\n\n    ConnectedComponentWithCleanUp.displayName = `ConnectWithCleanUp(${ConnectedComponent.displayName})`;\n    hoistNonReactStatics(ConnectedComponentWithCleanUp, Component);\n    type Hoisted = typeof ConnectedComponentWithCleanUp & Statics;\n\n    return ConnectedComponentWithCleanUp as Hoisted;\n  };\n"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,KAAP,IAAkDC,SAAlD,QAAmE,OAAnE;AACA,SAASC,OAAT,EAAiEC,WAAjE,QAAoF,aAApF;AAEA,SAASC,aAAT,QAA6C,oBAA7C;;AAEA,OAAO,MAAMC,kBAAkB,GAC7B,CAQEC,eARF,EASEC,kBATF,EAUEC,aAVF,KAYCC,SAAD,IAAmC;EACjC,MAAMC,kBAAkB,GAAGR,OAAO,CAChCI,eADgC,EAEhCC,kBAFgC,CAGhC;EAHgC,CAAP,CAIzBE,SAJyB,CAA3B;;EAMA,MAAME,6BAAgD,GAAIC,KAAD,IAAW;IAClE,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;IACAF,SAAS,CAAC,MAAM;MACd,OAAO,SAASa,OAAT,GAAmB;QACxBD,QAAQ,CAACT,aAAa,CAAC;UAAEI;QAAF,CAAD,CAAd,CAAR;MACD,CAFD;IAGD,CAJQ,EAIN,CAACK,QAAD,CAJM,CAAT,CAFkE,CAOlE;;IACA,oBAAO,KAAC,kBAAD,oBAAwBD,KAAxB,EAAP;EACD,CATD;;EAWAD,6BAA6B,CAACI,WAA9B,GAA6C,sBAAqBL,kBAAkB,CAACK,WAAY,GAAjG;EACAhB,oBAAoB,CAACY,6BAAD,EAAgCF,SAAhC,CAApB;EAGA,OAAOE,6BAAP;AACD,CApCI"},"metadata":{},"sourceType":"module"}