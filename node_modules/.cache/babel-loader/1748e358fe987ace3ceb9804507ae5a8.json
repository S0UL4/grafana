{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Severity } from '@sentry/browser';\nimport { logger, makePromiseBuffer, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nconst DEFAULT_MAX_CONCURRENT_REQUESTS = 3;\nconst DEFAULT_RATE_LIMIT_TIMEOUT_MS = 5000;\n/**\n * This is a copy of sentry's FetchTransport, edited to be able to push to any custom url\n * instead of using Sentry-specific endpoint logic.\n * Also transforms some of the payload values to be parseable by go.\n * Sends events sequentially and implements back-off in case of rate limiting.\n */\n\nexport class CustomEndpointTransport {\n  /** Locks transport after receiving 429 response */\n  constructor(options) {\n    var _options$maxConcurren;\n\n    _defineProperty(this, \"_disabledUntil\", new Date(Date.now()));\n\n    _defineProperty(this, \"_buffer\", void 0);\n\n    this.options = options;\n    this._buffer = makePromiseBuffer((_options$maxConcurren = options.maxConcurrentRequests) !== null && _options$maxConcurren !== void 0 ? _options$maxConcurren : DEFAULT_MAX_CONCURRENT_REQUESTS);\n  }\n\n  sendEvent(event) {\n    var _event$level, _event$exception$valu, _event$breadcrumbs;\n\n    if (new Date(Date.now()) < this._disabledUntil) {\n      const reason = `Dropping frontend event due to too many requests.`;\n      console.warn(reason);\n      return Promise.resolve({\n        event,\n        reason,\n        status: 'skipped'\n      });\n    }\n\n    const sentryReq = {\n      // convert all timestamps to iso string, so it's parseable by backend\n      body: JSON.stringify(Object.assign({}, event, {\n        level: (_event$level = event.level) !== null && _event$level !== void 0 ? _event$level : event.exception ? Severity.Error : Severity.Info,\n        exception: event.exception ? {\n          values: (_event$exception$valu = event.exception.values) === null || _event$exception$valu === void 0 ? void 0 : _event$exception$valu.map(value => Object.assign({}, value, {\n            // according to both typescript and go types, value is supposed to be string.\n            // but in some odd cases at runtime it turns out to be an empty object {}\n            // let's fix it here\n            value: fmtSentryErrorValue(value.value)\n          }))\n        } : event.exception,\n        breadcrumbs: (_event$breadcrumbs = event.breadcrumbs) === null || _event$breadcrumbs === void 0 ? void 0 : _event$breadcrumbs.map(breadcrumb => Object.assign({}, breadcrumb, {\n          timestamp: makeTimestamp(breadcrumb.timestamp)\n        })),\n        timestamp: makeTimestamp(event.timestamp)\n      })),\n      url: this.options.endpoint\n    };\n    const options = {\n      body: sentryReq.body,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n    };\n\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n\n    return this._buffer.add(() => new SyncPromise((resolve, reject) => {\n      window.fetch(sentryReq.url, options).then(response => {\n        if (response.status === 200) {\n          resolve({\n            status: 'success'\n          });\n          return;\n        }\n\n        if (response.status === 429) {\n          const now = Date.now();\n          const retryAfterHeader = response.headers.get('Retry-After');\n\n          if (retryAfterHeader) {\n            this._disabledUntil = new Date(now + parseRetryAfterHeader(retryAfterHeader, now));\n          } else {\n            this._disabledUntil = new Date(now + DEFAULT_RATE_LIMIT_TIMEOUT_MS);\n          }\n\n          logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n        }\n\n        reject(response);\n      }).catch(reject);\n    })).then(undefined, reason => {\n      if (reason.message === 'Not adding Promise due to buffer limit reached.') {\n        const msg = `Dropping frontend log event due to too many requests in flight.`;\n        console.warn(msg);\n        return {\n          event,\n          reason: msg,\n          status: 'skipped'\n        };\n      }\n\n      throw reason;\n    });\n  }\n\n}\n\nfunction makeTimestamp(time) {\n  if (time) {\n    return new Date(time * 1000).toISOString();\n  }\n\n  return new Date().toISOString();\n}\n\nfunction fmtSentryErrorValue(value) {\n  if (typeof value === 'string' || value === undefined) {\n    return value;\n  } else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n    return '';\n  }\n\n  return String(value);\n}","map":{"version":3,"names":["Severity","logger","makePromiseBuffer","parseRetryAfterHeader","supportsReferrerPolicy","SyncPromise","DEFAULT_MAX_CONCURRENT_REQUESTS","DEFAULT_RATE_LIMIT_TIMEOUT_MS","CustomEndpointTransport","constructor","options","Date","now","_buffer","maxConcurrentRequests","sendEvent","event","_disabledUntil","reason","console","warn","Promise","resolve","status","sentryReq","body","JSON","stringify","level","exception","Error","Info","values","map","value","fmtSentryErrorValue","breadcrumbs","breadcrumb","timestamp","makeTimestamp","url","endpoint","headers","method","referrerPolicy","fetchParameters","undefined","Object","assign","add","reject","window","fetch","then","response","retryAfterHeader","get","catch","message","msg","time","toISOString","keys","length","String"],"sources":["/home/soula/grafana/public/app/core/services/echo/backends/sentry/transports/CustomEndpointTransport.ts"],"sourcesContent":["import { Event, Severity } from '@sentry/browser';\nimport { Response } from '@sentry/types';\nimport {\n  logger,\n  makePromiseBuffer,\n  parseRetryAfterHeader,\n  PromiseBuffer,\n  supportsReferrerPolicy,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { BaseTransport } from '../types';\n\nexport interface CustomEndpointTransportOptions {\n  endpoint: string;\n  fetchParameters?: Partial<RequestInit>;\n  maxConcurrentRequests?: number;\n}\n\nconst DEFAULT_MAX_CONCURRENT_REQUESTS = 3;\n\nconst DEFAULT_RATE_LIMIT_TIMEOUT_MS = 5000;\n\n/**\n * This is a copy of sentry's FetchTransport, edited to be able to push to any custom url\n * instead of using Sentry-specific endpoint logic.\n * Also transforms some of the payload values to be parseable by go.\n * Sends events sequentially and implements back-off in case of rate limiting.\n */\n\nexport class CustomEndpointTransport implements BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  private readonly _buffer: PromiseBuffer<Response>;\n\n  constructor(public options: CustomEndpointTransportOptions) {\n    this._buffer = makePromiseBuffer(options.maxConcurrentRequests ?? DEFAULT_MAX_CONCURRENT_REQUESTS);\n  }\n\n  sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      const reason = `Dropping frontend event due to too many requests.`;\n      console.warn(reason);\n      return Promise.resolve({\n        event,\n        reason,\n        status: 'skipped',\n      });\n    }\n\n    const sentryReq = {\n      // convert all timestamps to iso string, so it's parseable by backend\n      body: JSON.stringify({\n        ...event,\n        level: event.level ?? (event.exception ? Severity.Error : Severity.Info),\n        exception: event.exception\n          ? {\n              values: event.exception.values?.map((value) => ({\n                ...value,\n                // according to both typescript and go types, value is supposed to be string.\n                // but in some odd cases at runtime it turns out to be an empty object {}\n                // let's fix it here\n                value: fmtSentryErrorValue(value.value),\n              })),\n            }\n          : event.exception,\n        breadcrumbs: event.breadcrumbs?.map((breadcrumb) => ({\n          ...breadcrumb,\n          timestamp: makeTimestamp(breadcrumb.timestamp),\n        })),\n        timestamp: makeTimestamp(event.timestamp),\n      }),\n      url: this.options.endpoint,\n    };\n\n    const options: RequestInit = {\n      body: sentryReq.body,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n\n    return this._buffer\n      .add(\n        () =>\n          new SyncPromise<Response>((resolve, reject) => {\n            window\n              .fetch(sentryReq.url, options)\n              .then((response) => {\n                if (response.status === 200) {\n                  resolve({ status: 'success' });\n                  return;\n                }\n\n                if (response.status === 429) {\n                  const now = Date.now();\n                  const retryAfterHeader = response.headers.get('Retry-After');\n                  if (retryAfterHeader) {\n                    this._disabledUntil = new Date(now + parseRetryAfterHeader(retryAfterHeader, now));\n                  } else {\n                    this._disabledUntil = new Date(now + DEFAULT_RATE_LIMIT_TIMEOUT_MS);\n                  }\n                  logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n                }\n\n                reject(response);\n              })\n              .catch(reject);\n          })\n      )\n      .then(undefined, (reason) => {\n        if (reason.message === 'Not adding Promise due to buffer limit reached.') {\n          const msg = `Dropping frontend log event due to too many requests in flight.`;\n          console.warn(msg);\n          return {\n            event,\n            reason: msg,\n            status: 'skipped',\n          };\n        }\n        throw reason;\n      });\n  }\n}\n\nfunction makeTimestamp(time: number | undefined): string {\n  if (time) {\n    return new Date(time * 1000).toISOString();\n  }\n  return new Date().toISOString();\n}\n\nfunction fmtSentryErrorValue(value: unknown): string | undefined {\n  if (typeof value === 'string' || value === undefined) {\n    return value;\n  } else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n    return '';\n  }\n  return String(value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}