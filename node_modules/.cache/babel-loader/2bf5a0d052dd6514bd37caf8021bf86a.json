{"ast":null,"code":"/**\n * Converts a simple string used in LokiLogsMappings component (e.g. \"servers.(name).*\")\n * to data model saved in data source configuration.\n */\nexport function fromString(text) {\n  return {\n    matchers: text.split('.').map(metricNode => {\n      if (metricNode.startsWith('(') && metricNode.endsWith(')')) {\n        return {\n          value: '*',\n          labelName: metricNode.slice(1, -1)\n        };\n      } else {\n        return {\n          value: metricNode\n        };\n      }\n    })\n  };\n}\n/**\n * Coverts configuration stored in data source configuration into a string displayed in LokiLogsMappings component.\n */\n\nexport function toString(mapping) {\n  return mapping.matchers.map(matcher => {\n    return matcher.labelName ? `(${matcher.labelName})` : `${matcher.value}`;\n  }).join('.');\n}","map":{"version":3,"names":["fromString","text","matchers","split","map","metricNode","startsWith","endsWith","value","labelName","slice","toString","mapping","matcher","join"],"sources":["/home/soula/grafana/public/app/plugins/datasource/graphite/configuration/parseLokiLabelMappings.ts"],"sourcesContent":["import { GraphiteLokiMapping } from '../types';\n\n/**\n * Converts a simple string used in LokiLogsMappings component (e.g. \"servers.(name).*\")\n * to data model saved in data source configuration.\n */\nexport function fromString(text: string): GraphiteLokiMapping {\n  return {\n    matchers: text.split('.').map((metricNode) => {\n      if (metricNode.startsWith('(') && metricNode.endsWith(')')) {\n        return {\n          value: '*',\n          labelName: metricNode.slice(1, -1),\n        };\n      } else {\n        return { value: metricNode };\n      }\n    }),\n  };\n}\n\n/**\n * Coverts configuration stored in data source configuration into a string displayed in LokiLogsMappings component.\n */\nexport function toString(mapping: GraphiteLokiMapping): string {\n  return mapping.matchers\n    .map((matcher) => {\n      return matcher.labelName ? `(${matcher.labelName})` : `${matcher.value}`;\n    })\n    .join('.');\n}\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAAuD;EAC5D,OAAO;IACLC,QAAQ,EAAED,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAqBC,UAAD,IAAgB;MAC5C,IAAIA,UAAU,CAACC,UAAX,CAAsB,GAAtB,KAA8BD,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAlC,EAA4D;QAC1D,OAAO;UACLC,KAAK,EAAE,GADF;UAELC,SAAS,EAAEJ,UAAU,CAACK,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB;QAFN,CAAP;MAID,CALD,MAKO;QACL,OAAO;UAAEF,KAAK,EAAEH;QAAT,CAAP;MACD;IACF,CATS;EADL,CAAP;AAYD;AAED;AACA;AACA;;AACA,OAAO,SAASM,QAAT,CAAkBC,OAAlB,EAAwD;EAC7D,OAAOA,OAAO,CAACV,QAAR,CACJE,GADI,CACCS,OAAD,IAAa;IAChB,OAAOA,OAAO,CAACJ,SAAR,GAAqB,IAAGI,OAAO,CAACJ,SAAU,GAA1C,GAAgD,GAAEI,OAAO,CAACL,KAAM,EAAvE;EACD,CAHI,EAIJM,IAJI,CAIC,GAJD,CAAP;AAKD"},"metadata":{},"sourceType":"module"}