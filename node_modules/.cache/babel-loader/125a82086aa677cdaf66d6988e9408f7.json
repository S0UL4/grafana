{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useAsync, useLocalStorage } from 'react-use';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { useStyles2 } from '@grafana/ui';\nimport { getAllSuggestions } from '../../state/getAllSuggestions';\nimport { VisualizationSuggestionCard } from './VisualizationSuggestionCard';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function VisualizationSuggestions({\n  onChange,\n  data,\n  panel,\n  searchQuery\n}) {\n  const styles = useStyles2(getStyles);\n  const {\n    value: suggestions\n  } = useAsync(() => getAllSuggestions(data, panel), [data, panel]); // temp test\n\n  const [showTitle, setShowTitle] = useLocalStorage(`VisualizationSuggestions.showTitle`, false);\n  const filteredSuggestions = filterSuggestionsBySearch(searchQuery, suggestions);\n  return /*#__PURE__*/_jsx(AutoSizer, {\n    disableHeight: true,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: ({\n      width\n    }) => {\n      if (!width) {\n        return null;\n      }\n\n      const columnCount = Math.floor(width / 170);\n      const spaceBetween = 8 * (columnCount - 1);\n      const previewWidth = (width - spaceBetween) / columnCount;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.filterRow,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: styles.infoText,\n            onClick: () => setShowTitle(!showTitle),\n            children: \"Based on current data\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.grid,\n          style: {\n            gridTemplateColumns: `repeat(auto-fill, ${previewWidth - 1}px)`\n          },\n          children: [filteredSuggestions.map((suggestion, index) => /*#__PURE__*/_jsx(VisualizationSuggestionCard, {\n            data: data,\n            suggestion: suggestion,\n            onChange: onChange,\n            width: previewWidth,\n            showTitle: showTitle\n          }, index)), searchQuery && filteredSuggestions.length === 0 && /*#__PURE__*/_jsx(\"div\", {\n            className: styles.infoText,\n            children: \"No results matched your query\"\n          })]\n        })]\n      });\n    }\n  });\n}\n\nfunction filterSuggestionsBySearch(searchQuery, suggestions) {\n  if (!searchQuery || !suggestions) {\n    return suggestions || [];\n  }\n\n  const regex = new RegExp(searchQuery, 'i');\n  return suggestions.filter(s => regex.test(s.name) || regex.test(s.pluginId));\n}\n\nconst getStyles = theme => {\n  return {\n    heading: css(Object.assign({}, theme.typography.h5, {\n      margin: theme.spacing(0, 0.5, 1)\n    })),\n    filterRow: css({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      paddingBottom: '8px'\n    }),\n    infoText: css({\n      fontSize: theme.typography.bodySmall.fontSize,\n      color: theme.colors.text.secondary,\n      fontStyle: 'italic'\n    }),\n    grid: css({\n      display: 'grid',\n      gridGap: theme.spacing(1),\n      gridTemplateColumns: 'repeat(auto-fill, 144px)',\n      marginBottom: theme.spacing(1),\n      justifyContent: 'space-evenly'\n    })\n  };\n};","map":{"version":3,"names":["css","React","useAsync","useLocalStorage","AutoSizer","useStyles2","getAllSuggestions","VisualizationSuggestionCard","VisualizationSuggestions","onChange","data","panel","searchQuery","styles","getStyles","value","suggestions","showTitle","setShowTitle","filteredSuggestions","filterSuggestionsBySearch","width","height","columnCount","Math","floor","spaceBetween","previewWidth","filterRow","infoText","grid","gridTemplateColumns","map","suggestion","index","length","regex","RegExp","filter","s","test","name","pluginId","theme","heading","typography","h5","margin","spacing","display","flexDirection","justifyContent","alignItems","paddingBottom","fontSize","bodySmall","color","colors","text","secondary","fontStyle","gridGap","marginBottom"],"sources":["/home/soula/grafana/public/app/features/panel/components/VizTypePicker/VisualizationSuggestions.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useAsync, useLocalStorage } from 'react-use';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { GrafanaTheme2, PanelData, PanelPluginMeta, PanelModel, VisualizationSuggestion } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getAllSuggestions } from '../../state/getAllSuggestions';\n\nimport { VisualizationSuggestionCard } from './VisualizationSuggestionCard';\nimport { VizTypeChangeDetails } from './types';\n\nexport interface Props {\n  current: PanelPluginMeta;\n  data?: PanelData;\n  panel?: PanelModel;\n  onChange: (options: VizTypeChangeDetails) => void;\n  searchQuery: string;\n  onClose: () => void;\n}\n\nexport function VisualizationSuggestions({ onChange, data, panel, searchQuery }: Props) {\n  const styles = useStyles2(getStyles);\n  const { value: suggestions } = useAsync(() => getAllSuggestions(data, panel), [data, panel]);\n  // temp test\n  const [showTitle, setShowTitle] = useLocalStorage(`VisualizationSuggestions.showTitle`, false);\n  const filteredSuggestions = filterSuggestionsBySearch(searchQuery, suggestions);\n\n  return (\n    <AutoSizer disableHeight style={{ width: '100%', height: '100%' }}>\n      {({ width }) => {\n        if (!width) {\n          return null;\n        }\n\n        const columnCount = Math.floor(width / 170);\n        const spaceBetween = 8 * (columnCount! - 1);\n        const previewWidth = (width - spaceBetween) / columnCount!;\n\n        return (\n          <div>\n            <div className={styles.filterRow}>\n              <div className={styles.infoText} onClick={() => setShowTitle(!showTitle)}>\n                Based on current data\n              </div>\n            </div>\n            <div className={styles.grid} style={{ gridTemplateColumns: `repeat(auto-fill, ${previewWidth - 1}px)` }}>\n              {filteredSuggestions.map((suggestion, index) => (\n                <VisualizationSuggestionCard\n                  key={index}\n                  data={data!}\n                  suggestion={suggestion}\n                  onChange={onChange}\n                  width={previewWidth}\n                  showTitle={showTitle}\n                />\n              ))}\n              {searchQuery && filteredSuggestions.length === 0 && (\n                <div className={styles.infoText}>No results matched your query</div>\n              )}\n            </div>\n          </div>\n        );\n      }}\n    </AutoSizer>\n  );\n}\n\nfunction filterSuggestionsBySearch(\n  searchQuery: string,\n  suggestions?: VisualizationSuggestion[]\n): VisualizationSuggestion[] {\n  if (!searchQuery || !suggestions) {\n    return suggestions || [];\n  }\n\n  const regex = new RegExp(searchQuery, 'i');\n\n  return suggestions.filter((s) => regex.test(s.name) || regex.test(s.pluginId));\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    heading: css({\n      ...theme.typography.h5,\n      margin: theme.spacing(0, 0.5, 1),\n    }),\n    filterRow: css({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      paddingBottom: '8px',\n    }),\n    infoText: css({\n      fontSize: theme.typography.bodySmall.fontSize,\n      color: theme.colors.text.secondary,\n      fontStyle: 'italic',\n    }),\n    grid: css({\n      display: 'grid',\n      gridGap: theme.spacing(1),\n      gridTemplateColumns: 'repeat(auto-fill, 144px)',\n      marginBottom: theme.spacing(1),\n      justifyContent: 'space-evenly',\n    }),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}