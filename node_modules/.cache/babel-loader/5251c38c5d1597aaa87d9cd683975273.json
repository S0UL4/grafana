{"ast":null,"code":"import React, { useCallback } from 'react'; // @ts-ignore\n\nimport Highlighter from 'react-highlight-words';\nimport { Icon, Button, LinkButton, Card } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst AlertRuleItem = ({\n  rule,\n  search,\n  onTogglePause\n}) => {\n  const ruleUrl = `${rule.url}?editPanel=${rule.panelId}&tab=alert`;\n  const renderText = useCallback(text => /*#__PURE__*/_jsx(Highlighter, {\n    highlightClassName: \"highlight-search-match\",\n    textToHighlight: text,\n    searchWords: [search]\n  }, text), [search]);\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Card.Heading, {\n      children: renderText(rule.name)\n    }), /*#__PURE__*/_jsx(Card.Figure, {\n      children: /*#__PURE__*/_jsx(Icon, {\n        size: \"xl\",\n        name: rule.stateIcon,\n        className: `alert-rule-item__icon ${rule.stateClass}`\n      })\n    }), /*#__PURE__*/_jsxs(Card.Meta, {\n      children: [/*#__PURE__*/_jsxs(\"span\", {\n        children: [/*#__PURE__*/_jsxs(\"span\", {\n          className: `${rule.stateClass}`,\n          children: [renderText(rule.stateText), ' ']\n        }, \"text\"), \"for \", rule.stateAge]\n      }, \"state\"), rule.info ? renderText(rule.info) : null]\n    }), /*#__PURE__*/_jsxs(Card.Actions, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        icon: rule.state === 'paused' ? 'play' : 'pause',\n        onClick: onTogglePause,\n        children: rule.state === 'paused' ? 'Resume' : 'Pause'\n      }, \"play\"), /*#__PURE__*/_jsx(LinkButton, {\n        variant: \"secondary\",\n        href: ruleUrl,\n        icon: \"cog\",\n        children: \"Edit alert\"\n      }, \"edit\")]\n    })]\n  });\n};\n\nexport default AlertRuleItem;","map":{"version":3,"names":["React","useCallback","Highlighter","Icon","Button","LinkButton","Card","AlertRuleItem","rule","search","onTogglePause","ruleUrl","url","panelId","renderText","text","name","stateIcon","stateClass","stateText","stateAge","info","state"],"sources":["/home/soula/grafana/public/app/features/alerting/AlertRuleItem.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n// @ts-ignore\nimport Highlighter from 'react-highlight-words';\n\nimport { Icon, IconName, Button, LinkButton, Card } from '@grafana/ui';\n\nimport { AlertRule } from '../../types';\n\nexport interface Props {\n  rule: AlertRule;\n  search: string;\n  onTogglePause: () => void;\n}\n\nconst AlertRuleItem = ({ rule, search, onTogglePause }: Props) => {\n  const ruleUrl = `${rule.url}?editPanel=${rule.panelId}&tab=alert`;\n  const renderText = useCallback(\n    (text) => (\n      <Highlighter\n        key={text}\n        highlightClassName=\"highlight-search-match\"\n        textToHighlight={text}\n        searchWords={[search]}\n      />\n    ),\n    [search]\n  );\n\n  return (\n    <Card>\n      <Card.Heading>{renderText(rule.name)}</Card.Heading>\n      <Card.Figure>\n        <Icon size=\"xl\" name={rule.stateIcon as IconName} className={`alert-rule-item__icon ${rule.stateClass}`} />\n      </Card.Figure>\n      <Card.Meta>\n        <span key=\"state\">\n          <span key=\"text\" className={`${rule.stateClass}`}>\n            {renderText(rule.stateText)}{' '}\n          </span>\n          for {rule.stateAge}\n        </span>\n        {rule.info ? renderText(rule.info) : null}\n      </Card.Meta>\n      <Card.Actions>\n        <Button\n          key=\"play\"\n          variant=\"secondary\"\n          icon={rule.state === 'paused' ? 'play' : 'pause'}\n          onClick={onTogglePause}\n        >\n          {rule.state === 'paused' ? 'Resume' : 'Pause'}\n        </Button>\n        <LinkButton key=\"edit\" variant=\"secondary\" href={ruleUrl} icon=\"cog\">\n          Edit alert\n        </LinkButton>\n      </Card.Actions>\n    </Card>\n  );\n};\n\nexport default AlertRuleItem;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SAASC,IAAT,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,IAA7C,QAAyD,aAAzD;;;;AAUA,MAAMC,aAAa,GAAG,CAAC;EAAEC,IAAF;EAAQC,MAAR;EAAgBC;AAAhB,CAAD,KAA4C;EAChE,MAAMC,OAAO,GAAI,GAAEH,IAAI,CAACI,GAAI,cAAaJ,IAAI,CAACK,OAAQ,YAAtD;EACA,MAAMC,UAAU,GAAGb,WAAW,CAC3Bc,IAAD,iBACE,KAAC,WAAD;IAEE,kBAAkB,EAAC,wBAFrB;IAGE,eAAe,EAAEA,IAHnB;IAIE,WAAW,EAAE,CAACN,MAAD;EAJf,GACOM,IADP,CAF0B,EAS5B,CAACN,MAAD,CAT4B,CAA9B;EAYA,oBACE,MAAC,IAAD;IAAA,wBACE,KAAC,IAAD,CAAM,OAAN;MAAA,UAAeK,UAAU,CAACN,IAAI,CAACQ,IAAN;IAAzB,EADF,eAEE,KAAC,IAAD,CAAM,MAAN;MAAA,uBACE,KAAC,IAAD;QAAM,IAAI,EAAC,IAAX;QAAgB,IAAI,EAAER,IAAI,CAACS,SAA3B;QAAkD,SAAS,EAAG,yBAAwBT,IAAI,CAACU,UAAW;MAAtG;IADF,EAFF,eAKE,MAAC,IAAD,CAAM,IAAN;MAAA,wBACE;QAAA,wBACE;UAAiB,SAAS,EAAG,GAAEV,IAAI,CAACU,UAAW,EAA/C;UAAA,WACGJ,UAAU,CAACN,IAAI,CAACW,SAAN,CADb,EAC+B,GAD/B;QAAA,GAAU,MAAV,CADF,UAIOX,IAAI,CAACY,QAJZ;MAAA,GAAU,OAAV,CADF,EAOGZ,IAAI,CAACa,IAAL,GAAYP,UAAU,CAACN,IAAI,CAACa,IAAN,CAAtB,GAAoC,IAPvC;IAAA,EALF,eAcE,MAAC,IAAD,CAAM,OAAN;MAAA,wBACE,KAAC,MAAD;QAEE,OAAO,EAAC,WAFV;QAGE,IAAI,EAAEb,IAAI,CAACc,KAAL,KAAe,QAAf,GAA0B,MAA1B,GAAmC,OAH3C;QAIE,OAAO,EAAEZ,aAJX;QAAA,UAMGF,IAAI,CAACc,KAAL,KAAe,QAAf,GAA0B,QAA1B,GAAqC;MANxC,GACM,MADN,CADF,eASE,KAAC,UAAD;QAAuB,OAAO,EAAC,WAA/B;QAA2C,IAAI,EAAEX,OAAjD;QAA0D,IAAI,EAAC,KAA/D;QAAA;MAAA,GAAgB,MAAhB,CATF;IAAA,EAdF;EAAA,EADF;AA8BD,CA5CD;;AA8CA,eAAeJ,aAAf"},"metadata":{},"sourceType":"module"}