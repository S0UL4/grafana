{"ast":null,"code":"var _h;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { PureComponent, useRef, useState } from 'react';\nimport { Button, ConfirmButton, ConfirmModal, Input, LegacyInputStatus, stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function UserProfile({\n  user,\n  onUserUpdate,\n  onUserDelete,\n  onUserDisable,\n  onUserEnable,\n  onPasswordChange\n}) {\n  var _user$authLabels;\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDisableModal, setShowDisableModal] = useState(false);\n  const deleteUserRef = useRef(null);\n\n  const showDeleteUserModal = show => () => {\n    setShowDeleteModal(show);\n\n    if (!show && deleteUserRef.current) {\n      deleteUserRef.current.focus();\n    }\n  };\n\n  const disableUserRef = useRef(null);\n\n  const showDisableUserModal = show => () => {\n    setShowDisableModal(show);\n\n    if (!show && disableUserRef.current) {\n      disableUserRef.current.focus();\n    }\n  };\n\n  const handleUserDelete = () => onUserDelete(user.id);\n\n  const handleUserDisable = () => onUserDisable(user.id);\n\n  const handleUserEnable = () => onUserEnable(user.id);\n\n  const onUserNameChange = newValue => {\n    onUserUpdate(Object.assign({}, user, {\n      name: newValue\n    }));\n  };\n\n  const onUserEmailChange = newValue => {\n    onUserUpdate(Object.assign({}, user, {\n      email: newValue\n    }));\n  };\n\n  const onUserLoginChange = newValue => {\n    onUserUpdate(Object.assign({}, user, {\n      login: newValue\n    }));\n  };\n\n  const authSource = ((_user$authLabels = user.authLabels) === null || _user$authLabels === void 0 ? void 0 : _user$authLabels.length) && user.authLabels[0];\n  const lockMessage = authSource ? `Synced via ${authSource}` : '';\n  const styles = getStyles(config.theme);\n  const editLocked = user.isExternal || !contextSrv.hasPermissionInMetadata(AccessControlAction.UsersWrite, user);\n  const passwordChangeLocked = user.isExternal || !contextSrv.hasPermissionInMetadata(AccessControlAction.UsersPasswordUpdate, user);\n  const canDelete = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersDelete, user);\n  const canDisable = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersDisable, user);\n  const canEnable = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersEnable, user);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n      className: \"page-heading\",\n      children: \"User information\"\n    })), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form-group\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form\",\n        children: /*#__PURE__*/_jsx(\"table\", {\n          className: \"filter-table form-inline\",\n          children: /*#__PURE__*/_jsxs(\"tbody\", {\n            children: [/*#__PURE__*/_jsx(UserProfileRow, {\n              label: \"Name\",\n              value: user.name,\n              locked: editLocked,\n              lockMessage: lockMessage,\n              onChange: onUserNameChange\n            }), /*#__PURE__*/_jsx(UserProfileRow, {\n              label: \"Email\",\n              value: user.email,\n              locked: editLocked,\n              lockMessage: lockMessage,\n              onChange: onUserEmailChange\n            }), /*#__PURE__*/_jsx(UserProfileRow, {\n              label: \"Username\",\n              value: user.login,\n              locked: editLocked,\n              lockMessage: lockMessage,\n              onChange: onUserLoginChange\n            }), /*#__PURE__*/_jsx(UserProfileRow, {\n              label: \"Password\",\n              value: \"********\",\n              inputType: \"password\",\n              locked: passwordChangeLocked,\n              lockMessage: lockMessage,\n              onChange: onPasswordChange\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.buttonRow,\n        children: [canDelete && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            variant: \"destructive\",\n            onClick: showDeleteUserModal(true),\n            ref: deleteUserRef,\n            children: \"Delete user\"\n          }), /*#__PURE__*/_jsx(ConfirmModal, {\n            isOpen: showDeleteModal,\n            title: \"Delete user\",\n            body: \"Are you sure you want to delete this user?\",\n            confirmText: \"Delete user\",\n            onConfirm: handleUserDelete,\n            onDismiss: showDeleteUserModal(false)\n          })]\n        }), user.isDisabled && canEnable && /*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          onClick: handleUserEnable,\n          children: \"Enable user\"\n        }), !user.isDisabled && canDisable && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: showDisableUserModal(true),\n            ref: disableUserRef,\n            children: \"Disable user\"\n          }), /*#__PURE__*/_jsx(ConfirmModal, {\n            isOpen: showDisableModal,\n            title: \"Disable user\",\n            body: \"Are you sure you want to disable this user?\",\n            confirmText: \"Disable user\",\n            onConfirm: handleUserDisable,\n            onDismiss: showDisableUserModal(false)\n          })]\n        })]\n      })]\n    })]\n  });\n}\nconst getStyles = stylesFactory(theme => {\n  return {\n    buttonRow: css`\n      margin-top: 0.8rem;\n      > * {\n        margin-right: 16px;\n      }\n    `\n  };\n});\nexport class UserProfileRow extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"inputElem\", void 0);\n\n    _defineProperty(this, \"state\", {\n      editing: false,\n      value: this.props.value || ''\n    });\n\n    _defineProperty(this, \"setInputElem\", elem => {\n      this.inputElem = elem;\n    });\n\n    _defineProperty(this, \"onEditClick\", () => {\n      if (this.props.inputType === 'password') {\n        // Reset value for password field\n        this.setState({\n          editing: true,\n          value: ''\n        }, this.focusInput);\n      } else {\n        this.setState({\n          editing: true\n        }, this.focusInput);\n      }\n    });\n\n    _defineProperty(this, \"onCancelClick\", () => {\n      this.setState({\n        editing: false,\n        value: this.props.value || ''\n      });\n    });\n\n    _defineProperty(this, \"onInputChange\", (event, status) => {\n      if (status === LegacyInputStatus.Invalid) {\n        return;\n      }\n\n      this.setState({\n        value: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"onInputBlur\", (event, status) => {\n      if (status === LegacyInputStatus.Invalid) {\n        return;\n      }\n\n      this.setState({\n        value: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"focusInput\", () => {\n      if (this.inputElem && this.inputElem.focus) {\n        this.inputElem.focus();\n      }\n    });\n\n    _defineProperty(this, \"onSave\", () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.value);\n      }\n    });\n  }\n\n  render() {\n    const {\n      label,\n      locked,\n      lockMessage,\n      inputType\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    const labelClass = cx('width-16', css`\n        font-weight: 500;\n      `);\n\n    if (locked) {\n      return /*#__PURE__*/_jsx(LockedRow, {\n        label: label,\n        value: value,\n        lockMessage: lockMessage\n      });\n    }\n\n    const inputId = `${label}-input`;\n    return /*#__PURE__*/_jsxs(\"tr\", {\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        className: labelClass,\n        children: /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: inputId,\n          children: label\n        })\n      }), /*#__PURE__*/_jsx(\"td\", {\n        className: \"width-25\",\n        colSpan: 2,\n        children: this.state.editing ? /*#__PURE__*/_jsx(Input, {\n          id: inputId,\n          type: inputType,\n          defaultValue: value,\n          onBlur: this.onInputBlur,\n          onChange: this.onInputChange,\n          ref: this.setInputElem,\n          width: 30\n        }) : /*#__PURE__*/_jsx(\"span\", {\n          children: this.props.value\n        })\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: /*#__PURE__*/_jsx(ConfirmButton, {\n          confirmText: \"Save\",\n          onClick: this.onEditClick,\n          onConfirm: this.onSave,\n          onCancel: this.onCancelClick,\n          children: \"Edit\"\n        })\n      })]\n    });\n  }\n\n}\n\n_defineProperty(UserProfileRow, \"defaultProps\", {\n  value: '',\n  locked: false,\n  lockMessage: '',\n  inputType: 'text'\n});\n\nexport const LockedRow = ({\n  label,\n  value,\n  lockMessage\n}) => {\n  const lockMessageClass = css`\n    font-style: italic;\n    margin-right: 0.6rem;\n  `;\n  const labelClass = cx('width-16', css`\n      font-weight: 500;\n    `);\n  return /*#__PURE__*/_jsxs(\"tr\", {\n    children: [/*#__PURE__*/_jsx(\"td\", {\n      className: labelClass,\n      children: label\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"width-25\",\n      colSpan: 2,\n      children: value\n    }), /*#__PURE__*/_jsx(\"td\", {\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: lockMessageClass,\n        children: lockMessage\n      })\n    })]\n  });\n};","map":{"version":3,"names":["css","cx","React","PureComponent","useRef","useState","Button","ConfirmButton","ConfirmModal","Input","LegacyInputStatus","stylesFactory","config","contextSrv","AccessControlAction","UserProfile","user","onUserUpdate","onUserDelete","onUserDisable","onUserEnable","onPasswordChange","showDeleteModal","setShowDeleteModal","showDisableModal","setShowDisableModal","deleteUserRef","showDeleteUserModal","show","current","focus","disableUserRef","showDisableUserModal","handleUserDelete","id","handleUserDisable","handleUserEnable","onUserNameChange","newValue","name","onUserEmailChange","email","onUserLoginChange","login","authSource","authLabels","length","lockMessage","styles","getStyles","theme","editLocked","isExternal","hasPermissionInMetadata","UsersWrite","passwordChangeLocked","UsersPasswordUpdate","canDelete","UsersDelete","canDisable","UsersDisable","canEnable","UsersEnable","buttonRow","isDisabled","UserProfileRow","editing","value","props","elem","inputElem","inputType","setState","focusInput","event","status","Invalid","target","onChange","state","render","label","locked","labelClass","inputId","onInputBlur","onInputChange","setInputElem","onEditClick","onSave","onCancelClick","LockedRow","lockMessageClass"],"sources":["/home/soula/grafana/public/app/features/admin/UserProfile.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, PureComponent, useRef, useState } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Button, ConfirmButton, ConfirmModal, Input, LegacyInputStatus, stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, UserDTO } from 'app/types';\n\ninterface Props {\n  user: UserDTO;\n\n  onUserUpdate: (user: UserDTO) => void;\n  onUserDelete: (userId: number) => void;\n  onUserDisable: (userId: number) => void;\n  onUserEnable: (userId: number) => void;\n  onPasswordChange(password: string): void;\n}\n\nexport function UserProfile({\n  user,\n  onUserUpdate,\n  onUserDelete,\n  onUserDisable,\n  onUserEnable,\n  onPasswordChange,\n}: Props) {\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDisableModal, setShowDisableModal] = useState(false);\n\n  const deleteUserRef = useRef<HTMLButtonElement | null>(null);\n  const showDeleteUserModal = (show: boolean) => () => {\n    setShowDeleteModal(show);\n    if (!show && deleteUserRef.current) {\n      deleteUserRef.current.focus();\n    }\n  };\n\n  const disableUserRef = useRef<HTMLButtonElement | null>(null);\n  const showDisableUserModal = (show: boolean) => () => {\n    setShowDisableModal(show);\n    if (!show && disableUserRef.current) {\n      disableUserRef.current.focus();\n    }\n  };\n\n  const handleUserDelete = () => onUserDelete(user.id);\n\n  const handleUserDisable = () => onUserDisable(user.id);\n\n  const handleUserEnable = () => onUserEnable(user.id);\n\n  const onUserNameChange = (newValue: string) => {\n    onUserUpdate({\n      ...user,\n      name: newValue,\n    });\n  };\n\n  const onUserEmailChange = (newValue: string) => {\n    onUserUpdate({\n      ...user,\n      email: newValue,\n    });\n  };\n\n  const onUserLoginChange = (newValue: string) => {\n    onUserUpdate({\n      ...user,\n      login: newValue,\n    });\n  };\n\n  const authSource = user.authLabels?.length && user.authLabels[0];\n  const lockMessage = authSource ? `Synced via ${authSource}` : '';\n  const styles = getStyles(config.theme);\n\n  const editLocked = user.isExternal || !contextSrv.hasPermissionInMetadata(AccessControlAction.UsersWrite, user);\n  const passwordChangeLocked =\n    user.isExternal || !contextSrv.hasPermissionInMetadata(AccessControlAction.UsersPasswordUpdate, user);\n  const canDelete = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersDelete, user);\n  const canDisable = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersDisable, user);\n  const canEnable = contextSrv.hasPermissionInMetadata(AccessControlAction.UsersEnable, user);\n\n  return (\n    <>\n      <h3 className=\"page-heading\">User information</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form\">\n          <table className=\"filter-table form-inline\">\n            <tbody>\n              <UserProfileRow\n                label=\"Name\"\n                value={user.name}\n                locked={editLocked}\n                lockMessage={lockMessage}\n                onChange={onUserNameChange}\n              />\n              <UserProfileRow\n                label=\"Email\"\n                value={user.email}\n                locked={editLocked}\n                lockMessage={lockMessage}\n                onChange={onUserEmailChange}\n              />\n              <UserProfileRow\n                label=\"Username\"\n                value={user.login}\n                locked={editLocked}\n                lockMessage={lockMessage}\n                onChange={onUserLoginChange}\n              />\n              <UserProfileRow\n                label=\"Password\"\n                value=\"********\"\n                inputType=\"password\"\n                locked={passwordChangeLocked}\n                lockMessage={lockMessage}\n                onChange={onPasswordChange}\n              />\n            </tbody>\n          </table>\n        </div>\n        <div className={styles.buttonRow}>\n          {canDelete && (\n            <>\n              <Button variant=\"destructive\" onClick={showDeleteUserModal(true)} ref={deleteUserRef}>\n                Delete user\n              </Button>\n              <ConfirmModal\n                isOpen={showDeleteModal}\n                title=\"Delete user\"\n                body=\"Are you sure you want to delete this user?\"\n                confirmText=\"Delete user\"\n                onConfirm={handleUserDelete}\n                onDismiss={showDeleteUserModal(false)}\n              />\n            </>\n          )}\n          {user.isDisabled && canEnable && (\n            <Button variant=\"secondary\" onClick={handleUserEnable}>\n              Enable user\n            </Button>\n          )}\n          {!user.isDisabled && canDisable && (\n            <>\n              <Button variant=\"secondary\" onClick={showDisableUserModal(true)} ref={disableUserRef}>\n                Disable user\n              </Button>\n              <ConfirmModal\n                isOpen={showDisableModal}\n                title=\"Disable user\"\n                body=\"Are you sure you want to disable this user?\"\n                confirmText=\"Disable user\"\n                onConfirm={handleUserDisable}\n                onDismiss={showDisableUserModal(false)}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    buttonRow: css`\n      margin-top: 0.8rem;\n      > * {\n        margin-right: 16px;\n      }\n    `,\n  };\n});\n\ninterface UserProfileRowProps {\n  label: string;\n  value?: string;\n  locked?: boolean;\n  lockMessage?: string;\n  inputType?: string;\n  onChange?: (value: string) => void;\n}\n\ninterface UserProfileRowState {\n  value: string;\n  editing: boolean;\n}\n\nexport class UserProfileRow extends PureComponent<UserProfileRowProps, UserProfileRowState> {\n  inputElem?: HTMLInputElement;\n\n  static defaultProps: Partial<UserProfileRowProps> = {\n    value: '',\n    locked: false,\n    lockMessage: '',\n    inputType: 'text',\n  };\n\n  state = {\n    editing: false,\n    value: this.props.value || '',\n  };\n\n  setInputElem = (elem: any) => {\n    this.inputElem = elem;\n  };\n\n  onEditClick = () => {\n    if (this.props.inputType === 'password') {\n      // Reset value for password field\n      this.setState({ editing: true, value: '' }, this.focusInput);\n    } else {\n      this.setState({ editing: true }, this.focusInput);\n    }\n  };\n\n  onCancelClick = () => {\n    this.setState({ editing: false, value: this.props.value || '' });\n  };\n\n  onInputChange = (event: React.ChangeEvent<HTMLInputElement>, status?: LegacyInputStatus) => {\n    if (status === LegacyInputStatus.Invalid) {\n      return;\n    }\n\n    this.setState({ value: event.target.value });\n  };\n\n  onInputBlur = (event: React.FocusEvent<HTMLInputElement>, status?: LegacyInputStatus) => {\n    if (status === LegacyInputStatus.Invalid) {\n      return;\n    }\n\n    this.setState({ value: event.target.value });\n  };\n\n  focusInput = () => {\n    if (this.inputElem && this.inputElem.focus) {\n      this.inputElem.focus();\n    }\n  };\n\n  onSave = () => {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.value);\n    }\n  };\n\n  render() {\n    const { label, locked, lockMessage, inputType } = this.props;\n    const { value } = this.state;\n    const labelClass = cx(\n      'width-16',\n      css`\n        font-weight: 500;\n      `\n    );\n\n    if (locked) {\n      return <LockedRow label={label} value={value} lockMessage={lockMessage} />;\n    }\n\n    const inputId = `${label}-input`;\n    return (\n      <tr>\n        <td className={labelClass}>\n          <label htmlFor={inputId}>{label}</label>\n        </td>\n        <td className=\"width-25\" colSpan={2}>\n          {this.state.editing ? (\n            <Input\n              id={inputId}\n              type={inputType}\n              defaultValue={value}\n              onBlur={this.onInputBlur}\n              onChange={this.onInputChange}\n              ref={this.setInputElem}\n              width={30}\n            />\n          ) : (\n            <span>{this.props.value}</span>\n          )}\n        </td>\n        <td>\n          <ConfirmButton\n            confirmText=\"Save\"\n            onClick={this.onEditClick}\n            onConfirm={this.onSave}\n            onCancel={this.onCancelClick}\n          >\n            Edit\n          </ConfirmButton>\n        </td>\n      </tr>\n    );\n  }\n}\n\ninterface LockedRowProps {\n  label: string;\n  value?: any;\n  lockMessage?: string;\n}\n\nexport const LockedRow: FC<LockedRowProps> = ({ label, value, lockMessage }) => {\n  const lockMessageClass = css`\n    font-style: italic;\n    margin-right: 0.6rem;\n  `;\n  const labelClass = cx(\n    'width-16',\n    css`\n      font-weight: 500;\n    `\n  );\n\n  return (\n    <tr>\n      <td className={labelClass}>{label}</td>\n      <td className=\"width-25\" colSpan={2}>\n        {value}\n      </td>\n      <td>\n        <span className={lockMessageClass}>{lockMessage}</span>\n      </td>\n    </tr>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}