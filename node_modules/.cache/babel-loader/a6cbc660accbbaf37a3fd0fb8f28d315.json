{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {};\nconst panelsSlice = createSlice({\n  name: 'panels',\n  initialState,\n  reducers: {\n    panelModelAndPluginReady: (state, action) => {\n      if (action.payload.cleanUpKey) {\n        cleanUpAngularComponent(state[action.payload.cleanUpKey]);\n        delete state[action.payload.cleanUpKey];\n      }\n\n      state[action.payload.key] = {\n        plugin: action.payload.plugin\n      };\n    },\n    changePanelKey: (state, action) => {\n      state[action.payload.newKey] = state[action.payload.oldKey];\n      delete state[action.payload.oldKey];\n    },\n    removePanel: (state, action) => {\n      delete state[action.payload.key];\n    },\n    removePanels: (state, action) => {\n      for (const key of action.payload.keys) {\n        delete state[key];\n      }\n    },\n    setPanelInstanceState: (state, action) => {\n      state[action.payload.key].instanceState = action.payload.value;\n    },\n    setPanelAngularComponent: (state, action) => {\n      const panelState = state[action.payload.key];\n      cleanUpAngularComponent(panelState);\n      panelState.angularComponent = action.payload.angularComponent;\n    }\n  }\n});\nexport function cleanUpAngularComponent(panelState) {\n  if (panelState !== null && panelState !== void 0 && panelState.angularComponent) {\n    panelState.angularComponent.destroy();\n  }\n}\nexport const {\n  panelModelAndPluginReady,\n  setPanelAngularComponent,\n  setPanelInstanceState,\n  changePanelKey,\n  removePanel,\n  removePanels\n} = panelsSlice.actions;\nexport const panelsReducer = panelsSlice.reducer;\nexport default {\n  panels: panelsReducer\n};","map":{"version":3,"names":["createSlice","initialState","panelsSlice","name","reducers","panelModelAndPluginReady","state","action","payload","cleanUpKey","cleanUpAngularComponent","key","plugin","changePanelKey","newKey","oldKey","removePanel","removePanels","keys","setPanelInstanceState","instanceState","value","setPanelAngularComponent","panelState","angularComponent","destroy","actions","panelsReducer","reducer","panels"],"sources":["/home/soula/grafana/public/app/features/panel/state/reducers.ts"],"sourcesContent":["import { createSlice, Draft, PayloadAction } from '@reduxjs/toolkit';\n\nimport { PanelPlugin } from '@grafana/data';\nimport { AngularComponent } from '@grafana/runtime';\n\nexport type RootPanelsState = Record<string, PanelState>;\n\nexport interface PanelState {\n  plugin?: PanelPlugin;\n  angularComponent?: AngularComponent;\n  instanceState?: any | null;\n}\n\nexport const initialState: RootPanelsState = {};\n\nconst panelsSlice = createSlice({\n  name: 'panels',\n  initialState,\n  reducers: {\n    panelModelAndPluginReady: (state, action: PayloadAction<PanelModelAndPluginReadyPayload>) => {\n      if (action.payload.cleanUpKey) {\n        cleanUpAngularComponent(state[action.payload.cleanUpKey]);\n        delete state[action.payload.cleanUpKey];\n      }\n\n      state[action.payload.key] = {\n        plugin: action.payload.plugin,\n      };\n    },\n    changePanelKey: (state, action: PayloadAction<{ oldKey: string; newKey: string }>) => {\n      state[action.payload.newKey] = state[action.payload.oldKey];\n      delete state[action.payload.oldKey];\n    },\n    removePanel: (state, action: PayloadAction<{ key: string }>) => {\n      delete state[action.payload.key];\n    },\n    removePanels: (state, action: PayloadAction<{ keys: string[] }>) => {\n      for (const key of action.payload.keys) {\n        delete state[key];\n      }\n    },\n    setPanelInstanceState: (state, action: PayloadAction<SetPanelInstanceStatePayload>) => {\n      state[action.payload.key].instanceState = action.payload.value;\n    },\n    setPanelAngularComponent: (state, action: PayloadAction<SetPanelAngularComponentPayload>) => {\n      const panelState = state[action.payload.key];\n      cleanUpAngularComponent(panelState);\n      panelState.angularComponent = action.payload.angularComponent;\n    },\n  },\n});\n\nexport function cleanUpAngularComponent(panelState?: Draft<PanelState>) {\n  if (panelState?.angularComponent) {\n    panelState.angularComponent.destroy();\n  }\n}\n\nexport interface PanelModelAndPluginReadyPayload {\n  key: string;\n  plugin: PanelPlugin;\n  /** Used to cleanup previous state when we change key (used when switching panel plugin) */\n  cleanUpKey?: string;\n}\n\nexport interface SetPanelAngularComponentPayload {\n  key: string;\n  angularComponent: AngularComponent;\n}\n\nexport interface SetPanelInstanceStatePayload {\n  key: string;\n  value: any;\n}\n\nexport const {\n  panelModelAndPluginReady,\n  setPanelAngularComponent,\n  setPanelInstanceState,\n  changePanelKey,\n  removePanel,\n  removePanels,\n} = panelsSlice.actions;\n\nexport const panelsReducer = panelsSlice.reducer;\n\nexport default {\n  panels: panelsReducer,\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAAkD,kBAAlD;AAaA,OAAO,MAAMC,YAA6B,GAAG,EAAtC;AAEP,MAAMC,WAAW,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,QADwB;EAE9BF,YAF8B;EAG9BG,QAAQ,EAAE;IACRC,wBAAwB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmE;MAC3F,IAAIA,MAAM,CAACC,OAAP,CAAeC,UAAnB,EAA+B;QAC7BC,uBAAuB,CAACJ,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeC,UAAhB,CAAN,CAAvB;QACA,OAAOH,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeC,UAAhB,CAAZ;MACD;;MAEDH,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeG,GAAhB,CAAL,GAA4B;QAC1BC,MAAM,EAAEL,MAAM,CAACC,OAAP,CAAeI;MADG,CAA5B;IAGD,CAVO;IAWRC,cAAc,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAsE;MACpFD,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeM,MAAhB,CAAL,GAA+BR,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeO,MAAhB,CAApC;MACA,OAAOT,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeO,MAAhB,CAAZ;IACD,CAdO;IAeRC,WAAW,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmD;MAC9D,OAAOD,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeG,GAAhB,CAAZ;IACD,CAjBO;IAkBRM,YAAY,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAsD;MAClE,KAAK,MAAMI,GAAX,IAAkBJ,MAAM,CAACC,OAAP,CAAeU,IAAjC,EAAuC;QACrC,OAAOZ,KAAK,CAACK,GAAD,CAAZ;MACD;IACF,CAtBO;IAuBRQ,qBAAqB,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAgE;MACrFD,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeG,GAAhB,CAAL,CAA0BS,aAA1B,GAA0Cb,MAAM,CAACC,OAAP,CAAea,KAAzD;IACD,CAzBO;IA0BRC,wBAAwB,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAmE;MAC3F,MAAMgB,UAAU,GAAGjB,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeG,GAAhB,CAAxB;MACAD,uBAAuB,CAACa,UAAD,CAAvB;MACAA,UAAU,CAACC,gBAAX,GAA8BjB,MAAM,CAACC,OAAP,CAAegB,gBAA7C;IACD;EA9BO;AAHoB,CAAD,CAA/B;AAqCA,OAAO,SAASd,uBAAT,CAAiCa,UAAjC,EAAiE;EACtE,IAAIA,UAAJ,aAAIA,UAAJ,eAAIA,UAAU,CAAEC,gBAAhB,EAAkC;IAChCD,UAAU,CAACC,gBAAX,CAA4BC,OAA5B;EACD;AACF;AAmBD,OAAO,MAAM;EACXpB,wBADW;EAEXiB,wBAFW;EAGXH,qBAHW;EAIXN,cAJW;EAKXG,WALW;EAMXC;AANW,IAOTf,WAAW,CAACwB,OAPT;AASP,OAAO,MAAMC,aAAa,GAAGzB,WAAW,CAAC0B,OAAlC;AAEP,eAAe;EACbC,MAAM,EAAEF;AADK,CAAf"},"metadata":{},"sourceType":"module"}