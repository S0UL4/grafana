{"ast":null,"code":"const _excluded = [\"ref\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Input, InputControl, Select, TextArea } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const OptionElement = ({\n  control,\n  option,\n  register,\n  invalid\n}) => {\n  const modelValue = option.secure ? `secureSettings.${option.propertyName}` : `settings.${option.propertyName}`;\n\n  switch (option.element) {\n    case 'input':\n      return /*#__PURE__*/_jsx(Input, Object.assign({}, register(`${modelValue}`, {\n        required: option.required ? 'Required' : false,\n        validate: v => option.validationRule !== '' ? validateOption(v, option.validationRule) : true\n      }), {\n        invalid: invalid,\n        type: option.inputType,\n        placeholder: option.placeholder\n      }));\n\n    case 'select':\n      return /*#__PURE__*/_jsx(InputControl, {\n        control: control,\n        name: `${modelValue}`,\n        render: _ref => {\n          var _option$selectOptions;\n\n          let {} = _ref,\n              field = _objectWithoutPropertiesLoose(_ref.field, _excluded);\n\n          return /*#__PURE__*/_jsx(Select, Object.assign({}, field, {\n            options: (_option$selectOptions = option.selectOptions) !== null && _option$selectOptions !== void 0 ? _option$selectOptions : undefined,\n            invalid: invalid\n          }));\n        }\n      });\n\n    case 'textarea':\n      return /*#__PURE__*/_jsx(TextArea, Object.assign({\n        invalid: invalid\n      }, register(`${modelValue}`, {\n        required: option.required ? 'Required' : false,\n        validate: v => option.validationRule !== '' ? validateOption(v, option.validationRule) : true\n      })));\n\n    default:\n      console.error('Element not supported', option.element);\n      return null;\n  }\n};\n\nconst validateOption = (value, validationRule) => {\n  return RegExp(validationRule).test(value) ? true : 'Invalid format';\n};","map":{"version":3,"names":["React","Input","InputControl","Select","TextArea","OptionElement","control","option","register","invalid","modelValue","secure","propertyName","element","required","validate","v","validationRule","validateOption","inputType","placeholder","field","selectOptions","undefined","console","error","value","RegExp","test"],"sources":["/home/soula/grafana/public/app/features/alerting/components/OptionElement.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { FormAPI, Input, InputControl, Select, TextArea } from '@grafana/ui';\n\nimport { NotificationChannelOption } from '../../../types';\n\ninterface Props extends Pick<FormAPI<any>, 'register' | 'control'> {\n  option: NotificationChannelOption;\n  invalid?: boolean;\n}\n\nexport const OptionElement: FC<Props> = ({ control, option, register, invalid }) => {\n  const modelValue = option.secure ? `secureSettings.${option.propertyName}` : `settings.${option.propertyName}`;\n  switch (option.element) {\n    case 'input':\n      return (\n        <Input\n          {...register(`${modelValue}`, {\n            required: option.required ? 'Required' : false,\n            validate: (v) => (option.validationRule !== '' ? validateOption(v, option.validationRule) : true),\n          })}\n          invalid={invalid}\n          type={option.inputType}\n          placeholder={option.placeholder}\n        />\n      );\n\n    case 'select':\n      return (\n        <InputControl\n          control={control}\n          name={`${modelValue}`}\n          render={({ field: { ref, ...field } }) => (\n            <Select {...field} options={option.selectOptions ?? undefined} invalid={invalid} />\n          )}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <TextArea\n          invalid={invalid}\n          {...register(`${modelValue}`, {\n            required: option.required ? 'Required' : false,\n            validate: (v) => (option.validationRule !== '' ? validateOption(v, option.validationRule) : true),\n          })}\n        />\n      );\n\n    default:\n      console.error('Element not supported', option.element);\n      return null;\n  }\n};\n\nconst validateOption = (value: string, validationRule: string) => {\n  return RegExp(validationRule).test(value) ? true : 'Invalid format';\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAAkBC,KAAlB,EAAyBC,YAAzB,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,aAA/D;;AASA,OAAO,MAAMC,aAAwB,GAAG,CAAC;EAAEC,OAAF;EAAWC,MAAX;EAAmBC,QAAnB;EAA6BC;AAA7B,CAAD,KAA4C;EAClF,MAAMC,UAAU,GAAGH,MAAM,CAACI,MAAP,GAAiB,kBAAiBJ,MAAM,CAACK,YAAa,EAAtD,GAA2D,YAAWL,MAAM,CAACK,YAAa,EAA7G;;EACA,QAAQL,MAAM,CAACM,OAAf;IACE,KAAK,OAAL;MACE,oBACE,KAAC,KAAD,oBACML,QAAQ,CAAE,GAAEE,UAAW,EAAf,EAAkB;QAC5BI,QAAQ,EAAEP,MAAM,CAACO,QAAP,GAAkB,UAAlB,GAA+B,KADb;QAE5BC,QAAQ,EAAGC,CAAD,IAAQT,MAAM,CAACU,cAAP,KAA0B,EAA1B,GAA+BC,cAAc,CAACF,CAAD,EAAIT,MAAM,CAACU,cAAX,CAA7C,GAA0E;MAFhE,CAAlB,CADd;QAKE,OAAO,EAAER,OALX;QAME,IAAI,EAAEF,MAAM,CAACY,SANf;QAOE,WAAW,EAAEZ,MAAM,CAACa;MAPtB,GADF;;IAYF,KAAK,QAAL;MACE,oBACE,KAAC,YAAD;QACE,OAAO,EAAEd,OADX;QAEE,IAAI,EAAG,GAAEI,UAAW,EAFtB;QAGE,MAAM,EAAE;UAAA;;UAAA,IAAC,EAAD;UAAA,IAAoBW,KAApB,sCAAGA,KAAH;;UAAA,oBACN,KAAC,MAAD,oBAAYA,KAAZ;YAAmB,OAAO,2BAAEd,MAAM,CAACe,aAAT,yEAA0BC,SAApD;YAA+D,OAAO,EAAEd;UAAxE,GADM;QAAA;MAHV,EADF;;IAUF,KAAK,UAAL;MACE,oBACE,KAAC,QAAD;QACE,OAAO,EAAEA;MADX,GAEMD,QAAQ,CAAE,GAAEE,UAAW,EAAf,EAAkB;QAC5BI,QAAQ,EAAEP,MAAM,CAACO,QAAP,GAAkB,UAAlB,GAA+B,KADb;QAE5BC,QAAQ,EAAGC,CAAD,IAAQT,MAAM,CAACU,cAAP,KAA0B,EAA1B,GAA+BC,cAAc,CAACF,CAAD,EAAIT,MAAM,CAACU,cAAX,CAA7C,GAA0E;MAFhE,CAAlB,CAFd,EADF;;IAUF;MACEO,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuClB,MAAM,CAACM,OAA9C;MACA,OAAO,IAAP;EAtCJ;AAwCD,CA1CM;;AA4CP,MAAMK,cAAc,GAAG,CAACQ,KAAD,EAAgBT,cAAhB,KAA2C;EAChE,OAAOU,MAAM,CAACV,cAAD,CAAN,CAAuBW,IAAvB,CAA4BF,KAA5B,IAAqC,IAArC,GAA4C,gBAAnD;AACD,CAFD"},"metadata":{},"sourceType":"module"}