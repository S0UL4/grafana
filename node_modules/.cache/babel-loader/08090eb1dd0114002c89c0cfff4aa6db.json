{"ast":null,"code":"import React, { useState } from 'react';\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\nimport { DataHoverRows } from './DataHoverRows';\nimport { DataHoverTabs } from './DataHoverTabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ComplexDataHoverView = ({\n  layers,\n  onClose,\n  isOpen\n}) => {\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n\n  if (!layers) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [isOpen && /*#__PURE__*/_jsx(CloseButton, {\n      style: {\n        zIndex: 1\n      },\n      onClick: onClose\n    }), /*#__PURE__*/_jsx(DataHoverTabs, {\n      layers: layers,\n      setActiveTabIndex: setActiveTabIndex,\n      activeTabIndex: activeTabIndex\n    }), /*#__PURE__*/_jsx(DataHoverRows, {\n      layers: layers,\n      activeTabIndex: activeTabIndex\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","CloseButton","DataHoverRows","DataHoverTabs","ComplexDataHoverView","layers","onClose","isOpen","activeTabIndex","setActiveTabIndex","zIndex"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/components/ComplexDataHoverView.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\n\nimport { GeomapLayerHover } from '../event';\n\nimport { DataHoverRows } from './DataHoverRows';\nimport { DataHoverTabs } from './DataHoverTabs';\n\nexport interface Props {\n  layers?: GeomapLayerHover[];\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const ComplexDataHoverView = ({ layers, onClose, isOpen }: Props) => {\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\n\n  if (!layers) {\n    return null;\n  }\n\n  return (\n    <>\n      {isOpen && <CloseButton style={{ zIndex: 1 }} onClick={onClose} />}\n      <DataHoverTabs layers={layers} setActiveTabIndex={setActiveTabIndex} activeTabIndex={activeTabIndex} />\n      <DataHoverRows layers={layers} activeTabIndex={activeTabIndex} />\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,6CAA5B;AAIA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;;AAQA,OAAO,MAAMC,oBAAoB,GAAG,CAAC;EAAEC,MAAF;EAAUC,OAAV;EAAmBC;AAAnB,CAAD,KAAwC;EAC1E,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAS,CAAT,CAApD;;EAEA,IAAI,CAACK,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,oBACE;IAAA,WACGE,MAAM,iBAAI,KAAC,WAAD;MAAa,KAAK,EAAE;QAAEG,MAAM,EAAE;MAAV,CAApB;MAAmC,OAAO,EAAEJ;IAA5C,EADb,eAEE,KAAC,aAAD;MAAe,MAAM,EAAED,MAAvB;MAA+B,iBAAiB,EAAEI,iBAAlD;MAAqE,cAAc,EAAED;IAArF,EAFF,eAGE,KAAC,aAAD;MAAe,MAAM,EAAEH,MAAvB;MAA+B,cAAc,EAAEG;IAA/C,EAHF;EAAA,EADF;AAOD,CAdM"},"metadata":{},"sourceType":"module"}