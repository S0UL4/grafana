{"ast":null,"code":"var _span, _div, _LoginDivider;\n\nimport { css, cx } from '@emotion/css';\nimport { pickBy } from 'lodash';\nimport React from 'react';\nimport { DEFAULT_SAML_NAME } from '@grafana/data';\nimport { Icon, LinkButton, useStyles, useTheme2, VerticalGroup } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst loginServices = () => {\n  var _config$oauth, _config$oauth$okta, _config$oauth2, _config$oauth2$okta, _config$oauth3, _config$oauth3$generi, _config$oauth4, _config$oauth4$generi;\n\n  const oauthEnabled = !!config.oauth;\n  return {\n    saml: {\n      bgColor: '#464646',\n      enabled: config.samlEnabled,\n      name: config.samlName || DEFAULT_SAML_NAME,\n      icon: 'key-skeleton-alt'\n    },\n    google: {\n      bgColor: '#e84d3c',\n      enabled: oauthEnabled && Boolean(config.oauth.google),\n      name: 'Google',\n      icon: 'google'\n    },\n    azuread: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.azuread),\n      name: 'Microsoft',\n      icon: 'microsoft'\n    },\n    github: {\n      bgColor: '#464646',\n      enabled: oauthEnabled && Boolean(config.oauth.github),\n      name: 'GitHub',\n      icon: 'github'\n    },\n    gitlab: {\n      bgColor: '#fc6d26',\n      enabled: oauthEnabled && Boolean(config.oauth.gitlab),\n      name: 'GitLab',\n      icon: 'gitlab'\n    },\n    grafanacom: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.grafana_com),\n      name: 'Grafana.com',\n      icon: 'grafana',\n      hrefName: 'grafana_com'\n    },\n    okta: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.okta),\n      name: ((_config$oauth = config.oauth) === null || _config$oauth === void 0 ? void 0 : (_config$oauth$okta = _config$oauth.okta) === null || _config$oauth$okta === void 0 ? void 0 : _config$oauth$okta.name) || 'Okta',\n      icon: ((_config$oauth2 = config.oauth) === null || _config$oauth2 === void 0 ? void 0 : (_config$oauth2$okta = _config$oauth2.okta) === null || _config$oauth2$okta === void 0 ? void 0 : _config$oauth2$okta.icon) || 'okta'\n    },\n    oauth: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.generic_oauth),\n      name: ((_config$oauth3 = config.oauth) === null || _config$oauth3 === void 0 ? void 0 : (_config$oauth3$generi = _config$oauth3.generic_oauth) === null || _config$oauth3$generi === void 0 ? void 0 : _config$oauth3$generi.name) || 'OAuth',\n      icon: ((_config$oauth4 = config.oauth) === null || _config$oauth4 === void 0 ? void 0 : (_config$oauth4$generi = _config$oauth4.generic_oauth) === null || _config$oauth4$generi === void 0 ? void 0 : _config$oauth4$generi.icon) || 'signin',\n      hrefName: 'generic_oauth'\n    }\n  };\n};\n\nconst getServiceStyles = theme => {\n  return {\n    button: css`\n      color: #d8d9da;\n      position: relative;\n    `,\n    buttonIcon: css`\n      position: absolute;\n      left: ${theme.spacing.sm};\n      top: 50%;\n      transform: translateY(-50%);\n    `,\n    divider: {\n      base: css`\n        color: ${theme.colors.text};\n        display: flex;\n        margin-bottom: ${theme.spacing.sm};\n        justify-content: space-between;\n        text-align: center;\n        width: 100%;\n      `,\n      line: css`\n        width: 100px;\n        height: 10px;\n        border-bottom: 1px solid ${theme.colors.text};\n      `\n    }\n  };\n};\n\nconst LoginDivider = () => {\n  const styles = useStyles(getServiceStyles);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.divider.base,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.divider.line\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: !config.disableLoginForm && (_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n            children: \"or\"\n          })))\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.divider.line\n        })\n      })]\n    }), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"clearfix\"\n    }))]\n  });\n};\n\nfunction getButtonStyleFor(service, styles, theme) {\n  return cx(styles.button, css`\n      background-color: ${service.bgColor};\n      color: ${theme.colors.getContrastText(service.bgColor)};\n\n      &:hover {\n        background-color: ${theme.colors.emphasize(service.bgColor, 0.15)};\n        box-shadow: ${theme.shadows.z1};\n      }\n    `);\n}\n\nexport const LoginServiceButtons = () => {\n  const enabledServices = pickBy(loginServices(), service => service.enabled);\n  const hasServices = Object.keys(enabledServices).length > 0;\n  const theme = useTheme2();\n  const styles = useStyles(getServiceStyles);\n\n  if (hasServices) {\n    return /*#__PURE__*/_jsxs(VerticalGroup, {\n      children: [_LoginDivider || (_LoginDivider = /*#__PURE__*/_jsx(LoginDivider, {})), Object.entries(enabledServices).map(([key, service]) => /*#__PURE__*/_jsxs(LinkButton, {\n        className: getButtonStyleFor(service, styles, theme),\n        href: `login/${service.hrefName ? service.hrefName : key}`,\n        target: \"_self\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          className: styles.buttonIcon,\n          name: service.icon\n        }), \"Sign in with \", service.name]\n      }, key))]\n    });\n  }\n\n  return null;\n};","map":{"version":3,"names":["css","cx","pickBy","React","DEFAULT_SAML_NAME","Icon","LinkButton","useStyles","useTheme2","VerticalGroup","config","loginServices","oauthEnabled","oauth","saml","bgColor","enabled","samlEnabled","name","samlName","icon","google","Boolean","azuread","github","gitlab","grafanacom","grafana_com","hrefName","okta","generic_oauth","getServiceStyles","theme","button","buttonIcon","spacing","sm","divider","base","colors","text","line","LoginDivider","styles","disableLoginForm","getButtonStyleFor","service","getContrastText","emphasize","shadows","z1","LoginServiceButtons","enabledServices","hasServices","Object","keys","length","entries","map","key"],"sources":["/home/soula/grafana/public/app/core/components/Login/LoginServiceButtons.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { pickBy } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme, GrafanaTheme2, DEFAULT_SAML_NAME } from '@grafana/data';\nimport { Icon, IconName, LinkButton, useStyles, useTheme2, VerticalGroup } from '@grafana/ui';\nimport config from 'app/core/config';\n\nexport interface LoginService {\n  bgColor: string;\n  enabled: boolean;\n  name: string;\n  hrefName?: string;\n  icon: IconName;\n}\n\nexport interface LoginServices {\n  [key: string]: LoginService;\n}\n\nconst loginServices: () => LoginServices = () => {\n  const oauthEnabled = !!config.oauth;\n\n  return {\n    saml: {\n      bgColor: '#464646',\n      enabled: config.samlEnabled,\n      name: config.samlName || DEFAULT_SAML_NAME,\n      icon: 'key-skeleton-alt',\n    },\n    google: {\n      bgColor: '#e84d3c',\n      enabled: oauthEnabled && Boolean(config.oauth.google),\n      name: 'Google',\n      icon: 'google',\n    },\n    azuread: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.azuread),\n      name: 'Microsoft',\n      icon: 'microsoft',\n    },\n    github: {\n      bgColor: '#464646',\n      enabled: oauthEnabled && Boolean(config.oauth.github),\n      name: 'GitHub',\n      icon: 'github',\n    },\n    gitlab: {\n      bgColor: '#fc6d26',\n      enabled: oauthEnabled && Boolean(config.oauth.gitlab),\n      name: 'GitLab',\n      icon: 'gitlab',\n    },\n    grafanacom: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.grafana_com),\n      name: 'Grafana.com',\n      icon: 'grafana',\n      hrefName: 'grafana_com',\n    },\n    okta: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.okta),\n      name: config.oauth?.okta?.name || 'Okta',\n      icon: (config.oauth?.okta?.icon as IconName) || 'okta',\n    },\n    oauth: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.generic_oauth),\n      name: config.oauth?.generic_oauth?.name || 'OAuth',\n      icon: (config.oauth?.generic_oauth?.icon as IconName) || 'signin',\n      hrefName: 'generic_oauth',\n    },\n  };\n};\n\nconst getServiceStyles = (theme: GrafanaTheme) => {\n  return {\n    button: css`\n      color: #d8d9da;\n      position: relative;\n    `,\n    buttonIcon: css`\n      position: absolute;\n      left: ${theme.spacing.sm};\n      top: 50%;\n      transform: translateY(-50%);\n    `,\n    divider: {\n      base: css`\n        color: ${theme.colors.text};\n        display: flex;\n        margin-bottom: ${theme.spacing.sm};\n        justify-content: space-between;\n        text-align: center;\n        width: 100%;\n      `,\n      line: css`\n        width: 100px;\n        height: 10px;\n        border-bottom: 1px solid ${theme.colors.text};\n      `,\n    },\n  };\n};\n\nconst LoginDivider = () => {\n  const styles = useStyles(getServiceStyles);\n  return (\n    <>\n      <div className={styles.divider.base}>\n        <div>\n          <div className={styles.divider.line} />\n        </div>\n        <div>\n          <span>{!config.disableLoginForm && <span>or</span>}</span>\n        </div>\n        <div>\n          <div className={styles.divider.line} />\n        </div>\n      </div>\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\nfunction getButtonStyleFor(service: LoginService, styles: ReturnType<typeof getServiceStyles>, theme: GrafanaTheme2) {\n  return cx(\n    styles.button,\n    css`\n      background-color: ${service.bgColor};\n      color: ${theme.colors.getContrastText(service.bgColor)};\n\n      &:hover {\n        background-color: ${theme.colors.emphasize(service.bgColor, 0.15)};\n        box-shadow: ${theme.shadows.z1};\n      }\n    `\n  );\n}\n\nexport const LoginServiceButtons = () => {\n  const enabledServices = pickBy(loginServices(), (service) => service.enabled);\n  const hasServices = Object.keys(enabledServices).length > 0;\n  const theme = useTheme2();\n  const styles = useStyles(getServiceStyles);\n\n  if (hasServices) {\n    return (\n      <VerticalGroup>\n        <LoginDivider />\n        {Object.entries(enabledServices).map(([key, service]) => (\n          <LinkButton\n            key={key}\n            className={getButtonStyleFor(service, styles, theme)}\n            href={`login/${service.hrefName ? service.hrefName : key}`}\n            target=\"_self\"\n            fullWidth\n          >\n            <Icon className={styles.buttonIcon} name={service.icon} />\n            Sign in with {service.name}\n          </LinkButton>\n        ))}\n      </VerticalGroup>\n    );\n  }\n\n  return null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}