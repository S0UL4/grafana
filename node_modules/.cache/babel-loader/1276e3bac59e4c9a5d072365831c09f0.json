{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { selectors } from './reducers';\nexport const {\n  selectAll,\n  selectById,\n  selectTotal\n} = selectors;\n\nconst selectQuery = (_, query) => query;\n\nexport const selectInvitesMatchingQuery = createSelector([selectAll, selectQuery], (invites, searchQuery) => {\n  const regex = new RegExp(searchQuery, 'i');\n  const matches = invites.filter(invite => regex.test(invite.name) || regex.test(invite.email));\n  return matches;\n});","map":{"version":3,"names":["createSelector","selectors","selectAll","selectById","selectTotal","selectQuery","_","query","selectInvitesMatchingQuery","invites","searchQuery","regex","RegExp","matches","filter","invite","test","name","email"],"sources":["/home/soula/grafana/public/app/features/invites/state/selectors.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectors } from './reducers';\n\nexport const { selectAll, selectById, selectTotal } = selectors;\n\nconst selectQuery = (_: any, query: string) => query;\nexport const selectInvitesMatchingQuery = createSelector([selectAll, selectQuery], (invites, searchQuery) => {\n  const regex = new RegExp(searchQuery, 'i');\n  const matches = invites.filter((invite) => regex.test(invite.name) || regex.test(invite.email));\n  return matches;\n});\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,MAAM;EAAEC,SAAF;EAAaC,UAAb;EAAyBC;AAAzB,IAAyCH,SAA/C;;AAEP,MAAMI,WAAW,GAAG,CAACC,CAAD,EAASC,KAAT,KAA2BA,KAA/C;;AACA,OAAO,MAAMC,0BAA0B,GAAGR,cAAc,CAAC,CAACE,SAAD,EAAYG,WAAZ,CAAD,EAA2B,CAACI,OAAD,EAAUC,WAAV,KAA0B;EAC3G,MAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,WAAX,EAAwB,GAAxB,CAAd;EACA,MAAMG,OAAO,GAAGJ,OAAO,CAACK,MAAR,CAAgBC,MAAD,IAAYJ,KAAK,CAACK,IAAN,CAAWD,MAAM,CAACE,IAAlB,KAA2BN,KAAK,CAACK,IAAN,CAAWD,MAAM,CAACG,KAAlB,CAAtD,CAAhB;EACA,OAAOL,OAAP;AACD,CAJuD,CAAjD"},"metadata":{},"sourceType":"module"}