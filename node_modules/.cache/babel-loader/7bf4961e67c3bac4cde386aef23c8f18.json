{"ast":null,"code":"export const registerLanguage = (monaco, language, completionItemProvider) => {\n  const {\n    id,\n    loader\n  } = language;\n  const languages = monaco.languages.getLanguages();\n\n  if (languages.find(l => l.id === id)) {\n    return;\n  }\n\n  monaco.languages.register({\n    id\n  });\n  loader().then(monarch => {\n    monaco.languages.setMonarchTokensProvider(id, monarch.language);\n    monaco.languages.setLanguageConfiguration(id, monarch.conf);\n    monaco.languages.registerCompletionItemProvider(id, completionItemProvider.getCompletionProvider(monaco, language));\n  });\n};","map":{"version":3,"names":["registerLanguage","monaco","language","completionItemProvider","id","loader","languages","getLanguages","find","l","register","then","monarch","setMonarchTokensProvider","setLanguageConfiguration","conf","registerCompletionItemProvider","getCompletionProvider"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/monarch/register.ts"],"sourcesContent":["import type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\nimport { Monaco } from '@grafana/ui';\n\nimport { Completeable } from './types';\n\nexport type LanguageDefinition = {\n  id: string;\n  extensions: string[];\n  aliases: string[];\n  mimetypes: string[];\n  loader: () => Promise<{\n    language: monacoType.languages.IMonarchLanguage;\n    conf: monacoType.languages.LanguageConfiguration;\n  }>;\n};\n\nexport const registerLanguage = (\n  monaco: Monaco,\n  language: LanguageDefinition,\n  completionItemProvider: Completeable\n) => {\n  const { id, loader } = language;\n\n  const languages = monaco.languages.getLanguages();\n  if (languages.find((l) => l.id === id)) {\n    return;\n  }\n\n  monaco.languages.register({ id });\n  loader().then((monarch) => {\n    monaco.languages.setMonarchTokensProvider(id, monarch.language);\n    monaco.languages.setLanguageConfiguration(id, monarch.conf);\n    monaco.languages.registerCompletionItemProvider(id, completionItemProvider.getCompletionProvider(monaco, language));\n  });\n};\n"],"mappings":"AAiBA,OAAO,MAAMA,gBAAgB,GAAG,CAC9BC,MAD8B,EAE9BC,QAF8B,EAG9BC,sBAH8B,KAI3B;EACH,MAAM;IAAEC,EAAF;IAAMC;EAAN,IAAiBH,QAAvB;EAEA,MAAMI,SAAS,GAAGL,MAAM,CAACK,SAAP,CAAiBC,YAAjB,EAAlB;;EACA,IAAID,SAAS,CAACE,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACL,EAAF,KAASA,EAA/B,CAAJ,EAAwC;IACtC;EACD;;EAEDH,MAAM,CAACK,SAAP,CAAiBI,QAAjB,CAA0B;IAAEN;EAAF,CAA1B;EACAC,MAAM,GAAGM,IAAT,CAAeC,OAAD,IAAa;IACzBX,MAAM,CAACK,SAAP,CAAiBO,wBAAjB,CAA0CT,EAA1C,EAA8CQ,OAAO,CAACV,QAAtD;IACAD,MAAM,CAACK,SAAP,CAAiBQ,wBAAjB,CAA0CV,EAA1C,EAA8CQ,OAAO,CAACG,IAAtD;IACAd,MAAM,CAACK,SAAP,CAAiBU,8BAAjB,CAAgDZ,EAAhD,EAAoDD,sBAAsB,CAACc,qBAAvB,CAA6ChB,MAA7C,EAAqDC,QAArD,CAApD;EACD,CAJD;AAKD,CAlBM"},"metadata":{},"sourceType":"module"}