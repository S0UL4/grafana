{"ast":null,"code":"// Libraries\nimport { css } from '@emotion/css';\nimport React, { memo } from 'react'; // Types\n\nimport { InlineFormLabel } from '@grafana/ui';\nimport CloudWatchLink from './CloudWatchLink';\nimport { CloudWatchLogsQueryField } from './LogsQueryField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst labelClass = css`\n  margin-left: 3px;\n  flex-grow: 0;\n`;\nexport const CloudWatchLogsQueryEditor = /*#__PURE__*/memo(function CloudWatchLogsQueryEditor(props) {\n  var _data$request, _data$request$range;\n\n  const {\n    query,\n    data,\n    datasource,\n    onRunQuery,\n    onChange,\n    exploreId\n  } = props;\n  let absolute;\n\n  if (data !== null && data !== void 0 && (_data$request = data.request) !== null && _data$request !== void 0 && (_data$request$range = _data$request.range) !== null && _data$request$range !== void 0 && _data$request$range.from) {\n    const {\n      range\n    } = data.request;\n    absolute = {\n      from: range.from.valueOf(),\n      to: range.to.valueOf()\n    };\n  } else {\n    absolute = {\n      from: Date.now() - 10000,\n      to: Date.now()\n    };\n  }\n\n  return /*#__PURE__*/_jsx(CloudWatchLogsQueryField, {\n    exploreId: exploreId,\n    datasource: datasource,\n    query: query,\n    onChange: onChange,\n    onRunQuery: onRunQuery,\n    history: [],\n    data: data,\n    absoluteRange: absolute,\n    ExtraFieldElement: /*#__PURE__*/_jsx(InlineFormLabel, {\n      className: `gf-form-label--btn ${labelClass}`,\n      width: \"auto\",\n      tooltip: \"Link to Graph in AWS\",\n      children: /*#__PURE__*/_jsx(CloudWatchLink, {\n        query: query,\n        panelData: data,\n        datasource: datasource\n      })\n    })\n  });\n});\nexport default CloudWatchLogsQueryEditor;","map":{"version":3,"names":["css","React","memo","InlineFormLabel","CloudWatchLink","CloudWatchLogsQueryField","labelClass","CloudWatchLogsQueryEditor","props","query","data","datasource","onRunQuery","onChange","exploreId","absolute","request","range","from","valueOf","to","Date","now"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/components/LogsQueryEditor.tsx"],"sourcesContent":["// Libraries\nimport { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\n// Types\nimport { AbsoluteTimeRange, QueryEditorProps } from '@grafana/data';\nimport { InlineFormLabel } from '@grafana/ui';\n\nimport { CloudWatchDatasource } from '../datasource';\nimport { CloudWatchJsonData, CloudWatchLogsQuery, CloudWatchQuery } from '../types';\n\nimport CloudWatchLink from './CloudWatchLink';\nimport { CloudWatchLogsQueryField } from './LogsQueryField';\n\ntype Props = QueryEditorProps<CloudWatchDatasource, CloudWatchQuery, CloudWatchJsonData> & {\n  query: CloudWatchLogsQuery;\n};\n\nconst labelClass = css`\n  margin-left: 3px;\n  flex-grow: 0;\n`;\n\nexport const CloudWatchLogsQueryEditor = memo(function CloudWatchLogsQueryEditor(props: Props) {\n  const { query, data, datasource, onRunQuery, onChange, exploreId } = props;\n\n  let absolute: AbsoluteTimeRange;\n  if (data?.request?.range?.from) {\n    const { range } = data.request;\n    absolute = {\n      from: range.from.valueOf(),\n      to: range.to.valueOf(),\n    };\n  } else {\n    absolute = {\n      from: Date.now() - 10000,\n      to: Date.now(),\n    };\n  }\n\n  return (\n    <CloudWatchLogsQueryField\n      exploreId={exploreId}\n      datasource={datasource}\n      query={query}\n      onChange={onChange}\n      onRunQuery={onRunQuery}\n      history={[]}\n      data={data}\n      absoluteRange={absolute}\n      ExtraFieldElement={\n        <InlineFormLabel className={`gf-form-label--btn ${labelClass}`} width=\"auto\" tooltip=\"Link to Graph in AWS\">\n          <CloudWatchLink query={query as CloudWatchLogsQuery} panelData={data} datasource={datasource} />\n        </InlineFormLabel>\n      }\n    />\n  );\n});\n\nexport default CloudWatchLogsQueryEditor;\n"],"mappings":"AAAA;AACA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B,C,CAEA;;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,kBAAzC;;AAMA,MAAMC,UAAU,GAAGN,GAAI;AACvB;AACA;AACA,CAHA;AAKA,OAAO,MAAMO,yBAAyB,gBAAGL,IAAI,CAAC,SAASK,yBAAT,CAAmCC,KAAnC,EAAiD;EAAA;;EAC7F,MAAM;IAAEC,KAAF;IAASC,IAAT;IAAeC,UAAf;IAA2BC,UAA3B;IAAuCC,QAAvC;IAAiDC;EAAjD,IAA+DN,KAArE;EAEA,IAAIO,QAAJ;;EACA,IAAIL,IAAJ,aAAIA,IAAJ,gCAAIA,IAAI,CAAEM,OAAV,iEAAI,cAAeC,KAAnB,gDAAI,oBAAsBC,IAA1B,EAAgC;IAC9B,MAAM;MAAED;IAAF,IAAYP,IAAI,CAACM,OAAvB;IACAD,QAAQ,GAAG;MACTG,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC,OAAX,EADG;MAETC,EAAE,EAAEH,KAAK,CAACG,EAAN,CAASD,OAAT;IAFK,CAAX;EAID,CAND,MAMO;IACLJ,QAAQ,GAAG;MACTG,IAAI,EAAEG,IAAI,CAACC,GAAL,KAAa,KADV;MAETF,EAAE,EAAEC,IAAI,CAACC,GAAL;IAFK,CAAX;EAID;;EAED,oBACE,KAAC,wBAAD;IACE,SAAS,EAAER,SADb;IAEE,UAAU,EAAEH,UAFd;IAGE,KAAK,EAAEF,KAHT;IAIE,QAAQ,EAAEI,QAJZ;IAKE,UAAU,EAAED,UALd;IAME,OAAO,EAAE,EANX;IAOE,IAAI,EAAEF,IAPR;IAQE,aAAa,EAAEK,QARjB;IASE,iBAAiB,eACf,KAAC,eAAD;MAAiB,SAAS,EAAG,sBAAqBT,UAAW,EAA7D;MAAgE,KAAK,EAAC,MAAtE;MAA6E,OAAO,EAAC,sBAArF;MAAA,uBACE,KAAC,cAAD;QAAgB,KAAK,EAAEG,KAAvB;QAAqD,SAAS,EAAEC,IAAhE;QAAsE,UAAU,EAAEC;MAAlF;IADF;EAVJ,EADF;AAiBD,CAlC4C,CAAtC;AAoCP,eAAeJ,yBAAf"},"metadata":{},"sourceType":"module"}