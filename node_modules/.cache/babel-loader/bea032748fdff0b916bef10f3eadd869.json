{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { VariableRefresh } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst REFRESH_OPTIONS = [{\n  label: 'On dashboard load',\n  value: VariableRefresh.onDashboardLoad\n}, {\n  label: 'On time range change',\n  value: VariableRefresh.onTimeRangeChanged\n}];\nexport function QueryVariableRefreshSelect({\n  onChange,\n  refresh\n}) {\n  const value = useMemo(() => {\n    var _REFRESH_OPTIONS$find;\n\n    return (_REFRESH_OPTIONS$find = REFRESH_OPTIONS.find(o => o.value === refresh)) !== null && _REFRESH_OPTIONS$find !== void 0 ? _REFRESH_OPTIONS$find : REFRESH_OPTIONS[0];\n  }, [refresh]);\n  return /*#__PURE__*/_jsx(VariableSelectField, {\n    name: \"Refresh\",\n    value: value,\n    options: REFRESH_OPTIONS,\n    onChange: onChange,\n    labelWidth: 10,\n    testId: selectors.pages.Dashboard.Settings.Variables.Edit.QueryVariable.queryOptionsRefreshSelectV2,\n    tooltip: \"When to update the values of this variable.\"\n  });\n}","map":{"version":3,"names":["React","useMemo","selectors","VariableSelectField","VariableRefresh","REFRESH_OPTIONS","label","value","onDashboardLoad","onTimeRangeChanged","QueryVariableRefreshSelect","onChange","refresh","find","o","pages","Dashboard","Settings","Variables","Edit","QueryVariable","queryOptionsRefreshSelectV2"],"sources":["/home/soula/grafana/public/app/features/variables/query/QueryVariableRefreshSelect.tsx"],"sourcesContent":["import React, { PropsWithChildren, useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { VariableRefresh } from '../types';\n\ninterface Props {\n  onChange: (option: SelectableValue<VariableRefresh>) => void;\n  refresh: VariableRefresh;\n}\n\nconst REFRESH_OPTIONS = [\n  { label: 'On dashboard load', value: VariableRefresh.onDashboardLoad },\n  { label: 'On time range change', value: VariableRefresh.onTimeRangeChanged },\n];\n\nexport function QueryVariableRefreshSelect({ onChange, refresh }: PropsWithChildren<Props>) {\n  const value = useMemo(() => REFRESH_OPTIONS.find((o) => o.value === refresh) ?? REFRESH_OPTIONS[0], [refresh]);\n\n  return (\n    <VariableSelectField\n      name=\"Refresh\"\n      value={value}\n      options={REFRESH_OPTIONS}\n      onChange={onChange}\n      labelWidth={10}\n      testId={selectors.pages.Dashboard.Settings.Variables.Edit.QueryVariable.queryOptionsRefreshSelectV2}\n      tooltip=\"When to update the values of this variable.\"\n    />\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAmCC,OAAnC,QAAkD,OAAlD;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,eAAT,QAAgC,UAAhC;;AAOA,MAAMC,eAAe,GAAG,CACtB;EAAEC,KAAK,EAAE,mBAAT;EAA8BC,KAAK,EAAEH,eAAe,CAACI;AAArD,CADsB,EAEtB;EAAEF,KAAK,EAAE,sBAAT;EAAiCC,KAAK,EAAEH,eAAe,CAACK;AAAxD,CAFsB,CAAxB;AAKA,OAAO,SAASC,0BAAT,CAAoC;EAAEC,QAAF;EAAYC;AAAZ,CAApC,EAAqF;EAC1F,MAAML,KAAK,GAAGN,OAAO,CAAC;IAAA;;IAAA,gCAAMI,eAAe,CAACQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACP,KAAF,KAAYK,OAAxC,CAAN,yEAA0DP,eAAe,CAAC,CAAD,CAAzE;EAAA,CAAD,EAA+E,CAACO,OAAD,CAA/E,CAArB;EAEA,oBACE,KAAC,mBAAD;IACE,IAAI,EAAC,SADP;IAEE,KAAK,EAAEL,KAFT;IAGE,OAAO,EAAEF,eAHX;IAIE,QAAQ,EAAEM,QAJZ;IAKE,UAAU,EAAE,EALd;IAME,MAAM,EAAET,SAAS,CAACa,KAAV,CAAgBC,SAAhB,CAA0BC,QAA1B,CAAmCC,SAAnC,CAA6CC,IAA7C,CAAkDC,aAAlD,CAAgEC,2BAN1E;IAOE,OAAO,EAAC;EAPV,EADF;AAWD"},"metadata":{},"sourceType":"module"}