{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport { isNumber } from 'lodash';\nimport { config } from 'app/core/config';\nimport { CoreEvents } from 'app/types';\nexport class ThresholdManager {\n  constructor(panelCtrl) {\n    _defineProperty(this, \"plot\", void 0);\n\n    _defineProperty(this, \"placeholder\", void 0);\n\n    _defineProperty(this, \"height\", void 0);\n\n    _defineProperty(this, \"thresholds\", void 0);\n\n    _defineProperty(this, \"needsCleanup\", false);\n\n    _defineProperty(this, \"hasSecondYAxis\", void 0);\n\n    this.panelCtrl = panelCtrl;\n  }\n\n  getHandleHtml(handleIndex, model, valueStr) {\n    let stateClass = model.colorMode;\n\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n    let lastY = null;\n    let posTop;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({\n          top: posTop + diff\n        });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({\n        left: 0,\n        top: posTop\n      }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n      handleElem.off('mousemove', dragging);\n      document.removeEventListener('mouseup', stopped); // trigger digest and render\n\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit(CoreEvents.thresholdChanged, {\n          threshold: model,\n          handleIndex: handleIndex\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n    handleElem.on('mousemove', dragging);\n    document.addEventListener('mouseup', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex, defaultHandleTopPos) {\n    const model = this.thresholds[handleIndex]; // alerting defines\n\n    if (!model.visible && this.panelCtrl.alert) {\n      return;\n    }\n\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0; // handle no value\n\n    if (!isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({\n        x: 0,\n        y: value\n      });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({\n      top: handleTopPos\n    });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem, data) {\n    this.hasSecondYAxis = false;\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options, panel) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n\n      if (!isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n\n      switch (threshold.op) {\n        case 'gt':\n          {\n            limit = gtLimit; // if next threshold is less then op and greater value, then use that as limit\n\n            if (panel.thresholds.length > i + 1) {\n              other = panel.thresholds[i + 1];\n\n              if (other.value > threshold.value) {\n                limit = other.value;\n                ltLimit = limit;\n              }\n            }\n\n            break;\n          }\n\n        case 'lt':\n          {\n            limit = ltLimit; // if next threshold is less then op and greater value, then use that as limit\n\n            if (panel.thresholds.length > i + 1) {\n              other = panel.thresholds[i + 1];\n\n              if (other.value < threshold.value) {\n                limit = other.value;\n                gtLimit = limit;\n              }\n            }\n\n            break;\n          }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical':\n          {\n            fillColor = 'rgba(234, 112, 112, 0.12)';\n            lineColor = 'rgba(237, 46, 24, 0.60)';\n            break;\n          }\n\n        case 'warning':\n          {\n            fillColor = 'rgba(235, 138, 14, 0.12)';\n            lineColor = 'rgba(247, 149, 32, 0.60)';\n            break;\n          }\n\n        case 'ok':\n          {\n            fillColor = 'rgba(11, 237, 50, 0.090)';\n            lineColor = 'rgba(6,163,69, 0.60)';\n            break;\n          }\n\n        case 'custom':\n          {\n            fillColor = threshold.fillColor;\n            lineColor = threshold.lineColor;\n            break;\n          }\n      } // fill\n\n\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: {\n              from: threshold.value,\n              to: limit\n            },\n            color: config.theme.visualization.getColorByName(fillColor)\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: {\n              from: threshold.value,\n              to: limit\n            },\n            color: config.theme.visualization.getColorByName(fillColor)\n          });\n        }\n      }\n\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: {\n              from: threshold.value,\n              to: threshold.value\n            },\n            color: config.theme.visualization.getColorByName(lineColor)\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: {\n              from: threshold.value,\n              to: threshold.value\n            },\n            color: config.theme.visualization.getColorByName(lineColor)\n          });\n        }\n      }\n    }\n  }\n\n}","map":{"version":3,"names":["$","isNumber","config","CoreEvents","ThresholdManager","constructor","panelCtrl","getHandleHtml","handleIndex","model","valueStr","stateClass","colorMode","initDragging","evt","handleElem","currentTarget","parents","data","lastY","posTop","plot","thresholds","dragging","clientY","diff","css","top","stopped","graphValue","c2p","left","y","parseInt","toFixed","value","off","document","removeEventListener","$scope","$apply","render","events","emit","thresholdChanged","threshold","position","on","addEventListener","cleanUp","placeholder","find","remove","needsCleanup","renderHandle","defaultHandleTopPos","visible","alert","handleTopPos","valueCanvasPos","p2c","x","Math","round","min","max","height","append","toggleClass","shouldDrawHandles","hasSecondYAxis","editingThresholds","panel","length","prepare","elem","i","yaxis","thresholdMargin","draw","getPlaceholder","bind","addFlotOptions","options","gtLimit","Infinity","ltLimit","other","limit","op","fillColor","lineColor","fill","grid","markings","push","y2axis","from","to","color","theme","visualization","getColorByName","line"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/threshold_manager.ts"],"sourcesContent":["import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport { isNumber } from 'lodash';\n\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { config } from 'app/core/config';\nimport { CoreEvents } from 'app/types';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup = false;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl: PanelCtrl) {}\n\n  getHandleHtml(handleIndex: any, model: { colorMode: string }, valueStr: any) {\n    let stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt: any) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    let lastY: number | null = null;\n    let posTop: number;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt: any) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      document.removeEventListener('mouseup', stopped);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit(CoreEvents.thresholdChanged, {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    document.addEventListener('mouseup', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex: number, defaultHandleTopPos: number) {\n    const model = this.thresholds[handleIndex];\n    // alerting defines\n    if (!model.visible && (this.panelCtrl as any).alert) {\n      return;\n    }\n\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0;\n\n    // handle no value\n    if (!isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem: JQuery, data: any[]) {\n    this.hasSecondYAxis = false;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot: any) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: config.theme.visualization.getColorByName(fillColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: config.theme.visualization.getColorByName(fillColor),\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: config.theme.visualization.getColorByName(lineColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: config.theme.visualization.getColorByName(lineColor),\n          });\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}