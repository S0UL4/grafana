{"ast":null,"code":"import { Record } from 'immutable';\nimport React from 'react';\nimport TOKEN_MARK from './TOKEN_MARK';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Default filter for code blocks\n */\nfunction defaultOnlyIn(node) {\n  return node.object === 'block' && node.type === 'code_block';\n}\n/**\n * Default getter for syntax\n */\n\n\nfunction defaultGetSyntax(node) {\n  return 'javascript';\n}\n/**\n * Default rendering for decorations\n */\n\n\nfunction defaultRenderDecoration(props, editor, next) {\n  const {\n    decoration\n  } = props;\n\n  if (decoration.type !== TOKEN_MARK) {\n    return next();\n  }\n\n  const className = decoration.data.get('className');\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: className,\n    children: props.children\n  });\n}\n/**\n * The plugin options\n */\n\n\nclass Options extends Record({\n  onlyIn: defaultOnlyIn,\n  getSyntax: defaultGetSyntax,\n  renderDecoration: defaultRenderDecoration\n}) {\n  constructor(props) {\n    super(props);\n  }\n\n}\n\nexport default Options;","map":{"version":3,"names":["Record","React","TOKEN_MARK","defaultOnlyIn","node","object","type","defaultGetSyntax","defaultRenderDecoration","props","editor","next","decoration","className","data","get","children","Options","onlyIn","getSyntax","renderDecoration","constructor"],"sources":["/home/soula/grafana/packages/grafana-ui/src/slate-plugins/slate-prism/options.tsx"],"sourcesContent":["import { Record } from 'immutable';\nimport React from 'react';\nimport { Mark, Node, Decoration } from 'slate';\n\nimport { Editor } from '@grafana/slate-react';\n\nimport TOKEN_MARK from './TOKEN_MARK';\n\nexport interface OptionsFormat {\n  // Determine which node should be highlighted\n  onlyIn?: (node: Node) => boolean;\n  // Returns the syntax for a node that should be highlighted\n  getSyntax?: (node: Node) => string;\n  // Render a highlighting mark in a highlighted node\n  renderMark?: ({ mark, children }: { mark: Mark; children: React.ReactNode }) => void | React.ReactNode;\n}\n\n/**\n * Default filter for code blocks\n */\nfunction defaultOnlyIn(node: Node): boolean {\n  return node.object === 'block' && node.type === 'code_block';\n}\n\n/**\n * Default getter for syntax\n */\nfunction defaultGetSyntax(node: Node): string {\n  return 'javascript';\n}\n\n/**\n * Default rendering for decorations\n */\nfunction defaultRenderDecoration(\n  props: { children: React.ReactNode; decoration: Decoration },\n  editor: Editor,\n  next: () => any\n): void | React.ReactNode {\n  const { decoration } = props;\n  if (decoration.type !== TOKEN_MARK) {\n    return next();\n  }\n\n  const className = decoration.data.get('className');\n  return <span className={className}>{props.children}</span>;\n}\n\n/**\n * The plugin options\n */\nclass Options\n  extends Record({\n    onlyIn: defaultOnlyIn,\n    getSyntax: defaultGetSyntax,\n    renderDecoration: defaultRenderDecoration,\n  })\n  implements OptionsFormat\n{\n  declare readonly onlyIn: (node: Node) => boolean;\n  declare readonly getSyntax: (node: Node) => string;\n  declare readonly renderDecoration: (\n    {\n      decoration,\n      children,\n    }: {\n      decoration: Decoration;\n      children: React.ReactNode;\n    },\n    editor: Editor,\n    next: () => any\n  ) => void | React.ReactNode;\n\n  constructor(props: OptionsFormat) {\n    super(props);\n  }\n}\n\nexport default Options;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAOC,UAAP,MAAuB,cAAvB;;;AAWA;AACA;AACA;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA4C;EAC1C,OAAOA,IAAI,CAACC,MAAL,KAAgB,OAAhB,IAA2BD,IAAI,CAACE,IAAL,KAAc,YAAhD;AACD;AAED;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BH,IAA1B,EAA8C;EAC5C,OAAO,YAAP;AACD;AAED;AACA;AACA;;;AACA,SAASI,uBAAT,CACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAI0B;EACxB,MAAM;IAAEC;EAAF,IAAiBH,KAAvB;;EACA,IAAIG,UAAU,CAACN,IAAX,KAAoBJ,UAAxB,EAAoC;IAClC,OAAOS,IAAI,EAAX;EACD;;EAED,MAAME,SAAS,GAAGD,UAAU,CAACE,IAAX,CAAgBC,GAAhB,CAAoB,WAApB,CAAlB;EACA,oBAAO;IAAM,SAAS,EAAEF,SAAjB;IAAA,UAA6BJ,KAAK,CAACO;EAAnC,EAAP;AACD;AAED;AACA;AACA;;;AACA,MAAMC,OAAN,SACUjB,MAAM,CAAC;EACbkB,MAAM,EAAEf,aADK;EAEbgB,SAAS,EAAEZ,gBAFE;EAGba,gBAAgB,EAAEZ;AAHL,CAAD,CADhB,CAOA;EAeEa,WAAW,CAACZ,KAAD,EAAuB;IAChC,MAAMA,KAAN;EACD;;AAjBH;;AAoBA,eAAeQ,OAAf"},"metadata":{},"sourceType":"module"}