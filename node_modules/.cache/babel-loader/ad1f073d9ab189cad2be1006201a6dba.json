{"ast":null,"code":"var _VersionsHistorySpinn, _VersionHistoryHeader, _VersionsHistorySpinn2, _VersionsHistorySpinn3, _Spinner;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Spinner, HorizontalGroup } from '@grafana/ui';\nimport { historySrv, VersionHistoryTable, VersionHistoryHeader, VersionsHistoryButtons, VersionHistoryComparison } from '../VersionHistory';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VERSIONS_FETCH_LIMIT = 10;\nexport class VersionsSettings extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"limit\", void 0);\n\n    _defineProperty(this, \"start\", void 0);\n\n    _defineProperty(this, \"getVersions\", (append = false) => {\n      this.setState({\n        isAppending: append\n      });\n      historySrv.getHistoryList(this.props.dashboard, {\n        limit: this.limit,\n        start: this.start\n      }).then(res => {\n        this.setState({\n          isLoading: false,\n          versions: [...this.state.versions, ...this.decorateVersions(res)]\n        });\n        this.start += this.limit;\n      }).catch(err => console.log(err)).finally(() => this.setState({\n        isAppending: false\n      }));\n    });\n\n    _defineProperty(this, \"getDiff\", async () => {\n      const selectedVersions = this.state.versions.filter(version => version.checked);\n      const [newInfo, baseInfo] = selectedVersions;\n      const isNewLatest = newInfo.version === this.props.dashboard.version;\n      this.setState({\n        isLoading: true\n      });\n      const lhs = await historySrv.getDashboardVersion(this.props.dashboard.id, baseInfo.version);\n      const rhs = await historySrv.getDashboardVersion(this.props.dashboard.id, newInfo.version);\n      this.setState({\n        baseInfo,\n        isLoading: false,\n        isNewLatest,\n        newInfo,\n        viewMode: 'compare',\n        diffData: {\n          lhs: lhs.data,\n          rhs: rhs.data\n        }\n      });\n    });\n\n    _defineProperty(this, \"decorateVersions\", versions => versions.map(version => Object.assign({}, version, {\n      createdDateString: this.props.dashboard.formatDate(version.created),\n      ageString: this.props.dashboard.getRelativeTime(version.created),\n      checked: false\n    })));\n\n    _defineProperty(this, \"onCheck\", (ev, versionId) => {\n      this.setState({\n        versions: this.state.versions.map(version => version.id === versionId ? Object.assign({}, version, {\n          checked: ev.currentTarget.checked\n        }) : version)\n      });\n    });\n\n    _defineProperty(this, \"reset\", () => {\n      this.setState({\n        baseInfo: undefined,\n        diffData: {\n          lhs: {},\n          rhs: {}\n        },\n        isNewLatest: false,\n        newInfo: undefined,\n        versions: this.state.versions.map(version => Object.assign({}, version, {\n          checked: false\n        })),\n        viewMode: 'list'\n      });\n    });\n\n    this.limit = VERSIONS_FETCH_LIMIT;\n    this.start = 0;\n    this.state = {\n      isAppending: true,\n      isLoading: true,\n      versions: [],\n      viewMode: 'list',\n      isNewLatest: false,\n      diffData: {\n        lhs: {},\n        rhs: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getVersions();\n  }\n\n  isLastPage() {\n    return this.state.versions.find(rev => rev.version === 1);\n  }\n\n  render() {\n    const {\n      versions,\n      viewMode,\n      baseInfo,\n      newInfo,\n      isNewLatest,\n      isLoading,\n      diffData\n    } = this.state;\n    const canCompare = versions.filter(version => version.checked).length === 2;\n    const showButtons = versions.length > 1;\n    const hasMore = versions.length >= this.limit;\n\n    if (viewMode === 'compare') {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(VersionHistoryHeader, {\n          isComparing: true,\n          onClick: this.reset,\n          baseVersion: baseInfo === null || baseInfo === void 0 ? void 0 : baseInfo.version,\n          newVersion: newInfo === null || newInfo === void 0 ? void 0 : newInfo.version,\n          isNewLatest: isNewLatest\n        }), isLoading ? _VersionsHistorySpinn || (_VersionsHistorySpinn = /*#__PURE__*/_jsx(VersionsHistorySpinner, {\n          msg: \"Fetching changes\\u2026\"\n        })) : /*#__PURE__*/_jsx(VersionHistoryComparison, {\n          newInfo: newInfo,\n          baseInfo: baseInfo,\n          isNewLatest: isNewLatest,\n          diffData: diffData\n        })]\n      });\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [_VersionHistoryHeader || (_VersionHistoryHeader = /*#__PURE__*/_jsx(VersionHistoryHeader, {})), isLoading ? _VersionsHistorySpinn2 || (_VersionsHistorySpinn2 = /*#__PURE__*/_jsx(VersionsHistorySpinner, {\n        msg: \"Fetching history list\\u2026\"\n      })) : /*#__PURE__*/_jsx(VersionHistoryTable, {\n        versions: versions,\n        onCheck: this.onCheck,\n        canCompare: canCompare\n      }), this.state.isAppending && (_VersionsHistorySpinn3 || (_VersionsHistorySpinn3 = /*#__PURE__*/_jsx(VersionsHistorySpinner, {\n        msg: \"Fetching more entries\\u2026\"\n      }))), showButtons && /*#__PURE__*/_jsx(VersionsHistoryButtons, {\n        hasMore: hasMore,\n        canCompare: canCompare,\n        getVersions: this.getVersions,\n        getDiff: this.getDiff,\n        isLastPage: !!this.isLastPage()\n      })]\n    });\n  }\n\n}\n\nconst VersionsHistorySpinner = ({\n  msg\n}) => /*#__PURE__*/_jsxs(HorizontalGroup, {\n  children: [_Spinner || (_Spinner = /*#__PURE__*/_jsx(Spinner, {})), /*#__PURE__*/_jsx(\"em\", {\n    children: msg\n  })]\n});","map":{"version":3,"names":["React","PureComponent","Spinner","HorizontalGroup","historySrv","VersionHistoryTable","VersionHistoryHeader","VersionsHistoryButtons","VersionHistoryComparison","VERSIONS_FETCH_LIMIT","VersionsSettings","constructor","props","append","setState","isAppending","getHistoryList","dashboard","limit","start","then","res","isLoading","versions","state","decorateVersions","catch","err","console","log","finally","selectedVersions","filter","version","checked","newInfo","baseInfo","isNewLatest","lhs","getDashboardVersion","id","rhs","viewMode","diffData","data","map","createdDateString","formatDate","created","ageString","getRelativeTime","ev","versionId","currentTarget","undefined","componentDidMount","getVersions","isLastPage","find","rev","render","canCompare","length","showButtons","hasMore","reset","onCheck","getDiff","VersionsHistorySpinner","msg"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardSettings/VersionsSettings.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { Spinner, HorizontalGroup } from '@grafana/ui';\n\nimport { DashboardModel } from '../../state/DashboardModel';\nimport {\n  historySrv,\n  RevisionsModel,\n  VersionHistoryTable,\n  VersionHistoryHeader,\n  VersionsHistoryButtons,\n  VersionHistoryComparison,\n} from '../VersionHistory';\n\ninterface Props {\n  dashboard: DashboardModel;\n}\n\ntype State = {\n  isLoading: boolean;\n  isAppending: boolean;\n  versions: DecoratedRevisionModel[];\n  viewMode: 'list' | 'compare';\n  diffData: { lhs: any; rhs: any };\n  newInfo?: DecoratedRevisionModel;\n  baseInfo?: DecoratedRevisionModel;\n  isNewLatest: boolean;\n};\n\nexport type DecoratedRevisionModel = RevisionsModel & {\n  createdDateString: string;\n  ageString: string;\n};\n\nexport const VERSIONS_FETCH_LIMIT = 10;\n\nexport class VersionsSettings extends PureComponent<Props, State> {\n  limit: number;\n  start: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.limit = VERSIONS_FETCH_LIMIT;\n    this.start = 0;\n    this.state = {\n      isAppending: true,\n      isLoading: true,\n      versions: [],\n      viewMode: 'list',\n      isNewLatest: false,\n      diffData: {\n        lhs: {},\n        rhs: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getVersions();\n  }\n\n  getVersions = (append = false) => {\n    this.setState({ isAppending: append });\n    historySrv\n      .getHistoryList(this.props.dashboard, { limit: this.limit, start: this.start })\n      .then((res) => {\n        this.setState({\n          isLoading: false,\n          versions: [...this.state.versions, ...this.decorateVersions(res)],\n        });\n        this.start += this.limit;\n      })\n      .catch((err) => console.log(err))\n      .finally(() => this.setState({ isAppending: false }));\n  };\n\n  getDiff = async () => {\n    const selectedVersions = this.state.versions.filter((version) => version.checked);\n    const [newInfo, baseInfo] = selectedVersions;\n    const isNewLatest = newInfo.version === this.props.dashboard.version;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    const lhs = await historySrv.getDashboardVersion(this.props.dashboard.id, baseInfo.version);\n    const rhs = await historySrv.getDashboardVersion(this.props.dashboard.id, newInfo.version);\n\n    this.setState({\n      baseInfo,\n      isLoading: false,\n      isNewLatest,\n      newInfo,\n      viewMode: 'compare',\n      diffData: {\n        lhs: lhs.data,\n        rhs: rhs.data,\n      },\n    });\n  };\n\n  decorateVersions = (versions: RevisionsModel[]) =>\n    versions.map((version) => ({\n      ...version,\n      createdDateString: this.props.dashboard.formatDate(version.created),\n      ageString: this.props.dashboard.getRelativeTime(version.created),\n      checked: false,\n    }));\n\n  isLastPage() {\n    return this.state.versions.find((rev) => rev.version === 1);\n  }\n\n  onCheck = (ev: React.FormEvent<HTMLInputElement>, versionId: number) => {\n    this.setState({\n      versions: this.state.versions.map((version) =>\n        version.id === versionId ? { ...version, checked: ev.currentTarget.checked } : version\n      ),\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      baseInfo: undefined,\n      diffData: {\n        lhs: {},\n        rhs: {},\n      },\n      isNewLatest: false,\n      newInfo: undefined,\n      versions: this.state.versions.map((version) => ({ ...version, checked: false })),\n      viewMode: 'list',\n    });\n  };\n\n  render() {\n    const { versions, viewMode, baseInfo, newInfo, isNewLatest, isLoading, diffData } = this.state;\n    const canCompare = versions.filter((version) => version.checked).length === 2;\n    const showButtons = versions.length > 1;\n    const hasMore = versions.length >= this.limit;\n\n    if (viewMode === 'compare') {\n      return (\n        <div>\n          <VersionHistoryHeader\n            isComparing\n            onClick={this.reset}\n            baseVersion={baseInfo?.version}\n            newVersion={newInfo?.version}\n            isNewLatest={isNewLatest}\n          />\n          {isLoading ? (\n            <VersionsHistorySpinner msg=\"Fetching changes&hellip;\" />\n          ) : (\n            <VersionHistoryComparison\n              newInfo={newInfo!}\n              baseInfo={baseInfo!}\n              isNewLatest={isNewLatest}\n              diffData={diffData}\n            />\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <VersionHistoryHeader />\n        {isLoading ? (\n          <VersionsHistorySpinner msg=\"Fetching history list&hellip;\" />\n        ) : (\n          <VersionHistoryTable versions={versions} onCheck={this.onCheck} canCompare={canCompare} />\n        )}\n        {this.state.isAppending && <VersionsHistorySpinner msg=\"Fetching more entries&hellip;\" />}\n        {showButtons && (\n          <VersionsHistoryButtons\n            hasMore={hasMore}\n            canCompare={canCompare}\n            getVersions={this.getVersions}\n            getDiff={this.getDiff}\n            isLastPage={!!this.isLastPage()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst VersionsHistorySpinner = ({ msg }: { msg: string }) => (\n  <HorizontalGroup>\n    <Spinner />\n    <em>{msg}</em>\n  </HorizontalGroup>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}