{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class Profiler {\n  constructor() {\n    _defineProperty(this, \"panelsRendered\", 0);\n\n    _defineProperty(this, \"enabled\", undefined);\n  }\n\n  renderingCompleted() {\n    // add render counter to root scope\n    // used by image renderer to know when panel has rendered\n    this.panelsRendered += 1; // this window variable is used by backend rendering tools to know\n    // all panels have completed rendering\n\n    window.panelsRendered = this.panelsRendered;\n  }\n\n}\nconst profiler = new Profiler();\nexport { profiler };","map":{"version":3,"names":["Profiler","undefined","renderingCompleted","panelsRendered","window","profiler"],"sources":["/home/soula/grafana/public/app/core/profiler.ts"],"sourcesContent":["export class Profiler {\n  panelsRendered = 0;\n  enabled?: boolean = undefined;\n\n  renderingCompleted() {\n    // add render counter to root scope\n    // used by image renderer to know when panel has rendered\n    this.panelsRendered += 1;\n\n    // this window variable is used by backend rendering tools to know\n    // all panels have completed rendering\n    (window as any).panelsRendered = this.panelsRendered;\n  }\n}\n\nconst profiler = new Profiler();\nexport { profiler };\n"],"mappings":";;AAAA,OAAO,MAAMA,QAAN,CAAe;EAAA;IAAA,wCACH,CADG;;IAAA,iCAEAC,SAFA;EAAA;;EAIpBC,kBAAkB,GAAG;IACnB;IACA;IACA,KAAKC,cAAL,IAAuB,CAAvB,CAHmB,CAKnB;IACA;;IACCC,MAAD,CAAgBD,cAAhB,GAAiC,KAAKA,cAAtC;EACD;;AAZmB;AAetB,MAAME,QAAQ,GAAG,IAAIL,QAAJ,EAAjB;AACA,SAASK,QAAT"},"metadata":{},"sourceType":"module"}