{"ast":null,"code":"var _Redirect;\n\nimport { uniq } from 'lodash';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { OrgRole } from '@grafana/data';\nimport { SafeDynamicImport } from 'app/core/components/DynamicImports/SafeDynamicImport';\nimport { config } from 'app/core/config';\nimport { AccessControlAction } from 'app/types';\nimport { evaluateAccess } from './unified/utils/access-control';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst commonRoutes = [{\n  path: '/alerting',\n  // eslint-disable-next-line react/display-name\n  component: () => _Redirect || (_Redirect = /*#__PURE__*/_jsx(Redirect, {\n    to: \"/alerting/list\"\n  }))\n}];\nconst legacyRoutes = [...commonRoutes, {\n  path: '/alerting/list',\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertRuleListIndex\" */\n  'app/features/alerting/AlertRuleList'))\n}, {\n  path: '/alerting/ng/list',\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertRuleList\" */\n  'app/features/alerting/AlertRuleList'))\n}, {\n  path: '/alerting/notifications',\n  roles: config.unifiedAlertingEnabled ? () => ['Editor', 'Admin'] : undefined,\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notifications/templates/new',\n  roles: () => ['Editor', 'Admin'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notifications/templates/:id/edit',\n  roles: () => ['Editor', 'Admin'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notifications/receivers/new',\n  roles: () => ['Editor', 'Admin'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notifications/receivers/:id/edit',\n  roles: () => ['Editor', 'Admin'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notifications/global-config',\n  roles: () => ['Admin', 'Editor'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/NotificationsListPage'))\n}, {\n  path: '/alerting/notification/new',\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NewNotificationChannel\" */\n  'app/features/alerting/NewNotificationChannelPage'))\n}, {\n  path: '/alerting/notification/:id/edit',\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"EditNotificationChannel\"*/\n  'app/features/alerting/EditNotificationChannelPage'))\n}];\nconst unifiedRoutes = [...commonRoutes, {\n  path: '/alerting/list',\n  roles: evaluateAccess([AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertRuleListIndex\" */\n  'app/features/alerting/unified/RuleList'))\n}, {\n  path: '/alerting/routes',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsRead, AccessControlAction.AlertingNotificationsExternalRead], [OrgRole.Editor, OrgRole.Admin]),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertAmRoutes\" */\n  'app/features/alerting/unified/AmRoutes'))\n}, {\n  path: '/alerting/routes/mute-timing/new',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"MuteTimings\" */\n  'app/features/alerting/unified/MuteTimings'))\n}, {\n  path: '/alerting/routes/mute-timing/edit',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"MuteTimings\" */\n  'app/features/alerting/unified/MuteTimings'))\n}, {\n  path: '/alerting/silences',\n  roles: evaluateAccess([AccessControlAction.AlertingInstanceRead, AccessControlAction.AlertingInstancesExternalRead], ['Viewer', 'Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertSilences\" */\n  'app/features/alerting/unified/Silences'))\n}, {\n  path: '/alerting/silence/new',\n  roles: evaluateAccess([AccessControlAction.AlertingInstanceCreate, AccessControlAction.AlertingInstancesExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertSilences\" */\n  'app/features/alerting/unified/Silences'))\n}, {\n  path: '/alerting/silence/:id/edit',\n  roles: evaluateAccess([AccessControlAction.AlertingInstanceUpdate, AccessControlAction.AlertingInstancesExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertSilences\" */\n  'app/features/alerting/unified/Silences'))\n}, {\n  path: '/alerting/notifications',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsRead, AccessControlAction.AlertingNotificationsExternalRead], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/notifications/templates/new',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/notifications/templates/:id/edit',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/notifications/receivers/new',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/notifications/receivers/:id/edit',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/notifications/global-config',\n  roles: evaluateAccess([AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite], ['Editor', 'Admin']),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"NotificationsListPage\" */\n  'app/features/alerting/unified/Receivers'))\n}, {\n  path: '/alerting/groups/',\n  roles: evaluateAccess([AccessControlAction.AlertingInstanceRead, AccessControlAction.AlertingInstancesExternalRead], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertGroups\" */\n  'app/features/alerting/unified/AlertGroups'))\n}, {\n  path: '/alerting/new',\n  pageClass: 'page-alerting',\n  roles: evaluateAccess([AccessControlAction.AlertingRuleCreate, AccessControlAction.AlertingRuleExternalWrite], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin] // Needs to include viewer because there may be Viewers with Edit permissions in folders\n  ),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertingRuleForm\"*/\n  'app/features/alerting/unified/RuleEditor'))\n}, {\n  path: '/alerting/:id/edit',\n  pageClass: 'page-alerting',\n  roles: evaluateAccess([AccessControlAction.AlertingRuleUpdate, AccessControlAction.AlertingRuleExternalWrite], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin] // Needs to include viewer because there may be Viewers with Edit permissions in folders\n  ),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertingRuleForm\"*/\n  'app/features/alerting/unified/RuleEditor'))\n}, {\n  path: '/alerting/:sourceName/:id/view',\n  pageClass: 'page-alerting',\n  roles: evaluateAccess([AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertingRule\"*/\n  'app/features/alerting/unified/RuleViewer'))\n}, {\n  path: '/alerting/:sourceName/:name/find',\n  pageClass: 'page-alerting',\n  roles: evaluateAccess([AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead], [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]),\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertingRedirectToRule\"*/\n  'app/features/alerting/unified/RedirectToRuleViewer'))\n}, {\n  path: '/alerting/admin',\n  roles: () => ['Admin'],\n  component: SafeDynamicImport(() => import(\n  /* webpackChunkName: \"AlertingAdmin\" */\n  'app/features/alerting/unified/Admin'))\n}];\nexport function getAlertingRoutes(cfg = config) {\n  if (cfg.unifiedAlertingEnabled) {\n    return unifiedRoutes;\n  } else if (cfg.alertingEnabled) {\n    return legacyRoutes;\n  }\n\n  const uniquePaths = uniq([...legacyRoutes, ...unifiedRoutes].map(route => route.path));\n  return uniquePaths.map(path => ({\n    path,\n    component: SafeDynamicImport(() => import(\n    /* webpackChunkName: \"AlertingFeatureTogglePage\"*/\n    'app/features/alerting/FeatureTogglePage'))\n  }));\n}","map":{"version":3,"names":["uniq","React","Redirect","OrgRole","SafeDynamicImport","config","AccessControlAction","evaluateAccess","commonRoutes","path","component","legacyRoutes","roles","unifiedAlertingEnabled","undefined","unifiedRoutes","AlertingRuleRead","AlertingRuleExternalRead","Viewer","Editor","Admin","AlertingNotificationsRead","AlertingNotificationsExternalRead","AlertingNotificationsWrite","AlertingNotificationsExternalWrite","AlertingInstanceRead","AlertingInstancesExternalRead","AlertingInstanceCreate","AlertingInstancesExternalWrite","AlertingInstanceUpdate","pageClass","AlertingRuleCreate","AlertingRuleExternalWrite","AlertingRuleUpdate","getAlertingRoutes","cfg","alertingEnabled","uniquePaths","map","route"],"sources":["/home/soula/grafana/public/app/features/alerting/routes.tsx"],"sourcesContent":["import { uniq } from 'lodash';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { OrgRole } from '@grafana/data';\nimport { SafeDynamicImport } from 'app/core/components/DynamicImports/SafeDynamicImport';\nimport { config } from 'app/core/config';\nimport { RouteDescriptor } from 'app/core/navigation/types';\nimport { AccessControlAction } from 'app/types';\n\nimport { evaluateAccess } from './unified/utils/access-control';\n\nconst commonRoutes: RouteDescriptor[] = [\n  {\n    path: '/alerting',\n    // eslint-disable-next-line react/display-name\n    component: () => <Redirect to=\"/alerting/list\" />,\n  },\n];\n\nconst legacyRoutes: RouteDescriptor[] = [\n  ...commonRoutes,\n  {\n    path: '/alerting/list',\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertRuleListIndex\" */ 'app/features/alerting/AlertRuleList')\n    ),\n  },\n  {\n    path: '/alerting/ng/list',\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertRuleList\" */ 'app/features/alerting/AlertRuleList')\n    ),\n  },\n  {\n    path: '/alerting/notifications',\n    roles: config.unifiedAlertingEnabled ? () => ['Editor', 'Admin'] : undefined,\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notifications/templates/new',\n    roles: () => ['Editor', 'Admin'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notifications/templates/:id/edit',\n    roles: () => ['Editor', 'Admin'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notifications/receivers/new',\n    roles: () => ['Editor', 'Admin'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notifications/receivers/:id/edit',\n    roles: () => ['Editor', 'Admin'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notifications/global-config',\n    roles: () => ['Admin', 'Editor'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/NotificationsListPage')\n    ),\n  },\n  {\n    path: '/alerting/notification/new',\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NewNotificationChannel\" */ 'app/features/alerting/NewNotificationChannelPage')\n    ),\n  },\n  {\n    path: '/alerting/notification/:id/edit',\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"EditNotificationChannel\"*/ 'app/features/alerting/EditNotificationChannelPage')\n    ),\n  },\n];\n\nconst unifiedRoutes: RouteDescriptor[] = [\n  ...commonRoutes,\n  {\n    path: '/alerting/list',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertRuleListIndex\" */ 'app/features/alerting/unified/RuleList')\n    ),\n  },\n  {\n    path: '/alerting/routes',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsRead, AccessControlAction.AlertingNotificationsExternalRead],\n      [OrgRole.Editor, OrgRole.Admin]\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertAmRoutes\" */ 'app/features/alerting/unified/AmRoutes')\n    ),\n  },\n  {\n    path: '/alerting/routes/mute-timing/new',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"MuteTimings\" */ 'app/features/alerting/unified/MuteTimings')\n    ),\n  },\n  {\n    path: '/alerting/routes/mute-timing/edit',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"MuteTimings\" */ 'app/features/alerting/unified/MuteTimings')\n    ),\n  },\n  {\n    path: '/alerting/silences',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingInstanceRead, AccessControlAction.AlertingInstancesExternalRead],\n      ['Viewer', 'Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertSilences\" */ 'app/features/alerting/unified/Silences')\n    ),\n  },\n  {\n    path: '/alerting/silence/new',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingInstanceCreate, AccessControlAction.AlertingInstancesExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertSilences\" */ 'app/features/alerting/unified/Silences')\n    ),\n  },\n  {\n    path: '/alerting/silence/:id/edit',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingInstanceUpdate, AccessControlAction.AlertingInstancesExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertSilences\" */ 'app/features/alerting/unified/Silences')\n    ),\n  },\n  {\n    path: '/alerting/notifications',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsRead, AccessControlAction.AlertingNotificationsExternalRead],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/notifications/templates/new',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/notifications/templates/:id/edit',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/notifications/receivers/new',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/notifications/receivers/:id/edit',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/notifications/global-config',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingNotificationsWrite, AccessControlAction.AlertingNotificationsExternalWrite],\n      ['Editor', 'Admin']\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"NotificationsListPage\" */ 'app/features/alerting/unified/Receivers')\n    ),\n  },\n  {\n    path: '/alerting/groups/',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingInstanceRead, AccessControlAction.AlertingInstancesExternalRead],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertGroups\" */ 'app/features/alerting/unified/AlertGroups')\n    ),\n  },\n  {\n    path: '/alerting/new',\n    pageClass: 'page-alerting',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingRuleCreate, AccessControlAction.AlertingRuleExternalWrite],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin] // Needs to include viewer because there may be Viewers with Edit permissions in folders\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingRuleForm\"*/ 'app/features/alerting/unified/RuleEditor')\n    ),\n  },\n  {\n    path: '/alerting/:id/edit',\n    pageClass: 'page-alerting',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingRuleUpdate, AccessControlAction.AlertingRuleExternalWrite],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin] // Needs to include viewer because there may be Viewers with Edit permissions in folders\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingRuleForm\"*/ 'app/features/alerting/unified/RuleEditor')\n    ),\n  },\n  {\n    path: '/alerting/:sourceName/:id/view',\n    pageClass: 'page-alerting',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingRule\"*/ 'app/features/alerting/unified/RuleViewer')\n    ),\n  },\n  {\n    path: '/alerting/:sourceName/:name/find',\n    pageClass: 'page-alerting',\n    roles: evaluateAccess(\n      [AccessControlAction.AlertingRuleRead, AccessControlAction.AlertingRuleExternalRead],\n      [OrgRole.Viewer, OrgRole.Editor, OrgRole.Admin]\n    ),\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingRedirectToRule\"*/ 'app/features/alerting/unified/RedirectToRuleViewer')\n    ),\n  },\n  {\n    path: '/alerting/admin',\n    roles: () => ['Admin'],\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingAdmin\" */ 'app/features/alerting/unified/Admin')\n    ),\n  },\n];\n\nexport function getAlertingRoutes(cfg = config): RouteDescriptor[] {\n  if (cfg.unifiedAlertingEnabled) {\n    return unifiedRoutes;\n  } else if (cfg.alertingEnabled) {\n    return legacyRoutes;\n  }\n\n  const uniquePaths = uniq([...legacyRoutes, ...unifiedRoutes].map((route) => route.path));\n  return uniquePaths.map((path) => ({\n    path,\n    component: SafeDynamicImport(\n      () => import(/* webpackChunkName: \"AlertingFeatureTogglePage\"*/ 'app/features/alerting/FeatureTogglePage')\n    ),\n  }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}