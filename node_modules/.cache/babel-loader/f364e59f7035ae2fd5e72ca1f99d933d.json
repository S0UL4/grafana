{"ast":null,"code":"const getNotFoundModel = () => {\n  const node = {\n    id: 'not-found',\n    text: 'Page not found',\n    icon: 'exclamation-triangle',\n    subTitle: '404 Error',\n    url: 'not-found'\n  };\n  return {\n    node: node,\n    main: node\n  };\n};\n\nexport const getNavModel = (navIndex, id, fallback, onlyChild = false) => {\n  if (navIndex[id]) {\n    const node = navIndex[id];\n    let main;\n\n    if (!onlyChild && node.parentItem) {\n      main = Object.assign({}, node.parentItem);\n      main.children = main.children && main.children.map(item => {\n        return Object.assign({}, item, {\n          active: item.url === node.url\n        });\n      });\n    } else {\n      main = node;\n    }\n\n    return {\n      node,\n      main\n    };\n  }\n\n  if (fallback) {\n    return fallback;\n  }\n\n  return getNotFoundModel();\n};\nexport const getTitleFromNavModel = navModel => {\n  return `${navModel.main.text}${navModel.node.text ? ': ' + navModel.node.text : ''}`;\n};","map":{"version":3,"names":["getNotFoundModel","node","id","text","icon","subTitle","url","main","getNavModel","navIndex","fallback","onlyChild","parentItem","children","map","item","active","getTitleFromNavModel","navModel"],"sources":["/home/soula/grafana/public/app/core/selectors/navModel.ts"],"sourcesContent":["import { NavModel, NavModelItem, NavIndex } from '@grafana/data';\n\nconst getNotFoundModel = (): NavModel => {\n  const node: NavModelItem = {\n    id: 'not-found',\n    text: 'Page not found',\n    icon: 'exclamation-triangle',\n    subTitle: '404 Error',\n    url: 'not-found',\n  };\n\n  return {\n    node: node,\n    main: node,\n  };\n};\n\nexport const getNavModel = (navIndex: NavIndex, id: string, fallback?: NavModel, onlyChild = false): NavModel => {\n  if (navIndex[id]) {\n    const node = navIndex[id];\n\n    let main: NavModelItem;\n    if (!onlyChild && node.parentItem) {\n      main = { ...node.parentItem };\n\n      main.children =\n        main.children &&\n        main.children.map((item) => {\n          return {\n            ...item,\n            active: item.url === node.url,\n          };\n        });\n    } else {\n      main = node;\n    }\n\n    return {\n      node,\n      main,\n    };\n  }\n\n  if (fallback) {\n    return fallback;\n  }\n\n  return getNotFoundModel();\n};\n\nexport const getTitleFromNavModel = (navModel: NavModel) => {\n  return `${navModel.main.text}${navModel.node.text ? ': ' + navModel.node.text : ''}`;\n};\n"],"mappings":"AAEA,MAAMA,gBAAgB,GAAG,MAAgB;EACvC,MAAMC,IAAkB,GAAG;IACzBC,EAAE,EAAE,WADqB;IAEzBC,IAAI,EAAE,gBAFmB;IAGzBC,IAAI,EAAE,sBAHmB;IAIzBC,QAAQ,EAAE,WAJe;IAKzBC,GAAG,EAAE;EALoB,CAA3B;EAQA,OAAO;IACLL,IAAI,EAAEA,IADD;IAELM,IAAI,EAAEN;EAFD,CAAP;AAID,CAbD;;AAeA,OAAO,MAAMO,WAAW,GAAG,CAACC,QAAD,EAAqBP,EAArB,EAAiCQ,QAAjC,EAAsDC,SAAS,GAAG,KAAlE,KAAsF;EAC/G,IAAIF,QAAQ,CAACP,EAAD,CAAZ,EAAkB;IAChB,MAAMD,IAAI,GAAGQ,QAAQ,CAACP,EAAD,CAArB;IAEA,IAAIK,IAAJ;;IACA,IAAI,CAACI,SAAD,IAAcV,IAAI,CAACW,UAAvB,EAAmC;MACjCL,IAAI,qBAAQN,IAAI,CAACW,UAAb,CAAJ;MAEAL,IAAI,CAACM,QAAL,GACEN,IAAI,CAACM,QAAL,IACAN,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAmBC,IAAD,IAAU;QAC1B,yBACKA,IADL;UAEEC,MAAM,EAAED,IAAI,CAACT,GAAL,KAAaL,IAAI,CAACK;QAF5B;MAID,CALD,CAFF;IAQD,CAXD,MAWO;MACLC,IAAI,GAAGN,IAAP;IACD;;IAED,OAAO;MACLA,IADK;MAELM;IAFK,CAAP;EAID;;EAED,IAAIG,QAAJ,EAAc;IACZ,OAAOA,QAAP;EACD;;EAED,OAAOV,gBAAgB,EAAvB;AACD,CA/BM;AAiCP,OAAO,MAAMiB,oBAAoB,GAAIC,QAAD,IAAwB;EAC1D,OAAQ,GAAEA,QAAQ,CAACX,IAAT,CAAcJ,IAAK,GAAEe,QAAQ,CAACjB,IAAT,CAAcE,IAAd,GAAqB,OAAOe,QAAQ,CAACjB,IAAT,CAAcE,IAA1C,GAAiD,EAAG,EAAnF;AACD,CAFM"},"metadata":{},"sourceType":"module"}