{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/packages/grafana-data/src/types/trace.ts"],"sourcesContent":["/**\n * Type representing a tag in a trace span or fields of a log.\n */\nexport type TraceKeyValuePair<T = any> = {\n  key: string;\n  value: T;\n};\n\n/**\n * Type representing a log in a span.\n */\nexport type TraceLog = {\n  // Millisecond epoch time\n  timestamp: number;\n  fields: TraceKeyValuePair[];\n};\n\nexport type TraceSpanReference = {\n  traceID: string;\n  spanID: string;\n  tags?: TraceKeyValuePair[];\n};\n\n/**\n * This describes the structure of the dataframe that should be returned from a tracing data source to show trace\n * in a TraceView component.\n */\nexport interface TraceSpanRow {\n  traceID: string;\n  spanID: string;\n  parentSpanID: string | undefined;\n  operationName: string;\n  serviceName: string;\n  serviceTags: TraceKeyValuePair[];\n  // Millisecond epoch time\n  startTime: number;\n  // Milliseconds\n  duration: number;\n  logs?: TraceLog[];\n  references?: TraceSpanReference[];\n  // Note: To mark spen as having error add tag error: true\n  tags?: TraceKeyValuePair[];\n  warnings?: string[];\n  stackTraces?: string[];\n\n  // Specify custom color of the error icon\n  errorIconColor?: string;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}