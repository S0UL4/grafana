{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class ObservablePropsWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"sub\", void 0);\n\n    this.state = {\n      subProps: props.initialSubProps\n    };\n  }\n\n  componentDidMount() {\n    this.sub = this.props.watch.subscribe({\n      next: subProps => {\n        //console.log('ObservablePropsWrapper:NEXT', subProps);\n        this.setState({\n          subProps\n        });\n      },\n      complete: () => {//console.log('ObservablePropsWrapper:complete');\n      },\n      error: err => {//console.log('ObservablePropsWrapper:error', err);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  render() {\n    const {\n      subProps\n    } = this.state;\n    return /*#__PURE__*/_jsx(this.props.child, Object.assign({}, subProps));\n  }\n\n}","map":{"version":3,"names":["React","Component","ObservablePropsWrapper","constructor","props","state","subProps","initialSubProps","componentDidMount","sub","watch","subscribe","next","setState","complete","error","err","componentWillUnmount","unsubscribe","render"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/components/ObservablePropsWrapper.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Observable, Unsubscribable } from 'rxjs';\n\ninterface Props<T> {\n  watch: Observable<T>;\n  child: React.ComponentType<T>;\n  initialSubProps: T;\n}\n\ninterface State<T> {\n  subProps: T;\n}\n\nexport class ObservablePropsWrapper<T> extends Component<Props<T>, State<T>> {\n  sub?: Unsubscribable;\n\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = {\n      subProps: props.initialSubProps,\n    };\n  }\n\n  componentDidMount() {\n    this.sub = this.props.watch.subscribe({\n      next: (subProps: T) => {\n        //console.log('ObservablePropsWrapper:NEXT', subProps);\n        this.setState({ subProps });\n      },\n      complete: () => {\n        //console.log('ObservablePropsWrapper:complete');\n      },\n      error: (err) => {\n        //console.log('ObservablePropsWrapper:error', err);\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  render() {\n    const { subProps } = this.state;\n    return <this.props.child {...subProps} />;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAaA,OAAO,MAAMC,sBAAN,SAAwCD,SAAxC,CAAsE;EAG3EE,WAAW,CAACC,KAAD,EAAkB;IAC3B,MAAMA,KAAN;;IAD2B;;IAE3B,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAEF,KAAK,CAACG;IADL,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB,KAAKC,GAAL,GAAW,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,SAAjB,CAA2B;MACpCC,IAAI,EAAGN,QAAD,IAAiB;QACrB;QACA,KAAKO,QAAL,CAAc;UAAEP;QAAF,CAAd;MACD,CAJmC;MAKpCQ,QAAQ,EAAE,MAAM,CACd;MACD,CAPmC;MAQpCC,KAAK,EAAGC,GAAD,IAAS,CACd;MACD;IAVmC,CAA3B,CAAX;EAYD;;EAEDC,oBAAoB,GAAG;IACrB,IAAI,KAAKR,GAAT,EAAc;MACZ,KAAKA,GAAL,CAASS,WAAT;IACD;EACF;;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEb;IAAF,IAAe,KAAKD,KAA1B;IACA,oBAAO,UAAM,KAAN,CAAY,KAAZ,oBAAsBC,QAAtB,EAAP;EACD;;AAlC0E"},"metadata":{},"sourceType":"module"}