{"ast":null,"code":"var _Icon;\n\nimport React, { useState } from 'react';\nimport { AppEvents, urlUtil } from '@grafana/data';\nimport { Checkbox, ClipboardButton, Field, FieldSet, Icon, Input, Modal, RadioButtonGroup } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { buildBaseUrl } from '../dashboard/components/ShareModal/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ShareModal = ({\n  playlistUid,\n  onDismiss\n}) => {\n  const [mode, setMode] = useState(false);\n  const [autoFit, setAutofit] = useState(false);\n  const modes = [{\n    label: 'Normal',\n    value: false\n  }, {\n    label: 'TV',\n    value: 'tv'\n  }, {\n    label: 'Kiosk',\n    value: true\n  }];\n\n  const onShareUrlCopy = () => {\n    appEvents.emit(AppEvents.alertSuccess, ['Content copied to clipboard']);\n  };\n\n  const params = {};\n\n  if (mode) {\n    params.kiosk = mode;\n  }\n\n  if (autoFit) {\n    params.autofitpanels = true;\n  }\n\n  const shareUrl = urlUtil.renderUrl(`${buildBaseUrl()}/play/${playlistUid}`, params);\n  return /*#__PURE__*/_jsx(Modal, {\n    isOpen: true,\n    title: \"Share playlist\",\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxs(FieldSet, {\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"Mode\",\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          value: mode,\n          options: modes,\n          onChange: setMode\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Autofit\",\n          description: \"Panel heights will be adjusted to fit screen size\",\n          name: \"autofix\",\n          value: autoFit,\n          onChange: e => setAutofit(e.currentTarget.checked)\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        label: \"Link URL\",\n        children: /*#__PURE__*/_jsx(Input, {\n          id: \"link-url-input\",\n          value: shareUrl,\n          readOnly: true,\n          addonAfter: /*#__PURE__*/_jsxs(ClipboardButton, {\n            variant: \"primary\",\n            getText: () => shareUrl,\n            onClipboardCopy: onShareUrlCopy,\n            children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n              name: \"copy\"\n            })), \" Copy\"]\n          })\n        })\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useState","AppEvents","urlUtil","Checkbox","ClipboardButton","Field","FieldSet","Icon","Input","Modal","RadioButtonGroup","appEvents","buildBaseUrl","ShareModal","playlistUid","onDismiss","mode","setMode","autoFit","setAutofit","modes","label","value","onShareUrlCopy","emit","alertSuccess","params","kiosk","autofitpanels","shareUrl","renderUrl","e","currentTarget","checked"],"sources":["/home/soula/grafana/public/app/features/playlist/ShareModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { AppEvents, SelectableValue, UrlQueryMap, urlUtil } from '@grafana/data';\nimport { Checkbox, ClipboardButton, Field, FieldSet, Icon, Input, Modal, RadioButtonGroup } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\n\nimport { buildBaseUrl } from '../dashboard/components/ShareModal/utils';\n\nimport { PlaylistMode } from './types';\n\ninterface ShareModalProps {\n  playlistUid: string;\n  onDismiss: () => void;\n}\n\nexport const ShareModal = ({ playlistUid, onDismiss }: ShareModalProps) => {\n  const [mode, setMode] = useState<PlaylistMode>(false);\n  const [autoFit, setAutofit] = useState(false);\n\n  const modes: Array<SelectableValue<PlaylistMode>> = [\n    { label: 'Normal', value: false },\n    { label: 'TV', value: 'tv' },\n    { label: 'Kiosk', value: true },\n  ];\n\n  const onShareUrlCopy = () => {\n    appEvents.emit(AppEvents.alertSuccess, ['Content copied to clipboard']);\n  };\n\n  const params: UrlQueryMap = {};\n  if (mode) {\n    params.kiosk = mode;\n  }\n  if (autoFit) {\n    params.autofitpanels = true;\n  }\n\n  const shareUrl = urlUtil.renderUrl(`${buildBaseUrl()}/play/${playlistUid}`, params);\n\n  return (\n    <Modal isOpen={true} title=\"Share playlist\" onDismiss={onDismiss}>\n      <FieldSet>\n        <Field label=\"Mode\">\n          <RadioButtonGroup value={mode} options={modes} onChange={setMode} />\n        </Field>\n        <Field>\n          <Checkbox\n            label=\"Autofit\"\n            description=\"Panel heights will be adjusted to fit screen size\"\n            name=\"autofix\"\n            value={autoFit}\n            onChange={(e) => setAutofit(e.currentTarget.checked)}\n          />\n        </Field>\n\n        <Field label=\"Link URL\">\n          <Input\n            id=\"link-url-input\"\n            value={shareUrl}\n            readOnly\n            addonAfter={\n              <ClipboardButton variant=\"primary\" getText={() => shareUrl} onClipboardCopy={onShareUrlCopy}>\n                <Icon name=\"copy\" /> Copy\n              </ClipboardButton>\n            }\n          />\n        </Field>\n      </FieldSet>\n    </Modal>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAkDC,OAAlD,QAAiE,eAAjE;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqDC,IAArD,EAA2DC,KAA3D,EAAkEC,KAAlE,EAAyEC,gBAAzE,QAAiG,aAAjG;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,YAAT,QAA6B,0CAA7B;;;AASA,OAAO,MAAMC,UAAU,GAAG,CAAC;EAAEC,WAAF;EAAeC;AAAf,CAAD,KAAiD;EACzE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAe,KAAf,CAAhC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMoB,KAA2C,GAAG,CAClD;IAAEC,KAAK,EAAE,QAAT;IAAmBC,KAAK,EAAE;EAA1B,CADkD,EAElD;IAAED,KAAK,EAAE,IAAT;IAAeC,KAAK,EAAE;EAAtB,CAFkD,EAGlD;IAAED,KAAK,EAAE,OAAT;IAAkBC,KAAK,EAAE;EAAzB,CAHkD,CAApD;;EAMA,MAAMC,cAAc,GAAG,MAAM;IAC3BZ,SAAS,CAACa,IAAV,CAAevB,SAAS,CAACwB,YAAzB,EAAuC,CAAC,6BAAD,CAAvC;EACD,CAFD;;EAIA,MAAMC,MAAmB,GAAG,EAA5B;;EACA,IAAIV,IAAJ,EAAU;IACRU,MAAM,CAACC,KAAP,GAAeX,IAAf;EACD;;EACD,IAAIE,OAAJ,EAAa;IACXQ,MAAM,CAACE,aAAP,GAAuB,IAAvB;EACD;;EAED,MAAMC,QAAQ,GAAG3B,OAAO,CAAC4B,SAAR,CAAmB,GAAElB,YAAY,EAAG,SAAQE,WAAY,EAAxD,EAA2DY,MAA3D,CAAjB;EAEA,oBACE,KAAC,KAAD;IAAO,MAAM,EAAE,IAAf;IAAqB,KAAK,EAAC,gBAA3B;IAA4C,SAAS,EAAEX,SAAvD;IAAA,uBACE,MAAC,QAAD;MAAA,wBACE,KAAC,KAAD;QAAO,KAAK,EAAC,MAAb;QAAA,uBACE,KAAC,gBAAD;UAAkB,KAAK,EAAEC,IAAzB;UAA+B,OAAO,EAAEI,KAAxC;UAA+C,QAAQ,EAAEH;QAAzD;MADF,EADF,eAIE,KAAC,KAAD;QAAA,uBACE,KAAC,QAAD;UACE,KAAK,EAAC,SADR;UAEE,WAAW,EAAC,mDAFd;UAGE,IAAI,EAAC,SAHP;UAIE,KAAK,EAAEC,OAJT;UAKE,QAAQ,EAAGa,CAAD,IAAOZ,UAAU,CAACY,CAAC,CAACC,aAAF,CAAgBC,OAAjB;QAL7B;MADF,EAJF,eAcE,KAAC,KAAD;QAAO,KAAK,EAAC,UAAb;QAAA,uBACE,KAAC,KAAD;UACE,EAAE,EAAC,gBADL;UAEE,KAAK,EAAEJ,QAFT;UAGE,QAAQ,MAHV;UAIE,UAAU,eACR,MAAC,eAAD;YAAiB,OAAO,EAAC,SAAzB;YAAmC,OAAO,EAAE,MAAMA,QAAlD;YAA4D,eAAe,EAAEN,cAA7E;YAAA,0CACE,KAAC,IAAD;cAAM,IAAI,EAAC;YAAX,EADF;UAAA;QALJ;MADF,EAdF;IAAA;EADF,EADF;AA+BD,CAvDM"},"metadata":{},"sourceType":"module"}