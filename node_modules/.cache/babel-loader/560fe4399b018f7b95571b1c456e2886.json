{"ast":null,"code":"var _h;\n\nimport React from 'react';\nimport { InlineFormLabel, LegacyForms } from '@grafana/ui';\nimport { useUniqueId } from '../../influxdb/components/useUniqueId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst {\n  Select,\n  Input\n} = LegacyForms;\nconst tsdbVersions = [{\n  label: '<=2.1',\n  value: 1\n}, {\n  label: '==2.2',\n  value: 2\n}, {\n  label: '==2.3',\n  value: 3\n}];\nconst tsdbResolutions = [{\n  label: 'second',\n  value: 1\n}, {\n  label: 'millisecond',\n  value: 2\n}];\nexport const OpenTsdbDetails = props => {\n  var _tsdbVersions$find, _tsdbResolutions$find, _value$jsonData$looku;\n\n  const {\n    onChange,\n    value\n  } = props;\n  const idSuffix = useUniqueId();\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h5\", {\n      children: \"OpenTSDB settings\"\n    })), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form\",\n      children: [/*#__PURE__*/_jsx(InlineFormLabel, {\n        width: 7,\n        htmlFor: `select-version-${idSuffix}`,\n        children: \"Version\"\n      }), /*#__PURE__*/_jsx(Select, {\n        inputId: `select-version-${idSuffix}`,\n        options: tsdbVersions,\n        value: (_tsdbVersions$find = tsdbVersions.find(version => version.value === value.jsonData.tsdbVersion)) !== null && _tsdbVersions$find !== void 0 ? _tsdbVersions$find : tsdbVersions[0],\n        onChange: onSelectChangeHandler('tsdbVersion', value, onChange)\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form\",\n      children: [/*#__PURE__*/_jsx(InlineFormLabel, {\n        width: 7,\n        htmlFor: `select-resolution-${idSuffix}`,\n        children: \"Resolution\"\n      }), /*#__PURE__*/_jsx(Select, {\n        inputId: `select-resolution-${idSuffix}`,\n        options: tsdbResolutions,\n        value: (_tsdbResolutions$find = tsdbResolutions.find(resolution => resolution.value === value.jsonData.tsdbResolution)) !== null && _tsdbResolutions$find !== void 0 ? _tsdbResolutions$find : tsdbResolutions[0],\n        onChange: onSelectChangeHandler('tsdbResolution', value, onChange)\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form\",\n      children: [/*#__PURE__*/_jsx(InlineFormLabel, {\n        width: 7,\n        htmlFor: `lookup-input-${idSuffix}`,\n        children: \"Lookup limit\"\n      }), /*#__PURE__*/_jsx(Input, {\n        id: `lookup-input-${idSuffix}`,\n        type: \"number\",\n        value: (_value$jsonData$looku = value.jsonData.lookupLimit) !== null && _value$jsonData$looku !== void 0 ? _value$jsonData$looku : 1000,\n        onChange: onInputChangeHandler('lookupLimit', value, onChange)\n      })]\n    })]\n  });\n};\n\nconst onSelectChangeHandler = (key, value, onChange) => newValue => {\n  onChange(Object.assign({}, value, {\n    jsonData: Object.assign({}, value.jsonData, {\n      [key]: newValue.value\n    })\n  }));\n};\n\nconst onInputChangeHandler = (key, value, onChange) => event => {\n  onChange(Object.assign({}, value, {\n    jsonData: Object.assign({}, value.jsonData, {\n      [key]: event.currentTarget.value\n    })\n  }));\n};","map":{"version":3,"names":["React","InlineFormLabel","LegacyForms","useUniqueId","Select","Input","tsdbVersions","label","value","tsdbResolutions","OpenTsdbDetails","props","onChange","idSuffix","find","version","jsonData","tsdbVersion","onSelectChangeHandler","resolution","tsdbResolution","lookupLimit","onInputChangeHandler","key","newValue","event","currentTarget"],"sources":["/home/soula/grafana/public/app/plugins/datasource/opentsdb/components/OpenTsdbDetails.tsx"],"sourcesContent":["import React, { SyntheticEvent } from 'react';\n\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, LegacyForms } from '@grafana/ui';\n\nimport { useUniqueId } from '../../influxdb/components/useUniqueId';\nimport { OpenTsdbOptions } from '../types';\n\nconst { Select, Input } = LegacyForms;\n\nconst tsdbVersions = [\n  { label: '<=2.1', value: 1 },\n  { label: '==2.2', value: 2 },\n  { label: '==2.3', value: 3 },\n];\n\nconst tsdbResolutions = [\n  { label: 'second', value: 1 },\n  { label: 'millisecond', value: 2 },\n];\n\ninterface Props {\n  value: DataSourceSettings<OpenTsdbOptions>;\n  onChange: (value: DataSourceSettings<OpenTsdbOptions>) => void;\n}\n\nexport const OpenTsdbDetails = (props: Props) => {\n  const { onChange, value } = props;\n\n  const idSuffix = useUniqueId();\n\n  return (\n    <>\n      <h5>OpenTSDB settings</h5>\n      <div className=\"gf-form\">\n        <InlineFormLabel width={7} htmlFor={`select-version-${idSuffix}`}>\n          Version\n        </InlineFormLabel>\n        <Select\n          inputId={`select-version-${idSuffix}`}\n          options={tsdbVersions}\n          value={tsdbVersions.find((version) => version.value === value.jsonData.tsdbVersion) ?? tsdbVersions[0]}\n          onChange={onSelectChangeHandler('tsdbVersion', value, onChange)}\n        />\n      </div>\n      <div className=\"gf-form\">\n        <InlineFormLabel width={7} htmlFor={`select-resolution-${idSuffix}`}>\n          Resolution\n        </InlineFormLabel>\n        <Select\n          inputId={`select-resolution-${idSuffix}`}\n          options={tsdbResolutions}\n          value={\n            tsdbResolutions.find((resolution) => resolution.value === value.jsonData.tsdbResolution) ??\n            tsdbResolutions[0]\n          }\n          onChange={onSelectChangeHandler('tsdbResolution', value, onChange)}\n        />\n      </div>\n      <div className=\"gf-form\">\n        <InlineFormLabel width={7} htmlFor={`lookup-input-${idSuffix}`}>\n          Lookup limit\n        </InlineFormLabel>\n        <Input\n          id={`lookup-input-${idSuffix}`}\n          type=\"number\"\n          value={value.jsonData.lookupLimit ?? 1000}\n          onChange={onInputChangeHandler('lookupLimit', value, onChange)}\n        />\n      </div>\n    </>\n  );\n};\n\nconst onSelectChangeHandler =\n  (key: keyof OpenTsdbOptions, value: Props['value'], onChange: Props['onChange']) => (newValue: SelectableValue) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: newValue.value,\n      },\n    });\n  };\n\nconst onInputChangeHandler =\n  (key: keyof OpenTsdbOptions, value: Props['value'], onChange: Props['onChange']) =>\n  (event: SyntheticEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: event.currentTarget.value,\n      },\n    });\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}