{"ast":null,"code":"const _excluded = [\"data\", \"config\", \"onClose\", \"timeZone\", \"replaceVariables\"],\n      _excluded2 = [\"selection\", \"timeZone\", \"defaultItems\", \"replaceVariables\", \"data\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css as cssCore, Global } from '@emotion/react';\nimport React, { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useClickAway } from 'react-use';\nimport { getFieldDisplayName } from '@grafana/data';\nimport { ContextMenu, GraphContextMenuHeader, MenuGroup, MenuItem } from '@grafana/ui';\nimport { pluginLog } from '@grafana/ui/src/components/uPlot/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ContextMenuPlugin = _ref => {\n  let {\n    data,\n    config,\n    onClose,\n    timeZone,\n    replaceVariables\n  } = _ref,\n      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const plotCanvas = useRef();\n  const [coords, setCoords] = useState(null);\n  const [point, setPoint] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const openMenu = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n  const closeMenu = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  const clearSelection = useCallback(() => {\n    pluginLog('ContextMenuPlugin', false, 'clearing click selection');\n    setPoint(null);\n  }, [setPoint]); // Add uPlot hooks to the config, or re-add when the config changed\n\n  useLayoutEffect(() => {\n    let bbox = undefined;\n\n    const onMouseCapture = e => {\n      let update = {\n        viewport: {\n          x: e.clientX,\n          y: e.clientY\n        },\n        plotCanvas: {\n          x: 0,\n          y: 0\n        }\n      };\n\n      if (bbox) {\n        update = Object.assign({}, update, {\n          plotCanvas: {\n            x: e.clientX - bbox.left,\n            y: e.clientY - bbox.top\n          }\n        });\n      }\n\n      setCoords(update);\n    }; // cache uPlot plotting area bounding box\n\n\n    config.addHook('syncRect', (u, rect) => {\n      bbox = rect;\n    });\n    config.addHook('init', u => {\n      var _plotCanvas$current, _plotCanvas$current2, _plotCanvas$current3, _plotCanvas$current4;\n\n      const canvas = u.over;\n      plotCanvas.current = canvas || undefined;\n      (_plotCanvas$current = plotCanvas.current) === null || _plotCanvas$current === void 0 ? void 0 : _plotCanvas$current.addEventListener('mousedown', onMouseCapture);\n      pluginLog('ContextMenuPlugin', false, 'init'); // for naive click&drag check\n\n      let isClick = false; // REF: https://github.com/leeoniya/uPlot/issues/239\n\n      let pts = Array.from(u.root.querySelectorAll('.u-cursor-pt'));\n      (_plotCanvas$current2 = plotCanvas.current) === null || _plotCanvas$current2 === void 0 ? void 0 : _plotCanvas$current2.addEventListener('mousedown', () => {\n        isClick = true;\n      });\n      (_plotCanvas$current3 = plotCanvas.current) === null || _plotCanvas$current3 === void 0 ? void 0 : _plotCanvas$current3.addEventListener('mousemove', () => {\n        isClick = false;\n      }); // TODO: remove listeners on unmount\n\n      (_plotCanvas$current4 = plotCanvas.current) === null || _plotCanvas$current4 === void 0 ? void 0 : _plotCanvas$current4.addEventListener('mouseup', e => {\n        // ignore cmd+click, this is handled by annotation editor\n        if (!isClick || e.metaKey || e.ctrlKey) {\n          setPoint(null);\n          return;\n        }\n\n        isClick = true;\n\n        if (e.target) {\n          const target = e.target;\n\n          if (!target.classList.contains('u-cursor-pt')) {\n            pluginLog('ContextMenuPlugin', false, 'canvas click');\n            setPoint({\n              seriesIdx: null,\n              dataIdx: null\n            });\n          }\n        }\n\n        openMenu();\n      });\n\n      if (pts.length > 0) {\n        pts.forEach((pt, i) => {\n          // TODO: remove listeners on unmount\n          pt.addEventListener('click', () => {\n            const seriesIdx = i + 1;\n            const dataIdx = u.cursor.idx;\n            pluginLog('ContextMenuPlugin', false, seriesIdx, dataIdx);\n            setPoint({\n              seriesIdx,\n              dataIdx: dataIdx !== null && dataIdx !== void 0 ? dataIdx : null\n            });\n          });\n        });\n      }\n    });\n  }, [config, openMenu, setCoords, setPoint]);\n  const defaultItems = useMemo(() => {\n    return otherProps.defaultItems ? otherProps.defaultItems.map(i => {\n      return Object.assign({}, i, {\n        items: i.items.map(j => {\n          return Object.assign({}, j, {\n            onClick: e => {\n              if (!coords) {\n                return;\n              }\n\n              if (j.onClick) {\n                j.onClick(e, {\n                  coords\n                });\n              }\n            }\n          });\n        })\n      });\n    }) : [];\n  }, [coords, otherProps.defaultItems]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Global, {\n      styles: cssCore`\n        .uplot .u-cursor-pt {\n          pointer-events: auto !important;\n        }\n      `\n    }), isOpen && coords && /*#__PURE__*/_jsx(ContextMenuView, {\n      data: data,\n      defaultItems: defaultItems,\n      timeZone: timeZone,\n      selection: {\n        point,\n        coords\n      },\n      replaceVariables: replaceVariables,\n      onClose: () => {\n        clearSelection();\n        closeMenu();\n\n        if (onClose) {\n          onClose();\n        }\n      }\n    })]\n  });\n};\nexport const ContextMenuView = _ref2 => {\n  let {\n    selection,\n    defaultItems,\n    data\n  } = _ref2,\n      otherProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  const ref = useRef(null);\n\n  const onClose = () => {\n    if (otherProps.onClose) {\n      otherProps.onClose();\n    }\n  };\n\n  useClickAway(ref, () => {\n    onClose();\n  });\n  const xField = data.fields[0];\n\n  if (!xField) {\n    return null;\n  }\n\n  const items = defaultItems ? [...defaultItems] : [];\n\n  let renderHeader = () => null;\n\n  if (selection.point) {\n    const {\n      seriesIdx,\n      dataIdx\n    } = selection.point;\n    const xFieldFmt = xField.display;\n\n    if (seriesIdx && dataIdx !== null) {\n      const field = data.fields[seriesIdx];\n      const displayValue = field.display(field.values.get(dataIdx));\n      const hasLinks = field.config.links && field.config.links.length > 0;\n\n      if (hasLinks) {\n        if (field.getLinks) {\n          items.push({\n            items: field.getLinks({\n              valueRowIndex: dataIdx\n            }).map(link => {\n              return {\n                label: link.title,\n                ariaLabel: link.title,\n                url: link.href,\n                target: link.target,\n                icon: `${link.target === '_self' ? 'link' : 'external-link-alt'}`,\n                onClick: link.onClick\n              };\n            })\n          });\n        }\n      } // eslint-disable-next-line react/display-name\n\n\n      renderHeader = () => /*#__PURE__*/_jsx(GraphContextMenuHeader, {\n        timestamp: xFieldFmt(xField.values.get(dataIdx)).text,\n        displayValue: displayValue,\n        seriesColor: displayValue.color,\n        displayName: getFieldDisplayName(field, data)\n      });\n    }\n  }\n\n  const renderMenuGroupItems = () => {\n    return items === null || items === void 0 ? void 0 : items.map((group, index) => /*#__PURE__*/_jsx(MenuGroup, {\n      label: group.label,\n      children: (group.items || []).map(item => /*#__PURE__*/_jsx(MenuItem, {\n        url: item.url,\n        label: item.label,\n        target: item.target,\n        icon: item.icon,\n        active: item.active,\n        onClick: item.onClick\n      }, item.label))\n    }, `${group.label}${index}`));\n  };\n\n  return /*#__PURE__*/_jsx(ContextMenu, {\n    renderMenuItems: renderMenuGroupItems,\n    renderHeader: renderHeader,\n    x: selection.coords.viewport.x,\n    y: selection.coords.viewport.y,\n    onClose: onClose\n  });\n};","map":{"version":3,"names":["css","cssCore","Global","React","useCallback","useLayoutEffect","useMemo","useRef","useState","useClickAway","getFieldDisplayName","ContextMenu","GraphContextMenuHeader","MenuGroup","MenuItem","pluginLog","ContextMenuPlugin","data","config","onClose","timeZone","replaceVariables","otherProps","plotCanvas","coords","setCoords","point","setPoint","isOpen","setIsOpen","openMenu","closeMenu","clearSelection","bbox","undefined","onMouseCapture","e","update","viewport","x","clientX","y","clientY","left","top","addHook","u","rect","canvas","over","current","addEventListener","isClick","pts","Array","from","root","querySelectorAll","metaKey","ctrlKey","target","classList","contains","seriesIdx","dataIdx","length","forEach","pt","i","cursor","idx","defaultItems","map","items","j","onClick","ContextMenuView","selection","ref","xField","fields","renderHeader","xFieldFmt","display","field","displayValue","values","get","hasLinks","links","getLinks","push","valueRowIndex","link","label","title","ariaLabel","url","href","icon","text","color","renderMenuGroupItems","group","index","item","active"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/plugins/ContextMenuPlugin.tsx"],"sourcesContent":["import { css as cssCore, Global } from '@emotion/react';\nimport React, { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useClickAway } from 'react-use';\n\nimport { CartesianCoords2D, DataFrame, getFieldDisplayName, InterpolateFunction, TimeZone } from '@grafana/data';\nimport {\n  ContextMenu,\n  GraphContextMenuHeader,\n  IconName,\n  MenuItemProps,\n  MenuItemsGroup,\n  MenuGroup,\n  MenuItem,\n  UPlotConfigBuilder,\n} from '@grafana/ui';\nimport { pluginLog } from '@grafana/ui/src/components/uPlot/utils';\n\ntype ContextMenuSelectionCoords = { viewport: CartesianCoords2D; plotCanvas: CartesianCoords2D };\ntype ContextMenuSelectionPoint = { seriesIdx: number | null; dataIdx: number | null };\n\nexport interface ContextMenuItemClickPayload {\n  coords: ContextMenuSelectionCoords;\n}\n\ninterface ContextMenuPluginProps {\n  data: DataFrame;\n  config: UPlotConfigBuilder;\n  defaultItems?: Array<MenuItemsGroup<ContextMenuItemClickPayload>>;\n  timeZone: TimeZone;\n  onOpen?: () => void;\n  onClose?: () => void;\n  replaceVariables?: InterpolateFunction;\n}\n\nexport const ContextMenuPlugin: React.FC<ContextMenuPluginProps> = ({\n  data,\n  config,\n  onClose,\n  timeZone,\n  replaceVariables,\n  ...otherProps\n}) => {\n  const plotCanvas = useRef<HTMLDivElement>();\n  const [coords, setCoords] = useState<ContextMenuSelectionCoords | null>(null);\n  const [point, setPoint] = useState<ContextMenuSelectionPoint | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openMenu = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const closeMenu = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const clearSelection = useCallback(() => {\n    pluginLog('ContextMenuPlugin', false, 'clearing click selection');\n    setPoint(null);\n  }, [setPoint]);\n\n  // Add uPlot hooks to the config, or re-add when the config changed\n  useLayoutEffect(() => {\n    let bbox: DOMRect | undefined = undefined;\n\n    const onMouseCapture = (e: MouseEvent) => {\n      let update = {\n        viewport: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n        plotCanvas: {\n          x: 0,\n          y: 0,\n        },\n      };\n      if (bbox) {\n        update = {\n          ...update,\n          plotCanvas: {\n            x: e.clientX - bbox.left,\n            y: e.clientY - bbox.top,\n          },\n        };\n      }\n      setCoords(update);\n    };\n\n    // cache uPlot plotting area bounding box\n    config.addHook('syncRect', (u, rect) => {\n      bbox = rect;\n    });\n\n    config.addHook('init', (u) => {\n      const canvas = u.over;\n      plotCanvas.current = canvas || undefined;\n      plotCanvas.current?.addEventListener('mousedown', onMouseCapture);\n\n      pluginLog('ContextMenuPlugin', false, 'init');\n      // for naive click&drag check\n      let isClick = false;\n\n      // REF: https://github.com/leeoniya/uPlot/issues/239\n      let pts = Array.from(u.root.querySelectorAll<HTMLDivElement>('.u-cursor-pt'));\n\n      plotCanvas.current?.addEventListener('mousedown', () => {\n        isClick = true;\n      });\n\n      plotCanvas.current?.addEventListener('mousemove', () => {\n        isClick = false;\n      });\n\n      // TODO: remove listeners on unmount\n      plotCanvas.current?.addEventListener('mouseup', (e: MouseEvent) => {\n        // ignore cmd+click, this is handled by annotation editor\n        if (!isClick || e.metaKey || e.ctrlKey) {\n          setPoint(null);\n          return;\n        }\n        isClick = true;\n\n        if (e.target) {\n          const target = e.target as HTMLElement;\n          if (!target.classList.contains('u-cursor-pt')) {\n            pluginLog('ContextMenuPlugin', false, 'canvas click');\n            setPoint({ seriesIdx: null, dataIdx: null });\n          }\n        }\n\n        openMenu();\n      });\n\n      if (pts.length > 0) {\n        pts.forEach((pt, i) => {\n          // TODO: remove listeners on unmount\n          pt.addEventListener('click', () => {\n            const seriesIdx = i + 1;\n            const dataIdx = u.cursor.idx;\n            pluginLog('ContextMenuPlugin', false, seriesIdx, dataIdx);\n            setPoint({ seriesIdx, dataIdx: dataIdx ?? null });\n          });\n        });\n      }\n    });\n  }, [config, openMenu, setCoords, setPoint]);\n\n  const defaultItems = useMemo(() => {\n    return otherProps.defaultItems\n      ? otherProps.defaultItems.map((i) => {\n          return {\n            ...i,\n            items: i.items.map((j) => {\n              return {\n                ...j,\n                onClick: (e?: React.SyntheticEvent<HTMLElement>) => {\n                  if (!coords) {\n                    return;\n                  }\n                  if (j.onClick) {\n                    j.onClick(e, { coords });\n                  }\n                },\n              };\n            }),\n          };\n        })\n      : [];\n  }, [coords, otherProps.defaultItems]);\n\n  return (\n    <>\n      <Global\n        styles={cssCore`\n        .uplot .u-cursor-pt {\n          pointer-events: auto !important;\n        }\n      `}\n      />\n      {isOpen && coords && (\n        <ContextMenuView\n          data={data}\n          defaultItems={defaultItems}\n          timeZone={timeZone}\n          selection={{ point, coords }}\n          replaceVariables={replaceVariables}\n          onClose={() => {\n            clearSelection();\n            closeMenu();\n            if (onClose) {\n              onClose();\n            }\n          }}\n        />\n      )}\n    </>\n  );\n};\n\ninterface ContextMenuProps {\n  data: DataFrame;\n  defaultItems?: MenuItemsGroup[];\n  timeZone: TimeZone;\n  onClose?: () => void;\n  selection: {\n    point?: { seriesIdx: number | null; dataIdx: number | null } | null;\n    coords: { plotCanvas: CartesianCoords2D; viewport: CartesianCoords2D };\n  };\n  replaceVariables?: InterpolateFunction;\n}\n\nexport const ContextMenuView: React.FC<ContextMenuProps> = ({\n  selection,\n  timeZone,\n  defaultItems,\n  replaceVariables,\n  data,\n  ...otherProps\n}) => {\n  const ref = useRef(null);\n\n  const onClose = () => {\n    if (otherProps.onClose) {\n      otherProps.onClose();\n    }\n  };\n\n  useClickAway(ref, () => {\n    onClose();\n  });\n\n  const xField = data.fields[0];\n\n  if (!xField) {\n    return null;\n  }\n  const items = defaultItems ? [...defaultItems] : [];\n  let renderHeader: () => JSX.Element | null = () => null;\n\n  if (selection.point) {\n    const { seriesIdx, dataIdx } = selection.point;\n    const xFieldFmt = xField.display!;\n\n    if (seriesIdx && dataIdx !== null) {\n      const field = data.fields[seriesIdx];\n\n      const displayValue = field.display!(field.values.get(dataIdx));\n\n      const hasLinks = field.config.links && field.config.links.length > 0;\n\n      if (hasLinks) {\n        if (field.getLinks) {\n          items.push({\n            items: field\n              .getLinks({\n                valueRowIndex: dataIdx,\n              })\n              .map<MenuItemProps>((link) => {\n                return {\n                  label: link.title,\n                  ariaLabel: link.title,\n                  url: link.href,\n                  target: link.target,\n                  icon: `${link.target === '_self' ? 'link' : 'external-link-alt'}` as IconName,\n                  onClick: link.onClick,\n                };\n              }),\n          });\n        }\n      }\n\n      // eslint-disable-next-line react/display-name\n      renderHeader = () => (\n        <GraphContextMenuHeader\n          timestamp={xFieldFmt(xField.values.get(dataIdx)).text}\n          displayValue={displayValue}\n          seriesColor={displayValue.color!}\n          displayName={getFieldDisplayName(field, data)}\n        />\n      );\n    }\n  }\n\n  const renderMenuGroupItems = () => {\n    return items?.map((group, index) => (\n      <MenuGroup key={`${group.label}${index}`} label={group.label}>\n        {(group.items || []).map((item) => (\n          <MenuItem\n            key={item.label}\n            url={item.url}\n            label={item.label}\n            target={item.target}\n            icon={item.icon}\n            active={item.active}\n            onClick={item.onClick}\n          />\n        ))}\n      </MenuGroup>\n    ));\n  };\n\n  return (\n    <ContextMenu\n      renderMenuItems={renderMenuGroupItems}\n      renderHeader={renderHeader}\n      x={selection.coords.viewport.x}\n      y={selection.coords.viewport.y}\n      onClose={onClose}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}