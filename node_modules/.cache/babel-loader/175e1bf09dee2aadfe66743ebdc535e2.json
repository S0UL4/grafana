{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { PanelHeaderMenuItem } from './PanelHeaderMenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class PanelHeaderMenu extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderItems\", (menu, isSubMenu = false) => {\n      return /*#__PURE__*/_jsx(\"ul\", {\n        className: \"dropdown-menu dropdown-menu--menu panel-menu\",\n        role: isSubMenu ? '' : 'menu',\n        children: menu.map((menuItem, idx) => {\n          return /*#__PURE__*/_jsx(PanelHeaderMenuItem, {\n            type: menuItem.type,\n            text: menuItem.text,\n            iconClassName: menuItem.iconClassName,\n            onClick: menuItem.onClick,\n            shortcut: menuItem.shortcut,\n            children: menuItem.subMenu && this.renderItems(menuItem.subMenu, true)\n          }, `${menuItem.text}${idx}`);\n        })\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-menu-container dropdown open\",\n      children: this.renderItems(this.props.items)\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","PanelHeaderMenuItem","PanelHeaderMenu","menu","isSubMenu","map","menuItem","idx","type","text","iconClassName","onClick","shortcut","subMenu","renderItems","render","props","items"],"sources":["/home/soula/grafana/public/app/features/dashboard/dashgrid/PanelHeader/PanelHeaderMenu.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { PanelMenuItem } from '@grafana/data';\n\nimport { PanelHeaderMenuItem } from './PanelHeaderMenuItem';\n\nexport interface Props {\n  items: PanelMenuItem[];\n}\n\nexport class PanelHeaderMenu extends PureComponent<Props> {\n  renderItems = (menu: PanelMenuItem[], isSubMenu = false) => {\n    return (\n      <ul className=\"dropdown-menu dropdown-menu--menu panel-menu\" role={isSubMenu ? '' : 'menu'}>\n        {menu.map((menuItem, idx: number) => {\n          return (\n            <PanelHeaderMenuItem\n              key={`${menuItem.text}${idx}`}\n              type={menuItem.type}\n              text={menuItem.text}\n              iconClassName={menuItem.iconClassName}\n              onClick={menuItem.onClick}\n              shortcut={menuItem.shortcut}\n            >\n              {menuItem.subMenu && this.renderItems(menuItem.subMenu, true)}\n            </PanelHeaderMenuItem>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  render() {\n    return <div className=\"panel-menu-container dropdown open\">{this.renderItems(this.props.items)}</div>;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAIA,SAASC,mBAAT,QAAoC,uBAApC;;AAMA,OAAO,MAAMC,eAAN,SAA8BF,aAA9B,CAAmD;EAAA;IAAA;;IAAA,qCAC1C,CAACG,IAAD,EAAwBC,SAAS,GAAG,KAApC,KAA8C;MAC1D,oBACE;QAAI,SAAS,EAAC,8CAAd;QAA6D,IAAI,EAAEA,SAAS,GAAG,EAAH,GAAQ,MAApF;QAAA,UACGD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,GAAX,KAA2B;UACnC,oBACE,KAAC,mBAAD;YAEE,IAAI,EAAED,QAAQ,CAACE,IAFjB;YAGE,IAAI,EAAEF,QAAQ,CAACG,IAHjB;YAIE,aAAa,EAAEH,QAAQ,CAACI,aAJ1B;YAKE,OAAO,EAAEJ,QAAQ,CAACK,OALpB;YAME,QAAQ,EAAEL,QAAQ,CAACM,QANrB;YAAA,UAQGN,QAAQ,CAACO,OAAT,IAAoB,KAAKC,WAAL,CAAiBR,QAAQ,CAACO,OAA1B,EAAmC,IAAnC;UARvB,GACQ,GAAEP,QAAQ,CAACG,IAAK,GAAEF,GAAI,EAD9B,CADF;QAYD,CAbA;MADH,EADF;IAkBD,CApBuD;EAAA;;EAsBxDQ,MAAM,GAAG;IACP,oBAAO;MAAK,SAAS,EAAC,oCAAf;MAAA,UAAqD,KAAKD,WAAL,CAAiB,KAAKE,KAAL,CAAWC,KAA5B;IAArD,EAAP;EACD;;AAxBuD"},"metadata":{},"sourceType":"module"}