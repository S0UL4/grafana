{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { InlineField, InlineFieldRow, InlineSwitch, useStyles2 } from '@grafana/ui';\nimport { LoadingIndicator } from '@grafana/ui/src/components/PanelChrome/LoadingIndicator';\nimport { AnnotationQueryFinished, AnnotationQueryStarted } from '../../../../types/events';\nimport { getDashboardQueryRunner } from '../../../query/state/DashboardQueryRunner/DashboardQueryRunner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AnnotationPicker = ({\n  annotation,\n  events,\n  onEnabledChanged\n}) => {\n  const [loading, setLoading] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  const onCancel = () => getDashboardQueryRunner().cancel(annotation);\n\n  useEffect(() => {\n    const started = events.getStream(AnnotationQueryStarted).subscribe({\n      next: event => {\n        if (event.payload === annotation) {\n          setLoading(true);\n        }\n      }\n    });\n    const stopped = events.getStream(AnnotationQueryFinished).subscribe({\n      next: event => {\n        if (event.payload === annotation) {\n          setLoading(false);\n        }\n      }\n    });\n    return () => {\n      started.unsubscribe();\n      stopped.unsubscribe();\n    };\n  });\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.annotation,\n    children: /*#__PURE__*/_jsxs(InlineFieldRow, {\n      children: [/*#__PURE__*/_jsx(InlineField, {\n        label: annotation.name,\n        disabled: loading,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          value: annotation.enable,\n          onChange: () => onEnabledChanged(annotation),\n          disabled: loading\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.indicator,\n        children: /*#__PURE__*/_jsx(LoadingIndicator, {\n          loading: loading,\n          onCancel: onCancel\n        })\n      })]\n    })\n  }, annotation.name);\n};\n\nfunction getStyles(theme) {\n  return {\n    annotation: css`\n      display: inline-block;\n      margin-right: ${theme.spacing(1)};\n\n      .fa-caret-down {\n        font-size: 75%;\n        padding-left: ${theme.spacing(1)};\n      }\n\n      .gf-form-inline .gf-form {\n        margin-bottom: 0;\n      }\n    `,\n    indicator: css`\n      align-self: center;\n      padding: 0 ${theme.spacing(0.5)};\n    `\n  };\n}","map":{"version":3,"names":["css","React","useEffect","useState","InlineField","InlineFieldRow","InlineSwitch","useStyles2","LoadingIndicator","AnnotationQueryFinished","AnnotationQueryStarted","getDashboardQueryRunner","AnnotationPicker","annotation","events","onEnabledChanged","loading","setLoading","styles","getStyles","onCancel","cancel","started","getStream","subscribe","next","event","payload","stopped","unsubscribe","name","enable","indicator","theme","spacing"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SubMenu/AnnotationPicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\n\nimport { AnnotationQuery, EventBus, GrafanaTheme2 } from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, useStyles2 } from '@grafana/ui';\nimport { LoadingIndicator } from '@grafana/ui/src/components/PanelChrome/LoadingIndicator';\n\nimport { AnnotationQueryFinished, AnnotationQueryStarted } from '../../../../types/events';\nimport { getDashboardQueryRunner } from '../../../query/state/DashboardQueryRunner/DashboardQueryRunner';\n\nexport interface AnnotationPickerProps {\n  events: EventBus;\n  annotation: AnnotationQuery;\n  onEnabledChanged: (annotation: AnnotationQuery) => void;\n}\n\nexport const AnnotationPicker = ({ annotation, events, onEnabledChanged }: AnnotationPickerProps): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const styles = useStyles2(getStyles);\n  const onCancel = () => getDashboardQueryRunner().cancel(annotation);\n\n  useEffect(() => {\n    const started = events.getStream(AnnotationQueryStarted).subscribe({\n      next: (event) => {\n        if (event.payload === annotation) {\n          setLoading(true);\n        }\n      },\n    });\n    const stopped = events.getStream(AnnotationQueryFinished).subscribe({\n      next: (event) => {\n        if (event.payload === annotation) {\n          setLoading(false);\n        }\n      },\n    });\n\n    return () => {\n      started.unsubscribe();\n      stopped.unsubscribe();\n    };\n  });\n\n  return (\n    <div key={annotation.name} className={styles.annotation}>\n      <InlineFieldRow>\n        <InlineField label={annotation.name} disabled={loading}>\n          <InlineSwitch value={annotation.enable} onChange={() => onEnabledChanged(annotation)} disabled={loading} />\n        </InlineField>\n        <div className={styles.indicator}>\n          <LoadingIndicator loading={loading} onCancel={onCancel} />\n        </div>\n      </InlineFieldRow>\n    </div>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    annotation: css`\n      display: inline-block;\n      margin-right: ${theme.spacing(1)};\n\n      .fa-caret-down {\n        font-size: 75%;\n        padding-left: ${theme.spacing(1)};\n      }\n\n      .gf-form-inline .gf-form {\n        margin-bottom: 0;\n      }\n    `,\n    indicator: css`\n      align-self: center;\n      padding: 0 ${theme.spacing(0.5)};\n    `,\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,EAAoDC,UAApD,QAAsE,aAAtE;AACA,SAASC,gBAAT,QAAiC,yDAAjC;AAEA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,0BAAhE;AACA,SAASC,uBAAT,QAAwC,gEAAxC;;;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,UAAF;EAAcC,MAAd;EAAsBC;AAAtB,CAAD,KAAkF;EAChH,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMe,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;;EACA,MAAMC,QAAQ,GAAG,MAAMT,uBAAuB,GAAGU,MAA1B,CAAiCR,UAAjC,CAAvB;;EAEAX,SAAS,CAAC,MAAM;IACd,MAAMoB,OAAO,GAAGR,MAAM,CAACS,SAAP,CAAiBb,sBAAjB,EAAyCc,SAAzC,CAAmD;MACjEC,IAAI,EAAGC,KAAD,IAAW;QACf,IAAIA,KAAK,CAACC,OAAN,KAAkBd,UAAtB,EAAkC;UAChCI,UAAU,CAAC,IAAD,CAAV;QACD;MACF;IALgE,CAAnD,CAAhB;IAOA,MAAMW,OAAO,GAAGd,MAAM,CAACS,SAAP,CAAiBd,uBAAjB,EAA0Ce,SAA1C,CAAoD;MAClEC,IAAI,EAAGC,KAAD,IAAW;QACf,IAAIA,KAAK,CAACC,OAAN,KAAkBd,UAAtB,EAAkC;UAChCI,UAAU,CAAC,KAAD,CAAV;QACD;MACF;IALiE,CAApD,CAAhB;IAQA,OAAO,MAAM;MACXK,OAAO,CAACO,WAAR;MACAD,OAAO,CAACC,WAAR;IACD,CAHD;EAID,CApBQ,CAAT;EAsBA,oBACE;IAA2B,SAAS,EAAEX,MAAM,CAACL,UAA7C;IAAA,uBACE,MAAC,cAAD;MAAA,wBACE,KAAC,WAAD;QAAa,KAAK,EAAEA,UAAU,CAACiB,IAA/B;QAAqC,QAAQ,EAAEd,OAA/C;QAAA,uBACE,KAAC,YAAD;UAAc,KAAK,EAAEH,UAAU,CAACkB,MAAhC;UAAwC,QAAQ,EAAE,MAAMhB,gBAAgB,CAACF,UAAD,CAAxE;UAAsF,QAAQ,EAAEG;QAAhG;MADF,EADF,eAIE;QAAK,SAAS,EAAEE,MAAM,CAACc,SAAvB;QAAA,uBACE,KAAC,gBAAD;UAAkB,OAAO,EAAEhB,OAA3B;UAAoC,QAAQ,EAAEI;QAA9C;MADF,EAJF;IAAA;EADF,GAAUP,UAAU,CAACiB,IAArB,CADF;AAYD,CAvCM;;AAyCP,SAASX,SAAT,CAAmBc,KAAnB,EAAyC;EACvC,OAAO;IACLpB,UAAU,EAAEb,GAAI;AACpB;AACA,sBAAsBiC,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACvC;AACA;AACA;AACA,wBAAwBD,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,KAbS;IAcLF,SAAS,EAAEhC,GAAI;AACnB;AACA,mBAAmBiC,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACtC;EAjBS,CAAP;AAmBD"},"metadata":{},"sourceType":"module"}