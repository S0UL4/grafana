{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { variableAdapters } from '../adapters';\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { getVariableTypes } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function VariableTypeSelect({\n  onChange,\n  type\n}) {\n  const options = useMemo(() => getVariableTypes(), []);\n  const value = useMemo(() => {\n    var _options$find;\n\n    return (_options$find = options.find(o => o.value === type)) !== null && _options$find !== void 0 ? _options$find : options[0];\n  }, [options, type]);\n  return /*#__PURE__*/_jsx(VariableSelectField, {\n    name: \"Type\",\n    value: value,\n    options: options,\n    onChange: onChange,\n    tooltip: variableAdapters.get(type).description,\n    testId: selectors.pages.Dashboard.Settings.Variables.Edit.General.generalTypeSelectV2\n  });\n}","map":{"version":3,"names":["React","useMemo","selectors","variableAdapters","VariableSelectField","getVariableTypes","VariableTypeSelect","onChange","type","options","value","find","o","get","description","pages","Dashboard","Settings","Variables","Edit","General","generalTypeSelectV2"],"sources":["/home/soula/grafana/public/app/features/variables/editor/VariableTypeSelect.tsx"],"sourcesContent":["import React, { PropsWithChildren, useMemo } from 'react';\n\nimport { SelectableValue, VariableType } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { variableAdapters } from '../adapters';\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { getVariableTypes } from '../utils';\n\ninterface Props {\n  onChange: (option: SelectableValue<VariableType>) => void;\n  type: VariableType;\n}\n\nexport function VariableTypeSelect({ onChange, type }: PropsWithChildren<Props>) {\n  const options = useMemo(() => getVariableTypes(), []);\n  const value = useMemo(() => options.find((o) => o.value === type) ?? options[0], [options, type]);\n\n  return (\n    <VariableSelectField\n      name=\"Type\"\n      value={value}\n      options={options}\n      onChange={onChange}\n      tooltip={variableAdapters.get(type).description}\n      testId={selectors.pages.Dashboard.Settings.Variables.Edit.General.generalTypeSelectV2}\n    />\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAmCC,OAAnC,QAAkD,OAAlD;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,gBAAT,QAAiC,UAAjC;;AAOA,OAAO,SAASC,kBAAT,CAA4B;EAAEC,QAAF;EAAYC;AAAZ,CAA5B,EAA0E;EAC/E,MAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMI,gBAAgB,EAAvB,EAA2B,EAA3B,CAAvB;EACA,MAAMK,KAAK,GAAGT,OAAO,CAAC;IAAA;;IAAA,wBAAMQ,OAAO,CAACE,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYF,IAAhC,CAAN,yDAA+CC,OAAO,CAAC,CAAD,CAAtD;EAAA,CAAD,EAA4D,CAACA,OAAD,EAAUD,IAAV,CAA5D,CAArB;EAEA,oBACE,KAAC,mBAAD;IACE,IAAI,EAAC,MADP;IAEE,KAAK,EAAEE,KAFT;IAGE,OAAO,EAAED,OAHX;IAIE,QAAQ,EAAEF,QAJZ;IAKE,OAAO,EAAEJ,gBAAgB,CAACU,GAAjB,CAAqBL,IAArB,EAA2BM,WALtC;IAME,MAAM,EAAEZ,SAAS,CAACa,KAAV,CAAgBC,SAAhB,CAA0BC,QAA1B,CAAmCC,SAAnC,CAA6CC,IAA7C,CAAkDC,OAAlD,CAA0DC;EANpE,EADF;AAUD"},"metadata":{},"sourceType":"module"}