{"ast":null,"code":"var _span;\n\nimport { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useDebounce } from 'react-use';\nimport { dateTime } from '@grafana/data';\nimport { Badge, useStyles2 } from '@grafana/ui';\nimport { useCombinedRuleNamespaces } from '../../hooks/useCombinedRuleNamespaces';\nimport { fetchAllPromAndRulerRulesAction } from '../../state/actions';\nimport { findAlertInstancesWithMatchers } from '../../utils/matchers';\nimport { isAlertingRule } from '../../utils/rules';\nimport { AlertLabels } from '../AlertLabels';\nimport { DynamicTable } from '../DynamicTable';\nimport { AlertStateTag } from '../rules/AlertStateTag';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const MatchedSilencedRules = () => {\n  var _matchedAlertRules$sl;\n\n  const [matchedAlertRules, setMatchedAlertRules] = useState([]);\n  const formApi = useFormContext();\n  const dispatch = useDispatch();\n  const {\n    watch\n  } = formApi;\n  const matchers = watch('matchers');\n  const styles = useStyles2(getStyles);\n  const columns = useColumns();\n  useEffect(() => {\n    dispatch(fetchAllPromAndRulerRulesAction());\n  }, [dispatch]);\n  const combinedNamespaces = useCombinedRuleNamespaces();\n  useDebounce(() => {\n    const matchedInstances = combinedNamespaces.flatMap(namespace => {\n      return namespace.groups.flatMap(group => {\n        return group.rules.map(combinedRule => combinedRule.promRule).filter(rule => isAlertingRule(rule)).flatMap(rule => {\n          var _rule$alerts;\n\n          return findAlertInstancesWithMatchers((_rule$alerts = rule.alerts) !== null && _rule$alerts !== void 0 ? _rule$alerts : [], matchers);\n        });\n      });\n    });\n    setMatchedAlertRules(matchedInstances);\n  }, 500, [combinedNamespaces, matchers]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"h4\", {\n      className: styles.title,\n      children: [\"Affected alert instances\", matchedAlertRules.length > 0 ? /*#__PURE__*/_jsx(Badge, {\n        className: styles.badge,\n        color: \"blue\",\n        text: matchedAlertRules.length\n      }) : null]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.table,\n      children: matchers.every(matcher => !matcher.value && !matcher.name) ? _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        children: \"Add a valid matcher to see affected alerts\"\n      })) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(DynamicTable, {\n          items: (_matchedAlertRules$sl = matchedAlertRules.slice(0, 5)) !== null && _matchedAlertRules$sl !== void 0 ? _matchedAlertRules$sl : [],\n          isExpandable: false,\n          cols: columns\n        }), matchedAlertRules.length > 5 && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.moreMatches,\n          children: [\"and \", matchedAlertRules.length - 5, \" more\"]\n        })]\n      })\n    })]\n  });\n};\n\nfunction useColumns() {\n  return [{\n    id: 'state',\n    label: 'State',\n    renderCell: function renderStateTag({\n      data: {\n        matchedInstance\n      }\n    }) {\n      return /*#__PURE__*/_jsx(AlertStateTag, {\n        state: matchedInstance.state\n      });\n    },\n    size: '160px'\n  }, {\n    id: 'labels',\n    label: 'Labels',\n    renderCell: function renderName({\n      data: {\n        matchedInstance\n      }\n    }) {\n      return /*#__PURE__*/_jsx(AlertLabels, {\n        labels: matchedInstance.labels\n      });\n    },\n    size: '250px'\n  }, {\n    id: 'created',\n    label: 'Created',\n    renderCell: function renderSummary({\n      data: {\n        matchedInstance\n      }\n    }) {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: matchedInstance.activeAt.startsWith('0001') ? '-' : dateTime(matchedInstance.activeAt).format('YYYY-MM-DD HH:mm:ss')\n      });\n    },\n    size: '400px'\n  }];\n}\n\nconst getStyles = theme => ({\n  table: css`\n    max-width: ${theme.breakpoints.values.lg}px;\n  `,\n  moreMatches: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n  title: css`\n    display: flex;\n    align-items: center;\n  `,\n  badge: css`\n    margin-left: ${theme.spacing(1)};\n  `\n});","map":{"version":3,"names":["css","React","useEffect","useState","useFormContext","useDispatch","useDebounce","dateTime","Badge","useStyles2","useCombinedRuleNamespaces","fetchAllPromAndRulerRulesAction","findAlertInstancesWithMatchers","isAlertingRule","AlertLabels","DynamicTable","AlertStateTag","MatchedSilencedRules","matchedAlertRules","setMatchedAlertRules","formApi","dispatch","watch","matchers","styles","getStyles","columns","useColumns","combinedNamespaces","matchedInstances","flatMap","namespace","groups","group","rules","map","combinedRule","promRule","filter","rule","alerts","title","length","badge","table","every","matcher","value","name","slice","moreMatches","id","label","renderCell","renderStateTag","data","matchedInstance","state","size","renderName","labels","renderSummary","activeAt","startsWith","format","theme","breakpoints","values","lg","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/silences/MatchedSilencedRules.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useDebounce } from 'react-use';\n\nimport { dateTime, GrafanaTheme2 } from '@grafana/data';\nimport { Badge, useStyles2 } from '@grafana/ui';\nimport { Alert, AlertingRule } from 'app/types/unified-alerting';\n\nimport { useCombinedRuleNamespaces } from '../../hooks/useCombinedRuleNamespaces';\nimport { fetchAllPromAndRulerRulesAction } from '../../state/actions';\nimport { MatcherFieldValue, SilenceFormFields } from '../../types/silence-form';\nimport { findAlertInstancesWithMatchers } from '../../utils/matchers';\nimport { isAlertingRule } from '../../utils/rules';\nimport { AlertLabels } from '../AlertLabels';\nimport { DynamicTable, DynamicTableColumnProps, DynamicTableItemProps } from '../DynamicTable';\nimport { AlertStateTag } from '../rules/AlertStateTag';\n\ntype MatchedRulesTableItemProps = DynamicTableItemProps<{\n  matchedInstance: Alert;\n}>;\ntype MatchedRulesTableColumnProps = DynamicTableColumnProps<{ matchedInstance: Alert }>;\n\nexport const MatchedSilencedRules = () => {\n  const [matchedAlertRules, setMatchedAlertRules] = useState<MatchedRulesTableItemProps[]>([]);\n  const formApi = useFormContext<SilenceFormFields>();\n  const dispatch = useDispatch();\n  const { watch } = formApi;\n  const matchers: MatcherFieldValue[] = watch('matchers');\n  const styles = useStyles2(getStyles);\n  const columns = useColumns();\n\n  useEffect(() => {\n    dispatch(fetchAllPromAndRulerRulesAction());\n  }, [dispatch]);\n\n  const combinedNamespaces = useCombinedRuleNamespaces();\n  useDebounce(\n    () => {\n      const matchedInstances = combinedNamespaces.flatMap((namespace) => {\n        return namespace.groups.flatMap((group) => {\n          return group.rules\n            .map((combinedRule) => combinedRule.promRule)\n            .filter((rule): rule is AlertingRule => isAlertingRule(rule))\n            .flatMap((rule) => findAlertInstancesWithMatchers(rule.alerts ?? [], matchers));\n        });\n      });\n      setMatchedAlertRules(matchedInstances);\n    },\n    500,\n    [combinedNamespaces, matchers]\n  );\n\n  return (\n    <div>\n      <h4 className={styles.title}>\n        Affected alert instances\n        {matchedAlertRules.length > 0 ? (\n          <Badge className={styles.badge} color=\"blue\" text={matchedAlertRules.length} />\n        ) : null}\n      </h4>\n      <div className={styles.table}>\n        {matchers.every((matcher) => !matcher.value && !matcher.name) ? (\n          <span>Add a valid matcher to see affected alerts</span>\n        ) : (\n          <>\n            <DynamicTable items={matchedAlertRules.slice(0, 5) ?? []} isExpandable={false} cols={columns} />\n            {matchedAlertRules.length > 5 && (\n              <div className={styles.moreMatches}>and {matchedAlertRules.length - 5} more</div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction useColumns(): MatchedRulesTableColumnProps[] {\n  return [\n    {\n      id: 'state',\n      label: 'State',\n      renderCell: function renderStateTag({ data: { matchedInstance } }) {\n        return <AlertStateTag state={matchedInstance.state} />;\n      },\n      size: '160px',\n    },\n    {\n      id: 'labels',\n      label: 'Labels',\n      renderCell: function renderName({ data: { matchedInstance } }) {\n        return <AlertLabels labels={matchedInstance.labels} />;\n      },\n      size: '250px',\n    },\n    {\n      id: 'created',\n      label: 'Created',\n      renderCell: function renderSummary({ data: { matchedInstance } }) {\n        return (\n          <>\n            {matchedInstance.activeAt.startsWith('0001')\n              ? '-'\n              : dateTime(matchedInstance.activeAt).format('YYYY-MM-DD HH:mm:ss')}\n          </>\n        );\n      },\n      size: '400px',\n    },\n  ];\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    max-width: ${theme.breakpoints.values.lg}px;\n  `,\n  moreMatches: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n  title: css`\n    display: flex;\n    align-items: center;\n  `,\n  badge: css`\n    margin-left: ${theme.spacing(1)};\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}