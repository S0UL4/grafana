{"ast":null,"code":"import { each } from 'lodash'; // @ts-ignore\n\nimport Drop from 'tether-drop';\nimport coreModule from 'app/angular/core_module';\nexport function infoPopover() {\n  return {\n    restrict: 'E',\n    template: `<icon name=\"'info-circle'\" style=\"margin-left: 10px;\" size=\"'xs'\"></icon>`,\n    transclude: true,\n    link: (scope, elem, attrs, ctrl, transclude) => {\n      const offset = attrs.offset || '0 -10px';\n      const position = attrs.position || 'right middle';\n      let classes = 'drop-help drop-hide-out-of-bounds';\n      const openOn = 'hover';\n      elem.addClass('gf-form-help-icon');\n\n      if (attrs.wide) {\n        classes += ' drop-wide';\n      }\n\n      if (attrs.mode) {\n        elem.addClass('gf-form-help-icon--' + attrs.mode);\n      }\n\n      transclude((clone, newScope) => {\n        const content = document.createElement('div');\n        content.className = 'markdown-html';\n        each(clone, node => {\n          content.appendChild(node);\n        });\n        const dropOptions = {\n          target: elem[0],\n          content: content,\n          position: position,\n          classes: classes,\n          openOn: openOn,\n          hoverOpenDelay: 400,\n          tetherOptions: {\n            offset: offset,\n            constraints: [{\n              to: 'window',\n              attachment: 'together',\n              pin: true\n            }]\n          }\n        }; // Create drop in next digest after directive content is rendered.\n\n        scope.$applyAsync(() => {\n          const drop = new Drop(dropOptions);\n          const unbind = scope.$on('$destroy', () => {\n            drop.destroy();\n            unbind();\n          });\n        });\n      });\n    }\n  };\n}\ncoreModule.directive('infoPopover', infoPopover);","map":{"version":3,"names":["each","Drop","coreModule","infoPopover","restrict","template","transclude","link","scope","elem","attrs","ctrl","offset","position","classes","openOn","addClass","wide","mode","clone","newScope","content","document","createElement","className","node","appendChild","dropOptions","target","hoverOpenDelay","tetherOptions","constraints","to","attachment","pin","$applyAsync","drop","unbind","$on","destroy","directive"],"sources":["/home/soula/grafana/public/app/angular/components/info_popover.ts"],"sourcesContent":["import { each } from 'lodash';\n// @ts-ignore\nimport Drop from 'tether-drop';\n\nimport coreModule from 'app/angular/core_module';\n\nexport function infoPopover() {\n  return {\n    restrict: 'E',\n    template: `<icon name=\"'info-circle'\" style=\"margin-left: 10px;\" size=\"'xs'\"></icon>`,\n    transclude: true,\n    link: (scope: any, elem: any, attrs: any, ctrl: any, transclude: any) => {\n      const offset = attrs.offset || '0 -10px';\n      const position = attrs.position || 'right middle';\n      let classes = 'drop-help drop-hide-out-of-bounds';\n      const openOn = 'hover';\n\n      elem.addClass('gf-form-help-icon');\n\n      if (attrs.wide) {\n        classes += ' drop-wide';\n      }\n\n      if (attrs.mode) {\n        elem.addClass('gf-form-help-icon--' + attrs.mode);\n      }\n\n      transclude((clone: any, newScope: any) => {\n        const content = document.createElement('div');\n        content.className = 'markdown-html';\n\n        each(clone, (node) => {\n          content.appendChild(node);\n        });\n\n        const dropOptions = {\n          target: elem[0],\n          content: content,\n          position: position,\n          classes: classes,\n          openOn: openOn,\n          hoverOpenDelay: 400,\n          tetherOptions: {\n            offset: offset,\n            constraints: [\n              {\n                to: 'window',\n                attachment: 'together',\n                pin: true,\n              },\n            ],\n          },\n        };\n\n        // Create drop in next digest after directive content is rendered.\n        scope.$applyAsync(() => {\n          const drop = new Drop(dropOptions);\n\n          const unbind = scope.$on('$destroy', () => {\n            drop.destroy();\n            unbind();\n          });\n        });\n      });\n    },\n  };\n}\n\ncoreModule.directive('infoPopover', infoPopover);\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,SAASC,WAAT,GAAuB;EAC5B,OAAO;IACLC,QAAQ,EAAE,GADL;IAELC,QAAQ,EAAG,2EAFN;IAGLC,UAAU,EAAE,IAHP;IAILC,IAAI,EAAE,CAACC,KAAD,EAAaC,IAAb,EAAwBC,KAAxB,EAAoCC,IAApC,EAA+CL,UAA/C,KAAmE;MACvE,MAAMM,MAAM,GAAGF,KAAK,CAACE,MAAN,IAAgB,SAA/B;MACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAN,IAAkB,cAAnC;MACA,IAAIC,OAAO,GAAG,mCAAd;MACA,MAAMC,MAAM,GAAG,OAAf;MAEAN,IAAI,CAACO,QAAL,CAAc,mBAAd;;MAEA,IAAIN,KAAK,CAACO,IAAV,EAAgB;QACdH,OAAO,IAAI,YAAX;MACD;;MAED,IAAIJ,KAAK,CAACQ,IAAV,EAAgB;QACdT,IAAI,CAACO,QAAL,CAAc,wBAAwBN,KAAK,CAACQ,IAA5C;MACD;;MAEDZ,UAAU,CAAC,CAACa,KAAD,EAAaC,QAAb,KAA+B;QACxC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;QACAF,OAAO,CAACG,SAAR,GAAoB,eAApB;QAEAxB,IAAI,CAACmB,KAAD,EAASM,IAAD,IAAU;UACpBJ,OAAO,CAACK,WAAR,CAAoBD,IAApB;QACD,CAFG,CAAJ;QAIA,MAAME,WAAW,GAAG;UAClBC,MAAM,EAAEnB,IAAI,CAAC,CAAD,CADM;UAElBY,OAAO,EAAEA,OAFS;UAGlBR,QAAQ,EAAEA,QAHQ;UAIlBC,OAAO,EAAEA,OAJS;UAKlBC,MAAM,EAAEA,MALU;UAMlBc,cAAc,EAAE,GANE;UAOlBC,aAAa,EAAE;YACblB,MAAM,EAAEA,MADK;YAEbmB,WAAW,EAAE,CACX;cACEC,EAAE,EAAE,QADN;cAEEC,UAAU,EAAE,UAFd;cAGEC,GAAG,EAAE;YAHP,CADW;UAFA;QAPG,CAApB,CARwC,CA2BxC;;QACA1B,KAAK,CAAC2B,WAAN,CAAkB,MAAM;UACtB,MAAMC,IAAI,GAAG,IAAInC,IAAJ,CAAS0B,WAAT,CAAb;UAEA,MAAMU,MAAM,GAAG7B,KAAK,CAAC8B,GAAN,CAAU,UAAV,EAAsB,MAAM;YACzCF,IAAI,CAACG,OAAL;YACAF,MAAM;UACP,CAHc,CAAf;QAID,CAPD;MAQD,CApCS,CAAV;IAqCD;EAzDI,CAAP;AA2DD;AAEDnC,UAAU,CAACsC,SAAX,CAAqB,aAArB,EAAoCrC,WAApC"},"metadata":{},"sourceType":"module"}