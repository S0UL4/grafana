{"ast":null,"code":"import React, { useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { Drawer, Tab, TabsBar } from '@grafana/ui';\nimport { backendSrv } from 'app/core/services/backend_srv';\nimport { jsonDiff } from '../VersionHistory/utils';\nimport { SaveDashboardDiff } from './SaveDashboardDiff';\nimport { SaveDashboardErrorProxy } from './SaveDashboardErrorProxy';\nimport { SaveDashboardAsForm } from './forms/SaveDashboardAsForm';\nimport { SaveDashboardForm } from './forms/SaveDashboardForm';\nimport { SaveProvisionedDashboardForm } from './forms/SaveProvisionedDashboardForm';\nimport { useDashboardSave } from './useDashboardSave';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SaveDashboardDrawer = ({\n  dashboard,\n  onDismiss,\n  onSaveSuccess,\n  isCopy\n}) => {\n  var _SaveDashboardAsForm, _SaveProvisionedDashb, _SaveDashboardForm;\n\n  const [options, setOptions] = useState({});\n  const isProvisioned = dashboard.meta.provisioned;\n  const isNew = dashboard.version === 0;\n  const previous = useAsync(async () => {\n    if (isNew) {\n      return undefined;\n    }\n\n    const result = await backendSrv.getDashboardByUid(dashboard.uid);\n    return result.dashboard;\n  }, [dashboard, isNew]);\n  const data = useMemo(() => {\n    const clone = dashboard.getSaveModelClone({\n      saveTimerange: Boolean(options.saveTimerange),\n      saveVariables: Boolean(options.saveVariables)\n    });\n\n    if (!previous.value) {\n      return {\n        clone,\n        diff: {},\n        diffCount: 0,\n        hasChanges: false\n      };\n    }\n\n    const cloneJSON = JSON.stringify(clone, null, 2);\n    const cloneSafe = JSON.parse(cloneJSON); // avoids undefined issues\n\n    const diff = jsonDiff(previous.value, cloneSafe);\n    let diffCount = 0;\n\n    for (const d of Object.values(diff)) {\n      diffCount += d.length;\n    }\n\n    return {\n      clone,\n      diff,\n      diffCount,\n      hasChanges: diffCount > 0 && !isNew\n    };\n  }, [dashboard, previous.value, options, isNew]);\n  const [showDiff, setShowDiff] = useState(false);\n  const {\n    state,\n    onDashboardSave\n  } = useDashboardSave(dashboard);\n  const onSuccess = onSaveSuccess ? () => {\n    onDismiss();\n    onSaveSuccess();\n  } : onDismiss;\n\n  const renderBody = () => {\n    if (showDiff) {\n      return /*#__PURE__*/_jsx(SaveDashboardDiff, {\n        diff: data.diff,\n        oldValue: previous.value,\n        newValue: data.clone\n      });\n    }\n\n    if (isNew || isCopy) {\n      return _SaveDashboardAsForm || (_SaveDashboardAsForm = /*#__PURE__*/_jsx(SaveDashboardAsForm, {\n        dashboard: dashboard,\n        onCancel: onDismiss,\n        onSuccess: onSuccess,\n        onSubmit: onDashboardSave,\n        isNew: isNew\n      }));\n    }\n\n    if (isProvisioned) {\n      return _SaveProvisionedDashb || (_SaveProvisionedDashb = /*#__PURE__*/_jsx(SaveProvisionedDashboardForm, {\n        dashboard: dashboard,\n        onCancel: onDismiss,\n        onSuccess: onSuccess\n      }));\n    }\n\n    return _SaveDashboardForm || (_SaveDashboardForm = /*#__PURE__*/_jsx(SaveDashboardForm, {\n      dashboard: dashboard,\n      saveModel: data,\n      onCancel: onDismiss,\n      onSuccess: onSuccess,\n      onSubmit: onDashboardSave,\n      options: options,\n      onOptionsChange: setOptions\n    }));\n  };\n\n  if (state.error) {\n    return /*#__PURE__*/_jsx(SaveDashboardErrorProxy, {\n      error: state.error,\n      dashboard: dashboard,\n      dashboardSaveModel: data.clone,\n      onDismiss: onDismiss\n    });\n  }\n\n  let title = 'Save dashboard';\n\n  if (isCopy) {\n    title = 'Save dashboard copy';\n  } else if (isProvisioned) {\n    title = 'Provisioned dashboard';\n  }\n\n  return /*#__PURE__*/_jsx(Drawer, {\n    title: title,\n    onClose: onDismiss,\n    width: '40%',\n    subtitle: dashboard.title,\n    tabs: /*#__PURE__*/_jsxs(TabsBar, {\n      children: [/*#__PURE__*/_jsx(Tab, {\n        label: 'Details',\n        active: !showDiff,\n        onChangeTab: () => setShowDiff(false)\n      }), /*#__PURE__*/_jsx(Tab, {\n        label: 'Changes',\n        active: showDiff,\n        onChangeTab: () => setShowDiff(true),\n        counter: data.diffCount\n      })]\n    }),\n    expandable: true,\n    scrollableContent: true,\n    children: renderBody()\n  });\n};","map":{"version":3,"names":["React","useMemo","useState","useAsync","Drawer","Tab","TabsBar","backendSrv","jsonDiff","SaveDashboardDiff","SaveDashboardErrorProxy","SaveDashboardAsForm","SaveDashboardForm","SaveProvisionedDashboardForm","useDashboardSave","SaveDashboardDrawer","dashboard","onDismiss","onSaveSuccess","isCopy","options","setOptions","isProvisioned","meta","provisioned","isNew","version","previous","undefined","result","getDashboardByUid","uid","data","clone","getSaveModelClone","saveTimerange","Boolean","saveVariables","value","diff","diffCount","hasChanges","cloneJSON","JSON","stringify","cloneSafe","parse","d","Object","values","length","showDiff","setShowDiff","state","onDashboardSave","onSuccess","renderBody","error","title"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SaveDashboard/SaveDashboardDrawer.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { Drawer, Tab, TabsBar } from '@grafana/ui';\nimport { backendSrv } from 'app/core/services/backend_srv';\n\nimport { jsonDiff } from '../VersionHistory/utils';\n\nimport { SaveDashboardDiff } from './SaveDashboardDiff';\nimport { SaveDashboardErrorProxy } from './SaveDashboardErrorProxy';\nimport { SaveDashboardAsForm } from './forms/SaveDashboardAsForm';\nimport { SaveDashboardForm } from './forms/SaveDashboardForm';\nimport { SaveProvisionedDashboardForm } from './forms/SaveProvisionedDashboardForm';\nimport { SaveDashboardData, SaveDashboardModalProps, SaveDashboardOptions } from './types';\nimport { useDashboardSave } from './useDashboardSave';\n\nexport const SaveDashboardDrawer = ({ dashboard, onDismiss, onSaveSuccess, isCopy }: SaveDashboardModalProps) => {\n  const [options, setOptions] = useState<SaveDashboardOptions>({});\n\n  const isProvisioned = dashboard.meta.provisioned;\n  const isNew = dashboard.version === 0;\n\n  const previous = useAsync(async () => {\n    if (isNew) {\n      return undefined;\n    }\n\n    const result = await backendSrv.getDashboardByUid(dashboard.uid);\n    return result.dashboard;\n  }, [dashboard, isNew]);\n\n  const data = useMemo<SaveDashboardData>(() => {\n    const clone = dashboard.getSaveModelClone({\n      saveTimerange: Boolean(options.saveTimerange),\n      saveVariables: Boolean(options.saveVariables),\n    });\n\n    if (!previous.value) {\n      return { clone, diff: {}, diffCount: 0, hasChanges: false };\n    }\n\n    const cloneJSON = JSON.stringify(clone, null, 2);\n    const cloneSafe = JSON.parse(cloneJSON); // avoids undefined issues\n\n    const diff = jsonDiff(previous.value, cloneSafe);\n    let diffCount = 0;\n    for (const d of Object.values(diff)) {\n      diffCount += d.length;\n    }\n\n    return {\n      clone,\n      diff,\n      diffCount,\n      hasChanges: diffCount > 0 && !isNew,\n    };\n  }, [dashboard, previous.value, options, isNew]);\n\n  const [showDiff, setShowDiff] = useState(false);\n  const { state, onDashboardSave } = useDashboardSave(dashboard);\n  const onSuccess = onSaveSuccess\n    ? () => {\n        onDismiss();\n        onSaveSuccess();\n      }\n    : onDismiss;\n\n  const renderBody = () => {\n    if (showDiff) {\n      return <SaveDashboardDiff diff={data.diff} oldValue={previous.value} newValue={data.clone} />;\n    }\n\n    if (isNew || isCopy) {\n      return (\n        <SaveDashboardAsForm\n          dashboard={dashboard}\n          onCancel={onDismiss}\n          onSuccess={onSuccess}\n          onSubmit={onDashboardSave}\n          isNew={isNew}\n        />\n      );\n    }\n\n    if (isProvisioned) {\n      return <SaveProvisionedDashboardForm dashboard={dashboard} onCancel={onDismiss} onSuccess={onSuccess} />;\n    }\n\n    return (\n      <SaveDashboardForm\n        dashboard={dashboard}\n        saveModel={data}\n        onCancel={onDismiss}\n        onSuccess={onSuccess}\n        onSubmit={onDashboardSave}\n        options={options}\n        onOptionsChange={setOptions}\n      />\n    );\n  };\n\n  if (state.error) {\n    return (\n      <SaveDashboardErrorProxy\n        error={state.error}\n        dashboard={dashboard}\n        dashboardSaveModel={data.clone}\n        onDismiss={onDismiss}\n      />\n    );\n  }\n\n  let title = 'Save dashboard';\n  if (isCopy) {\n    title = 'Save dashboard copy';\n  } else if (isProvisioned) {\n    title = 'Provisioned dashboard';\n  }\n\n  return (\n    <Drawer\n      title={title}\n      onClose={onDismiss}\n      width={'40%'}\n      subtitle={dashboard.title}\n      tabs={\n        <TabsBar>\n          <Tab label={'Details'} active={!showDiff} onChangeTab={() => setShowDiff(false)} />\n          <Tab label={'Changes'} active={showDiff} onChangeTab={() => setShowDiff(true)} counter={data.diffCount} />\n        </TabsBar>\n      }\n      expandable\n      scrollableContent\n    >\n      {renderBody()}\n    </Drawer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}