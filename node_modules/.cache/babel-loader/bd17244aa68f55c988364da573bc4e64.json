{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function PeriodSelect({\n  inputId,\n  templateVariableOptions,\n  onChange,\n  current,\n  selectWidth,\n  disabled,\n  aligmentPeriods\n}) {\n  const options = useMemo(() => aligmentPeriods.map(ap => Object.assign({}, ap, {\n    label: ap.text\n  })), [aligmentPeriods]);\n  const visibleOptions = useMemo(() => options.filter(ap => !ap.hidden), [options]);\n  return /*#__PURE__*/_jsx(Select, {\n    width: selectWidth,\n    onChange: ({\n      value\n    }) => onChange(value),\n    value: [...options, ...templateVariableOptions].find(s => s.value === current),\n    options: [{\n      label: 'Template Variables',\n      options: templateVariableOptions\n    }, {\n      label: 'Aggregations',\n      expanded: true,\n      options: visibleOptions\n    }],\n    placeholder: \"Select Period\",\n    inputId: inputId,\n    disabled: disabled,\n    allowCustomValue: true\n  });\n}","map":{"version":3,"names":["React","useMemo","Select","PeriodSelect","inputId","templateVariableOptions","onChange","current","selectWidth","disabled","aligmentPeriods","options","map","ap","label","text","visibleOptions","filter","hidden","value","find","s","expanded"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloud-monitoring/components/PeriodSelect.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { periodOption } from '../constants';\n\nexport interface Props {\n  inputId: string;\n  onChange: (period: string) => void;\n  templateVariableOptions: Array<SelectableValue<string>>;\n  aligmentPeriods: periodOption[];\n  selectWidth?: number;\n  category?: string;\n  disabled?: boolean;\n  current?: string;\n}\n\nexport function PeriodSelect({\n  inputId,\n  templateVariableOptions,\n  onChange,\n  current,\n  selectWidth,\n  disabled,\n  aligmentPeriods,\n}: Props) {\n  const options = useMemo(\n    () =>\n      aligmentPeriods.map((ap) => ({\n        ...ap,\n        label: ap.text,\n      })),\n    [aligmentPeriods]\n  );\n  const visibleOptions = useMemo(() => options.filter((ap) => !ap.hidden), [options]);\n\n  return (\n    <Select\n      width={selectWidth}\n      onChange={({ value }) => onChange(value!)}\n      value={[...options, ...templateVariableOptions].find((s) => s.value === current)}\n      options={[\n        {\n          label: 'Template Variables',\n          options: templateVariableOptions,\n        },\n        {\n          label: 'Aggregations',\n          expanded: true,\n          options: visibleOptions,\n        },\n      ]}\n      placeholder=\"Select Period\"\n      inputId={inputId}\n      disabled={disabled}\n      allowCustomValue\n    ></Select>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,MAAT,QAAuB,aAAvB;;AAeA,OAAO,SAASC,YAAT,CAAsB;EAC3BC,OAD2B;EAE3BC,uBAF2B;EAG3BC,QAH2B;EAI3BC,OAJ2B;EAK3BC,WAL2B;EAM3BC,QAN2B;EAO3BC;AAP2B,CAAtB,EAQG;EACR,MAAMC,OAAO,GAAGV,OAAO,CACrB,MACES,eAAe,CAACE,GAAhB,CAAqBC,EAAD,sBACfA,EADe;IAElBC,KAAK,EAAED,EAAE,CAACE;EAFQ,EAApB,CAFmB,EAMrB,CAACL,eAAD,CANqB,CAAvB;EAQA,MAAMM,cAAc,GAAGf,OAAO,CAAC,MAAMU,OAAO,CAACM,MAAR,CAAgBJ,EAAD,IAAQ,CAACA,EAAE,CAACK,MAA3B,CAAP,EAA2C,CAACP,OAAD,CAA3C,CAA9B;EAEA,oBACE,KAAC,MAAD;IACE,KAAK,EAAEH,WADT;IAEE,QAAQ,EAAE,CAAC;MAAEW;IAAF,CAAD,KAAeb,QAAQ,CAACa,KAAD,CAFnC;IAGE,KAAK,EAAE,CAAC,GAAGR,OAAJ,EAAa,GAAGN,uBAAhB,EAAyCe,IAAzC,CAA+CC,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYZ,OAAjE,CAHT;IAIE,OAAO,EAAE,CACP;MACEO,KAAK,EAAE,oBADT;MAEEH,OAAO,EAAEN;IAFX,CADO,EAKP;MACES,KAAK,EAAE,cADT;MAEEQ,QAAQ,EAAE,IAFZ;MAGEX,OAAO,EAAEK;IAHX,CALO,CAJX;IAeE,WAAW,EAAC,eAfd;IAgBE,OAAO,EAAEZ,OAhBX;IAiBE,QAAQ,EAAEK,QAjBZ;IAkBE,gBAAgB;EAlBlB,EADF;AAsBD"},"metadata":{},"sourceType":"module"}