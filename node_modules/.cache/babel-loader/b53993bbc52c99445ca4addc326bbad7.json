{"ast":null,"code":"import * as d3 from 'd3';\nimport $ from 'jquery';\nimport { find, isEmpty, isNil, sortBy, uniq } from 'lodash';\nimport { PanelEvents } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { getColorScale, getOpacityScale } from './color_scale';\nconst LEGEND_HEIGHT_PX = 6;\nconst LEGEND_WIDTH_PX = 100;\nconst LEGEND_TICK_SIZE = 0;\nconst LEGEND_VALUE_MARGIN = 0;\nconst LEGEND_PADDING_LEFT = 10;\nconst LEGEND_SEGMENT_WIDTH = 10;\n/**\n * Color legend for heatmap editor.\n */\n\ncoreModule.directive('colorLegend', () => {\n  return {\n    restrict: 'E',\n    template: '<div class=\"heatmap-color-legend\"><svg width=\"16.5rem\" height=\"24px\"></svg></div>',\n    link: (scope, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n      render();\n      ctrl.events.on(PanelEvents.render, () => {\n        render();\n      });\n\n      function render() {\n        var _legendElem$outerWidt;\n\n        const legendElem = $(elem).find('svg');\n        const legendWidth = Math.floor((_legendElem$outerWidt = legendElem.outerWidth()) !== null && _legendElem$outerWidt !== void 0 ? _legendElem$outerWidt : 10);\n\n        if (panel.color.mode === 'spectrum') {\n          const colorScheme = find(ctrl.colorSchemes, {\n            value: panel.color.colorScheme\n          });\n          const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, legendWidth);\n          drawSimpleColorLegend(elem, colorScale);\n        } else if (panel.color.mode === 'opacity') {\n          const colorOptions = panel.color;\n          drawSimpleOpacityLegend(elem, colorOptions);\n        }\n      }\n    }\n  };\n});\n/**\n * Heatmap legend with scale values.\n */\n\ncoreModule.directive('heatmapLegend', () => {\n  return {\n    restrict: 'E',\n    template: `<div class=\"heatmap-color-legend\"><svg width=\"${LEGEND_WIDTH_PX}px\" height=\"${LEGEND_HEIGHT_PX}px\"></svg></div>`,\n    link: (scope, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n      render();\n      ctrl.events.on(PanelEvents.render, () => {\n        render();\n      });\n\n      function render() {\n        clearLegend(elem);\n\n        if (!isEmpty(ctrl.data) && !isEmpty(ctrl.data.cards)) {\n          const cardStats = ctrl.data.cardStats;\n          const rangeFrom = isNil(panel.color.min) ? Math.max(cardStats.min, 0) : panel.color.min;\n          const rangeTo = isNil(panel.color.max) ? cardStats.max : panel.color.max;\n          const maxValue = cardStats.max;\n          const minValue = cardStats.min;\n\n          if (panel.color.mode === 'spectrum') {\n            const colorScheme = find(ctrl.colorSchemes, {\n              value: panel.color.colorScheme\n            });\n            drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue);\n          } else if (panel.color.mode === 'opacity') {\n            const colorOptions = panel.color;\n            drawOpacityLegend(elem, colorOptions, rangeFrom, rangeTo, maxValue, minValue);\n          }\n        }\n      }\n    }\n  };\n});\n\nfunction drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n\n  if (legendDomElement) {\n    var _legendElem$outerWidt2;\n\n    const legend = d3.select(legendDomElement);\n    clearLegend(elem);\n    const legendWidth = Math.floor((_legendElem$outerWidt2 = legendElem.outerWidth()) !== null && _legendElem$outerWidt2 !== void 0 ? _legendElem$outerWidt2 : 10) - 30;\n    const legendHeight = legendElem.attr('height');\n    const rangeStep = (rangeTo - rangeFrom) / legendWidth * LEGEND_SEGMENT_WIDTH;\n    const widthFactor = legendWidth / (rangeTo - rangeFrom);\n    const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n    const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, rangeTo, rangeFrom);\n    legend.append('g').attr('class', 'legend-color-bar').attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)').selectAll('.heatmap-color-legend-rect').data(valuesRange).enter().append('rect').attr('x', d => Math.round((d - rangeFrom) * widthFactor)).attr('y', 0).attr('width', Math.round(rangeStep * widthFactor + 1)) // Overlap rectangles to prevent gaps\n    .attr('height', legendHeight).attr('stroke-width', 0).attr('fill', d => colorScale(d));\n    drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n  }\n}\n\nfunction drawOpacityLegend(elem, options, rangeFrom, rangeTo, maxValue, minValue) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n\n  if (legendDomElement) {\n    var _legendElem$outerWidt3;\n\n    const legend = d3.select(legendDomElement);\n    clearLegend(elem);\n    const legendWidth = Math.floor((_legendElem$outerWidt3 = legendElem.outerWidth()) !== null && _legendElem$outerWidt3 !== void 0 ? _legendElem$outerWidt3 : 30) - 30;\n    const legendHeight = legendElem.attr('height');\n    const rangeStep = (rangeTo - rangeFrom) / legendWidth * LEGEND_SEGMENT_WIDTH;\n    const widthFactor = legendWidth / (rangeTo - rangeFrom);\n    const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n    const opacityScale = getOpacityScale(options, rangeTo, rangeFrom);\n    legend.append('g').attr('class', 'legend-color-bar').attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)').selectAll('.heatmap-opacity-legend-rect').data(valuesRange).enter().append('rect').attr('x', d => Math.round((d - rangeFrom) * widthFactor)).attr('y', 0).attr('width', Math.round(rangeStep * widthFactor)).attr('height', legendHeight).attr('stroke-width', 0).attr('fill', options.cardColor).style('opacity', d => opacityScale(d));\n    drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n  }\n}\n\nfunction drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n\n  if (legendDomElement) {\n    const legend = d3.select(legendDomElement);\n\n    if (legendWidth <= 0 || legendDomElement.childNodes.length === 0) {\n      return;\n    }\n\n    const legendValueScale = d3.scaleLinear().domain([rangeFrom, rangeTo]).range([0, legendWidth]);\n    const ticks = buildLegendTicks(rangeFrom, rangeTo, maxValue, minValue);\n    const xAxis = d3.axisBottom(legendValueScale).tickValues(ticks).tickSize(LEGEND_TICK_SIZE);\n    const colorRect = legendElem.find(':first-child');\n    const posY = getSvgElemHeight(legendElem) + LEGEND_VALUE_MARGIN;\n    const posX = getSvgElemX(colorRect) + LEGEND_PADDING_LEFT;\n    d3.select(legendDomElement).append('g').attr('class', 'axis').attr('transform', 'translate(' + posX + ',' + posY + ')').call(xAxis);\n    legend.select('.axis').select('.domain').remove();\n  }\n}\n\nfunction drawSimpleColorLegend(elem, colorScale) {\n  var _legendElem$outerWidt4;\n\n  const legendElem = $(elem).find('svg');\n  clearLegend(elem);\n  const legendWidth = Math.floor((_legendElem$outerWidt4 = legendElem.outerWidth()) !== null && _legendElem$outerWidt4 !== void 0 ? _legendElem$outerWidt4 : 30);\n  const legendHeight = legendElem.attr('height');\n\n  if (legendWidth) {\n    const valuesNumber = Math.floor(legendWidth / 2);\n    const rangeStep = Math.floor(legendWidth / valuesNumber);\n    const valuesRange = d3.range(0, legendWidth, rangeStep);\n    const legendDomElement = legendElem.get(0);\n\n    if (legendDomElement) {\n      const legend = d3.select(legendDomElement);\n      const legendRects = legend.selectAll('.heatmap-color-legend-rect').data(valuesRange);\n      legendRects.enter().append('rect').attr('x', d => d).attr('y', 0).attr('width', rangeStep + 1) // Overlap rectangles to prevent gaps\n      .attr('height', legendHeight).attr('stroke-width', 0).attr('fill', d => colorScale(d));\n    }\n  }\n}\n\nfunction drawSimpleOpacityLegend(elem, options) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n\n  if (legendDomElement) {\n    var _legendElem$outerWidt5;\n\n    clearLegend(elem);\n    const legend = d3.select(legendDomElement);\n    const legendWidth = Math.floor((_legendElem$outerWidt5 = legendElem.outerWidth()) !== null && _legendElem$outerWidt5 !== void 0 ? _legendElem$outerWidt5 : 30);\n    const legendHeight = legendElem.attr('height');\n\n    if (legendWidth) {\n      let legendOpacityScale;\n\n      if (options.colorScale === 'linear') {\n        legendOpacityScale = d3.scaleLinear().domain([0, legendWidth]).range([0, 1]);\n      } else if (options.colorScale === 'sqrt') {\n        legendOpacityScale = d3.scalePow().exponent(options.exponent).domain([0, legendWidth]).range([0, 1]);\n      }\n\n      const rangeStep = 10;\n      const valuesRange = d3.range(0, legendWidth, rangeStep);\n      const legendRects = legend.selectAll('.heatmap-opacity-legend-rect').data(valuesRange);\n      legendRects.enter().append('rect').attr('x', d => d).attr('y', 0).attr('width', rangeStep).attr('height', legendHeight).attr('stroke-width', 0).attr('fill', config.theme.visualization.getColorByName(options.cardColor)).style('opacity', d => legendOpacityScale(d));\n    }\n  }\n}\n\nfunction clearLegend(elem) {\n  const legendElem = $(elem).find('svg');\n  legendElem.empty();\n}\n\nfunction getSvgElemX(elem) {\n  const svgElem = elem.get(0);\n\n  if (svgElem && svgElem.x && svgElem.x.baseVal) {\n    return svgElem.x.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction getSvgElemHeight(elem) {\n  const svgElem = elem.get(0);\n\n  if (svgElem && svgElem.height && svgElem.height.baseVal) {\n    return svgElem.height.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction buildLegendTicks(rangeFrom, rangeTo, maxValue, minValue) {\n  const range = rangeTo - rangeFrom;\n  const tickStepSize = tickStep(rangeFrom, rangeTo, 3);\n  const ticksNum = Math.ceil(range / tickStepSize);\n  const firstTick = getFirstCloseTick(rangeFrom, tickStepSize);\n  let ticks = [];\n\n  for (let i = 0; i < ticksNum; i++) {\n    const current = firstTick + tickStepSize * i; // Add user-defined min and max if it had been set\n\n    if (isValueCloseTo(minValue, current, tickStepSize)) {\n      ticks.push(minValue);\n      continue;\n    } else if (minValue < current) {\n      ticks.push(minValue);\n    }\n\n    if (isValueCloseTo(maxValue, current, tickStepSize)) {\n      ticks.push(maxValue);\n      continue;\n    } else if (maxValue < current) {\n      ticks.push(maxValue);\n    }\n\n    ticks.push(current);\n  }\n\n  if (!isValueCloseTo(maxValue, rangeTo, tickStepSize)) {\n    ticks.push(maxValue);\n  }\n\n  ticks.push(rangeTo);\n  ticks = sortBy(uniq(ticks));\n  return ticks;\n}\n\nfunction isValueCloseTo(val, valueTo, step) {\n  const diff = Math.abs(val - valueTo);\n  return diff < step * 0.3;\n}\n\nfunction getFirstCloseTick(minValue, step) {\n  if (minValue < 0) {\n    return Math.floor(minValue / step) * step;\n  }\n\n  return 0;\n}","map":{"version":3,"names":["d3","$","find","isEmpty","isNil","sortBy","uniq","PanelEvents","coreModule","config","contextSrv","tickStep","getColorScale","getOpacityScale","LEGEND_HEIGHT_PX","LEGEND_WIDTH_PX","LEGEND_TICK_SIZE","LEGEND_VALUE_MARGIN","LEGEND_PADDING_LEFT","LEGEND_SEGMENT_WIDTH","directive","restrict","template","link","scope","elem","attrs","ctrl","panel","render","events","on","legendElem","legendWidth","Math","floor","outerWidth","color","mode","colorScheme","colorSchemes","value","colorScale","user","lightTheme","drawSimpleColorLegend","colorOptions","drawSimpleOpacityLegend","clearLegend","data","cards","cardStats","rangeFrom","min","max","rangeTo","maxValue","minValue","drawColorLegend","drawOpacityLegend","legendDomElement","get","legend","select","legendHeight","attr","rangeStep","widthFactor","valuesRange","range","append","selectAll","enter","d","round","drawLegendValues","options","opacityScale","cardColor","style","childNodes","length","legendValueScale","scaleLinear","domain","ticks","buildLegendTicks","xAxis","axisBottom","tickValues","tickSize","colorRect","posY","getSvgElemHeight","posX","getSvgElemX","call","remove","valuesNumber","legendRects","legendOpacityScale","scalePow","exponent","theme","visualization","getColorByName","empty","svgElem","x","baseVal","height","tickStepSize","ticksNum","ceil","firstTick","getFirstCloseTick","i","current","isValueCloseTo","push","val","valueTo","step","diff","abs"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap-old/color_legend.ts"],"sourcesContent":["import * as d3 from 'd3';\nimport $ from 'jquery';\nimport { find, isEmpty, isNil, sortBy, uniq } from 'lodash';\n\nimport { PanelEvents } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { tickStep } from 'app/core/utils/ticks';\n\nimport { getColorScale, getOpacityScale } from './color_scale';\n\nconst LEGEND_HEIGHT_PX = 6;\nconst LEGEND_WIDTH_PX = 100;\nconst LEGEND_TICK_SIZE = 0;\nconst LEGEND_VALUE_MARGIN = 0;\nconst LEGEND_PADDING_LEFT = 10;\nconst LEGEND_SEGMENT_WIDTH = 10;\n\n/**\n * Color legend for heatmap editor.\n */\ncoreModule.directive('colorLegend', () => {\n  return {\n    restrict: 'E',\n    template: '<div class=\"heatmap-color-legend\"><svg width=\"16.5rem\" height=\"24px\"></svg></div>',\n    link: (scope: any, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n\n      render();\n\n      ctrl.events.on(PanelEvents.render, () => {\n        render();\n      });\n\n      function render() {\n        const legendElem = $(elem).find('svg');\n        const legendWidth = Math.floor(legendElem.outerWidth() ?? 10);\n\n        if (panel.color.mode === 'spectrum') {\n          const colorScheme: any = find(ctrl.colorSchemes, {\n            value: panel.color.colorScheme,\n          });\n          const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, legendWidth);\n          drawSimpleColorLegend(elem, colorScale);\n        } else if (panel.color.mode === 'opacity') {\n          const colorOptions = panel.color;\n          drawSimpleOpacityLegend(elem, colorOptions);\n        }\n      }\n    },\n  };\n});\n\n/**\n * Heatmap legend with scale values.\n */\ncoreModule.directive('heatmapLegend', () => {\n  return {\n    restrict: 'E',\n    template: `<div class=\"heatmap-color-legend\"><svg width=\"${LEGEND_WIDTH_PX}px\" height=\"${LEGEND_HEIGHT_PX}px\"></svg></div>`,\n    link: (scope: any, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n\n      render();\n      ctrl.events.on(PanelEvents.render, () => {\n        render();\n      });\n\n      function render() {\n        clearLegend(elem);\n        if (!isEmpty(ctrl.data) && !isEmpty(ctrl.data.cards)) {\n          const cardStats = ctrl.data.cardStats;\n          const rangeFrom = isNil(panel.color.min) ? Math.max(cardStats.min, 0) : panel.color.min;\n          const rangeTo = isNil(panel.color.max) ? cardStats.max : panel.color.max;\n          const maxValue = cardStats.max;\n          const minValue = cardStats.min;\n\n          if (panel.color.mode === 'spectrum') {\n            const colorScheme: any = find(ctrl.colorSchemes, {\n              value: panel.color.colorScheme,\n            });\n            drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue);\n          } else if (panel.color.mode === 'opacity') {\n            const colorOptions = panel.color;\n            drawOpacityLegend(elem, colorOptions, rangeFrom, rangeTo, maxValue, minValue);\n          }\n        }\n      }\n    },\n  };\n});\n\nfunction drawColorLegend(\n  elem: JQuery,\n  colorScheme: any,\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: number,\n  minValue: number\n) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n  if (legendDomElement) {\n    const legend = d3.select(legendDomElement);\n    clearLegend(elem);\n\n    const legendWidth = Math.floor(legendElem.outerWidth() ?? 10) - 30;\n    const legendHeight = legendElem.attr('height') as any;\n\n    const rangeStep = ((rangeTo - rangeFrom) / legendWidth) * LEGEND_SEGMENT_WIDTH;\n    const widthFactor = legendWidth / (rangeTo - rangeFrom);\n    const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n    const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, rangeTo, rangeFrom);\n    legend\n      .append('g')\n      .attr('class', 'legend-color-bar')\n      .attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)')\n      .selectAll('.heatmap-color-legend-rect')\n      .data(valuesRange)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => Math.round((d - rangeFrom) * widthFactor))\n      .attr('y', 0)\n      .attr('width', Math.round(rangeStep * widthFactor + 1)) // Overlap rectangles to prevent gaps\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr('fill', (d) => colorScale(d));\n\n    drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n  }\n}\n\nfunction drawOpacityLegend(\n  elem: JQuery,\n  options: { cardColor: null },\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: any,\n  minValue: number\n) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n  if (legendDomElement) {\n    const legend = d3.select(legendDomElement);\n    clearLegend(elem);\n\n    const legendWidth = Math.floor(legendElem.outerWidth() ?? 30) - 30;\n    const legendHeight = legendElem.attr('height') as any;\n\n    const rangeStep = ((rangeTo - rangeFrom) / legendWidth) * LEGEND_SEGMENT_WIDTH;\n    const widthFactor = legendWidth / (rangeTo - rangeFrom);\n    const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n    const opacityScale = getOpacityScale(options, rangeTo, rangeFrom);\n    legend\n      .append('g')\n      .attr('class', 'legend-color-bar')\n      .attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)')\n      .selectAll('.heatmap-opacity-legend-rect')\n      .data(valuesRange)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => Math.round((d - rangeFrom) * widthFactor))\n      .attr('y', 0)\n      .attr('width', Math.round(rangeStep * widthFactor))\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr('fill', options.cardColor)\n      .style('opacity', (d) => opacityScale(d));\n\n    drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n  }\n}\n\nfunction drawLegendValues(\n  elem: JQuery,\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: any,\n  minValue: any,\n  legendWidth: number,\n  valuesRange: number[]\n) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n  if (legendDomElement) {\n    const legend = d3.select(legendDomElement);\n\n    if (legendWidth <= 0 || legendDomElement.childNodes.length === 0) {\n      return;\n    }\n\n    const legendValueScale = d3.scaleLinear().domain([rangeFrom, rangeTo]).range([0, legendWidth]);\n\n    const ticks = buildLegendTicks(rangeFrom, rangeTo, maxValue, minValue);\n    const xAxis = d3.axisBottom(legendValueScale).tickValues(ticks).tickSize(LEGEND_TICK_SIZE);\n\n    const colorRect = legendElem.find(':first-child');\n    const posY = getSvgElemHeight(legendElem) + LEGEND_VALUE_MARGIN;\n    const posX = getSvgElemX(colorRect) + LEGEND_PADDING_LEFT;\n\n    d3.select(legendDomElement)\n      .append('g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(' + posX + ',' + posY + ')')\n      .call(xAxis);\n\n    legend.select('.axis').select('.domain').remove();\n  }\n}\n\nfunction drawSimpleColorLegend(elem: JQuery, colorScale: any) {\n  const legendElem = $(elem).find('svg');\n  clearLegend(elem);\n\n  const legendWidth = Math.floor(legendElem.outerWidth() ?? 30);\n  const legendHeight = legendElem.attr('height') as any;\n\n  if (legendWidth) {\n    const valuesNumber = Math.floor(legendWidth / 2);\n    const rangeStep = Math.floor(legendWidth / valuesNumber);\n    const valuesRange = d3.range(0, legendWidth, rangeStep);\n\n    const legendDomElement = legendElem.get(0);\n    if (legendDomElement) {\n      const legend = d3.select(legendDomElement);\n      const legendRects = legend.selectAll('.heatmap-color-legend-rect').data(valuesRange);\n\n      legendRects\n        .enter()\n        .append('rect')\n        .attr('x', (d) => d)\n        .attr('y', 0)\n        .attr('width', rangeStep + 1) // Overlap rectangles to prevent gaps\n        .attr('height', legendHeight)\n        .attr('stroke-width', 0)\n        .attr('fill', (d) => colorScale(d));\n    }\n  }\n}\n\nfunction drawSimpleOpacityLegend(elem: JQuery, options: { colorScale: string; exponent: number; cardColor: string }) {\n  const legendElem = $(elem).find('svg');\n  const legendDomElement = legendElem.get(0);\n  if (legendDomElement) {\n    clearLegend(elem);\n\n    const legend = d3.select(legendDomElement);\n    const legendWidth = Math.floor(legendElem.outerWidth() ?? 30);\n    const legendHeight = legendElem.attr('height') as any;\n\n    if (legendWidth) {\n      let legendOpacityScale: any;\n      if (options.colorScale === 'linear') {\n        legendOpacityScale = d3.scaleLinear().domain([0, legendWidth]).range([0, 1]);\n      } else if (options.colorScale === 'sqrt') {\n        legendOpacityScale = d3.scalePow().exponent(options.exponent).domain([0, legendWidth]).range([0, 1]);\n      }\n\n      const rangeStep = 10;\n      const valuesRange = d3.range(0, legendWidth, rangeStep);\n      const legendRects = legend.selectAll('.heatmap-opacity-legend-rect').data(valuesRange);\n\n      legendRects\n        .enter()\n        .append('rect')\n        .attr('x', (d) => d)\n        .attr('y', 0)\n        .attr('width', rangeStep)\n        .attr('height', legendHeight)\n        .attr('stroke-width', 0)\n        .attr('fill', config.theme.visualization.getColorByName(options.cardColor))\n        .style('opacity', (d) => legendOpacityScale(d));\n    }\n  }\n}\n\nfunction clearLegend(elem: JQuery) {\n  const legendElem = $(elem).find('svg');\n  legendElem.empty();\n}\n\nfunction getSvgElemX(elem: JQuery) {\n  const svgElem: any = elem.get(0) as any;\n  if (svgElem && svgElem.x && svgElem.x.baseVal) {\n    return svgElem.x.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction getSvgElemHeight(elem: JQuery<any>) {\n  const svgElem: any = elem.get(0);\n  if (svgElem && svgElem.height && svgElem.height.baseVal) {\n    return svgElem.height.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction buildLegendTicks(rangeFrom: number, rangeTo: number, maxValue: number, minValue: number) {\n  const range = rangeTo - rangeFrom;\n  const tickStepSize = tickStep(rangeFrom, rangeTo, 3);\n  const ticksNum = Math.ceil(range / tickStepSize);\n  const firstTick = getFirstCloseTick(rangeFrom, tickStepSize);\n  let ticks = [];\n\n  for (let i = 0; i < ticksNum; i++) {\n    const current = firstTick + tickStepSize * i;\n    // Add user-defined min and max if it had been set\n    if (isValueCloseTo(minValue, current, tickStepSize)) {\n      ticks.push(minValue);\n      continue;\n    } else if (minValue < current) {\n      ticks.push(minValue);\n    }\n    if (isValueCloseTo(maxValue, current, tickStepSize)) {\n      ticks.push(maxValue);\n      continue;\n    } else if (maxValue < current) {\n      ticks.push(maxValue);\n    }\n    ticks.push(current);\n  }\n  if (!isValueCloseTo(maxValue, rangeTo, tickStepSize)) {\n    ticks.push(maxValue);\n  }\n  ticks.push(rangeTo);\n  ticks = sortBy(uniq(ticks));\n  return ticks;\n}\n\nfunction isValueCloseTo(val: number, valueTo: number, step: number) {\n  const diff = Math.abs(val - valueTo);\n  return diff < step * 0.3;\n}\n\nfunction getFirstCloseTick(minValue: number, step: number) {\n  if (minValue < 0) {\n    return Math.floor(minValue / step) * step;\n  }\n  return 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}