{"ast":null,"code":"import React from 'react';\nimport PromQueryField from './PromQueryField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function PromQueryEditorForAlerting(props) {\n  const {\n    datasource,\n    query,\n    range,\n    data,\n    onChange,\n    onRunQuery\n  } = props;\n  return /*#__PURE__*/_jsx(PromQueryField, {\n    datasource: datasource,\n    query: query,\n    onRunQuery: onRunQuery,\n    onChange: onChange,\n    history: [],\n    range: range,\n    data: data,\n    \"data-testid\": testIds.editor\n  });\n}\nexport const testIds = {\n  editor: 'prom-editor-cloud-alerting'\n};","map":{"version":3,"names":["React","PromQueryField","PromQueryEditorForAlerting","props","datasource","query","range","data","onChange","onRunQuery","testIds","editor"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/components/PromQueryEditorForAlerting.tsx"],"sourcesContent":["import React from 'react';\n\nimport PromQueryField from './PromQueryField';\nimport { PromQueryEditorProps } from './types';\n\nexport function PromQueryEditorForAlerting(props: PromQueryEditorProps) {\n  const { datasource, query, range, data, onChange, onRunQuery } = props;\n\n  return (\n    <PromQueryField\n      datasource={datasource}\n      query={query}\n      onRunQuery={onRunQuery}\n      onChange={onChange}\n      history={[]}\n      range={range}\n      data={data}\n      data-testid={testIds.editor}\n    />\n  );\n}\n\nexport const testIds = {\n  editor: 'prom-editor-cloud-alerting',\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAAiE;EACtE,MAAM;IAAEC,UAAF;IAAcC,KAAd;IAAqBC,KAArB;IAA4BC,IAA5B;IAAkCC,QAAlC;IAA4CC;EAA5C,IAA2DN,KAAjE;EAEA,oBACE,KAAC,cAAD;IACE,UAAU,EAAEC,UADd;IAEE,KAAK,EAAEC,KAFT;IAGE,UAAU,EAAEI,UAHd;IAIE,QAAQ,EAAED,QAJZ;IAKE,OAAO,EAAE,EALX;IAME,KAAK,EAAEF,KANT;IAOE,IAAI,EAAEC,IAPR;IAQE,eAAaG,OAAO,CAACC;EARvB,EADF;AAYD;AAED,OAAO,MAAMD,OAAO,GAAG;EACrBC,MAAM,EAAE;AADa,CAAhB"},"metadata":{},"sourceType":"module"}