{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { from, lastValueFrom } from 'rxjs';\nimport { CustomVariableSupport, toDataFrame } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport VariableEditor from './components/VariableEditor/VariableEditor';\nimport { migrateStringQueriesToObjectQueries } from './grafanaTemplateVariableFns';\nimport { AzureQueryType } from './types';\nimport messageFromError from './utils/messageFromError';\nexport class VariableSupport extends CustomVariableSupport {\n  constructor(datasource) {\n    super();\n\n    _defineProperty(this, \"editor\", VariableEditor);\n\n    this.datasource = datasource;\n    this.datasource = datasource;\n    this.query = this.query.bind(this);\n  }\n\n  query(request) {\n    const promisedResults = async () => {\n      const queryObj = await migrateStringQueriesToObjectQueries(request.targets[0], {\n        datasource: this.datasource\n      });\n\n      if (queryObj.queryType === AzureQueryType.GrafanaTemplateVariableFn && queryObj.grafanaTemplateVariableFn) {\n        try {\n          const templateVariablesResults = await this.callGrafanaTemplateVariableFn(queryObj.grafanaTemplateVariableFn);\n          return {\n            data: templateVariablesResults !== null && templateVariablesResults !== void 0 && templateVariablesResults.length ? [toDataFrame(templateVariablesResults)] : []\n          };\n        } catch (err) {\n          return {\n            data: [],\n            error: {\n              message: messageFromError(err)\n            }\n          };\n        }\n      }\n\n      request.targets[0] = queryObj;\n      return lastValueFrom(this.datasource.query(request));\n    };\n\n    return from(promisedResults());\n  }\n\n  callGrafanaTemplateVariableFn(query) {\n    if (query.kind === 'SubscriptionsQuery') {\n      return this.datasource.getSubscriptions();\n    }\n\n    if (query.kind === 'ResourceGroupsQuery') {\n      return this.datasource.getResourceGroups(this.replaceVariable(query.subscription));\n    }\n\n    if (query.kind === 'MetricDefinitionsQuery') {\n      return this.datasource.getMetricDefinitions(this.replaceVariable(query.subscription), this.replaceVariable(query.resourceGroup));\n    }\n\n    if (query.kind === 'ResourceNamesQuery') {\n      return this.datasource.getResourceNames(this.replaceVariable(query.subscription), this.replaceVariable(query.resourceGroup), this.replaceVariable(query.metricDefinition));\n    }\n\n    if (query.kind === 'MetricNamespaceQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNamespaces(query);\n    }\n\n    if (query.kind === 'MetricNamesQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNames(query);\n    }\n\n    if (query.kind === 'WorkspacesQuery') {\n      return this.datasource.azureLogAnalyticsDatasource.getWorkspaces(this.replaceVariable(query.subscription));\n    }\n\n    return null;\n  }\n\n  replaceVariable(metric) {\n    return getTemplateSrv().replace((metric || '').trim());\n  }\n\n}","map":{"version":3,"names":["from","lastValueFrom","CustomVariableSupport","toDataFrame","getTemplateSrv","VariableEditor","migrateStringQueriesToObjectQueries","AzureQueryType","messageFromError","VariableSupport","constructor","datasource","query","bind","request","promisedResults","queryObj","targets","queryType","GrafanaTemplateVariableFn","grafanaTemplateVariableFn","templateVariablesResults","callGrafanaTemplateVariableFn","data","length","err","error","message","kind","getSubscriptions","getResourceGroups","replaceVariable","subscription","getMetricDefinitions","resourceGroup","getResourceNames","metricDefinition","azureMonitorDatasource","getMetricNamespaces","getMetricNames","azureLogAnalyticsDatasource","getWorkspaces","metric","replace","trim"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/variables.ts"],"sourcesContent":["import { from, lastValueFrom, Observable } from 'rxjs';\n\nimport {\n  CustomVariableSupport,\n  DataQueryRequest,\n  DataQueryResponse,\n  MetricFindValue,\n  toDataFrame,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nimport VariableEditor from './components/VariableEditor/VariableEditor';\nimport DataSource from './datasource';\nimport { migrateStringQueriesToObjectQueries } from './grafanaTemplateVariableFns';\nimport { AzureMonitorQuery, AzureQueryType } from './types';\nimport { GrafanaTemplateVariableQuery } from './types/templateVariables';\nimport messageFromError from './utils/messageFromError';\n\nexport class VariableSupport extends CustomVariableSupport<DataSource, AzureMonitorQuery> {\n  constructor(private readonly datasource: DataSource) {\n    super();\n    this.datasource = datasource;\n    this.query = this.query.bind(this);\n  }\n\n  editor = VariableEditor;\n\n  query(request: DataQueryRequest<AzureMonitorQuery>): Observable<DataQueryResponse> {\n    const promisedResults = async () => {\n      const queryObj = await migrateStringQueriesToObjectQueries(request.targets[0], { datasource: this.datasource });\n\n      if (queryObj.queryType === AzureQueryType.GrafanaTemplateVariableFn && queryObj.grafanaTemplateVariableFn) {\n        try {\n          const templateVariablesResults = await this.callGrafanaTemplateVariableFn(queryObj.grafanaTemplateVariableFn);\n          return {\n            data: templateVariablesResults?.length ? [toDataFrame(templateVariablesResults)] : [],\n          };\n        } catch (err) {\n          return { data: [], error: { message: messageFromError(err) } };\n        }\n      }\n      request.targets[0] = queryObj;\n      return lastValueFrom(this.datasource.query(request));\n    };\n\n    return from(promisedResults());\n  }\n\n  callGrafanaTemplateVariableFn(query: GrafanaTemplateVariableQuery): Promise<MetricFindValue[]> | null {\n    if (query.kind === 'SubscriptionsQuery') {\n      return this.datasource.getSubscriptions();\n    }\n\n    if (query.kind === 'ResourceGroupsQuery') {\n      return this.datasource.getResourceGroups(this.replaceVariable(query.subscription));\n    }\n\n    if (query.kind === 'MetricDefinitionsQuery') {\n      return this.datasource.getMetricDefinitions(\n        this.replaceVariable(query.subscription),\n        this.replaceVariable(query.resourceGroup)\n      );\n    }\n\n    if (query.kind === 'ResourceNamesQuery') {\n      return this.datasource.getResourceNames(\n        this.replaceVariable(query.subscription),\n        this.replaceVariable(query.resourceGroup),\n        this.replaceVariable(query.metricDefinition)\n      );\n    }\n\n    if (query.kind === 'MetricNamespaceQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNamespaces(query);\n    }\n\n    if (query.kind === 'MetricNamesQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNames(query);\n    }\n\n    if (query.kind === 'WorkspacesQuery') {\n      return this.datasource.azureLogAnalyticsDatasource.getWorkspaces(this.replaceVariable(query.subscription));\n    }\n\n    return null;\n  }\n\n  replaceVariable(metric: string) {\n    return getTemplateSrv().replace((metric || '').trim());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}