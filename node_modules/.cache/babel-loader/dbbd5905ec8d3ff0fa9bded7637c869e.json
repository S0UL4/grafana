{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { IconButton, Pagination, useStyles2 } from '@grafana/ui';\nimport { usePagination } from '../hooks/usePagination';\nimport { getPaginationStyles } from '../styles/pagination';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const DynamicTable = ({\n  cols,\n  items,\n  isExpandable = false,\n  onCollapse,\n  onExpand,\n  isExpanded,\n  renderExpandedContent,\n  testIdGenerator,\n  pagination,\n  paginationStyles,\n  // render a cell BEFORE expand icon for header/ each row.\n  // currently use by RuleList to render guidelines\n  renderPrefixCell,\n  renderPrefixHeader,\n  footerRow\n}) => {\n  var _pagination$itemsPerP;\n\n  const defaultPaginationStyles = useStyles2(getPaginationStyles);\n\n  if ((onCollapse || onExpand || isExpanded) && !(onCollapse && onExpand && isExpanded)) {\n    throw new Error('either all of onCollapse, onExpand, isExpanded must be provided, or none');\n  }\n\n  if ((isExpandable || renderExpandedContent) && !(isExpandable && renderExpandedContent)) {\n    throw new Error('either both isExpanded and renderExpandedContent must be provided, or neither');\n  }\n\n  const styles = useStyles2(getStyles(cols, isExpandable, !!renderPrefixHeader));\n  const [expandedIds, setExpandedIds] = useState([]);\n\n  const toggleExpanded = item => {\n    if (isExpanded && onCollapse && onExpand) {\n      isExpanded(item) ? onCollapse(item) : onExpand(item);\n    } else {\n      setExpandedIds(expandedIds.includes(item.id) ? expandedIds.filter(itemId => itemId !== item.id) : [...expandedIds, item.id]);\n    }\n  };\n\n  const itemsPerPage = (_pagination$itemsPerP = pagination === null || pagination === void 0 ? void 0 : pagination.itemsPerPage) !== null && _pagination$itemsPerP !== void 0 ? _pagination$itemsPerP : items.length;\n  const {\n    page,\n    numberOfPages,\n    onPageChange,\n    pageItems\n  } = usePagination(items, 1, itemsPerPage);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      \"data-testid\": \"dynamic-table\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.row,\n        \"data-testid\": \"header\",\n        children: [renderPrefixHeader && renderPrefixHeader(), isExpandable && /*#__PURE__*/_jsx(\"div\", {\n          className: styles.cell\n        }), cols.map(col => /*#__PURE__*/_jsx(\"div\", {\n          className: styles.cell,\n          children: col.label\n        }, col.id))]\n      }), pageItems.map((item, index) => {\n        var _testIdGenerator;\n\n        const isItemExpanded = isExpanded ? isExpanded(item) : expandedIds.includes(item.id);\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.row,\n          \"data-testid\": (_testIdGenerator = testIdGenerator === null || testIdGenerator === void 0 ? void 0 : testIdGenerator(item, index)) !== null && _testIdGenerator !== void 0 ? _testIdGenerator : 'row',\n          children: [renderPrefixCell && renderPrefixCell(item, index, items), isExpandable && /*#__PURE__*/_jsx(\"div\", {\n            className: cx(styles.cell, styles.expandCell),\n            children: /*#__PURE__*/_jsx(IconButton, {\n              \"aria-label\": `${isItemExpanded ? 'Collapse' : 'Expand'} row`,\n              size: \"xl\",\n              \"data-testid\": \"collapse-toggle\",\n              className: styles.expandButton,\n              name: isItemExpanded ? 'angle-down' : 'angle-right',\n              onClick: () => toggleExpanded(item),\n              type: \"button\"\n            })\n          }), cols.map(col => /*#__PURE__*/_jsx(\"div\", {\n            className: cx(styles.cell, styles.bodyCell),\n            \"data-column\": col.label,\n            children: col.renderCell(item, index)\n          }, `${item.id}-${col.id}`)), isItemExpanded && renderExpandedContent && /*#__PURE__*/_jsx(\"div\", {\n            className: styles.expandedContentRow,\n            \"data-testid\": \"expanded-content\",\n            children: renderExpandedContent(item, index, items)\n          })]\n        }, `${item.id}-${index}`);\n      }), footerRow && /*#__PURE__*/_jsx(\"div\", {\n        className: cx(styles.row, styles.footerRow),\n        children: footerRow\n      })]\n    }), pagination && /*#__PURE__*/_jsx(Pagination, {\n      className: cx(defaultPaginationStyles, paginationStyles),\n      currentPage: page,\n      numberOfPages: numberOfPages,\n      onNavigate: onPageChange,\n      hideWhenSinglePage: true\n    })]\n  });\n};\n\nconst getStyles = (cols, isExpandable, hasPrefixCell) => {\n  const sizes = cols.map(col => {\n    if (!col.size) {\n      return 'auto';\n    }\n\n    if (typeof col.size === 'number') {\n      return `${col.size}fr`;\n    }\n\n    return col.size;\n  });\n\n  if (isExpandable) {\n    sizes.unshift('calc(1em + 16px)');\n  }\n\n  if (hasPrefixCell) {\n    sizes.unshift('0');\n  }\n\n  return theme => ({\n    container: css`\n      border: 1px solid ${theme.colors.border.strong};\n      border-radius: 2px;\n      color: ${theme.colors.text.secondary};\n    `,\n    row: css`\n      display: grid;\n      grid-template-columns: ${sizes.join(' ')};\n      grid-template-rows: 1fr auto;\n\n      &:nth-child(2n + 1) {\n        background-color: ${theme.colors.background.secondary};\n      }\n\n      &:nth-child(2n) {\n        background-color: ${theme.colors.background.primary};\n      }\n\n      ${theme.breakpoints.down('sm')} {\n        grid-template-columns: auto 1fr;\n        grid-template-areas: 'left right';\n        padding: 0 ${theme.spacing(0.5)};\n\n        &:first-child {\n          display: none;\n        }\n\n        ${hasPrefixCell ? `\n            & > *:first-child {\n              display: none;\n            }\n          ` : ''}\n      }\n    `,\n    footerRow: css`\n      display: flex;\n      padding: ${theme.spacing(1)};\n    `,\n    cell: css`\n      align-items: center;\n      padding: ${theme.spacing(1)};\n\n      ${theme.breakpoints.down('sm')} {\n        padding: ${theme.spacing(1)} 0;\n        grid-template-columns: 1fr;\n      }\n    `,\n    bodyCell: css`\n      overflow: hidden;\n\n      ${theme.breakpoints.down('sm')} {\n        grid-column-end: right;\n        grid-column-start: right;\n\n        &::before {\n          content: attr(data-column);\n          display: block;\n          color: ${theme.colors.text.primary};\n        }\n      }\n    `,\n    expandCell: css`\n      justify-content: center;\n\n      ${theme.breakpoints.down('sm')} {\n        align-items: start;\n        grid-area: left;\n      }\n    `,\n    expandedContentRow: css`\n      grid-column-end: ${sizes.length + 1};\n      grid-column-start: ${hasPrefixCell ? 3 : 2};\n      grid-row: 2;\n      padding: 0 ${theme.spacing(3)} 0 ${theme.spacing(1)};\n      position: relative;\n\n      ${theme.breakpoints.down('sm')} {\n        grid-column-start: 2;\n        border-top: 1px solid ${theme.colors.border.strong};\n        grid-row: auto;\n        padding: ${theme.spacing(1)} 0 0 0;\n      }\n    `,\n    expandButton: css`\n      margin-right: 0;\n      display: block;\n    `\n  });\n};","map":{"version":3,"names":["css","cx","React","useState","IconButton","Pagination","useStyles2","usePagination","getPaginationStyles","DynamicTable","cols","items","isExpandable","onCollapse","onExpand","isExpanded","renderExpandedContent","testIdGenerator","pagination","paginationStyles","renderPrefixCell","renderPrefixHeader","footerRow","defaultPaginationStyles","Error","styles","getStyles","expandedIds","setExpandedIds","toggleExpanded","item","includes","id","filter","itemId","itemsPerPage","length","page","numberOfPages","onPageChange","pageItems","container","row","cell","map","col","label","index","isItemExpanded","expandCell","expandButton","bodyCell","renderCell","expandedContentRow","hasPrefixCell","sizes","size","unshift","theme","colors","border","strong","text","secondary","join","background","primary","breakpoints","down","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/DynamicTable.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ReactNode, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, Pagination, useStyles2 } from '@grafana/ui';\n\nimport { usePagination } from '../hooks/usePagination';\nimport { getPaginationStyles } from '../styles/pagination';\n\ninterface DynamicTablePagination {\n  itemsPerPage: number;\n}\n\nexport interface DynamicTableColumnProps<T = unknown> {\n  id: string | number;\n  label: string;\n\n  renderCell: (item: DynamicTableItemProps<T>, index: number) => ReactNode;\n  size?: number | string;\n}\n\nexport interface DynamicTableItemProps<T = unknown> {\n  id: string | number;\n  data: T;\n  renderExpandedContent?: () => ReactNode;\n}\n\nexport interface DynamicTableProps<T = unknown> {\n  cols: Array<DynamicTableColumnProps<T>>;\n  items: Array<DynamicTableItemProps<T>>;\n\n  isExpandable?: boolean;\n  pagination?: DynamicTablePagination;\n  paginationStyles?: string;\n\n  // provide these to manually control expanded status\n  onCollapse?: (item: DynamicTableItemProps<T>) => void;\n  onExpand?: (item: DynamicTableItemProps<T>) => void;\n  isExpanded?: (item: DynamicTableItemProps<T>) => boolean;\n\n  renderExpandedContent?: (\n    item: DynamicTableItemProps<T>,\n    index: number,\n    items: Array<DynamicTableItemProps<T>>\n  ) => ReactNode;\n  testIdGenerator?: (item: DynamicTableItemProps<T>, index: number) => string;\n  renderPrefixHeader?: () => ReactNode;\n  renderPrefixCell?: (\n    item: DynamicTableItemProps<T>,\n    index: number,\n    items: Array<DynamicTableItemProps<T>>\n  ) => ReactNode;\n\n  footerRow?: JSX.Element;\n}\n\nexport const DynamicTable = <T extends object>({\n  cols,\n  items,\n  isExpandable = false,\n  onCollapse,\n  onExpand,\n  isExpanded,\n  renderExpandedContent,\n  testIdGenerator,\n  pagination,\n  paginationStyles,\n  // render a cell BEFORE expand icon for header/ each row.\n  // currently use by RuleList to render guidelines\n  renderPrefixCell,\n  renderPrefixHeader,\n  footerRow,\n}: DynamicTableProps<T>) => {\n  const defaultPaginationStyles = useStyles2(getPaginationStyles);\n\n  if ((onCollapse || onExpand || isExpanded) && !(onCollapse && onExpand && isExpanded)) {\n    throw new Error('either all of onCollapse, onExpand, isExpanded must be provided, or none');\n  }\n  if ((isExpandable || renderExpandedContent) && !(isExpandable && renderExpandedContent)) {\n    throw new Error('either both isExpanded and renderExpandedContent must be provided, or neither');\n  }\n  const styles = useStyles2(getStyles(cols, isExpandable, !!renderPrefixHeader));\n\n  const [expandedIds, setExpandedIds] = useState<Array<DynamicTableItemProps['id']>>([]);\n\n  const toggleExpanded = (item: DynamicTableItemProps<T>) => {\n    if (isExpanded && onCollapse && onExpand) {\n      isExpanded(item) ? onCollapse(item) : onExpand(item);\n    } else {\n      setExpandedIds(\n        expandedIds.includes(item.id) ? expandedIds.filter((itemId) => itemId !== item.id) : [...expandedIds, item.id]\n      );\n    }\n  };\n\n  const itemsPerPage = pagination?.itemsPerPage ?? items.length;\n  const { page, numberOfPages, onPageChange, pageItems } = usePagination(items, 1, itemsPerPage);\n\n  return (\n    <>\n      <div className={styles.container} data-testid=\"dynamic-table\">\n        <div className={styles.row} data-testid=\"header\">\n          {renderPrefixHeader && renderPrefixHeader()}\n          {isExpandable && <div className={styles.cell} />}\n          {cols.map((col) => (\n            <div className={styles.cell} key={col.id}>\n              {col.label}\n            </div>\n          ))}\n        </div>\n\n        {pageItems.map((item, index) => {\n          const isItemExpanded = isExpanded ? isExpanded(item) : expandedIds.includes(item.id);\n          return (\n            <div\n              className={styles.row}\n              key={`${item.id}-${index}`}\n              data-testid={testIdGenerator?.(item, index) ?? 'row'}\n            >\n              {renderPrefixCell && renderPrefixCell(item, index, items)}\n              {isExpandable && (\n                <div className={cx(styles.cell, styles.expandCell)}>\n                  <IconButton\n                    aria-label={`${isItemExpanded ? 'Collapse' : 'Expand'} row`}\n                    size=\"xl\"\n                    data-testid=\"collapse-toggle\"\n                    className={styles.expandButton}\n                    name={isItemExpanded ? 'angle-down' : 'angle-right'}\n                    onClick={() => toggleExpanded(item)}\n                    type=\"button\"\n                  />\n                </div>\n              )}\n              {cols.map((col) => (\n                <div className={cx(styles.cell, styles.bodyCell)} data-column={col.label} key={`${item.id}-${col.id}`}>\n                  {col.renderCell(item, index)}\n                </div>\n              ))}\n              {isItemExpanded && renderExpandedContent && (\n                <div className={styles.expandedContentRow} data-testid=\"expanded-content\">\n                  {renderExpandedContent(item, index, items)}\n                </div>\n              )}\n            </div>\n          );\n        })}\n        {footerRow && <div className={cx(styles.row, styles.footerRow)}>{footerRow}</div>}\n      </div>\n      {pagination && (\n        <Pagination\n          className={cx(defaultPaginationStyles, paginationStyles)}\n          currentPage={page}\n          numberOfPages={numberOfPages}\n          onNavigate={onPageChange}\n          hideWhenSinglePage\n        />\n      )}\n    </>\n  );\n};\n\nconst getStyles = <T extends unknown>(\n  cols: Array<DynamicTableColumnProps<T>>,\n  isExpandable: boolean,\n  hasPrefixCell: boolean\n) => {\n  const sizes = cols.map((col) => {\n    if (!col.size) {\n      return 'auto';\n    }\n\n    if (typeof col.size === 'number') {\n      return `${col.size}fr`;\n    }\n\n    return col.size;\n  });\n\n  if (isExpandable) {\n    sizes.unshift('calc(1em + 16px)');\n  }\n\n  if (hasPrefixCell) {\n    sizes.unshift('0');\n  }\n\n  return (theme: GrafanaTheme2) => ({\n    container: css`\n      border: 1px solid ${theme.colors.border.strong};\n      border-radius: 2px;\n      color: ${theme.colors.text.secondary};\n    `,\n    row: css`\n      display: grid;\n      grid-template-columns: ${sizes.join(' ')};\n      grid-template-rows: 1fr auto;\n\n      &:nth-child(2n + 1) {\n        background-color: ${theme.colors.background.secondary};\n      }\n\n      &:nth-child(2n) {\n        background-color: ${theme.colors.background.primary};\n      }\n\n      ${theme.breakpoints.down('sm')} {\n        grid-template-columns: auto 1fr;\n        grid-template-areas: 'left right';\n        padding: 0 ${theme.spacing(0.5)};\n\n        &:first-child {\n          display: none;\n        }\n\n        ${hasPrefixCell\n          ? `\n            & > *:first-child {\n              display: none;\n            }\n          `\n          : ''}\n      }\n    `,\n    footerRow: css`\n      display: flex;\n      padding: ${theme.spacing(1)};\n    `,\n    cell: css`\n      align-items: center;\n      padding: ${theme.spacing(1)};\n\n      ${theme.breakpoints.down('sm')} {\n        padding: ${theme.spacing(1)} 0;\n        grid-template-columns: 1fr;\n      }\n    `,\n    bodyCell: css`\n      overflow: hidden;\n\n      ${theme.breakpoints.down('sm')} {\n        grid-column-end: right;\n        grid-column-start: right;\n\n        &::before {\n          content: attr(data-column);\n          display: block;\n          color: ${theme.colors.text.primary};\n        }\n      }\n    `,\n    expandCell: css`\n      justify-content: center;\n\n      ${theme.breakpoints.down('sm')} {\n        align-items: start;\n        grid-area: left;\n      }\n    `,\n    expandedContentRow: css`\n      grid-column-end: ${sizes.length + 1};\n      grid-column-start: ${hasPrefixCell ? 3 : 2};\n      grid-row: 2;\n      padding: 0 ${theme.spacing(3)} 0 ${theme.spacing(1)};\n      position: relative;\n\n      ${theme.breakpoints.down('sm')} {\n        grid-column-start: 2;\n        border-top: 1px solid ${theme.colors.border.strong};\n        grid-row: auto;\n        padding: ${theme.spacing(1)} 0 0 0;\n      }\n    `,\n    expandButton: css`\n      margin-right: 0;\n      display: block;\n    `,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}