{"ast":null,"code":"import { useMemo, useState } from 'react';\nimport { filterSpans } from '@jaegertracing/jaeger-ui-components';\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\n\nexport function useSearch(spans) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n  return {\n    search,\n    setSearch,\n    spanFindMatches\n  };\n}","map":{"version":3,"names":["useMemo","useState","filterSpans","useSearch","spans","search","setSearch","spanFindMatches","undefined"],"sources":["/home/soula/grafana/public/app/features/explore/TraceView/useSearch.ts"],"sourcesContent":["import { useMemo, useState } from 'react';\n\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AAEA,SAASC,WAAT,QAAuC,qCAAvC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAwC;EAC7C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMM,eAAwC,GAAGP,OAAO,CAAC,MAAM;IAC7D,OAAOK,MAAM,IAAID,KAAV,GAAkBF,WAAW,CAACG,MAAD,EAASD,KAAT,CAA7B,GAA+CI,SAAtD;EACD,CAFuD,EAErD,CAACH,MAAD,EAASD,KAAT,CAFqD,CAAxD;EAIA,OAAO;IAAEC,MAAF;IAAUC,SAAV;IAAqBC;EAArB,CAAP;AACD"},"metadata":{},"sourceType":"module"}