{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { getValueFormats } from '@grafana/data';\nimport { Cascader } from '../Cascader/Cascader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction formatCreateLabel(input) {\n  return `Custom unit: ${input}`;\n}\n\nexport class UnitPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onChange\", value => {\n      this.props.onChange(value.value);\n    });\n  }\n\n  render() {\n    const {\n      value,\n      width\n    } = this.props; // Set the current selection\n\n    let current = undefined; // All units\n\n    const unitGroups = getValueFormats(); // Need to transform the data structure to work well with Select\n\n    const groupOptions = unitGroups.map(group => {\n      const options = group.submenu.map(unit => {\n        const sel = {\n          label: unit.text,\n          value: unit.value\n        };\n\n        if (unit.value === value) {\n          current = sel;\n        }\n\n        return sel;\n      });\n      return {\n        label: group.text,\n        value: group.text,\n        items: options\n      };\n    }); // Show the custom unit\n\n    if (value && !current) {\n      current = {\n        value,\n        label: value\n      };\n    }\n\n    return /*#__PURE__*/_jsx(Cascader, {\n      width: width,\n      initialValue: current && current.label,\n      allowCustomValue: true,\n      changeOnSelect: false,\n      formatCreateLabel: formatCreateLabel,\n      options: groupOptions,\n      placeholder: \"Choose\",\n      onSelect: this.props.onChange\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","getValueFormats","Cascader","formatCreateLabel","input","UnitPicker","value","props","onChange","render","width","current","undefined","unitGroups","groupOptions","map","group","options","submenu","unit","sel","label","text","items"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/UnitPicker/UnitPicker.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { getValueFormats, SelectableValue } from '@grafana/data';\n\nimport { Cascader, CascaderOption } from '../Cascader/Cascader';\n\ninterface Props {\n  onChange: (item?: string) => void;\n  value?: string;\n  width?: number;\n}\n\nfunction formatCreateLabel(input: string) {\n  return `Custom unit: ${input}`;\n}\n\nexport class UnitPicker extends PureComponent<Props> {\n  onChange = (value: SelectableValue<string>) => {\n    this.props.onChange(value.value);\n  };\n\n  render() {\n    const { value, width } = this.props;\n\n    // Set the current selection\n    let current: SelectableValue<string> | undefined = undefined;\n\n    // All units\n    const unitGroups = getValueFormats();\n\n    // Need to transform the data structure to work well with Select\n    const groupOptions = unitGroups.map((group) => {\n      const options = group.submenu.map((unit) => {\n        const sel = {\n          label: unit.text,\n          value: unit.value,\n        };\n        if (unit.value === value) {\n          current = sel;\n        }\n        return sel;\n      });\n\n      return {\n        label: group.text,\n        value: group.text,\n        items: options,\n      };\n    });\n\n    // Show the custom unit\n    if (value && !current) {\n      current = { value, label: value };\n    }\n\n    return (\n      <Cascader\n        width={width}\n        initialValue={current && current.label}\n        allowCustomValue\n        changeOnSelect={false}\n        formatCreateLabel={formatCreateLabel}\n        options={groupOptions as CascaderOption[]}\n        placeholder=\"Choose\"\n        onSelect={this.props.onChange}\n      />\n    );\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,eAAT,QAAiD,eAAjD;AAEA,SAASC,QAAT,QAAyC,sBAAzC;;;AAQA,SAASC,iBAAT,CAA2BC,KAA3B,EAA0C;EACxC,OAAQ,gBAAeA,KAAM,EAA7B;AACD;;AAED,OAAO,MAAMC,UAAN,SAAyBL,aAAzB,CAA8C;EAAA;IAAA;;IAAA,kCACvCM,KAAD,IAAoC;MAC7C,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,KAAK,CAACA,KAA1B;IACD,CAHkD;EAAA;;EAKnDG,MAAM,GAAG;IACP,MAAM;MAAEH,KAAF;MAASI;IAAT,IAAmB,KAAKH,KAA9B,CADO,CAGP;;IACA,IAAII,OAA4C,GAAGC,SAAnD,CAJO,CAMP;;IACA,MAAMC,UAAU,GAAGZ,eAAe,EAAlC,CAPO,CASP;;IACA,MAAMa,YAAY,GAAGD,UAAU,CAACE,GAAX,CAAgBC,KAAD,IAAW;MAC7C,MAAMC,OAAO,GAAGD,KAAK,CAACE,OAAN,CAAcH,GAAd,CAAmBI,IAAD,IAAU;QAC1C,MAAMC,GAAG,GAAG;UACVC,KAAK,EAAEF,IAAI,CAACG,IADF;UAEVhB,KAAK,EAAEa,IAAI,CAACb;QAFF,CAAZ;;QAIA,IAAIa,IAAI,CAACb,KAAL,KAAeA,KAAnB,EAA0B;UACxBK,OAAO,GAAGS,GAAV;QACD;;QACD,OAAOA,GAAP;MACD,CATe,CAAhB;MAWA,OAAO;QACLC,KAAK,EAAEL,KAAK,CAACM,IADR;QAELhB,KAAK,EAAEU,KAAK,CAACM,IAFR;QAGLC,KAAK,EAAEN;MAHF,CAAP;IAKD,CAjBoB,CAArB,CAVO,CA6BP;;IACA,IAAIX,KAAK,IAAI,CAACK,OAAd,EAAuB;MACrBA,OAAO,GAAG;QAAEL,KAAF;QAASe,KAAK,EAAEf;MAAhB,CAAV;IACD;;IAED,oBACE,KAAC,QAAD;MACE,KAAK,EAAEI,KADT;MAEE,YAAY,EAAEC,OAAO,IAAIA,OAAO,CAACU,KAFnC;MAGE,gBAAgB,MAHlB;MAIE,cAAc,EAAE,KAJlB;MAKE,iBAAiB,EAAElB,iBALrB;MAME,OAAO,EAAEW,YANX;MAOE,WAAW,EAAC,QAPd;MAQE,QAAQ,EAAE,KAAKP,KAAL,CAAWC;IARvB,EADF;EAYD;;AAnDkD"},"metadata":{},"sourceType":"module"}