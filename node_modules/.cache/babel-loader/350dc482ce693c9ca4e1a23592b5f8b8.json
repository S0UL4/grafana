{"ast":null,"code":"var _Icon;\n\nimport { css } from '@emotion/css';\nimport { isEqual, orderBy, uniqWith } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useDebounce } from 'react-use';\nimport { Stack } from '@grafana/experimental';\nimport { Card, FilterInput, Icon, Pagination, Select, TagList, useStyles2 } from '@grafana/ui';\nimport { DEFAULT_PER_PAGE_PAGINATION } from 'app/core/constants';\nimport { getQueryParamValue } from 'app/core/utils/query';\nimport { useCombinedRuleNamespaces } from './hooks/useCombinedRuleNamespaces';\nimport { usePagination } from './hooks/usePagination';\nimport { useURLSearchParams } from './hooks/useURLSearchParams';\nimport { fetchPromRulesAction, fetchRulerRulesAction } from './state/actions';\nimport { labelsMatchMatchers, matchersToString, parseMatcher, parseMatchers } from './utils/alertmanager';\nimport { GRAFANA_RULES_SOURCE_NAME } from './utils/datasource';\nimport { createViewLink } from './utils/misc';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SortOrder;\n\n(function (SortOrder) {\n  SortOrder[\"Ascending\"] = \"alpha-asc\";\n  SortOrder[\"Descending\"] = \"alpha-desc\";\n})(SortOrder || (SortOrder = {}));\n\nconst sortOptions = [{\n  label: 'Alphabetically [A-Z]',\n  value: SortOrder.Ascending\n}, {\n  label: 'Alphabetically [Z-A]',\n  value: SortOrder.Descending\n}];\nexport const AlertsFolderView = ({\n  folder\n}) => {\n  var _matchingNamespace$gr;\n\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n\n  const onTagClick = tagName => {\n    const matchers = parseMatchers(labelFilter);\n    const tagMatcherField = parseMatcher(tagName);\n    const uniqueMatchers = uniqWith([...matchers, tagMatcherField], isEqual);\n    const matchersString = matchersToString(uniqueMatchers);\n    setLabelFilter(matchersString);\n  };\n\n  useEffect(() => {\n    dispatch(fetchPromRulesAction({\n      rulesSourceName: GRAFANA_RULES_SOURCE_NAME\n    }));\n    dispatch(fetchRulerRulesAction({\n      rulesSourceName: GRAFANA_RULES_SOURCE_NAME\n    }));\n  }, [dispatch]);\n  const combinedNamespaces = useCombinedRuleNamespaces(GRAFANA_RULES_SOURCE_NAME);\n  const {\n    nameFilter,\n    labelFilter,\n    sortOrder,\n    setNameFilter,\n    setLabelFilter,\n    setSortOrder\n  } = useAlertsFolderViewParams();\n  const matchingNamespace = combinedNamespaces.find(namespace => namespace.name === folder.title);\n  const alertRules = (_matchingNamespace$gr = matchingNamespace === null || matchingNamespace === void 0 ? void 0 : matchingNamespace.groups.flatMap(group => group.rules)) !== null && _matchingNamespace$gr !== void 0 ? _matchingNamespace$gr : [];\n  const filteredRules = filterAndSortRules(alertRules, nameFilter, labelFilter, sortOrder !== null && sortOrder !== void 0 ? sortOrder : SortOrder.Ascending);\n  const hasNoResults = alertRules.length === 0 || filteredRules.length === 0;\n  const {\n    page,\n    numberOfPages,\n    onPageChange,\n    pageItems\n  } = usePagination(filteredRules, 1, DEFAULT_PER_PAGE_PAGINATION);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxs(Stack, {\n      direction: \"column\",\n      gap: 3,\n      children: [/*#__PURE__*/_jsx(FilterInput, {\n        value: nameFilter,\n        onChange: setNameFilter,\n        placeholder: \"Search alert rules by name\",\n        \"data-testid\": \"name-filter\"\n      }), /*#__PURE__*/_jsxs(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsx(Select, {\n          value: sortOrder,\n          onChange: ({\n            value\n          }) => value && setSortOrder(value),\n          options: sortOptions,\n          width: 25,\n          \"aria-label\": \"Sort\",\n          placeholder: `Sort (Default A-Z)`,\n          prefix: /*#__PURE__*/_jsx(Icon, {\n            name: sortOrder === SortOrder.Ascending ? 'sort-amount-up' : 'sort-amount-down'\n          })\n        }), /*#__PURE__*/_jsx(FilterInput, {\n          value: labelFilter,\n          onChange: setLabelFilter,\n          placeholder: \"Search alerts by labels\",\n          className: styles.filterLabelsInput,\n          \"data-testid\": \"label-filter\"\n        })]\n      }), /*#__PURE__*/_jsx(Stack, {\n        gap: 1,\n        children: pageItems.map(currentRule => /*#__PURE__*/_jsxs(Card, {\n          href: createViewLink('grafana', currentRule, ''),\n          className: styles.card,\n          \"data-testid\": \"alert-card-row\",\n          children: [/*#__PURE__*/_jsx(Card.Heading, {\n            children: currentRule.name\n          }), /*#__PURE__*/_jsx(Card.Tags, {\n            children: /*#__PURE__*/_jsx(TagList, {\n              onClick: onTagClick,\n              tags: Object.entries(currentRule.labels).map(([label, value]) => `${label}=${value}`)\n            })\n          }), /*#__PURE__*/_jsx(Card.Meta, {\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                name: \"folder\"\n              })), \" \", folder.title]\n            })\n          })]\n        }, currentRule.name))\n      }), hasNoResults && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.noResults,\n        children: \"No alert rules found\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.pagination,\n        children: /*#__PURE__*/_jsx(Pagination, {\n          currentPage: page,\n          numberOfPages: numberOfPages,\n          onNavigate: onPageChange,\n          hideWhenSinglePage: true\n        })\n      })]\n    })\n  });\n};\nvar AlertFolderViewParams;\n\n(function (AlertFolderViewParams) {\n  AlertFolderViewParams[\"nameFilter\"] = \"nameFilter\";\n  AlertFolderViewParams[\"labelFilter\"] = \"labelFilter\";\n  AlertFolderViewParams[\"sortOrder\"] = \"sort\";\n})(AlertFolderViewParams || (AlertFolderViewParams = {}));\n\nfunction useAlertsFolderViewParams() {\n  var _searchParams$get, _searchParams$get2;\n\n  const [searchParams, setSearchParams] = useURLSearchParams();\n  const [nameFilter, setNameFilter] = useState((_searchParams$get = searchParams.get(AlertFolderViewParams.nameFilter)) !== null && _searchParams$get !== void 0 ? _searchParams$get : '');\n  const [labelFilter, setLabelFilter] = useState((_searchParams$get2 = searchParams.get(AlertFolderViewParams.labelFilter)) !== null && _searchParams$get2 !== void 0 ? _searchParams$get2 : '');\n  const sortParam = searchParams.get(AlertFolderViewParams.sortOrder);\n  const [sortOrder, setSortOrder] = useState(sortParam === SortOrder.Ascending ? SortOrder.Ascending : sortParam === SortOrder.Descending ? SortOrder.Descending : undefined);\n  useDebounce(() => setSearchParams({\n    [AlertFolderViewParams.nameFilter]: getQueryParamValue(nameFilter),\n    [AlertFolderViewParams.labelFilter]: getQueryParamValue(labelFilter),\n    [AlertFolderViewParams.sortOrder]: getQueryParamValue(sortOrder)\n  }, true), 400, [nameFilter, labelFilter, sortOrder]);\n  return {\n    nameFilter,\n    labelFilter,\n    sortOrder,\n    setNameFilter,\n    setLabelFilter,\n    setSortOrder\n  };\n}\n\nfunction filterAndSortRules(originalRules, nameFilter, labelFilter, sortOrder) {\n  const matchers = parseMatchers(labelFilter);\n  let rules = originalRules.filter(rule => rule.name.toLowerCase().includes(nameFilter.toLowerCase()) && labelsMatchMatchers(rule.labels, matchers));\n  return orderBy(rules, x => x.name.toLowerCase(), [sortOrder === SortOrder.Ascending ? 'asc' : 'desc']);\n}\n\nexport const getStyles = theme => ({\n  container: css`\n    padding: ${theme.spacing(1)};\n  `,\n  card: css`\n    grid-template-columns: auto 1fr 2fr;\n    margin: 0;\n  `,\n  pagination: css`\n    align-self: center;\n  `,\n  filterLabelsInput: css`\n    flex: 1;\n    width: auto;\n    min-width: 240px;\n  `,\n  noResults: css`\n    padding: ${theme.spacing(2)};\n    background-color: ${theme.colors.background.secondary};\n    font-style: italic;\n  `\n});","map":{"version":3,"names":["css","isEqual","orderBy","uniqWith","React","useEffect","useState","useDispatch","useDebounce","Stack","Card","FilterInput","Icon","Pagination","Select","TagList","useStyles2","DEFAULT_PER_PAGE_PAGINATION","getQueryParamValue","useCombinedRuleNamespaces","usePagination","useURLSearchParams","fetchPromRulesAction","fetchRulerRulesAction","labelsMatchMatchers","matchersToString","parseMatcher","parseMatchers","GRAFANA_RULES_SOURCE_NAME","createViewLink","SortOrder","sortOptions","label","value","Ascending","Descending","AlertsFolderView","folder","styles","getStyles","dispatch","onTagClick","tagName","matchers","labelFilter","tagMatcherField","uniqueMatchers","matchersString","setLabelFilter","rulesSourceName","combinedNamespaces","nameFilter","sortOrder","setNameFilter","setSortOrder","useAlertsFolderViewParams","matchingNamespace","find","namespace","name","title","alertRules","groups","flatMap","group","rules","filteredRules","filterAndSortRules","hasNoResults","length","page","numberOfPages","onPageChange","pageItems","container","filterLabelsInput","map","currentRule","card","Object","entries","labels","noResults","pagination","AlertFolderViewParams","searchParams","setSearchParams","get","sortParam","undefined","originalRules","filter","rule","toLowerCase","includes","x","theme","spacing","colors","background","secondary"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/AlertsFolderView.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { isEqual, orderBy, uniqWith } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useDebounce } from 'react-use';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Card, FilterInput, Icon, Pagination, Select, TagList, useStyles2 } from '@grafana/ui';\nimport { DEFAULT_PER_PAGE_PAGINATION } from 'app/core/constants';\nimport { getQueryParamValue } from 'app/core/utils/query';\nimport { FolderState } from 'app/types';\nimport { CombinedRule } from 'app/types/unified-alerting';\n\nimport { useCombinedRuleNamespaces } from './hooks/useCombinedRuleNamespaces';\nimport { usePagination } from './hooks/usePagination';\nimport { useURLSearchParams } from './hooks/useURLSearchParams';\nimport { fetchPromRulesAction, fetchRulerRulesAction } from './state/actions';\nimport { labelsMatchMatchers, matchersToString, parseMatcher, parseMatchers } from './utils/alertmanager';\nimport { GRAFANA_RULES_SOURCE_NAME } from './utils/datasource';\nimport { createViewLink } from './utils/misc';\n\ninterface Props {\n  folder: FolderState;\n}\n\nenum SortOrder {\n  Ascending = 'alpha-asc',\n  Descending = 'alpha-desc',\n}\n\nconst sortOptions: Array<SelectableValue<SortOrder>> = [\n  { label: 'Alphabetically [A-Z]', value: SortOrder.Ascending },\n  { label: 'Alphabetically [Z-A]', value: SortOrder.Descending },\n];\n\nexport const AlertsFolderView = ({ folder }: Props) => {\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n\n  const onTagClick = (tagName: string) => {\n    const matchers = parseMatchers(labelFilter);\n    const tagMatcherField = parseMatcher(tagName);\n    const uniqueMatchers = uniqWith([...matchers, tagMatcherField], isEqual);\n    const matchersString = matchersToString(uniqueMatchers);\n    setLabelFilter(matchersString);\n  };\n\n  useEffect(() => {\n    dispatch(fetchPromRulesAction({ rulesSourceName: GRAFANA_RULES_SOURCE_NAME }));\n    dispatch(fetchRulerRulesAction({ rulesSourceName: GRAFANA_RULES_SOURCE_NAME }));\n  }, [dispatch]);\n\n  const combinedNamespaces = useCombinedRuleNamespaces(GRAFANA_RULES_SOURCE_NAME);\n  const { nameFilter, labelFilter, sortOrder, setNameFilter, setLabelFilter, setSortOrder } =\n    useAlertsFolderViewParams();\n\n  const matchingNamespace = combinedNamespaces.find((namespace) => namespace.name === folder.title);\n  const alertRules = matchingNamespace?.groups.flatMap((group) => group.rules) ?? [];\n\n  const filteredRules = filterAndSortRules(alertRules, nameFilter, labelFilter, sortOrder ?? SortOrder.Ascending);\n\n  const hasNoResults = alertRules.length === 0 || filteredRules.length === 0;\n  const { page, numberOfPages, onPageChange, pageItems } = usePagination(filteredRules, 1, DEFAULT_PER_PAGE_PAGINATION);\n\n  return (\n    <div className={styles.container}>\n      <Stack direction=\"column\" gap={3}>\n        <FilterInput\n          value={nameFilter}\n          onChange={setNameFilter}\n          placeholder=\"Search alert rules by name\"\n          data-testid=\"name-filter\"\n        />\n        <Stack direction=\"row\">\n          <Select<SortOrder>\n            value={sortOrder}\n            onChange={({ value }) => value && setSortOrder(value)}\n            options={sortOptions}\n            width={25}\n            aria-label=\"Sort\"\n            placeholder={`Sort (Default A-Z)`}\n            prefix={<Icon name={sortOrder === SortOrder.Ascending ? 'sort-amount-up' : 'sort-amount-down'} />}\n          />\n          <FilterInput\n            value={labelFilter}\n            onChange={setLabelFilter}\n            placeholder=\"Search alerts by labels\"\n            className={styles.filterLabelsInput}\n            data-testid=\"label-filter\"\n          />\n        </Stack>\n\n        <Stack gap={1}>\n          {pageItems.map((currentRule) => (\n            <Card\n              key={currentRule.name}\n              href={createViewLink('grafana', currentRule, '')}\n              className={styles.card}\n              data-testid=\"alert-card-row\"\n            >\n              <Card.Heading>{currentRule.name}</Card.Heading>\n              <Card.Tags>\n                <TagList\n                  onClick={onTagClick}\n                  tags={Object.entries(currentRule.labels).map(([label, value]) => `${label}=${value}`)}\n                />\n              </Card.Tags>\n              <Card.Meta>\n                <div>\n                  <Icon name=\"folder\" /> {folder.title}\n                </div>\n              </Card.Meta>\n            </Card>\n          ))}\n        </Stack>\n        {hasNoResults && <div className={styles.noResults}>No alert rules found</div>}\n        <div className={styles.pagination}>\n          <Pagination\n            currentPage={page}\n            numberOfPages={numberOfPages}\n            onNavigate={onPageChange}\n            hideWhenSinglePage={true}\n          />\n        </div>\n      </Stack>\n    </div>\n  );\n};\n\nenum AlertFolderViewParams {\n  nameFilter = 'nameFilter',\n  labelFilter = 'labelFilter',\n  sortOrder = 'sort',\n}\n\nfunction useAlertsFolderViewParams() {\n  const [searchParams, setSearchParams] = useURLSearchParams();\n\n  const [nameFilter, setNameFilter] = useState(searchParams.get(AlertFolderViewParams.nameFilter) ?? '');\n  const [labelFilter, setLabelFilter] = useState(searchParams.get(AlertFolderViewParams.labelFilter) ?? '');\n\n  const sortParam = searchParams.get(AlertFolderViewParams.sortOrder);\n  const [sortOrder, setSortOrder] = useState<SortOrder | undefined>(\n    sortParam === SortOrder.Ascending\n      ? SortOrder.Ascending\n      : sortParam === SortOrder.Descending\n      ? SortOrder.Descending\n      : undefined\n  );\n\n  useDebounce(\n    () =>\n      setSearchParams(\n        {\n          [AlertFolderViewParams.nameFilter]: getQueryParamValue(nameFilter),\n          [AlertFolderViewParams.labelFilter]: getQueryParamValue(labelFilter),\n          [AlertFolderViewParams.sortOrder]: getQueryParamValue(sortOrder),\n        },\n        true\n      ),\n    400,\n    [nameFilter, labelFilter, sortOrder]\n  );\n\n  return { nameFilter, labelFilter, sortOrder, setNameFilter, setLabelFilter, setSortOrder };\n}\n\nfunction filterAndSortRules(\n  originalRules: CombinedRule[],\n  nameFilter: string,\n  labelFilter: string,\n  sortOrder: SortOrder\n) {\n  const matchers = parseMatchers(labelFilter);\n  let rules = originalRules.filter(\n    (rule) => rule.name.toLowerCase().includes(nameFilter.toLowerCase()) && labelsMatchMatchers(rule.labels, matchers)\n  );\n\n  return orderBy(rules, (x) => x.name.toLowerCase(), [sortOrder === SortOrder.Ascending ? 'asc' : 'desc']);\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(1)};\n  `,\n  card: css`\n    grid-template-columns: auto 1fr 2fr;\n    margin: 0;\n  `,\n  pagination: css`\n    align-self: center;\n  `,\n  filterLabelsInput: css`\n    flex: 1;\n    width: auto;\n    min-width: 240px;\n  `,\n  noResults: css`\n    padding: ${theme.spacing(2)};\n    background-color: ${theme.colors.background.secondary};\n    font-style: italic;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}