{"ast":null,"code":"var _h, _Icon;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { Button, Field, FieldArray, Form, Icon, Input, Modal, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AddAlertManagerModal = ({\n  alertmanagers,\n  onChangeAlertmanagerConfig,\n  onClose\n}) => {\n  const styles = useStyles2(getStyles);\n  const defaultValues = useMemo(() => ({\n    alertmanagers: alertmanagers\n  }), [alertmanagers]);\n\n  const modalTitle = /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.modalTitle,\n    children: [/*#__PURE__*/_jsx(Icon, {\n      name: \"bell\",\n      className: styles.modalIcon\n    }), _h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n      children: \"Add Alertmanager\"\n    }))]\n  });\n\n  const onSubmit = values => {\n    onChangeAlertmanagerConfig(values.alertmanagers.map(am => cleanAlertmanagerUrl(am.url)));\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxs(Modal, {\n    title: modalTitle,\n    isOpen: true,\n    onDismiss: onClose,\n    className: styles.modal,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.description,\n      children: \"We use a service discovery method to find existing Alertmanagers for a given URL.\"\n    }), /*#__PURE__*/_jsx(Form, {\n      onSubmit: onSubmit,\n      defaultValues: defaultValues,\n      children: ({\n        register,\n        control,\n        errors\n      }) => /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(FieldArray, {\n          control: control,\n          name: \"alertmanagers\",\n          children: ({\n            fields,\n            append,\n            remove\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.fieldArray,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.bold,\n              children: \"Source url\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.muted,\n              children: \"Authentication can be done via URL (e.g. user:password@myalertmanager.com) and only the Alertmanager v2 API is supported. The suffix is added internally, there is no need to specify it.\"\n            }), fields.map((field, index) => {\n              var _errors$alertmanagers;\n\n              return /*#__PURE__*/_jsx(Field, {\n                invalid: !!(errors !== null && errors !== void 0 && (_errors$alertmanagers = errors.alertmanagers) !== null && _errors$alertmanagers !== void 0 && _errors$alertmanagers[index]),\n                error: \"Field is required\",\n                children: /*#__PURE__*/_jsx(Input, Object.assign({\n                  className: styles.input,\n                  defaultValue: field.url\n                }, register(`alertmanagers.${index}.url`, {\n                  required: true\n                }), {\n                  placeholder: \"http://localhost:9093\",\n                  addonAfter: /*#__PURE__*/_jsx(Button, {\n                    \"aria-label\": \"Remove alertmanager\",\n                    type: \"button\",\n                    onClick: () => remove(index),\n                    variant: \"destructive\",\n                    className: styles.destroyInputRow,\n                    children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                      name: \"trash-alt\"\n                    }))\n                  })\n                }))\n              }, `${field.id}-${index}`);\n            }), /*#__PURE__*/_jsx(Button, {\n              type: \"button\",\n              variant: \"secondary\",\n              onClick: () => append({\n                url: ''\n              }),\n              children: \"Add URL\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            type: \"submit\",\n            onSubmit: () => onSubmit,\n            children: \"Add Alertmanagers\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nfunction cleanAlertmanagerUrl(url) {\n  return url.replace(/\\/$/, '').replace(/\\/api\\/v[1|2]\\/alerts/i, '');\n}\n\nconst getStyles = theme => {\n  const muted = css`\n    color: ${theme.colors.text.secondary};\n  `;\n  return {\n    description: cx(css`\n        margin-bottom: ${theme.spacing(2)};\n      `, muted),\n    muted: muted,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    modal: css``,\n    modalIcon: cx(muted, css`\n        margin-right: ${theme.spacing(1)};\n      `),\n    modalTitle: css`\n      display: flex;\n    `,\n    input: css`\n      margin-bottom: ${theme.spacing(1)};\n      margin-right: ${theme.spacing(1)};\n    `,\n    inputRow: css`\n      display: flex;\n    `,\n    destroyInputRow: css`\n      padding: ${theme.spacing(1)};\n    `,\n    fieldArray: css`\n      margin-bottom: ${theme.spacing(4)};\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useMemo","Button","Field","FieldArray","Form","Icon","Input","Modal","useStyles2","AddAlertManagerModal","alertmanagers","onChangeAlertmanagerConfig","onClose","styles","getStyles","defaultValues","modalTitle","modalIcon","onSubmit","values","map","am","cleanAlertmanagerUrl","url","modal","description","register","control","errors","fields","append","remove","fieldArray","bold","muted","field","index","input","required","destroyInputRow","id","replace","theme","colors","text","secondary","spacing","typography","fontWeightBold","inputRow"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/admin/AddAlertManagerModal.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, useMemo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Field, FieldArray, Form, Icon, Input, Modal, useStyles2 } from '@grafana/ui';\nimport { AlertmanagerUrl } from 'app/plugins/datasource/alertmanager/types';\n\ninterface Props {\n  onClose: () => void;\n  alertmanagers: AlertmanagerUrl[];\n  onChangeAlertmanagerConfig: (alertmanagers: string[]) => void;\n}\n\nexport const AddAlertManagerModal: FC<Props> = ({ alertmanagers, onChangeAlertmanagerConfig, onClose }) => {\n  const styles = useStyles2(getStyles);\n  const defaultValues: Record<string, AlertmanagerUrl[]> = useMemo(\n    () => ({\n      alertmanagers: alertmanagers,\n    }),\n    [alertmanagers]\n  );\n\n  const modalTitle = (\n    <div className={styles.modalTitle}>\n      <Icon name=\"bell\" className={styles.modalIcon} />\n      <h3>Add Alertmanager</h3>\n    </div>\n  );\n\n  const onSubmit = (values: Record<string, AlertmanagerUrl[]>) => {\n    onChangeAlertmanagerConfig(values.alertmanagers.map((am) => cleanAlertmanagerUrl(am.url)));\n    onClose();\n  };\n\n  return (\n    <Modal title={modalTitle} isOpen={true} onDismiss={onClose} className={styles.modal}>\n      <div className={styles.description}>\n        We use a service discovery method to find existing Alertmanagers for a given URL.\n      </div>\n      <Form onSubmit={onSubmit} defaultValues={defaultValues}>\n        {({ register, control, errors }) => (\n          <div>\n            <FieldArray control={control} name=\"alertmanagers\">\n              {({ fields, append, remove }) => (\n                <div className={styles.fieldArray}>\n                  <div className={styles.bold}>Source url</div>\n                  <div className={styles.muted}>\n                    Authentication can be done via URL (e.g. user:password@myalertmanager.com) and only the Alertmanager\n                    v2 API is supported. The suffix is added internally, there is no need to specify it.\n                  </div>\n                  {fields.map((field, index) => {\n                    return (\n                      <Field\n                        invalid={!!errors?.alertmanagers?.[index]}\n                        error=\"Field is required\"\n                        key={`${field.id}-${index}`}\n                      >\n                        <Input\n                          className={styles.input}\n                          defaultValue={field.url}\n                          {...register(`alertmanagers.${index}.url`, { required: true })}\n                          placeholder=\"http://localhost:9093\"\n                          addonAfter={\n                            <Button\n                              aria-label=\"Remove alertmanager\"\n                              type=\"button\"\n                              onClick={() => remove(index)}\n                              variant=\"destructive\"\n                              className={styles.destroyInputRow}\n                            >\n                              <Icon name=\"trash-alt\" />\n                            </Button>\n                          }\n                        />\n                      </Field>\n                    );\n                  })}\n                  <Button type=\"button\" variant=\"secondary\" onClick={() => append({ url: '' })}>\n                    Add URL\n                  </Button>\n                </div>\n              )}\n            </FieldArray>\n            <div>\n              <Button type=\"submit\" onSubmit={() => onSubmit}>\n                Add Alertmanagers\n              </Button>\n            </div>\n          </div>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nfunction cleanAlertmanagerUrl(url: string): string {\n  return url.replace(/\\/$/, '').replace(/\\/api\\/v[1|2]\\/alerts/i, '');\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const muted = css`\n    color: ${theme.colors.text.secondary};\n  `;\n  return {\n    description: cx(\n      css`\n        margin-bottom: ${theme.spacing(2)};\n      `,\n      muted\n    ),\n    muted: muted,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    modal: css``,\n    modalIcon: cx(\n      muted,\n      css`\n        margin-right: ${theme.spacing(1)};\n      `\n    ),\n    modalTitle: css`\n      display: flex;\n    `,\n    input: css`\n      margin-bottom: ${theme.spacing(1)};\n      margin-right: ${theme.spacing(1)};\n    `,\n    inputRow: css`\n      display: flex;\n    `,\n    destroyInputRow: css`\n      padding: ${theme.spacing(1)};\n    `,\n    fieldArray: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}