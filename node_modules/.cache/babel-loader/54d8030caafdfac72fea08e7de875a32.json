{"ast":null,"code":"import React from 'react';\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { IconButton } from '../../IconButton';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\nimport { MetricEditor } from './MetricEditor';\nimport { addMetric, removeMetric, toggleMetricVisibility } from './state/actions';\nimport { metricAggregationConfig } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const MetricAggregationsEditor = ({\n  nextId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    metrics\n  } = useQuery();\n  const totalMetrics = (metrics === null || metrics === void 0 ? void 0 : metrics.length) || 0;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: metrics === null || metrics === void 0 ? void 0 : metrics.map((metric, index) => /*#__PURE__*/_jsxs(QueryEditorRow, {\n      label: `Metric (${metric.id})`,\n      hidden: metric.hide,\n      onHideClick: () => dispatch(toggleMetricVisibility(metric.id)),\n      onRemoveClick: totalMetrics > 1 && (() => dispatch(removeMetric(metric.id))),\n      children: [/*#__PURE__*/_jsx(MetricEditor, {\n        value: metric\n      }), !metricAggregationConfig[metric.type].isSingleMetric && index === 0 && /*#__PURE__*/_jsx(IconButton, {\n        iconName: \"plus\",\n        onClick: () => dispatch(addMetric(nextId)),\n        label: \"add\"\n      })]\n    }, `${metric.type}-${metric.id}`))\n  });\n};","map":{"version":3,"names":["React","useDispatch","IconButton","useQuery","QueryEditorRow","MetricEditor","addMetric","removeMetric","toggleMetricVisibility","metricAggregationConfig","MetricAggregationsEditor","nextId","dispatch","metrics","totalMetrics","length","map","metric","index","id","hide","type","isSingleMetric"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { IconButton } from '../../IconButton';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\n\nimport { MetricEditor } from './MetricEditor';\nimport { MetricAggregation } from './aggregations';\nimport { addMetric, removeMetric, toggleMetricVisibility } from './state/actions';\nimport { metricAggregationConfig } from './utils';\n\ninterface Props {\n  nextId: MetricAggregation['id'];\n}\n\nexport const MetricAggregationsEditor = ({ nextId }: Props) => {\n  const dispatch = useDispatch();\n  const { metrics } = useQuery();\n  const totalMetrics = metrics?.length || 0;\n\n  return (\n    <>\n      {metrics?.map((metric, index) => (\n        <QueryEditorRow\n          key={`${metric.type}-${metric.id}`}\n          label={`Metric (${metric.id})`}\n          hidden={metric.hide}\n          onHideClick={() => dispatch(toggleMetricVisibility(metric.id))}\n          onRemoveClick={totalMetrics > 1 && (() => dispatch(removeMetric(metric.id)))}\n        >\n          <MetricEditor value={metric} />\n\n          {!metricAggregationConfig[metric.type].isSingleMetric && index === 0 && (\n            <IconButton iconName=\"plus\" onClick={() => dispatch(addMetric(nextId))} label=\"add\" />\n          )}\n        </QueryEditorRow>\n      ))}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,sBAAlC,QAAgE,iBAAhE;AACA,SAASC,uBAAT,QAAwC,SAAxC;;;;AAMA,OAAO,MAAMC,wBAAwB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAuB;EAC7D,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAM;IAAEY;EAAF,IAAcV,QAAQ,EAA5B;EACA,MAAMW,YAAY,GAAG,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,MAAT,KAAmB,CAAxC;EAEA,oBACE;IAAA,UACGF,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,kBACZ,MAAC,cAAD;MAEE,KAAK,EAAG,WAAUD,MAAM,CAACE,EAAG,GAF9B;MAGE,MAAM,EAAEF,MAAM,CAACG,IAHjB;MAIE,WAAW,EAAE,MAAMR,QAAQ,CAACJ,sBAAsB,CAACS,MAAM,CAACE,EAAR,CAAvB,CAJ7B;MAKE,aAAa,EAAEL,YAAY,GAAG,CAAf,KAAqB,MAAMF,QAAQ,CAACL,YAAY,CAACU,MAAM,CAACE,EAAR,CAAb,CAAnC,CALjB;MAAA,wBAOE,KAAC,YAAD;QAAc,KAAK,EAAEF;MAArB,EAPF,EASG,CAACR,uBAAuB,CAACQ,MAAM,CAACI,IAAR,CAAvB,CAAqCC,cAAtC,IAAwDJ,KAAK,KAAK,CAAlE,iBACC,KAAC,UAAD;QAAY,QAAQ,EAAC,MAArB;QAA4B,OAAO,EAAE,MAAMN,QAAQ,CAACN,SAAS,CAACK,MAAD,CAAV,CAAnD;QAAwE,KAAK,EAAC;MAA9E,EAVJ;IAAA,GACQ,GAAEM,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACE,EAAG,EADnC,CADD;EADH,EADF;AAmBD,CAxBM"},"metadata":{},"sourceType":"module"}