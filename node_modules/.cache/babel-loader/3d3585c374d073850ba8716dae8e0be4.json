{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { DataTransformerID, standardTransformers } from '@grafana/data';\nimport { InlineField, InlineSwitch, InlineFieldRow, Select } from '@grafana/ui';\nimport { useAllFieldNamesFromDataFrames } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SortByTransformerEditor = ({\n  input,\n  options,\n  onChange\n}) => {\n  var _options$sort;\n\n  const fieldNames = useAllFieldNamesFromDataFrames(input).map(item => ({\n    label: item,\n    value: item\n  })); // Only supports single sort for now\n\n  const onSortChange = useCallback((idx, cfg) => {\n    onChange(Object.assign({}, options, {\n      sort: [cfg]\n    }));\n  }, [onChange, options]);\n  const sorts = (_options$sort = options.sort) !== null && _options$sort !== void 0 && _options$sort.length ? options.sort : [{}];\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: sorts.map((s, index) => {\n      return /*#__PURE__*/_jsxs(InlineFieldRow, {\n        children: [/*#__PURE__*/_jsx(InlineField, {\n          label: \"Field\",\n          labelWidth: 10,\n          grow: true,\n          children: /*#__PURE__*/_jsx(Select, {\n            options: fieldNames,\n            value: s.field,\n            placeholder: \"Select field\",\n            onChange: v => {\n              onSortChange(index, Object.assign({}, s, {\n                field: v.value\n              }));\n            }\n          })\n        }), /*#__PURE__*/_jsx(InlineField, {\n          label: \"Reverse\",\n          children: /*#__PURE__*/_jsx(InlineSwitch, {\n            value: !!s.desc,\n            onChange: () => {\n              onSortChange(index, Object.assign({}, s, {\n                desc: !!!s.desc\n              }));\n            }\n          })\n        })]\n      }, `${s.field}/${index}`);\n    })\n  });\n};\nexport const sortByTransformRegistryItem = {\n  id: DataTransformerID.sortBy,\n  editor: SortByTransformerEditor,\n  transformation: standardTransformers.sortByTransformer,\n  name: standardTransformers.sortByTransformer.name,\n  description: standardTransformers.sortByTransformer.description\n};","map":{"version":3,"names":["React","useCallback","DataTransformerID","standardTransformers","InlineField","InlineSwitch","InlineFieldRow","Select","useAllFieldNamesFromDataFrames","SortByTransformerEditor","input","options","onChange","fieldNames","map","item","label","value","onSortChange","idx","cfg","sort","sorts","length","s","index","field","v","desc","sortByTransformRegistryItem","id","sortBy","editor","transformation","sortByTransformer","name","description"],"sources":["/home/soula/grafana/public/app/features/transformers/editors/SortByTransformerEditor.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { DataTransformerID, standardTransformers, TransformerRegistryItem, TransformerUIProps } from '@grafana/data';\nimport { SortByField, SortByTransformerOptions } from '@grafana/data/src/transformations/transformers/sortBy';\nimport { InlineField, InlineSwitch, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { useAllFieldNamesFromDataFrames } from '../utils';\n\nexport const SortByTransformerEditor: React.FC<TransformerUIProps<SortByTransformerOptions>> = ({\n  input,\n  options,\n  onChange,\n}) => {\n  const fieldNames = useAllFieldNamesFromDataFrames(input).map((item: string) => ({ label: item, value: item }));\n\n  // Only supports single sort for now\n  const onSortChange = useCallback(\n    (idx: number, cfg: SortByField) => {\n      onChange({ ...options, sort: [cfg] });\n    },\n    [onChange, options]\n  );\n\n  const sorts = options.sort?.length ? options.sort : [{} as SortByField];\n\n  return (\n    <div>\n      {sorts.map((s, index) => {\n        return (\n          <InlineFieldRow key={`${s.field}/${index}`}>\n            <InlineField label=\"Field\" labelWidth={10} grow={true}>\n              <Select\n                options={fieldNames}\n                value={s.field}\n                placeholder=\"Select field\"\n                onChange={(v) => {\n                  onSortChange(index, { ...s, field: v.value! });\n                }}\n              />\n            </InlineField>\n            <InlineField label=\"Reverse\">\n              <InlineSwitch\n                value={!!s.desc}\n                onChange={() => {\n                  onSortChange(index, { ...s, desc: !!!s.desc });\n                }}\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const sortByTransformRegistryItem: TransformerRegistryItem<SortByTransformerOptions> = {\n  id: DataTransformerID.sortBy,\n  editor: SortByTransformerEditor,\n  transformation: standardTransformers.sortByTransformer,\n  name: standardTransformers.sortByTransformer.name,\n  description: standardTransformers.sortByTransformer.description,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAqG,eAArG;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,EAAoDC,MAApD,QAAkE,aAAlE;AAEA,SAASC,8BAAT,QAA+C,UAA/C;;;AAEA,OAAO,MAAMC,uBAA+E,GAAG,CAAC;EAC9FC,KAD8F;EAE9FC,OAF8F;EAG9FC;AAH8F,CAAD,KAIzF;EAAA;;EACJ,MAAMC,UAAU,GAAGL,8BAA8B,CAACE,KAAD,CAA9B,CAAsCI,GAAtC,CAA2CC,IAAD,KAAmB;IAAEC,KAAK,EAAED,IAAT;IAAeE,KAAK,EAAEF;EAAtB,CAAnB,CAA1C,CAAnB,CADI,CAGJ;;EACA,MAAMG,YAAY,GAAGjB,WAAW,CAC9B,CAACkB,GAAD,EAAcC,GAAd,KAAmC;IACjCR,QAAQ,mBAAMD,OAAN;MAAeU,IAAI,EAAE,CAACD,GAAD;IAArB,GAAR;EACD,CAH6B,EAI9B,CAACR,QAAD,EAAWD,OAAX,CAJ8B,CAAhC;EAOA,MAAMW,KAAK,GAAG,iBAAAX,OAAO,CAACU,IAAR,wDAAcE,MAAd,GAAuBZ,OAAO,CAACU,IAA/B,GAAsC,CAAC,EAAD,CAApD;EAEA,oBACE;IAAA,UACGC,KAAK,CAACR,GAAN,CAAU,CAACU,CAAD,EAAIC,KAAJ,KAAc;MACvB,oBACE,MAAC,cAAD;QAAA,wBACE,KAAC,WAAD;UAAa,KAAK,EAAC,OAAnB;UAA2B,UAAU,EAAE,EAAvC;UAA2C,IAAI,EAAE,IAAjD;UAAA,uBACE,KAAC,MAAD;YACE,OAAO,EAAEZ,UADX;YAEE,KAAK,EAAEW,CAAC,CAACE,KAFX;YAGE,WAAW,EAAC,cAHd;YAIE,QAAQ,EAAGC,CAAD,IAAO;cACfT,YAAY,CAACO,KAAD,oBAAaD,CAAb;gBAAgBE,KAAK,EAAEC,CAAC,CAACV;cAAzB,GAAZ;YACD;UANH;QADF,EADF,eAWE,KAAC,WAAD;UAAa,KAAK,EAAC,SAAnB;UAAA,uBACE,KAAC,YAAD;YACE,KAAK,EAAE,CAAC,CAACO,CAAC,CAACI,IADb;YAEE,QAAQ,EAAE,MAAM;cACdV,YAAY,CAACO,KAAD,oBAAaD,CAAb;gBAAgBI,IAAI,EAAE,CAAC,CAAC,CAACJ,CAAC,CAACI;cAA3B,GAAZ;YACD;UAJH;QADF,EAXF;MAAA,GAAsB,GAAEJ,CAAC,CAACE,KAAM,IAAGD,KAAM,EAAzC,CADF;IAsBD,CAvBA;EADH,EADF;AA4BD,CA7CM;AA+CP,OAAO,MAAMI,2BAA8E,GAAG;EAC5FC,EAAE,EAAE5B,iBAAiB,CAAC6B,MADsE;EAE5FC,MAAM,EAAEvB,uBAFoF;EAG5FwB,cAAc,EAAE9B,oBAAoB,CAAC+B,iBAHuD;EAI5FC,IAAI,EAAEhC,oBAAoB,CAAC+B,iBAArB,CAAuCC,IAJ+C;EAK5FC,WAAW,EAAEjC,oBAAoB,CAAC+B,iBAArB,CAAuCE;AALwC,CAAvF"},"metadata":{},"sourceType":"module"}