{"ast":null,"code":"import React, { useCallback } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ClipboardButton, CodeEditor, Modal } from '@grafana/ui';\nimport { notifyApp } from '../../../../core/actions';\nimport { createSuccessNotification } from '../../../../core/copy/appNotification';\nimport { dispatch } from '../../../../store/store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ViewJsonModal({\n  json,\n  onDismiss\n}) {\n  const getClipboardText = useCallback(() => json, [json]);\n\n  const onClipboardCopy = () => {\n    dispatch(notifyApp(createSuccessNotification('Content copied to clipboard')));\n  };\n\n  return /*#__PURE__*/_jsxs(Modal, {\n    title: \"JSON\",\n    onDismiss: onDismiss,\n    onClickBackdrop: onDismiss,\n    isOpen: true,\n    children: [/*#__PURE__*/_jsx(AutoSizer, {\n      disableHeight: true,\n      children: ({\n        width\n      }) => /*#__PURE__*/_jsx(CodeEditor, {\n        value: json,\n        language: \"json\",\n        showMiniMap: false,\n        height: \"500px\",\n        width: width\n      })\n    }), /*#__PURE__*/_jsx(Modal.ButtonRow, {\n      children: /*#__PURE__*/_jsx(ClipboardButton, {\n        getText: getClipboardText,\n        onClipboardCopy: onClipboardCopy,\n        children: \"Copy to Clipboard\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useCallback","AutoSizer","ClipboardButton","CodeEditor","Modal","notifyApp","createSuccessNotification","dispatch","ViewJsonModal","json","onDismiss","getClipboardText","onClipboardCopy","width"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/ShareModal/ViewJsonModal.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { ClipboardButton, CodeEditor, Modal } from '@grafana/ui';\n\nimport { notifyApp } from '../../../../core/actions';\nimport { createSuccessNotification } from '../../../../core/copy/appNotification';\nimport { dispatch } from '../../../../store/store';\n\nexport interface ViewJsonModalProps {\n  json: string;\n  onDismiss: () => void;\n}\n\nexport function ViewJsonModal({ json, onDismiss }: ViewJsonModalProps): JSX.Element {\n  const getClipboardText = useCallback(() => json, [json]);\n  const onClipboardCopy = () => {\n    dispatch(notifyApp(createSuccessNotification('Content copied to clipboard')));\n  };\n  return (\n    <Modal title=\"JSON\" onDismiss={onDismiss} onClickBackdrop={onDismiss} isOpen>\n      <AutoSizer disableHeight>\n        {({ width }) => <CodeEditor value={json} language=\"json\" showMiniMap={false} height=\"500px\" width={width} />}\n      </AutoSizer>\n      <Modal.ButtonRow>\n        <ClipboardButton getText={getClipboardText} onClipboardCopy={onClipboardCopy}>\n          Copy to Clipboard\n        </ClipboardButton>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,KAAtC,QAAmD,aAAnD;AAEA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,yBAAT,QAA0C,uCAA1C;AACA,SAASC,QAAT,QAAyB,yBAAzB;;;AAOA,OAAO,SAASC,aAAT,CAAuB;EAAEC,IAAF;EAAQC;AAAR,CAAvB,EAA6E;EAClF,MAAMC,gBAAgB,GAAGX,WAAW,CAAC,MAAMS,IAAP,EAAa,CAACA,IAAD,CAAb,CAApC;;EACA,MAAMG,eAAe,GAAG,MAAM;IAC5BL,QAAQ,CAACF,SAAS,CAACC,yBAAyB,CAAC,6BAAD,CAA1B,CAAV,CAAR;EACD,CAFD;;EAGA,oBACE,MAAC,KAAD;IAAO,KAAK,EAAC,MAAb;IAAoB,SAAS,EAAEI,SAA/B;IAA0C,eAAe,EAAEA,SAA3D;IAAsE,MAAM,MAA5E;IAAA,wBACE,KAAC,SAAD;MAAW,aAAa,MAAxB;MAAA,UACG,CAAC;QAAEG;MAAF,CAAD,kBAAe,KAAC,UAAD;QAAY,KAAK,EAAEJ,IAAnB;QAAyB,QAAQ,EAAC,MAAlC;QAAyC,WAAW,EAAE,KAAtD;QAA6D,MAAM,EAAC,OAApE;QAA4E,KAAK,EAAEI;MAAnF;IADlB,EADF,eAIE,KAAC,KAAD,CAAO,SAAP;MAAA,uBACE,KAAC,eAAD;QAAiB,OAAO,EAAEF,gBAA1B;QAA4C,eAAe,EAAEC,eAA7D;QAAA;MAAA;IADF,EAJF;EAAA,EADF;AAYD"},"metadata":{},"sourceType":"module"}