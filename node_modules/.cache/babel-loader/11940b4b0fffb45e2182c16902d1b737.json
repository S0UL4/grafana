{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { useToggle } from 'react-use';\nimport { HorizontalGroup } from '@grafana/ui';\nimport { OperationRowHelp } from 'app/core/components/QueryOperationRow/OperationRowHelp';\nimport { QueryOperationAction } from 'app/core/components/QueryOperationRow/QueryOperationAction';\nimport { QueryOperationRow } from 'app/core/components/QueryOperationRow/QueryOperationRow';\nimport { PluginStateInfo } from 'app/features/plugins/components/PluginStateInfo';\nimport { TransformationEditor } from './TransformationEditor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TransformationOperationRow = ({\n  onRemove,\n  index,\n  id,\n  data,\n  configs,\n  uiConfig,\n  onChange\n}) => {\n  var _QueryOperationAction;\n\n  const [showDebug, toggleDebug] = useToggle(false);\n  const [showHelp, toggleHelp] = useToggle(false);\n  const disabled = configs[index].transformation.disabled;\n  const onDisableToggle = useCallback(index => {\n    const current = configs[index].transformation;\n    onChange(index, Object.assign({}, current, {\n      disabled: current.disabled ? undefined : true\n    }));\n  }, [onChange, configs]);\n\n  const renderActions = ({\n    isOpen\n  }) => {\n    return /*#__PURE__*/_jsxs(HorizontalGroup, {\n      align: \"center\",\n      width: \"auto\",\n      children: [uiConfig.state && /*#__PURE__*/_jsx(PluginStateInfo, {\n        state: uiConfig.state\n      }), _QueryOperationAction || (_QueryOperationAction = /*#__PURE__*/_jsx(QueryOperationAction, {\n        title: \"Show/hide transform help\",\n        icon: \"info-circle\",\n        onClick: toggleHelp,\n        active: showHelp\n      })), /*#__PURE__*/_jsx(QueryOperationAction, {\n        title: \"Debug\",\n        disabled: !isOpen,\n        icon: \"bug\",\n        onClick: toggleDebug,\n        active: showDebug\n      }), /*#__PURE__*/_jsx(QueryOperationAction, {\n        title: \"Disable/Enable transformation\",\n        icon: disabled ? 'eye-slash' : 'eye',\n        onClick: () => onDisableToggle(index),\n        active: disabled\n      }), /*#__PURE__*/_jsx(QueryOperationAction, {\n        title: \"Remove\",\n        icon: \"trash-alt\",\n        onClick: () => onRemove(index)\n      })]\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(QueryOperationRow, {\n    id: id,\n    index: index,\n    title: uiConfig.name,\n    draggable: true,\n    actions: renderActions,\n    disabled: disabled,\n    children: [showHelp && /*#__PURE__*/_jsx(OperationRowHelp, {\n      markdown: prepMarkdown(uiConfig)\n    }), /*#__PURE__*/_jsx(TransformationEditor, {\n      debugMode: showDebug,\n      index: index,\n      data: data,\n      configs: configs,\n      uiConfig: uiConfig,\n      onChange: onChange\n    })]\n  });\n};\n\nfunction prepMarkdown(uiConfig) {\n  var _uiConfig$help;\n\n  let helpMarkdown = (_uiConfig$help = uiConfig.help) !== null && _uiConfig$help !== void 0 ? _uiConfig$help : uiConfig.description;\n  return `\n${helpMarkdown}\n\nGo the <a href=\"https://grafana.com/docs/grafana/latest/panels/transformations/?utm_source=grafana\" target=\"_blank\" rel=\"noreferrer\">\ntransformation documentation\n</a> for more.\n`;\n}","map":{"version":3,"names":["React","useCallback","useToggle","HorizontalGroup","OperationRowHelp","QueryOperationAction","QueryOperationRow","PluginStateInfo","TransformationEditor","TransformationOperationRow","onRemove","index","id","data","configs","uiConfig","onChange","showDebug","toggleDebug","showHelp","toggleHelp","disabled","transformation","onDisableToggle","current","undefined","renderActions","isOpen","state","name","prepMarkdown","helpMarkdown","help","description"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/TransformationsEditor/TransformationOperationRow.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { DataFrame, DataTransformerConfig, TransformerRegistryItem } from '@grafana/data';\nimport { HorizontalGroup } from '@grafana/ui';\nimport { OperationRowHelp } from 'app/core/components/QueryOperationRow/OperationRowHelp';\nimport { QueryOperationAction } from 'app/core/components/QueryOperationRow/QueryOperationAction';\nimport {\n  QueryOperationRow,\n  QueryOperationRowRenderProps,\n} from 'app/core/components/QueryOperationRow/QueryOperationRow';\nimport { PluginStateInfo } from 'app/features/plugins/components/PluginStateInfo';\n\nimport { TransformationEditor } from './TransformationEditor';\nimport { TransformationsEditorTransformation } from './types';\n\ninterface TransformationOperationRowProps {\n  id: string;\n  index: number;\n  data: DataFrame[];\n  uiConfig: TransformerRegistryItem<any>;\n  configs: TransformationsEditorTransformation[];\n  onRemove: (index: number) => void;\n  onChange: (index: number, config: DataTransformerConfig) => void;\n}\n\nexport const TransformationOperationRow: React.FC<TransformationOperationRowProps> = ({\n  onRemove,\n  index,\n  id,\n  data,\n  configs,\n  uiConfig,\n  onChange,\n}) => {\n  const [showDebug, toggleDebug] = useToggle(false);\n  const [showHelp, toggleHelp] = useToggle(false);\n  const disabled = configs[index].transformation.disabled;\n\n  const onDisableToggle = useCallback(\n    (index: number) => {\n      const current = configs[index].transformation;\n      onChange(index, {\n        ...current,\n        disabled: current.disabled ? undefined : true,\n      });\n    },\n    [onChange, configs]\n  );\n\n  const renderActions = ({ isOpen }: QueryOperationRowRenderProps) => {\n    return (\n      <HorizontalGroup align=\"center\" width=\"auto\">\n        {uiConfig.state && <PluginStateInfo state={uiConfig.state} />}\n        <QueryOperationAction\n          title=\"Show/hide transform help\"\n          icon=\"info-circle\"\n          onClick={toggleHelp}\n          active={showHelp}\n        />\n        <QueryOperationAction title=\"Debug\" disabled={!isOpen} icon=\"bug\" onClick={toggleDebug} active={showDebug} />\n        <QueryOperationAction\n          title=\"Disable/Enable transformation\"\n          icon={disabled ? 'eye-slash' : 'eye'}\n          onClick={() => onDisableToggle(index)}\n          active={disabled}\n        />\n        <QueryOperationAction title=\"Remove\" icon=\"trash-alt\" onClick={() => onRemove(index)} />\n      </HorizontalGroup>\n    );\n  };\n\n  return (\n    <QueryOperationRow\n      id={id}\n      index={index}\n      title={uiConfig.name}\n      draggable\n      actions={renderActions}\n      disabled={disabled}\n    >\n      {showHelp && <OperationRowHelp markdown={prepMarkdown(uiConfig)} />}\n      <TransformationEditor\n        debugMode={showDebug}\n        index={index}\n        data={data}\n        configs={configs}\n        uiConfig={uiConfig}\n        onChange={onChange}\n      />\n    </QueryOperationRow>\n  );\n};\n\nfunction prepMarkdown(uiConfig: TransformerRegistryItem<any>) {\n  let helpMarkdown = uiConfig.help ?? uiConfig.description;\n\n  return `\n${helpMarkdown}\n\nGo the <a href=\"https://grafana.com/docs/grafana/latest/panels/transformations/?utm_source=grafana\" target=\"_blank\" rel=\"noreferrer\">\ntransformation documentation\n</a> for more.\n`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}