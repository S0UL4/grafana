{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/packages/grafana-data/src/types/displayValue.ts"],"sourcesContent":["import { FormattedValue } from '../valueFormats';\n\nexport type DisplayProcessor = (value: any) => DisplayValue;\n\nexport interface DisplayValue extends FormattedValue {\n  /**\n   *  Use isNaN to check if it is a real number\n   */\n  numeric: number;\n  /**\n   *  0-1 between min & max\n   */\n  percent?: number;\n  /**\n   *  Color based on mappings or threshold\n   */\n  color?: string;\n  /**\n   *  Icon based on mappings or threshold\n   */\n  icon?: string;\n  title?: string;\n\n  /**\n   * Used in limited scenarios like legend reducer calculations\n   */\n  description?: string;\n}\n\n/**\n * These represents the display value with the longest title and text.\n * Used to align widths and heights when displaying multiple DisplayValues\n */\nexport interface DisplayValueAlignmentFactors extends FormattedValue {\n  title: string;\n}\n\nexport type DecimalCount = number | null | undefined;\n\nexport interface DecimalInfo {\n  decimals: DecimalCount;\n  scaledDecimals: DecimalCount;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}