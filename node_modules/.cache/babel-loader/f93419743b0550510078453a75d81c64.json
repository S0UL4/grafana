{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { locationService } from '@grafana/runtime';\nimport { getPanelStateForModel } from 'app/features/panel/state/selectors';\nimport { usePanelLatestData } from '../PanelEditor/usePanelLatestData';\nimport { InspectContent } from './InspectContent';\nimport { useDatasourceMetadata, useInspectTabs } from './hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst PanelInspectorUnconnected = ({\n  panel,\n  dashboard,\n  plugin\n}) => {\n  const [dataOptions, setDataOptions] = useState({\n    withTransforms: false,\n    withFieldConfig: true\n  });\n  const location = useLocation();\n  const {\n    data,\n    isLoading,\n    error\n  } = usePanelLatestData(panel, dataOptions, true);\n  const metaDs = useDatasourceMetadata(data);\n  const tabs = useInspectTabs(panel, dashboard, plugin, error, metaDs);\n  const defaultTab = new URLSearchParams(location.search).get('inspectTab');\n\n  const onClose = () => {\n    locationService.partial({\n      inspect: null,\n      inspectTab: null\n    });\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(InspectContent, {\n    dashboard: dashboard,\n    panel: panel,\n    plugin: plugin,\n    defaultTab: defaultTab,\n    tabs: tabs,\n    data: data,\n    isDataLoading: isLoading,\n    dataOptions: dataOptions,\n    onDataOptionsChange: setDataOptions,\n    metadataDatasource: metaDs,\n    onClose: onClose\n  });\n};\n\nconst mapStateToProps = (state, props) => {\n  const panelState = getPanelStateForModel(state, props.panel);\n\n  if (!panelState) {\n    return {\n      plugin: null\n    };\n  }\n\n  return {\n    plugin: panelState.plugin\n  };\n};\n\nexport const PanelInspector = connect(mapStateToProps)(PanelInspectorUnconnected);","map":{"version":3,"names":["React","useState","connect","useLocation","locationService","getPanelStateForModel","usePanelLatestData","InspectContent","useDatasourceMetadata","useInspectTabs","PanelInspectorUnconnected","panel","dashboard","plugin","dataOptions","setDataOptions","withTransforms","withFieldConfig","location","data","isLoading","error","metaDs","tabs","defaultTab","URLSearchParams","search","get","onClose","partial","inspect","inspectTab","mapStateToProps","state","props","panelState","PanelInspector"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/Inspector/PanelInspector.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { PanelPlugin } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { DashboardModel, PanelModel } from 'app/features/dashboard/state';\nimport { InspectTab } from 'app/features/inspector/types';\nimport { getPanelStateForModel } from 'app/features/panel/state/selectors';\nimport { StoreState } from 'app/types';\n\nimport { GetDataOptions } from '../../../query/state/PanelQueryRunner';\nimport { usePanelLatestData } from '../PanelEditor/usePanelLatestData';\n\nimport { InspectContent } from './InspectContent';\nimport { useDatasourceMetadata, useInspectTabs } from './hooks';\n\ninterface OwnProps {\n  dashboard: DashboardModel;\n  panel: PanelModel;\n}\n\nexport interface ConnectedProps {\n  plugin?: PanelPlugin | null;\n}\n\nexport type Props = OwnProps & ConnectedProps;\n\nconst PanelInspectorUnconnected: React.FC<Props> = ({ panel, dashboard, plugin }) => {\n  const [dataOptions, setDataOptions] = useState<GetDataOptions>({\n    withTransforms: false,\n    withFieldConfig: true,\n  });\n\n  const location = useLocation();\n  const { data, isLoading, error } = usePanelLatestData(panel, dataOptions, true);\n  const metaDs = useDatasourceMetadata(data);\n  const tabs = useInspectTabs(panel, dashboard, plugin, error, metaDs);\n  const defaultTab = new URLSearchParams(location.search).get('inspectTab') as InspectTab;\n\n  const onClose = () => {\n    locationService.partial({\n      inspect: null,\n      inspectTab: null,\n    });\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  return (\n    <InspectContent\n      dashboard={dashboard}\n      panel={panel}\n      plugin={plugin}\n      defaultTab={defaultTab}\n      tabs={tabs}\n      data={data}\n      isDataLoading={isLoading}\n      dataOptions={dataOptions}\n      onDataOptionsChange={setDataOptions}\n      metadataDatasource={metaDs}\n      onClose={onClose}\n    />\n  );\n};\n\nconst mapStateToProps: MapStateToProps<ConnectedProps, OwnProps, StoreState> = (state, props) => {\n  const panelState = getPanelStateForModel(state, props.panel);\n  if (!panelState) {\n    return { plugin: null };\n  }\n\n  return {\n    plugin: panelState.plugin,\n  };\n};\n\nexport const PanelInspector = connect(mapStateToProps)(PanelInspectorUnconnected);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,SAASC,eAAT,QAAgC,kBAAhC;AAGA,SAASC,qBAAT,QAAsC,oCAAtC;AAIA,SAASC,kBAAT,QAAmC,mCAAnC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,EAAgCC,cAAhC,QAAsD,SAAtD;;;AAaA,MAAMC,yBAA0C,GAAG,CAAC;EAAEC,KAAF;EAASC,SAAT;EAAoBC;AAApB,CAAD,KAAkC;EACnF,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAiB;IAC7De,cAAc,EAAE,KAD6C;IAE7DC,eAAe,EAAE;EAF4C,CAAjB,CAA9C;EAKA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAM;IAAEgB,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA6Bf,kBAAkB,CAACK,KAAD,EAAQG,WAAR,EAAqB,IAArB,CAArD;EACA,MAAMQ,MAAM,GAAGd,qBAAqB,CAACW,IAAD,CAApC;EACA,MAAMI,IAAI,GAAGd,cAAc,CAACE,KAAD,EAAQC,SAAR,EAAmBC,MAAnB,EAA2BQ,KAA3B,EAAkCC,MAAlC,CAA3B;EACA,MAAME,UAAU,GAAG,IAAIC,eAAJ,CAAoBP,QAAQ,CAACQ,MAA7B,EAAqCC,GAArC,CAAyC,YAAzC,CAAnB;;EAEA,MAAMC,OAAO,GAAG,MAAM;IACpBxB,eAAe,CAACyB,OAAhB,CAAwB;MACtBC,OAAO,EAAE,IADa;MAEtBC,UAAU,EAAE;IAFU,CAAxB;EAID,CALD;;EAOA,IAAI,CAAClB,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,oBACE,KAAC,cAAD;IACE,SAAS,EAAED,SADb;IAEE,KAAK,EAAED,KAFT;IAGE,MAAM,EAAEE,MAHV;IAIE,UAAU,EAAEW,UAJd;IAKE,IAAI,EAAED,IALR;IAME,IAAI,EAAEJ,IANR;IAOE,aAAa,EAAEC,SAPjB;IAQE,WAAW,EAAEN,WARf;IASE,mBAAmB,EAAEC,cATvB;IAUE,kBAAkB,EAAEO,MAVtB;IAWE,OAAO,EAAEM;EAXX,EADF;AAeD,CAtCD;;AAwCA,MAAMI,eAAsE,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;EAC/F,MAAMC,UAAU,GAAG9B,qBAAqB,CAAC4B,KAAD,EAAQC,KAAK,CAACvB,KAAd,CAAxC;;EACA,IAAI,CAACwB,UAAL,EAAiB;IACf,OAAO;MAAEtB,MAAM,EAAE;IAAV,CAAP;EACD;;EAED,OAAO;IACLA,MAAM,EAAEsB,UAAU,CAACtB;EADd,CAAP;AAGD,CATD;;AAWA,OAAO,MAAMuB,cAAc,GAAGlC,OAAO,CAAC8B,eAAD,CAAP,CAAyBtB,yBAAzB,CAAvB"},"metadata":{},"sourceType":"module"}