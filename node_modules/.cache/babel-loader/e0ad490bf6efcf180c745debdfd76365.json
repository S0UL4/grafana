{"ast":null,"code":"import React, { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport { colorManipulator, DataFrameView } from '@grafana/data';\nimport { EventsCanvas, useTheme2 } from '@grafana/ui';\nimport { AnnotationMarker } from './annotations/AnnotationMarker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AnnotationsPlugin = ({\n  annotations,\n  timeZone,\n  config\n}) => {\n  const theme = useTheme2();\n  const plotInstance = useRef();\n  const annotationsRef = useRef(); // Update annotations views when new annotations came\n\n  useEffect(() => {\n    const views = [];\n\n    for (const frame of annotations) {\n      views.push(new DataFrameView(frame));\n    }\n\n    annotationsRef.current = views;\n  }, [annotations]);\n  useLayoutEffect(() => {\n    config.addHook('init', u => {\n      plotInstance.current = u;\n    });\n    config.addHook('draw', u => {\n      // Render annotation lines on the canvas\n\n      /**\n       * We cannot rely on state value here, as it would require this effect to be dependent on the state value.\n       */\n      if (!annotationsRef.current) {\n        return null;\n      }\n\n      const ctx = u.ctx;\n\n      if (!ctx) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n      ctx.clip();\n\n      const renderLine = (x, color) => {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = color;\n        ctx.setLineDash([5, 5]);\n        ctx.moveTo(x, u.bbox.top);\n        ctx.lineTo(x, u.bbox.top + u.bbox.height);\n        ctx.stroke();\n        ctx.closePath();\n      };\n\n      for (let i = 0; i < annotationsRef.current.length; i++) {\n        const annotationsView = annotationsRef.current[i];\n\n        for (let j = 0; j < annotationsView.length; j++) {\n          const annotation = annotationsView.get(j);\n\n          if (!annotation.time) {\n            continue;\n          }\n\n          let x0 = u.valToPos(annotation.time, 'x', true);\n          const color = theme.visualization.getColorByName(annotation.color);\n          renderLine(x0, color);\n\n          if (annotation.isRegion && annotation.timeEnd) {\n            let x1 = u.valToPos(annotation.timeEnd, 'x', true);\n            renderLine(x1, color);\n            ctx.fillStyle = colorManipulator.alpha(color, 0.1);\n            ctx.rect(x0, u.bbox.top, x1 - x0, u.bbox.height);\n            ctx.fill();\n          }\n        }\n      }\n\n      ctx.restore();\n      return;\n    });\n  }, [config, theme]);\n  const mapAnnotationToXYCoords = useCallback((frame, dataFrameFieldIndex) => {\n    const view = new DataFrameView(frame);\n    const annotation = view.get(dataFrameFieldIndex.fieldIndex);\n\n    if (!annotation.time || !plotInstance.current) {\n      return undefined;\n    }\n\n    let x = plotInstance.current.valToPos(annotation.time, 'x');\n\n    if (x < 0) {\n      x = 0;\n    }\n\n    return {\n      x,\n      y: plotInstance.current.bbox.height / window.devicePixelRatio + 4\n    };\n  }, []);\n  const renderMarker = useCallback((frame, dataFrameFieldIndex) => {\n    let markerStyle;\n    const view = new DataFrameView(frame);\n    const annotation = view.get(dataFrameFieldIndex.fieldIndex);\n    const isRegionAnnotation = Boolean(annotation.isRegion);\n\n    if (isRegionAnnotation && plotInstance.current) {\n      let x0 = plotInstance.current.valToPos(annotation.time, 'x');\n      let x1 = plotInstance.current.valToPos(annotation.timeEnd, 'x'); // markers are rendered relatively to uPlot canvas overly, not caring about axes width\n\n      if (x0 < 0) {\n        x0 = 0;\n      }\n\n      if (x1 > plotInstance.current.bbox.width / window.devicePixelRatio) {\n        x1 = plotInstance.current.bbox.width / window.devicePixelRatio;\n      }\n\n      markerStyle = {\n        width: `${x1 - x0}px`\n      };\n    }\n\n    return /*#__PURE__*/_jsx(AnnotationMarker, {\n      annotation: annotation,\n      timeZone: timeZone,\n      style: markerStyle\n    });\n  }, [timeZone]);\n  return /*#__PURE__*/_jsx(EventsCanvas, {\n    id: \"annotations\",\n    config: config,\n    events: annotations,\n    renderEventMarker: renderMarker,\n    mapEventToXYCoords: mapAnnotationToXYCoords\n  });\n};","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useRef","colorManipulator","DataFrameView","EventsCanvas","useTheme2","AnnotationMarker","AnnotationsPlugin","annotations","timeZone","config","theme","plotInstance","annotationsRef","views","frame","push","current","addHook","u","ctx","save","beginPath","rect","bbox","left","top","width","height","clip","renderLine","x","color","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","stroke","closePath","i","length","annotationsView","j","annotation","get","time","x0","valToPos","visualization","getColorByName","isRegion","timeEnd","x1","fillStyle","alpha","fill","restore","mapAnnotationToXYCoords","dataFrameFieldIndex","view","fieldIndex","undefined","y","window","devicePixelRatio","renderMarker","markerStyle","isRegionAnnotation","Boolean"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/plugins/AnnotationsPlugin.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport uPlot from 'uplot';\n\nimport { colorManipulator, DataFrame, DataFrameFieldIndex, DataFrameView, TimeZone } from '@grafana/data';\nimport { EventsCanvas, UPlotConfigBuilder, useTheme2 } from '@grafana/ui';\n\nimport { AnnotationMarker } from './annotations/AnnotationMarker';\n\ninterface AnnotationsPluginProps {\n  config: UPlotConfigBuilder;\n  annotations: DataFrame[];\n  timeZone: TimeZone;\n}\n\nexport const AnnotationsPlugin: React.FC<AnnotationsPluginProps> = ({ annotations, timeZone, config }) => {\n  const theme = useTheme2();\n  const plotInstance = useRef<uPlot>();\n\n  const annotationsRef = useRef<Array<DataFrameView<AnnotationsDataFrameViewDTO>>>();\n\n  // Update annotations views when new annotations came\n  useEffect(() => {\n    const views: Array<DataFrameView<AnnotationsDataFrameViewDTO>> = [];\n\n    for (const frame of annotations) {\n      views.push(new DataFrameView(frame));\n    }\n\n    annotationsRef.current = views;\n  }, [annotations]);\n\n  useLayoutEffect(() => {\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n    });\n\n    config.addHook('draw', (u) => {\n      // Render annotation lines on the canvas\n      /**\n       * We cannot rely on state value here, as it would require this effect to be dependent on the state value.\n       */\n      if (!annotationsRef.current) {\n        return null;\n      }\n\n      const ctx = u.ctx;\n      if (!ctx) {\n        return;\n      }\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n      ctx.clip();\n\n      const renderLine = (x: number, color: string) => {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = color;\n        ctx.setLineDash([5, 5]);\n        ctx.moveTo(x, u.bbox.top);\n        ctx.lineTo(x, u.bbox.top + u.bbox.height);\n        ctx.stroke();\n        ctx.closePath();\n      };\n\n      for (let i = 0; i < annotationsRef.current.length; i++) {\n        const annotationsView = annotationsRef.current[i];\n        for (let j = 0; j < annotationsView.length; j++) {\n          const annotation = annotationsView.get(j);\n\n          if (!annotation.time) {\n            continue;\n          }\n\n          let x0 = u.valToPos(annotation.time, 'x', true);\n          const color = theme.visualization.getColorByName(annotation.color);\n\n          renderLine(x0, color);\n\n          if (annotation.isRegion && annotation.timeEnd) {\n            let x1 = u.valToPos(annotation.timeEnd, 'x', true);\n\n            renderLine(x1, color);\n\n            ctx.fillStyle = colorManipulator.alpha(color, 0.1);\n            ctx.rect(x0, u.bbox.top, x1 - x0, u.bbox.height);\n            ctx.fill();\n          }\n        }\n      }\n      ctx.restore();\n      return;\n    });\n  }, [config, theme]);\n\n  const mapAnnotationToXYCoords = useCallback((frame: DataFrame, dataFrameFieldIndex: DataFrameFieldIndex) => {\n    const view = new DataFrameView<AnnotationsDataFrameViewDTO>(frame);\n    const annotation = view.get(dataFrameFieldIndex.fieldIndex);\n\n    if (!annotation.time || !plotInstance.current) {\n      return undefined;\n    }\n    let x = plotInstance.current.valToPos(annotation.time, 'x');\n\n    if (x < 0) {\n      x = 0;\n    }\n    return {\n      x,\n      y: plotInstance.current.bbox.height / window.devicePixelRatio + 4,\n    };\n  }, []);\n\n  const renderMarker = useCallback(\n    (frame: DataFrame, dataFrameFieldIndex: DataFrameFieldIndex) => {\n      let markerStyle;\n      const view = new DataFrameView<AnnotationsDataFrameViewDTO>(frame);\n      const annotation = view.get(dataFrameFieldIndex.fieldIndex);\n      const isRegionAnnotation = Boolean(annotation.isRegion);\n\n      if (isRegionAnnotation && plotInstance.current) {\n        let x0 = plotInstance.current.valToPos(annotation.time, 'x');\n        let x1 = plotInstance.current.valToPos(annotation.timeEnd, 'x');\n\n        // markers are rendered relatively to uPlot canvas overly, not caring about axes width\n        if (x0 < 0) {\n          x0 = 0;\n        }\n\n        if (x1 > plotInstance.current.bbox.width / window.devicePixelRatio) {\n          x1 = plotInstance.current.bbox.width / window.devicePixelRatio;\n        }\n        markerStyle = { width: `${x1 - x0}px` };\n      }\n\n      return <AnnotationMarker annotation={annotation} timeZone={timeZone} style={markerStyle} />;\n    },\n    [timeZone]\n  );\n\n  return (\n    <EventsCanvas\n      id=\"annotations\"\n      config={config}\n      events={annotations}\n      renderEventMarker={renderMarker}\n      mapEventToXYCoords={mapAnnotationToXYCoords}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}