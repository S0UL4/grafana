{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport const addBucketAggregation = createAction('@bucketAggs/add');\nexport const removeBucketAggregation = createAction('@bucketAggs/remove');\nexport const changeBucketAggregationType = createAction('@bucketAggs/change_type');\nexport const changeBucketAggregationField = createAction('@bucketAggs/change_field');\nexport const changeBucketAggregationSetting = createAction('@bucketAggs/change_setting');","map":{"version":3,"names":["createAction","addBucketAggregation","removeBucketAggregation","changeBucketAggregationType","changeBucketAggregationField","changeBucketAggregationSetting"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/state/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nimport { BucketAggregation, BucketAggregationType, BucketAggregationWithField } from '../aggregations';\n\nexport const addBucketAggregation = createAction<BucketAggregation['id']>('@bucketAggs/add');\nexport const removeBucketAggregation = createAction<BucketAggregation['id']>('@bucketAggs/remove');\nexport const changeBucketAggregationType = createAction<{\n  id: BucketAggregation['id'];\n  newType: BucketAggregationType;\n}>('@bucketAggs/change_type');\nexport const changeBucketAggregationField = createAction<{\n  id: BucketAggregation['id'];\n  newField: BucketAggregationWithField['field'];\n}>('@bucketAggs/change_field');\nexport const changeBucketAggregationSetting = createAction<{\n  bucketAgg: BucketAggregation;\n  settingName: string;\n  newValue: any;\n}>('@bucketAggs/change_setting');\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAIA,OAAO,MAAMC,oBAAoB,GAAGD,YAAY,CAA0B,iBAA1B,CAAzC;AACP,OAAO,MAAME,uBAAuB,GAAGF,YAAY,CAA0B,oBAA1B,CAA5C;AACP,OAAO,MAAMG,2BAA2B,GAAGH,YAAY,CAGpD,yBAHoD,CAAhD;AAIP,OAAO,MAAMI,4BAA4B,GAAGJ,YAAY,CAGrD,0BAHqD,CAAjD;AAIP,OAAO,MAAMK,8BAA8B,GAAGL,YAAY,CAIvD,4BAJuD,CAAnD"},"metadata":{},"sourceType":"module"}