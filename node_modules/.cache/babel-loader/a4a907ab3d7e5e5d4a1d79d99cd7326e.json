{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, useTheme } from '@grafana/ui';\nimport { DocsCard } from './DocsCard';\nimport { TutorialCard } from './TutorialCard';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Step = ({\n  step\n}) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.setup,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: styles.title,\n        children: step.title\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: step.info\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cards,\n      children: step.cards.map((card, index) => {\n        const key = `${card.title}-${index}`;\n\n        if (card.type === 'tutorial') {\n          return /*#__PURE__*/_jsx(TutorialCard, {\n            card: card\n          }, key);\n        }\n\n        return /*#__PURE__*/_jsx(DocsCard, {\n          card: card\n        }, key);\n      })\n    })]\n  });\n};\nconst getStyles = stylesFactory(theme => {\n  return {\n    setup: css`\n      display: flex;\n      width: 95%;\n    `,\n    info: css`\n      width: 172px;\n      margin-right: 5%;\n\n      @media only screen and (max-width: ${theme.breakpoints.xxl}) {\n        margin-right: ${theme.spacing.xl};\n      }\n      @media only screen and (max-width: ${theme.breakpoints.sm}) {\n        display: none;\n      }\n    `,\n    title: css`\n      color: ${theme.palette.blue95};\n    `,\n    cards: css`\n      overflow-x: scroll;\n      overflow-y: hidden;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n\n      @media only screen and (max-width: ${theme.breakpoints.xxl}) {\n        justify-content: flex-start;\n      }\n    `\n  };\n});","map":{"version":3,"names":["css","React","stylesFactory","useTheme","DocsCard","TutorialCard","Step","step","theme","styles","getStyles","setup","info","title","cards","map","card","index","key","type","breakpoints","xxl","spacing","xl","sm","palette","blue95"],"sources":["/home/soula/grafana/public/app/plugins/panel/gettingstarted/components/Step.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { stylesFactory, useTheme } from '@grafana/ui';\n\nimport { Card, SetupStep, TutorialCardType } from '../types';\n\nimport { DocsCard } from './DocsCard';\nimport { TutorialCard } from './TutorialCard';\n\ninterface Props {\n  step: SetupStep;\n}\n\nexport const Step: FC<Props> = ({ step }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.setup}>\n      <div className={styles.info}>\n        <h2 className={styles.title}>{step.title}</h2>\n        <p>{step.info}</p>\n      </div>\n      <div className={styles.cards}>\n        {step.cards.map((card: Card | TutorialCardType, index: number) => {\n          const key = `${card.title}-${index}`;\n          if (card.type === 'tutorial') {\n            return <TutorialCard key={key} card={card as TutorialCardType} />;\n          }\n          return <DocsCard key={key} card={card} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    setup: css`\n      display: flex;\n      width: 95%;\n    `,\n    info: css`\n      width: 172px;\n      margin-right: 5%;\n\n      @media only screen and (max-width: ${theme.breakpoints.xxl}) {\n        margin-right: ${theme.spacing.xl};\n      }\n      @media only screen and (max-width: ${theme.breakpoints.sm}) {\n        display: none;\n      }\n    `,\n    title: css`\n      color: ${theme.palette.blue95};\n    `,\n    cards: css`\n      overflow-x: scroll;\n      overflow-y: hidden;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n\n      @media only screen and (max-width: ${theme.breakpoints.xxl}) {\n        justify-content: flex-start;\n      }\n    `,\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,aAAxC;AAIA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAMA,OAAO,MAAMC,IAAe,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAC3C,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;EACA,MAAMM,MAAM,GAAGC,SAAS,CAACF,KAAD,CAAxB;EAEA,oBACE;IAAK,SAAS,EAAEC,MAAM,CAACE,KAAvB;IAAA,wBACE;MAAK,SAAS,EAAEF,MAAM,CAACG,IAAvB;MAAA,wBACE;QAAI,SAAS,EAAEH,MAAM,CAACI,KAAtB;QAAA,UAA8BN,IAAI,CAACM;MAAnC,EADF,eAEE;QAAA,UAAIN,IAAI,CAACK;MAAT,EAFF;IAAA,EADF,eAKE;MAAK,SAAS,EAAEH,MAAM,CAACK,KAAvB;MAAA,UACGP,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAgCC,KAAhC,KAAkD;QAChE,MAAMC,GAAG,GAAI,GAAEF,IAAI,CAACH,KAAM,IAAGI,KAAM,EAAnC;;QACA,IAAID,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;UAC5B,oBAAO,KAAC,YAAD;YAAwB,IAAI,EAAEH;UAA9B,GAAmBE,GAAnB,CAAP;QACD;;QACD,oBAAO,KAAC,QAAD;UAAoB,IAAI,EAAEF;QAA1B,GAAeE,GAAf,CAAP;MACD,CANA;IADH,EALF;EAAA,EADF;AAiBD,CArBM;AAuBP,MAAMR,SAAS,GAAGR,aAAa,CAAEM,KAAD,IAAyB;EACvD,OAAO;IACLG,KAAK,EAAEX,GAAI;AACf;AACA;AACA,KAJS;IAKLY,IAAI,EAAEZ,GAAI;AACd;AACA;AACA;AACA,2CAA2CQ,KAAK,CAACY,WAAN,CAAkBC,GAAI;AACjE,wBAAwBb,KAAK,CAACc,OAAN,CAAcC,EAAG;AACzC;AACA,2CAA2Cf,KAAK,CAACY,WAAN,CAAkBI,EAAG;AAChE;AACA;AACA,KAfS;IAgBLX,KAAK,EAAEb,GAAI;AACf,eAAeQ,KAAK,CAACiB,OAAN,CAAcC,MAAO;AACpC,KAlBS;IAmBLZ,KAAK,EAAEd,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2CQ,KAAK,CAACY,WAAN,CAAkBC,GAAI;AACjE;AACA;AACA;EA7BS,CAAP;AA+BD,CAhC8B,CAA/B"},"metadata":{},"sourceType":"module"}