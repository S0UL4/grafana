{"ast":null,"code":"import { dateTimeFormat, dateTimeFormatTimeAgo, localTimeFormat, systemDateFormats } from '../datetime';\nimport { toDuration as duration, toUtc, dateTime } from '../datetime/moment_wrapper';\nimport { toFixed, toFixedScaled } from './valueFormats';\nexport let Interval;\n\n(function (Interval) {\n  Interval[\"Year\"] = \"year\";\n  Interval[\"Month\"] = \"month\";\n  Interval[\"Week\"] = \"week\";\n  Interval[\"Day\"] = \"day\";\n  Interval[\"Hour\"] = \"hour\";\n  Interval[\"Minute\"] = \"minute\";\n  Interval[\"Second\"] = \"second\";\n  Interval[\"Millisecond\"] = \"millisecond\";\n})(Interval || (Interval = {}));\n\nconst UNITS = [Interval.Year, Interval.Month, Interval.Week, Interval.Day, Interval.Hour, Interval.Minute, Interval.Second, Interval.Millisecond];\nconst INTERVALS_IN_SECONDS = {\n  [Interval.Year]: 31536000,\n  [Interval.Month]: 2592000,\n  [Interval.Week]: 604800,\n  [Interval.Day]: 86400,\n  [Interval.Hour]: 3600,\n  [Interval.Minute]: 60,\n  [Interval.Second]: 1,\n  [Interval.Millisecond]: 0.001\n};\nexport function toNanoSeconds(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' ns'\n    };\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, ' µs');\n  } else if (Math.abs(size) < 1000000000) {\n    return toFixedScaled(size / 1000000, decimals, ' ms');\n  } else if (Math.abs(size) < 60000000000) {\n    return toFixedScaled(size / 1000000000, decimals, ' s');\n  } else if (Math.abs(size) < 3600000000000) {\n    return toFixedScaled(size / 60000000000, decimals, ' min');\n  } else if (Math.abs(size) < 86400000000000) {\n    return toFixedScaled(size / 3600000000000, decimals, ' hour');\n  } else {\n    return toFixedScaled(size / 86400000000000, decimals, ' day');\n  }\n}\nexport function toMicroSeconds(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' µs'\n    };\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, ' ms');\n  } else {\n    return toFixedScaled(size / 1000000, decimals, ' s');\n  }\n}\nexport function toMilliSeconds(size, decimals, scaledDecimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' ms'\n    };\n  } else if (Math.abs(size) < 60000) {\n    // Less than 1 min\n    return toFixedScaled(size / 1000, decimals, ' s');\n  } else if (Math.abs(size) < 3600000) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60000, decimals, ' min');\n  } else if (Math.abs(size) < 86400000) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600000, decimals, ' hour');\n  } else if (Math.abs(size) < 31536000000) {\n    // Less than one year, divide in days\n    return toFixedScaled(size / 86400000, decimals, ' day');\n  }\n\n  return toFixedScaled(size / 31536000000, decimals, ' year');\n}\nexport function trySubstract(value1, value2) {\n  if (value1 !== null && value1 !== undefined && value2 !== null && value2 !== undefined) {\n    return value1 - value2;\n  }\n\n  return undefined;\n}\nexport function toSeconds(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  } // If 0, use s unit instead of ns\n\n\n  if (size === 0) {\n    return {\n      text: '0',\n      suffix: ' s'\n    };\n  } // Less than 1 µs, divide in ns\n\n\n  if (Math.abs(size) < 0.000001) {\n    return toFixedScaled(size * 1e9, decimals, ' ns');\n  } // Less than 1 ms, divide in µs\n\n\n  if (Math.abs(size) < 0.001) {\n    return toFixedScaled(size * 1e6, decimals, ' µs');\n  } // Less than 1 second, divide in ms\n\n\n  if (Math.abs(size) < 1) {\n    return toFixedScaled(size * 1e3, decimals, ' ms');\n  }\n\n  if (Math.abs(size) < 60) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' s'\n    };\n  } else if (Math.abs(size) < 3600) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60, decimals, ' min');\n  } else if (Math.abs(size) < 86400) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600, decimals, ' hour');\n  } else if (Math.abs(size) < 604800) {\n    // Less than one week, divide in days\n    return toFixedScaled(size / 86400, decimals, ' day');\n  } else if (Math.abs(size) < 31536000) {\n    // Less than one year, divide in week\n    return toFixedScaled(size / 604800, decimals, ' week');\n  }\n\n  return toFixedScaled(size / 3.15569e7, decimals, ' year');\n}\nexport function toMinutes(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 60) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' min'\n    };\n  } else if (Math.abs(size) < 1440) {\n    return toFixedScaled(size / 60, decimals, ' hour');\n  } else if (Math.abs(size) < 10080) {\n    return toFixedScaled(size / 1440, decimals, ' day');\n  } else if (Math.abs(size) < 604800) {\n    return toFixedScaled(size / 10080, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 5.25948e5, decimals, ' year');\n  }\n}\nexport function toHours(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 24) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' hour'\n    };\n  } else if (Math.abs(size) < 168) {\n    return toFixedScaled(size / 24, decimals, ' day');\n  } else if (Math.abs(size) < 8760) {\n    return toFixedScaled(size / 168, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 8760, decimals, ' year');\n  }\n}\nexport function toDays(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (Math.abs(size) < 7) {\n    return {\n      text: toFixed(size, decimals),\n      suffix: ' day'\n    };\n  } else if (Math.abs(size) < 365) {\n    return toFixedScaled(size / 7, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 365, decimals, ' year');\n  }\n}\nexport function toDuration(size, decimals, timeScale) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  }\n\n  if (size === 0) {\n    return {\n      text: '0',\n      suffix: ' ' + timeScale + 's'\n    };\n  }\n\n  if (size < 0) {\n    const v = toDuration(-size, decimals, timeScale);\n\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n\n    v.suffix += ' ago';\n    return v;\n  } // convert $size to milliseconds\n  // intervals_in_seconds uses seconds (duh), convert them to milliseconds here to minimize floating point errors\n\n\n  size *= INTERVALS_IN_SECONDS[timeScale] * 1000;\n  const strings = []; // after first value >= 1 print only $decimals more\n\n  let decrementDecimals = false;\n  let decimalsCount = 0;\n\n  if (decimals !== null && decimals !== undefined) {\n    decimalsCount = decimals;\n  }\n\n  for (let i = 0; i < UNITS.length && decimalsCount >= 0; i++) {\n    const interval = INTERVALS_IN_SECONDS[UNITS[i]] * 1000;\n    const value = size / interval;\n\n    if (value >= 1 || decrementDecimals) {\n      decrementDecimals = true;\n      const floor = Math.floor(value);\n      const unit = UNITS[i] + (floor !== 1 ? 's' : '');\n      strings.push(floor + ' ' + unit);\n      size = size % interval;\n      decimalsCount--;\n    }\n  }\n\n  return {\n    text: strings.join(', ')\n  };\n}\nexport function toClock(size, decimals) {\n  if (size === null) {\n    return {\n      text: ''\n    };\n  } // < 1 second\n\n\n  if (size < 1000) {\n    return {\n      text: toUtc(size).format('SSS\\\\m\\\\s')\n    };\n  } // < 1 minute\n\n\n  if (size < 60000) {\n    let format = 'ss\\\\s:SSS\\\\m\\\\s';\n\n    if (decimals === 0) {\n      format = 'ss\\\\s';\n    }\n\n    return {\n      text: toUtc(size).format(format)\n    };\n  } // < 1 hour\n\n\n  if (size < 3600000) {\n    let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n\n    if (decimals === 0) {\n      format = 'mm\\\\m';\n    } else if (decimals === 1) {\n      format = 'mm\\\\m:ss\\\\s';\n    }\n\n    return {\n      text: toUtc(size).format(format)\n    };\n  }\n\n  let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n  const hours = `${('0' + Math.floor(duration(size, 'milliseconds').asHours())).slice(-2)}h`;\n\n  if (decimals === 0) {\n    format = '';\n  } else if (decimals === 1) {\n    format = 'mm\\\\m';\n  } else if (decimals === 2) {\n    format = 'mm\\\\m:ss\\\\s';\n  }\n\n  const text = format ? `${hours}:${toUtc(size).format(format)}` : hours;\n  return {\n    text\n  };\n}\nexport function toDurationInMilliseconds(size, decimals) {\n  return toDuration(size, decimals, Interval.Millisecond);\n}\nexport function toDurationInSeconds(size, decimals) {\n  return toDuration(size, decimals, Interval.Second);\n}\nexport function toDurationInHoursMinutesSeconds(size) {\n  if (size < 0) {\n    const v = toDurationInHoursMinutesSeconds(-size);\n\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n\n    v.suffix += ' ago';\n    return v;\n  }\n\n  const strings = [];\n  const numHours = Math.floor(size / 3600);\n  const numMinutes = Math.floor(size % 3600 / 60);\n  const numSeconds = Math.floor(size % 3600 % 60);\n  numHours > 9 ? strings.push('' + numHours) : strings.push('0' + numHours);\n  numMinutes > 9 ? strings.push('' + numMinutes) : strings.push('0' + numMinutes);\n  numSeconds > 9 ? strings.push('' + numSeconds) : strings.push('0' + numSeconds);\n  return {\n    text: strings.join(':')\n  };\n}\nexport function toDurationInDaysHoursMinutesSeconds(size) {\n  if (size < 0) {\n    const v = toDurationInDaysHoursMinutesSeconds(-size);\n\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n\n    v.suffix += ' ago';\n    return v;\n  }\n\n  let dayString = '';\n  const numDays = Math.floor(size / (24 * 3600));\n\n  if (numDays > 0) {\n    dayString = numDays + ' d ';\n  }\n\n  const hmsString = toDurationInHoursMinutesSeconds(size - numDays * 24 * 3600);\n  return {\n    text: dayString + hmsString.text\n  };\n}\nexport function toTimeTicks(size, decimals) {\n  return toSeconds(size / 100, decimals);\n}\nexport function toClockMilliseconds(size, decimals) {\n  return toClock(size, decimals);\n}\nexport function toClockSeconds(size, decimals) {\n  return toClock(size * 1000, decimals);\n}\nexport function toDateTimeValueFormatter(pattern, todayPattern) {\n  return (value, decimals, scaledDecimals, timeZone) => {\n    if (todayPattern) {\n      if (dateTime().isSame(value, 'day')) {\n        return {\n          text: dateTimeFormat(value, {\n            format: todayPattern,\n            timeZone\n          })\n        };\n      }\n    }\n\n    return {\n      text: dateTimeFormat(value, {\n        format: pattern,\n        timeZone\n      })\n    };\n  };\n}\nexport const dateTimeAsIso = toDateTimeValueFormatter('YYYY-MM-DD HH:mm:ss');\nexport const dateTimeAsIsoNoDateIfToday = toDateTimeValueFormatter('YYYY-MM-DD HH:mm:ss', 'HH:mm:ss');\nexport const dateTimeAsUS = toDateTimeValueFormatter('MM/DD/YYYY h:mm:ss a');\nexport const dateTimeAsUSNoDateIfToday = toDateTimeValueFormatter('MM/DD/YYYY h:mm:ss a', 'h:mm:ss a');\nexport function getDateTimeAsLocalFormat() {\n  return toDateTimeValueFormatter(localTimeFormat({\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }));\n}\nexport function getDateTimeAsLocalFormatNoDateIfToday() {\n  return toDateTimeValueFormatter(localTimeFormat({\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }), localTimeFormat({\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }));\n}\nexport function dateTimeSystemFormatter(value, decimals, scaledDecimals, timeZone, showMs) {\n  return {\n    text: dateTimeFormat(value, {\n      format: showMs ? systemDateFormats.fullDateMS : systemDateFormats.fullDate,\n      timeZone\n    })\n  };\n}\nexport function dateTimeFromNow(value, decimals, scaledDecimals, timeZone) {\n  return {\n    text: dateTimeFormatTimeAgo(value, {\n      timeZone\n    })\n  };\n}","map":{"version":3,"names":["dateTimeFormat","dateTimeFormatTimeAgo","localTimeFormat","systemDateFormats","toDuration","duration","toUtc","dateTime","toFixed","toFixedScaled","Interval","UNITS","Year","Month","Week","Day","Hour","Minute","Second","Millisecond","INTERVALS_IN_SECONDS","toNanoSeconds","size","decimals","text","Math","abs","suffix","toMicroSeconds","toMilliSeconds","scaledDecimals","trySubstract","value1","value2","undefined","toSeconds","toMinutes","toHours","toDays","timeScale","v","strings","decrementDecimals","decimalsCount","i","length","interval","value","floor","unit","push","join","toClock","format","hours","asHours","slice","toDurationInMilliseconds","toDurationInSeconds","toDurationInHoursMinutesSeconds","numHours","numMinutes","numSeconds","toDurationInDaysHoursMinutesSeconds","dayString","numDays","hmsString","toTimeTicks","toClockMilliseconds","toClockSeconds","toDateTimeValueFormatter","pattern","todayPattern","timeZone","isSame","dateTimeAsIso","dateTimeAsIsoNoDateIfToday","dateTimeAsUS","dateTimeAsUSNoDateIfToday","getDateTimeAsLocalFormat","year","month","day","hour","minute","second","getDateTimeAsLocalFormatNoDateIfToday","dateTimeSystemFormatter","showMs","fullDateMS","fullDate","dateTimeFromNow"],"sources":["/home/soula/grafana/packages/grafana-data/src/valueFormats/dateTimeFormatters.ts"],"sourcesContent":["import { dateTimeFormat, dateTimeFormatTimeAgo, localTimeFormat, systemDateFormats } from '../datetime';\nimport { toDuration as duration, toUtc, dateTime } from '../datetime/moment_wrapper';\nimport { TimeZone } from '../types';\nimport { DecimalCount } from '../types/displayValue';\n\nimport { toFixed, toFixedScaled, FormattedValue, ValueFormatter } from './valueFormats';\n\ninterface IntervalsInSeconds {\n  [interval: string]: number;\n}\n\nexport enum Interval {\n  Year = 'year',\n  Month = 'month',\n  Week = 'week',\n  Day = 'day',\n  Hour = 'hour',\n  Minute = 'minute',\n  Second = 'second',\n  Millisecond = 'millisecond',\n}\n\nconst UNITS = [\n  Interval.Year,\n  Interval.Month,\n  Interval.Week,\n  Interval.Day,\n  Interval.Hour,\n  Interval.Minute,\n  Interval.Second,\n  Interval.Millisecond,\n];\n\nconst INTERVALS_IN_SECONDS: IntervalsInSeconds = {\n  [Interval.Year]: 31536000,\n  [Interval.Month]: 2592000,\n  [Interval.Week]: 604800,\n  [Interval.Day]: 86400,\n  [Interval.Hour]: 3600,\n  [Interval.Minute]: 60,\n  [Interval.Second]: 1,\n  [Interval.Millisecond]: 0.001,\n};\n\nexport function toNanoSeconds(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return { text: toFixed(size, decimals), suffix: ' ns' };\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, ' µs');\n  } else if (Math.abs(size) < 1000000000) {\n    return toFixedScaled(size / 1000000, decimals, ' ms');\n  } else if (Math.abs(size) < 60000000000) {\n    return toFixedScaled(size / 1000000000, decimals, ' s');\n  } else if (Math.abs(size) < 3600000000000) {\n    return toFixedScaled(size / 60000000000, decimals, ' min');\n  } else if (Math.abs(size) < 86400000000000) {\n    return toFixedScaled(size / 3600000000000, decimals, ' hour');\n  } else {\n    return toFixedScaled(size / 86400000000000, decimals, ' day');\n  }\n}\n\nexport function toMicroSeconds(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return { text: toFixed(size, decimals), suffix: ' µs' };\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, ' ms');\n  } else {\n    return toFixedScaled(size / 1000000, decimals, ' s');\n  }\n}\n\nexport function toMilliSeconds(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 1000) {\n    return { text: toFixed(size, decimals), suffix: ' ms' };\n  } else if (Math.abs(size) < 60000) {\n    // Less than 1 min\n    return toFixedScaled(size / 1000, decimals, ' s');\n  } else if (Math.abs(size) < 3600000) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60000, decimals, ' min');\n  } else if (Math.abs(size) < 86400000) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600000, decimals, ' hour');\n  } else if (Math.abs(size) < 31536000000) {\n    // Less than one year, divide in days\n    return toFixedScaled(size / 86400000, decimals, ' day');\n  }\n\n  return toFixedScaled(size / 31536000000, decimals, ' year');\n}\n\nexport function trySubstract(value1: DecimalCount, value2: DecimalCount): DecimalCount {\n  if (value1 !== null && value1 !== undefined && value2 !== null && value2 !== undefined) {\n    return value1 - value2;\n  }\n  return undefined;\n}\n\nexport function toSeconds(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  // If 0, use s unit instead of ns\n  if (size === 0) {\n    return { text: '0', suffix: ' s' };\n  }\n\n  // Less than 1 µs, divide in ns\n  if (Math.abs(size) < 0.000001) {\n    return toFixedScaled(size * 1e9, decimals, ' ns');\n  }\n  // Less than 1 ms, divide in µs\n  if (Math.abs(size) < 0.001) {\n    return toFixedScaled(size * 1e6, decimals, ' µs');\n  }\n  // Less than 1 second, divide in ms\n  if (Math.abs(size) < 1) {\n    return toFixedScaled(size * 1e3, decimals, ' ms');\n  }\n\n  if (Math.abs(size) < 60) {\n    return { text: toFixed(size, decimals), suffix: ' s' };\n  } else if (Math.abs(size) < 3600) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60, decimals, ' min');\n  } else if (Math.abs(size) < 86400) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600, decimals, ' hour');\n  } else if (Math.abs(size) < 604800) {\n    // Less than one week, divide in days\n    return toFixedScaled(size / 86400, decimals, ' day');\n  } else if (Math.abs(size) < 31536000) {\n    // Less than one year, divide in week\n    return toFixedScaled(size / 604800, decimals, ' week');\n  }\n\n  return toFixedScaled(size / 3.15569e7, decimals, ' year');\n}\n\nexport function toMinutes(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 60) {\n    return { text: toFixed(size, decimals), suffix: ' min' };\n  } else if (Math.abs(size) < 1440) {\n    return toFixedScaled(size / 60, decimals, ' hour');\n  } else if (Math.abs(size) < 10080) {\n    return toFixedScaled(size / 1440, decimals, ' day');\n  } else if (Math.abs(size) < 604800) {\n    return toFixedScaled(size / 10080, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 5.25948e5, decimals, ' year');\n  }\n}\n\nexport function toHours(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 24) {\n    return { text: toFixed(size, decimals), suffix: ' hour' };\n  } else if (Math.abs(size) < 168) {\n    return toFixedScaled(size / 24, decimals, ' day');\n  } else if (Math.abs(size) < 8760) {\n    return toFixedScaled(size / 168, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 8760, decimals, ' year');\n  }\n}\n\nexport function toDays(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (Math.abs(size) < 7) {\n    return { text: toFixed(size, decimals), suffix: ' day' };\n  } else if (Math.abs(size) < 365) {\n    return toFixedScaled(size / 7, decimals, ' week');\n  } else {\n    return toFixedScaled(size / 365, decimals, ' year');\n  }\n}\n\nexport function toDuration(size: number, decimals: DecimalCount, timeScale: Interval): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  if (size === 0) {\n    return { text: '0', suffix: ' ' + timeScale + 's' };\n  }\n\n  if (size < 0) {\n    const v = toDuration(-size, decimals, timeScale);\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n    v.suffix += ' ago';\n    return v;\n  }\n\n  // convert $size to milliseconds\n  // intervals_in_seconds uses seconds (duh), convert them to milliseconds here to minimize floating point errors\n  size *= INTERVALS_IN_SECONDS[timeScale] * 1000;\n\n  const strings = [];\n\n  // after first value >= 1 print only $decimals more\n  let decrementDecimals = false;\n  let decimalsCount = 0;\n\n  if (decimals !== null && decimals !== undefined) {\n    decimalsCount = decimals as number;\n  }\n\n  for (let i = 0; i < UNITS.length && decimalsCount >= 0; i++) {\n    const interval = INTERVALS_IN_SECONDS[UNITS[i]] * 1000;\n    const value = size / interval;\n    if (value >= 1 || decrementDecimals) {\n      decrementDecimals = true;\n      const floor = Math.floor(value);\n      const unit = UNITS[i] + (floor !== 1 ? 's' : '');\n      strings.push(floor + ' ' + unit);\n      size = size % interval;\n      decimalsCount--;\n    }\n  }\n\n  return { text: strings.join(', ') };\n}\n\nexport function toClock(size: number, decimals?: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n\n  // < 1 second\n  if (size < 1000) {\n    return {\n      text: toUtc(size).format('SSS\\\\m\\\\s'),\n    };\n  }\n\n  // < 1 minute\n  if (size < 60000) {\n    let format = 'ss\\\\s:SSS\\\\m\\\\s';\n    if (decimals === 0) {\n      format = 'ss\\\\s';\n    }\n    return { text: toUtc(size).format(format) };\n  }\n\n  // < 1 hour\n  if (size < 3600000) {\n    let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n    if (decimals === 0) {\n      format = 'mm\\\\m';\n    } else if (decimals === 1) {\n      format = 'mm\\\\m:ss\\\\s';\n    }\n    return { text: toUtc(size).format(format) };\n  }\n\n  let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n\n  const hours = `${('0' + Math.floor(duration(size, 'milliseconds').asHours())).slice(-2)}h`;\n\n  if (decimals === 0) {\n    format = '';\n  } else if (decimals === 1) {\n    format = 'mm\\\\m';\n  } else if (decimals === 2) {\n    format = 'mm\\\\m:ss\\\\s';\n  }\n\n  const text = format ? `${hours}:${toUtc(size).format(format)}` : hours;\n  return { text };\n}\n\nexport function toDurationInMilliseconds(size: number, decimals: DecimalCount): FormattedValue {\n  return toDuration(size, decimals, Interval.Millisecond);\n}\n\nexport function toDurationInSeconds(size: number, decimals: DecimalCount): FormattedValue {\n  return toDuration(size, decimals, Interval.Second);\n}\n\nexport function toDurationInHoursMinutesSeconds(size: number): FormattedValue {\n  if (size < 0) {\n    const v = toDurationInHoursMinutesSeconds(-size);\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n    v.suffix += ' ago';\n    return v;\n  }\n  const strings = [];\n  const numHours = Math.floor(size / 3600);\n  const numMinutes = Math.floor((size % 3600) / 60);\n  const numSeconds = Math.floor((size % 3600) % 60);\n  numHours > 9 ? strings.push('' + numHours) : strings.push('0' + numHours);\n  numMinutes > 9 ? strings.push('' + numMinutes) : strings.push('0' + numMinutes);\n  numSeconds > 9 ? strings.push('' + numSeconds) : strings.push('0' + numSeconds);\n  return { text: strings.join(':') };\n}\n\nexport function toDurationInDaysHoursMinutesSeconds(size: number): FormattedValue {\n  if (size < 0) {\n    const v = toDurationInDaysHoursMinutesSeconds(-size);\n    if (!v.suffix) {\n      v.suffix = '';\n    }\n    v.suffix += ' ago';\n    return v;\n  }\n  let dayString = '';\n  const numDays = Math.floor(size / (24 * 3600));\n  if (numDays > 0) {\n    dayString = numDays + ' d ';\n  }\n  const hmsString = toDurationInHoursMinutesSeconds(size - numDays * 24 * 3600);\n  return { text: dayString + hmsString.text };\n}\n\nexport function toTimeTicks(size: number, decimals: DecimalCount): FormattedValue {\n  return toSeconds(size / 100, decimals);\n}\n\nexport function toClockMilliseconds(size: number, decimals: DecimalCount): FormattedValue {\n  return toClock(size, decimals);\n}\n\nexport function toClockSeconds(size: number, decimals: DecimalCount): FormattedValue {\n  return toClock(size * 1000, decimals);\n}\n\nexport function toDateTimeValueFormatter(pattern: string, todayPattern?: string): ValueFormatter {\n  return (value: number, decimals: DecimalCount, scaledDecimals: DecimalCount, timeZone?: TimeZone): FormattedValue => {\n    if (todayPattern) {\n      if (dateTime().isSame(value, 'day')) {\n        return {\n          text: dateTimeFormat(value, { format: todayPattern, timeZone }),\n        };\n      }\n    }\n    return { text: dateTimeFormat(value, { format: pattern, timeZone }) };\n  };\n}\n\nexport const dateTimeAsIso = toDateTimeValueFormatter('YYYY-MM-DD HH:mm:ss');\nexport const dateTimeAsIsoNoDateIfToday = toDateTimeValueFormatter('YYYY-MM-DD HH:mm:ss', 'HH:mm:ss');\nexport const dateTimeAsUS = toDateTimeValueFormatter('MM/DD/YYYY h:mm:ss a');\nexport const dateTimeAsUSNoDateIfToday = toDateTimeValueFormatter('MM/DD/YYYY h:mm:ss a', 'h:mm:ss a');\n\nexport function getDateTimeAsLocalFormat() {\n  return toDateTimeValueFormatter(\n    localTimeFormat({\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    })\n  );\n}\n\nexport function getDateTimeAsLocalFormatNoDateIfToday() {\n  return toDateTimeValueFormatter(\n    localTimeFormat({\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }),\n    localTimeFormat({\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    })\n  );\n}\n\nexport function dateTimeSystemFormatter(\n  value: number,\n  decimals: DecimalCount,\n  scaledDecimals: DecimalCount,\n  timeZone?: TimeZone,\n  showMs?: boolean\n): FormattedValue {\n  return {\n    text: dateTimeFormat(value, {\n      format: showMs ? systemDateFormats.fullDateMS : systemDateFormats.fullDate,\n      timeZone,\n    }),\n  };\n}\n\nexport function dateTimeFromNow(\n  value: number,\n  decimals: DecimalCount,\n  scaledDecimals: DecimalCount,\n  timeZone?: TimeZone\n): FormattedValue {\n  return { text: dateTimeFormatTimeAgo(value, { timeZone }) };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}