{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { toOption } from '@grafana/data';\nimport { AccessoryButton, InputGroup } from '@grafana/experimental';\nimport { Select, stylesFactory, useTheme2 } from '@grafana/ui';\nimport { appendTemplateVariables } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst wildcardOption = {\n  value: '*',\n  label: '*'\n};\n\nconst excludeCurrentKey = (dimensions, currentKey) => Object.entries(dimensions !== null && dimensions !== void 0 ? dimensions : {}).reduce((acc, [key, value]) => {\n  if (key !== currentKey) {\n    return Object.assign({}, acc, {\n      [key]: value\n    });\n  }\n\n  return acc;\n}, {});\n\nexport const FilterItem = ({\n  filter,\n  metricStat: {\n    region,\n    namespace,\n    metricName,\n    dimensions\n  },\n  datasource,\n  dimensionKeys,\n  disableExpressions,\n  onChange,\n  onDelete\n}) => {\n  const dimensionsExcludingCurrentKey = useMemo(() => excludeCurrentKey(dimensions !== null && dimensions !== void 0 ? dimensions : {}, filter.key), [dimensions, filter]);\n\n  const loadDimensionValues = async () => {\n    if (!filter.key) {\n      return [];\n    }\n\n    return datasource.getDimensionValues(region, namespace, metricName, filter.key, dimensionsExcludingCurrentKey).then(result => {\n      if (result.length && !disableExpressions) {\n        result.unshift(wildcardOption);\n      }\n\n      return appendTemplateVariables(datasource, result);\n    });\n  };\n\n  const [state, loadOptions] = useAsyncFn(loadDimensionValues, [filter.key, dimensions]);\n  const theme = useTheme2();\n  const styles = getOperatorStyles(theme);\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": \"cloudwatch-dimensions-filter-item\",\n    children: /*#__PURE__*/_jsxs(InputGroup, {\n      children: [/*#__PURE__*/_jsx(Select, {\n        \"aria-label\": \"Dimensions filter key\",\n        inputId: \"cloudwatch-dimensions-filter-item-key\",\n        width: \"auto\",\n        value: filter.key ? toOption(filter.key) : null,\n        allowCustomValue: true,\n        options: dimensionKeys,\n        onChange: change => {\n          if (change.label) {\n            onChange({\n              key: change.label,\n              value: undefined\n            });\n          }\n        }\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: cx(styles.root),\n        children: \"=\"\n      }), /*#__PURE__*/_jsx(Select, {\n        \"aria-label\": \"Dimensions filter value\",\n        inputId: \"cloudwatch-dimensions-filter-item-value\",\n        onOpenMenu: loadOptions,\n        width: \"auto\",\n        value: filter.value ? toOption(filter.value) : null,\n        allowCustomValue: true,\n        isLoading: state.loading,\n        options: state.value,\n        onChange: change => {\n          if (change.value) {\n            onChange(Object.assign({}, filter, {\n              value: change.value\n            }));\n          }\n        }\n      }), /*#__PURE__*/_jsx(AccessoryButton, {\n        \"aria-label\": \"remove\",\n        icon: \"times\",\n        variant: \"secondary\",\n        onClick: onDelete,\n        type: \"button\"\n      })]\n    })\n  });\n};\nconst getOperatorStyles = stylesFactory(theme => ({\n  root: css({\n    padding: theme.spacing(0, 1),\n    alignSelf: 'center'\n  })\n}));","map":{"version":3,"names":["css","cx","React","useMemo","useAsyncFn","toOption","AccessoryButton","InputGroup","Select","stylesFactory","useTheme2","appendTemplateVariables","wildcardOption","value","label","excludeCurrentKey","dimensions","currentKey","Object","entries","reduce","acc","key","FilterItem","filter","metricStat","region","namespace","metricName","datasource","dimensionKeys","disableExpressions","onChange","onDelete","dimensionsExcludingCurrentKey","loadDimensionValues","getDimensionValues","then","result","length","unshift","state","loadOptions","theme","styles","getOperatorStyles","change","undefined","root","loading","padding","spacing","alignSelf"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/components/Dimensions/FilterItem.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { GrafanaTheme2, SelectableValue, toOption } from '@grafana/data';\nimport { AccessoryButton, InputGroup } from '@grafana/experimental';\nimport { Select, stylesFactory, useTheme2 } from '@grafana/ui';\n\nimport { CloudWatchDatasource } from '../../datasource';\nimport { Dimensions, MetricStat } from '../../types';\nimport { appendTemplateVariables } from '../../utils/utils';\n\nimport { DimensionFilterCondition } from './Dimensions';\n\nexport interface Props {\n  metricStat: MetricStat;\n  datasource: CloudWatchDatasource;\n  filter: DimensionFilterCondition;\n  dimensionKeys: Array<SelectableValue<string>>;\n  disableExpressions: boolean;\n  onChange: (value: DimensionFilterCondition) => void;\n  onDelete: () => void;\n}\n\nconst wildcardOption = { value: '*', label: '*' };\n\nconst excludeCurrentKey = (dimensions: Dimensions, currentKey: string | undefined) =>\n  Object.entries(dimensions ?? {}).reduce<Dimensions>((acc, [key, value]) => {\n    if (key !== currentKey) {\n      return { ...acc, [key]: value };\n    }\n    return acc;\n  }, {});\n\nexport const FilterItem: FunctionComponent<Props> = ({\n  filter,\n  metricStat: { region, namespace, metricName, dimensions },\n  datasource,\n  dimensionKeys,\n  disableExpressions,\n  onChange,\n  onDelete,\n}) => {\n  const dimensionsExcludingCurrentKey = useMemo(\n    () => excludeCurrentKey(dimensions ?? {}, filter.key),\n    [dimensions, filter]\n  );\n\n  const loadDimensionValues = async () => {\n    if (!filter.key) {\n      return [];\n    }\n\n    return datasource\n      .getDimensionValues(region, namespace, metricName, filter.key, dimensionsExcludingCurrentKey)\n      .then((result: Array<SelectableValue<string>>) => {\n        if (result.length && !disableExpressions) {\n          result.unshift(wildcardOption);\n        }\n        return appendTemplateVariables(datasource, result);\n      });\n  };\n\n  const [state, loadOptions] = useAsyncFn(loadDimensionValues, [filter.key, dimensions]);\n  const theme = useTheme2();\n  const styles = getOperatorStyles(theme);\n\n  return (\n    <div data-testid=\"cloudwatch-dimensions-filter-item\">\n      <InputGroup>\n        <Select\n          aria-label=\"Dimensions filter key\"\n          inputId=\"cloudwatch-dimensions-filter-item-key\"\n          width=\"auto\"\n          value={filter.key ? toOption(filter.key) : null}\n          allowCustomValue\n          options={dimensionKeys}\n          onChange={(change) => {\n            if (change.label) {\n              onChange({ key: change.label, value: undefined });\n            }\n          }}\n        />\n\n        <span className={cx(styles.root)}>=</span>\n\n        <Select\n          aria-label=\"Dimensions filter value\"\n          inputId=\"cloudwatch-dimensions-filter-item-value\"\n          onOpenMenu={loadOptions}\n          width=\"auto\"\n          value={filter.value ? toOption(filter.value) : null}\n          allowCustomValue\n          isLoading={state.loading}\n          options={state.value}\n          onChange={(change) => {\n            if (change.value) {\n              onChange({ ...filter, value: change.value });\n            }\n          }}\n        />\n        <AccessoryButton aria-label=\"remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} type=\"button\" />\n      </InputGroup>\n    </div>\n  );\n};\n\nconst getOperatorStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  root: css({\n    padding: theme.spacing(0, 1),\n    alignSelf: 'center',\n  }),\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}