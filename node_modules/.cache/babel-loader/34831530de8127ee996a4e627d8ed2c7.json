{"ast":null,"code":"import { FieldColorModeId, FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { histogramFieldInfo } from '@grafana/data/src/transformations/transformers/histogram';\nimport { commonOptionsBuilder, graphFieldOptions } from '@grafana/ui';\nimport { HistogramPanel } from './HistogramPanel';\nimport { defaultPanelFieldConfig, defaultPanelOptions } from './models.gen';\nimport { originalDataHasHistogram } from './utils';\nexport const plugin = new PanelPlugin(HistogramPanel).setPanelOptions(builder => {\n  builder.addCustomEditor({\n    id: '__calc__',\n    path: '__calc__',\n    name: 'Values',\n    description: 'Showing frequencies that are calculated in the query',\n    editor: () => null,\n    // empty editor\n    showIf: (opts, data) => originalDataHasHistogram(data)\n  }).addNumberInput({\n    path: 'bucketSize',\n    name: histogramFieldInfo.bucketSize.name,\n    description: histogramFieldInfo.bucketSize.description,\n    settings: {\n      placeholder: 'Auto',\n      min: 0\n    },\n    defaultValue: defaultPanelOptions.bucketSize,\n    showIf: (opts, data) => !originalDataHasHistogram(data)\n  }).addNumberInput({\n    path: 'bucketOffset',\n    name: histogramFieldInfo.bucketOffset.name,\n    description: histogramFieldInfo.bucketOffset.description,\n    settings: {\n      placeholder: '0',\n      min: 0\n    },\n    defaultValue: defaultPanelOptions.bucketOffset,\n    showIf: (opts, data) => !originalDataHasHistogram(data)\n  }).addBooleanSwitch({\n    path: 'combine',\n    name: histogramFieldInfo.combine.name,\n    description: histogramFieldInfo.combine.description,\n    defaultValue: defaultPanelOptions.combine,\n    showIf: (opts, data) => !originalDataHasHistogram(data)\n  }); // commonOptionsBuilder.addTooltipOptions(builder);\n\n  commonOptionsBuilder.addLegendOptions(builder);\n}).useFieldConfig({\n  standardOptions: {\n    [FieldConfigProperty.Color]: {\n      settings: {\n        byValueSupport: true\n      },\n      defaultValue: {\n        mode: FieldColorModeId.PaletteClassic\n      }\n    }\n  },\n  useCustomConfig: builder => {\n    const cfg = defaultPanelFieldConfig;\n    builder.addSliderInput({\n      path: 'lineWidth',\n      name: 'Line width',\n      defaultValue: cfg.lineWidth,\n      settings: {\n        min: 0,\n        max: 10,\n        step: 1\n      }\n    }).addSliderInput({\n      path: 'fillOpacity',\n      name: 'Fill opacity',\n      defaultValue: cfg.fillOpacity,\n      settings: {\n        min: 0,\n        max: 100,\n        step: 1\n      }\n    }).addRadio({\n      path: 'gradientMode',\n      name: 'Gradient mode',\n      defaultValue: graphFieldOptions.fillGradient[0].value,\n      settings: {\n        options: graphFieldOptions.fillGradient\n      }\n    });\n    commonOptionsBuilder.addHideFrom(builder);\n  }\n});","map":{"version":3,"names":["FieldColorModeId","FieldConfigProperty","PanelPlugin","histogramFieldInfo","commonOptionsBuilder","graphFieldOptions","HistogramPanel","defaultPanelFieldConfig","defaultPanelOptions","originalDataHasHistogram","plugin","setPanelOptions","builder","addCustomEditor","id","path","name","description","editor","showIf","opts","data","addNumberInput","bucketSize","settings","placeholder","min","defaultValue","bucketOffset","addBooleanSwitch","combine","addLegendOptions","useFieldConfig","standardOptions","Color","byValueSupport","mode","PaletteClassic","useCustomConfig","cfg","addSliderInput","lineWidth","max","step","fillOpacity","addRadio","fillGradient","value","options","addHideFrom"],"sources":["/home/soula/grafana/public/app/plugins/panel/histogram/module.tsx"],"sourcesContent":["import { FieldColorModeId, FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { histogramFieldInfo } from '@grafana/data/src/transformations/transformers/histogram';\nimport { commonOptionsBuilder, graphFieldOptions } from '@grafana/ui';\n\nimport { HistogramPanel } from './HistogramPanel';\nimport { PanelFieldConfig, PanelOptions, defaultPanelFieldConfig, defaultPanelOptions } from './models.gen';\nimport { originalDataHasHistogram } from './utils';\n\nexport const plugin = new PanelPlugin<PanelOptions, PanelFieldConfig>(HistogramPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addCustomEditor({\n        id: '__calc__',\n        path: '__calc__',\n        name: 'Values',\n        description: 'Showing frequencies that are calculated in the query',\n        editor: () => null, // empty editor\n        showIf: (opts, data) => originalDataHasHistogram(data),\n      })\n      .addNumberInput({\n        path: 'bucketSize',\n        name: histogramFieldInfo.bucketSize.name,\n        description: histogramFieldInfo.bucketSize.description,\n        settings: {\n          placeholder: 'Auto',\n          min: 0,\n        },\n        defaultValue: defaultPanelOptions.bucketSize,\n        showIf: (opts, data) => !originalDataHasHistogram(data),\n      })\n      .addNumberInput({\n        path: 'bucketOffset',\n        name: histogramFieldInfo.bucketOffset.name,\n        description: histogramFieldInfo.bucketOffset.description,\n        settings: {\n          placeholder: '0',\n          min: 0,\n        },\n        defaultValue: defaultPanelOptions.bucketOffset,\n        showIf: (opts, data) => !originalDataHasHistogram(data),\n      })\n      .addBooleanSwitch({\n        path: 'combine',\n        name: histogramFieldInfo.combine.name,\n        description: histogramFieldInfo.combine.description,\n        defaultValue: defaultPanelOptions.combine,\n        showIf: (opts, data) => !originalDataHasHistogram(data),\n      });\n\n    // commonOptionsBuilder.addTooltipOptions(builder);\n    commonOptionsBuilder.addLegendOptions(builder);\n  })\n  .useFieldConfig({\n    standardOptions: {\n      [FieldConfigProperty.Color]: {\n        settings: {\n          byValueSupport: true,\n        },\n        defaultValue: {\n          mode: FieldColorModeId.PaletteClassic,\n        },\n      },\n    },\n    useCustomConfig: (builder) => {\n      const cfg = defaultPanelFieldConfig;\n\n      builder\n        .addSliderInput({\n          path: 'lineWidth',\n          name: 'Line width',\n          defaultValue: cfg.lineWidth,\n          settings: {\n            min: 0,\n            max: 10,\n            step: 1,\n          },\n        })\n        .addSliderInput({\n          path: 'fillOpacity',\n          name: 'Fill opacity',\n          defaultValue: cfg.fillOpacity,\n          settings: {\n            min: 0,\n            max: 100,\n            step: 1,\n          },\n        })\n        .addRadio({\n          path: 'gradientMode',\n          name: 'Gradient mode',\n          defaultValue: graphFieldOptions.fillGradient[0].value,\n          settings: {\n            options: graphFieldOptions.fillGradient,\n          },\n        });\n\n      commonOptionsBuilder.addHideFrom(builder);\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}