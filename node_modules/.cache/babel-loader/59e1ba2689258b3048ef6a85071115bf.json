{"ast":null,"code":"import { PanelPlugin, VizOrientation } from '@grafana/data';\nimport { BarGaugeDisplayMode } from '@grafana/schema';\nimport { commonOptionsBuilder, sharedSingleStatPanelChangedHandler } from '@grafana/ui';\nimport { addOrientationOption, addStandardDataReduceOptions } from '../stat/common';\nimport { barGaugePanelMigrationHandler } from './BarGaugeMigrations';\nimport { BarGaugePanel } from './BarGaugePanel';\nimport { defaultPanelOptions } from './models.gen';\nimport { BarGaugeSuggestionsSupplier } from './suggestions';\nexport const plugin = new PanelPlugin(BarGaugePanel).useFieldConfig().setPanelOptions(builder => {\n  addStandardDataReduceOptions(builder);\n  addOrientationOption(builder);\n  commonOptionsBuilder.addTextSizeOptions(builder);\n  builder.addRadio({\n    path: 'displayMode',\n    name: 'Display mode',\n    settings: {\n      options: [{\n        value: BarGaugeDisplayMode.Gradient,\n        label: 'Gradient'\n      }, {\n        value: BarGaugeDisplayMode.Lcd,\n        label: 'Retro LCD'\n      }, {\n        value: BarGaugeDisplayMode.Basic,\n        label: 'Basic'\n      }]\n    },\n    defaultValue: defaultPanelOptions.displayMode\n  }).addBooleanSwitch({\n    path: 'showUnfilled',\n    name: 'Show unfilled area',\n    description: 'When enabled renders the unfilled region as gray',\n    defaultValue: defaultPanelOptions.showUnfilled,\n    showIf: options => options.displayMode !== 'lcd'\n  }).addNumberInput({\n    path: 'minVizWidth',\n    name: 'Min width',\n    description: 'Minimum column width',\n    defaultValue: defaultPanelOptions.minVizWidth,\n    showIf: options => options.orientation === VizOrientation.Vertical\n  }).addNumberInput({\n    path: 'minVizHeight',\n    name: 'Min height',\n    description: 'Minimum row height',\n    defaultValue: defaultPanelOptions.minVizHeight,\n    showIf: options => options.orientation === VizOrientation.Horizontal\n  });\n}).setPanelChangeHandler(sharedSingleStatPanelChangedHandler).setMigrationHandler(barGaugePanelMigrationHandler).setSuggestionsSupplier(new BarGaugeSuggestionsSupplier());","map":{"version":3,"names":["PanelPlugin","VizOrientation","BarGaugeDisplayMode","commonOptionsBuilder","sharedSingleStatPanelChangedHandler","addOrientationOption","addStandardDataReduceOptions","barGaugePanelMigrationHandler","BarGaugePanel","defaultPanelOptions","BarGaugeSuggestionsSupplier","plugin","useFieldConfig","setPanelOptions","builder","addTextSizeOptions","addRadio","path","name","settings","options","value","Gradient","label","Lcd","Basic","defaultValue","displayMode","addBooleanSwitch","description","showUnfilled","showIf","addNumberInput","minVizWidth","orientation","Vertical","minVizHeight","Horizontal","setPanelChangeHandler","setMigrationHandler","setSuggestionsSupplier"],"sources":["/home/soula/grafana/public/app/plugins/panel/bargauge/module.tsx"],"sourcesContent":["import { PanelPlugin, VizOrientation } from '@grafana/data';\nimport { BarGaugeDisplayMode } from '@grafana/schema';\nimport { commonOptionsBuilder, sharedSingleStatPanelChangedHandler } from '@grafana/ui';\n\nimport { addOrientationOption, addStandardDataReduceOptions } from '../stat/common';\n\nimport { barGaugePanelMigrationHandler } from './BarGaugeMigrations';\nimport { BarGaugePanel } from './BarGaugePanel';\nimport { PanelOptions, defaultPanelOptions } from './models.gen';\nimport { BarGaugeSuggestionsSupplier } from './suggestions';\n\nexport const plugin = new PanelPlugin<PanelOptions>(BarGaugePanel)\n  .useFieldConfig()\n  .setPanelOptions((builder) => {\n    addStandardDataReduceOptions(builder);\n    addOrientationOption(builder);\n    commonOptionsBuilder.addTextSizeOptions(builder);\n\n    builder\n      .addRadio({\n        path: 'displayMode',\n        name: 'Display mode',\n        settings: {\n          options: [\n            { value: BarGaugeDisplayMode.Gradient, label: 'Gradient' },\n            { value: BarGaugeDisplayMode.Lcd, label: 'Retro LCD' },\n            { value: BarGaugeDisplayMode.Basic, label: 'Basic' },\n          ],\n        },\n        defaultValue: defaultPanelOptions.displayMode,\n      })\n      .addBooleanSwitch({\n        path: 'showUnfilled',\n        name: 'Show unfilled area',\n        description: 'When enabled renders the unfilled region as gray',\n        defaultValue: defaultPanelOptions.showUnfilled,\n        showIf: (options) => options.displayMode !== 'lcd',\n      })\n      .addNumberInput({\n        path: 'minVizWidth',\n        name: 'Min width',\n        description: 'Minimum column width',\n        defaultValue: defaultPanelOptions.minVizWidth,\n        showIf: (options) => options.orientation === VizOrientation.Vertical,\n      })\n      .addNumberInput({\n        path: 'minVizHeight',\n        name: 'Min height',\n        description: 'Minimum row height',\n        defaultValue: defaultPanelOptions.minVizHeight,\n        showIf: (options) => options.orientation === VizOrientation.Horizontal,\n      });\n  })\n  .setPanelChangeHandler(sharedSingleStatPanelChangedHandler)\n  .setMigrationHandler(barGaugePanelMigrationHandler)\n  .setSuggestionsSupplier(new BarGaugeSuggestionsSupplier());\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,eAA5C;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,oBAAT,EAA+BC,mCAA/B,QAA0E,aAA1E;AAEA,SAASC,oBAAT,EAA+BC,4BAA/B,QAAmE,gBAAnE;AAEA,SAASC,6BAAT,QAA8C,sBAA9C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAAuBC,mBAAvB,QAAkD,cAAlD;AACA,SAASC,2BAAT,QAA4C,eAA5C;AAEA,OAAO,MAAMC,MAAM,GAAG,IAAIX,WAAJ,CAA8BQ,aAA9B,EACnBI,cADmB,GAEnBC,eAFmB,CAEFC,OAAD,IAAa;EAC5BR,4BAA4B,CAACQ,OAAD,CAA5B;EACAT,oBAAoB,CAACS,OAAD,CAApB;EACAX,oBAAoB,CAACY,kBAArB,CAAwCD,OAAxC;EAEAA,OAAO,CACJE,QADH,CACY;IACRC,IAAI,EAAE,aADE;IAERC,IAAI,EAAE,cAFE;IAGRC,QAAQ,EAAE;MACRC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAEnB,mBAAmB,CAACoB,QAA7B;QAAuCC,KAAK,EAAE;MAA9C,CADO,EAEP;QAAEF,KAAK,EAAEnB,mBAAmB,CAACsB,GAA7B;QAAkCD,KAAK,EAAE;MAAzC,CAFO,EAGP;QAAEF,KAAK,EAAEnB,mBAAmB,CAACuB,KAA7B;QAAoCF,KAAK,EAAE;MAA3C,CAHO;IADD,CAHF;IAURG,YAAY,EAAEjB,mBAAmB,CAACkB;EAV1B,CADZ,EAaGC,gBAbH,CAaoB;IAChBX,IAAI,EAAE,cADU;IAEhBC,IAAI,EAAE,oBAFU;IAGhBW,WAAW,EAAE,kDAHG;IAIhBH,YAAY,EAAEjB,mBAAmB,CAACqB,YAJlB;IAKhBC,MAAM,EAAGX,OAAD,IAAaA,OAAO,CAACO,WAAR,KAAwB;EAL7B,CAbpB,EAoBGK,cApBH,CAoBkB;IACdf,IAAI,EAAE,aADQ;IAEdC,IAAI,EAAE,WAFQ;IAGdW,WAAW,EAAE,sBAHC;IAIdH,YAAY,EAAEjB,mBAAmB,CAACwB,WAJpB;IAKdF,MAAM,EAAGX,OAAD,IAAaA,OAAO,CAACc,WAAR,KAAwBjC,cAAc,CAACkC;EAL9C,CApBlB,EA2BGH,cA3BH,CA2BkB;IACdf,IAAI,EAAE,cADQ;IAEdC,IAAI,EAAE,YAFQ;IAGdW,WAAW,EAAE,oBAHC;IAIdH,YAAY,EAAEjB,mBAAmB,CAAC2B,YAJpB;IAKdL,MAAM,EAAGX,OAAD,IAAaA,OAAO,CAACc,WAAR,KAAwBjC,cAAc,CAACoC;EAL9C,CA3BlB;AAkCD,CAzCmB,EA0CnBC,qBA1CmB,CA0CGlC,mCA1CH,EA2CnBmC,mBA3CmB,CA2CChC,6BA3CD,EA4CnBiC,sBA5CmB,CA4CI,IAAI9B,2BAAJ,EA5CJ,CAAf"},"metadata":{},"sourceType":"module"}