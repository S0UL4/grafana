{"ast":null,"code":"import { ErrorIndicator } from './ErrorIndicator';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { PanelChrome as PanelChromeComponent } from './PanelChrome';\n/**\n * @internal\n */\n\nexport { PanelChromeProps, PanelPadding } from './PanelChrome';\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nexport const PanelChrome = PanelChromeComponent;\nPanelChrome.LoadingIndicator = LoadingIndicator;\nPanelChrome.ErrorIndicator = ErrorIndicator;\n/**\n * Exporting the components for extensibility and since it is a good practice\n * according to the api-extractor.\n */\n\nexport { LoadingIndicator as PanelChromeLoadingIndicator, LoadingIndicatorProps as PanelChromeLoadingIndicatorProps } from './LoadingIndicator';\nexport { ErrorIndicator as PanelChromeErrorIndicator, ErrorIndicatorProps as PanelChromeErrorIndicatorProps } from './ErrorIndicator';\nexport { usePanelContext, PanelContextProvider, PanelContext, PanelContextRoot } from './PanelContext';\nexport * from './types';","map":{"version":3,"names":["ErrorIndicator","LoadingIndicator","PanelChrome","PanelChromeComponent","PanelChromeProps","PanelPadding","PanelChromeLoadingIndicator","LoadingIndicatorProps","PanelChromeLoadingIndicatorProps","PanelChromeErrorIndicator","ErrorIndicatorProps","PanelChromeErrorIndicatorProps","usePanelContext","PanelContextProvider","PanelContext","PanelContextRoot"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/PanelChrome/index.ts"],"sourcesContent":["import React from 'react';\n\nimport { ErrorIndicator } from './ErrorIndicator';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { PanelChrome as PanelChromeComponent, PanelChromeProps } from './PanelChrome';\n\n/**\n * @internal\n */\nexport { PanelChromeProps, PanelPadding } from './PanelChrome';\n\n/**\n * @internal\n */\nexport interface PanelChromeType extends React.FC<PanelChromeProps> {\n  LoadingIndicator: typeof LoadingIndicator;\n  ErrorIndicator: typeof ErrorIndicator;\n}\n\n/**\n * @internal\n */\nexport const PanelChrome = PanelChromeComponent as PanelChromeType;\nPanelChrome.LoadingIndicator = LoadingIndicator;\nPanelChrome.ErrorIndicator = ErrorIndicator;\n\n/**\n * Exporting the components for extensibility and since it is a good practice\n * according to the api-extractor.\n */\nexport {\n  LoadingIndicator as PanelChromeLoadingIndicator,\n  LoadingIndicatorProps as PanelChromeLoadingIndicatorProps,\n} from './LoadingIndicator';\n\nexport {\n  ErrorIndicator as PanelChromeErrorIndicator,\n  ErrorIndicatorProps as PanelChromeErrorIndicatorProps,\n} from './ErrorIndicator';\n\nexport { usePanelContext, PanelContextProvider, PanelContext, PanelContextRoot } from './PanelContext';\n\nexport * from './types';\n"],"mappings":"AAEA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,WAAW,IAAIC,oBAAxB,QAAsE,eAAtE;AAEA;AACA;AACA;;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,eAA/C;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA,OAAO,MAAMH,WAAW,GAAGC,oBAApB;AACPD,WAAW,CAACD,gBAAZ,GAA+BA,gBAA/B;AACAC,WAAW,CAACF,cAAZ,GAA6BA,cAA7B;AAEA;AACA;AACA;AACA;;AACA,SACEC,gBAAgB,IAAIK,2BADtB,EAEEC,qBAAqB,IAAIC,gCAF3B,QAGO,oBAHP;AAKA,SACER,cAAc,IAAIS,yBADpB,EAEEC,mBAAmB,IAAIC,8BAFzB,QAGO,kBAHP;AAKA,SAASC,eAAT,EAA0BC,oBAA1B,EAAgDC,YAAhD,EAA8DC,gBAA9D,QAAsF,gBAAtF;AAEA,cAAc,SAAd"},"metadata":{},"sourceType":"module"}