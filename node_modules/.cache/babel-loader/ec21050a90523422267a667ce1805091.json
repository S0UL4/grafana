{"ast":null,"code":"import { PluginState, unEscapeStringFromRegex } from '@grafana/data';\nimport { config } from 'app/core/config';\nexport function getAllPanelPluginMeta() {\n  const allPanels = config.panels;\n  return Object.keys(allPanels).filter(key => allPanels[key]['hideFromList'] === false).map(key => allPanels[key]).sort((a, b) => a.sort - b.sort);\n}\nexport function filterPluginList(pluginsList, searchQuery, // Note: this will be an escaped regex string as it comes from `FilterInput`\ncurrent) {\n  if (!searchQuery.length) {\n    return pluginsList.filter(p => {\n      if (p.state === PluginState.deprecated) {\n        return current.id === p.id;\n      }\n\n      return true;\n    });\n  }\n\n  const query = unEscapeStringFromRegex(searchQuery).toLowerCase();\n  const first = [];\n  const match = [];\n  const isGraphQuery = 'graph'.startsWith(query);\n\n  for (const item of pluginsList) {\n    if (item.state === PluginState.deprecated && current.id !== item.id) {\n      continue;\n    }\n\n    const name = item.name.toLowerCase();\n    const idx = name.indexOf(query);\n\n    if (idx === 0) {\n      first.push(item);\n    } else if (idx > 0) {\n      match.push(item);\n    } else if (isGraphQuery && item.id === 'timeseries') {\n      first.push(item);\n    }\n  }\n\n  return first.concat(match);\n}","map":{"version":3,"names":["PluginState","unEscapeStringFromRegex","config","getAllPanelPluginMeta","allPanels","panels","Object","keys","filter","key","map","sort","a","b","filterPluginList","pluginsList","searchQuery","current","length","p","state","deprecated","id","query","toLowerCase","first","match","isGraphQuery","startsWith","item","name","idx","indexOf","push","concat"],"sources":["/home/soula/grafana/public/app/features/panel/state/util.ts"],"sourcesContent":["import { PanelPluginMeta, PluginState, unEscapeStringFromRegex } from '@grafana/data';\nimport { config } from 'app/core/config';\n\nexport function getAllPanelPluginMeta(): PanelPluginMeta[] {\n  const allPanels = config.panels;\n\n  return Object.keys(allPanels)\n    .filter((key) => allPanels[key]['hideFromList'] === false)\n    .map((key) => allPanels[key])\n    .sort((a: PanelPluginMeta, b: PanelPluginMeta) => a.sort - b.sort);\n}\n\nexport function filterPluginList(\n  pluginsList: PanelPluginMeta[],\n  searchQuery: string, // Note: this will be an escaped regex string as it comes from `FilterInput`\n  current: PanelPluginMeta\n): PanelPluginMeta[] {\n  if (!searchQuery.length) {\n    return pluginsList.filter((p) => {\n      if (p.state === PluginState.deprecated) {\n        return current.id === p.id;\n      }\n      return true;\n    });\n  }\n\n  const query = unEscapeStringFromRegex(searchQuery).toLowerCase();\n  const first: PanelPluginMeta[] = [];\n  const match: PanelPluginMeta[] = [];\n  const isGraphQuery = 'graph'.startsWith(query);\n\n  for (const item of pluginsList) {\n    if (item.state === PluginState.deprecated && current.id !== item.id) {\n      continue;\n    }\n\n    const name = item.name.toLowerCase();\n    const idx = name.indexOf(query);\n\n    if (idx === 0) {\n      first.push(item);\n    } else if (idx > 0) {\n      match.push(item);\n    } else if (isGraphQuery && item.id === 'timeseries') {\n      first.push(item);\n    }\n  }\n\n  return first.concat(match);\n}\n"],"mappings":"AAAA,SAA0BA,WAA1B,EAAuCC,uBAAvC,QAAsE,eAAtE;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAO,SAASC,qBAAT,GAAoD;EACzD,MAAMC,SAAS,GAAGF,MAAM,CAACG,MAAzB;EAEA,OAAOC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EACJI,MADI,CACIC,GAAD,IAASL,SAAS,CAACK,GAAD,CAAT,CAAe,cAAf,MAAmC,KAD/C,EAEJC,GAFI,CAECD,GAAD,IAASL,SAAS,CAACK,GAAD,CAFlB,EAGJE,IAHI,CAGC,CAACC,CAAD,EAAqBC,CAArB,KAA4CD,CAAC,CAACD,IAAF,GAASE,CAAC,CAACF,IAHxD,CAAP;AAID;AAED,OAAO,SAASG,gBAAT,CACLC,WADK,EAELC,WAFK,EAEgB;AACrBC,OAHK,EAIc;EACnB,IAAI,CAACD,WAAW,CAACE,MAAjB,EAAyB;IACvB,OAAOH,WAAW,CAACP,MAAZ,CAAoBW,CAAD,IAAO;MAC/B,IAAIA,CAAC,CAACC,KAAF,KAAYpB,WAAW,CAACqB,UAA5B,EAAwC;QACtC,OAAOJ,OAAO,CAACK,EAAR,KAAeH,CAAC,CAACG,EAAxB;MACD;;MACD,OAAO,IAAP;IACD,CALM,CAAP;EAMD;;EAED,MAAMC,KAAK,GAAGtB,uBAAuB,CAACe,WAAD,CAAvB,CAAqCQ,WAArC,EAAd;EACA,MAAMC,KAAwB,GAAG,EAAjC;EACA,MAAMC,KAAwB,GAAG,EAAjC;EACA,MAAMC,YAAY,GAAG,QAAQC,UAAR,CAAmBL,KAAnB,CAArB;;EAEA,KAAK,MAAMM,IAAX,IAAmBd,WAAnB,EAAgC;IAC9B,IAAIc,IAAI,CAACT,KAAL,KAAepB,WAAW,CAACqB,UAA3B,IAAyCJ,OAAO,CAACK,EAAR,KAAeO,IAAI,CAACP,EAAjE,EAAqE;MACnE;IACD;;IAED,MAAMQ,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUN,WAAV,EAAb;IACA,MAAMO,GAAG,GAAGD,IAAI,CAACE,OAAL,CAAaT,KAAb,CAAZ;;IAEA,IAAIQ,GAAG,KAAK,CAAZ,EAAe;MACbN,KAAK,CAACQ,IAAN,CAAWJ,IAAX;IACD,CAFD,MAEO,IAAIE,GAAG,GAAG,CAAV,EAAa;MAClBL,KAAK,CAACO,IAAN,CAAWJ,IAAX;IACD,CAFM,MAEA,IAAIF,YAAY,IAAIE,IAAI,CAACP,EAAL,KAAY,YAAhC,EAA8C;MACnDG,KAAK,CAACQ,IAAN,CAAWJ,IAAX;IACD;EACF;;EAED,OAAOJ,KAAK,CAACS,MAAN,CAAaR,KAAb,CAAP;AACD"},"metadata":{},"sourceType":"module"}