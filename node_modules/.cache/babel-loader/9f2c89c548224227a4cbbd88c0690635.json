{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useExpandableLabel = (initialExpanded, onExpandedChange) => {\n  const ref = useRef(null);\n  const [expanded, setExpanded] = useState(initialExpanded);\n  const [width, setWidth] = useState(0);\n\n  const setExpandedWrapper = expanded => {\n    setExpanded(expanded);\n\n    if (onExpandedChange) {\n      onExpandedChange(expanded);\n    }\n  };\n\n  const Label = ({\n    Component,\n    onClick,\n    disabled\n  }) => /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    onClick: disabled ? undefined : () => {\n      setExpandedWrapper(true);\n\n      if (ref && ref.current) {\n        setWidth(ref.current.clientWidth * 1.25);\n      }\n\n      if (onClick) {\n        onClick();\n      }\n    },\n    children: Component\n  });\n\n  return [Label, width, expanded, setExpandedWrapper];\n};","map":{"version":3,"names":["React","useState","useRef","useExpandableLabel","initialExpanded","onExpandedChange","ref","expanded","setExpanded","width","setWidth","setExpandedWrapper","Label","Component","onClick","disabled","undefined","current","clientWidth"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Segment/useExpandableLabel.tsx"],"sourcesContent":["import React, { useState, useRef, ReactElement } from 'react';\n\ninterface LabelProps {\n  Component: ReactElement;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nexport const useExpandableLabel = (\n  initialExpanded: boolean,\n  onExpandedChange?: (expanded: boolean) => void\n): [React.ComponentType<LabelProps>, number, boolean, (expanded: boolean) => void] => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [expanded, setExpanded] = useState<boolean>(initialExpanded);\n  const [width, setWidth] = useState(0);\n\n  const setExpandedWrapper = (expanded: boolean) => {\n    setExpanded(expanded);\n    if (onExpandedChange) {\n      onExpandedChange(expanded);\n    }\n  };\n\n  const Label: React.FC<LabelProps> = ({ Component, onClick, disabled }) => (\n    <div\n      ref={ref}\n      onClick={\n        disabled\n          ? undefined\n          : () => {\n              setExpandedWrapper(true);\n              if (ref && ref.current) {\n                setWidth(ref.current.clientWidth * 1.25);\n              }\n              if (onClick) {\n                onClick();\n              }\n            }\n      }\n    >\n      {Component}\n    </div>\n  );\n\n  return [Label, width, expanded, setExpandedWrapper];\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAsD,OAAtD;;AAQA,OAAO,MAAMC,kBAAkB,GAAG,CAChCC,eADgC,EAEhCC,gBAFgC,KAGoD;EACpF,MAAMC,GAAG,GAAGJ,MAAM,CAAiB,IAAjB,CAAlB;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAUG,eAAV,CAAxC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMU,kBAAkB,GAAIJ,QAAD,IAAuB;IAChDC,WAAW,CAACD,QAAD,CAAX;;IACA,IAAIF,gBAAJ,EAAsB;MACpBA,gBAAgB,CAACE,QAAD,CAAhB;IACD;EACF,CALD;;EAOA,MAAMK,KAA2B,GAAG,CAAC;IAAEC,SAAF;IAAaC,OAAb;IAAsBC;EAAtB,CAAD,kBAClC;IACE,GAAG,EAAET,GADP;IAEE,OAAO,EACLS,QAAQ,GACJC,SADI,GAEJ,MAAM;MACJL,kBAAkB,CAAC,IAAD,CAAlB;;MACA,IAAIL,GAAG,IAAIA,GAAG,CAACW,OAAf,EAAwB;QACtBP,QAAQ,CAACJ,GAAG,CAACW,OAAJ,CAAYC,WAAZ,GAA0B,IAA3B,CAAR;MACD;;MACD,IAAIJ,OAAJ,EAAa;QACXA,OAAO;MACR;IACF,CAbT;IAAA,UAgBGD;EAhBH,EADF;;EAqBA,OAAO,CAACD,KAAD,EAAQH,KAAR,EAAeF,QAAf,EAAyBI,kBAAzB,CAAP;AACD,CArCM"},"metadata":{},"sourceType":"module"}