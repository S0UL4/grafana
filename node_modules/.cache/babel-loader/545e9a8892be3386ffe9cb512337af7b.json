{"ast":null,"code":"var _Icon, _div;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { stylesFactory } from '../../themes';\nimport { Button } from '../Button';\nimport { FormField } from '../FormField/FormField';\nimport { Icon } from '../Icon/Icon';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getCustomHeaderRowStyles = stylesFactory(() => {\n  return {\n    layout: css`\n      display: flex;\n      align-items: center;\n      margin-bottom: 4px;\n      > * {\n        margin-left: 4px;\n        margin-bottom: 0;\n        height: 100%;\n        &:first-child,\n        &:last-child {\n          margin-left: 0;\n        }\n      }\n    `\n  };\n});\n\nconst CustomHeaderRow = ({\n  header,\n  onBlur,\n  onChange,\n  onRemove,\n  onReset\n}) => {\n  const styles = getCustomHeaderRowStyles();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.layout,\n    children: [/*#__PURE__*/_jsx(FormField, {\n      label: \"Header\",\n      name: \"name\",\n      placeholder: \"X-Custom-Header\",\n      labelWidth: 5,\n      value: header.name || '',\n      onChange: e => onChange(Object.assign({}, header, {\n        name: e.target.value\n      })),\n      onBlur: onBlur\n    }), /*#__PURE__*/_jsx(SecretFormField, {\n      label: \"Value\",\n      \"aria-label\": \"Value\",\n      name: \"value\",\n      isConfigured: header.configured,\n      value: header.value,\n      labelWidth: 5,\n      inputWidth: header.configured ? 11 : 12,\n      placeholder: \"Header Value\",\n      onReset: () => onReset(header.id),\n      onChange: e => onChange(Object.assign({}, header, {\n        value: e.target.value\n      })),\n      onBlur: onBlur\n    }), /*#__PURE__*/_jsx(Button, {\n      type: \"button\",\n      \"aria-label\": \"Remove header\",\n      variant: \"secondary\",\n      size: \"xs\",\n      onClick: _e => onRemove(header.id),\n      children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"trash-alt\"\n      }))\n    })]\n  });\n};\n\nCustomHeaderRow.displayName = 'CustomHeaderRow';\nexport class CustomHeadersSettings extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      headers: []\n    });\n\n    _defineProperty(this, \"updateSettings\", () => {\n      const {\n        headers\n      } = this.state; // we remove every httpHeaderName* field\n\n      const newJsonData = Object.fromEntries(Object.entries(this.props.dataSourceConfig.jsonData).filter(([key, val]) => !key.startsWith('httpHeaderName'))); // we remove every httpHeaderValue* field\n\n      const newSecureJsonData = Object.fromEntries(Object.entries(this.props.dataSourceConfig.secureJsonData || {}).filter(([key, val]) => !key.startsWith('httpHeaderValue'))); // then we add the current httpHeader-fields\n\n      for (const [index, header] of headers.entries()) {\n        newJsonData[`httpHeaderName${index + 1}`] = header.name;\n\n        if (!header.configured) {\n          newSecureJsonData[`httpHeaderValue${index + 1}`] = header.value;\n        }\n      }\n\n      this.props.onChange(Object.assign({}, this.props.dataSourceConfig, {\n        jsonData: newJsonData,\n        secureJsonData: newSecureJsonData\n      }));\n    });\n\n    _defineProperty(this, \"onHeaderAdd\", () => {\n      this.setState(prevState => {\n        return {\n          headers: [...prevState.headers, {\n            id: uniqueId(),\n            name: '',\n            value: '',\n            configured: false\n          }]\n        };\n      });\n    });\n\n    _defineProperty(this, \"onHeaderChange\", (headerIndex, value) => {\n      this.setState(({\n        headers\n      }) => {\n        return {\n          headers: headers.map((item, index) => {\n            if (headerIndex !== index) {\n              return item;\n            }\n\n            return Object.assign({}, value);\n          })\n        };\n      });\n    });\n\n    _defineProperty(this, \"onHeaderReset\", headerId => {\n      this.setState(({\n        headers\n      }) => {\n        return {\n          headers: headers.map((h, i) => {\n            if (h.id !== headerId) {\n              return h;\n            }\n\n            return Object.assign({}, h, {\n              value: '',\n              configured: false\n            });\n          })\n        };\n      });\n    });\n\n    _defineProperty(this, \"onHeaderRemove\", headerId => {\n      this.setState(({\n        headers\n      }) => ({\n        headers: headers.filter(h => h.id !== headerId)\n      }), this.updateSettings);\n    });\n\n    const {\n      jsonData,\n      secureJsonData,\n      secureJsonFields\n    } = this.props.dataSourceConfig;\n    this.state = {\n      headers: Object.keys(jsonData).sort().filter(key => key.startsWith('httpHeaderName')).map((key, index) => {\n        return {\n          id: uniqueId(),\n          name: jsonData[key],\n          value: secureJsonData !== undefined ? secureJsonData[key] : '',\n          configured: secureJsonFields && secureJsonFields[`httpHeaderValue${index + 1}`] || false\n        };\n      })\n    };\n  }\n\n  render() {\n    const {\n      headers\n    } = this.state;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: 'gf-form-group',\n      children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form\",\n        children: /*#__PURE__*/_jsx(\"h6\", {\n          children: \"Custom HTTP Headers\"\n        })\n      })), /*#__PURE__*/_jsx(\"div\", {\n        children: headers.map((header, i) => /*#__PURE__*/_jsx(CustomHeaderRow, {\n          header: header,\n          onChange: h => {\n            this.onHeaderChange(i, h);\n          },\n          onBlur: this.updateSettings,\n          onRemove: this.onHeaderRemove,\n          onReset: this.onHeaderReset\n        }, header.id))\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form\",\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          icon: \"plus\",\n          type: \"button\",\n          onClick: e => {\n            this.onHeaderAdd();\n          },\n          children: \"Add header\"\n        })\n      })]\n    });\n  }\n\n}\nexport default CustomHeadersSettings;","map":{"version":3,"names":["css","uniqueId","React","PureComponent","stylesFactory","Button","FormField","Icon","SecretFormField","getCustomHeaderRowStyles","layout","CustomHeaderRow","header","onBlur","onChange","onRemove","onReset","styles","name","e","target","value","configured","id","_e","displayName","CustomHeadersSettings","constructor","props","headers","state","newJsonData","Object","fromEntries","entries","dataSourceConfig","jsonData","filter","key","val","startsWith","newSecureJsonData","secureJsonData","index","setState","prevState","headerIndex","map","item","headerId","h","i","updateSettings","secureJsonFields","keys","sort","undefined","render","onHeaderChange","onHeaderRemove","onHeaderReset","onHeaderAdd"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataSourceSettings/CustomHeadersSettings.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { DataSourceSettings } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { Button } from '../Button';\nimport { FormField } from '../FormField/FormField';\nimport { Icon } from '../Icon/Icon';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\n\nexport interface CustomHeader {\n  id: string;\n  name: string;\n  value: string;\n  configured: boolean;\n}\n\nexport type CustomHeaders = CustomHeader[];\n\nexport interface Props {\n  dataSourceConfig: DataSourceSettings<any, any>;\n  onChange: (config: DataSourceSettings) => void;\n}\n\nexport interface State {\n  headers: CustomHeaders;\n}\n\ninterface CustomHeaderRowProps {\n  header: CustomHeader;\n  onReset: (id: string) => void;\n  onRemove: (id: string) => void;\n  onChange: (value: CustomHeader) => void;\n  onBlur: () => void;\n}\n\nconst getCustomHeaderRowStyles = stylesFactory(() => {\n  return {\n    layout: css`\n      display: flex;\n      align-items: center;\n      margin-bottom: 4px;\n      > * {\n        margin-left: 4px;\n        margin-bottom: 0;\n        height: 100%;\n        &:first-child,\n        &:last-child {\n          margin-left: 0;\n        }\n      }\n    `,\n  };\n});\n\nconst CustomHeaderRow: React.FC<CustomHeaderRowProps> = ({ header, onBlur, onChange, onRemove, onReset }) => {\n  const styles = getCustomHeaderRowStyles();\n  return (\n    <div className={styles.layout}>\n      <FormField\n        label=\"Header\"\n        name=\"name\"\n        placeholder=\"X-Custom-Header\"\n        labelWidth={5}\n        value={header.name || ''}\n        onChange={(e) => onChange({ ...header, name: e.target.value })}\n        onBlur={onBlur}\n      />\n      <SecretFormField\n        label=\"Value\"\n        aria-label=\"Value\"\n        name=\"value\"\n        isConfigured={header.configured}\n        value={header.value}\n        labelWidth={5}\n        inputWidth={header.configured ? 11 : 12}\n        placeholder=\"Header Value\"\n        onReset={() => onReset(header.id)}\n        onChange={(e) => onChange({ ...header, value: e.target.value })}\n        onBlur={onBlur}\n      />\n      <Button\n        type=\"button\"\n        aria-label=\"Remove header\"\n        variant=\"secondary\"\n        size=\"xs\"\n        onClick={(_e) => onRemove(header.id)}\n      >\n        <Icon name=\"trash-alt\" />\n      </Button>\n    </div>\n  );\n};\n\nCustomHeaderRow.displayName = 'CustomHeaderRow';\n\nexport class CustomHeadersSettings extends PureComponent<Props, State> {\n  state: State = {\n    headers: [],\n  };\n\n  constructor(props: Props) {\n    super(props);\n    const { jsonData, secureJsonData, secureJsonFields } = this.props.dataSourceConfig;\n    this.state = {\n      headers: Object.keys(jsonData)\n        .sort()\n        .filter((key) => key.startsWith('httpHeaderName'))\n        .map((key, index) => {\n          return {\n            id: uniqueId(),\n            name: jsonData[key],\n            value: secureJsonData !== undefined ? secureJsonData[key] : '',\n            configured: (secureJsonFields && secureJsonFields[`httpHeaderValue${index + 1}`]) || false,\n          };\n        }),\n    };\n  }\n\n  updateSettings = () => {\n    const { headers } = this.state;\n\n    // we remove every httpHeaderName* field\n    const newJsonData = Object.fromEntries(\n      Object.entries(this.props.dataSourceConfig.jsonData).filter(([key, val]) => !key.startsWith('httpHeaderName'))\n    );\n\n    // we remove every httpHeaderValue* field\n    const newSecureJsonData = Object.fromEntries(\n      Object.entries(this.props.dataSourceConfig.secureJsonData || {}).filter(\n        ([key, val]) => !key.startsWith('httpHeaderValue')\n      )\n    );\n\n    // then we add the current httpHeader-fields\n    for (const [index, header] of headers.entries()) {\n      newJsonData[`httpHeaderName${index + 1}`] = header.name;\n      if (!header.configured) {\n        newSecureJsonData[`httpHeaderValue${index + 1}`] = header.value;\n      }\n    }\n\n    this.props.onChange({\n      ...this.props.dataSourceConfig,\n      jsonData: newJsonData,\n      secureJsonData: newSecureJsonData,\n    });\n  };\n\n  onHeaderAdd = () => {\n    this.setState((prevState) => {\n      return { headers: [...prevState.headers, { id: uniqueId(), name: '', value: '', configured: false }] };\n    });\n  };\n\n  onHeaderChange = (headerIndex: number, value: CustomHeader) => {\n    this.setState(({ headers }) => {\n      return {\n        headers: headers.map((item, index) => {\n          if (headerIndex !== index) {\n            return item;\n          }\n          return { ...value };\n        }),\n      };\n    });\n  };\n\n  onHeaderReset = (headerId: string) => {\n    this.setState(({ headers }) => {\n      return {\n        headers: headers.map((h, i) => {\n          if (h.id !== headerId) {\n            return h;\n          }\n          return {\n            ...h,\n            value: '',\n            configured: false,\n          };\n        }),\n      };\n    });\n  };\n\n  onHeaderRemove = (headerId: string) => {\n    this.setState(\n      ({ headers }) => ({\n        headers: headers.filter((h) => h.id !== headerId),\n      }),\n      this.updateSettings\n    );\n  };\n\n  render() {\n    const { headers } = this.state;\n    return (\n      <div className={'gf-form-group'}>\n        <div className=\"gf-form\">\n          <h6>Custom HTTP Headers</h6>\n        </div>\n        <div>\n          {headers.map((header, i) => (\n            <CustomHeaderRow\n              key={header.id}\n              header={header}\n              onChange={(h) => {\n                this.onHeaderChange(i, h);\n              }}\n              onBlur={this.updateSettings}\n              onRemove={this.onHeaderRemove}\n              onReset={this.onHeaderReset}\n            />\n          ))}\n        </div>\n        <div className=\"gf-form\">\n          <Button\n            variant=\"secondary\"\n            icon=\"plus\"\n            type=\"button\"\n            onClick={(e) => {\n              this.onHeaderAdd();\n            }}\n          >\n            Add header\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomHeadersSettings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}