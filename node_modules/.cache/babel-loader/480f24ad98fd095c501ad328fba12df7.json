{"ast":null,"code":"import { toHex, sci, toHex0x, toPercent, toPercentUnit } from './arithmeticFormatters';\nimport { dateTimeAsIso, dateTimeAsIsoNoDateIfToday, dateTimeAsUS, dateTimeAsUSNoDateIfToday, getDateTimeAsLocalFormat, getDateTimeAsLocalFormatNoDateIfToday, dateTimeFromNow, toClockMilliseconds, toClockSeconds, toDays, toDurationInDaysHoursMinutesSeconds, toDurationInHoursMinutesSeconds, toDurationInMilliseconds, toDurationInSeconds, toHours, toMicroSeconds, toMilliSeconds, toMinutes, toNanoSeconds, toSeconds, toTimeTicks, dateTimeSystemFormatter } from './dateTimeFormatters';\nimport { binaryPrefix, currency, SIPrefix } from './symbolFormatters';\nimport { locale, scaledUnits, simpleCountUnit, toFixedUnit, stringFormater, booleanValueFormatter } from './valueFormats';\nexport const getCategories = () => [{\n  name: 'Misc',\n  formats: [{\n    name: 'Number',\n    id: 'none',\n    fn: toFixedUnit('')\n  }, {\n    name: 'String',\n    id: 'string',\n    fn: stringFormater\n  }, {\n    name: 'short',\n    id: 'short',\n    fn: scaledUnits(1000, ['', ' K', ' Mil', ' Bil', ' Tri', ' Quadr', ' Quint', ' Sext', ' Sept'])\n  }, {\n    name: 'Percent (0-100)',\n    id: 'percent',\n    fn: toPercent\n  }, {\n    name: 'Percent (0.0-1.0)',\n    id: 'percentunit',\n    fn: toPercentUnit\n  }, {\n    name: 'Humidity (%H)',\n    id: 'humidity',\n    fn: toFixedUnit('%H')\n  }, {\n    name: 'Decibel',\n    id: 'dB',\n    fn: toFixedUnit('dB')\n  }, {\n    name: 'Hexadecimal (0x)',\n    id: 'hex0x',\n    fn: toHex0x\n  }, {\n    name: 'Hexadecimal',\n    id: 'hex',\n    fn: toHex\n  }, {\n    name: 'Scientific notation',\n    id: 'sci',\n    fn: sci\n  }, {\n    name: 'Locale format',\n    id: 'locale',\n    fn: locale\n  }, {\n    name: 'Pixels',\n    id: 'pixel',\n    fn: toFixedUnit('px')\n  }]\n}, {\n  name: 'Acceleration',\n  formats: [{\n    name: 'Meters/sec²',\n    id: 'accMS2',\n    fn: toFixedUnit('m/sec²')\n  }, {\n    name: 'Feet/sec²',\n    id: 'accFS2',\n    fn: toFixedUnit('f/sec²')\n  }, {\n    name: 'G unit',\n    id: 'accG',\n    fn: toFixedUnit('g')\n  }]\n}, {\n  name: 'Angle',\n  formats: [{\n    name: 'Degrees (°)',\n    id: 'degree',\n    fn: toFixedUnit('°')\n  }, {\n    name: 'Radians',\n    id: 'radian',\n    fn: toFixedUnit('rad')\n  }, {\n    name: 'Gradian',\n    id: 'grad',\n    fn: toFixedUnit('grad')\n  }, {\n    name: 'Arc Minutes',\n    id: 'arcmin',\n    fn: toFixedUnit('arcmin')\n  }, {\n    name: 'Arc Seconds',\n    id: 'arcsec',\n    fn: toFixedUnit('arcsec')\n  }]\n}, {\n  name: 'Area',\n  formats: [{\n    name: 'Square Meters (m²)',\n    id: 'areaM2',\n    fn: toFixedUnit('m²')\n  }, {\n    name: 'Square Feet (ft²)',\n    id: 'areaF2',\n    fn: toFixedUnit('ft²')\n  }, {\n    name: 'Square Miles (mi²)',\n    id: 'areaMI2',\n    fn: toFixedUnit('mi²')\n  }]\n}, {\n  name: 'Computation',\n  formats: [{\n    name: 'FLOP/s',\n    id: 'flops',\n    fn: SIPrefix('FLOPS')\n  }, {\n    name: 'MFLOP/s',\n    id: 'mflops',\n    fn: SIPrefix('FLOPS', 2)\n  }, {\n    name: 'GFLOP/s',\n    id: 'gflops',\n    fn: SIPrefix('FLOPS', 3)\n  }, {\n    name: 'TFLOP/s',\n    id: 'tflops',\n    fn: SIPrefix('FLOPS', 4)\n  }, {\n    name: 'PFLOP/s',\n    id: 'pflops',\n    fn: SIPrefix('FLOPS', 5)\n  }, {\n    name: 'EFLOP/s',\n    id: 'eflops',\n    fn: SIPrefix('FLOPS', 6)\n  }, {\n    name: 'ZFLOP/s',\n    id: 'zflops',\n    fn: SIPrefix('FLOPS', 7)\n  }, {\n    name: 'YFLOP/s',\n    id: 'yflops',\n    fn: SIPrefix('FLOPS', 8)\n  }]\n}, {\n  name: 'Concentration',\n  formats: [{\n    name: 'parts-per-million (ppm)',\n    id: 'ppm',\n    fn: toFixedUnit('ppm')\n  }, {\n    name: 'parts-per-billion (ppb)',\n    id: 'conppb',\n    fn: toFixedUnit('ppb')\n  }, {\n    name: 'nanogram per cubic meter (ng/m³)',\n    id: 'conngm3',\n    fn: toFixedUnit('ng/m³')\n  }, {\n    name: 'nanogram per normal cubic meter (ng/Nm³)',\n    id: 'conngNm3',\n    fn: toFixedUnit('ng/Nm³')\n  }, {\n    name: 'microgram per cubic meter (μg/m³)',\n    id: 'conμgm3',\n    fn: toFixedUnit('μg/m³')\n  }, {\n    name: 'microgram per normal cubic meter (μg/Nm³)',\n    id: 'conμgNm3',\n    fn: toFixedUnit('μg/Nm³')\n  }, {\n    name: 'milligram per cubic meter (mg/m³)',\n    id: 'conmgm3',\n    fn: toFixedUnit('mg/m³')\n  }, {\n    name: 'milligram per normal cubic meter (mg/Nm³)',\n    id: 'conmgNm3',\n    fn: toFixedUnit('mg/Nm³')\n  }, {\n    name: 'gram per cubic meter (g/m³)',\n    id: 'congm3',\n    fn: toFixedUnit('g/m³')\n  }, {\n    name: 'gram per normal cubic meter (g/Nm³)',\n    id: 'congNm3',\n    fn: toFixedUnit('g/Nm³')\n  }, {\n    name: 'milligrams per decilitre (mg/dL)',\n    id: 'conmgdL',\n    fn: toFixedUnit('mg/dL')\n  }, {\n    name: 'millimoles per litre (mmol/L)',\n    id: 'conmmolL',\n    fn: toFixedUnit('mmol/L')\n  }]\n}, {\n  name: 'Currency',\n  formats: [{\n    name: 'Dollars ($)',\n    id: 'currencyUSD',\n    fn: currency('$')\n  }, {\n    name: 'Pounds (£)',\n    id: 'currencyGBP',\n    fn: currency('£')\n  }, {\n    name: 'Euro (€)',\n    id: 'currencyEUR',\n    fn: currency('€')\n  }, {\n    name: 'Yen (¥)',\n    id: 'currencyJPY',\n    fn: currency('¥')\n  }, {\n    name: 'Rubles (₽)',\n    id: 'currencyRUB',\n    fn: currency('₽')\n  }, {\n    name: 'Hryvnias (₴)',\n    id: 'currencyUAH',\n    fn: currency('₴')\n  }, {\n    name: 'Real (R$)',\n    id: 'currencyBRL',\n    fn: currency('R$')\n  }, {\n    name: 'Danish Krone (kr)',\n    id: 'currencyDKK',\n    fn: currency('kr', true)\n  }, {\n    name: 'Icelandic Króna (kr)',\n    id: 'currencyISK',\n    fn: currency('kr', true)\n  }, {\n    name: 'Norwegian Krone (kr)',\n    id: 'currencyNOK',\n    fn: currency('kr', true)\n  }, {\n    name: 'Swedish Krona (kr)',\n    id: 'currencySEK',\n    fn: currency('kr', true)\n  }, {\n    name: 'Czech koruna (czk)',\n    id: 'currencyCZK',\n    fn: currency('czk')\n  }, {\n    name: 'Swiss franc (CHF)',\n    id: 'currencyCHF',\n    fn: currency('CHF')\n  }, {\n    name: 'Polish Złoty (PLN)',\n    id: 'currencyPLN',\n    fn: currency('PLN')\n  }, {\n    name: 'Bitcoin (฿)',\n    id: 'currencyBTC',\n    fn: currency('฿')\n  }, {\n    name: 'Milli Bitcoin (฿)',\n    id: 'currencymBTC',\n    fn: currency('mBTC')\n  }, {\n    name: 'Micro Bitcoin (฿)',\n    id: 'currencyμBTC',\n    fn: currency('μBTC')\n  }, {\n    name: 'South African Rand (R)',\n    id: 'currencyZAR',\n    fn: currency('R')\n  }, {\n    name: 'Indian Rupee (₹)',\n    id: 'currencyINR',\n    fn: currency('₹')\n  }, {\n    name: 'South Korean Won (₩)',\n    id: 'currencyKRW',\n    fn: currency('₩')\n  }, {\n    name: 'Indonesian Rupiah (Rp)',\n    id: 'currencyIDR',\n    fn: currency('Rp')\n  }, {\n    name: 'Philippine Peso (PHP)',\n    id: 'currencyPHP',\n    fn: currency('PHP')\n  }, {\n    name: 'Vietnamese Dong (VND)',\n    id: 'currencyVND',\n    fn: currency('đ', true)\n  }]\n}, {\n  name: 'Data',\n  formats: [{\n    name: 'bytes(IEC)',\n    id: 'bytes',\n    fn: binaryPrefix('B')\n  }, {\n    name: 'bytes(SI)',\n    id: 'decbytes',\n    fn: SIPrefix('B')\n  }, {\n    name: 'bits(IEC)',\n    id: 'bits',\n    fn: binaryPrefix('b')\n  }, {\n    name: 'bits(SI)',\n    id: 'decbits',\n    fn: SIPrefix('b')\n  }, {\n    name: 'kibibytes',\n    id: 'kbytes',\n    fn: binaryPrefix('B', 1)\n  }, {\n    name: 'kilobytes',\n    id: 'deckbytes',\n    fn: SIPrefix('B', 1)\n  }, {\n    name: 'mebibytes',\n    id: 'mbytes',\n    fn: binaryPrefix('B', 2)\n  }, {\n    name: 'megabytes',\n    id: 'decmbytes',\n    fn: SIPrefix('B', 2)\n  }, {\n    name: 'gibibytes',\n    id: 'gbytes',\n    fn: binaryPrefix('B', 3)\n  }, {\n    name: 'gigabytes',\n    id: 'decgbytes',\n    fn: SIPrefix('B', 3)\n  }, {\n    name: 'tebibytes',\n    id: 'tbytes',\n    fn: binaryPrefix('B', 4)\n  }, {\n    name: 'terabytes',\n    id: 'dectbytes',\n    fn: SIPrefix('B', 4)\n  }, {\n    name: 'pebibytes',\n    id: 'pbytes',\n    fn: binaryPrefix('B', 5)\n  }, {\n    name: 'petabytes',\n    id: 'decpbytes',\n    fn: SIPrefix('B', 5)\n  }]\n}, {\n  name: 'Data rate',\n  formats: [{\n    name: 'packets/sec',\n    id: 'pps',\n    fn: SIPrefix('p/s')\n  }, {\n    name: 'bytes/sec(IEC)',\n    id: 'binBps',\n    fn: binaryPrefix('B/s')\n  }, {\n    name: 'bytes/sec(SI)',\n    id: 'Bps',\n    fn: SIPrefix('B/s')\n  }, {\n    name: 'bits/sec(IEC)',\n    id: 'binbps',\n    fn: binaryPrefix('b/s')\n  }, {\n    name: 'bits/sec(SI)',\n    id: 'bps',\n    fn: SIPrefix('b/s')\n  }, {\n    name: 'kibibytes/sec',\n    id: 'KiBs',\n    fn: binaryPrefix('B/s', 1)\n  }, {\n    name: 'kibibits/sec',\n    id: 'Kibits',\n    fn: binaryPrefix('b/s', 1)\n  }, {\n    name: 'kilobytes/sec',\n    id: 'KBs',\n    fn: SIPrefix('B/s', 1)\n  }, {\n    name: 'kilobits/sec',\n    id: 'Kbits',\n    fn: SIPrefix('b/s', 1)\n  }, {\n    name: 'mebibytes/sec',\n    id: 'MiBs',\n    fn: binaryPrefix('B/s', 2)\n  }, {\n    name: 'mebibits/sec',\n    id: 'Mibits',\n    fn: binaryPrefix('b/s', 2)\n  }, {\n    name: 'megabytes/sec',\n    id: 'MBs',\n    fn: SIPrefix('B/s', 2)\n  }, {\n    name: 'megabits/sec',\n    id: 'Mbits',\n    fn: SIPrefix('b/s', 2)\n  }, {\n    name: 'gibibytes/sec',\n    id: 'GiBs',\n    fn: binaryPrefix('B/s', 3)\n  }, {\n    name: 'gibibits/sec',\n    id: 'Gibits',\n    fn: binaryPrefix('b/s', 3)\n  }, {\n    name: 'gigabytes/sec',\n    id: 'GBs',\n    fn: SIPrefix('B/s', 3)\n  }, {\n    name: 'gigabits/sec',\n    id: 'Gbits',\n    fn: SIPrefix('b/s', 3)\n  }, {\n    name: 'tebibytes/sec',\n    id: 'TiBs',\n    fn: binaryPrefix('B/s', 4)\n  }, {\n    name: 'tebibits/sec',\n    id: 'Tibits',\n    fn: binaryPrefix('b/s', 4)\n  }, {\n    name: 'terabytes/sec',\n    id: 'TBs',\n    fn: SIPrefix('B/s', 4)\n  }, {\n    name: 'terabits/sec',\n    id: 'Tbits',\n    fn: SIPrefix('b/s', 4)\n  }, {\n    name: 'pebibytes/sec',\n    id: 'PiBs',\n    fn: binaryPrefix('B/s', 5)\n  }, {\n    name: 'pebibits/sec',\n    id: 'Pibits',\n    fn: binaryPrefix('b/s', 5)\n  }, {\n    name: 'petabytes/sec',\n    id: 'PBs',\n    fn: SIPrefix('B/s', 5)\n  }, {\n    name: 'petabits/sec',\n    id: 'Pbits',\n    fn: SIPrefix('b/s', 5)\n  }]\n}, {\n  name: 'Date & time',\n  formats: [{\n    name: 'Datetime ISO',\n    id: 'dateTimeAsIso',\n    fn: dateTimeAsIso\n  }, {\n    name: 'Datetime ISO (No date if today)',\n    id: 'dateTimeAsIsoNoDateIfToday',\n    fn: dateTimeAsIsoNoDateIfToday\n  }, {\n    name: 'Datetime US',\n    id: 'dateTimeAsUS',\n    fn: dateTimeAsUS\n  }, {\n    name: 'Datetime US (No date if today)',\n    id: 'dateTimeAsUSNoDateIfToday',\n    fn: dateTimeAsUSNoDateIfToday\n  }, {\n    name: 'Datetime local',\n    id: 'dateTimeAsLocal',\n    fn: getDateTimeAsLocalFormat()\n  }, {\n    name: 'Datetime local (No date if today)',\n    id: 'dateTimeAsLocalNoDateIfToday',\n    fn: getDateTimeAsLocalFormatNoDateIfToday()\n  }, {\n    name: 'Datetime default',\n    id: 'dateTimeAsSystem',\n    fn: dateTimeSystemFormatter\n  }, {\n    name: 'From Now',\n    id: 'dateTimeFromNow',\n    fn: dateTimeFromNow\n  }]\n}, {\n  name: 'Energy',\n  formats: [{\n    name: 'Watt (W)',\n    id: 'watt',\n    fn: SIPrefix('W')\n  }, {\n    name: 'Kilowatt (kW)',\n    id: 'kwatt',\n    fn: SIPrefix('W', 1)\n  }, {\n    name: 'Megawatt (MW)',\n    id: 'megwatt',\n    fn: SIPrefix('W', 2)\n  }, {\n    name: 'Gigawatt (GW)',\n    id: 'gwatt',\n    fn: SIPrefix('W', 3)\n  }, {\n    name: 'Milliwatt (mW)',\n    id: 'mwatt',\n    fn: SIPrefix('W', -1)\n  }, {\n    name: 'Watt per square meter (W/m²)',\n    id: 'Wm2',\n    fn: toFixedUnit('W/m²')\n  }, {\n    name: 'Volt-Ampere (VA)',\n    id: 'voltamp',\n    fn: SIPrefix('VA')\n  }, {\n    name: 'Kilovolt-Ampere (kVA)',\n    id: 'kvoltamp',\n    fn: SIPrefix('VA', 1)\n  }, {\n    name: 'Volt-Ampere reactive (VAr)',\n    id: 'voltampreact',\n    fn: SIPrefix('VAr')\n  }, {\n    name: 'Kilovolt-Ampere reactive (kVAr)',\n    id: 'kvoltampreact',\n    fn: SIPrefix('VAr', 1)\n  }, {\n    name: 'Watt-hour (Wh)',\n    id: 'watth',\n    fn: SIPrefix('Wh')\n  }, {\n    name: 'Watt-hour per Kilogram (Wh/kg)',\n    id: 'watthperkg',\n    fn: SIPrefix('Wh/kg')\n  }, {\n    name: 'Kilowatt-hour (kWh)',\n    id: 'kwatth',\n    fn: SIPrefix('Wh', 1)\n  }, {\n    name: 'Kilowatt-min (kWm)',\n    id: 'kwattm',\n    fn: SIPrefix('W-Min', 1)\n  }, {\n    name: 'Ampere-hour (Ah)',\n    id: 'amph',\n    fn: SIPrefix('Ah')\n  }, {\n    name: 'Kiloampere-hour (kAh)',\n    id: 'kamph',\n    fn: SIPrefix('Ah', 1)\n  }, {\n    name: 'Milliampere-hour (mAh)',\n    id: 'mamph',\n    fn: SIPrefix('Ah', -1)\n  }, {\n    name: 'Joule (J)',\n    id: 'joule',\n    fn: SIPrefix('J')\n  }, {\n    name: 'Electron volt (eV)',\n    id: 'ev',\n    fn: SIPrefix('eV')\n  }, {\n    name: 'Ampere (A)',\n    id: 'amp',\n    fn: SIPrefix('A')\n  }, {\n    name: 'Kiloampere (kA)',\n    id: 'kamp',\n    fn: SIPrefix('A', 1)\n  }, {\n    name: 'Milliampere (mA)',\n    id: 'mamp',\n    fn: SIPrefix('A', -1)\n  }, {\n    name: 'Volt (V)',\n    id: 'volt',\n    fn: SIPrefix('V')\n  }, {\n    name: 'Kilovolt (kV)',\n    id: 'kvolt',\n    fn: SIPrefix('V', 1)\n  }, {\n    name: 'Millivolt (mV)',\n    id: 'mvolt',\n    fn: SIPrefix('V', -1)\n  }, {\n    name: 'Decibel-milliwatt (dBm)',\n    id: 'dBm',\n    fn: SIPrefix('dBm')\n  }, {\n    name: 'Ohm (Ω)',\n    id: 'ohm',\n    fn: SIPrefix('Ω')\n  }, {\n    name: 'Kiloohm (kΩ)',\n    id: 'kohm',\n    fn: SIPrefix('Ω', 1)\n  }, {\n    name: 'Megaohm (MΩ)',\n    id: 'Mohm',\n    fn: SIPrefix('Ω', 2)\n  }, {\n    name: 'Farad (F)',\n    id: 'farad',\n    fn: SIPrefix('F')\n  }, {\n    name: 'Microfarad (µF)',\n    id: 'µfarad',\n    fn: SIPrefix('F', -2)\n  }, {\n    name: 'Nanofarad (nF)',\n    id: 'nfarad',\n    fn: SIPrefix('F', -3)\n  }, {\n    name: 'Picofarad (pF)',\n    id: 'pfarad',\n    fn: SIPrefix('F', -4)\n  }, {\n    name: 'Femtofarad (fF)',\n    id: 'ffarad',\n    fn: SIPrefix('F', -5)\n  }, {\n    name: 'Henry (H)',\n    id: 'henry',\n    fn: SIPrefix('H')\n  }, {\n    name: 'Millihenry (mH)',\n    id: 'mhenry',\n    fn: SIPrefix('H', -1)\n  }, {\n    name: 'Microhenry (µH)',\n    id: 'µhenry',\n    fn: SIPrefix('H', -2)\n  }, {\n    name: 'Lumens (Lm)',\n    id: 'lumens',\n    fn: SIPrefix('Lm')\n  }]\n}, {\n  name: 'Flow',\n  formats: [{\n    name: 'Gallons/min (gpm)',\n    id: 'flowgpm',\n    fn: toFixedUnit('gpm')\n  }, {\n    name: 'Cubic meters/sec (cms)',\n    id: 'flowcms',\n    fn: toFixedUnit('cms')\n  }, {\n    name: 'Cubic feet/sec (cfs)',\n    id: 'flowcfs',\n    fn: toFixedUnit('cfs')\n  }, {\n    name: 'Cubic feet/min (cfm)',\n    id: 'flowcfm',\n    fn: toFixedUnit('cfm')\n  }, {\n    name: 'Litre/hour',\n    id: 'litreh',\n    fn: toFixedUnit('L/h')\n  }, {\n    name: 'Litre/min (L/min)',\n    id: 'flowlpm',\n    fn: toFixedUnit('L/min')\n  }, {\n    name: 'milliLitre/min (mL/min)',\n    id: 'flowmlpm',\n    fn: toFixedUnit('mL/min')\n  }, {\n    name: 'Lux (lx)',\n    id: 'lux',\n    fn: toFixedUnit('lux')\n  }]\n}, {\n  name: 'Force',\n  formats: [{\n    name: 'Newton-meters (Nm)',\n    id: 'forceNm',\n    fn: SIPrefix('Nm')\n  }, {\n    name: 'Kilonewton-meters (kNm)',\n    id: 'forcekNm',\n    fn: SIPrefix('Nm', 1)\n  }, {\n    name: 'Newtons (N)',\n    id: 'forceN',\n    fn: SIPrefix('N')\n  }, {\n    name: 'Kilonewtons (kN)',\n    id: 'forcekN',\n    fn: SIPrefix('N', 1)\n  }]\n}, {\n  name: 'Hash rate',\n  formats: [{\n    name: 'hashes/sec',\n    id: 'Hs',\n    fn: SIPrefix('H/s')\n  }, {\n    name: 'kilohashes/sec',\n    id: 'KHs',\n    fn: SIPrefix('H/s', 1)\n  }, {\n    name: 'megahashes/sec',\n    id: 'MHs',\n    fn: SIPrefix('H/s', 2)\n  }, {\n    name: 'gigahashes/sec',\n    id: 'GHs',\n    fn: SIPrefix('H/s', 3)\n  }, {\n    name: 'terahashes/sec',\n    id: 'THs',\n    fn: SIPrefix('H/s', 4)\n  }, {\n    name: 'petahashes/sec',\n    id: 'PHs',\n    fn: SIPrefix('H/s', 5)\n  }, {\n    name: 'exahashes/sec',\n    id: 'EHs',\n    fn: SIPrefix('H/s', 6)\n  }]\n}, {\n  name: 'Mass',\n  formats: [{\n    name: 'milligram (mg)',\n    id: 'massmg',\n    fn: SIPrefix('g', -1)\n  }, {\n    name: 'gram (g)',\n    id: 'massg',\n    fn: SIPrefix('g')\n  }, {\n    name: 'pound (lb)',\n    id: 'masslb',\n    fn: toFixedUnit('lb')\n  }, {\n    name: 'kilogram (kg)',\n    id: 'masskg',\n    fn: SIPrefix('g', 1)\n  }, {\n    name: 'metric ton (t)',\n    id: 'masst',\n    fn: toFixedUnit('t')\n  }]\n}, {\n  name: 'Length',\n  formats: [{\n    name: 'millimeter (mm)',\n    id: 'lengthmm',\n    fn: SIPrefix('m', -1)\n  }, {\n    name: 'inch (in)',\n    id: 'lengthin',\n    fn: toFixedUnit('in')\n  }, {\n    name: 'feet (ft)',\n    id: 'lengthft',\n    fn: toFixedUnit('ft')\n  }, {\n    name: 'meter (m)',\n    id: 'lengthm',\n    fn: SIPrefix('m')\n  }, {\n    name: 'kilometer (km)',\n    id: 'lengthkm',\n    fn: SIPrefix('m', 1)\n  }, {\n    name: 'mile (mi)',\n    id: 'lengthmi',\n    fn: toFixedUnit('mi')\n  }]\n}, {\n  name: 'Pressure',\n  formats: [{\n    name: 'Millibars',\n    id: 'pressurembar',\n    fn: SIPrefix('bar', -1)\n  }, {\n    name: 'Bars',\n    id: 'pressurebar',\n    fn: SIPrefix('bar')\n  }, {\n    name: 'Kilobars',\n    id: 'pressurekbar',\n    fn: SIPrefix('bar', 1)\n  }, {\n    name: 'Pascals',\n    id: 'pressurepa',\n    fn: SIPrefix('Pa')\n  }, {\n    name: 'Hectopascals',\n    id: 'pressurehpa',\n    fn: toFixedUnit('hPa')\n  }, {\n    name: 'Kilopascals',\n    id: 'pressurekpa',\n    fn: toFixedUnit('kPa')\n  }, {\n    name: 'Inches of mercury',\n    id: 'pressurehg',\n    fn: toFixedUnit('\"Hg')\n  }, {\n    name: 'PSI',\n    id: 'pressurepsi',\n    fn: scaledUnits(1000, ['psi', 'ksi', 'Mpsi'])\n  }]\n}, {\n  name: 'Radiation',\n  formats: [{\n    name: 'Becquerel (Bq)',\n    id: 'radbq',\n    fn: SIPrefix('Bq')\n  }, {\n    name: 'curie (Ci)',\n    id: 'radci',\n    fn: SIPrefix('Ci')\n  }, {\n    name: 'Gray (Gy)',\n    id: 'radgy',\n    fn: SIPrefix('Gy')\n  }, {\n    name: 'rad',\n    id: 'radrad',\n    fn: SIPrefix('rad')\n  }, {\n    name: 'Sievert (Sv)',\n    id: 'radsv',\n    fn: SIPrefix('Sv')\n  }, {\n    name: 'milliSievert (mSv)',\n    id: 'radmsv',\n    fn: SIPrefix('Sv', -1)\n  }, {\n    name: 'microSievert (µSv)',\n    id: 'radusv',\n    fn: SIPrefix('Sv', -2)\n  }, {\n    name: 'rem',\n    id: 'radrem',\n    fn: SIPrefix('rem')\n  }, {\n    name: 'Exposure (C/kg)',\n    id: 'radexpckg',\n    fn: SIPrefix('C/kg')\n  }, {\n    name: 'roentgen (R)',\n    id: 'radr',\n    fn: SIPrefix('R')\n  }, {\n    name: 'Sievert/hour (Sv/h)',\n    id: 'radsvh',\n    fn: SIPrefix('Sv/h')\n  }, {\n    name: 'milliSievert/hour (mSv/h)',\n    id: 'radmsvh',\n    fn: SIPrefix('Sv/h', -1)\n  }, {\n    name: 'microSievert/hour (µSv/h)',\n    id: 'radusvh',\n    fn: SIPrefix('Sv/h', -2)\n  }]\n}, {\n  name: 'Rotational Speed',\n  formats: [{\n    name: 'Revolutions per minute (rpm)',\n    id: 'rotrpm',\n    fn: toFixedUnit('rpm')\n  }, {\n    name: 'Hertz (Hz)',\n    id: 'rothz',\n    fn: SIPrefix('Hz')\n  }, {\n    name: 'Radians per second (rad/s)',\n    id: 'rotrads',\n    fn: toFixedUnit('rad/s')\n  }, {\n    name: 'Degrees per second (°/s)',\n    id: 'rotdegs',\n    fn: toFixedUnit('°/s')\n  }]\n}, {\n  name: 'Temperature',\n  formats: [{\n    name: 'Celsius (°C)',\n    id: 'celsius',\n    fn: toFixedUnit('°C')\n  }, {\n    name: 'Fahrenheit (°F)',\n    id: 'fahrenheit',\n    fn: toFixedUnit('°F')\n  }, {\n    name: 'Kelvin (K)',\n    id: 'kelvin',\n    fn: toFixedUnit('K')\n  }]\n}, {\n  name: 'Time',\n  formats: [{\n    name: 'Hertz (1/s)',\n    id: 'hertz',\n    fn: SIPrefix('Hz')\n  }, {\n    name: 'nanoseconds (ns)',\n    id: 'ns',\n    fn: toNanoSeconds\n  }, {\n    name: 'microseconds (µs)',\n    id: 'µs',\n    fn: toMicroSeconds\n  }, {\n    name: 'milliseconds (ms)',\n    id: 'ms',\n    fn: toMilliSeconds\n  }, {\n    name: 'seconds (s)',\n    id: 's',\n    fn: toSeconds\n  }, {\n    name: 'minutes (m)',\n    id: 'm',\n    fn: toMinutes\n  }, {\n    name: 'hours (h)',\n    id: 'h',\n    fn: toHours\n  }, {\n    name: 'days (d)',\n    id: 'd',\n    fn: toDays\n  }, {\n    name: 'duration (ms)',\n    id: 'dtdurationms',\n    fn: toDurationInMilliseconds\n  }, {\n    name: 'duration (s)',\n    id: 'dtdurations',\n    fn: toDurationInSeconds\n  }, {\n    name: 'duration (hh:mm:ss)',\n    id: 'dthms',\n    fn: toDurationInHoursMinutesSeconds\n  }, {\n    name: 'duration (d hh:mm:ss)',\n    id: 'dtdhms',\n    fn: toDurationInDaysHoursMinutesSeconds\n  }, {\n    name: 'Timeticks (s/100)',\n    id: 'timeticks',\n    fn: toTimeTicks\n  }, {\n    name: 'clock (ms)',\n    id: 'clockms',\n    fn: toClockMilliseconds\n  }, {\n    name: 'clock (s)',\n    id: 'clocks',\n    fn: toClockSeconds\n  }]\n}, {\n  name: 'Throughput',\n  formats: [{\n    name: 'counts/sec (cps)',\n    id: 'cps',\n    fn: simpleCountUnit('c/s')\n  }, {\n    name: 'ops/sec (ops)',\n    id: 'ops',\n    fn: simpleCountUnit('ops/s')\n  }, {\n    name: 'requests/sec (rps)',\n    id: 'reqps',\n    fn: simpleCountUnit('req/s')\n  }, {\n    name: 'reads/sec (rps)',\n    id: 'rps',\n    fn: simpleCountUnit('rd/s')\n  }, {\n    name: 'writes/sec (wps)',\n    id: 'wps',\n    fn: simpleCountUnit('wr/s')\n  }, {\n    name: 'I/O ops/sec (iops)',\n    id: 'iops',\n    fn: simpleCountUnit('io/s')\n  }, {\n    name: 'counts/min (cpm)',\n    id: 'cpm',\n    fn: simpleCountUnit('c/m')\n  }, {\n    name: 'ops/min (opm)',\n    id: 'opm',\n    fn: simpleCountUnit('ops/m')\n  }, {\n    name: 'reads/min (rpm)',\n    id: 'rpm',\n    fn: simpleCountUnit('rd/m')\n  }, {\n    name: 'writes/min (wpm)',\n    id: 'wpm',\n    fn: simpleCountUnit('wr/m')\n  }]\n}, {\n  name: 'Velocity',\n  formats: [{\n    name: 'meters/second (m/s)',\n    id: 'velocityms',\n    fn: toFixedUnit('m/s')\n  }, {\n    name: 'kilometers/hour (km/h)',\n    id: 'velocitykmh',\n    fn: toFixedUnit('km/h')\n  }, {\n    name: 'miles/hour (mph)',\n    id: 'velocitymph',\n    fn: toFixedUnit('mph')\n  }, {\n    name: 'knot (kn)',\n    id: 'velocityknot',\n    fn: toFixedUnit('kn')\n  }]\n}, {\n  name: 'Volume',\n  formats: [{\n    name: 'millilitre (mL)',\n    id: 'mlitre',\n    fn: SIPrefix('L', -1)\n  }, {\n    name: 'litre (L)',\n    id: 'litre',\n    fn: SIPrefix('L')\n  }, {\n    name: 'cubic meter',\n    id: 'm3',\n    fn: toFixedUnit('m³')\n  }, {\n    name: 'Normal cubic meter',\n    id: 'Nm3',\n    fn: toFixedUnit('Nm³')\n  }, {\n    name: 'cubic decimeter',\n    id: 'dm3',\n    fn: toFixedUnit('dm³')\n  }, {\n    name: 'gallons',\n    id: 'gallons',\n    fn: toFixedUnit('gal')\n  }]\n}, {\n  name: 'Boolean',\n  formats: [{\n    name: 'True / False',\n    id: 'bool',\n    fn: booleanValueFormatter('True', 'False')\n  }, {\n    name: 'Yes / No',\n    id: 'bool_yes_no',\n    fn: booleanValueFormatter('Yes', 'No')\n  }, {\n    name: 'On / Off',\n    id: 'bool_on_off',\n    fn: booleanValueFormatter('On', 'Off')\n  }]\n}];","map":{"version":3,"names":["toHex","sci","toHex0x","toPercent","toPercentUnit","dateTimeAsIso","dateTimeAsIsoNoDateIfToday","dateTimeAsUS","dateTimeAsUSNoDateIfToday","getDateTimeAsLocalFormat","getDateTimeAsLocalFormatNoDateIfToday","dateTimeFromNow","toClockMilliseconds","toClockSeconds","toDays","toDurationInDaysHoursMinutesSeconds","toDurationInHoursMinutesSeconds","toDurationInMilliseconds","toDurationInSeconds","toHours","toMicroSeconds","toMilliSeconds","toMinutes","toNanoSeconds","toSeconds","toTimeTicks","dateTimeSystemFormatter","binaryPrefix","currency","SIPrefix","locale","scaledUnits","simpleCountUnit","toFixedUnit","stringFormater","booleanValueFormatter","getCategories","name","formats","id","fn"],"sources":["/home/soula/grafana/packages/grafana-data/src/valueFormats/categories.ts"],"sourcesContent":["import { toHex, sci, toHex0x, toPercent, toPercentUnit } from './arithmeticFormatters';\nimport {\n  dateTimeAsIso,\n  dateTimeAsIsoNoDateIfToday,\n  dateTimeAsUS,\n  dateTimeAsUSNoDateIfToday,\n  getDateTimeAsLocalFormat,\n  getDateTimeAsLocalFormatNoDateIfToday,\n  dateTimeFromNow,\n  toClockMilliseconds,\n  toClockSeconds,\n  toDays,\n  toDurationInDaysHoursMinutesSeconds,\n  toDurationInHoursMinutesSeconds,\n  toDurationInMilliseconds,\n  toDurationInSeconds,\n  toHours,\n  toMicroSeconds,\n  toMilliSeconds,\n  toMinutes,\n  toNanoSeconds,\n  toSeconds,\n  toTimeTicks,\n  dateTimeSystemFormatter,\n} from './dateTimeFormatters';\nimport { binaryPrefix, currency, SIPrefix } from './symbolFormatters';\nimport {\n  locale,\n  scaledUnits,\n  simpleCountUnit,\n  toFixedUnit,\n  ValueFormatCategory,\n  stringFormater,\n  booleanValueFormatter,\n} from './valueFormats';\n\nexport const getCategories = (): ValueFormatCategory[] => [\n  {\n    name: 'Misc',\n    formats: [\n      { name: 'Number', id: 'none', fn: toFixedUnit('') },\n      { name: 'String', id: 'string', fn: stringFormater },\n      {\n        name: 'short',\n        id: 'short',\n        fn: scaledUnits(1000, ['', ' K', ' Mil', ' Bil', ' Tri', ' Quadr', ' Quint', ' Sext', ' Sept']),\n      },\n      { name: 'Percent (0-100)', id: 'percent', fn: toPercent },\n      { name: 'Percent (0.0-1.0)', id: 'percentunit', fn: toPercentUnit },\n      { name: 'Humidity (%H)', id: 'humidity', fn: toFixedUnit('%H') },\n      { name: 'Decibel', id: 'dB', fn: toFixedUnit('dB') },\n      { name: 'Hexadecimal (0x)', id: 'hex0x', fn: toHex0x },\n      { name: 'Hexadecimal', id: 'hex', fn: toHex },\n      { name: 'Scientific notation', id: 'sci', fn: sci },\n      { name: 'Locale format', id: 'locale', fn: locale },\n      { name: 'Pixels', id: 'pixel', fn: toFixedUnit('px') },\n    ],\n  },\n  {\n    name: 'Acceleration',\n    formats: [\n      { name: 'Meters/sec²', id: 'accMS2', fn: toFixedUnit('m/sec²') },\n      { name: 'Feet/sec²', id: 'accFS2', fn: toFixedUnit('f/sec²') },\n      { name: 'G unit', id: 'accG', fn: toFixedUnit('g') },\n    ],\n  },\n  {\n    name: 'Angle',\n    formats: [\n      { name: 'Degrees (°)', id: 'degree', fn: toFixedUnit('°') },\n      { name: 'Radians', id: 'radian', fn: toFixedUnit('rad') },\n      { name: 'Gradian', id: 'grad', fn: toFixedUnit('grad') },\n      { name: 'Arc Minutes', id: 'arcmin', fn: toFixedUnit('arcmin') },\n      { name: 'Arc Seconds', id: 'arcsec', fn: toFixedUnit('arcsec') },\n    ],\n  },\n  {\n    name: 'Area',\n    formats: [\n      { name: 'Square Meters (m²)', id: 'areaM2', fn: toFixedUnit('m²') },\n      { name: 'Square Feet (ft²)', id: 'areaF2', fn: toFixedUnit('ft²') },\n      { name: 'Square Miles (mi²)', id: 'areaMI2', fn: toFixedUnit('mi²') },\n    ],\n  },\n  {\n    name: 'Computation',\n    formats: [\n      { name: 'FLOP/s', id: 'flops', fn: SIPrefix('FLOPS') },\n      { name: 'MFLOP/s', id: 'mflops', fn: SIPrefix('FLOPS', 2) },\n      { name: 'GFLOP/s', id: 'gflops', fn: SIPrefix('FLOPS', 3) },\n      { name: 'TFLOP/s', id: 'tflops', fn: SIPrefix('FLOPS', 4) },\n      { name: 'PFLOP/s', id: 'pflops', fn: SIPrefix('FLOPS', 5) },\n      { name: 'EFLOP/s', id: 'eflops', fn: SIPrefix('FLOPS', 6) },\n      { name: 'ZFLOP/s', id: 'zflops', fn: SIPrefix('FLOPS', 7) },\n      { name: 'YFLOP/s', id: 'yflops', fn: SIPrefix('FLOPS', 8) },\n    ],\n  },\n  {\n    name: 'Concentration',\n    formats: [\n      { name: 'parts-per-million (ppm)', id: 'ppm', fn: toFixedUnit('ppm') },\n      { name: 'parts-per-billion (ppb)', id: 'conppb', fn: toFixedUnit('ppb') },\n      { name: 'nanogram per cubic meter (ng/m³)', id: 'conngm3', fn: toFixedUnit('ng/m³') },\n      { name: 'nanogram per normal cubic meter (ng/Nm³)', id: 'conngNm3', fn: toFixedUnit('ng/Nm³') },\n      { name: 'microgram per cubic meter (μg/m³)', id: 'conμgm3', fn: toFixedUnit('μg/m³') },\n      { name: 'microgram per normal cubic meter (μg/Nm³)', id: 'conμgNm3', fn: toFixedUnit('μg/Nm³') },\n      { name: 'milligram per cubic meter (mg/m³)', id: 'conmgm3', fn: toFixedUnit('mg/m³') },\n      { name: 'milligram per normal cubic meter (mg/Nm³)', id: 'conmgNm3', fn: toFixedUnit('mg/Nm³') },\n      { name: 'gram per cubic meter (g/m³)', id: 'congm3', fn: toFixedUnit('g/m³') },\n      { name: 'gram per normal cubic meter (g/Nm³)', id: 'congNm3', fn: toFixedUnit('g/Nm³') },\n      { name: 'milligrams per decilitre (mg/dL)', id: 'conmgdL', fn: toFixedUnit('mg/dL') },\n      { name: 'millimoles per litre (mmol/L)', id: 'conmmolL', fn: toFixedUnit('mmol/L') },\n    ],\n  },\n  {\n    name: 'Currency',\n    formats: [\n      { name: 'Dollars ($)', id: 'currencyUSD', fn: currency('$') },\n      { name: 'Pounds (£)', id: 'currencyGBP', fn: currency('£') },\n      { name: 'Euro (€)', id: 'currencyEUR', fn: currency('€') },\n      { name: 'Yen (¥)', id: 'currencyJPY', fn: currency('¥') },\n      { name: 'Rubles (₽)', id: 'currencyRUB', fn: currency('₽') },\n      { name: 'Hryvnias (₴)', id: 'currencyUAH', fn: currency('₴') },\n      { name: 'Real (R$)', id: 'currencyBRL', fn: currency('R$') },\n      { name: 'Danish Krone (kr)', id: 'currencyDKK', fn: currency('kr', true) },\n      { name: 'Icelandic Króna (kr)', id: 'currencyISK', fn: currency('kr', true) },\n      { name: 'Norwegian Krone (kr)', id: 'currencyNOK', fn: currency('kr', true) },\n      { name: 'Swedish Krona (kr)', id: 'currencySEK', fn: currency('kr', true) },\n      { name: 'Czech koruna (czk)', id: 'currencyCZK', fn: currency('czk') },\n      { name: 'Swiss franc (CHF)', id: 'currencyCHF', fn: currency('CHF') },\n      { name: 'Polish Złoty (PLN)', id: 'currencyPLN', fn: currency('PLN') },\n      { name: 'Bitcoin (฿)', id: 'currencyBTC', fn: currency('฿') },\n      { name: 'Milli Bitcoin (฿)', id: 'currencymBTC', fn: currency('mBTC') },\n      { name: 'Micro Bitcoin (฿)', id: 'currencyμBTC', fn: currency('μBTC') },\n      { name: 'South African Rand (R)', id: 'currencyZAR', fn: currency('R') },\n      { name: 'Indian Rupee (₹)', id: 'currencyINR', fn: currency('₹') },\n      { name: 'South Korean Won (₩)', id: 'currencyKRW', fn: currency('₩') },\n      { name: 'Indonesian Rupiah (Rp)', id: 'currencyIDR', fn: currency('Rp') },\n      { name: 'Philippine Peso (PHP)', id: 'currencyPHP', fn: currency('PHP') },\n      { name: 'Vietnamese Dong (VND)', id: 'currencyVND', fn: currency('đ', true) },\n    ],\n  },\n  {\n    name: 'Data',\n    formats: [\n      { name: 'bytes(IEC)', id: 'bytes', fn: binaryPrefix('B') },\n      { name: 'bytes(SI)', id: 'decbytes', fn: SIPrefix('B') },\n      { name: 'bits(IEC)', id: 'bits', fn: binaryPrefix('b') },\n      { name: 'bits(SI)', id: 'decbits', fn: SIPrefix('b') },\n      { name: 'kibibytes', id: 'kbytes', fn: binaryPrefix('B', 1) },\n      { name: 'kilobytes', id: 'deckbytes', fn: SIPrefix('B', 1) },\n      { name: 'mebibytes', id: 'mbytes', fn: binaryPrefix('B', 2) },\n      { name: 'megabytes', id: 'decmbytes', fn: SIPrefix('B', 2) },\n      { name: 'gibibytes', id: 'gbytes', fn: binaryPrefix('B', 3) },\n      { name: 'gigabytes', id: 'decgbytes', fn: SIPrefix('B', 3) },\n      { name: 'tebibytes', id: 'tbytes', fn: binaryPrefix('B', 4) },\n      { name: 'terabytes', id: 'dectbytes', fn: SIPrefix('B', 4) },\n      { name: 'pebibytes', id: 'pbytes', fn: binaryPrefix('B', 5) },\n      { name: 'petabytes', id: 'decpbytes', fn: SIPrefix('B', 5) },\n    ],\n  },\n  {\n    name: 'Data rate',\n    formats: [\n      { name: 'packets/sec', id: 'pps', fn: SIPrefix('p/s') },\n      { name: 'bytes/sec(IEC)', id: 'binBps', fn: binaryPrefix('B/s') },\n      { name: 'bytes/sec(SI)', id: 'Bps', fn: SIPrefix('B/s') },\n      { name: 'bits/sec(IEC)', id: 'binbps', fn: binaryPrefix('b/s') },\n      { name: 'bits/sec(SI)', id: 'bps', fn: SIPrefix('b/s') },\n      { name: 'kibibytes/sec', id: 'KiBs', fn: binaryPrefix('B/s', 1) },\n      { name: 'kibibits/sec', id: 'Kibits', fn: binaryPrefix('b/s', 1) },\n      { name: 'kilobytes/sec', id: 'KBs', fn: SIPrefix('B/s', 1) },\n      { name: 'kilobits/sec', id: 'Kbits', fn: SIPrefix('b/s', 1) },\n      { name: 'mebibytes/sec', id: 'MiBs', fn: binaryPrefix('B/s', 2) },\n      { name: 'mebibits/sec', id: 'Mibits', fn: binaryPrefix('b/s', 2) },\n      { name: 'megabytes/sec', id: 'MBs', fn: SIPrefix('B/s', 2) },\n      { name: 'megabits/sec', id: 'Mbits', fn: SIPrefix('b/s', 2) },\n      { name: 'gibibytes/sec', id: 'GiBs', fn: binaryPrefix('B/s', 3) },\n      { name: 'gibibits/sec', id: 'Gibits', fn: binaryPrefix('b/s', 3) },\n      { name: 'gigabytes/sec', id: 'GBs', fn: SIPrefix('B/s', 3) },\n      { name: 'gigabits/sec', id: 'Gbits', fn: SIPrefix('b/s', 3) },\n      { name: 'tebibytes/sec', id: 'TiBs', fn: binaryPrefix('B/s', 4) },\n      { name: 'tebibits/sec', id: 'Tibits', fn: binaryPrefix('b/s', 4) },\n      { name: 'terabytes/sec', id: 'TBs', fn: SIPrefix('B/s', 4) },\n      { name: 'terabits/sec', id: 'Tbits', fn: SIPrefix('b/s', 4) },\n      { name: 'pebibytes/sec', id: 'PiBs', fn: binaryPrefix('B/s', 5) },\n      { name: 'pebibits/sec', id: 'Pibits', fn: binaryPrefix('b/s', 5) },\n      { name: 'petabytes/sec', id: 'PBs', fn: SIPrefix('B/s', 5) },\n      { name: 'petabits/sec', id: 'Pbits', fn: SIPrefix('b/s', 5) },\n    ],\n  },\n  {\n    name: 'Date & time',\n    formats: [\n      { name: 'Datetime ISO', id: 'dateTimeAsIso', fn: dateTimeAsIso },\n      { name: 'Datetime ISO (No date if today)', id: 'dateTimeAsIsoNoDateIfToday', fn: dateTimeAsIsoNoDateIfToday },\n      { name: 'Datetime US', id: 'dateTimeAsUS', fn: dateTimeAsUS },\n      { name: 'Datetime US (No date if today)', id: 'dateTimeAsUSNoDateIfToday', fn: dateTimeAsUSNoDateIfToday },\n      { name: 'Datetime local', id: 'dateTimeAsLocal', fn: getDateTimeAsLocalFormat() },\n      {\n        name: 'Datetime local (No date if today)',\n        id: 'dateTimeAsLocalNoDateIfToday',\n        fn: getDateTimeAsLocalFormatNoDateIfToday(),\n      },\n      { name: 'Datetime default', id: 'dateTimeAsSystem', fn: dateTimeSystemFormatter },\n      { name: 'From Now', id: 'dateTimeFromNow', fn: dateTimeFromNow },\n    ],\n  },\n  {\n    name: 'Energy',\n    formats: [\n      { name: 'Watt (W)', id: 'watt', fn: SIPrefix('W') },\n      { name: 'Kilowatt (kW)', id: 'kwatt', fn: SIPrefix('W', 1) },\n      { name: 'Megawatt (MW)', id: 'megwatt', fn: SIPrefix('W', 2) },\n      { name: 'Gigawatt (GW)', id: 'gwatt', fn: SIPrefix('W', 3) },\n      { name: 'Milliwatt (mW)', id: 'mwatt', fn: SIPrefix('W', -1) },\n      { name: 'Watt per square meter (W/m²)', id: 'Wm2', fn: toFixedUnit('W/m²') },\n      { name: 'Volt-Ampere (VA)', id: 'voltamp', fn: SIPrefix('VA') },\n      { name: 'Kilovolt-Ampere (kVA)', id: 'kvoltamp', fn: SIPrefix('VA', 1) },\n      { name: 'Volt-Ampere reactive (VAr)', id: 'voltampreact', fn: SIPrefix('VAr') },\n      { name: 'Kilovolt-Ampere reactive (kVAr)', id: 'kvoltampreact', fn: SIPrefix('VAr', 1) },\n      { name: 'Watt-hour (Wh)', id: 'watth', fn: SIPrefix('Wh') },\n      { name: 'Watt-hour per Kilogram (Wh/kg)', id: 'watthperkg', fn: SIPrefix('Wh/kg') },\n      { name: 'Kilowatt-hour (kWh)', id: 'kwatth', fn: SIPrefix('Wh', 1) },\n      { name: 'Kilowatt-min (kWm)', id: 'kwattm', fn: SIPrefix('W-Min', 1) },\n      { name: 'Ampere-hour (Ah)', id: 'amph', fn: SIPrefix('Ah') },\n      { name: 'Kiloampere-hour (kAh)', id: 'kamph', fn: SIPrefix('Ah', 1) },\n      { name: 'Milliampere-hour (mAh)', id: 'mamph', fn: SIPrefix('Ah', -1) },\n      { name: 'Joule (J)', id: 'joule', fn: SIPrefix('J') },\n      { name: 'Electron volt (eV)', id: 'ev', fn: SIPrefix('eV') },\n      { name: 'Ampere (A)', id: 'amp', fn: SIPrefix('A') },\n      { name: 'Kiloampere (kA)', id: 'kamp', fn: SIPrefix('A', 1) },\n      { name: 'Milliampere (mA)', id: 'mamp', fn: SIPrefix('A', -1) },\n      { name: 'Volt (V)', id: 'volt', fn: SIPrefix('V') },\n      { name: 'Kilovolt (kV)', id: 'kvolt', fn: SIPrefix('V', 1) },\n      { name: 'Millivolt (mV)', id: 'mvolt', fn: SIPrefix('V', -1) },\n      { name: 'Decibel-milliwatt (dBm)', id: 'dBm', fn: SIPrefix('dBm') },\n      { name: 'Ohm (Ω)', id: 'ohm', fn: SIPrefix('Ω') },\n      { name: 'Kiloohm (kΩ)', id: 'kohm', fn: SIPrefix('Ω', 1) },\n      { name: 'Megaohm (MΩ)', id: 'Mohm', fn: SIPrefix('Ω', 2) },\n      { name: 'Farad (F)', id: 'farad', fn: SIPrefix('F') },\n      { name: 'Microfarad (µF)', id: 'µfarad', fn: SIPrefix('F', -2) },\n      { name: 'Nanofarad (nF)', id: 'nfarad', fn: SIPrefix('F', -3) },\n      { name: 'Picofarad (pF)', id: 'pfarad', fn: SIPrefix('F', -4) },\n      { name: 'Femtofarad (fF)', id: 'ffarad', fn: SIPrefix('F', -5) },\n      { name: 'Henry (H)', id: 'henry', fn: SIPrefix('H') },\n      { name: 'Millihenry (mH)', id: 'mhenry', fn: SIPrefix('H', -1) },\n      { name: 'Microhenry (µH)', id: 'µhenry', fn: SIPrefix('H', -2) },\n      { name: 'Lumens (Lm)', id: 'lumens', fn: SIPrefix('Lm') },\n    ],\n  },\n  {\n    name: 'Flow',\n    formats: [\n      { name: 'Gallons/min (gpm)', id: 'flowgpm', fn: toFixedUnit('gpm') },\n      { name: 'Cubic meters/sec (cms)', id: 'flowcms', fn: toFixedUnit('cms') },\n      { name: 'Cubic feet/sec (cfs)', id: 'flowcfs', fn: toFixedUnit('cfs') },\n      { name: 'Cubic feet/min (cfm)', id: 'flowcfm', fn: toFixedUnit('cfm') },\n      { name: 'Litre/hour', id: 'litreh', fn: toFixedUnit('L/h') },\n      { name: 'Litre/min (L/min)', id: 'flowlpm', fn: toFixedUnit('L/min') },\n      { name: 'milliLitre/min (mL/min)', id: 'flowmlpm', fn: toFixedUnit('mL/min') },\n      { name: 'Lux (lx)', id: 'lux', fn: toFixedUnit('lux') },\n    ],\n  },\n  {\n    name: 'Force',\n    formats: [\n      { name: 'Newton-meters (Nm)', id: 'forceNm', fn: SIPrefix('Nm') },\n      { name: 'Kilonewton-meters (kNm)', id: 'forcekNm', fn: SIPrefix('Nm', 1) },\n      { name: 'Newtons (N)', id: 'forceN', fn: SIPrefix('N') },\n      { name: 'Kilonewtons (kN)', id: 'forcekN', fn: SIPrefix('N', 1) },\n    ],\n  },\n  {\n    name: 'Hash rate',\n    formats: [\n      { name: 'hashes/sec', id: 'Hs', fn: SIPrefix('H/s') },\n      { name: 'kilohashes/sec', id: 'KHs', fn: SIPrefix('H/s', 1) },\n      { name: 'megahashes/sec', id: 'MHs', fn: SIPrefix('H/s', 2) },\n      { name: 'gigahashes/sec', id: 'GHs', fn: SIPrefix('H/s', 3) },\n      { name: 'terahashes/sec', id: 'THs', fn: SIPrefix('H/s', 4) },\n      { name: 'petahashes/sec', id: 'PHs', fn: SIPrefix('H/s', 5) },\n      { name: 'exahashes/sec', id: 'EHs', fn: SIPrefix('H/s', 6) },\n    ],\n  },\n  {\n    name: 'Mass',\n    formats: [\n      { name: 'milligram (mg)', id: 'massmg', fn: SIPrefix('g', -1) },\n      { name: 'gram (g)', id: 'massg', fn: SIPrefix('g') },\n      { name: 'pound (lb)', id: 'masslb', fn: toFixedUnit('lb') },\n      { name: 'kilogram (kg)', id: 'masskg', fn: SIPrefix('g', 1) },\n      { name: 'metric ton (t)', id: 'masst', fn: toFixedUnit('t') },\n    ],\n  },\n  {\n    name: 'Length',\n    formats: [\n      { name: 'millimeter (mm)', id: 'lengthmm', fn: SIPrefix('m', -1) },\n      { name: 'inch (in)', id: 'lengthin', fn: toFixedUnit('in') },\n      { name: 'feet (ft)', id: 'lengthft', fn: toFixedUnit('ft') },\n      { name: 'meter (m)', id: 'lengthm', fn: SIPrefix('m') },\n      { name: 'kilometer (km)', id: 'lengthkm', fn: SIPrefix('m', 1) },\n      { name: 'mile (mi)', id: 'lengthmi', fn: toFixedUnit('mi') },\n    ],\n  },\n  {\n    name: 'Pressure',\n    formats: [\n      { name: 'Millibars', id: 'pressurembar', fn: SIPrefix('bar', -1) },\n      { name: 'Bars', id: 'pressurebar', fn: SIPrefix('bar') },\n      { name: 'Kilobars', id: 'pressurekbar', fn: SIPrefix('bar', 1) },\n      { name: 'Pascals', id: 'pressurepa', fn: SIPrefix('Pa') },\n      { name: 'Hectopascals', id: 'pressurehpa', fn: toFixedUnit('hPa') },\n      { name: 'Kilopascals', id: 'pressurekpa', fn: toFixedUnit('kPa') },\n      { name: 'Inches of mercury', id: 'pressurehg', fn: toFixedUnit('\"Hg') },\n      { name: 'PSI', id: 'pressurepsi', fn: scaledUnits(1000, ['psi', 'ksi', 'Mpsi']) },\n    ],\n  },\n  {\n    name: 'Radiation',\n    formats: [\n      { name: 'Becquerel (Bq)', id: 'radbq', fn: SIPrefix('Bq') },\n      { name: 'curie (Ci)', id: 'radci', fn: SIPrefix('Ci') },\n      { name: 'Gray (Gy)', id: 'radgy', fn: SIPrefix('Gy') },\n      { name: 'rad', id: 'radrad', fn: SIPrefix('rad') },\n      { name: 'Sievert (Sv)', id: 'radsv', fn: SIPrefix('Sv') },\n      { name: 'milliSievert (mSv)', id: 'radmsv', fn: SIPrefix('Sv', -1) },\n      { name: 'microSievert (µSv)', id: 'radusv', fn: SIPrefix('Sv', -2) },\n      { name: 'rem', id: 'radrem', fn: SIPrefix('rem') },\n      { name: 'Exposure (C/kg)', id: 'radexpckg', fn: SIPrefix('C/kg') },\n      { name: 'roentgen (R)', id: 'radr', fn: SIPrefix('R') },\n      { name: 'Sievert/hour (Sv/h)', id: 'radsvh', fn: SIPrefix('Sv/h') },\n      { name: 'milliSievert/hour (mSv/h)', id: 'radmsvh', fn: SIPrefix('Sv/h', -1) },\n      { name: 'microSievert/hour (µSv/h)', id: 'radusvh', fn: SIPrefix('Sv/h', -2) },\n    ],\n  },\n  {\n    name: 'Rotational Speed',\n    formats: [\n      { name: 'Revolutions per minute (rpm)', id: 'rotrpm', fn: toFixedUnit('rpm') },\n      { name: 'Hertz (Hz)', id: 'rothz', fn: SIPrefix('Hz') },\n      { name: 'Radians per second (rad/s)', id: 'rotrads', fn: toFixedUnit('rad/s') },\n      { name: 'Degrees per second (°/s)', id: 'rotdegs', fn: toFixedUnit('°/s') },\n    ],\n  },\n  {\n    name: 'Temperature',\n    formats: [\n      { name: 'Celsius (°C)', id: 'celsius', fn: toFixedUnit('°C') },\n      { name: 'Fahrenheit (°F)', id: 'fahrenheit', fn: toFixedUnit('°F') },\n      { name: 'Kelvin (K)', id: 'kelvin', fn: toFixedUnit('K') },\n    ],\n  },\n  {\n    name: 'Time',\n    formats: [\n      { name: 'Hertz (1/s)', id: 'hertz', fn: SIPrefix('Hz') },\n      { name: 'nanoseconds (ns)', id: 'ns', fn: toNanoSeconds },\n      { name: 'microseconds (µs)', id: 'µs', fn: toMicroSeconds },\n      { name: 'milliseconds (ms)', id: 'ms', fn: toMilliSeconds },\n      { name: 'seconds (s)', id: 's', fn: toSeconds },\n      { name: 'minutes (m)', id: 'm', fn: toMinutes },\n      { name: 'hours (h)', id: 'h', fn: toHours },\n      { name: 'days (d)', id: 'd', fn: toDays },\n      { name: 'duration (ms)', id: 'dtdurationms', fn: toDurationInMilliseconds },\n      { name: 'duration (s)', id: 'dtdurations', fn: toDurationInSeconds },\n      { name: 'duration (hh:mm:ss)', id: 'dthms', fn: toDurationInHoursMinutesSeconds },\n      { name: 'duration (d hh:mm:ss)', id: 'dtdhms', fn: toDurationInDaysHoursMinutesSeconds },\n      { name: 'Timeticks (s/100)', id: 'timeticks', fn: toTimeTicks },\n      { name: 'clock (ms)', id: 'clockms', fn: toClockMilliseconds },\n      { name: 'clock (s)', id: 'clocks', fn: toClockSeconds },\n    ],\n  },\n  {\n    name: 'Throughput',\n    formats: [\n      { name: 'counts/sec (cps)', id: 'cps', fn: simpleCountUnit('c/s') },\n      { name: 'ops/sec (ops)', id: 'ops', fn: simpleCountUnit('ops/s') },\n      { name: 'requests/sec (rps)', id: 'reqps', fn: simpleCountUnit('req/s') },\n      { name: 'reads/sec (rps)', id: 'rps', fn: simpleCountUnit('rd/s') },\n      { name: 'writes/sec (wps)', id: 'wps', fn: simpleCountUnit('wr/s') },\n      { name: 'I/O ops/sec (iops)', id: 'iops', fn: simpleCountUnit('io/s') },\n      { name: 'counts/min (cpm)', id: 'cpm', fn: simpleCountUnit('c/m') },\n      { name: 'ops/min (opm)', id: 'opm', fn: simpleCountUnit('ops/m') },\n      { name: 'reads/min (rpm)', id: 'rpm', fn: simpleCountUnit('rd/m') },\n      { name: 'writes/min (wpm)', id: 'wpm', fn: simpleCountUnit('wr/m') },\n    ],\n  },\n  {\n    name: 'Velocity',\n    formats: [\n      { name: 'meters/second (m/s)', id: 'velocityms', fn: toFixedUnit('m/s') },\n      { name: 'kilometers/hour (km/h)', id: 'velocitykmh', fn: toFixedUnit('km/h') },\n      { name: 'miles/hour (mph)', id: 'velocitymph', fn: toFixedUnit('mph') },\n      { name: 'knot (kn)', id: 'velocityknot', fn: toFixedUnit('kn') },\n    ],\n  },\n  {\n    name: 'Volume',\n    formats: [\n      { name: 'millilitre (mL)', id: 'mlitre', fn: SIPrefix('L', -1) },\n      { name: 'litre (L)', id: 'litre', fn: SIPrefix('L') },\n      { name: 'cubic meter', id: 'm3', fn: toFixedUnit('m³') },\n      { name: 'Normal cubic meter', id: 'Nm3', fn: toFixedUnit('Nm³') },\n      { name: 'cubic decimeter', id: 'dm3', fn: toFixedUnit('dm³') },\n      { name: 'gallons', id: 'gallons', fn: toFixedUnit('gal') },\n    ],\n  },\n  {\n    name: 'Boolean',\n    formats: [\n      { name: 'True / False', id: 'bool', fn: booleanValueFormatter('True', 'False') },\n      { name: 'Yes / No', id: 'bool_yes_no', fn: booleanValueFormatter('Yes', 'No') },\n      { name: 'On / Off', id: 'bool_on_off', fn: booleanValueFormatter('On', 'Off') },\n    ],\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}