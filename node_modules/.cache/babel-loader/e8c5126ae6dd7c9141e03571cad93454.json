{"ast":null,"code":"import { combineReducers } from 'redux';\nimport sharedReducers from 'app/core/reducers';\nimport ldapReducers from 'app/features/admin/state/reducers';\nimport alertingReducers from 'app/features/alerting/state/reducers';\nimport apiKeysReducers from 'app/features/api-keys/state/reducers';\nimport panelEditorReducers from 'app/features/dashboard/components/PanelEditor/state/reducers';\nimport dashboardReducers from 'app/features/dashboard/state/reducers';\nimport dataSourcesReducers from 'app/features/datasources/state/reducers';\nimport exploreReducers from 'app/features/explore/state/main';\nimport foldersReducers from 'app/features/folders/state/reducers';\nimport invitesReducers from 'app/features/invites/state/reducers';\nimport importDashboardReducers from 'app/features/manage-dashboards/state/reducers';\nimport organizationReducers from 'app/features/org/state/reducers';\nimport panelsReducers from 'app/features/panel/state/reducers';\nimport { reducer as pluginsReducer } from 'app/features/plugins/admin/state/reducer';\nimport userReducers from 'app/features/profile/state/reducers';\nimport serviceAccountsReducer from 'app/features/serviceaccounts/state/reducers';\nimport teamsReducers from 'app/features/teams/state/reducers';\nimport usersReducers from 'app/features/users/state/reducers';\nimport templatingReducers from 'app/features/variables/state/keyedVariablesReducer';\nimport { cleanUpAction } from '../actions/cleanUp';\nconst rootReducers = Object.assign({}, sharedReducers, alertingReducers, teamsReducers, apiKeysReducers, foldersReducers, dashboardReducers, exploreReducers, dataSourcesReducers, usersReducers, serviceAccountsReducer, userReducers, invitesReducers, organizationReducers, ldapReducers, importDashboardReducers, panelEditorReducers, panelsReducers, templatingReducers, {\n  plugins: pluginsReducer\n});\nconst addedReducers = {};\nexport const addReducer = newReducers => {\n  Object.assign(addedReducers, newReducers);\n};\nexport const createRootReducer = () => {\n  const appReducer = combineReducers(Object.assign({}, rootReducers, addedReducers));\n  return (state, action) => {\n    if (action.type !== cleanUpAction.type) {\n      return appReducer(state, action);\n    }\n\n    const {\n      stateSelector\n    } = action.payload;\n    const stateSlice = stateSelector(state);\n    recursiveCleanState(state, stateSlice);\n    return appReducer(state, action);\n  };\n};\nexport const recursiveCleanState = (state, stateSlice) => {\n  for (const stateKey in state) {\n    if (!state.hasOwnProperty(stateKey)) {\n      continue;\n    }\n\n    const slice = state[stateKey];\n\n    if (slice === stateSlice) {\n      state[stateKey] = undefined;\n      return true;\n    }\n\n    if (typeof slice === 'object') {\n      const cleaned = recursiveCleanState(slice, stateSlice);\n\n      if (cleaned) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};","map":{"version":3,"names":["combineReducers","sharedReducers","ldapReducers","alertingReducers","apiKeysReducers","panelEditorReducers","dashboardReducers","dataSourcesReducers","exploreReducers","foldersReducers","invitesReducers","importDashboardReducers","organizationReducers","panelsReducers","reducer","pluginsReducer","userReducers","serviceAccountsReducer","teamsReducers","usersReducers","templatingReducers","cleanUpAction","rootReducers","plugins","addedReducers","addReducer","newReducers","Object","assign","createRootReducer","appReducer","state","action","type","stateSelector","payload","stateSlice","recursiveCleanState","stateKey","hasOwnProperty","slice","undefined","cleaned"],"sources":["/home/soula/grafana/public/app/core/reducers/root.ts"],"sourcesContent":["import { AnyAction, combineReducers } from 'redux';\n\nimport sharedReducers from 'app/core/reducers';\nimport ldapReducers from 'app/features/admin/state/reducers';\nimport alertingReducers from 'app/features/alerting/state/reducers';\nimport apiKeysReducers from 'app/features/api-keys/state/reducers';\nimport panelEditorReducers from 'app/features/dashboard/components/PanelEditor/state/reducers';\nimport dashboardReducers from 'app/features/dashboard/state/reducers';\nimport dataSourcesReducers from 'app/features/datasources/state/reducers';\nimport exploreReducers from 'app/features/explore/state/main';\nimport foldersReducers from 'app/features/folders/state/reducers';\nimport invitesReducers from 'app/features/invites/state/reducers';\nimport importDashboardReducers from 'app/features/manage-dashboards/state/reducers';\nimport organizationReducers from 'app/features/org/state/reducers';\nimport panelsReducers from 'app/features/panel/state/reducers';\nimport { reducer as pluginsReducer } from 'app/features/plugins/admin/state/reducer';\nimport userReducers from 'app/features/profile/state/reducers';\nimport serviceAccountsReducer from 'app/features/serviceaccounts/state/reducers';\nimport teamsReducers from 'app/features/teams/state/reducers';\nimport usersReducers from 'app/features/users/state/reducers';\nimport templatingReducers from 'app/features/variables/state/keyedVariablesReducer';\n\nimport { CleanUp, cleanUpAction } from '../actions/cleanUp';\n\nconst rootReducers = {\n  ...sharedReducers,\n  ...alertingReducers,\n  ...teamsReducers,\n  ...apiKeysReducers,\n  ...foldersReducers,\n  ...dashboardReducers,\n  ...exploreReducers,\n  ...dataSourcesReducers,\n  ...usersReducers,\n  ...serviceAccountsReducer,\n  ...userReducers,\n  ...invitesReducers,\n  ...organizationReducers,\n  ...ldapReducers,\n  ...importDashboardReducers,\n  ...panelEditorReducers,\n  ...panelsReducers,\n  ...templatingReducers,\n  plugins: pluginsReducer,\n};\n\nconst addedReducers = {};\n\nexport const addReducer = (newReducers: any) => {\n  Object.assign(addedReducers, newReducers);\n};\n\nexport const createRootReducer = () => {\n  const appReducer = combineReducers({\n    ...rootReducers,\n    ...addedReducers,\n  });\n\n  return (state: any, action: AnyAction) => {\n    if (action.type !== cleanUpAction.type) {\n      return appReducer(state, action);\n    }\n\n    const { stateSelector } = action.payload as CleanUp<any>;\n    const stateSlice = stateSelector(state);\n    recursiveCleanState(state, stateSlice);\n\n    return appReducer(state, action);\n  };\n};\n\nexport const recursiveCleanState = (state: any, stateSlice: any): boolean => {\n  for (const stateKey in state) {\n    if (!state.hasOwnProperty(stateKey)) {\n      continue;\n    }\n\n    const slice = state[stateKey];\n    if (slice === stateSlice) {\n      state[stateKey] = undefined;\n      return true;\n    }\n\n    if (typeof slice === 'object') {\n      const cleaned = recursiveCleanState(slice, stateSlice);\n      if (cleaned) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n"],"mappings":"AAAA,SAAoBA,eAApB,QAA2C,OAA3C;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,mBAAP,MAAgC,8DAAhC;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,uBAAP,MAAoC,+CAApC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,OAAO,IAAIC,cAApB,QAA0C,0CAA1C;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,sBAAP,MAAmC,6CAAnC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AAEA,SAAkBC,aAAlB,QAAuC,oBAAvC;AAEA,MAAMC,YAAY,qBACbrB,cADa,EAEbE,gBAFa,EAGbe,aAHa,EAIbd,eAJa,EAKbK,eALa,EAMbH,iBANa,EAObE,eAPa,EAQbD,mBARa,EASbY,aATa,EAUbF,sBAVa,EAWbD,YAXa,EAYbN,eAZa,EAabE,oBAba,EAcbV,YAda,EAebS,uBAfa,EAgBbN,mBAhBa,EAiBbQ,cAjBa,EAkBbO,kBAlBa;EAmBhBG,OAAO,EAAER;AAnBO,EAAlB;AAsBA,MAAMS,aAAa,GAAG,EAAtB;AAEA,OAAO,MAAMC,UAAU,GAAIC,WAAD,IAAsB;EAC9CC,MAAM,CAACC,MAAP,CAAcJ,aAAd,EAA6BE,WAA7B;AACD,CAFM;AAIP,OAAO,MAAMG,iBAAiB,GAAG,MAAM;EACrC,MAAMC,UAAU,GAAG9B,eAAe,mBAC7BsB,YAD6B,EAE7BE,aAF6B,EAAlC;EAKA,OAAO,CAACO,KAAD,EAAaC,MAAb,KAAmC;IACxC,IAAIA,MAAM,CAACC,IAAP,KAAgBZ,aAAa,CAACY,IAAlC,EAAwC;MACtC,OAAOH,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;IACD;;IAED,MAAM;MAAEE;IAAF,IAAoBF,MAAM,CAACG,OAAjC;IACA,MAAMC,UAAU,GAAGF,aAAa,CAACH,KAAD,CAAhC;IACAM,mBAAmB,CAACN,KAAD,EAAQK,UAAR,CAAnB;IAEA,OAAON,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;EACD,CAVD;AAWD,CAjBM;AAmBP,OAAO,MAAMK,mBAAmB,GAAG,CAACN,KAAD,EAAaK,UAAb,KAA0C;EAC3E,KAAK,MAAME,QAAX,IAAuBP,KAAvB,EAA8B;IAC5B,IAAI,CAACA,KAAK,CAACQ,cAAN,CAAqBD,QAArB,CAAL,EAAqC;MACnC;IACD;;IAED,MAAME,KAAK,GAAGT,KAAK,CAACO,QAAD,CAAnB;;IACA,IAAIE,KAAK,KAAKJ,UAAd,EAA0B;MACxBL,KAAK,CAACO,QAAD,CAAL,GAAkBG,SAAlB;MACA,OAAO,IAAP;IACD;;IAED,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;MAC7B,MAAME,OAAO,GAAGL,mBAAmB,CAACG,KAAD,EAAQJ,UAAR,CAAnC;;MACA,IAAIM,OAAJ,EAAa;QACX,OAAO,IAAP;MACD;IACF;EACF;;EAED,OAAO,KAAP;AACD,CArBM"},"metadata":{},"sourceType":"module"}