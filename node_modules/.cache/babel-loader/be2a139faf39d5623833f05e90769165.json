{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/public/app/types/user.ts"],"sourcesContent":["import { SelectableValue, WithAccessControlMetadata } from '@grafana/data';\n\nimport { OrgRole } from '.';\nexport interface OrgUser extends WithAccessControlMetadata {\n  avatarUrl: string;\n  email: string;\n  lastSeenAt: string;\n  lastSeenAtAge: string;\n  login: string;\n  name: string;\n  orgId: number;\n  role: OrgRole;\n  userId: number;\n}\n\nexport interface User {\n  id: number;\n  label: string;\n  avatarUrl: string;\n  login: string;\n  email: string;\n  name: string;\n  orgId?: number;\n}\n\nexport type Unit = { name: string; url: string };\n\nexport interface UserDTO extends WithAccessControlMetadata {\n  id: number;\n  login: string;\n  email: string;\n  name: string;\n  isGrafanaAdmin: boolean;\n  isDisabled: boolean;\n  isAdmin?: boolean;\n  isExternal?: boolean;\n  updatedAt?: string;\n  authLabels?: string[];\n  theme?: string;\n  avatarUrl?: string;\n  orgId?: number;\n  lastSeenAtAge?: string;\n  licensedRole?: string;\n  permissions?: string[];\n  teams?: Unit[];\n  orgs?: Unit[];\n}\n\nexport interface Invitee {\n  code: string;\n  createdOn: string;\n  email: string;\n  emailSent: boolean;\n  emailSentOn: string;\n  id: number;\n  invitedByEmail: string;\n  invitedByLogin: string;\n  invitedByName: string;\n  name: string;\n  orgId: number;\n  role: string;\n  status: string;\n  url: string;\n}\n\nexport interface UsersState {\n  users: OrgUser[];\n  searchQuery: string;\n  searchPage: number;\n  canInvite: boolean;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n  externalUserMngInfo: string;\n  hasFetched: boolean;\n}\n\nexport interface UserSession {\n  id: number;\n  createdAt: string;\n  clientIp: string;\n  isActive: boolean;\n  seenAt: string;\n  browser: string;\n  browserVersion: string;\n  os: string;\n  osVersion: string;\n  device: string;\n}\n\nexport interface UserOrg {\n  name: string;\n  orgId: number;\n  role: OrgRole;\n}\n\nexport interface UserAdminState {\n  user?: UserDTO;\n  sessions: UserSession[];\n  orgs: UserOrg[];\n  isLoading: boolean;\n  error?: UserAdminError;\n}\n\nexport interface UserAdminError {\n  title: string;\n  body: string;\n}\n\nexport type UserFilter = Record<string, string | boolean | SelectableValue[]>;\nexport interface UserListAdminState {\n  users: UserDTO[];\n  query: string;\n  perPage: number;\n  page: number;\n  totalPages: number;\n  showPaging: boolean;\n  filters: UserFilter[];\n  isLoading: boolean;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}