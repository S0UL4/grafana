{"ast":null,"code":"var _Icon, _a, _Icon2;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nimport { HorizontalGroup, Icon, LinkButton, useStyles2 } from '@grafana/ui';\nimport { getExternalManageLink, isInstallControlsEnabled } from '../../helpers';\nimport { isGrafanaAdmin } from '../../permissions';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\nimport { PluginStatus } from '../../types';\nimport { ExternallyManagedButton } from './ExternallyManagedButton';\nimport { InstallControlsButton } from './InstallControlsButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const InstallControls = ({\n  plugin,\n  latestCompatibleVersion\n}) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = isGrafanaAdmin();\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const isCompatible = Boolean(latestCompatibleVersion);\n  const isInstallControlsDisabled = plugin.isCore || plugin.isDisabled || !isInstallControlsEnabled();\n  const pluginStatus = plugin.isInstalled ? plugin.hasUpdate ? PluginStatus.UPDATE : PluginStatus.UNINSTALL : PluginStatus.INSTALL;\n\n  if (isInstallControlsDisabled) {\n    return null;\n  }\n\n  if (plugin.type === PluginType.renderer) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.message,\n      children: \"Renderer plugins cannot be managed by the Plugin Catalog.\"\n    });\n  }\n\n  if (plugin.isEnterprise && !featureEnabled('enterprise.plugins')) {\n    return /*#__PURE__*/_jsxs(HorizontalGroup, {\n      height: \"auto\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: styles.message,\n        children: \"No valid Grafana Enterprise license detected.\"\n      }), /*#__PURE__*/_jsx(LinkButton, {\n        href: `${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        size: \"sm\",\n        fill: \"text\",\n        icon: \"external-link-alt\",\n        children: \"Learn more\"\n      })]\n    });\n  }\n\n  if (plugin.isDev) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.message,\n      children: \"This is a development build of the plugin and can't be uninstalled.\"\n    });\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    const message = `You do not have permission to ${pluginStatus} this plugin.`;\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.message,\n      children: message\n    });\n  }\n\n  if (!plugin.isPublished) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.message,\n      children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"exclamation-triangle\"\n      })), \" This plugin is not published to\", ' ', _a || (_a = /*#__PURE__*/_jsx(\"a\", {\n        href: \"https://www.grafana.com/plugins\",\n        target: \"__blank\",\n        rel: \"noreferrer\",\n        children: \"grafana.com/plugins\"\n      })), ' ', \"and can't be managed via the catalog.\"]\n    });\n  }\n\n  if (!isCompatible) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.message,\n      children: [_Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n        name: \"exclamation-triangle\"\n      })), \"\\xA0This plugin doesn't support your version of Grafana.\"]\n    });\n  }\n\n  if (isExternallyManaged) {\n    return /*#__PURE__*/_jsx(ExternallyManagedButton, {\n      pluginId: plugin.id,\n      pluginStatus: pluginStatus\n    });\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.message,\n      children: \"The install controls have been disabled because the Grafana server cannot access grafana.com.\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(InstallControlsButton, {\n    plugin: plugin,\n    pluginStatus: pluginStatus,\n    latestCompatibleVersion: latestCompatibleVersion\n  });\n};\nexport const getStyles = theme => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `\n  };\n};","map":{"version":3,"names":["css","React","PluginType","config","featureEnabled","HorizontalGroup","Icon","LinkButton","useStyles2","getExternalManageLink","isInstallControlsEnabled","isGrafanaAdmin","useIsRemotePluginsAvailable","PluginStatus","ExternallyManagedButton","InstallControlsButton","InstallControls","plugin","latestCompatibleVersion","styles","getStyles","isExternallyManaged","pluginAdminExternalManageEnabled","hasPermission","isRemotePluginsAvailable","isCompatible","Boolean","isInstallControlsDisabled","isCore","isDisabled","pluginStatus","isInstalled","hasUpdate","UPDATE","UNINSTALL","INSTALL","type","renderer","message","isEnterprise","id","isDev","isPublished","theme","colors","text","secondary"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/InstallControls/InstallControls.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nimport { HorizontalGroup, Icon, LinkButton, useStyles2 } from '@grafana/ui';\n\nimport { getExternalManageLink, isInstallControlsEnabled } from '../../helpers';\nimport { isGrafanaAdmin } from '../../permissions';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\n\nimport { ExternallyManagedButton } from './ExternallyManagedButton';\nimport { InstallControlsButton } from './InstallControlsButton';\n\ninterface Props {\n  plugin: CatalogPlugin;\n  latestCompatibleVersion?: Version;\n}\n\nexport const InstallControls = ({ plugin, latestCompatibleVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = isGrafanaAdmin();\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const isCompatible = Boolean(latestCompatibleVersion);\n  const isInstallControlsDisabled = plugin.isCore || plugin.isDisabled || !isInstallControlsEnabled();\n\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n\n  if (isInstallControlsDisabled) {\n    return null;\n  }\n\n  if (plugin.type === PluginType.renderer) {\n    return <div className={styles.message}>Renderer plugins cannot be managed by the Plugin Catalog.</div>;\n  }\n\n  if (plugin.isEnterprise && !featureEnabled('enterprise.plugins')) {\n    return (\n      <HorizontalGroup height=\"auto\" align=\"center\">\n        <span className={styles.message}>No valid Grafana Enterprise license detected.</span>\n        <LinkButton\n          href={`${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          size=\"sm\"\n          fill=\"text\"\n          icon=\"external-link-alt\"\n        >\n          Learn more\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (plugin.isDev) {\n    return (\n      <div className={styles.message}>This is a development build of the plugin and can&#39;t be uninstalled.</div>\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    const message = `You do not have permission to ${pluginStatus} this plugin.`;\n    return <div className={styles.message}>{message}</div>;\n  }\n\n  if (!plugin.isPublished) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" /> This plugin is not published to{' '}\n        <a href=\"https://www.grafana.com/plugins\" target=\"__blank\" rel=\"noreferrer\">\n          grafana.com/plugins\n        </a>{' '}\n        and can&#39;t be managed via the catalog.\n      </div>\n    );\n  }\n\n  if (!isCompatible) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" />\n        &nbsp;This plugin doesn&#39;t support your version of Grafana.\n      </div>\n    );\n  }\n\n  if (isExternallyManaged) {\n    return <ExternallyManagedButton pluginId={plugin.id} pluginStatus={pluginStatus} />;\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return (\n      <div className={styles.message}>\n        The install controls have been disabled because the Grafana server cannot access grafana.com.\n      </div>\n    );\n  }\n\n  return (\n    <InstallControlsButton\n      plugin={plugin}\n      pluginStatus={pluginStatus}\n      latestCompatibleVersion={latestCompatibleVersion}\n    />\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAwBC,UAAxB,QAA0C,eAA1C;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,kBAAvC;AACA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,UAA5C,QAA8D,aAA9D;AAEA,SAASC,qBAAT,EAAgCC,wBAAhC,QAAgE,eAAhE;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,2BAAT,QAA4C,mBAA5C;AACA,SAAwBC,YAAxB,QAAqD,aAArD;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;;;AAOA,OAAO,MAAMC,eAAe,GAAG,CAAC;EAAEC,MAAF;EAAUC;AAAV,CAAD,KAAgD;EAC7E,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EACA,MAAMC,mBAAmB,GAAGlB,MAAM,CAACmB,gCAAnC;EACA,MAAMC,aAAa,GAAGZ,cAAc,EAApC;EACA,MAAMa,wBAAwB,GAAGZ,2BAA2B,EAA5D;EACA,MAAMa,YAAY,GAAGC,OAAO,CAACR,uBAAD,CAA5B;EACA,MAAMS,yBAAyB,GAAGV,MAAM,CAACW,MAAP,IAAiBX,MAAM,CAACY,UAAxB,IAAsC,CAACnB,wBAAwB,EAAjG;EAEA,MAAMoB,YAAY,GAAGb,MAAM,CAACc,WAAP,GACjBd,MAAM,CAACe,SAAP,GACEnB,YAAY,CAACoB,MADf,GAEEpB,YAAY,CAACqB,SAHE,GAIjBrB,YAAY,CAACsB,OAJjB;;EAMA,IAAIR,yBAAJ,EAA+B;IAC7B,OAAO,IAAP;EACD;;EAED,IAAIV,MAAM,CAACmB,IAAP,KAAgBlC,UAAU,CAACmC,QAA/B,EAAyC;IACvC,oBAAO;MAAK,SAAS,EAAElB,MAAM,CAACmB,OAAvB;MAAA;IAAA,EAAP;EACD;;EAED,IAAIrB,MAAM,CAACsB,YAAP,IAAuB,CAACnC,cAAc,CAAC,oBAAD,CAA1C,EAAkE;IAChE,oBACE,MAAC,eAAD;MAAiB,MAAM,EAAC,MAAxB;MAA+B,KAAK,EAAC,QAArC;MAAA,wBACE;QAAM,SAAS,EAAEe,MAAM,CAACmB,OAAxB;QAAA;MAAA,EADF,eAEE,KAAC,UAAD;QACE,IAAI,EAAG,GAAE7B,qBAAqB,CAACQ,MAAM,CAACuB,EAAR,CAAY,wCAD5C;QAEE,MAAM,EAAC,QAFT;QAGE,GAAG,EAAC,qBAHN;QAIE,IAAI,EAAC,IAJP;QAKE,IAAI,EAAC,MALP;QAME,IAAI,EAAC,mBANP;QAAA;MAAA,EAFF;IAAA,EADF;EAeD;;EAED,IAAIvB,MAAM,CAACwB,KAAX,EAAkB;IAChB,oBACE;MAAK,SAAS,EAAEtB,MAAM,CAACmB,OAAvB;MAAA;IAAA,EADF;EAGD;;EAED,IAAI,CAACf,aAAD,IAAkB,CAACF,mBAAvB,EAA4C;IAC1C,MAAMiB,OAAO,GAAI,iCAAgCR,YAAa,eAA9D;IACA,oBAAO;MAAK,SAAS,EAAEX,MAAM,CAACmB,OAAvB;MAAA,UAAiCA;IAAjC,EAAP;EACD;;EAED,IAAI,CAACrB,MAAM,CAACyB,WAAZ,EAAyB;IACvB,oBACE;MAAK,SAAS,EAAEvB,MAAM,CAACmB,OAAvB;MAAA,0CACE,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EADF,uCACuE,GADvE,2BAEE;QAAG,IAAI,EAAC,iCAAR;QAA0C,MAAM,EAAC,SAAjD;QAA2D,GAAG,EAAC,YAA/D;QAAA;MAAA,EAFF,GAIO,GAJP;IAAA,EADF;EASD;;EAED,IAAI,CAACb,YAAL,EAAmB;IACjB,oBACE;MAAK,SAAS,EAAEN,MAAM,CAACmB,OAAvB;MAAA,4CACE,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EADF;IAAA,EADF;EAMD;;EAED,IAAIjB,mBAAJ,EAAyB;IACvB,oBAAO,KAAC,uBAAD;MAAyB,QAAQ,EAAEJ,MAAM,CAACuB,EAA1C;MAA8C,YAAY,EAAEV;IAA5D,EAAP;EACD;;EAED,IAAI,CAACN,wBAAL,EAA+B;IAC7B,oBACE;MAAK,SAAS,EAAEL,MAAM,CAACmB,OAAvB;MAAA;IAAA,EADF;EAKD;;EAED,oBACE,KAAC,qBAAD;IACE,MAAM,EAAErB,MADV;IAEE,YAAY,EAAEa,YAFhB;IAGE,uBAAuB,EAAEZ;EAH3B,EADF;AAOD,CA3FM;AA6FP,OAAO,MAAME,SAAS,GAAIuB,KAAD,IAA0B;EACjD,OAAO;IACLL,OAAO,EAAEtC,GAAI;AACjB,eAAe2C,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AAC3C;EAHS,CAAP;AAKD,CANM"},"metadata":{},"sourceType":"module"}