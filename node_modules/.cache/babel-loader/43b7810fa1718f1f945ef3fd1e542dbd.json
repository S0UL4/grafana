{"ast":null,"code":"import { VisualizationSuggestionsBuilder, VisualizationSuggestionScore } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { importPanelPlugin } from 'app/features/plugins/importPanelPlugin';\nexport const panelsToCheckFirst = ['timeseries', 'barchart', 'gauge', 'stat', 'piechart', 'bargauge', 'table', 'state-timeline', 'status-history', 'logs', 'candlestick'];\nexport async function getAllSuggestions(data, panel) {\n  const builder = new VisualizationSuggestionsBuilder(data, panel);\n\n  for (const pluginId of panelsToCheckFirst) {\n    const plugin = await importPanelPlugin(pluginId);\n    const supplier = plugin.getSuggestionsSupplier();\n\n    if (supplier) {\n      supplier.getSuggestionsForData(builder);\n    }\n  }\n\n  const list = builder.getList();\n\n  if (builder.dataSummary.fieldCount === 0) {\n    for (const plugin of Object.values(config.panels)) {\n      if (!plugin.skipDataQuery || plugin.hideFromList) {\n        continue;\n      }\n\n      list.push({\n        name: plugin.name,\n        pluginId: plugin.id,\n        description: plugin.info.description,\n        cardOptions: {\n          imgSrc: plugin.info.logos.small\n        }\n      });\n    }\n  }\n\n  return list.sort((a, b) => {\n    var _b$score, _a$score;\n\n    return ((_b$score = b.score) !== null && _b$score !== void 0 ? _b$score : VisualizationSuggestionScore.OK) - ((_a$score = a.score) !== null && _a$score !== void 0 ? _a$score : VisualizationSuggestionScore.OK);\n  });\n}","map":{"version":3,"names":["VisualizationSuggestionsBuilder","VisualizationSuggestionScore","config","importPanelPlugin","panelsToCheckFirst","getAllSuggestions","data","panel","builder","pluginId","plugin","supplier","getSuggestionsSupplier","getSuggestionsForData","list","getList","dataSummary","fieldCount","Object","values","panels","skipDataQuery","hideFromList","push","name","id","description","info","cardOptions","imgSrc","logos","small","sort","a","b","score","OK"],"sources":["/home/soula/grafana/public/app/features/panel/state/getAllSuggestions.ts"],"sourcesContent":["import {\n  PanelData,\n  VisualizationSuggestion,\n  VisualizationSuggestionsBuilder,\n  PanelModel,\n  VisualizationSuggestionScore,\n} from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { importPanelPlugin } from 'app/features/plugins/importPanelPlugin';\n\nexport const panelsToCheckFirst = [\n  'timeseries',\n  'barchart',\n  'gauge',\n  'stat',\n  'piechart',\n  'bargauge',\n  'table',\n  'state-timeline',\n  'status-history',\n  'logs',\n  'candlestick',\n];\n\nexport async function getAllSuggestions(data?: PanelData, panel?: PanelModel): Promise<VisualizationSuggestion[]> {\n  const builder = new VisualizationSuggestionsBuilder(data, panel);\n\n  for (const pluginId of panelsToCheckFirst) {\n    const plugin = await importPanelPlugin(pluginId);\n    const supplier = plugin.getSuggestionsSupplier();\n\n    if (supplier) {\n      supplier.getSuggestionsForData(builder);\n    }\n  }\n\n  const list = builder.getList();\n\n  if (builder.dataSummary.fieldCount === 0) {\n    for (const plugin of Object.values(config.panels)) {\n      if (!plugin.skipDataQuery || plugin.hideFromList) {\n        continue;\n      }\n\n      list.push({\n        name: plugin.name,\n        pluginId: plugin.id,\n        description: plugin.info.description,\n        cardOptions: {\n          imgSrc: plugin.info.logos.small,\n        },\n      });\n    }\n  }\n\n  return list.sort((a, b) => {\n    return (b.score ?? VisualizationSuggestionScore.OK) - (a.score ?? VisualizationSuggestionScore.OK);\n  });\n}\n"],"mappings":"AAAA,SAGEA,+BAHF,EAKEC,4BALF,QAMO,eANP;AAOA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAChC,YADgC,EAEhC,UAFgC,EAGhC,OAHgC,EAIhC,MAJgC,EAKhC,UALgC,EAMhC,UANgC,EAOhC,OAPgC,EAQhC,gBARgC,EAShC,gBATgC,EAUhC,MAVgC,EAWhC,aAXgC,CAA3B;AAcP,OAAO,eAAeC,iBAAf,CAAiCC,IAAjC,EAAmDC,KAAnD,EAA2G;EAChH,MAAMC,OAAO,GAAG,IAAIR,+BAAJ,CAAoCM,IAApC,EAA0CC,KAA1C,CAAhB;;EAEA,KAAK,MAAME,QAAX,IAAuBL,kBAAvB,EAA2C;IACzC,MAAMM,MAAM,GAAG,MAAMP,iBAAiB,CAACM,QAAD,CAAtC;IACA,MAAME,QAAQ,GAAGD,MAAM,CAACE,sBAAP,EAAjB;;IAEA,IAAID,QAAJ,EAAc;MACZA,QAAQ,CAACE,qBAAT,CAA+BL,OAA/B;IACD;EACF;;EAED,MAAMM,IAAI,GAAGN,OAAO,CAACO,OAAR,EAAb;;EAEA,IAAIP,OAAO,CAACQ,WAAR,CAAoBC,UAApB,KAAmC,CAAvC,EAA0C;IACxC,KAAK,MAAMP,MAAX,IAAqBQ,MAAM,CAACC,MAAP,CAAcjB,MAAM,CAACkB,MAArB,CAArB,EAAmD;MACjD,IAAI,CAACV,MAAM,CAACW,aAAR,IAAyBX,MAAM,CAACY,YAApC,EAAkD;QAChD;MACD;;MAEDR,IAAI,CAACS,IAAL,CAAU;QACRC,IAAI,EAAEd,MAAM,CAACc,IADL;QAERf,QAAQ,EAAEC,MAAM,CAACe,EAFT;QAGRC,WAAW,EAAEhB,MAAM,CAACiB,IAAP,CAAYD,WAHjB;QAIRE,WAAW,EAAE;UACXC,MAAM,EAAEnB,MAAM,CAACiB,IAAP,CAAYG,KAAZ,CAAkBC;QADf;MAJL,CAAV;IAQD;EACF;;EAED,OAAOjB,IAAI,CAACkB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAAA;;IACzB,OAAO,aAACA,CAAC,CAACC,KAAH,+CAAYlC,4BAA4B,CAACmC,EAAzC,iBAAgDH,CAAC,CAACE,KAAlD,+CAA2DlC,4BAA4B,CAACmC,EAAxF,CAAP;EACD,CAFM,CAAP;AAGD"},"metadata":{},"sourceType":"module"}