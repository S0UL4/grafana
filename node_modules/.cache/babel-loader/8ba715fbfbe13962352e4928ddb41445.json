{"ast":null,"code":"import { compareArrayValues, compareDataFrameStructures } from '@grafana/data';\nexport const setStructureRevision = (result, lastResult) => {\n  let structureRev = 1;\n\n  if (lastResult !== null && lastResult !== void 0 && lastResult.structureRev && lastResult.series) {\n    structureRev = lastResult.structureRev;\n    const sameStructure = compareArrayValues(result.series, lastResult.series, compareDataFrameStructures);\n\n    if (!sameStructure) {\n      structureRev++;\n    }\n  }\n\n  result.structureRev = structureRev;\n  return result;\n};","map":{"version":3,"names":["compareArrayValues","compareDataFrameStructures","setStructureRevision","result","lastResult","structureRev","series","sameStructure"],"sources":["/home/soula/grafana/public/app/features/query/state/processing/revision.ts"],"sourcesContent":["import { compareArrayValues, compareDataFrameStructures, PanelData } from '@grafana/data';\n\nexport const setStructureRevision = (result: PanelData, lastResult: PanelData | undefined) => {\n  let structureRev = 1;\n\n  if (lastResult?.structureRev && lastResult.series) {\n    structureRev = lastResult.structureRev;\n    const sameStructure = compareArrayValues(result.series, lastResult.series, compareDataFrameStructures);\n    if (!sameStructure) {\n      structureRev++;\n    }\n  }\n\n  result.structureRev = structureRev;\n  return result;\n};\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,0BAA7B,QAA0E,eAA1E;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,MAAD,EAAoBC,UAApB,KAA0D;EAC5F,IAAIC,YAAY,GAAG,CAAnB;;EAEA,IAAID,UAAU,SAAV,IAAAA,UAAU,WAAV,IAAAA,UAAU,CAAEC,YAAZ,IAA4BD,UAAU,CAACE,MAA3C,EAAmD;IACjDD,YAAY,GAAGD,UAAU,CAACC,YAA1B;IACA,MAAME,aAAa,GAAGP,kBAAkB,CAACG,MAAM,CAACG,MAAR,EAAgBF,UAAU,CAACE,MAA3B,EAAmCL,0BAAnC,CAAxC;;IACA,IAAI,CAACM,aAAL,EAAoB;MAClBF,YAAY;IACb;EACF;;EAEDF,MAAM,CAACE,YAAP,GAAsBA,YAAtB;EACA,OAAOF,MAAP;AACD,CAbM"},"metadata":{},"sourceType":"module"}