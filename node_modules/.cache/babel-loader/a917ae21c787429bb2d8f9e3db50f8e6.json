{"ast":null,"code":"export let SortOrder;\n\n(function (SortOrder) {\n  SortOrder[\"Descending\"] = \"Descending\";\n  SortOrder[\"Ascending\"] = \"Ascending\";\n  SortOrder[\"DatasourceAZ\"] = \"Datasource A-Z\";\n  SortOrder[\"DatasourceZA\"] = \"Datasource Z-A\";\n})(SortOrder || (SortOrder = {}));","map":{"version":3,"names":["SortOrder"],"sources":["/home/soula/grafana/public/app/core/utils/richHistoryTypes.ts"],"sourcesContent":["export enum SortOrder {\n  Descending = 'Descending',\n  Ascending = 'Ascending',\n  /**\n   * @deprecated supported only by local storage. It will be removed in the future\n   */\n  DatasourceAZ = 'Datasource A-Z',\n  /**\n   * @deprecated supported only by local storage. It will be removed in the future\n   */\n  DatasourceZA = 'Datasource Z-A',\n}\n\nexport interface RichHistorySettings {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  lastUsedDatasourceFilters?: string[];\n}\n\nexport type RichHistorySearchFilters = {\n  search: string;\n  sortOrder: SortOrder;\n  /** Names of data sources (not uids) - used by local and remote storage **/\n  datasourceFilters: string[];\n  from: number;\n  to: number;\n  starred: boolean;\n  page?: number;\n};\n"],"mappings":"AAAA,WAAYA,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S"},"metadata":{},"sourceType":"module"}