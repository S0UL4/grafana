{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Button, Card, LinkButton, ModalsController, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\nimport { ShareModal } from './ShareModal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const PlaylistPageList = ({\n  playlists,\n  setStartPlaylist,\n  setPlaylistToDelete\n}) => {\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    className: styles.list,\n    children: playlists.map(playlist => /*#__PURE__*/_jsx(\"li\", {\n      className: styles.listItem,\n      children: /*#__PURE__*/_jsxs(Card, {\n        children: [/*#__PURE__*/_jsxs(Card.Heading, {\n          children: [playlist.name, /*#__PURE__*/_jsx(ModalsController, {\n            children: ({\n              showModal,\n              hideModal\n            }) => /*#__PURE__*/_jsx(DashNavButton, {\n              tooltip: \"Share playlist\",\n              icon: \"share-alt\",\n              iconSize: \"lg\",\n              onClick: () => {\n                showModal(ShareModal, {\n                  playlistUid: playlist.uid,\n                  onDismiss: hideModal\n                });\n              }\n            })\n          }, \"button-share\")]\n        }), /*#__PURE__*/_jsxs(Card.Actions, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            icon: \"play\",\n            onClick: () => setStartPlaylist(playlist),\n            children: \"Start playlist\"\n          }), contextSrv.isEditor && /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(LinkButton, {\n              variant: \"secondary\",\n              href: `/playlists/edit/${playlist.uid}`,\n              icon: \"cog\",\n              children: \"Edit playlist\"\n            }, \"edit\"), /*#__PURE__*/_jsx(Button, {\n              disabled: false,\n              onClick: () => setPlaylistToDelete({\n                id: playlist.id,\n                uid: playlist.uid,\n                name: playlist.name\n              }),\n              icon: \"trash-alt\",\n              variant: \"destructive\",\n              children: \"Delete playlist\"\n            })]\n          })]\n        })]\n      })\n    }, playlist.uid))\n  });\n};\n\nfunction getStyles(theme) {\n  return {\n    list: css({\n      display: 'grid'\n    }),\n    listItem: css({\n      listStyle: 'none'\n    })\n  };\n}","map":{"version":3,"names":["css","React","Button","Card","LinkButton","ModalsController","useStyles2","contextSrv","DashNavButton","ShareModal","PlaylistPageList","playlists","setStartPlaylist","setPlaylistToDelete","styles","getStyles","list","map","playlist","listItem","name","showModal","hideModal","playlistUid","uid","onDismiss","isEditor","id","theme","display","listStyle"],"sources":["/home/soula/grafana/public/app/features/playlist/PlaylistPageList.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Card, LinkButton, ModalsController, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\n\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\n\nimport { ShareModal } from './ShareModal';\nimport { PlaylistDTO } from './types';\n\ninterface Props {\n  setStartPlaylist: (playlistItem: PlaylistDTO) => void;\n  setPlaylistToDelete: (playlistItem: PlaylistDTO) => void;\n  playlists: PlaylistDTO[] | undefined;\n}\n\nexport const PlaylistPageList = ({ playlists, setStartPlaylist, setPlaylistToDelete }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <ul className={styles.list}>\n      {playlists!.map((playlist: PlaylistDTO) => (\n        <li className={styles.listItem} key={playlist.uid}>\n          <Card>\n            <Card.Heading>\n              {playlist.name}\n              <ModalsController key=\"button-share\">\n                {({ showModal, hideModal }) => (\n                  <DashNavButton\n                    tooltip=\"Share playlist\"\n                    icon=\"share-alt\"\n                    iconSize=\"lg\"\n                    onClick={() => {\n                      showModal(ShareModal, {\n                        playlistUid: playlist.uid,\n                        onDismiss: hideModal,\n                      });\n                    }}\n                  />\n                )}\n              </ModalsController>\n            </Card.Heading>\n            <Card.Actions>\n              <Button variant=\"secondary\" icon=\"play\" onClick={() => setStartPlaylist(playlist)}>\n                Start playlist\n              </Button>\n              {contextSrv.isEditor && (\n                <>\n                  <LinkButton key=\"edit\" variant=\"secondary\" href={`/playlists/edit/${playlist.uid}`} icon=\"cog\">\n                    Edit playlist\n                  </LinkButton>\n                  <Button\n                    disabled={false}\n                    onClick={() => setPlaylistToDelete({ id: playlist.id, uid: playlist.uid, name: playlist.name })}\n                    icon=\"trash-alt\"\n                    variant=\"destructive\"\n                  >\n                    Delete playlist\n                  </Button>\n                </>\n              )}\n            </Card.Actions>\n          </Card>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    list: css({\n      display: 'grid',\n    }),\n    listItem: css({\n      listStyle: 'none',\n    }),\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,gBAAnC,EAAqDC,UAArD,QAAuE,aAAvE;AACA,SAASC,UAAT,QAA2B,+BAA3B;AAEA,SAASC,aAAT,QAA8B,+CAA9B;AAEA,SAASC,UAAT,QAA2B,cAA3B;;;;AASA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,SAAF;EAAaC,gBAAb;EAA+BC;AAA/B,CAAD,KAAiE;EAC/F,MAAMC,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EACA,oBACE;IAAI,SAAS,EAAED,MAAM,CAACE,IAAtB;IAAA,UACGL,SAAS,CAAEM,GAAX,CAAgBC,QAAD,iBACd;MAAI,SAAS,EAAEJ,MAAM,CAACK,QAAtB;MAAA,uBACE,MAAC,IAAD;QAAA,wBACE,MAAC,IAAD,CAAM,OAAN;UAAA,WACGD,QAAQ,CAACE,IADZ,eAEE,KAAC,gBAAD;YAAA,UACG,CAAC;cAAEC,SAAF;cAAaC;YAAb,CAAD,kBACC,KAAC,aAAD;cACE,OAAO,EAAC,gBADV;cAEE,IAAI,EAAC,WAFP;cAGE,QAAQ,EAAC,IAHX;cAIE,OAAO,EAAE,MAAM;gBACbD,SAAS,CAACZ,UAAD,EAAa;kBACpBc,WAAW,EAAEL,QAAQ,CAACM,GADF;kBAEpBC,SAAS,EAAEH;gBAFS,CAAb,CAAT;cAID;YATH;UAFJ,GAAsB,cAAtB,CAFF;QAAA,EADF,eAmBE,MAAC,IAAD,CAAM,OAAN;UAAA,wBACE,KAAC,MAAD;YAAQ,OAAO,EAAC,WAAhB;YAA4B,IAAI,EAAC,MAAjC;YAAwC,OAAO,EAAE,MAAMV,gBAAgB,CAACM,QAAD,CAAvE;YAAA;UAAA,EADF,EAIGX,UAAU,CAACmB,QAAX,iBACC;YAAA,wBACE,KAAC,UAAD;cAAuB,OAAO,EAAC,WAA/B;cAA2C,IAAI,EAAG,mBAAkBR,QAAQ,CAACM,GAAI,EAAjF;cAAoF,IAAI,EAAC,KAAzF;cAAA;YAAA,GAAgB,MAAhB,CADF,eAIE,KAAC,MAAD;cACE,QAAQ,EAAE,KADZ;cAEE,OAAO,EAAE,MAAMX,mBAAmB,CAAC;gBAAEc,EAAE,EAAET,QAAQ,CAACS,EAAf;gBAAmBH,GAAG,EAAEN,QAAQ,CAACM,GAAjC;gBAAsCJ,IAAI,EAAEF,QAAQ,CAACE;cAArD,CAAD,CAFpC;cAGE,IAAI,EAAC,WAHP;cAIE,OAAO,EAAC,aAJV;cAAA;YAAA,EAJF;UAAA,EALJ;QAAA,EAnBF;MAAA;IADF,GAAqCF,QAAQ,CAACM,GAA9C,CADD;EADH,EADF;AAgDD,CAlDM;;AAoDP,SAAST,SAAT,CAAmBa,KAAnB,EAAyC;EACvC,OAAO;IACLZ,IAAI,EAAEhB,GAAG,CAAC;MACR6B,OAAO,EAAE;IADD,CAAD,CADJ;IAILV,QAAQ,EAAEnB,GAAG,CAAC;MACZ8B,SAAS,EAAE;IADC,CAAD;EAJR,CAAP;AAQD"},"metadata":{},"sourceType":"module"}