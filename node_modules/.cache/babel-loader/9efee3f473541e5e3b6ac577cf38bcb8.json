{"ast":null,"code":"import React from 'react';\nimport { FieldConfigProperty, FieldType, identityOverrideProcessor, PanelPlugin } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { AxisPlacement, ScaleDistribution } from '@grafana/schema';\nimport { addHideFrom, ScaleDistributionEditor } from '@grafana/ui/src/options/builder';\nimport { ColorScale } from 'app/core/components/ColorScale/ColorScale';\nimport { addHeatmapCalculationOptions } from 'app/features/transformers/calculateHeatmap/editor/helper';\nimport { readHeatmapRowsCustomMeta } from 'app/features/transformers/calculateHeatmap/heatmap';\nimport { HeatmapCellLayout } from 'app/features/transformers/calculateHeatmap/models.gen';\nimport { HeatmapPanel } from './HeatmapPanel';\nimport { prepareHeatmapData } from './fields';\nimport { heatmapChangedHandler, heatmapMigrationHandler } from './migrations';\nimport { defaultPanelOptions, HeatmapColorMode, HeatmapColorScale } from './models.gen';\nimport { colorSchemes, quantizeScheme } from './palettes';\nimport { HeatmapSuggestionsSupplier } from './suggestions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const plugin = new PanelPlugin(HeatmapPanel).useFieldConfig({\n  disableStandardOptions: Object.values(FieldConfigProperty).filter(v => v !== FieldConfigProperty.Links),\n  useCustomConfig: builder => {\n    builder.addCustomEditor({\n      id: 'scaleDistribution',\n      path: 'scaleDistribution',\n      name: 'Y axis scale',\n      category: ['Heatmap'],\n      editor: ScaleDistributionEditor,\n      override: ScaleDistributionEditor,\n      defaultValue: {\n        type: ScaleDistribution.Linear\n      },\n      shouldApply: f => f.type === FieldType.number,\n      process: identityOverrideProcessor,\n      hideFromDefaults: true\n    });\n    addHideFrom(builder); // for tooltip etc\n  }\n}).setPanelChangeHandler(heatmapChangedHandler).setMigrationHandler(heatmapMigrationHandler).setPanelOptions((builder, context) => {\n  var _context$options, _defaultPanelOptions$, _defaultPanelOptions$5, _defaultPanelOptions$6;\n\n  const opts = (_context$options = context.options) !== null && _context$options !== void 0 ? _context$options : defaultPanelOptions;\n  let isOrdinalY = false;\n\n  try {\n    const v = prepareHeatmapData({\n      series: context.data\n    }, opts, config.theme2);\n    isOrdinalY = readHeatmapRowsCustomMeta(v.heatmap).yOrdinalDisplay != null;\n  } catch {}\n\n  let category = ['Heatmap'];\n  builder.addRadio({\n    path: 'calculate',\n    name: 'Calculate from data',\n    defaultValue: defaultPanelOptions.calculate,\n    category,\n    settings: {\n      options: [{\n        label: 'Yes',\n        value: true\n      }, {\n        label: 'No',\n        value: false\n      }]\n    }\n  });\n\n  if (opts.calculate) {\n    addHeatmapCalculationOptions('calculation.', builder, opts.calculation, category);\n  }\n\n  category = ['Y Axis'];\n  builder.addRadio({\n    path: 'yAxis.axisPlacement',\n    name: 'Placement',\n    defaultValue: (_defaultPanelOptions$ = defaultPanelOptions.yAxis.axisPlacement) !== null && _defaultPanelOptions$ !== void 0 ? _defaultPanelOptions$ : AxisPlacement.Left,\n    category,\n    settings: {\n      options: [{\n        label: 'Left',\n        value: AxisPlacement.Left\n      }, {\n        label: 'Right',\n        value: AxisPlacement.Right\n      }, {\n        label: 'Hidden',\n        value: AxisPlacement.Hidden\n      }]\n    }\n  }).addUnitPicker({\n    category,\n    path: 'yAxis.unit',\n    name: 'Unit',\n    defaultValue: undefined,\n    settings: {\n      isClearable: true\n    }\n  }).addNumberInput({\n    category,\n    path: 'yAxis.decimals',\n    name: 'Decimals',\n    settings: {\n      placeholder: 'Auto'\n    }\n  });\n\n  if (!isOrdinalY) {\n    // if undefined, then show the min+max\n    builder.addNumberInput({\n      path: 'yAxis.min',\n      name: 'Min value',\n      settings: {\n        placeholder: 'Auto'\n      },\n      category\n    }).addTextInput({\n      path: 'yAxis.max',\n      name: 'Max value',\n      settings: {\n        placeholder: 'Auto'\n      },\n      category\n    });\n  }\n\n  builder.addNumberInput({\n    path: 'yAxis.axisWidth',\n    name: 'Axis width',\n    defaultValue: defaultPanelOptions.yAxis.axisWidth,\n    settings: {\n      placeholder: 'Auto',\n      min: 5 // smaller should just be hidden\n\n    },\n    category\n  }).addTextInput({\n    path: 'yAxis.axisLabel',\n    name: 'Axis label',\n    defaultValue: defaultPanelOptions.yAxis.axisLabel,\n    settings: {\n      placeholder: 'Auto'\n    },\n    category\n  });\n\n  if (!opts.calculate) {\n    var _defaultPanelOptions$2, _defaultPanelOptions$3;\n\n    builder.addRadio({\n      path: 'rowsFrame.layout',\n      name: 'Tick alignment',\n      defaultValue: (_defaultPanelOptions$2 = (_defaultPanelOptions$3 = defaultPanelOptions.rowsFrame) === null || _defaultPanelOptions$3 === void 0 ? void 0 : _defaultPanelOptions$3.layout) !== null && _defaultPanelOptions$2 !== void 0 ? _defaultPanelOptions$2 : HeatmapCellLayout.auto,\n      category,\n      settings: {\n        options: [{\n          label: 'Auto',\n          value: HeatmapCellLayout.auto\n        }, {\n          label: 'Top (LE)',\n          value: HeatmapCellLayout.le\n        }, {\n          label: 'Middle',\n          value: HeatmapCellLayout.unknown\n        }, {\n          label: 'Bottom (GE)',\n          value: HeatmapCellLayout.ge\n        }]\n      }\n    });\n  }\n\n  builder.addBooleanSwitch({\n    path: 'yAxis.reverse',\n    name: 'Reverse',\n    defaultValue: defaultPanelOptions.yAxis.reverse === true,\n    category\n  });\n  category = ['Colors'];\n  builder.addRadio({\n    path: `color.mode`,\n    name: 'Mode',\n    defaultValue: defaultPanelOptions.color.mode,\n    category,\n    settings: {\n      options: [{\n        label: 'Scheme',\n        value: HeatmapColorMode.Scheme\n      }, {\n        label: 'Opacity',\n        value: HeatmapColorMode.Opacity\n      }]\n    }\n  });\n  builder.addColorPicker({\n    path: `color.fill`,\n    name: 'Color',\n    defaultValue: defaultPanelOptions.color.fill,\n    category,\n    showIf: opts => opts.color.mode === HeatmapColorMode.Opacity\n  });\n  builder.addRadio({\n    path: `color.scale`,\n    name: 'Scale',\n    defaultValue: defaultPanelOptions.color.scale,\n    category,\n    settings: {\n      options: [{\n        label: 'Exponential',\n        value: HeatmapColorScale.Exponential\n      }, {\n        label: 'Linear',\n        value: HeatmapColorScale.Linear\n      }]\n    },\n    showIf: opts => opts.color.mode === HeatmapColorMode.Opacity\n  });\n  builder.addSliderInput({\n    path: 'color.exponent',\n    name: 'Exponent',\n    defaultValue: defaultPanelOptions.color.exponent,\n    category,\n    settings: {\n      min: 0.1,\n      // 1 for on/off?\n      max: 2,\n      step: 0.1\n    },\n    showIf: opts => opts.color.mode === HeatmapColorMode.Opacity && opts.color.scale === HeatmapColorScale.Exponential\n  });\n  builder.addSelect({\n    path: `color.scheme`,\n    name: 'Scheme',\n    description: '',\n    defaultValue: defaultPanelOptions.color.scheme,\n    category,\n    settings: {\n      options: colorSchemes.map(scheme => ({\n        value: scheme.name,\n        label: scheme.name //description: 'Set a geometry field based on the results of other fields',\n\n      }))\n    },\n    showIf: opts => opts.color.mode !== HeatmapColorMode.Opacity\n  });\n  builder.addSliderInput({\n    path: 'color.steps',\n    name: 'Steps',\n    defaultValue: defaultPanelOptions.color.steps,\n    category,\n    settings: {\n      min: 2,\n      max: 128,\n      step: 1\n    }\n  }).addCustomEditor({\n    id: '__scale__',\n    path: `__scale__`,\n    name: '',\n    category,\n    editor: () => {\n      const palette = quantizeScheme(opts.color, config.theme2);\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(ColorScale, {\n          colorPalette: palette,\n          min: 1,\n          max: 100\n        })\n      });\n    }\n  });\n  builder.addNumberInput({\n    path: 'color.min',\n    name: 'Start color scale from value',\n    defaultValue: defaultPanelOptions.color.min,\n    settings: {\n      placeholder: 'Auto (min)'\n    },\n    category\n  }).addNumberInput({\n    path: 'color.max',\n    name: 'End color scale at value',\n    defaultValue: defaultPanelOptions.color.max,\n    settings: {\n      placeholder: 'Auto (max)'\n    },\n    category\n  });\n  category = ['Cell display'];\n\n  if (!opts.calculate) {\n    var _defaultPanelOptions$4;\n\n    builder.addTextInput({\n      path: 'rowsFrame.value',\n      name: 'Value name',\n      defaultValue: (_defaultPanelOptions$4 = defaultPanelOptions.rowsFrame) === null || _defaultPanelOptions$4 === void 0 ? void 0 : _defaultPanelOptions$4.value,\n      settings: {\n        placeholder: 'Value'\n      },\n      category\n    });\n  }\n\n  builder.addUnitPicker({\n    category,\n    path: 'cellValues.unit',\n    name: 'Unit',\n    defaultValue: undefined,\n    settings: {\n      isClearable: true\n    }\n  }).addNumberInput({\n    category,\n    path: 'cellValues.decimals',\n    name: 'Decimals',\n    settings: {\n      placeholder: 'Auto'\n    }\n  });\n  builder // .addRadio({\n  //   path: 'showValue',\n  //   name: 'Show values',\n  //   defaultValue: defaultPanelOptions.showValue,\n  //   category,\n  //   settings: {\n  //     options: [\n  //       { value: VisibilityMode.Auto, label: 'Auto' },\n  //       { value: VisibilityMode.Always, label: 'Always' },\n  //       { value: VisibilityMode.Never, label: 'Never' },\n  //     ],\n  //   },\n  // })\n  .addSliderInput({\n    name: 'Cell gap',\n    path: 'cellGap',\n    defaultValue: defaultPanelOptions.cellGap,\n    category,\n    settings: {\n      min: 0,\n      max: 25\n    }\n  }).addNumberInput({\n    path: 'filterValues.le',\n    name: 'Hide cells with values <=',\n    defaultValue: (_defaultPanelOptions$5 = defaultPanelOptions.filterValues) === null || _defaultPanelOptions$5 === void 0 ? void 0 : _defaultPanelOptions$5.le,\n    settings: {\n      placeholder: 'None'\n    },\n    category\n  }).addNumberInput({\n    path: 'filterValues.ge',\n    name: 'Hide cells with values >=',\n    defaultValue: (_defaultPanelOptions$6 = defaultPanelOptions.filterValues) === null || _defaultPanelOptions$6 === void 0 ? void 0 : _defaultPanelOptions$6.ge,\n    settings: {\n      placeholder: 'None'\n    },\n    category\n  }); // .addSliderInput({\n  //   name: 'Cell radius',\n  //   path: 'cellRadius',\n  //   defaultValue: defaultPanelOptions.cellRadius,\n  //   category,\n  //   settings: {\n  //     min: 0,\n  //     max: 100,\n  //   },\n  // })\n\n  category = ['Tooltip'];\n  builder.addBooleanSwitch({\n    path: 'tooltip.show',\n    name: 'Show tooltip',\n    defaultValue: defaultPanelOptions.tooltip.show,\n    category\n  });\n  builder.addBooleanSwitch({\n    path: 'tooltip.yHistogram',\n    name: 'Show histogram (Y axis)',\n    defaultValue: defaultPanelOptions.tooltip.yHistogram,\n    category,\n    showIf: opts => opts.tooltip.show\n  });\n  category = ['Legend'];\n  builder.addBooleanSwitch({\n    path: 'legend.show',\n    name: 'Show legend',\n    defaultValue: defaultPanelOptions.legend.show,\n    category\n  });\n  category = ['Exemplars'];\n  builder.addColorPicker({\n    path: 'exemplars.color',\n    name: 'Color',\n    defaultValue: defaultPanelOptions.exemplars.color,\n    category\n  });\n}).setSuggestionsSupplier(new HeatmapSuggestionsSupplier());","map":{"version":3,"names":["React","FieldConfigProperty","FieldType","identityOverrideProcessor","PanelPlugin","config","AxisPlacement","ScaleDistribution","addHideFrom","ScaleDistributionEditor","ColorScale","addHeatmapCalculationOptions","readHeatmapRowsCustomMeta","HeatmapCellLayout","HeatmapPanel","prepareHeatmapData","heatmapChangedHandler","heatmapMigrationHandler","defaultPanelOptions","HeatmapColorMode","HeatmapColorScale","colorSchemes","quantizeScheme","HeatmapSuggestionsSupplier","plugin","useFieldConfig","disableStandardOptions","Object","values","filter","v","Links","useCustomConfig","builder","addCustomEditor","id","path","name","category","editor","override","defaultValue","type","Linear","shouldApply","f","number","process","hideFromDefaults","setPanelChangeHandler","setMigrationHandler","setPanelOptions","context","opts","options","isOrdinalY","series","data","theme2","heatmap","yOrdinalDisplay","addRadio","calculate","settings","label","value","calculation","yAxis","axisPlacement","Left","Right","Hidden","addUnitPicker","undefined","isClearable","addNumberInput","placeholder","addTextInput","axisWidth","min","axisLabel","rowsFrame","layout","auto","le","unknown","ge","addBooleanSwitch","reverse","color","mode","Scheme","Opacity","addColorPicker","fill","showIf","scale","Exponential","addSliderInput","exponent","max","step","addSelect","description","scheme","map","steps","palette","cellGap","filterValues","tooltip","show","yHistogram","legend","exemplars","setSuggestionsSupplier"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap/module.tsx"],"sourcesContent":["import React from 'react';\n\nimport { FieldConfigProperty, FieldType, identityOverrideProcessor, PanelData, PanelPlugin } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { AxisPlacement, GraphFieldConfig, ScaleDistribution, ScaleDistributionConfig } from '@grafana/schema';\nimport { addHideFrom, ScaleDistributionEditor } from '@grafana/ui/src/options/builder';\nimport { ColorScale } from 'app/core/components/ColorScale/ColorScale';\nimport { addHeatmapCalculationOptions } from 'app/features/transformers/calculateHeatmap/editor/helper';\nimport { readHeatmapRowsCustomMeta } from 'app/features/transformers/calculateHeatmap/heatmap';\nimport { HeatmapCellLayout } from 'app/features/transformers/calculateHeatmap/models.gen';\n\nimport { HeatmapPanel } from './HeatmapPanel';\nimport { prepareHeatmapData } from './fields';\nimport { heatmapChangedHandler, heatmapMigrationHandler } from './migrations';\nimport { PanelOptions, defaultPanelOptions, HeatmapColorMode, HeatmapColorScale } from './models.gen';\nimport { colorSchemes, quantizeScheme } from './palettes';\nimport { HeatmapSuggestionsSupplier } from './suggestions';\n\nexport const plugin = new PanelPlugin<PanelOptions, GraphFieldConfig>(HeatmapPanel)\n  .useFieldConfig({\n    disableStandardOptions: Object.values(FieldConfigProperty).filter((v) => v !== FieldConfigProperty.Links),\n    useCustomConfig: (builder) => {\n      builder.addCustomEditor<void, ScaleDistributionConfig>({\n        id: 'scaleDistribution',\n        path: 'scaleDistribution',\n        name: 'Y axis scale',\n        category: ['Heatmap'],\n        editor: ScaleDistributionEditor as any,\n        override: ScaleDistributionEditor as any,\n        defaultValue: { type: ScaleDistribution.Linear },\n        shouldApply: (f) => f.type === FieldType.number,\n        process: identityOverrideProcessor,\n        hideFromDefaults: true,\n      });\n      addHideFrom(builder); // for tooltip etc\n    },\n  })\n  .setPanelChangeHandler(heatmapChangedHandler)\n  .setMigrationHandler(heatmapMigrationHandler)\n  .setPanelOptions((builder, context) => {\n    const opts = context.options ?? defaultPanelOptions;\n\n    let isOrdinalY = false;\n\n    try {\n      const v = prepareHeatmapData({ series: context.data } as PanelData, opts, config.theme2);\n      isOrdinalY = readHeatmapRowsCustomMeta(v.heatmap).yOrdinalDisplay != null;\n    } catch {}\n\n    let category = ['Heatmap'];\n\n    builder.addRadio({\n      path: 'calculate',\n      name: 'Calculate from data',\n      defaultValue: defaultPanelOptions.calculate,\n      category,\n      settings: {\n        options: [\n          { label: 'Yes', value: true },\n          { label: 'No', value: false },\n        ],\n      },\n    });\n\n    if (opts.calculate) {\n      addHeatmapCalculationOptions('calculation.', builder, opts.calculation, category);\n    }\n\n    category = ['Y Axis'];\n\n    builder\n      .addRadio({\n        path: 'yAxis.axisPlacement',\n        name: 'Placement',\n        defaultValue: defaultPanelOptions.yAxis.axisPlacement ?? AxisPlacement.Left,\n        category,\n        settings: {\n          options: [\n            { label: 'Left', value: AxisPlacement.Left },\n            { label: 'Right', value: AxisPlacement.Right },\n            { label: 'Hidden', value: AxisPlacement.Hidden },\n          ],\n        },\n      })\n      .addUnitPicker({\n        category,\n        path: 'yAxis.unit',\n        name: 'Unit',\n        defaultValue: undefined,\n        settings: {\n          isClearable: true,\n        },\n      })\n      .addNumberInput({\n        category,\n        path: 'yAxis.decimals',\n        name: 'Decimals',\n        settings: {\n          placeholder: 'Auto',\n        },\n      });\n\n    if (!isOrdinalY) {\n      // if undefined, then show the min+max\n      builder\n        .addNumberInput({\n          path: 'yAxis.min',\n          name: 'Min value',\n          settings: {\n            placeholder: 'Auto',\n          },\n          category,\n        })\n        .addTextInput({\n          path: 'yAxis.max',\n          name: 'Max value',\n          settings: {\n            placeholder: 'Auto',\n          },\n          category,\n        });\n    }\n\n    builder\n      .addNumberInput({\n        path: 'yAxis.axisWidth',\n        name: 'Axis width',\n        defaultValue: defaultPanelOptions.yAxis.axisWidth,\n        settings: {\n          placeholder: 'Auto',\n          min: 5, // smaller should just be hidden\n        },\n        category,\n      })\n      .addTextInput({\n        path: 'yAxis.axisLabel',\n        name: 'Axis label',\n        defaultValue: defaultPanelOptions.yAxis.axisLabel,\n        settings: {\n          placeholder: 'Auto',\n        },\n        category,\n      });\n\n    if (!opts.calculate) {\n      builder.addRadio({\n        path: 'rowsFrame.layout',\n        name: 'Tick alignment',\n        defaultValue: defaultPanelOptions.rowsFrame?.layout ?? HeatmapCellLayout.auto,\n        category,\n        settings: {\n          options: [\n            { label: 'Auto', value: HeatmapCellLayout.auto },\n            { label: 'Top (LE)', value: HeatmapCellLayout.le },\n            { label: 'Middle', value: HeatmapCellLayout.unknown },\n            { label: 'Bottom (GE)', value: HeatmapCellLayout.ge },\n          ],\n        },\n      });\n    }\n    builder.addBooleanSwitch({\n      path: 'yAxis.reverse',\n      name: 'Reverse',\n      defaultValue: defaultPanelOptions.yAxis.reverse === true,\n      category,\n    });\n\n    category = ['Colors'];\n\n    builder.addRadio({\n      path: `color.mode`,\n      name: 'Mode',\n      defaultValue: defaultPanelOptions.color.mode,\n      category,\n      settings: {\n        options: [\n          { label: 'Scheme', value: HeatmapColorMode.Scheme },\n          { label: 'Opacity', value: HeatmapColorMode.Opacity },\n        ],\n      },\n    });\n\n    builder.addColorPicker({\n      path: `color.fill`,\n      name: 'Color',\n      defaultValue: defaultPanelOptions.color.fill,\n      category,\n      showIf: (opts) => opts.color.mode === HeatmapColorMode.Opacity,\n    });\n\n    builder.addRadio({\n      path: `color.scale`,\n      name: 'Scale',\n      defaultValue: defaultPanelOptions.color.scale,\n      category,\n      settings: {\n        options: [\n          { label: 'Exponential', value: HeatmapColorScale.Exponential },\n          { label: 'Linear', value: HeatmapColorScale.Linear },\n        ],\n      },\n      showIf: (opts) => opts.color.mode === HeatmapColorMode.Opacity,\n    });\n\n    builder.addSliderInput({\n      path: 'color.exponent',\n      name: 'Exponent',\n      defaultValue: defaultPanelOptions.color.exponent,\n      category,\n      settings: {\n        min: 0.1, // 1 for on/off?\n        max: 2,\n        step: 0.1,\n      },\n      showIf: (opts) =>\n        opts.color.mode === HeatmapColorMode.Opacity && opts.color.scale === HeatmapColorScale.Exponential,\n    });\n\n    builder.addSelect({\n      path: `color.scheme`,\n      name: 'Scheme',\n      description: '',\n      defaultValue: defaultPanelOptions.color.scheme,\n      category,\n      settings: {\n        options: colorSchemes.map((scheme) => ({\n          value: scheme.name,\n          label: scheme.name,\n          //description: 'Set a geometry field based on the results of other fields',\n        })),\n      },\n      showIf: (opts) => opts.color.mode !== HeatmapColorMode.Opacity,\n    });\n\n    builder\n      .addSliderInput({\n        path: 'color.steps',\n        name: 'Steps',\n        defaultValue: defaultPanelOptions.color.steps,\n        category,\n        settings: {\n          min: 2,\n          max: 128,\n          step: 1,\n        },\n      })\n      .addCustomEditor({\n        id: '__scale__',\n        path: `__scale__`,\n        name: '',\n        category,\n        editor: () => {\n          const palette = quantizeScheme(opts.color, config.theme2);\n          return (\n            <div>\n              <ColorScale colorPalette={palette} min={1} max={100} />\n            </div>\n          );\n        },\n      });\n\n    builder\n      .addNumberInput({\n        path: 'color.min',\n        name: 'Start color scale from value',\n        defaultValue: defaultPanelOptions.color.min,\n        settings: {\n          placeholder: 'Auto (min)',\n        },\n        category,\n      })\n      .addNumberInput({\n        path: 'color.max',\n        name: 'End color scale at value',\n        defaultValue: defaultPanelOptions.color.max,\n        settings: {\n          placeholder: 'Auto (max)',\n        },\n        category,\n      });\n\n    category = ['Cell display'];\n\n    if (!opts.calculate) {\n      builder.addTextInput({\n        path: 'rowsFrame.value',\n        name: 'Value name',\n        defaultValue: defaultPanelOptions.rowsFrame?.value,\n        settings: {\n          placeholder: 'Value',\n        },\n        category,\n      });\n    }\n\n    builder\n      .addUnitPicker({\n        category,\n        path: 'cellValues.unit',\n        name: 'Unit',\n        defaultValue: undefined,\n        settings: {\n          isClearable: true,\n        },\n      })\n      .addNumberInput({\n        category,\n        path: 'cellValues.decimals',\n        name: 'Decimals',\n        settings: {\n          placeholder: 'Auto',\n        },\n      });\n\n    builder\n      // .addRadio({\n      //   path: 'showValue',\n      //   name: 'Show values',\n      //   defaultValue: defaultPanelOptions.showValue,\n      //   category,\n      //   settings: {\n      //     options: [\n      //       { value: VisibilityMode.Auto, label: 'Auto' },\n      //       { value: VisibilityMode.Always, label: 'Always' },\n      //       { value: VisibilityMode.Never, label: 'Never' },\n      //     ],\n      //   },\n      // })\n      .addSliderInput({\n        name: 'Cell gap',\n        path: 'cellGap',\n        defaultValue: defaultPanelOptions.cellGap,\n        category,\n        settings: {\n          min: 0,\n          max: 25,\n        },\n      })\n      .addNumberInput({\n        path: 'filterValues.le',\n        name: 'Hide cells with values <=',\n        defaultValue: defaultPanelOptions.filterValues?.le,\n        settings: {\n          placeholder: 'None',\n        },\n        category,\n      })\n      .addNumberInput({\n        path: 'filterValues.ge',\n        name: 'Hide cells with values >=',\n        defaultValue: defaultPanelOptions.filterValues?.ge,\n        settings: {\n          placeholder: 'None',\n        },\n        category,\n      });\n    // .addSliderInput({\n    //   name: 'Cell radius',\n    //   path: 'cellRadius',\n    //   defaultValue: defaultPanelOptions.cellRadius,\n    //   category,\n    //   settings: {\n    //     min: 0,\n    //     max: 100,\n    //   },\n    // })\n\n    category = ['Tooltip'];\n\n    builder.addBooleanSwitch({\n      path: 'tooltip.show',\n      name: 'Show tooltip',\n      defaultValue: defaultPanelOptions.tooltip.show,\n      category,\n    });\n\n    builder.addBooleanSwitch({\n      path: 'tooltip.yHistogram',\n      name: 'Show histogram (Y axis)',\n      defaultValue: defaultPanelOptions.tooltip.yHistogram,\n      category,\n      showIf: (opts) => opts.tooltip.show,\n    });\n\n    category = ['Legend'];\n    builder.addBooleanSwitch({\n      path: 'legend.show',\n      name: 'Show legend',\n      defaultValue: defaultPanelOptions.legend.show,\n      category,\n    });\n\n    category = ['Exemplars'];\n    builder.addColorPicker({\n      path: 'exemplars.color',\n      name: 'Color',\n      defaultValue: defaultPanelOptions.exemplars.color,\n      category,\n    });\n  })\n  .setSuggestionsSupplier(new HeatmapSuggestionsSupplier());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}