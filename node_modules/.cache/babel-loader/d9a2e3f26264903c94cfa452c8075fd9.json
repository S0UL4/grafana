{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, InlineField, InlineSwitch, Input } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ExemplarSetting({\n  value,\n  onChange,\n  onDelete\n}) {\n  const [isInternalLink, setIsInternalLink] = useState(Boolean(value.datasourceUid));\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"gf-form-group\",\n    children: [/*#__PURE__*/_jsx(InlineField, {\n      label: \"Internal link\",\n      labelWidth: 24,\n      children: /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(InlineSwitch, {\n          value: isInternalLink,\n          \"aria-label\": selectors.components.DataSource.Prometheus.configPage.internalLinkSwitch,\n          onChange: ev => setIsInternalLink(ev.currentTarget.checked)\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"destructive\",\n          title: \"Remove link\",\n          icon: \"times\",\n          onClick: event => {\n            event.preventDefault();\n            onDelete();\n          },\n          className: css`\n              margin-left: 8px;\n            `\n        })]\n      })\n    }), isInternalLink ? /*#__PURE__*/_jsx(InlineField, {\n      label: \"Data source\",\n      labelWidth: 24,\n      tooltip: \"The data source the exemplar is going to navigate to.\",\n      children: /*#__PURE__*/_jsx(DataSourcePicker, {\n        tracing: true,\n        current: value.datasourceUid,\n        noDefault: true,\n        width: 40,\n        onChange: ds => onChange(Object.assign({}, value, {\n          datasourceUid: ds.uid,\n          url: undefined\n        }))\n      })\n    }) : /*#__PURE__*/_jsx(InlineField, {\n      label: \"URL\",\n      labelWidth: 24,\n      tooltip: \"The URL of the trace backend the user would go to see its trace.\",\n      children: /*#__PURE__*/_jsx(Input, {\n        placeholder: \"https://example.com/${__value.raw}\",\n        spellCheck: false,\n        width: 40,\n        value: value.url,\n        onChange: event => onChange(Object.assign({}, value, {\n          datasourceUid: undefined,\n          url: event.currentTarget.value\n        }))\n      })\n    }), /*#__PURE__*/_jsx(InlineField, {\n      label: \"URL Label\",\n      labelWidth: 24,\n      tooltip: \"Use to override the button label on the exemplar traceID field.\",\n      children: /*#__PURE__*/_jsx(Input, {\n        placeholder: \"Go to example.com\",\n        spellCheck: false,\n        width: 40,\n        value: value.urlDisplayLabel,\n        onChange: event => onChange(Object.assign({}, value, {\n          urlDisplayLabel: event.currentTarget.value\n        }))\n      })\n    }), /*#__PURE__*/_jsx(InlineField, {\n      label: \"Label name\",\n      labelWidth: 24,\n      tooltip: \"The name of the field in the labels object that should be used to get the traceID.\",\n      children: /*#__PURE__*/_jsx(Input, {\n        placeholder: \"traceID\",\n        spellCheck: false,\n        width: 40,\n        value: value.name,\n        onChange: event => onChange(Object.assign({}, value, {\n          name: event.currentTarget.value\n        }))\n      })\n    })]\n  });\n}","map":{"version":3,"names":["css","React","useState","selectors","DataSourcePicker","Button","InlineField","InlineSwitch","Input","ExemplarSetting","value","onChange","onDelete","isInternalLink","setIsInternalLink","Boolean","datasourceUid","components","DataSource","Prometheus","configPage","internalLinkSwitch","ev","currentTarget","checked","event","preventDefault","ds","uid","url","undefined","urlDisplayLabel","name"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/configuration/ExemplarSetting.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, InlineField, InlineSwitch, Input } from '@grafana/ui';\n\nimport { ExemplarTraceIdDestination } from '../types';\n\ntype Props = {\n  value: ExemplarTraceIdDestination;\n  onChange: (value: ExemplarTraceIdDestination) => void;\n  onDelete: () => void;\n};\n\nexport default function ExemplarSetting({ value, onChange, onDelete }: Props) {\n  const [isInternalLink, setIsInternalLink] = useState(Boolean(value.datasourceUid));\n\n  return (\n    <div className=\"gf-form-group\">\n      <InlineField label=\"Internal link\" labelWidth={24}>\n        <>\n          <InlineSwitch\n            value={isInternalLink}\n            aria-label={selectors.components.DataSource.Prometheus.configPage.internalLinkSwitch}\n            onChange={(ev) => setIsInternalLink(ev.currentTarget.checked)}\n          />\n          <Button\n            variant=\"destructive\"\n            title=\"Remove link\"\n            icon=\"times\"\n            onClick={(event) => {\n              event.preventDefault();\n              onDelete();\n            }}\n            className={css`\n              margin-left: 8px;\n            `}\n          />\n        </>\n      </InlineField>\n\n      {isInternalLink ? (\n        <InlineField\n          label=\"Data source\"\n          labelWidth={24}\n          tooltip=\"The data source the exemplar is going to navigate to.\"\n        >\n          <DataSourcePicker\n            tracing={true}\n            current={value.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              onChange({\n                ...value,\n                datasourceUid: ds.uid,\n                url: undefined,\n              })\n            }\n          />\n        </InlineField>\n      ) : (\n        <InlineField\n          label=\"URL\"\n          labelWidth={24}\n          tooltip=\"The URL of the trace backend the user would go to see its trace.\"\n        >\n          <Input\n            placeholder=\"https://example.com/${__value.raw}\"\n            spellCheck={false}\n            width={40}\n            value={value.url}\n            onChange={(event) =>\n              onChange({\n                ...value,\n                datasourceUid: undefined,\n                url: event.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      )}\n\n      <InlineField\n        label=\"URL Label\"\n        labelWidth={24}\n        tooltip=\"Use to override the button label on the exemplar traceID field.\"\n      >\n        <Input\n          placeholder=\"Go to example.com\"\n          spellCheck={false}\n          width={40}\n          value={value.urlDisplayLabel}\n          onChange={(event) =>\n            onChange({\n              ...value,\n              urlDisplayLabel: event.currentTarget.value,\n            })\n          }\n        />\n      </InlineField>\n      <InlineField\n        label=\"Label name\"\n        labelWidth={24}\n        tooltip=\"The name of the field in the labels object that should be used to get the traceID.\"\n      >\n        <Input\n          placeholder=\"traceID\"\n          spellCheck={false}\n          width={40}\n          value={value.name}\n          onChange={(event) =>\n            onChange({\n              ...value,\n              name: event.currentTarget.value,\n            })\n          }\n        />\n      </InlineField>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}