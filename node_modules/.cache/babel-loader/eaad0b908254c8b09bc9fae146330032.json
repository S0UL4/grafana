{"ast":null,"code":"import { uniqueId } from 'lodash';\nimport React, { useRef } from 'react';\nimport { InlineField, Input } from '@grafana/ui';\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { SettingsEditorContainer } from '../../SettingsEditorContainer';\nimport { changeBucketAggregationSetting } from '../state/actions';\nimport { bucketAggregationConfig } from '../utils';\nimport { DateHistogramSettingsEditor } from './DateHistogramSettingsEditor';\nimport { FiltersSettingsEditor } from './FiltersSettingsEditor';\nimport { TermsSettingsEditor } from './TermsSettingsEditor';\nimport { useDescription } from './useDescription';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const inlineFieldProps = {\n  labelWidth: 16\n};\nexport const SettingsEditor = ({\n  bucketAgg\n}) => {\n  var _bucketAgg$settings, _bucketAggregationCon, _bucketAgg$settings2, _bucketAggregationCon2, _bucketAgg$settings3, _bucketAggregationCon3;\n\n  const {\n    current: baseId\n  } = useRef(uniqueId('es-setting-'));\n  const dispatch = useDispatch();\n  const settingsDescription = useDescription(bucketAgg);\n  return /*#__PURE__*/_jsxs(SettingsEditorContainer, {\n    label: settingsDescription,\n    children: [bucketAgg.type === 'terms' && /*#__PURE__*/_jsx(TermsSettingsEditor, {\n      bucketAgg: bucketAgg\n    }), bucketAgg.type === 'date_histogram' && /*#__PURE__*/_jsx(DateHistogramSettingsEditor, {\n      bucketAgg: bucketAgg\n    }), bucketAgg.type === 'filters' && /*#__PURE__*/_jsx(FiltersSettingsEditor, {\n      bucketAgg: bucketAgg\n    }), bucketAgg.type === 'geohash_grid' && /*#__PURE__*/_jsx(InlineField, Object.assign({\n      label: \"Precision\"\n    }, inlineFieldProps, {\n      children: /*#__PURE__*/_jsx(Input, {\n        id: `${baseId}-geohash_grid-precision`,\n        onBlur: e => dispatch(changeBucketAggregationSetting({\n          bucketAgg,\n          settingName: 'precision',\n          newValue: e.target.value\n        })),\n        defaultValue: ((_bucketAgg$settings = bucketAgg.settings) === null || _bucketAgg$settings === void 0 ? void 0 : _bucketAgg$settings.precision) || ((_bucketAggregationCon = bucketAggregationConfig[bucketAgg.type].defaultSettings) === null || _bucketAggregationCon === void 0 ? void 0 : _bucketAggregationCon.precision)\n      })\n    })), bucketAgg.type === 'histogram' && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(InlineField, Object.assign({\n        label: \"Interval\"\n      }, inlineFieldProps, {\n        children: /*#__PURE__*/_jsx(Input, {\n          id: `${baseId}-histogram-interval`,\n          onBlur: e => dispatch(changeBucketAggregationSetting({\n            bucketAgg,\n            settingName: 'interval',\n            newValue: e.target.value\n          })),\n          defaultValue: ((_bucketAgg$settings2 = bucketAgg.settings) === null || _bucketAgg$settings2 === void 0 ? void 0 : _bucketAgg$settings2.interval) || ((_bucketAggregationCon2 = bucketAggregationConfig[bucketAgg.type].defaultSettings) === null || _bucketAggregationCon2 === void 0 ? void 0 : _bucketAggregationCon2.interval)\n        })\n      })), /*#__PURE__*/_jsx(InlineField, Object.assign({\n        label: \"Min Doc Count\"\n      }, inlineFieldProps, {\n        children: /*#__PURE__*/_jsx(Input, {\n          id: `${baseId}-histogram-min_doc_count`,\n          onBlur: e => dispatch(changeBucketAggregationSetting({\n            bucketAgg,\n            settingName: 'min_doc_count',\n            newValue: e.target.value\n          })),\n          defaultValue: ((_bucketAgg$settings3 = bucketAgg.settings) === null || _bucketAgg$settings3 === void 0 ? void 0 : _bucketAgg$settings3.min_doc_count) || ((_bucketAggregationCon3 = bucketAggregationConfig[bucketAgg.type].defaultSettings) === null || _bucketAggregationCon3 === void 0 ? void 0 : _bucketAggregationCon3.min_doc_count)\n        })\n      }))]\n    })]\n  });\n};","map":{"version":3,"names":["uniqueId","React","useRef","InlineField","Input","useDispatch","SettingsEditorContainer","changeBucketAggregationSetting","bucketAggregationConfig","DateHistogramSettingsEditor","FiltersSettingsEditor","TermsSettingsEditor","useDescription","inlineFieldProps","labelWidth","SettingsEditor","bucketAgg","current","baseId","dispatch","settingsDescription","type","e","settingName","newValue","target","value","settings","precision","defaultSettings","interval","min_doc_count"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/index.tsx"],"sourcesContent":["import { uniqueId } from 'lodash';\nimport React, { ComponentProps, useRef } from 'react';\n\nimport { InlineField, Input } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { SettingsEditorContainer } from '../../SettingsEditorContainer';\nimport { BucketAggregation } from '../aggregations';\nimport { changeBucketAggregationSetting } from '../state/actions';\nimport { bucketAggregationConfig } from '../utils';\n\nimport { DateHistogramSettingsEditor } from './DateHistogramSettingsEditor';\nimport { FiltersSettingsEditor } from './FiltersSettingsEditor';\nimport { TermsSettingsEditor } from './TermsSettingsEditor';\nimport { useDescription } from './useDescription';\n\nexport const inlineFieldProps: Partial<ComponentProps<typeof InlineField>> = {\n  labelWidth: 16,\n};\n\ninterface Props {\n  bucketAgg: BucketAggregation;\n}\n\nexport const SettingsEditor = ({ bucketAgg }: Props) => {\n  const { current: baseId } = useRef(uniqueId('es-setting-'));\n\n  const dispatch = useDispatch();\n\n  const settingsDescription = useDescription(bucketAgg);\n\n  return (\n    <SettingsEditorContainer label={settingsDescription}>\n      {bucketAgg.type === 'terms' && <TermsSettingsEditor bucketAgg={bucketAgg} />}\n      {bucketAgg.type === 'date_histogram' && <DateHistogramSettingsEditor bucketAgg={bucketAgg} />}\n      {bucketAgg.type === 'filters' && <FiltersSettingsEditor bucketAgg={bucketAgg} />}\n\n      {bucketAgg.type === 'geohash_grid' && (\n        <InlineField label=\"Precision\" {...inlineFieldProps}>\n          <Input\n            id={`${baseId}-geohash_grid-precision`}\n            onBlur={(e) =>\n              dispatch(\n                changeBucketAggregationSetting({ bucketAgg, settingName: 'precision', newValue: e.target.value })\n              )\n            }\n            defaultValue={\n              bucketAgg.settings?.precision || bucketAggregationConfig[bucketAgg.type].defaultSettings?.precision\n            }\n          />\n        </InlineField>\n      )}\n\n      {bucketAgg.type === 'histogram' && (\n        <>\n          <InlineField label=\"Interval\" {...inlineFieldProps}>\n            <Input\n              id={`${baseId}-histogram-interval`}\n              onBlur={(e) =>\n                dispatch(\n                  changeBucketAggregationSetting({ bucketAgg, settingName: 'interval', newValue: e.target.value })\n                )\n              }\n              defaultValue={\n                bucketAgg.settings?.interval || bucketAggregationConfig[bucketAgg.type].defaultSettings?.interval\n              }\n            />\n          </InlineField>\n\n          <InlineField label=\"Min Doc Count\" {...inlineFieldProps}>\n            <Input\n              id={`${baseId}-histogram-min_doc_count`}\n              onBlur={(e) =>\n                dispatch(\n                  changeBucketAggregationSetting({ bucketAgg, settingName: 'min_doc_count', newValue: e.target.value })\n                )\n              }\n              defaultValue={\n                bucketAgg.settings?.min_doc_count ||\n                bucketAggregationConfig[bucketAgg.type].defaultSettings?.min_doc_count\n              }\n            />\n          </InlineField>\n        </>\n      )}\n    </SettingsEditorContainer>\n  );\n};\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,IAAgCC,MAAhC,QAA8C,OAA9C;AAEA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,aAAnC;AAEA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,uBAAT,QAAwC,+BAAxC;AAEA,SAASC,8BAAT,QAA+C,kBAA/C;AACA,SAASC,uBAAT,QAAwC,UAAxC;AAEA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;AAEA,OAAO,MAAMC,gBAA6D,GAAG;EAC3EC,UAAU,EAAE;AAD+D,CAAtE;AAQP,OAAO,MAAMC,cAAc,GAAG,CAAC;EAAEC;AAAF,CAAD,KAA0B;EAAA;;EACtD,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAsBhB,MAAM,CAACF,QAAQ,CAAC,aAAD,CAAT,CAAlC;EAEA,MAAMmB,QAAQ,GAAGd,WAAW,EAA5B;EAEA,MAAMe,mBAAmB,GAAGR,cAAc,CAACI,SAAD,CAA1C;EAEA,oBACE,MAAC,uBAAD;IAAyB,KAAK,EAAEI,mBAAhC;IAAA,WACGJ,SAAS,CAACK,IAAV,KAAmB,OAAnB,iBAA8B,KAAC,mBAAD;MAAqB,SAAS,EAAEL;IAAhC,EADjC,EAEGA,SAAS,CAACK,IAAV,KAAmB,gBAAnB,iBAAuC,KAAC,2BAAD;MAA6B,SAAS,EAAEL;IAAxC,EAF1C,EAGGA,SAAS,CAACK,IAAV,KAAmB,SAAnB,iBAAgC,KAAC,qBAAD;MAAuB,SAAS,EAAEL;IAAlC,EAHnC,EAKGA,SAAS,CAACK,IAAV,KAAmB,cAAnB,iBACC,KAAC,WAAD;MAAa,KAAK,EAAC;IAAnB,GAAmCR,gBAAnC;MAAA,uBACE,KAAC,KAAD;QACE,EAAE,EAAG,GAAEK,MAAO,yBADhB;QAEE,MAAM,EAAGI,CAAD,IACNH,QAAQ,CACNZ,8BAA8B,CAAC;UAAES,SAAF;UAAaO,WAAW,EAAE,WAA1B;UAAuCC,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;QAA1D,CAAD,CADxB,CAHZ;QAOE,YAAY,EACV,wBAAAV,SAAS,CAACW,QAAV,4EAAoBC,SAApB,+BAAiCpB,uBAAuB,CAACQ,SAAS,CAACK,IAAX,CAAvB,CAAwCQ,eAAzE,0DAAiC,sBAAyDD,SAA1F;MARJ;IADF,GANJ,EAqBGZ,SAAS,CAACK,IAAV,KAAmB,WAAnB,iBACC;MAAA,wBACE,KAAC,WAAD;QAAa,KAAK,EAAC;MAAnB,GAAkCR,gBAAlC;QAAA,uBACE,KAAC,KAAD;UACE,EAAE,EAAG,GAAEK,MAAO,qBADhB;UAEE,MAAM,EAAGI,CAAD,IACNH,QAAQ,CACNZ,8BAA8B,CAAC;YAAES,SAAF;YAAaO,WAAW,EAAE,UAA1B;YAAsCC,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;UAAzD,CAAD,CADxB,CAHZ;UAOE,YAAY,EACV,yBAAAV,SAAS,CAACW,QAAV,8EAAoBG,QAApB,gCAAgCtB,uBAAuB,CAACQ,SAAS,CAACK,IAAX,CAAvB,CAAwCQ,eAAxE,2DAAgC,uBAAyDC,QAAzF;QARJ;MADF,GADF,eAeE,KAAC,WAAD;QAAa,KAAK,EAAC;MAAnB,GAAuCjB,gBAAvC;QAAA,uBACE,KAAC,KAAD;UACE,EAAE,EAAG,GAAEK,MAAO,0BADhB;UAEE,MAAM,EAAGI,CAAD,IACNH,QAAQ,CACNZ,8BAA8B,CAAC;YAAES,SAAF;YAAaO,WAAW,EAAE,eAA1B;YAA2CC,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;UAA9D,CAAD,CADxB,CAHZ;UAOE,YAAY,EACV,yBAAAV,SAAS,CAACW,QAAV,8EAAoBI,aAApB,gCACAvB,uBAAuB,CAACQ,SAAS,CAACK,IAAX,CAAvB,CAAwCQ,eADxC,2DACA,uBAAyDE,aADzD;QARJ;MADF,GAfF;IAAA,EAtBJ;EAAA,EADF;AAwDD,CA/DM"},"metadata":{},"sourceType":"module"}