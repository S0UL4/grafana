{"ast":null,"code":"var _div, _div2;\n\nimport { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useMemo, useCallback } from 'react';\nimport { DataTransformerID, standardTransformers, getFieldDisplayName, FieldType, ValueMatcherID, valueMatchers } from '@grafana/data';\nimport { FilterByValueMatch, FilterByValueType } from '@grafana/data/src/transformations/transformers/filterByValue';\nimport { Button, RadioButtonGroup, stylesFactory } from '@grafana/ui';\nimport { FilterByValueFilterEditor } from './FilterByValueFilterEditor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst filterTypes = [{\n  label: 'Include',\n  value: FilterByValueType.include\n}, {\n  label: 'Exclude',\n  value: FilterByValueType.exclude\n}];\nconst filterMatch = [{\n  label: 'Match all',\n  value: FilterByValueMatch.all\n}, {\n  label: 'Match any',\n  value: FilterByValueMatch.any\n}];\nexport const FilterByValueTransformerEditor = props => {\n  const {\n    input,\n    options,\n    onChange\n  } = props;\n  const styles = getEditorStyles();\n  const fieldsInfo = useFieldsInfo(input);\n  const onAddFilter = useCallback(() => {\n    const frame = input[0];\n    const field = frame.fields.find(f => f.type !== FieldType.time);\n\n    if (!field) {\n      return;\n    }\n\n    const filters = cloneDeep(options.filters);\n    const matcher = valueMatchers.get(ValueMatcherID.greater);\n    filters.push({\n      fieldName: getFieldDisplayName(field, frame, input),\n      config: {\n        id: matcher.id,\n        options: matcher.getDefaultOptions(field)\n      }\n    });\n    onChange(Object.assign({}, options, {\n      filters\n    }));\n  }, [onChange, options, input]);\n  const onDeleteFilter = useCallback(index => {\n    let filters = cloneDeep(options.filters);\n    filters.splice(index, 1);\n    onChange(Object.assign({}, options, {\n      filters\n    }));\n  }, [options, onChange]);\n  const onChangeFilter = useCallback((filter, index) => {\n    let filters = cloneDeep(options.filters);\n    filters[index] = filter;\n    onChange(Object.assign({}, options, {\n      filters\n    }));\n  }, [options, onChange]);\n  const onChangeType = useCallback(type => {\n    onChange(Object.assign({}, options, {\n      type: type !== null && type !== void 0 ? type : FilterByValueType.include\n    }));\n  }, [options, onChange]);\n  const onChangeMatch = useCallback(match => {\n    onChange(Object.assign({}, options, {\n      match: match !== null && match !== void 0 ? match : FilterByValueMatch.all\n    }));\n  }, [options, onChange]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form-inline\",\n      children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label width-8\",\n        children: \"Filter type\"\n      })), /*#__PURE__*/_jsx(\"div\", {\n        className: \"width-15\",\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          options: filterTypes,\n          value: options.type,\n          onChange: onChangeType,\n          fullWidth: true\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form-inline\",\n      children: [_div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label width-8\",\n        children: \"Conditions\"\n      })), /*#__PURE__*/_jsx(\"div\", {\n        className: \"width-15\",\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          options: filterMatch,\n          value: options.match,\n          onChange: onChangeMatch,\n          fullWidth: true\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.conditions,\n      children: [options.filters.map((filter, idx) => /*#__PURE__*/_jsx(FilterByValueFilterEditor, {\n        filter: filter,\n        fieldsInfo: fieldsInfo,\n        onChange: filter => onChangeFilter(filter, idx),\n        onDelete: () => onDeleteFilter(idx)\n      }, idx)), /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form\",\n        children: /*#__PURE__*/_jsx(Button, {\n          icon: \"plus\",\n          size: \"sm\",\n          onClick: onAddFilter,\n          variant: \"secondary\",\n          children: \"Add condition\"\n        })\n      })]\n    })]\n  });\n};\nexport const filterByValueTransformRegistryItem = {\n  id: DataTransformerID.filterByValue,\n  editor: FilterByValueTransformerEditor,\n  transformation: standardTransformers.filterByValueTransformer,\n  name: standardTransformers.filterByValueTransformer.name,\n  description: 'Removes rows of the query results using user-defined filters. This is useful if you can not filter your data in the data source.'\n};\nconst getEditorStyles = stylesFactory(() => ({\n  conditions: css`\n    padding-left: 16px;\n  `\n}));\n\nconst useFieldsInfo = data => {\n  return useMemo(() => {\n    const meta = {\n      fieldsAsOptions: [],\n      fieldByDisplayName: {}\n    };\n\n    if (!Array.isArray(data)) {\n      return meta;\n    }\n\n    return data.reduce((meta, frame) => {\n      return frame.fields.reduce((meta, field) => {\n        const fieldName = getFieldDisplayName(field, frame, data);\n\n        if (meta.fieldByDisplayName[fieldName]) {\n          return meta;\n        }\n\n        meta.fieldsAsOptions.push({\n          label: fieldName,\n          value: fieldName,\n          type: field.type\n        });\n        meta.fieldByDisplayName[fieldName] = field;\n        return meta;\n      }, meta);\n    }, meta);\n  }, [data]);\n};","map":{"version":3,"names":["css","cloneDeep","React","useMemo","useCallback","DataTransformerID","standardTransformers","getFieldDisplayName","FieldType","ValueMatcherID","valueMatchers","FilterByValueMatch","FilterByValueType","Button","RadioButtonGroup","stylesFactory","FilterByValueFilterEditor","filterTypes","label","value","include","exclude","filterMatch","all","any","FilterByValueTransformerEditor","props","input","options","onChange","styles","getEditorStyles","fieldsInfo","useFieldsInfo","onAddFilter","frame","field","fields","find","f","type","time","filters","matcher","get","greater","push","fieldName","config","id","getDefaultOptions","onDeleteFilter","index","splice","onChangeFilter","filter","onChangeType","onChangeMatch","match","conditions","map","idx","filterByValueTransformRegistryItem","filterByValue","editor","transformation","filterByValueTransformer","name","description","data","meta","fieldsAsOptions","fieldByDisplayName","Array","isArray","reduce"],"sources":["/home/soula/grafana/public/app/features/transformers/FilterByValueTransformer/FilterByValueTransformerEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useMemo, useCallback } from 'react';\n\nimport {\n  DataTransformerID,\n  standardTransformers,\n  TransformerRegistryItem,\n  TransformerUIProps,\n  getFieldDisplayName,\n  DataFrame,\n  SelectableValue,\n  FieldType,\n  ValueMatcherID,\n  valueMatchers,\n} from '@grafana/data';\nimport {\n  FilterByValueFilter,\n  FilterByValueMatch,\n  FilterByValueTransformerOptions,\n  FilterByValueType,\n} from '@grafana/data/src/transformations/transformers/filterByValue';\nimport { Button, RadioButtonGroup, stylesFactory } from '@grafana/ui';\n\nimport { DataFrameFieldsInfo, FilterByValueFilterEditor } from './FilterByValueFilterEditor';\n\nconst filterTypes: Array<SelectableValue<FilterByValueType>> = [\n  { label: 'Include', value: FilterByValueType.include },\n  { label: 'Exclude', value: FilterByValueType.exclude },\n];\n\nconst filterMatch: Array<SelectableValue<FilterByValueMatch>> = [\n  { label: 'Match all', value: FilterByValueMatch.all },\n  { label: 'Match any', value: FilterByValueMatch.any },\n];\n\nexport const FilterByValueTransformerEditor: React.FC<TransformerUIProps<FilterByValueTransformerOptions>> = (\n  props\n) => {\n  const { input, options, onChange } = props;\n  const styles = getEditorStyles();\n  const fieldsInfo = useFieldsInfo(input);\n\n  const onAddFilter = useCallback(() => {\n    const frame = input[0];\n    const field = frame.fields.find((f) => f.type !== FieldType.time);\n\n    if (!field) {\n      return;\n    }\n\n    const filters = cloneDeep(options.filters);\n    const matcher = valueMatchers.get(ValueMatcherID.greater);\n\n    filters.push({\n      fieldName: getFieldDisplayName(field, frame, input),\n      config: {\n        id: matcher.id,\n        options: matcher.getDefaultOptions(field),\n      },\n    });\n    onChange({ ...options, filters });\n  }, [onChange, options, input]);\n\n  const onDeleteFilter = useCallback(\n    (index: number) => {\n      let filters = cloneDeep(options.filters);\n      filters.splice(index, 1);\n      onChange({ ...options, filters });\n    },\n    [options, onChange]\n  );\n\n  const onChangeFilter = useCallback(\n    (filter: FilterByValueFilter, index: number) => {\n      let filters = cloneDeep(options.filters);\n      filters[index] = filter;\n      onChange({ ...options, filters });\n    },\n    [options, onChange]\n  );\n\n  const onChangeType = useCallback(\n    (type?: FilterByValueType) => {\n      onChange({\n        ...options,\n        type: type ?? FilterByValueType.include,\n      });\n    },\n    [options, onChange]\n  );\n\n  const onChangeMatch = useCallback(\n    (match?: FilterByValueMatch) => {\n      onChange({\n        ...options,\n        match: match ?? FilterByValueMatch.all,\n      });\n    },\n    [options, onChange]\n  );\n\n  return (\n    <div>\n      <div className=\"gf-form gf-form-inline\">\n        <div className=\"gf-form-label width-8\">Filter type</div>\n        <div className=\"width-15\">\n          <RadioButtonGroup options={filterTypes} value={options.type} onChange={onChangeType} fullWidth />\n        </div>\n      </div>\n      <div className=\"gf-form gf-form-inline\">\n        <div className=\"gf-form-label width-8\">Conditions</div>\n        <div className=\"width-15\">\n          <RadioButtonGroup options={filterMatch} value={options.match} onChange={onChangeMatch} fullWidth />\n        </div>\n      </div>\n      <div className={styles.conditions}>\n        {options.filters.map((filter, idx) => (\n          <FilterByValueFilterEditor\n            key={idx}\n            filter={filter}\n            fieldsInfo={fieldsInfo}\n            onChange={(filter) => onChangeFilter(filter, idx)}\n            onDelete={() => onDeleteFilter(idx)}\n          />\n        ))}\n        <div className=\"gf-form\">\n          <Button icon=\"plus\" size=\"sm\" onClick={onAddFilter} variant=\"secondary\">\n            Add condition\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const filterByValueTransformRegistryItem: TransformerRegistryItem<FilterByValueTransformerOptions> = {\n  id: DataTransformerID.filterByValue,\n  editor: FilterByValueTransformerEditor,\n  transformation: standardTransformers.filterByValueTransformer,\n  name: standardTransformers.filterByValueTransformer.name,\n  description:\n    'Removes rows of the query results using user-defined filters. This is useful if you can not filter your data in the data source.',\n};\n\nconst getEditorStyles = stylesFactory(() => ({\n  conditions: css`\n    padding-left: 16px;\n  `,\n}));\n\nconst useFieldsInfo = (data: DataFrame[]): DataFrameFieldsInfo => {\n  return useMemo(() => {\n    const meta = {\n      fieldsAsOptions: [],\n      fieldByDisplayName: {},\n    };\n\n    if (!Array.isArray(data)) {\n      return meta;\n    }\n\n    return data.reduce((meta: DataFrameFieldsInfo, frame) => {\n      return frame.fields.reduce((meta, field) => {\n        const fieldName = getFieldDisplayName(field, frame, data);\n\n        if (meta.fieldByDisplayName[fieldName]) {\n          return meta;\n        }\n\n        meta.fieldsAsOptions.push({\n          label: fieldName,\n          value: fieldName,\n          type: field.type,\n        });\n\n        meta.fieldByDisplayName[fieldName] = field;\n\n        return meta;\n      }, meta);\n    }, meta);\n  }, [data]);\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AAEA,SACEC,iBADF,EAEEC,oBAFF,EAKEC,mBALF,EAQEC,SARF,EASEC,cATF,EAUEC,aAVF,QAWO,eAXP;AAYA,SAEEC,kBAFF,EAIEC,iBAJF,QAKO,8DALP;AAMA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,aAAnC,QAAwD,aAAxD;AAEA,SAA8BC,yBAA9B,QAA+D,6BAA/D;;;AAEA,MAAMC,WAAsD,GAAG,CAC7D;EAAEC,KAAK,EAAE,SAAT;EAAoBC,KAAK,EAAEP,iBAAiB,CAACQ;AAA7C,CAD6D,EAE7D;EAAEF,KAAK,EAAE,SAAT;EAAoBC,KAAK,EAAEP,iBAAiB,CAACS;AAA7C,CAF6D,CAA/D;AAKA,MAAMC,WAAuD,GAAG,CAC9D;EAAEJ,KAAK,EAAE,WAAT;EAAsBC,KAAK,EAAER,kBAAkB,CAACY;AAAhD,CAD8D,EAE9D;EAAEL,KAAK,EAAE,WAAT;EAAsBC,KAAK,EAAER,kBAAkB,CAACa;AAAhD,CAF8D,CAAhE;AAKA,OAAO,MAAMC,8BAA6F,GACxGC,KAD2G,IAExG;EACH,MAAM;IAAEC,KAAF;IAASC,OAAT;IAAkBC;EAAlB,IAA+BH,KAArC;EACA,MAAMI,MAAM,GAAGC,eAAe,EAA9B;EACA,MAAMC,UAAU,GAAGC,aAAa,CAACN,KAAD,CAAhC;EAEA,MAAMO,WAAW,GAAG9B,WAAW,CAAC,MAAM;IACpC,MAAM+B,KAAK,GAAGR,KAAK,CAAC,CAAD,CAAnB;IACA,MAAMS,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWhC,SAAS,CAACiC,IAA9C,CAAd;;IAEA,IAAI,CAACL,KAAL,EAAY;MACV;IACD;;IAED,MAAMM,OAAO,GAAGzC,SAAS,CAAC2B,OAAO,CAACc,OAAT,CAAzB;IACA,MAAMC,OAAO,GAAGjC,aAAa,CAACkC,GAAd,CAAkBnC,cAAc,CAACoC,OAAjC,CAAhB;IAEAH,OAAO,CAACI,IAAR,CAAa;MACXC,SAAS,EAAExC,mBAAmB,CAAC6B,KAAD,EAAQD,KAAR,EAAeR,KAAf,CADnB;MAEXqB,MAAM,EAAE;QACNC,EAAE,EAAEN,OAAO,CAACM,EADN;QAENrB,OAAO,EAAEe,OAAO,CAACO,iBAAR,CAA0Bd,KAA1B;MAFH;IAFG,CAAb;IAOAP,QAAQ,mBAAMD,OAAN;MAAec;IAAf,GAAR;EACD,CAnB8B,EAmB5B,CAACb,QAAD,EAAWD,OAAX,EAAoBD,KAApB,CAnB4B,CAA/B;EAqBA,MAAMwB,cAAc,GAAG/C,WAAW,CAC/BgD,KAAD,IAAmB;IACjB,IAAIV,OAAO,GAAGzC,SAAS,CAAC2B,OAAO,CAACc,OAAT,CAAvB;IACAA,OAAO,CAACW,MAAR,CAAeD,KAAf,EAAsB,CAAtB;IACAvB,QAAQ,mBAAMD,OAAN;MAAec;IAAf,GAAR;EACD,CAL+B,EAMhC,CAACd,OAAD,EAAUC,QAAV,CANgC,CAAlC;EASA,MAAMyB,cAAc,GAAGlD,WAAW,CAChC,CAACmD,MAAD,EAA8BH,KAA9B,KAAgD;IAC9C,IAAIV,OAAO,GAAGzC,SAAS,CAAC2B,OAAO,CAACc,OAAT,CAAvB;IACAA,OAAO,CAACU,KAAD,CAAP,GAAiBG,MAAjB;IACA1B,QAAQ,mBAAMD,OAAN;MAAec;IAAf,GAAR;EACD,CAL+B,EAMhC,CAACd,OAAD,EAAUC,QAAV,CANgC,CAAlC;EASA,MAAM2B,YAAY,GAAGpD,WAAW,CAC7BoC,IAAD,IAA8B;IAC5BX,QAAQ,mBACHD,OADG;MAENY,IAAI,EAAEA,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU5B,iBAAiB,CAACQ;IAF1B,GAAR;EAID,CAN6B,EAO9B,CAACQ,OAAD,EAAUC,QAAV,CAP8B,CAAhC;EAUA,MAAM4B,aAAa,GAAGrD,WAAW,CAC9BsD,KAAD,IAAgC;IAC9B7B,QAAQ,mBACHD,OADG;MAEN8B,KAAK,EAAEA,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW/C,kBAAkB,CAACY;IAF7B,GAAR;EAID,CAN8B,EAO/B,CAACK,OAAD,EAAUC,QAAV,CAP+B,CAAjC;EAUA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,wBAAf;MAAA,wCACE;QAAK,SAAS,EAAC,uBAAf;QAAA;MAAA,EADF,gBAEE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,KAAC,gBAAD;UAAkB,OAAO,EAAEZ,WAA3B;UAAwC,KAAK,EAAEW,OAAO,CAACY,IAAvD;UAA6D,QAAQ,EAAEgB,YAAvE;UAAqF,SAAS;QAA9F;MADF,EAFF;IAAA,EADF,eAOE;MAAK,SAAS,EAAC,wBAAf;MAAA,0CACE;QAAK,SAAS,EAAC,uBAAf;QAAA;MAAA,EADF,gBAEE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,KAAC,gBAAD;UAAkB,OAAO,EAAElC,WAA3B;UAAwC,KAAK,EAAEM,OAAO,CAAC8B,KAAvD;UAA8D,QAAQ,EAAED,aAAxE;UAAuF,SAAS;QAAhG;MADF,EAFF;IAAA,EAPF,eAaE;MAAK,SAAS,EAAE3B,MAAM,CAAC6B,UAAvB;MAAA,WACG/B,OAAO,CAACc,OAAR,CAAgBkB,GAAhB,CAAoB,CAACL,MAAD,EAASM,GAAT,kBACnB,KAAC,yBAAD;QAEE,MAAM,EAAEN,MAFV;QAGE,UAAU,EAAEvB,UAHd;QAIE,QAAQ,EAAGuB,MAAD,IAAYD,cAAc,CAACC,MAAD,EAASM,GAAT,CAJtC;QAKE,QAAQ,EAAE,MAAMV,cAAc,CAACU,GAAD;MALhC,GACOA,GADP,CADD,CADH,eAUE;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE,KAAC,MAAD;UAAQ,IAAI,EAAC,MAAb;UAAoB,IAAI,EAAC,IAAzB;UAA8B,OAAO,EAAE3B,WAAvC;UAAoD,OAAO,EAAC,WAA5D;UAAA;QAAA;MADF,EAVF;IAAA,EAbF;EAAA,EADF;AAgCD,CAlGM;AAoGP,OAAO,MAAM4B,kCAA4F,GAAG;EAC1Gb,EAAE,EAAE5C,iBAAiB,CAAC0D,aADoF;EAE1GC,MAAM,EAAEvC,8BAFkG;EAG1GwC,cAAc,EAAE3D,oBAAoB,CAAC4D,wBAHqE;EAI1GC,IAAI,EAAE7D,oBAAoB,CAAC4D,wBAArB,CAA8CC,IAJsD;EAK1GC,WAAW,EACT;AANwG,CAArG;AASP,MAAMrC,eAAe,GAAGhB,aAAa,CAAC,OAAO;EAC3C4C,UAAU,EAAE3D,GAAI;AAClB;AACA;AAH6C,CAAP,CAAD,CAArC;;AAMA,MAAMiC,aAAa,GAAIoC,IAAD,IAA4C;EAChE,OAAOlE,OAAO,CAAC,MAAM;IACnB,MAAMmE,IAAI,GAAG;MACXC,eAAe,EAAE,EADN;MAEXC,kBAAkB,EAAE;IAFT,CAAb;;IAKA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAL,EAA0B;MACxB,OAAOC,IAAP;IACD;;IAED,OAAOD,IAAI,CAACM,MAAL,CAAY,CAACL,IAAD,EAA4BnC,KAA5B,KAAsC;MACvD,OAAOA,KAAK,CAACE,MAAN,CAAasC,MAAb,CAAoB,CAACL,IAAD,EAAOlC,KAAP,KAAiB;QAC1C,MAAMW,SAAS,GAAGxC,mBAAmB,CAAC6B,KAAD,EAAQD,KAAR,EAAekC,IAAf,CAArC;;QAEA,IAAIC,IAAI,CAACE,kBAAL,CAAwBzB,SAAxB,CAAJ,EAAwC;UACtC,OAAOuB,IAAP;QACD;;QAEDA,IAAI,CAACC,eAAL,CAAqBzB,IAArB,CAA0B;UACxB5B,KAAK,EAAE6B,SADiB;UAExB5B,KAAK,EAAE4B,SAFiB;UAGxBP,IAAI,EAAEJ,KAAK,CAACI;QAHY,CAA1B;QAMA8B,IAAI,CAACE,kBAAL,CAAwBzB,SAAxB,IAAqCX,KAArC;QAEA,OAAOkC,IAAP;MACD,CAhBM,EAgBJA,IAhBI,CAAP;IAiBD,CAlBM,EAkBJA,IAlBI,CAAP;EAmBD,CA7Ba,EA6BX,CAACD,IAAD,CA7BW,CAAd;AA8BD,CA/BD"},"metadata":{},"sourceType":"module"}