{"ast":null,"code":"import React from 'react';\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { IconButton } from '../../IconButton';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\nimport { BucketAggregationEditor } from './BucketAggregationEditor';\nimport { addBucketAggregation, removeBucketAggregation } from './state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const BucketAggregationsEditor = ({\n  nextId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    bucketAggs\n  } = useQuery();\n  const totalBucketAggs = (bucketAggs === null || bucketAggs === void 0 ? void 0 : bucketAggs.length) || 0;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: bucketAggs.map((bucketAgg, index) => /*#__PURE__*/_jsxs(QueryEditorRow, {\n      label: index === 0 ? 'Group By' : 'Then By',\n      onRemoveClick: totalBucketAggs > 1 && (() => dispatch(removeBucketAggregation(bucketAgg.id))),\n      children: [/*#__PURE__*/_jsx(BucketAggregationEditor, {\n        value: bucketAgg\n      }), index === 0 && /*#__PURE__*/_jsx(IconButton, {\n        iconName: \"plus\",\n        onClick: () => dispatch(addBucketAggregation(nextId)),\n        label: \"add\"\n      })]\n    }, `${bucketAgg.type}-${bucketAgg.id}`))\n  });\n};","map":{"version":3,"names":["React","useDispatch","IconButton","useQuery","QueryEditorRow","BucketAggregationEditor","addBucketAggregation","removeBucketAggregation","BucketAggregationsEditor","nextId","dispatch","bucketAggs","totalBucketAggs","length","map","bucketAgg","index","id","type"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { IconButton } from '../../IconButton';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\n\nimport { BucketAggregationEditor } from './BucketAggregationEditor';\nimport { BucketAggregation } from './aggregations';\nimport { addBucketAggregation, removeBucketAggregation } from './state/actions';\n\ninterface Props {\n  nextId: BucketAggregation['id'];\n}\n\nexport const BucketAggregationsEditor = ({ nextId }: Props) => {\n  const dispatch = useDispatch();\n  const { bucketAggs } = useQuery();\n  const totalBucketAggs = bucketAggs?.length || 0;\n\n  return (\n    <>\n      {bucketAggs!.map((bucketAgg, index) => (\n        <QueryEditorRow\n          key={`${bucketAgg.type}-${bucketAgg.id}`}\n          label={index === 0 ? 'Group By' : 'Then By'}\n          onRemoveClick={totalBucketAggs > 1 && (() => dispatch(removeBucketAggregation(bucketAgg.id)))}\n        >\n          <BucketAggregationEditor value={bucketAgg} />\n\n          {index === 0 && (\n            <IconButton iconName=\"plus\" onClick={() => dispatch(addBucketAggregation(nextId))} label=\"add\" />\n          )}\n        </QueryEditorRow>\n      ))}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;AAEA,SAASC,oBAAT,EAA+BC,uBAA/B,QAA8D,iBAA9D;;;;AAMA,OAAO,MAAMC,wBAAwB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAuB;EAC7D,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM;IAAEU;EAAF,IAAiBR,QAAQ,EAA/B;EACA,MAAMS,eAAe,GAAG,CAAAD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEE,MAAZ,KAAsB,CAA9C;EAEA,oBACE;IAAA,UACGF,UAAU,CAAEG,GAAZ,CAAgB,CAACC,SAAD,EAAYC,KAAZ,kBACf,MAAC,cAAD;MAEE,KAAK,EAAEA,KAAK,KAAK,CAAV,GAAc,UAAd,GAA2B,SAFpC;MAGE,aAAa,EAAEJ,eAAe,GAAG,CAAlB,KAAwB,MAAMF,QAAQ,CAACH,uBAAuB,CAACQ,SAAS,CAACE,EAAX,CAAxB,CAAtC,CAHjB;MAAA,wBAKE,KAAC,uBAAD;QAAyB,KAAK,EAAEF;MAAhC,EALF,EAOGC,KAAK,KAAK,CAAV,iBACC,KAAC,UAAD;QAAY,QAAQ,EAAC,MAArB;QAA4B,OAAO,EAAE,MAAMN,QAAQ,CAACJ,oBAAoB,CAACG,MAAD,CAArB,CAAnD;QAAmF,KAAK,EAAC;MAAzF,EARJ;IAAA,GACQ,GAAEM,SAAS,CAACG,IAAK,IAAGH,SAAS,CAACE,EAAG,EADzC,CADD;EADH,EADF;AAiBD,CAtBM"},"metadata":{},"sourceType":"module"}