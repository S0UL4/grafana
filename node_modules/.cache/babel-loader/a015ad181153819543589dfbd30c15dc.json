{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { AppEvents } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport appEvents from 'app/core/app_events';\nimport config from 'app/core/config';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOauthEnabled = () => {\n  return !!config.oauth && Object.keys(config.oauth).length > 0;\n};\n\nexport class LoginCtrl extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"result\", {});\n\n    _defineProperty(this, \"changePassword\", password => {\n      const pw = {\n        newPassword: password,\n        confirmNew: password,\n        oldPassword: 'admin'\n      };\n\n      if (this.props.resetCode) {\n        const resetModel = {\n          code: this.props.resetCode,\n          newPassword: password,\n          confirmPassword: password\n        };\n        getBackendSrv().post('/api/user/password/reset', resetModel).then(() => {\n          this.toGrafana();\n        });\n      } else {\n        getBackendSrv().put('/api/user/password', pw).then(() => {\n          this.toGrafana();\n        }).catch(err => console.error(err));\n      }\n    });\n\n    _defineProperty(this, \"login\", formModel => {\n      this.setState({\n        isLoggingIn: true\n      });\n      getBackendSrv().post('/login', formModel).then(result => {\n        this.result = result;\n\n        if (formModel.password !== 'admin' || config.ldapEnabled || config.authProxyEnabled) {\n          this.toGrafana();\n          return;\n        } else {\n          this.changeView();\n        }\n      }).catch(() => {\n        this.setState({\n          isLoggingIn: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"changeView\", () => {\n      this.setState({\n        isChangingPassword: true\n      });\n    });\n\n    _defineProperty(this, \"toGrafana\", () => {\n      // Use window.location.href to force page reload\n      if (this.result.redirectUrl) {\n        if (config.appSubUrl !== '' && !this.result.redirectUrl.startsWith(config.appSubUrl)) {\n          window.location.assign(config.appSubUrl + this.result.redirectUrl);\n        } else {\n          window.location.assign(this.result.redirectUrl);\n        }\n      } else {\n        window.location.assign(config.appSubUrl + '/');\n      }\n    });\n\n    this.state = {\n      isLoggingIn: false,\n      isChangingPassword: false\n    };\n\n    if (config.loginError) {\n      appEvents.emit(AppEvents.alertWarning, ['Login Failed', config.loginError]);\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isLoggingIn,\n      isChangingPassword\n    } = this.state;\n    const {\n      login,\n      toGrafana,\n      changePassword\n    } = this;\n    const {\n      loginHint,\n      passwordHint,\n      disableLoginForm,\n      ldapEnabled,\n      authProxyEnabled,\n      disableUserSignUp\n    } = config;\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: children({\n        isOauthEnabled: isOauthEnabled(),\n        loginHint,\n        passwordHint,\n        disableLoginForm,\n        ldapEnabled,\n        authProxyEnabled,\n        disableUserSignUp,\n        login,\n        isLoggingIn,\n        changePassword,\n        skipPasswordChange: toGrafana,\n        isChangingPassword\n      })\n    });\n  }\n\n}\nexport default LoginCtrl;","map":{"version":3,"names":["React","PureComponent","AppEvents","getBackendSrv","appEvents","config","isOauthEnabled","oauth","Object","keys","length","LoginCtrl","constructor","props","password","pw","newPassword","confirmNew","oldPassword","resetCode","resetModel","code","confirmPassword","post","then","toGrafana","put","catch","err","console","error","formModel","setState","isLoggingIn","result","ldapEnabled","authProxyEnabled","changeView","isChangingPassword","redirectUrl","appSubUrl","startsWith","window","location","assign","state","loginError","emit","alertWarning","render","children","login","changePassword","loginHint","passwordHint","disableLoginForm","disableUserSignUp","skipPasswordChange"],"sources":["/home/soula/grafana/public/app/core/components/Login/LoginCtrl.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { AppEvents } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport appEvents from 'app/core/app_events';\nimport config from 'app/core/config';\n\nconst isOauthEnabled = () => {\n  return !!config.oauth && Object.keys(config.oauth).length > 0;\n};\n\nexport interface FormModel {\n  user: string;\n  password: string;\n  email: string;\n}\n\ninterface Props {\n  resetCode?: string;\n\n  children: (props: {\n    isLoggingIn: boolean;\n    changePassword: (pw: string) => void;\n    isChangingPassword: boolean;\n    skipPasswordChange: Function;\n    login: (data: FormModel) => void;\n    disableLoginForm: boolean;\n    ldapEnabled: boolean;\n    authProxyEnabled: boolean;\n    disableUserSignUp: boolean;\n    isOauthEnabled: boolean;\n    loginHint: string;\n    passwordHint: string;\n  }) => JSX.Element;\n}\n\ninterface State {\n  isLoggingIn: boolean;\n  isChangingPassword: boolean;\n}\n\nexport class LoginCtrl extends PureComponent<Props, State> {\n  result: any = {};\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoggingIn: false,\n      isChangingPassword: false,\n    };\n\n    if (config.loginError) {\n      appEvents.emit(AppEvents.alertWarning, ['Login Failed', config.loginError]);\n    }\n  }\n\n  changePassword = (password: string) => {\n    const pw = {\n      newPassword: password,\n      confirmNew: password,\n      oldPassword: 'admin',\n    };\n\n    if (this.props.resetCode) {\n      const resetModel = {\n        code: this.props.resetCode,\n        newPassword: password,\n        confirmPassword: password,\n      };\n\n      getBackendSrv()\n        .post('/api/user/password/reset', resetModel)\n        .then(() => {\n          this.toGrafana();\n        });\n    } else {\n      getBackendSrv()\n        .put('/api/user/password', pw)\n        .then(() => {\n          this.toGrafana();\n        })\n        .catch((err: any) => console.error(err));\n    }\n  };\n\n  login = (formModel: FormModel) => {\n    this.setState({\n      isLoggingIn: true,\n    });\n\n    getBackendSrv()\n      .post('/login', formModel)\n      .then((result: any) => {\n        this.result = result;\n        if (formModel.password !== 'admin' || config.ldapEnabled || config.authProxyEnabled) {\n          this.toGrafana();\n          return;\n        } else {\n          this.changeView();\n        }\n      })\n      .catch(() => {\n        this.setState({\n          isLoggingIn: false,\n        });\n      });\n  };\n\n  changeView = () => {\n    this.setState({\n      isChangingPassword: true,\n    });\n  };\n\n  toGrafana = () => {\n    // Use window.location.href to force page reload\n    if (this.result.redirectUrl) {\n      if (config.appSubUrl !== '' && !this.result.redirectUrl.startsWith(config.appSubUrl)) {\n        window.location.assign(config.appSubUrl + this.result.redirectUrl);\n      } else {\n        window.location.assign(this.result.redirectUrl);\n      }\n    } else {\n      window.location.assign(config.appSubUrl + '/');\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggingIn, isChangingPassword } = this.state;\n    const { login, toGrafana, changePassword } = this;\n    const { loginHint, passwordHint, disableLoginForm, ldapEnabled, authProxyEnabled, disableUserSignUp } = config;\n\n    return (\n      <>\n        {children({\n          isOauthEnabled: isOauthEnabled(),\n          loginHint,\n          passwordHint,\n          disableLoginForm,\n          ldapEnabled,\n          authProxyEnabled,\n          disableUserSignUp,\n          login,\n          isLoggingIn,\n          changePassword,\n          skipPasswordChange: toGrafana,\n          isChangingPassword,\n        })}\n      </>\n    );\n  }\n}\n\nexport default LoginCtrl;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}