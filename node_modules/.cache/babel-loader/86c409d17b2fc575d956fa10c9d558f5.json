{"ast":null,"code":"import { useMemo } from 'react';\n\n/**\n * As we need 2 dataframes for the service map, one with nodes and one with edges we have to figure out which is which.\n * Right now we do not have any metadata for it so we just check preferredVisualisationType and then column names.\n * TODO: maybe we could use column labels to have a better way to do this\n */\nexport function useCategorizeFrames(series) {\n  return useMemo(() => {\n    return series.reduce((acc, frame) => {\n      const sourceField = frame.fields.filter(f => f.name === 'source');\n\n      if (sourceField.length) {\n        acc.edges.push(frame);\n      } else {\n        acc.nodes.push(frame);\n      }\n\n      return acc;\n    }, {\n      edges: [],\n      nodes: []\n    });\n  }, [series]);\n}","map":{"version":3,"names":["useMemo","useCategorizeFrames","series","reduce","acc","frame","sourceField","fields","filter","f","name","length","edges","push","nodes"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/useCategorizeFrames.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { DataFrame } from '@grafana/data';\n\n/**\n * As we need 2 dataframes for the service map, one with nodes and one with edges we have to figure out which is which.\n * Right now we do not have any metadata for it so we just check preferredVisualisationType and then column names.\n * TODO: maybe we could use column labels to have a better way to do this\n */\nexport function useCategorizeFrames(series: DataFrame[]) {\n  return useMemo(() => {\n    return series.reduce(\n      (acc, frame) => {\n        const sourceField = frame.fields.filter((f) => f.name === 'source');\n        if (sourceField.length) {\n          acc.edges.push(frame);\n        } else {\n          acc.nodes.push(frame);\n        }\n        return acc;\n      },\n      { edges: [], nodes: [] } as { nodes: DataFrame[]; edges: DataFrame[] }\n    );\n  }, [series]);\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAIA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAT,CAA6BC,MAA7B,EAAkD;EACvD,OAAOF,OAAO,CAAC,MAAM;IACnB,OAAOE,MAAM,CAACC,MAAP,CACL,CAACC,GAAD,EAAMC,KAAN,KAAgB;MACd,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,QAAtC,CAApB;;MACA,IAAIJ,WAAW,CAACK,MAAhB,EAAwB;QACtBP,GAAG,CAACQ,KAAJ,CAAUC,IAAV,CAAeR,KAAf;MACD,CAFD,MAEO;QACLD,GAAG,CAACU,KAAJ,CAAUD,IAAV,CAAeR,KAAf;MACD;;MACD,OAAOD,GAAP;IACD,CATI,EAUL;MAAEQ,KAAK,EAAE,EAAT;MAAaE,KAAK,EAAE;IAApB,CAVK,CAAP;EAYD,CAba,EAaX,CAACZ,MAAD,CAbW,CAAd;AAcD"},"metadata":{},"sourceType":"module"}