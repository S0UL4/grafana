{"ast":null,"code":"const _excluded = [\"totalCount\", \"perPage\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialLdapState = {\n  connectionInfo: [],\n  syncInfo: undefined,\n  user: undefined,\n  connectionError: undefined,\n  userError: undefined\n};\nconst ldapSlice = createSlice({\n  name: 'ldap',\n  initialState: initialLdapState,\n  reducers: {\n    ldapConnectionInfoLoadedAction: (state, action) => Object.assign({}, state, {\n      ldapError: undefined,\n      connectionInfo: action.payload\n    }),\n    ldapFailedAction: (state, action) => Object.assign({}, state, {\n      ldapError: action.payload\n    }),\n    ldapSyncStatusLoadedAction: (state, action) => Object.assign({}, state, {\n      syncInfo: action.payload\n    }),\n    userMappingInfoLoadedAction: (state, action) => Object.assign({}, state, {\n      user: action.payload,\n      userError: undefined\n    }),\n    userMappingInfoFailedAction: (state, action) => Object.assign({}, state, {\n      user: undefined,\n      userError: action.payload\n    }),\n    clearUserMappingInfoAction: (state, action) => Object.assign({}, state, {\n      user: undefined\n    }),\n    clearUserErrorAction: (state, action) => Object.assign({}, state, {\n      userError: undefined\n    })\n  }\n});\nexport const {\n  clearUserErrorAction,\n  clearUserMappingInfoAction,\n  ldapConnectionInfoLoadedAction,\n  ldapFailedAction,\n  ldapSyncStatusLoadedAction,\n  userMappingInfoFailedAction,\n  userMappingInfoLoadedAction\n} = ldapSlice.actions;\nexport const ldapReducer = ldapSlice.reducer; // UserAdminPage\n\nconst initialUserAdminState = {\n  user: undefined,\n  sessions: [],\n  orgs: [],\n  isLoading: true,\n  error: undefined\n};\nexport const userAdminSlice = createSlice({\n  name: 'userAdmin',\n  initialState: initialUserAdminState,\n  reducers: {\n    userProfileLoadedAction: (state, action) => Object.assign({}, state, {\n      user: action.payload\n    }),\n    userOrgsLoadedAction: (state, action) => Object.assign({}, state, {\n      orgs: action.payload\n    }),\n    userSessionsLoadedAction: (state, action) => Object.assign({}, state, {\n      sessions: action.payload\n    }),\n    userAdminPageLoadedAction: (state, action) => Object.assign({}, state, {\n      isLoading: !action.payload\n    }),\n    userAdminPageFailedAction: (state, action) => Object.assign({}, state, {\n      error: action.payload,\n      isLoading: false\n    })\n  }\n});\nexport const {\n  userProfileLoadedAction,\n  userOrgsLoadedAction,\n  userSessionsLoadedAction,\n  userAdminPageLoadedAction,\n  userAdminPageFailedAction\n} = userAdminSlice.actions;\nexport const userAdminReducer = userAdminSlice.reducer; // UserListAdminPage\n\nconst initialUserListAdminState = {\n  users: [],\n  query: '',\n  page: 0,\n  perPage: 50,\n  totalPages: 1,\n  showPaging: false,\n  filters: [{\n    name: 'activeLast30Days',\n    value: false\n  }],\n  isLoading: false\n};\nexport const userListAdminSlice = createSlice({\n  name: 'userListAdmin',\n  initialState: initialUserListAdminState,\n  reducers: {\n    usersFetched: (state, action) => {\n      const _action$payload = action.payload,\n            {\n        totalCount,\n        perPage\n      } = _action$payload,\n            rest = _objectWithoutPropertiesLoose(_action$payload, _excluded);\n\n      const totalPages = Math.ceil(totalCount / perPage);\n      return Object.assign({}, state, rest, {\n        totalPages,\n        perPage,\n        showPaging: totalPages > 1,\n        isLoading: false\n      });\n    },\n    usersFetchBegin: state => {\n      return Object.assign({}, state, {\n        isLoading: true\n      });\n    },\n    usersFetchEnd: state => {\n      return Object.assign({}, state, {\n        isLoading: false\n      });\n    },\n    queryChanged: (state, action) => Object.assign({}, state, {\n      query: action.payload,\n      page: 0\n    }),\n    pageChanged: (state, action) => Object.assign({}, state, {\n      page: action.payload\n    }),\n    filterChanged: (state, action) => {\n      const {\n        name,\n        value\n      } = action.payload;\n\n      if (state.filters.some(filter => filter.name === name)) {\n        return Object.assign({}, state, {\n          page: 0,\n          filters: state.filters.map(filter => filter.name === name ? Object.assign({}, filter, {\n            value\n          }) : filter)\n        });\n      }\n\n      return Object.assign({}, state, {\n        page: 0,\n        filters: [...state.filters, action.payload]\n      });\n    }\n  }\n});\nexport const {\n  usersFetched,\n  usersFetchBegin,\n  usersFetchEnd,\n  queryChanged,\n  pageChanged,\n  filterChanged\n} = userListAdminSlice.actions;\nexport const userListAdminReducer = userListAdminSlice.reducer;\nexport default {\n  ldap: ldapReducer,\n  userAdmin: userAdminReducer,\n  userListAdmin: userListAdminReducer\n};","map":{"version":3,"names":["createSlice","initialLdapState","connectionInfo","syncInfo","undefined","user","connectionError","userError","ldapSlice","name","initialState","reducers","ldapConnectionInfoLoadedAction","state","action","ldapError","payload","ldapFailedAction","ldapSyncStatusLoadedAction","userMappingInfoLoadedAction","userMappingInfoFailedAction","clearUserMappingInfoAction","clearUserErrorAction","actions","ldapReducer","reducer","initialUserAdminState","sessions","orgs","isLoading","error","userAdminSlice","userProfileLoadedAction","userOrgsLoadedAction","userSessionsLoadedAction","userAdminPageLoadedAction","userAdminPageFailedAction","userAdminReducer","initialUserListAdminState","users","query","page","perPage","totalPages","showPaging","filters","value","userListAdminSlice","usersFetched","totalCount","rest","Math","ceil","usersFetchBegin","usersFetchEnd","queryChanged","pageChanged","filterChanged","some","filter","map","userListAdminReducer","ldap","userAdmin","userListAdmin"],"sources":["/home/soula/grafana/public/app/features/admin/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  LdapConnectionInfo,\n  LdapError,\n  LdapState,\n  LdapUser,\n  SyncInfo,\n  UserAdminError,\n  UserAdminState,\n  UserDTO,\n  UserOrg,\n  UserSession,\n  UserListAdminState,\n  UserFilter,\n} from 'app/types';\n\nconst initialLdapState: LdapState = {\n  connectionInfo: [],\n  syncInfo: undefined,\n  user: undefined,\n  connectionError: undefined,\n  userError: undefined,\n};\n\nconst ldapSlice = createSlice({\n  name: 'ldap',\n  initialState: initialLdapState,\n  reducers: {\n    ldapConnectionInfoLoadedAction: (state, action: PayloadAction<LdapConnectionInfo>): LdapState => ({\n      ...state,\n      ldapError: undefined,\n      connectionInfo: action.payload,\n    }),\n    ldapFailedAction: (state, action: PayloadAction<LdapError>): LdapState => ({\n      ...state,\n      ldapError: action.payload,\n    }),\n    ldapSyncStatusLoadedAction: (state, action: PayloadAction<SyncInfo>): LdapState => ({\n      ...state,\n      syncInfo: action.payload,\n    }),\n    userMappingInfoLoadedAction: (state, action: PayloadAction<LdapUser>): LdapState => ({\n      ...state,\n      user: action.payload,\n      userError: undefined,\n    }),\n    userMappingInfoFailedAction: (state, action: PayloadAction<LdapError>): LdapState => ({\n      ...state,\n      user: undefined,\n      userError: action.payload,\n    }),\n    clearUserMappingInfoAction: (state, action: PayloadAction<undefined>): LdapState => ({\n      ...state,\n      user: undefined,\n    }),\n    clearUserErrorAction: (state, action: PayloadAction<undefined>): LdapState => ({\n      ...state,\n      userError: undefined,\n    }),\n  },\n});\n\nexport const {\n  clearUserErrorAction,\n  clearUserMappingInfoAction,\n  ldapConnectionInfoLoadedAction,\n  ldapFailedAction,\n  ldapSyncStatusLoadedAction,\n  userMappingInfoFailedAction,\n  userMappingInfoLoadedAction,\n} = ldapSlice.actions;\n\nexport const ldapReducer = ldapSlice.reducer;\n\n// UserAdminPage\n\nconst initialUserAdminState: UserAdminState = {\n  user: undefined,\n  sessions: [],\n  orgs: [],\n  isLoading: true,\n  error: undefined,\n};\n\nexport const userAdminSlice = createSlice({\n  name: 'userAdmin',\n  initialState: initialUserAdminState,\n  reducers: {\n    userProfileLoadedAction: (state, action: PayloadAction<UserDTO>): UserAdminState => ({\n      ...state,\n      user: action.payload,\n    }),\n    userOrgsLoadedAction: (state, action: PayloadAction<UserOrg[]>): UserAdminState => ({\n      ...state,\n      orgs: action.payload,\n    }),\n    userSessionsLoadedAction: (state, action: PayloadAction<UserSession[]>): UserAdminState => ({\n      ...state,\n      sessions: action.payload,\n    }),\n    userAdminPageLoadedAction: (state, action: PayloadAction<boolean>): UserAdminState => ({\n      ...state,\n      isLoading: !action.payload,\n    }),\n    userAdminPageFailedAction: (state, action: PayloadAction<UserAdminError>): UserAdminState => ({\n      ...state,\n      error: action.payload,\n      isLoading: false,\n    }),\n  },\n});\n\nexport const {\n  userProfileLoadedAction,\n  userOrgsLoadedAction,\n  userSessionsLoadedAction,\n  userAdminPageLoadedAction,\n  userAdminPageFailedAction,\n} = userAdminSlice.actions;\n\nexport const userAdminReducer = userAdminSlice.reducer;\n\n// UserListAdminPage\n\nconst initialUserListAdminState: UserListAdminState = {\n  users: [],\n  query: '',\n  page: 0,\n  perPage: 50,\n  totalPages: 1,\n  showPaging: false,\n  filters: [{ name: 'activeLast30Days', value: false }],\n  isLoading: false,\n};\n\ninterface UsersFetched {\n  users: UserDTO[];\n  perPage: number;\n  page: number;\n  totalCount: number;\n}\n\nexport const userListAdminSlice = createSlice({\n  name: 'userListAdmin',\n  initialState: initialUserListAdminState,\n  reducers: {\n    usersFetched: (state, action: PayloadAction<UsersFetched>) => {\n      const { totalCount, perPage, ...rest } = action.payload;\n      const totalPages = Math.ceil(totalCount / perPage);\n\n      return {\n        ...state,\n        ...rest,\n        totalPages,\n        perPage,\n        showPaging: totalPages > 1,\n        isLoading: false,\n      };\n    },\n    usersFetchBegin: (state) => {\n      return { ...state, isLoading: true };\n    },\n    usersFetchEnd: (state) => {\n      return { ...state, isLoading: false };\n    },\n    queryChanged: (state, action: PayloadAction<string>) => ({\n      ...state,\n      query: action.payload,\n      page: 0,\n    }),\n    pageChanged: (state, action: PayloadAction<number>) => ({\n      ...state,\n      page: action.payload,\n    }),\n    filterChanged: (state, action: PayloadAction<UserFilter>) => {\n      const { name, value } = action.payload;\n\n      if (state.filters.some((filter) => filter.name === name)) {\n        return {\n          ...state,\n          page: 0,\n          filters: state.filters.map((filter) => (filter.name === name ? { ...filter, value } : filter)),\n        };\n      }\n      return {\n        ...state,\n        page: 0,\n        filters: [...state.filters, action.payload],\n      };\n    },\n  },\n});\n\nexport const { usersFetched, usersFetchBegin, usersFetchEnd, queryChanged, pageChanged, filterChanged } =\n  userListAdminSlice.actions;\nexport const userListAdminReducer = userListAdminSlice.reducer;\n\nexport default {\n  ldap: ldapReducer,\n  userAdmin: userAdminReducer,\n  userListAdmin: userListAdminReducer,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}