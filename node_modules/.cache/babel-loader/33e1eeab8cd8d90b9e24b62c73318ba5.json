{"ast":null,"code":"var _col, _col2, _th, _th2, _th3, _td, _ProvisioningBadge, _td2;\n\nimport React, { Fragment, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ConfirmModal, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { Authorize } from '../../components/Authorize';\nimport { deleteTemplateAction } from '../../state/actions';\nimport { getAlertTableStyles } from '../../styles/table';\nimport { getNotificationsPermissions } from '../../utils/access-control';\nimport { makeAMLink } from '../../utils/misc';\nimport { CollapseToggle } from '../CollapseToggle';\nimport { DetailsField } from '../DetailsField';\nimport { ProvisioningBadge } from '../Provisioning';\nimport { ActionIcon } from '../rules/ActionIcon';\nimport { ReceiversSection } from './ReceiversSection';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TemplatesTable = ({\n  config,\n  alertManagerName\n}) => {\n  const dispatch = useDispatch();\n  const [expandedTemplates, setExpandedTemplates] = useState({});\n  const tableStyles = useStyles2(getAlertTableStyles);\n  const permissions = getNotificationsPermissions(alertManagerName);\n  const templateRows = useMemo(() => {\n    const templates = Object.entries(config.template_files);\n    return templates.map(([name, template]) => {\n      var _config$template_file;\n\n      return {\n        name,\n        template,\n        provenance: ((_config$template_file = config.template_file_provenances) !== null && _config$template_file !== void 0 ? _config$template_file : {})[name]\n      };\n    });\n  }, [config]);\n  const [templateToDelete, setTemplateToDelete] = useState();\n\n  const deleteTemplate = () => {\n    if (templateToDelete) {\n      dispatch(deleteTemplateAction(templateToDelete, alertManagerName));\n    }\n\n    setTemplateToDelete(undefined);\n  };\n\n  return /*#__PURE__*/_jsxs(ReceiversSection, {\n    title: \"Message templates\",\n    description: \"Templates construct the messages that get sent to the contact points.\",\n    addButtonLabel: \"New template\",\n    addButtonTo: makeAMLink('/alerting/notifications/templates/new', alertManagerName),\n    showButton: contextSrv.hasPermission(permissions.create),\n    children: [/*#__PURE__*/_jsxs(\"table\", {\n      className: tableStyles.table,\n      \"data-testid\": \"templates-table\",\n      children: [/*#__PURE__*/_jsxs(\"colgroup\", {\n        children: [/*#__PURE__*/_jsx(\"col\", {\n          className: tableStyles.colExpand\n        }), _col || (_col = /*#__PURE__*/_jsx(\"col\", {})), _col2 || (_col2 = /*#__PURE__*/_jsx(\"col\", {}))]\n      }), /*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {})), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Template\"\n          })), /*#__PURE__*/_jsx(Authorize, {\n            actions: [permissions.update, permissions.delete],\n            children: _th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n              children: \"Actions\"\n            }))\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(\"tbody\", {\n        children: [!templateRows.length && /*#__PURE__*/_jsx(\"tr\", {\n          className: tableStyles.evenRow,\n          children: _td || (_td = /*#__PURE__*/_jsx(\"td\", {\n            colSpan: 3,\n            children: \"No templates defined.\"\n          }))\n        }), templateRows.map(({\n          name,\n          template,\n          provenance\n        }, idx) => {\n          const isExpanded = !!expandedTemplates[name];\n          return /*#__PURE__*/_jsxs(Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"tr\", {\n              className: idx % 2 === 0 ? tableStyles.evenRow : undefined,\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(CollapseToggle, {\n                  isCollapsed: !expandedTemplates[name],\n                  onToggle: () => setExpandedTemplates(Object.assign({}, expandedTemplates, {\n                    [name]: !isExpanded\n                  }))\n                })\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                children: [name, \" \", provenance && (_ProvisioningBadge || (_ProvisioningBadge = /*#__PURE__*/_jsx(ProvisioningBadge, {})))]\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                className: tableStyles.actionsCell,\n                children: [provenance && /*#__PURE__*/_jsx(ActionIcon, {\n                  to: makeAMLink(`/alerting/notifications/templates/${encodeURIComponent(name)}/edit`, alertManagerName),\n                  tooltip: \"view template\",\n                  icon: \"file-alt\"\n                }), !provenance && /*#__PURE__*/_jsxs(Authorize, {\n                  actions: [permissions.update, permissions.delete],\n                  children: [/*#__PURE__*/_jsx(Authorize, {\n                    actions: [permissions.update],\n                    children: /*#__PURE__*/_jsx(ActionIcon, {\n                      to: makeAMLink(`/alerting/notifications/templates/${encodeURIComponent(name)}/edit`, alertManagerName),\n                      tooltip: \"edit template\",\n                      icon: \"pen\"\n                    })\n                  }), /*#__PURE__*/_jsx(Authorize, {\n                    actions: [permissions.delete],\n                    children: /*#__PURE__*/_jsx(ActionIcon, {\n                      onClick: () => setTemplateToDelete(name),\n                      tooltip: \"delete template\",\n                      icon: \"trash-alt\"\n                    })\n                  })]\n                })]\n              })]\n            }, name), isExpanded && /*#__PURE__*/_jsxs(\"tr\", {\n              className: idx % 2 === 0 ? tableStyles.evenRow : undefined,\n              children: [_td2 || (_td2 = /*#__PURE__*/_jsx(\"td\", {})), /*#__PURE__*/_jsx(\"td\", {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsx(DetailsField, {\n                  label: \"Description\",\n                  horizontal: true,\n                  children: /*#__PURE__*/_jsx(\"pre\", {\n                    children: template\n                  })\n                })\n              })]\n            })]\n          }, name);\n        })]\n      })]\n    }), !!templateToDelete && /*#__PURE__*/_jsx(ConfirmModal, {\n      isOpen: true,\n      title: \"Delete template\",\n      body: `Are you sure you want to delete template \"${templateToDelete}\"?`,\n      confirmText: \"Yes, delete\",\n      onConfirm: deleteTemplate,\n      onDismiss: () => setTemplateToDelete(undefined)\n    })]\n  });\n};","map":{"version":3,"names":["React","Fragment","useMemo","useState","useDispatch","ConfirmModal","useStyles2","contextSrv","Authorize","deleteTemplateAction","getAlertTableStyles","getNotificationsPermissions","makeAMLink","CollapseToggle","DetailsField","ProvisioningBadge","ActionIcon","ReceiversSection","TemplatesTable","config","alertManagerName","dispatch","expandedTemplates","setExpandedTemplates","tableStyles","permissions","templateRows","templates","Object","entries","template_files","map","name","template","provenance","template_file_provenances","templateToDelete","setTemplateToDelete","deleteTemplate","undefined","hasPermission","create","table","colExpand","update","delete","length","evenRow","idx","isExpanded","actionsCell","encodeURIComponent"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/receivers/TemplatesTable.tsx"],"sourcesContent":["import React, { FC, Fragment, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ConfirmModal, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AlertManagerCortexConfig } from 'app/plugins/datasource/alertmanager/types';\n\nimport { Authorize } from '../../components/Authorize';\nimport { deleteTemplateAction } from '../../state/actions';\nimport { getAlertTableStyles } from '../../styles/table';\nimport { getNotificationsPermissions } from '../../utils/access-control';\nimport { makeAMLink } from '../../utils/misc';\nimport { CollapseToggle } from '../CollapseToggle';\nimport { DetailsField } from '../DetailsField';\nimport { ProvisioningBadge } from '../Provisioning';\nimport { ActionIcon } from '../rules/ActionIcon';\n\nimport { ReceiversSection } from './ReceiversSection';\n\ninterface Props {\n  config: AlertManagerCortexConfig;\n  alertManagerName: string;\n}\n\nexport const TemplatesTable: FC<Props> = ({ config, alertManagerName }) => {\n  const dispatch = useDispatch();\n  const [expandedTemplates, setExpandedTemplates] = useState<Record<string, boolean>>({});\n  const tableStyles = useStyles2(getAlertTableStyles);\n  const permissions = getNotificationsPermissions(alertManagerName);\n\n  const templateRows = useMemo(() => {\n    const templates = Object.entries(config.template_files);\n\n    return templates.map(([name, template]) => ({\n      name,\n      template,\n      provenance: (config.template_file_provenances ?? {})[name],\n    }));\n  }, [config]);\n  const [templateToDelete, setTemplateToDelete] = useState<string>();\n\n  const deleteTemplate = () => {\n    if (templateToDelete) {\n      dispatch(deleteTemplateAction(templateToDelete, alertManagerName));\n    }\n    setTemplateToDelete(undefined);\n  };\n\n  return (\n    <ReceiversSection\n      title=\"Message templates\"\n      description=\"Templates construct the messages that get sent to the contact points.\"\n      addButtonLabel=\"New template\"\n      addButtonTo={makeAMLink('/alerting/notifications/templates/new', alertManagerName)}\n      showButton={contextSrv.hasPermission(permissions.create)}\n    >\n      <table className={tableStyles.table} data-testid=\"templates-table\">\n        <colgroup>\n          <col className={tableStyles.colExpand} />\n          <col />\n          <col />\n        </colgroup>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Template</th>\n            <Authorize actions={[permissions.update, permissions.delete]}>\n              <th>Actions</th>\n            </Authorize>\n          </tr>\n        </thead>\n        <tbody>\n          {!templateRows.length && (\n            <tr className={tableStyles.evenRow}>\n              <td colSpan={3}>No templates defined.</td>\n            </tr>\n          )}\n          {templateRows.map(({ name, template, provenance }, idx) => {\n            const isExpanded = !!expandedTemplates[name];\n            return (\n              <Fragment key={name}>\n                <tr key={name} className={idx % 2 === 0 ? tableStyles.evenRow : undefined}>\n                  <td>\n                    <CollapseToggle\n                      isCollapsed={!expandedTemplates[name]}\n                      onToggle={() => setExpandedTemplates({ ...expandedTemplates, [name]: !isExpanded })}\n                    />\n                  </td>\n                  <td>\n                    {name} {provenance && <ProvisioningBadge />}\n                  </td>\n                  <td className={tableStyles.actionsCell}>\n                    {provenance && (\n                      <ActionIcon\n                        to={makeAMLink(\n                          `/alerting/notifications/templates/${encodeURIComponent(name)}/edit`,\n                          alertManagerName\n                        )}\n                        tooltip=\"view template\"\n                        icon=\"file-alt\"\n                      />\n                    )}\n                    {!provenance && (\n                      <Authorize actions={[permissions.update, permissions.delete]}>\n                        <Authorize actions={[permissions.update]}>\n                          <ActionIcon\n                            to={makeAMLink(\n                              `/alerting/notifications/templates/${encodeURIComponent(name)}/edit`,\n                              alertManagerName\n                            )}\n                            tooltip=\"edit template\"\n                            icon=\"pen\"\n                          />\n                        </Authorize>\n                        <Authorize actions={[permissions.delete]}>\n                          <ActionIcon\n                            onClick={() => setTemplateToDelete(name)}\n                            tooltip=\"delete template\"\n                            icon=\"trash-alt\"\n                          />\n                        </Authorize>\n                      </Authorize>\n                    )}\n                  </td>\n                </tr>\n                {isExpanded && (\n                  <tr className={idx % 2 === 0 ? tableStyles.evenRow : undefined}>\n                    <td></td>\n                    <td colSpan={2}>\n                      <DetailsField label=\"Description\" horizontal={true}>\n                        <pre>{template}</pre>\n                      </DetailsField>\n                    </td>\n                  </tr>\n                )}\n              </Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {!!templateToDelete && (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Delete template\"\n          body={`Are you sure you want to delete template \"${templateToDelete}\"?`}\n          confirmText=\"Yes, delete\"\n          onConfirm={deleteTemplate}\n          onDismiss={() => setTemplateToDelete(undefined)}\n        />\n      )}\n    </ReceiversSection>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}