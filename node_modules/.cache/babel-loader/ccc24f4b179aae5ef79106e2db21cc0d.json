{"ast":null,"code":"import React from 'react';\nimport { Button } from '@grafana/ui';\nimport { updatePluginSettings } from '../../api';\nimport { usePluginConfig } from '../../hooks/usePluginConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GetStartedWithApp({\n  plugin\n}) {\n  const {\n    value: pluginConfig\n  } = usePluginConfig(plugin);\n\n  if (!pluginConfig) {\n    return null;\n  }\n\n  const {\n    enabled,\n    jsonData\n  } = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.meta;\n\n  const enable = () => updatePluginSettingsAndReload(plugin.id, {\n    enabled: true,\n    pinned: true,\n    jsonData\n  });\n\n  const disable = () => {\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: false,\n      pinned: false,\n      jsonData\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!enabled && /*#__PURE__*/_jsx(Button, {\n      variant: \"primary\",\n      onClick: enable,\n      children: \"Enable\"\n    }), enabled && /*#__PURE__*/_jsx(Button, {\n      variant: \"destructive\",\n      onClick: disable,\n      children: \"Disable\"\n    })]\n  });\n}\n\nconst updatePluginSettingsAndReload = async (id, data) => {\n  try {\n    await updatePluginSettings(id, data); // Reloading the page as the plugin meta changes made here wouldn't be propagated throughout the app.\n\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};","map":{"version":3,"names":["React","Button","updatePluginSettings","usePluginConfig","GetStartedWithApp","plugin","value","pluginConfig","enabled","jsonData","meta","enable","updatePluginSettingsAndReload","id","pinned","disable","data","window","location","reload","e","console","error"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.tsx"],"sourcesContent":["import React from 'react';\n\nimport { PluginMeta } from '@grafana/data';\nimport { Button } from '@grafana/ui';\n\nimport { updatePluginSettings } from '../../api';\nimport { usePluginConfig } from '../../hooks/usePluginConfig';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithApp({ plugin }: Props): React.ReactElement | null {\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  if (!pluginConfig) {\n    return null;\n  }\n\n  const { enabled, jsonData } = pluginConfig?.meta;\n\n  const enable = () =>\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: true,\n      pinned: true,\n      jsonData,\n    });\n\n  const disable = () => {\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: false,\n      pinned: false,\n      jsonData,\n    });\n  };\n\n  return (\n    <>\n      {!enabled && (\n        <Button variant=\"primary\" onClick={enable}>\n          Enable\n        </Button>\n      )}\n\n      {enabled && (\n        <Button variant=\"destructive\" onClick={disable}>\n          Disable\n        </Button>\n      )}\n    </>\n  );\n}\n\nconst updatePluginSettingsAndReload = async (id: string, data: Partial<PluginMeta>) => {\n  try {\n    await updatePluginSettings(id, data);\n\n    // Reloading the page as the plugin meta changes made here wouldn't be propagated throughout the app.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;;AAOA,OAAO,SAASC,iBAAT,CAA2B;EAAEC;AAAF,CAA3B,EAAyE;EAC9E,MAAM;IAAEC,KAAK,EAAEC;EAAT,IAA0BJ,eAAe,CAACE,MAAD,CAA/C;;EAEA,IAAI,CAACE,YAAL,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAwBF,YAAxB,aAAwBA,YAAxB,uBAAwBA,YAAY,CAAEG,IAA5C;;EAEA,MAAMC,MAAM,GAAG,MACbC,6BAA6B,CAACP,MAAM,CAACQ,EAAR,EAAY;IACvCL,OAAO,EAAE,IAD8B;IAEvCM,MAAM,EAAE,IAF+B;IAGvCL;EAHuC,CAAZ,CAD/B;;EAOA,MAAMM,OAAO,GAAG,MAAM;IACpBH,6BAA6B,CAACP,MAAM,CAACQ,EAAR,EAAY;MACvCL,OAAO,EAAE,KAD8B;MAEvCM,MAAM,EAAE,KAF+B;MAGvCL;IAHuC,CAAZ,CAA7B;EAKD,CAND;;EAQA,oBACE;IAAA,WACG,CAACD,OAAD,iBACC,KAAC,MAAD;MAAQ,OAAO,EAAC,SAAhB;MAA0B,OAAO,EAAEG,MAAnC;MAAA;IAAA,EAFJ,EAOGH,OAAO,iBACN,KAAC,MAAD;MAAQ,OAAO,EAAC,aAAhB;MAA8B,OAAO,EAAEO,OAAvC;MAAA;IAAA,EARJ;EAAA,EADF;AAeD;;AAED,MAAMH,6BAA6B,GAAG,OAAOC,EAAP,EAAmBG,IAAnB,KAAiD;EACrF,IAAI;IACF,MAAMd,oBAAoB,CAACW,EAAD,EAAKG,IAAL,CAA1B,CADE,CAGF;;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CALD,CAKE,OAAOC,CAAP,EAAU;IACVC,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDF,CAAjD;EACD;AACF,CATD"},"metadata":{},"sourceType":"module"}