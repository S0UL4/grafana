{"ast":null,"code":"var _FlexItem;\n\nimport React from 'react';\nimport { EditorHeader, FlexItem, InlineSelect } from '@grafana/experimental';\nimport { RadioButtonGroup } from '@grafana/ui';\nimport { QUERY_TYPES } from '../../constants';\nimport { EditorMode, QueryType } from '../../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst EDITOR_MODES = [{\n  label: 'Builder',\n  value: EditorMode.Visual\n}, {\n  label: 'MQL',\n  value: EditorMode.MQL\n}];\nexport const QueryHeader = props => {\n  const {\n    query,\n    metricQuery,\n    sloQuery,\n    onChange,\n    onRunQuery\n  } = props;\n  const {\n    queryType\n  } = query;\n  const {\n    editorMode\n  } = metricQuery;\n  return /*#__PURE__*/_jsxs(EditorHeader, {\n    children: [/*#__PURE__*/_jsx(InlineSelect, {\n      label: \"Query type\",\n      options: QUERY_TYPES,\n      value: queryType,\n      onChange: ({\n        value\n      }) => {\n        onChange(Object.assign({}, query, {\n          sloQuery,\n          queryType: value\n        }));\n        onRunQuery();\n      }\n    }), _FlexItem || (_FlexItem = /*#__PURE__*/_jsx(FlexItem, {\n      grow: 1\n    })), queryType !== QueryType.SLO && /*#__PURE__*/_jsx(RadioButtonGroup, {\n      size: \"sm\",\n      options: EDITOR_MODES,\n      value: editorMode || EditorMode.Visual,\n      onChange: value => {\n        onChange(Object.assign({}, query, {\n          metricQuery: Object.assign({}, metricQuery, {\n            editorMode: value\n          })\n        }));\n      }\n    })]\n  });\n};","map":{"version":3,"names":["React","EditorHeader","FlexItem","InlineSelect","RadioButtonGroup","QUERY_TYPES","EditorMode","QueryType","EDITOR_MODES","label","value","Visual","MQL","QueryHeader","props","query","metricQuery","sloQuery","onChange","onRunQuery","queryType","editorMode","SLO"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloud-monitoring/components/Experimental/QueryHeader.tsx"],"sourcesContent":["import React from 'react';\n\nimport { EditorHeader, FlexItem, InlineSelect } from '@grafana/experimental';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { QUERY_TYPES } from '../../constants';\nimport { EditorMode, CloudMonitoringQuery, QueryType, SLOQuery, MetricQuery } from '../../types';\n\nexport interface QueryEditorHeaderProps {\n  query: CloudMonitoringQuery;\n  metricQuery: MetricQuery;\n  sloQuery: SLOQuery;\n  onChange: (value: CloudMonitoringQuery) => void;\n  onRunQuery: () => void;\n}\n\nconst EDITOR_MODES = [\n  { label: 'Builder', value: EditorMode.Visual },\n  { label: 'MQL', value: EditorMode.MQL },\n];\n\nexport const QueryHeader = (props: QueryEditorHeaderProps) => {\n  const { query, metricQuery, sloQuery, onChange, onRunQuery } = props;\n  const { queryType } = query;\n  const { editorMode } = metricQuery;\n\n  return (\n    <EditorHeader>\n      <InlineSelect\n        label=\"Query type\"\n        options={QUERY_TYPES}\n        value={queryType}\n        onChange={({ value }) => {\n          onChange({ ...query, sloQuery, queryType: value! });\n          onRunQuery();\n        }}\n      />\n      <FlexItem grow={1} />\n      {queryType !== QueryType.SLO && (\n        <RadioButtonGroup\n          size=\"sm\"\n          options={EDITOR_MODES}\n          value={editorMode || EditorMode.Visual}\n          onChange={(value) => {\n            onChange({\n              ...query,\n              metricQuery: {\n                ...metricQuery,\n                editorMode: value,\n              },\n            });\n          }}\n        />\n      )}\n    </EditorHeader>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,QAAqD,uBAArD;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,UAAT,EAA2CC,SAA3C,QAAmF,aAAnF;;;AAUA,MAAMC,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,SAAT;EAAoBC,KAAK,EAAEJ,UAAU,CAACK;AAAtC,CADmB,EAEnB;EAAEF,KAAK,EAAE,KAAT;EAAgBC,KAAK,EAAEJ,UAAU,CAACM;AAAlC,CAFmB,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAmC;EAC5D,MAAM;IAAEC,KAAF;IAASC,WAAT;IAAsBC,QAAtB;IAAgCC,QAAhC;IAA0CC;EAA1C,IAAyDL,KAA/D;EACA,MAAM;IAAEM;EAAF,IAAgBL,KAAtB;EACA,MAAM;IAAEM;EAAF,IAAiBL,WAAvB;EAEA,oBACE,MAAC,YAAD;IAAA,wBACE,KAAC,YAAD;MACE,KAAK,EAAC,YADR;MAEE,OAAO,EAAEX,WAFX;MAGE,KAAK,EAAEe,SAHT;MAIE,QAAQ,EAAE,CAAC;QAAEV;MAAF,CAAD,KAAe;QACvBQ,QAAQ,mBAAMH,KAAN;UAAaE,QAAb;UAAuBG,SAAS,EAAEV;QAAlC,GAAR;QACAS,UAAU;MACX;IAPH,EADF,yCAUE,KAAC,QAAD;MAAU,IAAI,EAAE;IAAhB,EAVF,GAWGC,SAAS,KAAKb,SAAS,CAACe,GAAxB,iBACC,KAAC,gBAAD;MACE,IAAI,EAAC,IADP;MAEE,OAAO,EAAEd,YAFX;MAGE,KAAK,EAAEa,UAAU,IAAIf,UAAU,CAACK,MAHlC;MAIE,QAAQ,EAAGD,KAAD,IAAW;QACnBQ,QAAQ,mBACHH,KADG;UAENC,WAAW,oBACNA,WADM;YAETK,UAAU,EAAEX;UAFH;QAFL,GAAR;MAOD;IAZH,EAZJ;EAAA,EADF;AA8BD,CAnCM"},"metadata":{},"sourceType":"module"}