{"ast":null,"code":"export let HeatmapCalculationMode;\n\n(function (HeatmapCalculationMode) {\n  HeatmapCalculationMode[\"Size\"] = \"size\";\n  HeatmapCalculationMode[\"Count\"] = \"count\";\n})(HeatmapCalculationMode || (HeatmapCalculationMode = {}));\n\nexport let HeatmapCellLayout;\n\n(function (HeatmapCellLayout) {\n  HeatmapCellLayout[\"le\"] = \"le\";\n  HeatmapCellLayout[\"ge\"] = \"ge\";\n  HeatmapCellLayout[\"unknown\"] = \"unknown\";\n  HeatmapCellLayout[\"auto\"] = \"auto\";\n})(HeatmapCellLayout || (HeatmapCellLayout = {}));","map":{"version":3,"names":["HeatmapCalculationMode","HeatmapCellLayout"],"sources":["/home/soula/grafana/public/app/features/transformers/calculateHeatmap/models.gen.ts"],"sourcesContent":["import { ScaleDistributionConfig } from '@grafana/schema';\n\nexport enum HeatmapCalculationMode {\n  Size = 'size', // When exponential, this is \"splitFactor\"\n  Count = 'count',\n}\n\nexport const enum HeatmapCellLayout {\n  le = 'le',\n  ge = 'ge',\n  unknown = 'unknown', // unknown\n  auto = 'auto', // becomes unknown\n}\n\nexport interface HeatmapCalculationBucketConfig {\n  mode?: HeatmapCalculationMode;\n  value?: string; // number or interval string ie 10s, or log \"split\" divisor\n  scale?: ScaleDistributionConfig;\n}\n\nexport interface HeatmapCalculationOptions {\n  xBuckets?: HeatmapCalculationBucketConfig;\n  yBuckets?: HeatmapCalculationBucketConfig;\n}\n"],"mappings":"AAEA,WAAYA,sBAAZ;;WAAYA,sB;EAAAA,sB;EAAAA,sB;GAAAA,sB,KAAAA,sB;;AAKZ,WAAkBC,iBAAlB;;WAAkBA,iB;EAAAA,iB;EAAAA,iB;EAAAA,iB;EAAAA,iB;GAAAA,iB,KAAAA,iB"},"metadata":{},"sourceType":"module"}