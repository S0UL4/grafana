{"ast":null,"code":"import React, { useCallback, useContext } from 'react';\n\n/** @alpha */\nexport const GraphNGContext = /*#__PURE__*/React.createContext({});\n/**\n * @alpha\n * Exposes API for data frame inspection in Plot plugins\n */\n\nexport const useGraphNGContext = () => {\n  const {\n    data,\n    dimFields,\n    mapSeriesIndexToDataFrameFieldIndex\n  } = useContext(GraphNGContext);\n  const getXAxisField = useCallback(() => {\n    const xFieldMatcher = dimFields.x;\n    let xField = null;\n\n    for (let j = 0; j < data.fields.length; j++) {\n      if (xFieldMatcher(data.fields[j], data, [data])) {\n        xField = data.fields[j];\n        break;\n      }\n    }\n\n    return xField;\n  }, [data, dimFields]);\n  return {\n    dimFields,\n    mapSeriesIndexToDataFrameFieldIndex,\n    getXAxisField,\n    alignedData: data\n  };\n};","map":{"version":3,"names":["React","useCallback","useContext","GraphNGContext","createContext","useGraphNGContext","data","dimFields","mapSeriesIndexToDataFrameFieldIndex","getXAxisField","xFieldMatcher","x","xField","j","fields","length","alignedData"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/GraphNG/hooks.ts"],"sourcesContent":["import React, { useCallback, useContext } from 'react';\n\nimport { DataFrame, DataFrameFieldIndex, Field } from '@grafana/data';\n\nimport { XYFieldMatchers } from './types';\n\n/** @alpha */\ninterface GraphNGContextType {\n  mapSeriesIndexToDataFrameFieldIndex: (index: number) => DataFrameFieldIndex;\n  dimFields: XYFieldMatchers;\n  data: DataFrame;\n}\n\n/** @alpha */\nexport const GraphNGContext = React.createContext<GraphNGContextType>({} as GraphNGContextType);\n\n/**\n * @alpha\n * Exposes API for data frame inspection in Plot plugins\n */\nexport const useGraphNGContext = () => {\n  const { data, dimFields, mapSeriesIndexToDataFrameFieldIndex } = useContext<GraphNGContextType>(GraphNGContext);\n\n  const getXAxisField = useCallback(() => {\n    const xFieldMatcher = dimFields.x;\n    let xField: Field | null = null;\n\n    for (let j = 0; j < data.fields.length; j++) {\n      if (xFieldMatcher(data.fields[j], data, [data])) {\n        xField = data.fields[j];\n        break;\n      }\n    }\n\n    return xField;\n  }, [data, dimFields]);\n\n  return {\n    dimFields,\n    mapSeriesIndexToDataFrameFieldIndex,\n    getXAxisField,\n    alignedData: data,\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;;AAaA;AACA,OAAO,MAAMC,cAAc,gBAAGH,KAAK,CAACI,aAAN,CAAwC,EAAxC,CAAvB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACrC,MAAM;IAAEC,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA2DN,UAAU,CAAqBC,cAArB,CAA3E;EAEA,MAAMM,aAAa,GAAGR,WAAW,CAAC,MAAM;IACtC,MAAMS,aAAa,GAAGH,SAAS,CAACI,CAAhC;IACA,IAAIC,MAAoB,GAAG,IAA3B;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,MAAL,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;MAC3C,IAAIH,aAAa,CAACJ,IAAI,CAACQ,MAAL,CAAYD,CAAZ,CAAD,EAAiBP,IAAjB,EAAuB,CAACA,IAAD,CAAvB,CAAjB,EAAiD;QAC/CM,MAAM,GAAGN,IAAI,CAACQ,MAAL,CAAYD,CAAZ,CAAT;QACA;MACD;IACF;;IAED,OAAOD,MAAP;EACD,CAZgC,EAY9B,CAACN,IAAD,EAAOC,SAAP,CAZ8B,CAAjC;EAcA,OAAO;IACLA,SADK;IAELC,mCAFK;IAGLC,aAHK;IAILO,WAAW,EAAEV;EAJR,CAAP;AAMD,CAvBM"},"metadata":{},"sourceType":"module"}