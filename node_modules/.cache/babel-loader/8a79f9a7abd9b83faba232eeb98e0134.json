{"ast":null,"code":"var _h, _label;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, LegacyForms } from '@grafana/ui';\nconst {\n  Input\n} = LegacyForms;\nimport appEvents from 'app/core/app_events';\nimport Page from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { ShowConfirmModalEvent } from '../../types/events';\nimport { deleteFolder, getFolderByUid, saveFolder } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\nimport { setFolderTitle } from './state/reducers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst mapStateToProps = (state, props) => {\n  const uid = props.match.params.uid;\n  return {\n    navModel: getNavModel(state.navIndex, `folder-settings-${uid}`, getLoadingNav(2)),\n    folderUid: uid,\n    folder: state.folder\n  };\n};\n\nconst mapDispatchToProps = {\n  getFolderByUid,\n  saveFolder,\n  setFolderTitle,\n  deleteFolder\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport class FolderSettingsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onTitleChange\", evt => {\n      this.props.setFolderTitle(evt.target.value);\n    });\n\n    _defineProperty(this, \"onSave\", async evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.setState({\n        isLoading: true\n      });\n      await this.props.saveFolder(this.props.folder);\n      this.setState({\n        isLoading: false\n      });\n    });\n\n    _defineProperty(this, \"onDelete\", evt => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      const confirmationText = `Do you want to delete this folder and all its dashboards and alerts?`;\n      appEvents.publish(new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: confirmationText,\n        icon: 'trash-alt',\n        yesText: 'Delete',\n        onConfirm: () => {\n          this.props.deleteFolder(this.props.folder.uid);\n        }\n      }));\n    });\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getFolderByUid(this.props.folderUid);\n  }\n\n  render() {\n    const {\n      navModel,\n      folder\n    } = this.props;\n    return /*#__PURE__*/_jsx(Page, {\n      navModel: navModel,\n      children: /*#__PURE__*/_jsxs(Page.Contents, {\n        isLoading: this.state.isLoading,\n        children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n          className: \"page-sub-heading\",\n          children: \"Folder settings\"\n        })), /*#__PURE__*/_jsx(\"div\", {\n          className: \"section gf-form-group\",\n          children: /*#__PURE__*/_jsxs(\"form\", {\n            name: \"folderSettingsForm\",\n            onSubmit: this.onSave,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"gf-form\",\n              children: [_label || (_label = /*#__PURE__*/_jsx(\"label\", {\n                className: \"gf-form-label width-7\",\n                children: \"Name\"\n              })), /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                className: \"gf-form-input width-30\",\n                value: folder.title,\n                onChange: this.onTitleChange\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"gf-form-button-row\",\n              children: [/*#__PURE__*/_jsx(Button, {\n                type: \"submit\",\n                disabled: !folder.canSave || !folder.hasChanged,\n                children: \"Save\"\n              }), /*#__PURE__*/_jsx(Button, {\n                variant: \"destructive\",\n                onClick: this.onDelete,\n                disabled: !folder.canDelete,\n                children: \"Delete\"\n              })]\n            })]\n          })\n        })]\n      })\n    });\n  }\n\n}\nexport default connector(FolderSettingsPage);","map":{"version":3,"names":["React","PureComponent","connect","Button","LegacyForms","Input","appEvents","Page","getNavModel","ShowConfirmModalEvent","deleteFolder","getFolderByUid","saveFolder","getLoadingNav","setFolderTitle","mapStateToProps","state","props","uid","match","params","navModel","navIndex","folderUid","folder","mapDispatchToProps","connector","FolderSettingsPage","constructor","evt","target","value","preventDefault","stopPropagation","setState","isLoading","confirmationText","publish","title","text","icon","yesText","onConfirm","componentDidMount","render","onSave","onTitleChange","canSave","hasChanged","onDelete","canDelete"],"sources":["/home/soula/grafana/public/app/features/folders/FolderSettingsPage.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Button, LegacyForms } from '@grafana/ui';\nconst { Input } = LegacyForms;\nimport appEvents from 'app/core/app_events';\nimport Page from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nimport { ShowConfirmModalEvent } from '../../types/events';\n\nimport { deleteFolder, getFolderByUid, saveFolder } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\nimport { setFolderTitle } from './state/reducers';\n\nexport interface OwnProps extends GrafanaRouteComponentProps<{ uid: string }> {}\n\nconst mapStateToProps = (state: StoreState, props: OwnProps) => {\n  const uid = props.match.params.uid;\n  return {\n    navModel: getNavModel(state.navIndex, `folder-settings-${uid}`, getLoadingNav(2)),\n    folderUid: uid,\n    folder: state.folder,\n  };\n};\n\nconst mapDispatchToProps = {\n  getFolderByUid,\n  saveFolder,\n  setFolderTitle,\n  deleteFolder,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport type Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport interface State {\n  isLoading: boolean;\n}\n\nexport class FolderSettingsPage extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getFolderByUid(this.props.folderUid);\n  }\n\n  onTitleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.setFolderTitle(evt.target.value);\n  };\n\n  onSave = async (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.setState({ isLoading: true });\n    await this.props.saveFolder(this.props.folder);\n    this.setState({ isLoading: false });\n  };\n\n  onDelete = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const confirmationText = `Do you want to delete this folder and all its dashboards and alerts?`;\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: confirmationText,\n        icon: 'trash-alt',\n        yesText: 'Delete',\n        onConfirm: () => {\n          this.props.deleteFolder(this.props.folder.uid);\n        },\n      })\n    );\n  };\n\n  render() {\n    const { navModel, folder } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={this.state.isLoading}>\n          <h3 className=\"page-sub-heading\">Folder settings</h3>\n\n          <div className=\"section gf-form-group\">\n            <form name=\"folderSettingsForm\" onSubmit={this.onSave}>\n              <div className=\"gf-form\">\n                <label className=\"gf-form-label width-7\">Name</label>\n                <Input\n                  type=\"text\"\n                  className=\"gf-form-input width-30\"\n                  value={folder.title}\n                  onChange={this.onTitleChange}\n                />\n              </div>\n              <div className=\"gf-form-button-row\">\n                <Button type=\"submit\" disabled={!folder.canSave || !folder.hasChanged}>\n                  Save\n                </Button>\n                <Button variant=\"destructive\" onClick={this.onDelete} disabled={!folder.canDelete}>\n                  Delete\n                </Button>\n              </div>\n            </form>\n          </div>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nexport default connector(FolderSettingsPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}