{"ast":null,"code":"const _excluded = [\"item\", \"isActive\", \"label\", \"children\", \"reverseMenuDirection\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport { useButton } from '@react-aria/button';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useFocusWithin, useHover, useKeyboard } from '@react-aria/interactions';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { DismissButton, OverlayContainer, useOverlay, useOverlayPosition } from '@react-aria/overlays';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport React, { useEffect, useState } from 'react';\nimport { reportExperimentView } from '@grafana/runtime';\nimport { Icon, Link, useTheme2 } from '@grafana/ui';\nimport { getNavMenuPortalContainer } from './NavBarMenuPortalContainer';\nimport { NavFeatureHighlight } from './NavFeatureHighlight';\nimport { NavBarItemMenuContext, useNavBarContext } from './context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function NavBarItemMenuTrigger(props) {\n  const {\n    item,\n    isActive,\n    label,\n    children: menu,\n    reverseMenuDirection\n  } = props,\n        rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [menuHasFocus, setMenuHasFocus] = useState(false);\n  const {\n    menuIdOpen,\n    setMenuIdOpen\n  } = useNavBarContext();\n  const theme = useTheme2();\n  const styles = getStyles(theme, isActive); // Create state based on the incoming props\n\n  const state = useMenuTriggerState(Object.assign({}, rest)); // Get props for the menu trigger and menu elements\n\n  const ref = React.useRef(null);\n  const {\n    menuTriggerProps,\n    menuProps\n  } = useMenuTrigger({}, state, ref);\n  useEffect(() => {\n    if (item.highlightId) {\n      reportExperimentView(`feature-highlights-${item.highlightId}-nav`, 'test', '');\n    }\n  }, [item.highlightId]);\n  const {\n    hoverProps\n  } = useHover({\n    onHoverChange: isHovering => {\n      if (isHovering) {\n        state.open();\n        setMenuIdOpen(item.id);\n      } else {\n        state.close();\n        setMenuIdOpen(undefined);\n      }\n    }\n  });\n  useEffect(() => {\n    // close the menu when changing submenus\n    if (menuIdOpen !== item.id) {\n      state.close();\n      setMenuHasFocus(false);\n    } else {\n      state.open();\n    }\n  }, [menuIdOpen, state, item.id]);\n  const {\n    keyboardProps\n  } = useKeyboard({\n    onKeyDown: e => {\n      switch (e.key) {\n        case 'ArrowRight':\n          if (!state.isOpen) {\n            state.open();\n            setMenuIdOpen(item.id);\n          }\n\n          setMenuHasFocus(true);\n          break;\n\n        case 'Tab':\n          setMenuIdOpen(undefined);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }); // Get props for the button based on the trigger props from useMenuTrigger\n\n  const {\n    buttonProps\n  } = useButton(menuTriggerProps, ref);\n  const Wrapper = item.highlightText ? NavFeatureHighlight : React.Fragment;\n\n  const itemContent = /*#__PURE__*/_jsx(Wrapper, {\n    children: /*#__PURE__*/_jsxs(\"span\", {\n      className: styles.icon,\n      children: [(item === null || item === void 0 ? void 0 : item.icon) && /*#__PURE__*/_jsx(Icon, {\n        name: item.icon,\n        size: \"xl\"\n      }), (item === null || item === void 0 ? void 0 : item.img) && /*#__PURE__*/_jsx(\"img\", {\n        src: item.img,\n        alt: `${item.text} logo`\n      })]\n    })\n  });\n\n  let element = /*#__PURE__*/_jsx(\"button\", Object.assign({\n    className: styles.element\n  }, buttonProps, keyboardProps, hoverProps, {\n    ref: ref,\n    onClick: item === null || item === void 0 ? void 0 : item.onClick,\n    \"aria-label\": label,\n    children: itemContent\n  }));\n\n  if (item !== null && item !== void 0 && item.url) {\n    element = !item.target && item.url.startsWith('/') ? /*#__PURE__*/_jsx(Link, Object.assign({}, buttonProps, keyboardProps, hoverProps, {\n      ref: ref,\n      href: item.url,\n      target: item.target,\n      onClick: item === null || item === void 0 ? void 0 : item.onClick,\n      className: styles.element,\n      \"aria-label\": label,\n      children: itemContent\n    })) : /*#__PURE__*/_jsx(\"a\", Object.assign({\n      href: item.url,\n      target: item.target,\n      onClick: item === null || item === void 0 ? void 0 : item.onClick\n    }, buttonProps, keyboardProps, hoverProps, {\n      ref: ref,\n      className: styles.element,\n      \"aria-label\": label,\n      children: itemContent\n    }));\n  }\n\n  const overlayRef = React.useRef(null);\n  const {\n    dialogProps\n  } = useDialog({}, overlayRef);\n  const {\n    overlayProps\n  } = useOverlay({\n    onClose: () => {\n      state.close();\n      setMenuIdOpen(undefined);\n    },\n    isOpen: state.isOpen,\n    isDismissable: true\n  }, overlayRef);\n  let {\n    overlayProps: overlayPositionProps\n  } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef,\n    placement: reverseMenuDirection ? 'right bottom' : 'right top',\n    isOpen: state.isOpen\n  });\n  const {\n    focusWithinProps\n  } = useFocusWithin({\n    onFocusWithin: e => {\n      var _ref$current, _e$target$scrollIntoV, _e$target;\n\n      if (e.target.id === ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.id)) {\n        // If focussing on the trigger itself, set the menu id that is open\n        setMenuIdOpen(item.id);\n        state.open();\n      }\n\n      (_e$target$scrollIntoV = (_e$target = e.target).scrollIntoView) === null || _e$target$scrollIntoV === void 0 ? void 0 : _e$target$scrollIntoV.call(_e$target, {\n        block: 'nearest'\n      });\n    },\n    onBlurWithin: e => {\n      var _e$target2, _overlayRef$current;\n\n      if (((_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.getAttribute('role')) === 'menuitem' && !((_overlayRef$current = overlayRef.current) !== null && _overlayRef$current !== void 0 && _overlayRef$current.contains(e.relatedTarget))) {\n        // If it is blurring from a menuitem to an element outside the current overlay\n        // close the menu that is open\n        setMenuIdOpen(undefined);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({\n    className: cx(styles.element, 'dropdown')\n  }, focusWithinProps, {\n    children: [element, state.isOpen && /*#__PURE__*/_jsx(OverlayContainer, {\n      portalContainer: getNavMenuPortalContainer(),\n      children: /*#__PURE__*/_jsx(NavBarItemMenuContext.Provider, {\n        value: {\n          menuProps,\n          menuHasFocus,\n          onClose: () => state.close(),\n          onLeft: () => {\n            var _ref$current2;\n\n            setMenuHasFocus(false);\n            (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.focus();\n          }\n        },\n        children: /*#__PURE__*/_jsx(FocusScope, {\n          restoreFocus: true,\n          children: /*#__PURE__*/_jsxs(\"div\", Object.assign({}, overlayProps, overlayPositionProps, dialogProps, hoverProps, {\n            ref: overlayRef,\n            children: [/*#__PURE__*/_jsx(DismissButton, {\n              onDismiss: () => state.close()\n            }), menu, /*#__PURE__*/_jsx(DismissButton, {\n              onDismiss: () => state.close()\n            })]\n          }))\n        })\n      })\n    })]\n  }));\n}\n\nconst getStyles = (theme, isActive) => ({\n  element: css({\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'inherit',\n    display: 'grid',\n    padding: 0,\n    placeContent: 'center',\n    height: theme.spacing(6),\n    width: theme.spacing(7),\n    '&::before': {\n      display: isActive ? 'block' : 'none',\n      content: '\" \"',\n      position: 'absolute',\n      left: theme.spacing(1),\n      top: theme.spacing(1.5),\n      bottom: theme.spacing(1.5),\n      width: theme.spacing(0.5),\n      borderRadius: theme.shape.borderRadius(1),\n      backgroundImage: theme.colors.gradients.brandVertical\n    },\n    '&:focus-visible': {\n      backgroundColor: theme.colors.action.hover,\n      boxShadow: 'none',\n      color: theme.colors.text.primary,\n      outline: `${theme.shape.borderRadius(1)} solid ${theme.colors.primary.main}`,\n      outlineOffset: `-${theme.shape.borderRadius(1)}`,\n      transition: 'none'\n    }\n  }),\n  icon: css({\n    height: '100%',\n    width: '100%',\n    img: {\n      borderRadius: '50%',\n      height: theme.spacing(3),\n      width: theme.spacing(3)\n    }\n  })\n});","map":{"version":3,"names":["css","cx","useButton","useDialog","FocusScope","useFocusWithin","useHover","useKeyboard","useMenuTrigger","DismissButton","OverlayContainer","useOverlay","useOverlayPosition","useMenuTriggerState","React","useEffect","useState","reportExperimentView","Icon","Link","useTheme2","getNavMenuPortalContainer","NavFeatureHighlight","NavBarItemMenuContext","useNavBarContext","NavBarItemMenuTrigger","props","item","isActive","label","children","menu","reverseMenuDirection","rest","menuHasFocus","setMenuHasFocus","menuIdOpen","setMenuIdOpen","theme","styles","getStyles","state","ref","useRef","menuTriggerProps","menuProps","highlightId","hoverProps","onHoverChange","isHovering","open","id","close","undefined","keyboardProps","onKeyDown","e","key","isOpen","buttonProps","Wrapper","highlightText","Fragment","itemContent","icon","img","text","element","onClick","url","target","startsWith","overlayRef","dialogProps","overlayProps","onClose","isDismissable","overlayPositionProps","targetRef","placement","focusWithinProps","onFocusWithin","current","scrollIntoView","block","onBlurWithin","getAttribute","contains","relatedTarget","onLeft","focus","backgroundColor","border","color","display","padding","placeContent","height","spacing","width","content","position","left","top","bottom","borderRadius","shape","backgroundImage","colors","gradients","brandVertical","action","hover","boxShadow","primary","outline","main","outlineOffset","transition"],"sources":["/home/soula/grafana/public/app/core/components/NavBar/NavBarItemMenuTrigger.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useButton } from '@react-aria/button';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useFocusWithin, useHover, useKeyboard } from '@react-aria/interactions';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { DismissButton, OverlayContainer, useOverlay, useOverlayPosition } from '@react-aria/overlays';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport { MenuTriggerProps } from '@react-types/menu';\nimport React, { ReactElement, useEffect, useState } from 'react';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { reportExperimentView } from '@grafana/runtime';\nimport { Icon, IconName, Link, useTheme2 } from '@grafana/ui';\n\nimport { getNavMenuPortalContainer } from './NavBarMenuPortalContainer';\nimport { NavFeatureHighlight } from './NavFeatureHighlight';\nimport { NavBarItemMenuContext, useNavBarContext } from './context';\n\nexport interface NavBarItemMenuTriggerProps extends MenuTriggerProps {\n  children: ReactElement;\n  item: NavModelItem;\n  isActive?: boolean;\n  label: string;\n  reverseMenuDirection: boolean;\n}\n\nexport function NavBarItemMenuTrigger(props: NavBarItemMenuTriggerProps): ReactElement {\n  const { item, isActive, label, children: menu, reverseMenuDirection, ...rest } = props;\n  const [menuHasFocus, setMenuHasFocus] = useState(false);\n  const { menuIdOpen, setMenuIdOpen } = useNavBarContext();\n  const theme = useTheme2();\n  const styles = getStyles(theme, isActive);\n\n  // Create state based on the incoming props\n  const state = useMenuTriggerState({ ...rest });\n\n  // Get props for the menu trigger and menu elements\n  const ref = React.useRef<HTMLElement>(null);\n  const { menuTriggerProps, menuProps } = useMenuTrigger({}, state, ref);\n\n  useEffect(() => {\n    if (item.highlightId) {\n      reportExperimentView(`feature-highlights-${item.highlightId}-nav`, 'test', '');\n    }\n  }, [item.highlightId]);\n\n  const { hoverProps } = useHover({\n    onHoverChange: (isHovering) => {\n      if (isHovering) {\n        state.open();\n        setMenuIdOpen(item.id);\n      } else {\n        state.close();\n        setMenuIdOpen(undefined);\n      }\n    },\n  });\n\n  useEffect(() => {\n    // close the menu when changing submenus\n    if (menuIdOpen !== item.id) {\n      state.close();\n      setMenuHasFocus(false);\n    } else {\n      state.open();\n    }\n  }, [menuIdOpen, state, item.id]);\n\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      switch (e.key) {\n        case 'ArrowRight':\n          if (!state.isOpen) {\n            state.open();\n            setMenuIdOpen(item.id);\n          }\n          setMenuHasFocus(true);\n          break;\n        case 'Tab':\n          setMenuIdOpen(undefined);\n          break;\n        default:\n          break;\n      }\n    },\n  });\n\n  // Get props for the button based on the trigger props from useMenuTrigger\n  const { buttonProps } = useButton(menuTriggerProps, ref);\n  const Wrapper = item.highlightText ? NavFeatureHighlight : React.Fragment;\n  const itemContent = (\n    <Wrapper>\n      <span className={styles.icon}>\n        {item?.icon && <Icon name={item.icon as IconName} size=\"xl\" />}\n        {item?.img && <img src={item.img} alt={`${item.text} logo`} />}\n      </span>\n    </Wrapper>\n  );\n  let element = (\n    <button\n      className={styles.element}\n      {...buttonProps}\n      {...keyboardProps}\n      {...hoverProps}\n      ref={ref as React.RefObject<HTMLButtonElement>}\n      onClick={item?.onClick}\n      aria-label={label}\n    >\n      {itemContent}\n    </button>\n  );\n\n  if (item?.url) {\n    element =\n      !item.target && item.url.startsWith('/') ? (\n        <Link\n          {...buttonProps}\n          {...keyboardProps}\n          {...hoverProps}\n          ref={ref as React.RefObject<HTMLAnchorElement>}\n          href={item.url}\n          target={item.target}\n          onClick={item?.onClick}\n          className={styles.element}\n          aria-label={label}\n        >\n          {itemContent}\n        </Link>\n      ) : (\n        <a\n          href={item.url}\n          target={item.target}\n          onClick={item?.onClick}\n          {...buttonProps}\n          {...keyboardProps}\n          {...hoverProps}\n          ref={ref as React.RefObject<HTMLAnchorElement>}\n          className={styles.element}\n          aria-label={label}\n        >\n          {itemContent}\n        </a>\n      );\n  }\n\n  const overlayRef = React.useRef<HTMLDivElement>(null);\n  const { dialogProps } = useDialog({}, overlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose: () => {\n        state.close();\n        setMenuIdOpen(undefined);\n      },\n      isOpen: state.isOpen,\n      isDismissable: true,\n    },\n    overlayRef\n  );\n\n  let { overlayProps: overlayPositionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef,\n    placement: reverseMenuDirection ? 'right bottom' : 'right top',\n    isOpen: state.isOpen,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithin: (e) => {\n      if (e.target.id === ref.current?.id) {\n        // If focussing on the trigger itself, set the menu id that is open\n        setMenuIdOpen(item.id);\n        state.open();\n      }\n      e.target.scrollIntoView?.({\n        block: 'nearest',\n      });\n    },\n    onBlurWithin: (e) => {\n      if (e.target?.getAttribute('role') === 'menuitem' && !overlayRef.current?.contains(e.relatedTarget)) {\n        // If it is blurring from a menuitem to an element outside the current overlay\n        // close the menu that is open\n        setMenuIdOpen(undefined);\n      }\n    },\n  });\n\n  return (\n    <div className={cx(styles.element, 'dropdown')} {...focusWithinProps}>\n      {element}\n      {state.isOpen && (\n        <OverlayContainer portalContainer={getNavMenuPortalContainer()}>\n          <NavBarItemMenuContext.Provider\n            value={{\n              menuProps,\n              menuHasFocus,\n              onClose: () => state.close(),\n              onLeft: () => {\n                setMenuHasFocus(false);\n                ref.current?.focus();\n              },\n            }}\n          >\n            <FocusScope restoreFocus>\n              <div {...overlayProps} {...overlayPositionProps} {...dialogProps} {...hoverProps} ref={overlayRef}>\n                <DismissButton onDismiss={() => state.close()} />\n                {menu}\n                <DismissButton onDismiss={() => state.close()} />\n              </div>\n            </FocusScope>\n          </NavBarItemMenuContext.Provider>\n        </OverlayContainer>\n      )}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, isActive?: boolean) => ({\n  element: css({\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'inherit',\n    display: 'grid',\n    padding: 0,\n    placeContent: 'center',\n    height: theme.spacing(6),\n    width: theme.spacing(7),\n\n    '&::before': {\n      display: isActive ? 'block' : 'none',\n      content: '\" \"',\n      position: 'absolute',\n      left: theme.spacing(1),\n      top: theme.spacing(1.5),\n      bottom: theme.spacing(1.5),\n      width: theme.spacing(0.5),\n      borderRadius: theme.shape.borderRadius(1),\n      backgroundImage: theme.colors.gradients.brandVertical,\n    },\n\n    '&:focus-visible': {\n      backgroundColor: theme.colors.action.hover,\n      boxShadow: 'none',\n      color: theme.colors.text.primary,\n      outline: `${theme.shape.borderRadius(1)} solid ${theme.colors.primary.main}`,\n      outlineOffset: `-${theme.shape.borderRadius(1)}`,\n      transition: 'none',\n    },\n  }),\n  icon: css({\n    height: '100%',\n    width: '100%',\n\n    img: {\n      borderRadius: '50%',\n      height: theme.spacing(3),\n      width: theme.spacing(3),\n    },\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}