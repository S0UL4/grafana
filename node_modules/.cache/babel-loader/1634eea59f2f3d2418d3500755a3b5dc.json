{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { FieldType } from '@grafana/data';\nimport { InlineField, InlineFieldRow, RadioButtonGroup, Select, useStyles2 } from '@grafana/ui';\nimport { useFieldDisplayNames, useSelectOptions } from '@grafana/ui/src/components/MatchersUI/utils';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\nimport { ScalarDimensionMode } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst fixedValueOption = {\n  label: 'Fixed value',\n  value: '_____fixed_____'\n};\nconst scalarOptions = [{\n  label: 'Mod',\n  value: ScalarDimensionMode.Mod,\n  description: 'Use field values, mod from max'\n}, {\n  label: 'Clamped',\n  value: ScalarDimensionMode.Clamped,\n  description: 'Use field values, clamped to max and min'\n}];\nexport const ScalarDimensionEditor = props => {\n  var _value$mode, _val$fixed;\n\n  const {\n    value,\n    context,\n    onChange,\n    item\n  } = props;\n  const {\n    settings\n  } = item;\n  const DEFAULT_VALUE = 0;\n  const fieldName = value === null || value === void 0 ? void 0 : value.field;\n  const isFixed = Boolean(!fieldName);\n  const names = useFieldDisplayNames(context.data);\n  const selectOptions = useSelectOptions(names, fieldName, fixedValueOption, FieldType.number);\n  const styles = useStyles2(getStyles);\n  const onSelectChange = useCallback(selection => {\n    const field = selection.value;\n\n    if (field && field !== fixedValueOption.value) {\n      onChange(Object.assign({}, value, {\n        field\n      }));\n    } else {\n      var _value$fixed;\n\n      const fixed = (_value$fixed = value.fixed) !== null && _value$fixed !== void 0 ? _value$fixed : DEFAULT_VALUE;\n      onChange(Object.assign({}, value, {\n        field: undefined,\n        fixed\n      }));\n    }\n  }, [onChange, value]);\n  const onModeChange = useCallback(mode => {\n    onChange(Object.assign({}, value, {\n      mode\n    }));\n  }, [onChange, value]);\n  const onValueChange = useCallback(v => {\n    onChange(Object.assign({}, value, {\n      field: undefined,\n      fixed: v !== null && v !== void 0 ? v : DEFAULT_VALUE\n    }));\n  }, [onChange, value]);\n  const val = value !== null && value !== void 0 ? value : {};\n  const mode = (_value$mode = value === null || value === void 0 ? void 0 : value.mode) !== null && _value$mode !== void 0 ? _value$mode : ScalarDimensionMode.Mod;\n  const selectedOption = isFixed ? fixedValueOption : selectOptions.find(v => v.value === fieldName);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n        children: /*#__PURE__*/_jsx(InlineField, {\n          label: \"Limit\",\n          labelWidth: 8,\n          grow: true,\n          children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n            value: mode,\n            options: scalarOptions,\n            onChange: onModeChange,\n            fullWidth: true\n          })\n        })\n      }), /*#__PURE__*/_jsx(Select, {\n        value: selectedOption,\n        options: selectOptions,\n        onChange: onSelectChange,\n        noOptionsMessage: \"No fields found\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.range,\n      children: isFixed && /*#__PURE__*/_jsx(InlineFieldRow, {\n        children: /*#__PURE__*/_jsx(InlineField, {\n          label: \"Value\",\n          labelWidth: 8,\n          grow: true,\n          children: /*#__PURE__*/_jsx(NumberInput, {\n            value: (_val$fixed = val === null || val === void 0 ? void 0 : val.fixed) !== null && _val$fixed !== void 0 ? _val$fixed : DEFAULT_VALUE,\n            onChange: onValueChange,\n            max: settings === null || settings === void 0 ? void 0 : settings.max,\n            min: settings === null || settings === void 0 ? void 0 : settings.min\n          })\n        })\n      })\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  range: css`\n    padding-top: 8px;\n  `\n});","map":{"version":3,"names":["css","React","useCallback","FieldType","InlineField","InlineFieldRow","RadioButtonGroup","Select","useStyles2","useFieldDisplayNames","useSelectOptions","NumberInput","ScalarDimensionMode","fixedValueOption","label","value","scalarOptions","Mod","description","Clamped","ScalarDimensionEditor","props","context","onChange","item","settings","DEFAULT_VALUE","fieldName","field","isFixed","Boolean","names","data","selectOptions","number","styles","getStyles","onSelectChange","selection","fixed","undefined","onModeChange","mode","onValueChange","v","val","selectedOption","find","range","max","min","theme"],"sources":["/home/soula/grafana/public/app/features/dimensions/editors/ScalarDimensionEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useCallback } from 'react';\n\nimport { FieldType, GrafanaTheme2, SelectableValue, StandardEditorProps } from '@grafana/data';\nimport { InlineField, InlineFieldRow, RadioButtonGroup, Select, useStyles2 } from '@grafana/ui';\nimport { useFieldDisplayNames, useSelectOptions } from '@grafana/ui/src/components/MatchersUI/utils';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\n\nimport { ScalarDimensionConfig, ScalarDimensionMode, ScalarDimensionOptions } from '../types';\n\nconst fixedValueOption: SelectableValue<string> = {\n  label: 'Fixed value',\n  value: '_____fixed_____',\n};\n\nconst scalarOptions = [\n  { label: 'Mod', value: ScalarDimensionMode.Mod, description: 'Use field values, mod from max' },\n  { label: 'Clamped', value: ScalarDimensionMode.Clamped, description: 'Use field values, clamped to max and min' },\n];\n\nexport const ScalarDimensionEditor: FC<StandardEditorProps<ScalarDimensionConfig, ScalarDimensionOptions, any>> = (\n  props\n) => {\n  const { value, context, onChange, item } = props;\n  const { settings } = item;\n\n  const DEFAULT_VALUE = 0;\n\n  const fieldName = value?.field;\n  const isFixed = Boolean(!fieldName);\n  const names = useFieldDisplayNames(context.data);\n  const selectOptions = useSelectOptions(names, fieldName, fixedValueOption, FieldType.number);\n\n  const styles = useStyles2(getStyles);\n\n  const onSelectChange = useCallback(\n    (selection: SelectableValue<string>) => {\n      const field = selection.value;\n      if (field && field !== fixedValueOption.value) {\n        onChange({\n          ...value,\n          field,\n        });\n      } else {\n        const fixed = value.fixed ?? DEFAULT_VALUE;\n        onChange({\n          ...value,\n          field: undefined,\n          fixed,\n        });\n      }\n    },\n    [onChange, value]\n  );\n\n  const onModeChange = useCallback(\n    (mode) => {\n      onChange({\n        ...value,\n        mode,\n      });\n    },\n    [onChange, value]\n  );\n\n  const onValueChange = useCallback(\n    (v: number | undefined) => {\n      onChange({\n        ...value,\n        field: undefined,\n        fixed: v ?? DEFAULT_VALUE,\n      });\n    },\n    [onChange, value]\n  );\n\n  const val = value ?? {};\n  const mode = value?.mode ?? ScalarDimensionMode.Mod;\n  const selectedOption = isFixed ? fixedValueOption : selectOptions.find((v) => v.value === fieldName);\n  return (\n    <>\n      <div>\n        <InlineFieldRow>\n          <InlineField label=\"Limit\" labelWidth={8} grow={true}>\n            <RadioButtonGroup value={mode} options={scalarOptions} onChange={onModeChange} fullWidth />\n          </InlineField>\n        </InlineFieldRow>\n        <Select\n          value={selectedOption}\n          options={selectOptions}\n          onChange={onSelectChange}\n          noOptionsMessage=\"No fields found\"\n        />\n      </div>\n      <div className={styles.range}>\n        {isFixed && (\n          <InlineFieldRow>\n            <InlineField label=\"Value\" labelWidth={8} grow={true}>\n              <NumberInput\n                value={val?.fixed ?? DEFAULT_VALUE}\n                onChange={onValueChange}\n                max={settings?.max}\n                min={settings?.min}\n              />\n            </InlineField>\n          </InlineFieldRow>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  range: css`\n    padding-top: 8px;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}