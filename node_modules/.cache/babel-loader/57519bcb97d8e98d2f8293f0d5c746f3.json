{"ast":null,"code":"import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { iconItem } from 'app/features/canvas/elements/icon';\nimport { optionBuilder } from '../canvas/editor/options';\nimport { IconPanel } from './IconPanel';\nimport { defaultPanelOptions } from './models.gen';\nexport const plugin = new PanelPlugin(IconPanel).setNoPadding() // extend to panel edges\n.useFieldConfig({\n  standardOptions: {\n    [FieldConfigProperty.Mappings]: {\n      settings: {\n        icon: true\n      }\n    }\n  }\n}).setPanelOptions(builder => {\n  builder.addNestedOptions({\n    category: ['Icon'],\n    path: 'root',\n    // Dynamically fill the selected element\n    build: (builder, ctx) => {\n      iconItem.registerOptionsUI(builder, ctx);\n      optionBuilder.addBackground(builder, ctx);\n      optionBuilder.addBorder(builder, ctx);\n    },\n    defaultValue: defaultPanelOptions.root\n  });\n});","map":{"version":3,"names":["FieldConfigProperty","PanelPlugin","iconItem","optionBuilder","IconPanel","defaultPanelOptions","plugin","setNoPadding","useFieldConfig","standardOptions","Mappings","settings","icon","setPanelOptions","builder","addNestedOptions","category","path","build","ctx","registerOptionsUI","addBackground","addBorder","defaultValue","root"],"sources":["/home/soula/grafana/public/app/plugins/panel/icon/module.tsx"],"sourcesContent":["import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { CanvasElementOptions } from 'app/features/canvas';\nimport { IconConfig, iconItem } from 'app/features/canvas/elements/icon';\n\nimport { optionBuilder } from '../canvas/editor/options';\n\nimport { IconPanel } from './IconPanel';\nimport { defaultPanelOptions, PanelOptions } from './models.gen';\n\nexport const plugin = new PanelPlugin<PanelOptions>(IconPanel)\n  .setNoPadding() // extend to panel edges\n  .useFieldConfig({\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {\n        settings: {\n          icon: true,\n        },\n      },\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder.addNestedOptions<CanvasElementOptions<IconConfig>>({\n      category: ['Icon'],\n      path: 'root',\n\n      // Dynamically fill the selected element\n      build: (builder, ctx) => {\n        iconItem.registerOptionsUI!(builder, ctx);\n\n        optionBuilder.addBackground(builder, ctx);\n        optionBuilder.addBorder(builder, ctx);\n      },\n\n      defaultValue: defaultPanelOptions.root as any,\n    });\n  });\n"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,WAA9B,QAAiD,eAAjD;AAEA,SAAqBC,QAArB,QAAqC,mCAArC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,mBAAT,QAAkD,cAAlD;AAEA,OAAO,MAAMC,MAAM,GAAG,IAAIL,WAAJ,CAA8BG,SAA9B,EACnBG,YADmB,GACJ;AADI,CAEnBC,cAFmB,CAEJ;EACdC,eAAe,EAAE;IACf,CAACT,mBAAmB,CAACU,QAArB,GAAgC;MAC9BC,QAAQ,EAAE;QACRC,IAAI,EAAE;MADE;IADoB;EADjB;AADH,CAFI,EAWnBC,eAXmB,CAWFC,OAAD,IAAa;EAC5BA,OAAO,CAACC,gBAAR,CAA2D;IACzDC,QAAQ,EAAE,CAAC,MAAD,CAD+C;IAEzDC,IAAI,EAAE,MAFmD;IAIzD;IACAC,KAAK,EAAE,CAACJ,OAAD,EAAUK,GAAV,KAAkB;MACvBjB,QAAQ,CAACkB,iBAAT,CAA4BN,OAA5B,EAAqCK,GAArC;MAEAhB,aAAa,CAACkB,aAAd,CAA4BP,OAA5B,EAAqCK,GAArC;MACAhB,aAAa,CAACmB,SAAd,CAAwBR,OAAxB,EAAiCK,GAAjC;IACD,CAVwD;IAYzDI,YAAY,EAAElB,mBAAmB,CAACmB;EAZuB,CAA3D;AAcD,CA1BmB,CAAf"},"metadata":{},"sourceType":"module"}