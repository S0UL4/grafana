{"ast":null,"code":"import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getBackendSrv, isFetchError } from '@grafana/runtime';\nimport { importPanelPlugin } from 'app/features/plugins/importPanelPlugin';\nimport { invalidatePluginInCache } from '../../pluginCacheBuster';\nimport { getRemotePlugins, getPluginErrors, getLocalPlugins, getPluginDetails, installPlugin, uninstallPlugin } from '../api';\nimport { STATE_PREFIX } from '../constants';\nimport { mergeLocalsAndRemotes, updatePanels } from '../helpers';\nexport const fetchAll = createAsyncThunk(`${STATE_PREFIX}/fetchAll`, async (_, thunkApi) => {\n  try {\n    const {\n      dispatch\n    } = thunkApi;\n    const [localPlugins, pluginErrors, {\n      payload: remotePlugins\n    }] = await Promise.all([getLocalPlugins(), getPluginErrors(), dispatch(fetchRemotePlugins())]);\n    return mergeLocalsAndRemotes(localPlugins, remotePlugins, pluginErrors);\n  } catch (e) {\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n});\nexport const fetchRemotePlugins = createAsyncThunk(`${STATE_PREFIX}/fetchRemotePlugins`, async (_, thunkApi) => {\n  try {\n    return await getRemotePlugins();\n  } catch (error) {\n    if (isFetchError(error)) {\n      error.isHandled = true;\n    }\n\n    return thunkApi.rejectWithValue([]);\n  }\n});\nexport const fetchDetails = createAsyncThunk(`${STATE_PREFIX}/fetchDetails`, async (id, thunkApi) => {\n  try {\n    const details = await getPluginDetails(id);\n    return {\n      id,\n      changes: {\n        details\n      }\n    };\n  } catch (e) {\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n}); // We are also using the install API endpoint to update the plugin\n\nexport const install = createAsyncThunk(`${STATE_PREFIX}/install`, async ({\n  id,\n  version,\n  isUpdating = false\n}, thunkApi) => {\n  const changes = isUpdating ? {\n    isInstalled: true,\n    installedVersion: version,\n    hasUpdate: false\n  } : {\n    isInstalled: true,\n    installedVersion: version\n  };\n\n  try {\n    await installPlugin(id);\n    await updatePanels();\n\n    if (isUpdating) {\n      invalidatePluginInCache(id);\n    }\n\n    return {\n      id,\n      changes\n    };\n  } catch (e) {\n    console.error(e);\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n});\nexport const uninstall = createAsyncThunk(`${STATE_PREFIX}/uninstall`, async (id, thunkApi) => {\n  try {\n    await uninstallPlugin(id);\n    await updatePanels();\n    invalidatePluginInCache(id);\n    return {\n      id,\n      changes: {\n        isInstalled: false,\n        installedVersion: undefined\n      }\n    };\n  } catch (e) {\n    console.error(e);\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n}); // We need this to be backwards-compatible with other parts of Grafana.\n// (Originally in \"public/app/features/plugins/state/actions.ts\")\n// TODO<remove once the \"plugin_admin_enabled\" feature flag is removed>\n\nexport const loadPluginDashboards = createAsyncThunk(`${STATE_PREFIX}/loadPluginDashboards`, async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const dataSourceType = state.dataSources.dataSource.type;\n  const url = `api/plugins/${dataSourceType}/dashboards`;\n  return getBackendSrv().get(url);\n});\nexport const panelPluginLoaded = createAction(`${STATE_PREFIX}/panelPluginLoaded`); // We need this to be backwards-compatible with other parts of Grafana.\n// (Originally in \"public/app/features/plugins/state/actions.ts\")\n// It cannot be constructed with `createAsyncThunk()` as we need the return value on the call-site,\n// and we cannot easily change the call-site to unwrap the result.\n// TODO<remove once the \"plugin_admin_enabled\" feature flag is removed>\n\nexport const loadPanelPlugin = id => {\n  return async (dispatch, getStore) => {\n    let plugin = getStore().plugins.panels[id];\n\n    if (!plugin) {\n      plugin = await importPanelPlugin(id); // second check to protect against raise condition\n\n      if (!getStore().plugins.panels[id]) {\n        dispatch(panelPluginLoaded(plugin));\n      }\n    }\n\n    return plugin;\n  };\n};","map":{"version":3,"names":["createAction","createAsyncThunk","getBackendSrv","isFetchError","importPanelPlugin","invalidatePluginInCache","getRemotePlugins","getPluginErrors","getLocalPlugins","getPluginDetails","installPlugin","uninstallPlugin","STATE_PREFIX","mergeLocalsAndRemotes","updatePanels","fetchAll","_","thunkApi","dispatch","localPlugins","pluginErrors","payload","remotePlugins","Promise","all","fetchRemotePlugins","e","rejectWithValue","error","isHandled","fetchDetails","id","details","changes","install","version","isUpdating","isInstalled","installedVersion","hasUpdate","console","uninstall","undefined","loadPluginDashboards","state","getState","dataSourceType","dataSources","dataSource","type","url","get","panelPluginLoaded","loadPanelPlugin","getStore","plugin","plugins","panels"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/state/actions.ts"],"sourcesContent":["import { createAction, createAsyncThunk, Update } from '@reduxjs/toolkit';\n\nimport { PanelPlugin } from '@grafana/data';\nimport { getBackendSrv, isFetchError } from '@grafana/runtime';\nimport { importPanelPlugin } from 'app/features/plugins/importPanelPlugin';\nimport { StoreState, ThunkResult } from 'app/types';\n\nimport { invalidatePluginInCache } from '../../pluginCacheBuster';\nimport {\n  getRemotePlugins,\n  getPluginErrors,\n  getLocalPlugins,\n  getPluginDetails,\n  installPlugin,\n  uninstallPlugin,\n} from '../api';\nimport { STATE_PREFIX } from '../constants';\nimport { mergeLocalsAndRemotes, updatePanels } from '../helpers';\nimport { CatalogPlugin, RemotePlugin } from '../types';\n\nexport const fetchAll = createAsyncThunk(`${STATE_PREFIX}/fetchAll`, async (_, thunkApi) => {\n  try {\n    const { dispatch } = thunkApi;\n    const [localPlugins, pluginErrors, { payload: remotePlugins }] = await Promise.all([\n      getLocalPlugins(),\n      getPluginErrors(),\n      dispatch(fetchRemotePlugins()),\n    ]);\n\n    return mergeLocalsAndRemotes(localPlugins, remotePlugins, pluginErrors);\n  } catch (e) {\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n});\n\nexport const fetchRemotePlugins = createAsyncThunk<RemotePlugin[], void, { rejectValue: RemotePlugin[] }>(\n  `${STATE_PREFIX}/fetchRemotePlugins`,\n  async (_, thunkApi) => {\n    try {\n      return await getRemotePlugins();\n    } catch (error) {\n      if (isFetchError(error)) {\n        error.isHandled = true;\n      }\n      return thunkApi.rejectWithValue([]);\n    }\n  }\n);\n\nexport const fetchDetails = createAsyncThunk(`${STATE_PREFIX}/fetchDetails`, async (id: string, thunkApi) => {\n  try {\n    const details = await getPluginDetails(id);\n\n    return {\n      id,\n      changes: { details },\n    } as Update<CatalogPlugin>;\n  } catch (e) {\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n});\n\n// We are also using the install API endpoint to update the plugin\nexport const install = createAsyncThunk(\n  `${STATE_PREFIX}/install`,\n  async ({ id, version, isUpdating = false }: { id: string; version?: string; isUpdating?: boolean }, thunkApi) => {\n    const changes = isUpdating\n      ? { isInstalled: true, installedVersion: version, hasUpdate: false }\n      : { isInstalled: true, installedVersion: version };\n    try {\n      await installPlugin(id);\n      await updatePanels();\n\n      if (isUpdating) {\n        invalidatePluginInCache(id);\n      }\n\n      return { id, changes } as Update<CatalogPlugin>;\n    } catch (e) {\n      console.error(e);\n\n      return thunkApi.rejectWithValue('Unknown error.');\n    }\n  }\n);\n\nexport const uninstall = createAsyncThunk(`${STATE_PREFIX}/uninstall`, async (id: string, thunkApi) => {\n  try {\n    await uninstallPlugin(id);\n    await updatePanels();\n\n    invalidatePluginInCache(id);\n\n    return {\n      id,\n      changes: { isInstalled: false, installedVersion: undefined },\n    } as Update<CatalogPlugin>;\n  } catch (e) {\n    console.error(e);\n\n    return thunkApi.rejectWithValue('Unknown error.');\n  }\n});\n\n// We need this to be backwards-compatible with other parts of Grafana.\n// (Originally in \"public/app/features/plugins/state/actions.ts\")\n// TODO<remove once the \"plugin_admin_enabled\" feature flag is removed>\nexport const loadPluginDashboards = createAsyncThunk(`${STATE_PREFIX}/loadPluginDashboards`, async (_, thunkApi) => {\n  const state = thunkApi.getState() as StoreState;\n  const dataSourceType = state.dataSources.dataSource.type;\n  const url = `api/plugins/${dataSourceType}/dashboards`;\n\n  return getBackendSrv().get(url);\n});\n\nexport const panelPluginLoaded = createAction<PanelPlugin>(`${STATE_PREFIX}/panelPluginLoaded`);\n\n// We need this to be backwards-compatible with other parts of Grafana.\n// (Originally in \"public/app/features/plugins/state/actions.ts\")\n// It cannot be constructed with `createAsyncThunk()` as we need the return value on the call-site,\n// and we cannot easily change the call-site to unwrap the result.\n// TODO<remove once the \"plugin_admin_enabled\" feature flag is removed>\nexport const loadPanelPlugin = (id: string): ThunkResult<Promise<PanelPlugin>> => {\n  return async (dispatch, getStore) => {\n    let plugin = getStore().plugins.panels[id];\n\n    if (!plugin) {\n      plugin = await importPanelPlugin(id);\n\n      // second check to protect against raise condition\n      if (!getStore().plugins.panels[id]) {\n        dispatch(panelPluginLoaded(plugin));\n      }\n    }\n\n    return plugin;\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}