{"ast":null,"code":"var _div;\n\nimport { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { locationUtil } from '@grafana/data';\nimport { locationService, reportInteraction } from '@grafana/runtime';\nimport { Button, CustomScrollbar, Icon, PageToolbar, stylesFactory, useForceUpdate } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nimport { VariableEditorContainer } from '../../../variables/editor/VariableEditorContainer';\nimport { AccessControlDashboardPermissions } from '../DashboardPermissions/AccessControlDashboardPermissions';\nimport { DashboardPermissions } from '../DashboardPermissions/DashboardPermissions';\nimport { SaveDashboardAsButton, SaveDashboardButton } from '../SaveDashboard/SaveDashboardButton';\nimport { AnnotationsSettings } from './AnnotationsSettings';\nimport { GeneralSettings } from './GeneralSettings';\nimport { JsonEditorSettings } from './JsonEditorSettings';\nimport { LinksSettings } from './LinksSettings';\nimport { VersionsSettings } from './VersionsSettings';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst onClose = () => locationService.partial({\n  editview: null\n});\n\nconst MakeEditable = props => /*#__PURE__*/_jsxs(\"div\", {\n  children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n    className: \"dashboard-settings__header\",\n    children: \"Dashboard not editable\"\n  })), /*#__PURE__*/_jsx(Button, {\n    type: \"submit\",\n    onClick: props.onMakeEditable,\n    children: \"Make editable\"\n  })]\n});\n\nexport function DashboardSettings({\n  dashboard,\n  editview\n}) {\n  var _GeneralSettings, _AnnotationsSettings, _VariableEditorContai, _LinksSettings, _MakeEditable, _VersionsSettings, _DashboardPermissions, _AccessControlDashboa, _JsonEditorSettings, _pages$find;\n\n  const ref = useRef(null);\n  const {\n    overlayProps\n  } = useOverlay({\n    isOpen: true,\n    onClose\n  }, ref);\n  const {\n    dialogProps\n  } = useDialog({\n    'aria-label': 'Dashboard settings'\n  }, ref);\n  const forceUpdate = useForceUpdate();\n  const onMakeEditable = useCallback(() => {\n    dashboard.editable = true;\n    dashboard.meta.canMakeEditable = false;\n    dashboard.meta.canEdit = true;\n    dashboard.meta.canSave = true;\n    forceUpdate();\n  }, [dashboard, forceUpdate]);\n  const pages = useMemo(() => {\n    const pages = [];\n\n    if (dashboard.meta.canEdit) {\n      pages.push({\n        title: 'General',\n        id: 'settings',\n        icon: 'sliders-v-alt',\n        component: _GeneralSettings || (_GeneralSettings = /*#__PURE__*/_jsx(GeneralSettings, {\n          dashboard: dashboard\n        }))\n      });\n      pages.push({\n        title: 'Annotations',\n        id: 'annotations',\n        icon: 'comment-alt',\n        component: _AnnotationsSettings || (_AnnotationsSettings = /*#__PURE__*/_jsx(AnnotationsSettings, {\n          dashboard: dashboard\n        }))\n      });\n      pages.push({\n        title: 'Variables',\n        id: 'templating',\n        icon: 'calculator-alt',\n        component: _VariableEditorContai || (_VariableEditorContai = /*#__PURE__*/_jsx(VariableEditorContainer, {\n          dashboard: dashboard\n        }))\n      });\n      pages.push({\n        title: 'Links',\n        id: 'links',\n        icon: 'link',\n        component: _LinksSettings || (_LinksSettings = /*#__PURE__*/_jsx(LinksSettings, {\n          dashboard: dashboard\n        }))\n      });\n    }\n\n    if (dashboard.meta.canMakeEditable) {\n      pages.push({\n        title: 'General',\n        icon: 'sliders-v-alt',\n        id: 'settings',\n        component: _MakeEditable || (_MakeEditable = /*#__PURE__*/_jsx(MakeEditable, {\n          onMakeEditable: onMakeEditable\n        }))\n      });\n    }\n\n    if (dashboard.id && dashboard.meta.canSave) {\n      pages.push({\n        title: 'Versions',\n        id: 'versions',\n        icon: 'history',\n        component: _VersionsSettings || (_VersionsSettings = /*#__PURE__*/_jsx(VersionsSettings, {\n          dashboard: dashboard\n        }))\n      });\n    }\n\n    if (dashboard.id && dashboard.meta.canAdmin) {\n      if (!config.rbacEnabled) {\n        pages.push({\n          title: 'Permissions',\n          id: 'permissions',\n          icon: 'lock',\n          component: _DashboardPermissions || (_DashboardPermissions = /*#__PURE__*/_jsx(DashboardPermissions, {\n            dashboard: dashboard\n          }))\n        });\n      } else if (contextSrv.hasPermission(AccessControlAction.DashboardsPermissionsRead)) {\n        pages.push({\n          title: 'Permissions',\n          id: 'permissions',\n          icon: 'lock',\n          component: _AccessControlDashboa || (_AccessControlDashboa = /*#__PURE__*/_jsx(AccessControlDashboardPermissions, {\n            dashboard: dashboard\n          }))\n        });\n      }\n    }\n\n    pages.push({\n      title: 'JSON Model',\n      id: 'dashboard_json',\n      icon: 'arrow',\n      component: _JsonEditorSettings || (_JsonEditorSettings = /*#__PURE__*/_jsx(JsonEditorSettings, {\n        dashboard: dashboard\n      }))\n    });\n    return pages;\n  }, [dashboard, onMakeEditable]);\n\n  const onPostSave = () => {\n    dashboard.meta.hasUnsavedFolderChange = false;\n  };\n\n  const folderTitle = dashboard.meta.folderTitle;\n  const currentPage = (_pages$find = pages.find(page => page.id === editview)) !== null && _pages$find !== void 0 ? _pages$find : pages[0];\n  const canSaveAs = contextSrv.hasEditPermissionInFolders;\n  const canSave = dashboard.meta.canSave;\n  const styles = getStyles(config.theme2);\n  return /*#__PURE__*/_jsx(FocusScope, {\n    contain: true,\n    autoFocus: true,\n    restoreFocus: true,\n    children: /*#__PURE__*/_jsxs(\"div\", Object.assign({\n      className: \"dashboard-settings\",\n      ref: ref\n    }, overlayProps, dialogProps, {\n      children: [/*#__PURE__*/_jsx(PageToolbar, {\n        title: `${dashboard.title} / Settings`,\n        parent: folderTitle,\n        onGoBack: onClose\n      }), /*#__PURE__*/_jsx(CustomScrollbar, {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.scrollInner,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.settingsWrapper,\n            children: [/*#__PURE__*/_jsxs(\"aside\", {\n              className: \"dashboard-settings__aside\",\n              children: [pages.map(page => /*#__PURE__*/_jsxs(Link, {\n                onClick: () => reportInteraction(`Dashboard settings navigation to ${page.id}`),\n                to: loc => locationUtil.getUrlForPartial(loc, {\n                  editview: page.id\n                }),\n                className: cx('dashboard-settings__nav-item', {\n                  active: page.id === editview\n                }),\n                children: [/*#__PURE__*/_jsx(Icon, {\n                  name: page.icon,\n                  style: {\n                    marginRight: '4px'\n                  }\n                }), page.title]\n              }, page.id)), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"dashboard-settings__aside-actions\",\n                children: [canSave && /*#__PURE__*/_jsx(SaveDashboardButton, {\n                  dashboard: dashboard,\n                  onSaveSuccess: onPostSave\n                }), canSaveAs && /*#__PURE__*/_jsx(SaveDashboardAsButton, {\n                  dashboard: dashboard,\n                  onSaveSuccess: onPostSave,\n                  variant: \"secondary\"\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.settingsContent,\n              children: currentPage.component\n            })]\n          })\n        })\n      })]\n    }))\n  });\n}\nconst getStyles = stylesFactory(theme => ({\n  scrollInner: css`\n    min-width: 100%;\n    display: flex;\n  `,\n  settingsWrapper: css`\n    margin: ${theme.spacing(0, 2, 2)};\n    display: flex;\n    flex-grow: 1;\n  `,\n  settingsContent: css`\n    flex-grow: 1;\n    height: 100%;\n    padding: 32px;\n    border: 1px solid ${theme.colors.border.weak};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.borderRadius()};\n  `\n}));","map":{"version":3,"names":["css","cx","useDialog","FocusScope","useOverlay","React","useCallback","useMemo","useRef","Link","locationUtil","locationService","reportInteraction","Button","CustomScrollbar","Icon","PageToolbar","stylesFactory","useForceUpdate","config","contextSrv","AccessControlAction","VariableEditorContainer","AccessControlDashboardPermissions","DashboardPermissions","SaveDashboardAsButton","SaveDashboardButton","AnnotationsSettings","GeneralSettings","JsonEditorSettings","LinksSettings","VersionsSettings","onClose","partial","editview","MakeEditable","props","onMakeEditable","DashboardSettings","dashboard","ref","overlayProps","isOpen","dialogProps","forceUpdate","editable","meta","canMakeEditable","canEdit","canSave","pages","push","title","id","icon","component","canAdmin","rbacEnabled","hasPermission","DashboardsPermissionsRead","onPostSave","hasUnsavedFolderChange","folderTitle","currentPage","find","page","canSaveAs","hasEditPermissionInFolders","styles","getStyles","theme2","scrollInner","settingsWrapper","map","loc","getUrlForPartial","active","marginRight","settingsContent","theme","spacing","colors","border","weak","background","primary","shape","borderRadius"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardSettings/DashboardSettings.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { GrafanaTheme2, locationUtil } from '@grafana/data';\nimport { locationService, reportInteraction } from '@grafana/runtime';\nimport { Button, CustomScrollbar, Icon, IconName, PageToolbar, stylesFactory, useForceUpdate } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\nimport { VariableEditorContainer } from '../../../variables/editor/VariableEditorContainer';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { AccessControlDashboardPermissions } from '../DashboardPermissions/AccessControlDashboardPermissions';\nimport { DashboardPermissions } from '../DashboardPermissions/DashboardPermissions';\nimport { SaveDashboardAsButton, SaveDashboardButton } from '../SaveDashboard/SaveDashboardButton';\n\nimport { AnnotationsSettings } from './AnnotationsSettings';\nimport { GeneralSettings } from './GeneralSettings';\nimport { JsonEditorSettings } from './JsonEditorSettings';\nimport { LinksSettings } from './LinksSettings';\nimport { VersionsSettings } from './VersionsSettings';\n\nexport interface Props {\n  dashboard: DashboardModel;\n  editview: string;\n}\n\nexport interface SettingsPage {\n  id: string;\n  title: string;\n  icon: IconName;\n  component: React.ReactNode;\n}\n\nconst onClose = () => locationService.partial({ editview: null });\n\nconst MakeEditable = (props: { onMakeEditable: () => any }) => (\n  <div>\n    <div className=\"dashboard-settings__header\">Dashboard not editable</div>\n    <Button type=\"submit\" onClick={props.onMakeEditable}>\n      Make editable\n    </Button>\n  </div>\n);\n\nexport function DashboardSettings({ dashboard, editview }: Props) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps } = useOverlay(\n    {\n      isOpen: true,\n      onClose,\n    },\n    ref\n  );\n  const { dialogProps } = useDialog(\n    {\n      'aria-label': 'Dashboard settings',\n    },\n    ref\n  );\n  const forceUpdate = useForceUpdate();\n  const onMakeEditable = useCallback(() => {\n    dashboard.editable = true;\n    dashboard.meta.canMakeEditable = false;\n    dashboard.meta.canEdit = true;\n    dashboard.meta.canSave = true;\n    forceUpdate();\n  }, [dashboard, forceUpdate]);\n\n  const pages = useMemo((): SettingsPage[] => {\n    const pages: SettingsPage[] = [];\n\n    if (dashboard.meta.canEdit) {\n      pages.push({\n        title: 'General',\n        id: 'settings',\n        icon: 'sliders-v-alt',\n        component: <GeneralSettings dashboard={dashboard} />,\n      });\n\n      pages.push({\n        title: 'Annotations',\n        id: 'annotations',\n        icon: 'comment-alt',\n        component: <AnnotationsSettings dashboard={dashboard} />,\n      });\n\n      pages.push({\n        title: 'Variables',\n        id: 'templating',\n        icon: 'calculator-alt',\n        component: <VariableEditorContainer dashboard={dashboard} />,\n      });\n\n      pages.push({\n        title: 'Links',\n        id: 'links',\n        icon: 'link',\n        component: <LinksSettings dashboard={dashboard} />,\n      });\n    }\n\n    if (dashboard.meta.canMakeEditable) {\n      pages.push({\n        title: 'General',\n        icon: 'sliders-v-alt',\n        id: 'settings',\n        component: <MakeEditable onMakeEditable={onMakeEditable} />,\n      });\n    }\n\n    if (dashboard.id && dashboard.meta.canSave) {\n      pages.push({\n        title: 'Versions',\n        id: 'versions',\n        icon: 'history',\n        component: <VersionsSettings dashboard={dashboard} />,\n      });\n    }\n\n    if (dashboard.id && dashboard.meta.canAdmin) {\n      if (!config.rbacEnabled) {\n        pages.push({\n          title: 'Permissions',\n          id: 'permissions',\n          icon: 'lock',\n          component: <DashboardPermissions dashboard={dashboard} />,\n        });\n      } else if (contextSrv.hasPermission(AccessControlAction.DashboardsPermissionsRead)) {\n        pages.push({\n          title: 'Permissions',\n          id: 'permissions',\n          icon: 'lock',\n          component: <AccessControlDashboardPermissions dashboard={dashboard} />,\n        });\n      }\n    }\n\n    pages.push({\n      title: 'JSON Model',\n      id: 'dashboard_json',\n      icon: 'arrow',\n      component: <JsonEditorSettings dashboard={dashboard} />,\n    });\n\n    return pages;\n  }, [dashboard, onMakeEditable]);\n\n  const onPostSave = () => {\n    dashboard.meta.hasUnsavedFolderChange = false;\n  };\n\n  const folderTitle = dashboard.meta.folderTitle;\n  const currentPage = pages.find((page) => page.id === editview) ?? pages[0];\n  const canSaveAs = contextSrv.hasEditPermissionInFolders;\n  const canSave = dashboard.meta.canSave;\n  const styles = getStyles(config.theme2);\n\n  return (\n    <FocusScope contain autoFocus restoreFocus>\n      <div className=\"dashboard-settings\" ref={ref} {...overlayProps} {...dialogProps}>\n        <PageToolbar title={`${dashboard.title} / Settings`} parent={folderTitle} onGoBack={onClose} />\n        <CustomScrollbar>\n          <div className={styles.scrollInner}>\n            <div className={styles.settingsWrapper}>\n              <aside className=\"dashboard-settings__aside\">\n                {pages.map((page) => (\n                  <Link\n                    onClick={() => reportInteraction(`Dashboard settings navigation to ${page.id}`)}\n                    to={(loc) => locationUtil.getUrlForPartial(loc, { editview: page.id })}\n                    className={cx('dashboard-settings__nav-item', { active: page.id === editview })}\n                    key={page.id}\n                  >\n                    <Icon name={page.icon} style={{ marginRight: '4px' }} />\n                    {page.title}\n                  </Link>\n                ))}\n                <div className=\"dashboard-settings__aside-actions\">\n                  {canSave && <SaveDashboardButton dashboard={dashboard} onSaveSuccess={onPostSave} />}\n                  {canSaveAs && (\n                    <SaveDashboardAsButton dashboard={dashboard} onSaveSuccess={onPostSave} variant=\"secondary\" />\n                  )}\n                </div>\n              </aside>\n              <div className={styles.settingsContent}>{currentPage.component}</div>\n            </div>\n          </div>\n        </CustomScrollbar>\n      </div>\n    </FocusScope>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  scrollInner: css`\n    min-width: 100%;\n    display: flex;\n  `,\n  settingsWrapper: css`\n    margin: ${theme.spacing(0, 2, 2)};\n    display: flex;\n    flex-grow: 1;\n  `,\n  settingsContent: css`\n    flex-grow: 1;\n    height: 100%;\n    padding: 32px;\n    border: 1px solid ${theme.colors.border.weak};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.borderRadius()};\n  `,\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}