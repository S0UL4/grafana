{"ast":null,"code":"var _Icon, _Icon2;\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { getPanelLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\nimport PanelHeaderCorner from './PanelHeaderCorner';\nimport { PanelHeaderLoadingIndicator } from './PanelHeaderLoadingIndicator';\nimport { PanelHeaderMenuTrigger } from './PanelHeaderMenuTrigger';\nimport { PanelHeaderMenuWrapper } from './PanelHeaderMenuWrapper';\nimport { PanelHeaderNotices } from './PanelHeaderNotices';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const PanelHeader = ({\n  panel,\n  error,\n  isViewing,\n  isEditing,\n  data,\n  alertState,\n  dashboard\n}) => {\n  const onCancelQuery = () => panel.getQueryRunner().cancelQuery();\n\n  const title = panel.getDisplayTitle();\n  const className = cx('panel-header', !(isViewing || isEditing) ? 'grid-drag-handle' : '');\n  const styles = useStyles2(panelStyles);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(PanelHeaderLoadingIndicator, {\n      state: data.state,\n      onClick: onCancelQuery\n    }), /*#__PURE__*/_jsx(PanelHeaderCorner, {\n      panel: panel,\n      title: panel.title,\n      description: panel.description,\n      scopedVars: panel.scopedVars,\n      links: getPanelLinksSupplier(panel),\n      error: error\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: className,\n      children: /*#__PURE__*/_jsx(PanelHeaderMenuTrigger, {\n        \"data-testid\": selectors.components.Panels.Panel.title(title),\n        children: ({\n          closeMenu,\n          panelMenuOpen\n        }) => {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsx(PanelHeaderNotices, {\n              frames: data.series,\n              panelId: panel.id\n            }), alertState ? /*#__PURE__*/_jsx(Icon, {\n              name: alertState === 'alerting' ? 'heart-break' : 'heart',\n              className: \"icon-gf panel-alert-icon\",\n              style: {\n                marginRight: '4px'\n              },\n              size: \"sm\"\n            }) : null, /*#__PURE__*/_jsx(\"h2\", {\n              className: styles.titleText,\n              children: title\n            }), !dashboard.meta.publicDashboardAccessToken && /*#__PURE__*/_jsxs(\"div\", {\n              \"data-testid\": \"panel-dropdown\",\n              children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                name: \"angle-down\",\n                className: \"panel-menu-toggle\"\n              })), /*#__PURE__*/_jsx(PanelHeaderMenuWrapper, {\n                panel: panel,\n                dashboard: dashboard,\n                show: panelMenuOpen,\n                onClose: closeMenu\n              })]\n            }), data.request && data.request.timeInfo && /*#__PURE__*/_jsxs(\"span\", {\n              className: \"panel-time-info\",\n              children: [_Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n                name: \"clock-nine\",\n                size: \"sm\"\n              })), \" \", data.request.timeInfo]\n            })]\n          });\n        }\n      })\n    })]\n  });\n};\n\nconst panelStyles = theme => {\n  return {\n    titleText: css`\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n      max-width: calc(100% - 38px);\n      cursor: pointer;\n      font-weight: ${theme.typography.fontWeightMedium};\n      font-size: ${theme.typography.body.fontSize};\n      margin: 0;\n\n      &:hover {\n        color: ${theme.colors.text.primary};\n      }\n      .panel-has-alert & {\n        max-width: calc(100% - 54px);\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","selectors","Icon","useStyles2","getPanelLinksSupplier","PanelHeaderCorner","PanelHeaderLoadingIndicator","PanelHeaderMenuTrigger","PanelHeaderMenuWrapper","PanelHeaderNotices","PanelHeader","panel","error","isViewing","isEditing","data","alertState","dashboard","onCancelQuery","getQueryRunner","cancelQuery","title","getDisplayTitle","className","styles","panelStyles","state","description","scopedVars","components","Panels","Panel","closeMenu","panelMenuOpen","series","id","marginRight","titleText","meta","publicDashboardAccessToken","request","timeInfo","theme","typography","fontWeightMedium","body","fontSize","colors","text","primary"],"sources":["/home/soula/grafana/public/app/features/dashboard/dashgrid/PanelHeader/PanelHeader.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { DataLink, GrafanaTheme2, PanelData } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\nimport { PanelModel } from 'app/features/dashboard/state/PanelModel';\nimport { getPanelLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nimport PanelHeaderCorner from './PanelHeaderCorner';\nimport { PanelHeaderLoadingIndicator } from './PanelHeaderLoadingIndicator';\nimport { PanelHeaderMenuTrigger } from './PanelHeaderMenuTrigger';\nimport { PanelHeaderMenuWrapper } from './PanelHeaderMenuWrapper';\nimport { PanelHeaderNotices } from './PanelHeaderNotices';\n\nexport interface Props {\n  panel: PanelModel;\n  dashboard: DashboardModel;\n  title?: string;\n  description?: string;\n  links?: DataLink[];\n  error?: string;\n  alertState?: string;\n  isViewing: boolean;\n  isEditing: boolean;\n  data: PanelData;\n}\n\nexport const PanelHeader: FC<Props> = ({ panel, error, isViewing, isEditing, data, alertState, dashboard }) => {\n  const onCancelQuery = () => panel.getQueryRunner().cancelQuery();\n  const title = panel.getDisplayTitle();\n  const className = cx('panel-header', !(isViewing || isEditing) ? 'grid-drag-handle' : '');\n  const styles = useStyles2(panelStyles);\n\n  return (\n    <>\n      <PanelHeaderLoadingIndicator state={data.state} onClick={onCancelQuery} />\n      <PanelHeaderCorner\n        panel={panel}\n        title={panel.title}\n        description={panel.description}\n        scopedVars={panel.scopedVars}\n        links={getPanelLinksSupplier(panel)}\n        error={error}\n      />\n      <div className={className}>\n        <PanelHeaderMenuTrigger data-testid={selectors.components.Panels.Panel.title(title)}>\n          {({ closeMenu, panelMenuOpen }) => {\n            return (\n              <div className=\"panel-title\">\n                <PanelHeaderNotices frames={data.series} panelId={panel.id} />\n                {alertState ? (\n                  <Icon\n                    name={alertState === 'alerting' ? 'heart-break' : 'heart'}\n                    className=\"icon-gf panel-alert-icon\"\n                    style={{ marginRight: '4px' }}\n                    size=\"sm\"\n                  />\n                ) : null}\n                <h2 className={styles.titleText}>{title}</h2>\n                {!dashboard.meta.publicDashboardAccessToken && (\n                  <div data-testid=\"panel-dropdown\">\n                    <Icon name=\"angle-down\" className=\"panel-menu-toggle\" />\n                    <PanelHeaderMenuWrapper\n                      panel={panel}\n                      dashboard={dashboard}\n                      show={panelMenuOpen}\n                      onClose={closeMenu}\n                    />\n                  </div>\n                )}\n                {data.request && data.request.timeInfo && (\n                  <span className=\"panel-time-info\">\n                    <Icon name=\"clock-nine\" size=\"sm\" /> {data.request.timeInfo}\n                  </span>\n                )}\n              </div>\n            );\n          }}\n        </PanelHeaderMenuTrigger>\n      </div>\n    </>\n  );\n};\n\nconst panelStyles = (theme: GrafanaTheme2) => {\n  return {\n    titleText: css`\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n      max-width: calc(100% - 38px);\n      cursor: pointer;\n      font-weight: ${theme.typography.fontWeightMedium};\n      font-size: ${theme.typography.body.fontSize};\n      margin: 0;\n\n      &:hover {\n        color: ${theme.colors.text.primary};\n      }\n      .panel-has-alert & {\n        max-width: calc(100% - 54px);\n      }\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}