{"ast":null,"code":"import { CircularVector } from '../vector/CircularVector';\nimport { MutableDataFrame } from './MutableDataFrame';\n\n/**\n * This dataframe can have values constantly added, and will never\n * exceed the given capacity\n */\nexport class CircularDataFrame extends MutableDataFrame {\n  constructor(options) {\n    super(undefined, buffer => {\n      return new CircularVector(Object.assign({}, options, {\n        buffer\n      }));\n    });\n  }\n\n}","map":{"version":3,"names":["CircularVector","MutableDataFrame","CircularDataFrame","constructor","options","undefined","buffer"],"sources":["/home/soula/grafana/packages/grafana-data/src/dataframe/CircularDataFrame.ts"],"sourcesContent":["import { CircularVector } from '../vector/CircularVector';\n\nimport { MutableDataFrame } from './MutableDataFrame';\n\ninterface CircularOptions {\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * This dataframe can have values constantly added, and will never\n * exceed the given capacity\n */\nexport class CircularDataFrame<T = any> extends MutableDataFrame<T> {\n  constructor(options: CircularOptions) {\n    super(undefined, (buffer?: any[]) => {\n      return new CircularVector({\n        ...options,\n        buffer,\n      });\n    });\n  }\n}\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,0BAA/B;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;;AAOA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAN,SAAyCD,gBAAzC,CAA6D;EAClEE,WAAW,CAACC,OAAD,EAA2B;IACpC,MAAMC,SAAN,EAAkBC,MAAD,IAAoB;MACnC,OAAO,IAAIN,cAAJ,mBACFI,OADE;QAELE;MAFK,GAAP;IAID,CALD;EAMD;;AARiE"},"metadata":{},"sourceType":"module"}