{"ast":null,"code":"const _excluded = [\"index\", \"id\", \"state\", \"global\", \"rootStateKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { cloneDeep } from 'lodash';\nimport { dispatch } from '../../../store/store';\nimport { toKeyedVariableIdentifier } from '../utils';\nimport { AdHocVariableEditor } from './AdHocVariableEditor';\nimport { setFiltersFromUrl } from './actions';\nimport { AdHocPicker } from './picker/AdHocPicker';\nimport { adHocVariableReducer, initialAdHocVariableModelState } from './reducer';\nimport * as urlParser from './urlParser';\n\nconst noop = async () => {};\n\nexport const createAdHocVariableAdapter = () => {\n  return {\n    id: 'adhoc',\n    description: 'Add key/value filters on the fly.',\n    name: 'Ad hoc filters',\n    initialState: initialAdHocVariableModelState,\n    reducer: adHocVariableReducer,\n    picker: AdHocPicker,\n    editor: AdHocVariableEditor,\n    dependsOn: () => false,\n    setValue: noop,\n    setValueFromUrl: async (variable, urlValue) => {\n      const filters = urlParser.toFilters(urlValue);\n      await dispatch(setFiltersFromUrl(toKeyedVariableIdentifier(variable), filters));\n    },\n    updateOptions: noop,\n    getSaveModel: variable => {\n      const _cloneDeep = cloneDeep(variable),\n            rest = _objectWithoutPropertiesLoose(_cloneDeep, _excluded);\n\n      return rest;\n    },\n    getValueForUrl: variable => {\n      var _variable$filters;\n\n      const filters = (_variable$filters = variable === null || variable === void 0 ? void 0 : variable.filters) !== null && _variable$filters !== void 0 ? _variable$filters : [];\n      return urlParser.toUrl(filters);\n    }\n  };\n};","map":{"version":3,"names":["cloneDeep","dispatch","toKeyedVariableIdentifier","AdHocVariableEditor","setFiltersFromUrl","AdHocPicker","adHocVariableReducer","initialAdHocVariableModelState","urlParser","noop","createAdHocVariableAdapter","id","description","name","initialState","reducer","picker","editor","dependsOn","setValue","setValueFromUrl","variable","urlValue","filters","toFilters","updateOptions","getSaveModel","rest","getValueForUrl","toUrl"],"sources":["/home/soula/grafana/public/app/features/variables/adhoc/adapter.ts"],"sourcesContent":["import { cloneDeep } from 'lodash';\n\nimport { dispatch } from '../../../store/store';\nimport { VariableAdapter } from '../adapters';\nimport { AdHocVariableModel } from '../types';\nimport { toKeyedVariableIdentifier } from '../utils';\n\nimport { AdHocVariableEditor } from './AdHocVariableEditor';\nimport { setFiltersFromUrl } from './actions';\nimport { AdHocPicker } from './picker/AdHocPicker';\nimport { adHocVariableReducer, initialAdHocVariableModelState } from './reducer';\nimport * as urlParser from './urlParser';\n\nconst noop = async () => {};\n\nexport const createAdHocVariableAdapter = (): VariableAdapter<AdHocVariableModel> => {\n  return {\n    id: 'adhoc',\n    description: 'Add key/value filters on the fly.',\n    name: 'Ad hoc filters',\n    initialState: initialAdHocVariableModelState,\n    reducer: adHocVariableReducer,\n    picker: AdHocPicker,\n    editor: AdHocVariableEditor,\n    dependsOn: () => false,\n    setValue: noop,\n    setValueFromUrl: async (variable, urlValue) => {\n      const filters = urlParser.toFilters(urlValue);\n      await dispatch(setFiltersFromUrl(toKeyedVariableIdentifier(variable), filters));\n    },\n    updateOptions: noop,\n    getSaveModel: (variable) => {\n      const { index, id, state, global, rootStateKey, ...rest } = cloneDeep(variable);\n      return rest;\n    },\n    getValueForUrl: (variable) => {\n      const filters = variable?.filters ?? [];\n      return urlParser.toUrl(filters);\n    },\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAGA,SAASC,yBAAT,QAA0C,UAA1C;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,oBAAT,EAA+BC,8BAA/B,QAAqE,WAArE;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;;AAEA,MAAMC,IAAI,GAAG,YAAY,CAAE,CAA3B;;AAEA,OAAO,MAAMC,0BAA0B,GAAG,MAA2C;EACnF,OAAO;IACLC,EAAE,EAAE,OADC;IAELC,WAAW,EAAE,mCAFR;IAGLC,IAAI,EAAE,gBAHD;IAILC,YAAY,EAAEP,8BAJT;IAKLQ,OAAO,EAAET,oBALJ;IAMLU,MAAM,EAAEX,WANH;IAOLY,MAAM,EAAEd,mBAPH;IAQLe,SAAS,EAAE,MAAM,KARZ;IASLC,QAAQ,EAAEV,IATL;IAULW,eAAe,EAAE,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;MAC7C,MAAMC,OAAO,GAAGf,SAAS,CAACgB,SAAV,CAAoBF,QAApB,CAAhB;MACA,MAAMrB,QAAQ,CAACG,iBAAiB,CAACF,yBAAyB,CAACmB,QAAD,CAA1B,EAAsCE,OAAtC,CAAlB,CAAd;IACD,CAbI;IAcLE,aAAa,EAAEhB,IAdV;IAeLiB,YAAY,EAAGL,QAAD,IAAc;MAC1B,mBAA4DrB,SAAS,CAACqB,QAAD,CAArE;MAAA,MAAmDM,IAAnD;;MACA,OAAOA,IAAP;IACD,CAlBI;IAmBLC,cAAc,EAAGP,QAAD,IAAc;MAAA;;MAC5B,MAAME,OAAO,wBAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,OAAb,iEAAwB,EAArC;MACA,OAAOf,SAAS,CAACqB,KAAV,CAAgBN,OAAhB,CAAP;IACD;EAtBI,CAAP;AAwBD,CAzBM"},"metadata":{},"sourceType":"module"}