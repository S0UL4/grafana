{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Checkbox, CustomScrollbar, HorizontalGroup, Icon, Portal, RadioButtonGroup, Tooltip, useStyles2, useTheme2 } from '@grafana/ui';\nimport { getSelectStyles } from '@grafana/ui/src/components/Select/getSelectStyles';\nimport { OrgRole } from 'app/types';\nimport { MENU_MAX_HEIGHT } from './constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BuiltinRoles = Object.values(OrgRole);\nconst BuiltinRoleOption = BuiltinRoles.map(r => ({\n  label: r,\n  value: r\n}));\nconst fixedRoleGroupNames = {\n  ldap: 'LDAP',\n  current: 'Current org'\n};\nexport const RolePickerMenu = ({\n  builtInRole,\n  options,\n  appliedRoles,\n  showGroups,\n  builtinRolesDisabled,\n  showBuiltInRole,\n  onSelect,\n  onBuiltInRoleSelect,\n  onUpdate,\n  onClear,\n  updateDisabled,\n  offset\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState(appliedRoles);\n  const [selectedBuiltInRole, setSelectedBuiltInRole] = useState(builtInRole);\n  const [showSubMenu, setShowSubMenu] = useState(false);\n  const [openedMenuGroup, setOpenedMenuGroup] = useState('');\n  const [subMenuOptions, setSubMenuOptions] = useState([]);\n  const subMenuNode = useRef(null);\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles); // Call onSelect() on every selectedOptions change\n\n  useEffect(() => {\n    onSelect(selectedOptions);\n  }, [selectedOptions, onSelect]);\n  useEffect(() => {\n    if (onBuiltInRoleSelect && selectedBuiltInRole) {\n      onBuiltInRoleSelect(selectedBuiltInRole);\n    }\n  }, [selectedBuiltInRole, onBuiltInRoleSelect]);\n  const customRoles = options.filter(filterCustomRoles).sort(sortRolesByName);\n  const fixedRoles = options.filter(filterFixedRoles).sort(sortRolesByName);\n  const optionGroups = getOptionGroups(options);\n\n  const getSelectedGroupOptions = group => {\n    const selectedGroupOptions = [];\n\n    for (const role of selectedOptions) {\n      if (getRoleGroup(role) === group) {\n        selectedGroupOptions.push(role);\n      }\n    }\n\n    return selectedGroupOptions;\n  };\n\n  const groupSelected = group => {\n    const selectedGroupOptions = getSelectedGroupOptions(group);\n    const groupOptions = optionGroups.find(g => g.value === group);\n    return selectedGroupOptions.length > 0 && selectedGroupOptions.length >= groupOptions.options.length;\n  };\n\n  const groupPartiallySelected = group => {\n    const selectedGroupOptions = getSelectedGroupOptions(group);\n    const groupOptions = optionGroups.find(g => g.value === group);\n    return selectedGroupOptions.length > 0 && selectedGroupOptions.length < groupOptions.options.length;\n  };\n\n  const onChange = option => {\n    if (selectedOptions.find(role => role.uid === option.uid)) {\n      setSelectedOptions(selectedOptions.filter(role => role.uid !== option.uid));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n\n  const onGroupChange = value => {\n    const group = optionGroups.find(g => {\n      return g.value === value;\n    });\n\n    if (groupSelected(value) || groupPartiallySelected(value)) {\n      if (group) {\n        setSelectedOptions(selectedOptions.filter(role => !group.options.find(option => role.uid === option.uid)));\n      }\n    } else {\n      if (group) {\n        const groupOptions = group.options.filter(role => role.delegatable);\n        const restOptions = selectedOptions.filter(role => !group.options.find(option => role.uid === option.uid));\n        setSelectedOptions([...restOptions, ...groupOptions]);\n      }\n    }\n  };\n\n  const onOpenSubMenu = value => {\n    setOpenedMenuGroup(value);\n    setShowSubMenu(true);\n    const group = optionGroups.find(g => {\n      return g.value === value;\n    });\n\n    if (group) {\n      setSubMenuOptions(group.options);\n    }\n  };\n\n  const onCloseSubMenu = value => {\n    setShowSubMenu(false);\n    setOpenedMenuGroup('');\n    setSubMenuOptions([]);\n  };\n\n  const onSelectedBuiltinRoleChange = newRole => {\n    setSelectedBuiltInRole(newRole);\n  };\n\n  const onClearInternal = async () => {\n    if (onClear) {\n      onClear();\n    }\n\n    setSelectedOptions([]);\n  };\n\n  const onClearSubMenu = () => {\n    const options = selectedOptions.filter(role => {\n      const groupName = getRoleGroup(role);\n      return groupName !== openedMenuGroup;\n    });\n    setSelectedOptions(options);\n  };\n\n  const onUpdateInternal = () => {\n    const selectedCustomRoles = []; // TODO: needed?\n\n    for (const key in selectedOptions) {\n      var _selectedOptions$key;\n\n      const roleUID = (_selectedOptions$key = selectedOptions[key]) === null || _selectedOptions$key === void 0 ? void 0 : _selectedOptions$key.uid;\n      selectedCustomRoles.push(roleUID);\n    }\n\n    onUpdate(selectedOptions, selectedBuiltInRole);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.menu, customStyles.menuWrapper, {\n      [customStyles.menuLeft]: offset.horizontal > 0\n    }, css`\n          bottom: ${offset.vertical > 0 ? `${offset.vertical}px` : 'unset'};\n          top: ${offset.vertical < 0 ? `${Math.abs(offset.vertical)}px` : 'unset'};\n        `),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: customStyles.menu,\n      \"aria-label\": \"Role picker menu\",\n      children: [/*#__PURE__*/_jsxs(CustomScrollbar, {\n        autoHide: false,\n        autoHeightMax: `${MENU_MAX_HEIGHT}px`,\n        hideHorizontalTrack: true,\n        hideVerticalTrack: true,\n        children: [showBuiltInRole && /*#__PURE__*/_jsxs(\"div\", {\n          className: customStyles.menuSection,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: customStyles.groupHeader,\n            children: \"Basic roles\"\n          }), /*#__PURE__*/_jsx(RadioButtonGroup, {\n            className: customStyles.builtInRoleSelector,\n            options: BuiltinRoleOption,\n            value: selectedBuiltInRole,\n            onChange: onSelectedBuiltinRoleChange,\n            fullWidth: true,\n            disabled: builtinRolesDisabled\n          })]\n        }), !!fixedRoles.length && (showGroups && !!optionGroups.length ? /*#__PURE__*/_jsxs(\"div\", {\n          className: customStyles.menuSection,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: customStyles.groupHeader,\n            children: \"Fixed roles\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.optionBody,\n            children: optionGroups.map((option, i) => {\n              var _option$options;\n\n              return /*#__PURE__*/_jsx(RoleMenuGroupOption, {\n                data: option,\n                isSelected: groupSelected(option.value) || groupPartiallySelected(option.value),\n                partiallySelected: groupPartiallySelected(option.value),\n                disabled: (_option$options = option.options) === null || _option$options === void 0 ? void 0 : _option$options.every(isNotDelegatable),\n                onChange: onGroupChange,\n                onOpenSubMenu: onOpenSubMenu,\n                onCloseSubMenu: onCloseSubMenu,\n                root: subMenuNode === null || subMenuNode === void 0 ? void 0 : subMenuNode.current,\n                isFocused: showSubMenu && openedMenuGroup === option.value,\n                children: showSubMenu && openedMenuGroup === option.value && /*#__PURE__*/_jsx(RolePickerSubMenu, {\n                  options: subMenuOptions,\n                  selectedOptions: selectedOptions,\n                  onSelect: onChange,\n                  onClear: onClearSubMenu,\n                  showOnLeft: offset.horizontal > 0\n                })\n              }, i);\n            })\n          })]\n        }) : /*#__PURE__*/_jsxs(\"div\", {\n          className: customStyles.menuSection,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: customStyles.groupHeader,\n            children: \"Fixed roles\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.optionBody,\n            children: fixedRoles.map((option, i) => /*#__PURE__*/_jsx(RoleMenuOption, {\n              data: option,\n              isSelected: !!(option.uid && !!selectedOptions.find(opt => opt.uid === option.uid)),\n              disabled: isNotDelegatable(option),\n              onChange: onChange,\n              hideDescription: true\n            }, i))\n          })]\n        })), !!customRoles.length && /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: customStyles.groupHeader,\n            children: \"Custom roles\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.optionBody,\n            children: customRoles.map((option, i) => /*#__PURE__*/_jsx(RoleMenuOption, {\n              data: option,\n              isSelected: !!(option.uid && !!selectedOptions.find(opt => opt.uid === option.uid)),\n              disabled: isNotDelegatable(option),\n              onChange: onChange,\n              hideDescription: true\n            }, i))\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: customStyles.menuButtonRow,\n        children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsx(Button, {\n            size: \"sm\",\n            fill: \"text\",\n            onClick: onClearInternal,\n            children: \"Clear all\"\n          }), /*#__PURE__*/_jsx(Button, {\n            size: \"sm\",\n            onClick: onUpdateInternal,\n            children: updateDisabled ? `Apply` : `Update`\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      ref: subMenuNode\n    })]\n  });\n};\n\nconst filterCustomRoles = option => {\n  var _option$name;\n\n  return !((_option$name = option.name) !== null && _option$name !== void 0 && _option$name.startsWith('fixed:'));\n};\n\nconst filterFixedRoles = option => {\n  var _option$name2;\n\n  return (_option$name2 = option.name) === null || _option$name2 === void 0 ? void 0 : _option$name2.startsWith('fixed:');\n};\n\nconst getOptionGroups = options => {\n  const groupsMap = {};\n  options.forEach(role => {\n    if (role.name.startsWith('fixed:')) {\n      const groupName = getRoleGroup(role);\n\n      if (groupsMap[groupName]) {\n        groupsMap[groupName].push(role);\n      } else {\n        groupsMap[groupName] = [role];\n      }\n    }\n  });\n  const groups = [];\n\n  for (const groupName of Object.keys(groupsMap)) {\n    const groupOptions = groupsMap[groupName].sort(sortRolesByName);\n    groups.push({\n      name: fixedRoleGroupNames[groupName] || capitalize(groupName),\n      value: groupName,\n      options: groupOptions\n    });\n  }\n\n  return groups.sort((a, b) => a.name.localeCompare(b.name));\n};\n\nexport const RolePickerSubMenu = ({\n  options,\n  selectedOptions,\n  disabledOptions,\n  onSelect,\n  onClear,\n  showOnLeft\n}) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles);\n\n  const onClearInternal = async () => {\n    if (onClear) {\n      onClear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(customStyles.subMenu, {\n      [customStyles.subMenuLeft]: showOnLeft\n    }),\n    \"aria-label\": \"Role picker submenu\",\n    children: [/*#__PURE__*/_jsx(CustomScrollbar, {\n      autoHide: false,\n      autoHeightMax: `${MENU_MAX_HEIGHT}px`,\n      hideHorizontalTrack: true,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.optionBody,\n        children: options.map((option, i) => /*#__PURE__*/_jsx(RoleMenuOption, {\n          data: option,\n          isSelected: !!(option.uid && (!!selectedOptions.find(opt => opt.uid === option.uid) || disabledOptions !== null && disabledOptions !== void 0 && disabledOptions.find(opt => opt.uid === option.uid))),\n          disabled: !!(option.uid && disabledOptions !== null && disabledOptions !== void 0 && disabledOptions.find(opt => opt.uid === option.uid)) || isNotDelegatable(option),\n          onChange: onSelect,\n          hideDescription: true\n        }, i))\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: customStyles.subMenuButtonRow,\n      children: /*#__PURE__*/_jsx(HorizontalGroup, {\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsx(Button, {\n          size: \"sm\",\n          fill: \"text\",\n          onClick: onClearInternal,\n          children: \"Clear\"\n        })\n      })\n    })]\n  });\n};\nexport const RoleMenuOption = /*#__PURE__*/React.forwardRef(({\n  data,\n  isFocused,\n  isSelected,\n  disabled,\n  onChange,\n  hideDescription\n}, ref) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles);\n  const wrapperClassName = cx(styles.option, isFocused && styles.optionFocused, disabled && customStyles.menuOptionDisabled);\n\n  const onChangeInternal = event => {\n    if (disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    onChange(data);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    className: wrapperClassName,\n    \"aria-label\": \"Role picker option\",\n    onClick: onChangeInternal,\n    children: [/*#__PURE__*/_jsx(Checkbox, {\n      value: isSelected,\n      className: customStyles.menuOptionCheckbox,\n      onChange: onChangeInternal,\n      disabled: disabled\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.optionBody, customStyles.menuOptionBody),\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        children: data.displayName || data.name\n      }), !hideDescription && data.description && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.optionDescription,\n        children: data.description\n      })]\n    }), data.description && /*#__PURE__*/_jsx(Tooltip, {\n      content: data.description,\n      children: /*#__PURE__*/_jsx(Icon, {\n        name: \"info-circle\",\n        className: customStyles.menuOptionInfoSign\n      })\n    })]\n  });\n});\nRoleMenuOption.displayName = 'RoleMenuOption';\nexport const RoleMenuGroupOption = /*#__PURE__*/React.forwardRef(({\n  data,\n  isFocused,\n  isSelected,\n  partiallySelected,\n  disabled,\n  onChange,\n  onClick,\n  onOpenSubMenu,\n  onCloseSubMenu,\n  children,\n  root\n}, ref) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles);\n  const wrapperClassName = cx(styles.option, isFocused && styles.optionFocused, disabled && customStyles.menuOptionDisabled);\n\n  const onChangeInternal = event => {\n    if (disabled) {\n      return;\n    }\n\n    if (data.value) {\n      onChange(data.value);\n    }\n  };\n\n  const onClickInternal = event => {\n    if (onClick) {\n      onClick(data.value);\n    }\n  };\n\n  const onMouseEnter = () => {\n    if (onOpenSubMenu) {\n      onOpenSubMenu(data.value);\n    }\n  };\n\n  const onMouseLeave = () => {\n    if (onCloseSubMenu) {\n      onCloseSubMenu(data.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      ref: ref,\n      className: wrapperClassName,\n      \"aria-label\": \"Role picker option\",\n      onClick: onClickInternal,\n      children: [/*#__PURE__*/_jsx(Checkbox, {\n        value: isSelected,\n        className: cx(customStyles.menuOptionCheckbox, {\n          [customStyles.checkboxPartiallyChecked]: partiallySelected\n        }),\n        onChange: onChangeInternal,\n        disabled: disabled\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: cx(styles.optionBody, customStyles.menuOptionBody),\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: data.displayName || data.name\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: customStyles.menuOptionExpand\n        })]\n      }), root && children && /*#__PURE__*/_jsx(Portal, {\n        className: customStyles.subMenuPortal,\n        root: root,\n        children: children\n      })]\n    })\n  });\n});\nRoleMenuGroupOption.displayName = 'RoleMenuGroupOption';\n\nconst getRoleGroup = role => {\n  var _role$group;\n\n  return (_role$group = role.group) !== null && _role$group !== void 0 ? _role$group : 'Other';\n};\n\nconst capitalize = s => {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n};\n\nconst sortRolesByName = (a, b) => a.name.localeCompare(b.name);\n\nconst isNotDelegatable = role => {\n  return role.delegatable !== undefined && !role.delegatable;\n};\n\nexport const getStyles = theme => {\n  return {\n    menuWrapper: css`\n      display: flex;\n      max-height: 650px;\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      min-width: auto;\n    `,\n    menu: css`\n      min-width: 260px;\n\n      & > div {\n        padding-top: ${theme.spacing(1)};\n      }\n    `,\n    menuLeft: css`\n      right: 0;\n      flex-direction: row-reverse;\n    `,\n    subMenu: css`\n      height: 100%;\n      min-width: 260px;\n      display: flex;\n      flex-direction: column;\n      border-left: 1px solid ${theme.components.input.borderColor};\n\n      & > div {\n        padding-top: ${theme.spacing(1)};\n      }\n    `,\n    subMenuLeft: css`\n      border-right: 1px solid ${theme.components.input.borderColor};\n      border-left: unset;\n    `,\n    groupHeader: css`\n      padding: ${theme.spacing(0, 4)};\n      display: flex;\n      align-items: center;\n      color: ${theme.colors.text.primary};\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    container: css`\n      padding: ${theme.spacing(1)};\n      border: 1px ${theme.colors.border.weak} solid;\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      z-index: ${theme.zIndex.modal};\n    `,\n    menuSection: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    menuOptionCheckbox: css`\n      display: flex;\n      margin: ${theme.spacing(0, 1, 0, 0.25)};\n    `,\n    menuButtonRow: css`\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1)};\n    `,\n    menuOptionBody: css`\n      font-weight: ${theme.typography.fontWeightRegular};\n      padding: ${theme.spacing(0, 1.5, 0, 0)};\n    `,\n    menuOptionDisabled: css`\n      color: ${theme.colors.text.disabled};\n      cursor: not-allowed;\n    `,\n    menuOptionExpand: css`\n      position: absolute;\n      right: ${theme.spacing(1.25)};\n      color: ${theme.colors.text.disabled};\n\n      &:after {\n        content: '>';\n      }\n    `,\n    menuOptionInfoSign: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    builtInRoleSelector: css`\n      margin: ${theme.spacing(1, 1.25, 1, 1)};\n    `,\n    subMenuPortal: css`\n      height: 100%;\n      > div {\n        height: 100%;\n      }\n    `,\n    subMenuButtonRow: css`\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1)};\n    `,\n    checkboxPartiallyChecked: css`\n      input {\n        &:checked + span {\n          &:after {\n            border-width: 0 3px 0px 0;\n            transform: rotate(90deg);\n          }\n        }\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useEffect","useRef","useState","Button","Checkbox","CustomScrollbar","HorizontalGroup","Icon","Portal","RadioButtonGroup","Tooltip","useStyles2","useTheme2","getSelectStyles","OrgRole","MENU_MAX_HEIGHT","BuiltinRoles","Object","values","BuiltinRoleOption","map","r","label","value","fixedRoleGroupNames","ldap","current","RolePickerMenu","builtInRole","options","appliedRoles","showGroups","builtinRolesDisabled","showBuiltInRole","onSelect","onBuiltInRoleSelect","onUpdate","onClear","updateDisabled","offset","selectedOptions","setSelectedOptions","selectedBuiltInRole","setSelectedBuiltInRole","showSubMenu","setShowSubMenu","openedMenuGroup","setOpenedMenuGroup","subMenuOptions","setSubMenuOptions","subMenuNode","theme","styles","customStyles","getStyles","customRoles","filter","filterCustomRoles","sort","sortRolesByName","fixedRoles","filterFixedRoles","optionGroups","getOptionGroups","getSelectedGroupOptions","group","selectedGroupOptions","role","getRoleGroup","push","groupSelected","groupOptions","find","g","length","groupPartiallySelected","onChange","option","uid","onGroupChange","delegatable","restOptions","onOpenSubMenu","onCloseSubMenu","onSelectedBuiltinRoleChange","newRole","onClearInternal","onClearSubMenu","groupName","onUpdateInternal","selectedCustomRoles","key","roleUID","menu","menuWrapper","menuLeft","horizontal","vertical","Math","abs","menuSection","groupHeader","builtInRoleSelector","optionBody","i","every","isNotDelegatable","opt","menuButtonRow","name","startsWith","groupsMap","forEach","groups","keys","capitalize","a","b","localeCompare","RolePickerSubMenu","disabledOptions","showOnLeft","subMenu","subMenuLeft","subMenuButtonRow","RoleMenuOption","forwardRef","data","isFocused","isSelected","disabled","hideDescription","ref","wrapperClassName","optionFocused","menuOptionDisabled","onChangeInternal","event","preventDefault","stopPropagation","menuOptionCheckbox","menuOptionBody","displayName","description","optionDescription","menuOptionInfoSign","RoleMenuGroupOption","partiallySelected","onClick","children","root","onClickInternal","onMouseEnter","onMouseLeave","checkboxPartiallyChecked","menuOptionExpand","subMenuPortal","s","slice","toUpperCase","undefined","zIndex","dropdown","spacing","components","input","borderColor","colors","text","primary","typography","fontWeightBold","container","border","weak","shape","borderRadius","background","modal","fontWeightRegular"],"sources":["/home/soula/grafana/public/app/core/components/RolePicker/RolePickerMenu.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FormEvent, useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport {\n  Button,\n  Checkbox,\n  CustomScrollbar,\n  HorizontalGroup,\n  Icon,\n  Portal,\n  RadioButtonGroup,\n  Tooltip,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport { getSelectStyles } from '@grafana/ui/src/components/Select/getSelectStyles';\nimport { OrgRole, Role } from 'app/types';\n\nimport { MENU_MAX_HEIGHT } from './constants';\n\nconst BuiltinRoles = Object.values(OrgRole);\nconst BuiltinRoleOption: Array<SelectableValue<OrgRole>> = BuiltinRoles.map((r) => ({\n  label: r,\n  value: r,\n}));\n\nconst fixedRoleGroupNames: Record<string, string> = {\n  ldap: 'LDAP',\n  current: 'Current org',\n};\n\ninterface RolePickerMenuProps {\n  builtInRole?: OrgRole;\n  options: Role[];\n  appliedRoles: Role[];\n  showGroups?: boolean;\n  builtinRolesDisabled?: boolean;\n  showBuiltInRole?: boolean;\n  onSelect: (roles: Role[]) => void;\n  onBuiltInRoleSelect?: (role: OrgRole) => void;\n  onUpdate: (newRoles: Role[], newBuiltInRole?: OrgRole) => void;\n  onClear?: () => void;\n  updateDisabled?: boolean;\n  offset: { vertical: number; horizontal: number };\n}\n\nexport const RolePickerMenu = ({\n  builtInRole,\n  options,\n  appliedRoles,\n  showGroups,\n  builtinRolesDisabled,\n  showBuiltInRole,\n  onSelect,\n  onBuiltInRoleSelect,\n  onUpdate,\n  onClear,\n  updateDisabled,\n  offset,\n}: RolePickerMenuProps): JSX.Element => {\n  const [selectedOptions, setSelectedOptions] = useState<Role[]>(appliedRoles);\n  const [selectedBuiltInRole, setSelectedBuiltInRole] = useState<OrgRole | undefined>(builtInRole);\n  const [showSubMenu, setShowSubMenu] = useState(false);\n  const [openedMenuGroup, setOpenedMenuGroup] = useState('');\n  const [subMenuOptions, setSubMenuOptions] = useState<Role[]>([]);\n  const subMenuNode = useRef<HTMLDivElement | null>(null);\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles);\n\n  // Call onSelect() on every selectedOptions change\n  useEffect(() => {\n    onSelect(selectedOptions);\n  }, [selectedOptions, onSelect]);\n\n  useEffect(() => {\n    if (onBuiltInRoleSelect && selectedBuiltInRole) {\n      onBuiltInRoleSelect(selectedBuiltInRole);\n    }\n  }, [selectedBuiltInRole, onBuiltInRoleSelect]);\n\n  const customRoles = options.filter(filterCustomRoles).sort(sortRolesByName);\n  const fixedRoles = options.filter(filterFixedRoles).sort(sortRolesByName);\n  const optionGroups = getOptionGroups(options);\n\n  const getSelectedGroupOptions = (group: string) => {\n    const selectedGroupOptions = [];\n    for (const role of selectedOptions) {\n      if (getRoleGroup(role) === group) {\n        selectedGroupOptions.push(role);\n      }\n    }\n    return selectedGroupOptions;\n  };\n\n  const groupSelected = (group: string) => {\n    const selectedGroupOptions = getSelectedGroupOptions(group);\n    const groupOptions = optionGroups.find((g) => g.value === group);\n    return selectedGroupOptions.length > 0 && selectedGroupOptions.length >= groupOptions!.options.length;\n  };\n\n  const groupPartiallySelected = (group: string) => {\n    const selectedGroupOptions = getSelectedGroupOptions(group);\n    const groupOptions = optionGroups.find((g) => g.value === group);\n    return selectedGroupOptions.length > 0 && selectedGroupOptions.length < groupOptions!.options.length;\n  };\n\n  const onChange = (option: Role) => {\n    if (selectedOptions.find((role) => role.uid === option.uid)) {\n      setSelectedOptions(selectedOptions.filter((role) => role.uid !== option.uid));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n\n  const onGroupChange = (value: string) => {\n    const group = optionGroups.find((g) => {\n      return g.value === value;\n    });\n    if (groupSelected(value) || groupPartiallySelected(value)) {\n      if (group) {\n        setSelectedOptions(selectedOptions.filter((role) => !group.options.find((option) => role.uid === option.uid)));\n      }\n    } else {\n      if (group) {\n        const groupOptions = group.options.filter((role) => role.delegatable);\n        const restOptions = selectedOptions.filter((role) => !group.options.find((option) => role.uid === option.uid));\n        setSelectedOptions([...restOptions, ...groupOptions]);\n      }\n    }\n  };\n\n  const onOpenSubMenu = (value: string) => {\n    setOpenedMenuGroup(value);\n    setShowSubMenu(true);\n    const group = optionGroups.find((g) => {\n      return g.value === value;\n    });\n    if (group) {\n      setSubMenuOptions(group.options);\n    }\n  };\n\n  const onCloseSubMenu = (value: string) => {\n    setShowSubMenu(false);\n    setOpenedMenuGroup('');\n    setSubMenuOptions([]);\n  };\n\n  const onSelectedBuiltinRoleChange = (newRole: OrgRole) => {\n    setSelectedBuiltInRole(newRole);\n  };\n\n  const onClearInternal = async () => {\n    if (onClear) {\n      onClear();\n    }\n    setSelectedOptions([]);\n  };\n\n  const onClearSubMenu = () => {\n    const options = selectedOptions.filter((role) => {\n      const groupName = getRoleGroup(role);\n      return groupName !== openedMenuGroup;\n    });\n    setSelectedOptions(options);\n  };\n\n  const onUpdateInternal = () => {\n    const selectedCustomRoles: string[] = [];\n    // TODO: needed?\n    for (const key in selectedOptions) {\n      const roleUID = selectedOptions[key]?.uid;\n      selectedCustomRoles.push(roleUID);\n    }\n    onUpdate(selectedOptions, selectedBuiltInRole);\n  };\n\n  return (\n    <div\n      className={cx(\n        styles.menu,\n        customStyles.menuWrapper,\n        { [customStyles.menuLeft]: offset.horizontal > 0 },\n        css`\n          bottom: ${offset.vertical > 0 ? `${offset.vertical}px` : 'unset'};\n          top: ${offset.vertical < 0 ? `${Math.abs(offset.vertical)}px` : 'unset'};\n        `\n      )}\n    >\n      <div className={customStyles.menu} aria-label=\"Role picker menu\">\n        <CustomScrollbar autoHide={false} autoHeightMax={`${MENU_MAX_HEIGHT}px`} hideHorizontalTrack hideVerticalTrack>\n          {showBuiltInRole && (\n            <div className={customStyles.menuSection}>\n              <div className={customStyles.groupHeader}>Basic roles</div>\n              <RadioButtonGroup\n                className={customStyles.builtInRoleSelector}\n                options={BuiltinRoleOption}\n                value={selectedBuiltInRole}\n                onChange={onSelectedBuiltinRoleChange}\n                fullWidth={true}\n                disabled={builtinRolesDisabled}\n              />\n            </div>\n          )}\n          {!!fixedRoles.length &&\n            (showGroups && !!optionGroups.length ? (\n              <div className={customStyles.menuSection}>\n                <div className={customStyles.groupHeader}>Fixed roles</div>\n                <div className={styles.optionBody}>\n                  {optionGroups.map((option, i) => (\n                    <RoleMenuGroupOption\n                      data={option}\n                      key={i}\n                      isSelected={groupSelected(option.value) || groupPartiallySelected(option.value)}\n                      partiallySelected={groupPartiallySelected(option.value)}\n                      disabled={option.options?.every(isNotDelegatable)}\n                      onChange={onGroupChange}\n                      onOpenSubMenu={onOpenSubMenu}\n                      onCloseSubMenu={onCloseSubMenu}\n                      root={subMenuNode?.current!}\n                      isFocused={showSubMenu && openedMenuGroup === option.value}\n                    >\n                      {showSubMenu && openedMenuGroup === option.value && (\n                        <RolePickerSubMenu\n                          options={subMenuOptions}\n                          selectedOptions={selectedOptions}\n                          onSelect={onChange}\n                          onClear={onClearSubMenu}\n                          showOnLeft={offset.horizontal > 0}\n                        />\n                      )}\n                    </RoleMenuGroupOption>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className={customStyles.menuSection}>\n                <div className={customStyles.groupHeader}>Fixed roles</div>\n                <div className={styles.optionBody}>\n                  {fixedRoles.map((option, i) => (\n                    <RoleMenuOption\n                      data={option}\n                      key={i}\n                      isSelected={!!(option.uid && !!selectedOptions.find((opt) => opt.uid === option.uid))}\n                      disabled={isNotDelegatable(option)}\n                      onChange={onChange}\n                      hideDescription\n                    />\n                  ))}\n                </div>\n              </div>\n            ))}\n          {!!customRoles.length && (\n            <div>\n              <div className={customStyles.groupHeader}>Custom roles</div>\n              <div className={styles.optionBody}>\n                {customRoles.map((option, i) => (\n                  <RoleMenuOption\n                    data={option}\n                    key={i}\n                    isSelected={!!(option.uid && !!selectedOptions.find((opt) => opt.uid === option.uid))}\n                    disabled={isNotDelegatable(option)}\n                    onChange={onChange}\n                    hideDescription\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </CustomScrollbar>\n        <div className={customStyles.menuButtonRow}>\n          <HorizontalGroup justify=\"flex-end\">\n            <Button size=\"sm\" fill=\"text\" onClick={onClearInternal}>\n              Clear all\n            </Button>\n            <Button size=\"sm\" onClick={onUpdateInternal}>\n              {updateDisabled ? `Apply` : `Update`}\n            </Button>\n          </HorizontalGroup>\n        </div>\n      </div>\n      <div ref={subMenuNode} />\n    </div>\n  );\n};\n\nconst filterCustomRoles = (option: Role) => !option.name?.startsWith('fixed:');\nconst filterFixedRoles = (option: Role) => option.name?.startsWith('fixed:');\n\nconst getOptionGroups = (options: Role[]) => {\n  const groupsMap: { [key: string]: Role[] } = {};\n  options.forEach((role) => {\n    if (role.name.startsWith('fixed:')) {\n      const groupName = getRoleGroup(role);\n      if (groupsMap[groupName]) {\n        groupsMap[groupName].push(role);\n      } else {\n        groupsMap[groupName] = [role];\n      }\n    }\n  });\n\n  const groups = [];\n  for (const groupName of Object.keys(groupsMap)) {\n    const groupOptions = groupsMap[groupName].sort(sortRolesByName);\n    groups.push({\n      name: fixedRoleGroupNames[groupName] || capitalize(groupName),\n      value: groupName,\n      options: groupOptions,\n    });\n  }\n  return groups.sort((a, b) => a.name.localeCompare(b.name));\n};\n\ninterface RolePickerSubMenuProps {\n  options: Role[];\n  selectedOptions: Role[];\n  disabledOptions?: Role[];\n  onSelect: (option: Role) => void;\n  onClear?: () => void;\n  showOnLeft?: boolean;\n}\n\nexport const RolePickerSubMenu = ({\n  options,\n  selectedOptions,\n  disabledOptions,\n  onSelect,\n  onClear,\n  showOnLeft,\n}: RolePickerSubMenuProps): JSX.Element => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles);\n\n  const onClearInternal = async () => {\n    if (onClear) {\n      onClear();\n    }\n  };\n\n  return (\n    <div\n      className={cx(customStyles.subMenu, { [customStyles.subMenuLeft]: showOnLeft })}\n      aria-label=\"Role picker submenu\"\n    >\n      <CustomScrollbar autoHide={false} autoHeightMax={`${MENU_MAX_HEIGHT}px`} hideHorizontalTrack>\n        <div className={styles.optionBody}>\n          {options.map((option, i) => (\n            <RoleMenuOption\n              data={option}\n              key={i}\n              isSelected={\n                !!(\n                  option.uid &&\n                  (!!selectedOptions.find((opt) => opt.uid === option.uid) ||\n                    disabledOptions?.find((opt) => opt.uid === option.uid))\n                )\n              }\n              disabled={\n                !!(option.uid && disabledOptions?.find((opt) => opt.uid === option.uid)) || isNotDelegatable(option)\n              }\n              onChange={onSelect}\n              hideDescription\n            />\n          ))}\n        </div>\n      </CustomScrollbar>\n      <div className={customStyles.subMenuButtonRow}>\n        <HorizontalGroup justify=\"flex-end\">\n          <Button size=\"sm\" fill=\"text\" onClick={onClearInternal}>\n            Clear\n          </Button>\n        </HorizontalGroup>\n      </div>\n    </div>\n  );\n};\n\ninterface RoleMenuOptionProps<T> {\n  data: Role;\n  onChange: (value: Role) => void;\n  isSelected?: boolean;\n  isFocused?: boolean;\n  disabled?: boolean;\n  hideDescription?: boolean;\n}\n\nexport const RoleMenuOption = React.forwardRef<HTMLDivElement, React.PropsWithChildren<RoleMenuOptionProps<any>>>(\n  ({ data, isFocused, isSelected, disabled, onChange, hideDescription }, ref) => {\n    const theme = useTheme2();\n    const styles = getSelectStyles(theme);\n    const customStyles = useStyles2(getStyles);\n\n    const wrapperClassName = cx(\n      styles.option,\n      isFocused && styles.optionFocused,\n      disabled && customStyles.menuOptionDisabled\n    );\n\n    const onChangeInternal = (event: FormEvent<HTMLElement>) => {\n      if (disabled) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      onChange(data);\n    };\n\n    return (\n      <div ref={ref} className={wrapperClassName} aria-label=\"Role picker option\" onClick={onChangeInternal}>\n        <Checkbox\n          value={isSelected}\n          className={customStyles.menuOptionCheckbox}\n          onChange={onChangeInternal}\n          disabled={disabled}\n        />\n        <div className={cx(styles.optionBody, customStyles.menuOptionBody)}>\n          <span>{data.displayName || data.name}</span>\n          {!hideDescription && data.description && <div className={styles.optionDescription}>{data.description}</div>}\n        </div>\n        {data.description && (\n          <Tooltip content={data.description}>\n            <Icon name=\"info-circle\" className={customStyles.menuOptionInfoSign} />\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n);\n\nRoleMenuOption.displayName = 'RoleMenuOption';\n\ninterface RoleMenuGroupsOptionProps {\n  data: SelectableValue<string>;\n  onChange: (value: string) => void;\n  onClick?: (value: string) => void;\n  onOpenSubMenu?: (value: string) => void;\n  onCloseSubMenu?: (value: string) => void;\n  isSelected?: boolean;\n  partiallySelected?: boolean;\n  isFocused?: boolean;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  root?: HTMLElement;\n}\n\nexport const RoleMenuGroupOption = React.forwardRef<HTMLDivElement, RoleMenuGroupsOptionProps>(\n  (\n    {\n      data,\n      isFocused,\n      isSelected,\n      partiallySelected,\n      disabled,\n      onChange,\n      onClick,\n      onOpenSubMenu,\n      onCloseSubMenu,\n      children,\n      root,\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getSelectStyles(theme);\n    const customStyles = useStyles2(getStyles);\n\n    const wrapperClassName = cx(\n      styles.option,\n      isFocused && styles.optionFocused,\n      disabled && customStyles.menuOptionDisabled\n    );\n\n    const onChangeInternal = (event: FormEvent<HTMLElement>) => {\n      if (disabled) {\n        return;\n      }\n      if (data.value) {\n        onChange(data.value);\n      }\n    };\n\n    const onClickInternal = (event: FormEvent<HTMLElement>) => {\n      if (onClick) {\n        onClick(data.value!);\n      }\n    };\n\n    const onMouseEnter = () => {\n      if (onOpenSubMenu) {\n        onOpenSubMenu(data.value!);\n      }\n    };\n\n    const onMouseLeave = () => {\n      if (onCloseSubMenu) {\n        onCloseSubMenu(data.value!);\n      }\n    };\n\n    return (\n      <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n        <div ref={ref} className={wrapperClassName} aria-label=\"Role picker option\" onClick={onClickInternal}>\n          <Checkbox\n            value={isSelected}\n            className={cx(customStyles.menuOptionCheckbox, {\n              [customStyles.checkboxPartiallyChecked]: partiallySelected,\n            })}\n            onChange={onChangeInternal}\n            disabled={disabled}\n          />\n          <div className={cx(styles.optionBody, customStyles.menuOptionBody)}>\n            <span>{data.displayName || data.name}</span>\n            <span className={customStyles.menuOptionExpand} />\n          </div>\n          {root && children && (\n            <Portal className={customStyles.subMenuPortal} root={root}>\n              {children}\n            </Portal>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nRoleMenuGroupOption.displayName = 'RoleMenuGroupOption';\n\nconst getRoleGroup = (role: Role) => {\n  return role.group ?? 'Other';\n};\n\nconst capitalize = (s: string): string => {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n};\n\nconst sortRolesByName = (a: Role, b: Role) => a.name.localeCompare(b.name);\n\nconst isNotDelegatable = (role: Role) => {\n  return role.delegatable !== undefined && !role.delegatable;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    menuWrapper: css`\n      display: flex;\n      max-height: 650px;\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      min-width: auto;\n    `,\n    menu: css`\n      min-width: 260px;\n\n      & > div {\n        padding-top: ${theme.spacing(1)};\n      }\n    `,\n    menuLeft: css`\n      right: 0;\n      flex-direction: row-reverse;\n    `,\n    subMenu: css`\n      height: 100%;\n      min-width: 260px;\n      display: flex;\n      flex-direction: column;\n      border-left: 1px solid ${theme.components.input.borderColor};\n\n      & > div {\n        padding-top: ${theme.spacing(1)};\n      }\n    `,\n    subMenuLeft: css`\n      border-right: 1px solid ${theme.components.input.borderColor};\n      border-left: unset;\n    `,\n    groupHeader: css`\n      padding: ${theme.spacing(0, 4)};\n      display: flex;\n      align-items: center;\n      color: ${theme.colors.text.primary};\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    container: css`\n      padding: ${theme.spacing(1)};\n      border: 1px ${theme.colors.border.weak} solid;\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      z-index: ${theme.zIndex.modal};\n    `,\n    menuSection: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    menuOptionCheckbox: css`\n      display: flex;\n      margin: ${theme.spacing(0, 1, 0, 0.25)};\n    `,\n    menuButtonRow: css`\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1)};\n    `,\n    menuOptionBody: css`\n      font-weight: ${theme.typography.fontWeightRegular};\n      padding: ${theme.spacing(0, 1.5, 0, 0)};\n    `,\n    menuOptionDisabled: css`\n      color: ${theme.colors.text.disabled};\n      cursor: not-allowed;\n    `,\n    menuOptionExpand: css`\n      position: absolute;\n      right: ${theme.spacing(1.25)};\n      color: ${theme.colors.text.disabled};\n\n      &:after {\n        content: '>';\n      }\n    `,\n    menuOptionInfoSign: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    builtInRoleSelector: css`\n      margin: ${theme.spacing(1, 1.25, 1, 1)};\n    `,\n    subMenuPortal: css`\n      height: 100%;\n      > div {\n        height: 100%;\n      }\n    `,\n    subMenuButtonRow: css`\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1)};\n    `,\n    checkboxPartiallyChecked: css`\n      input {\n        &:checked + span {\n          &:after {\n            border-width: 0 3px 0px 0;\n            transform: rotate(90deg);\n          }\n        }\n      }\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}