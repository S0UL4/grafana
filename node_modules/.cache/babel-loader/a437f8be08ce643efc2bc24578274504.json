{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/packages/grafana-data/src/types/vector.ts"],"sourcesContent":["export interface Vector<T = any> {\n  length: number;\n\n  /**\n   * Access the value by index (Like an array)\n   */\n  get(index: number): T;\n\n  /**\n   * Get the results as an array.\n   */\n  toArray(): T[];\n}\n\n/**\n * Apache arrow vectors are Read/Write\n */\nexport interface ReadWriteVector<T = any> extends Vector<T> {\n  set: (index: number, value: T) => void;\n}\n\n/**\n * Vector with standard manipulation functions\n */\nexport interface MutableVector<T = any> extends ReadWriteVector<T> {\n  /**\n   * Adds the value to the vector\n   */\n  add: (value: T) => void;\n\n  /**\n   * modifies the vector so it is now the opposite order\n   */\n  reverse: () => void;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}