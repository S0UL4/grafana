{"ast":null,"code":"var _p, _Icon, _Icon2, _Alert, _Alert2;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { AppEvents } from '@grafana/data';\nimport { selectors as e2eSelectors } from '@grafana/e2e-selectors';\nimport { Alert, ClipboardButton, Field, FieldSet, Icon, Input, RadioButtonGroup, Switch } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { appEvents } from 'app/core/core';\nimport { buildImageUrl, buildShareUrl } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst themeOptions = [{\n  label: 'Current',\n  value: 'current'\n}, {\n  label: 'Dark',\n  value: 'dark'\n}, {\n  label: 'Light',\n  value: 'light'\n}];\nexport class ShareLink extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"buildUrl\", async () => {\n      const {\n        panel,\n        dashboard\n      } = this.props;\n      const {\n        useCurrentTimeRange,\n        useShortUrl,\n        selectedTheme\n      } = this.state;\n      const shareUrl = await buildShareUrl(useCurrentTimeRange, selectedTheme, panel, useShortUrl);\n      const imageUrl = buildImageUrl(useCurrentTimeRange, dashboard.uid, selectedTheme, panel);\n      this.setState({\n        shareUrl,\n        imageUrl\n      });\n    });\n\n    _defineProperty(this, \"onUseCurrentTimeRangeChange\", () => {\n      this.setState({\n        useCurrentTimeRange: !this.state.useCurrentTimeRange\n      });\n    });\n\n    _defineProperty(this, \"onUrlShorten\", () => {\n      this.setState({\n        useShortUrl: !this.state.useShortUrl\n      });\n    });\n\n    _defineProperty(this, \"onThemeChange\", value => {\n      this.setState({\n        selectedTheme: value\n      });\n    });\n\n    _defineProperty(this, \"onShareUrlCopy\", () => {\n      appEvents.emit(AppEvents.alertSuccess, ['Content copied to clipboard']);\n    });\n\n    _defineProperty(this, \"getShareUrl\", () => {\n      return this.state.shareUrl;\n    });\n\n    this.state = {\n      useCurrentTimeRange: true,\n      useShortUrl: false,\n      selectedTheme: 'current',\n      shareUrl: '',\n      imageUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    this.buildUrl();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      useCurrentTimeRange,\n      useShortUrl,\n      selectedTheme\n    } = this.state;\n\n    if (prevState.useCurrentTimeRange !== useCurrentTimeRange || prevState.selectedTheme !== selectedTheme || prevState.useShortUrl !== useShortUrl) {\n      this.buildUrl();\n    }\n  }\n\n  render() {\n    const {\n      panel,\n      dashboard\n    } = this.props;\n    const isRelativeTime = dashboard ? dashboard.time.to === 'now' : false;\n    const {\n      useCurrentTimeRange,\n      useShortUrl,\n      selectedTheme,\n      shareUrl,\n      imageUrl\n    } = this.state;\n    const selectors = e2eSelectors.pages.SharePanelModal;\n    const isDashboardSaved = Boolean(dashboard.id);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_p || (_p = /*#__PURE__*/_jsx(\"p\", {\n        className: \"share-modal-info-text\",\n        children: \"Create a direct link to this dashboard or panel, customized with the options below.\"\n      })), /*#__PURE__*/_jsxs(FieldSet, {\n        children: [/*#__PURE__*/_jsx(Field, {\n          label: \"Lock time range\",\n          description: isRelativeTime ? 'Transforms the current relative time range to an absolute time range' : '',\n          children: /*#__PURE__*/_jsx(Switch, {\n            id: \"share-current-time-range\",\n            value: useCurrentTimeRange,\n            onChange: this.onUseCurrentTimeRangeChange\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: \"Theme\",\n          children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n            options: themeOptions,\n            value: selectedTheme,\n            onChange: this.onThemeChange\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: \"Shorten URL\",\n          children: /*#__PURE__*/_jsx(Switch, {\n            id: \"share-shorten-url\",\n            value: useShortUrl,\n            onChange: this.onUrlShorten\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: \"Link URL\",\n          children: /*#__PURE__*/_jsx(Input, {\n            id: \"link-url-input\",\n            value: shareUrl,\n            readOnly: true,\n            addonAfter: /*#__PURE__*/_jsxs(ClipboardButton, {\n              variant: \"primary\",\n              getText: this.getShareUrl,\n              onClipboardCopy: this.onShareUrlCopy,\n              children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                name: \"copy\"\n              })), \" Copy\"]\n            })\n          })\n        })]\n      }), panel && config.rendererAvailable && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [isDashboardSaved && /*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            href: imageUrl,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            \"aria-label\": selectors.linkToRenderedImage,\n            children: [_Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n              name: \"camera\"\n            })), \" Direct link rendered image\"]\n          })\n        }), !isDashboardSaved && (_Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n          severity: \"info\",\n          title: \"Dashboard is not saved\",\n          bottomSpacing: 0,\n          children: \"To render a panel image, you must save the dashboard first.\"\n        })))]\n      }), panel && !config.rendererAvailable && (_Alert2 || (_Alert2 = /*#__PURE__*/_jsxs(Alert, {\n        severity: \"info\",\n        title: \"Image renderer plugin not installed\",\n        bottomSpacing: 0,\n        children: [/*#__PURE__*/_jsx(_Fragment, {\n          children: \"To render a panel image, you must install the \"\n        }), /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://grafana.com/grafana/plugins/grafana-image-renderer\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"external-link\",\n          children: \"Grafana image renderer plugin\"\n        }), \". Please contact your Grafana administrator to install the plugin.\"]\n      })))]\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","AppEvents","selectors","e2eSelectors","Alert","ClipboardButton","Field","FieldSet","Icon","Input","RadioButtonGroup","Switch","config","appEvents","buildImageUrl","buildShareUrl","themeOptions","label","value","ShareLink","constructor","props","panel","dashboard","useCurrentTimeRange","useShortUrl","selectedTheme","state","shareUrl","imageUrl","uid","setState","emit","alertSuccess","componentDidMount","buildUrl","componentDidUpdate","prevProps","prevState","render","isRelativeTime","time","to","pages","SharePanelModal","isDashboardSaved","Boolean","id","onUseCurrentTimeRangeChange","onThemeChange","onUrlShorten","getShareUrl","onShareUrlCopy","rendererAvailable","linkToRenderedImage"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/ShareModal/ShareLink.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { AppEvents, SelectableValue } from '@grafana/data';\nimport { selectors as e2eSelectors } from '@grafana/e2e-selectors';\nimport { Alert, ClipboardButton, Field, FieldSet, Icon, Input, RadioButtonGroup, Switch } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { appEvents } from 'app/core/core';\n\nimport { ShareModalTabProps } from './types';\nimport { buildImageUrl, buildShareUrl } from './utils';\n\nconst themeOptions: Array<SelectableValue<string>> = [\n  { label: 'Current', value: 'current' },\n  { label: 'Dark', value: 'dark' },\n  { label: 'Light', value: 'light' },\n];\n\nexport interface Props extends ShareModalTabProps {}\n\nexport interface State {\n  useCurrentTimeRange: boolean;\n  useShortUrl: boolean;\n  selectedTheme: string;\n  shareUrl: string;\n  imageUrl: string;\n}\n\nexport class ShareLink extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      useCurrentTimeRange: true,\n      useShortUrl: false,\n      selectedTheme: 'current',\n      shareUrl: '',\n      imageUrl: '',\n    };\n  }\n\n  componentDidMount() {\n    this.buildUrl();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { useCurrentTimeRange, useShortUrl, selectedTheme } = this.state;\n    if (\n      prevState.useCurrentTimeRange !== useCurrentTimeRange ||\n      prevState.selectedTheme !== selectedTheme ||\n      prevState.useShortUrl !== useShortUrl\n    ) {\n      this.buildUrl();\n    }\n  }\n\n  buildUrl = async () => {\n    const { panel, dashboard } = this.props;\n    const { useCurrentTimeRange, useShortUrl, selectedTheme } = this.state;\n\n    const shareUrl = await buildShareUrl(useCurrentTimeRange, selectedTheme, panel, useShortUrl);\n    const imageUrl = buildImageUrl(useCurrentTimeRange, dashboard.uid, selectedTheme, panel);\n\n    this.setState({ shareUrl, imageUrl });\n  };\n\n  onUseCurrentTimeRangeChange = () => {\n    this.setState({ useCurrentTimeRange: !this.state.useCurrentTimeRange });\n  };\n\n  onUrlShorten = () => {\n    this.setState({ useShortUrl: !this.state.useShortUrl });\n  };\n\n  onThemeChange = (value: string) => {\n    this.setState({ selectedTheme: value });\n  };\n\n  onShareUrlCopy = () => {\n    appEvents.emit(AppEvents.alertSuccess, ['Content copied to clipboard']);\n  };\n\n  getShareUrl = () => {\n    return this.state.shareUrl;\n  };\n\n  render() {\n    const { panel, dashboard } = this.props;\n    const isRelativeTime = dashboard ? dashboard.time.to === 'now' : false;\n    const { useCurrentTimeRange, useShortUrl, selectedTheme, shareUrl, imageUrl } = this.state;\n    const selectors = e2eSelectors.pages.SharePanelModal;\n    const isDashboardSaved = Boolean(dashboard.id);\n\n    return (\n      <>\n        <p className=\"share-modal-info-text\">\n          Create a direct link to this dashboard or panel, customized with the options below.\n        </p>\n        <FieldSet>\n          <Field\n            label=\"Lock time range\"\n            description={isRelativeTime ? 'Transforms the current relative time range to an absolute time range' : ''}\n          >\n            <Switch\n              id=\"share-current-time-range\"\n              value={useCurrentTimeRange}\n              onChange={this.onUseCurrentTimeRangeChange}\n            />\n          </Field>\n          <Field label=\"Theme\">\n            <RadioButtonGroup options={themeOptions} value={selectedTheme} onChange={this.onThemeChange} />\n          </Field>\n          <Field label=\"Shorten URL\">\n            <Switch id=\"share-shorten-url\" value={useShortUrl} onChange={this.onUrlShorten} />\n          </Field>\n\n          <Field label=\"Link URL\">\n            <Input\n              id=\"link-url-input\"\n              value={shareUrl}\n              readOnly\n              addonAfter={\n                <ClipboardButton variant=\"primary\" getText={this.getShareUrl} onClipboardCopy={this.onShareUrlCopy}>\n                  <Icon name=\"copy\" /> Copy\n                </ClipboardButton>\n              }\n            />\n          </Field>\n        </FieldSet>\n\n        {panel && config.rendererAvailable && (\n          <>\n            {isDashboardSaved && (\n              <div className=\"gf-form\">\n                <a href={imageUrl} target=\"_blank\" rel=\"noreferrer\" aria-label={selectors.linkToRenderedImage}>\n                  <Icon name=\"camera\" /> Direct link rendered image\n                </a>\n              </div>\n            )}\n\n            {!isDashboardSaved && (\n              <Alert severity=\"info\" title=\"Dashboard is not saved\" bottomSpacing={0}>\n                To render a panel image, you must save the dashboard first.\n              </Alert>\n            )}\n          </>\n        )}\n\n        {panel && !config.rendererAvailable && (\n          <Alert severity=\"info\" title=\"Image renderer plugin not installed\" bottomSpacing={0}>\n            <>To render a panel image, you must install the </>\n            <a\n              href=\"https://grafana.com/grafana/plugins/grafana-image-renderer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              Grafana image renderer plugin\n            </a>\n            . Please contact your Grafana administrator to install the plugin.\n          </Alert>\n        )}\n      </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}