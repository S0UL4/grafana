{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useStyles2 } from '../../../themes/ThemeContext';\nimport { getFocusStyles } from '../../../themes/mixins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n      padding: 7px 9px 7px 9px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n        cursor: pointer;\n      }\n    `,\n    selected: css`\n      background: ${theme.colors.action.selected};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    radio: css`\n      opacity: 0;\n\n      &:focus-visible + label {\n        ${getFocusStyles(theme)};\n      }\n    `,\n    label: css`\n      cursor: pointer;\n    `\n  };\n};\n\nexport const TimeRangeOption = /*#__PURE__*/memo(({\n  value,\n  onSelect,\n  selected = false,\n  name\n}) => {\n  const styles = useStyles2(getStyles); // In case there are more of the same timerange in the list\n\n  const id = uuidv4();\n  return /*#__PURE__*/_jsxs(\"li\", {\n    onClick: () => onSelect(value),\n    className: cx(styles.container, selected && styles.selected),\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: styles.radio,\n      checked: selected,\n      name: name,\n      type: \"checkbox\",\n      id: id,\n      onChange: () => onSelect(value)\n    }), /*#__PURE__*/_jsx(\"label\", {\n      className: styles.label,\n      htmlFor: id,\n      children: value.display\n    })]\n  });\n});\nTimeRangeOption.displayName = 'TimeRangeOption';","map":{"version":3,"names":["css","cx","React","memo","v4","uuidv4","useStyles2","getFocusStyles","getStyles","theme","container","colors","action","hover","selected","typography","fontWeightMedium","radio","label","TimeRangeOption","value","onSelect","name","styles","id","display","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeRangePicker/TimeRangeOption.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GrafanaTheme2, TimeOption } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes/ThemeContext';\nimport { getFocusStyles } from '../../../themes/mixins';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n      padding: 7px 9px 7px 9px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n        cursor: pointer;\n      }\n    `,\n    selected: css`\n      background: ${theme.colors.action.selected};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    radio: css`\n      opacity: 0;\n\n      &:focus-visible + label {\n        ${getFocusStyles(theme)};\n      }\n    `,\n    label: css`\n      cursor: pointer;\n    `,\n  };\n};\n\ninterface Props {\n  value: TimeOption;\n  selected?: boolean;\n  onSelect: (option: TimeOption) => void;\n  /**\n   *  Input identifier. This should be the same for all options in a group.\n   */\n  name: string;\n}\n\nexport const TimeRangeOption = memo<Props>(({ value, onSelect, selected = false, name }) => {\n  const styles = useStyles2(getStyles);\n  // In case there are more of the same timerange in the list\n  const id = uuidv4();\n\n  return (\n    <li onClick={() => onSelect(value)} className={cx(styles.container, selected && styles.selected)}>\n      <input\n        className={styles.radio}\n        checked={selected}\n        name={name}\n        type=\"checkbox\"\n        id={id}\n        onChange={() => onSelect(value)}\n      />\n      <label className={styles.label} htmlFor={id}>\n        {value.display}\n      </label>\n    </li>\n  );\n});\n\nTimeRangeOption.displayName = 'TimeRangeOption';\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAIA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,SAAS,EAAEV,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBS,KAAK,CAACE,MAAN,CAAaC,MAAb,CAAoBC,KAAM;AAChD;AACA;AACA,KAZS;IAaLC,QAAQ,EAAEd,GAAI;AAClB,oBAAoBS,KAAK,CAACE,MAAN,CAAaC,MAAb,CAAoBE,QAAS;AACjD,qBAAqBL,KAAK,CAACM,UAAN,CAAiBC,gBAAiB;AACvD,KAhBS;IAiBLC,KAAK,EAAEjB,GAAI;AACf;AACA;AACA;AACA,UAAUO,cAAc,CAACE,KAAD,CAAQ;AAChC;AACA,KAvBS;IAwBLS,KAAK,EAAElB,GAAI;AACf;AACA;EA1BS,CAAP;AA4BD,CA7BD;;AAyCA,OAAO,MAAMmB,eAAe,gBAAGhB,IAAI,CAAQ,CAAC;EAAEiB,KAAF;EAASC,QAAT;EAAmBP,QAAQ,GAAG,KAA9B;EAAqCQ;AAArC,CAAD,KAAiD;EAC1F,MAAMC,MAAM,GAAGjB,UAAU,CAACE,SAAD,CAAzB,CAD0F,CAE1F;;EACA,MAAMgB,EAAE,GAAGnB,MAAM,EAAjB;EAEA,oBACE;IAAI,OAAO,EAAE,MAAMgB,QAAQ,CAACD,KAAD,CAA3B;IAAoC,SAAS,EAAEnB,EAAE,CAACsB,MAAM,CAACb,SAAR,EAAmBI,QAAQ,IAAIS,MAAM,CAACT,QAAtC,CAAjD;IAAA,wBACE;MACE,SAAS,EAAES,MAAM,CAACN,KADpB;MAEE,OAAO,EAAEH,QAFX;MAGE,IAAI,EAAEQ,IAHR;MAIE,IAAI,EAAC,UAJP;MAKE,EAAE,EAAEE,EALN;MAME,QAAQ,EAAE,MAAMH,QAAQ,CAACD,KAAD;IAN1B,EADF,eASE;MAAO,SAAS,EAAEG,MAAM,CAACL,KAAzB;MAAgC,OAAO,EAAEM,EAAzC;MAAA,UACGJ,KAAK,CAACK;IADT,EATF;EAAA,EADF;AAeD,CApBkC,CAA5B;AAsBPN,eAAe,CAACO,WAAhB,GAA8B,iBAA9B"},"metadata":{},"sourceType":"module"}