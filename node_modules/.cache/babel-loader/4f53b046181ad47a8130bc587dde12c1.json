{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { coreModule } from 'app/angular/core_module';\nexport class QueryRowCtrl {\n  constructor() {\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"queryCtrl\", void 0);\n\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"hasTextEditMode\", false);\n  }\n\n  $onInit() {\n    this.panelCtrl = this.queryCtrl.panelCtrl;\n    this.target = this.queryCtrl.target;\n    this.panel = this.panelCtrl.panel;\n\n    if (this.hasTextEditMode && this.queryCtrl.toggleEditorMode) {\n      // expose this function to react parent component\n      this.panelCtrl.toggleEditorMode = this.queryCtrl.toggleEditorMode.bind(this.queryCtrl);\n    }\n\n    if (this.queryCtrl.getCollapsedText) {\n      // expose this function to react parent component\n      this.panelCtrl.getCollapsedText = this.queryCtrl.getCollapsedText.bind(this.queryCtrl);\n    }\n  }\n\n}\nQueryRowCtrl.$inject = [];\n\n/** @ngInject */\nfunction queryEditorRowDirective() {\n  return {\n    restrict: 'E',\n    controller: QueryRowCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/angular/panel/partials/query_editor_row.html',\n    transclude: true,\n    scope: {\n      queryCtrl: '=',\n      canCollapse: '=',\n      hasTextEditMode: '='\n    }\n  };\n}\n\ncoreModule.directive('queryEditorRow', queryEditorRowDirective);","map":{"version":3,"names":["coreModule","QueryRowCtrl","$onInit","panelCtrl","queryCtrl","target","panel","hasTextEditMode","toggleEditorMode","bind","getCollapsedText","queryEditorRowDirective","restrict","controller","bindToController","controllerAs","templateUrl","transclude","scope","canCollapse","directive"],"sources":["/home/soula/grafana/public/app/angular/panel/query_editor_row.ts"],"sourcesContent":["import { coreModule } from 'app/angular/core_module';\n\nexport class QueryRowCtrl {\n  target: any;\n  queryCtrl: any;\n  panelCtrl: any;\n  panel: any;\n  hasTextEditMode = false;\n\n  $onInit() {\n    this.panelCtrl = this.queryCtrl.panelCtrl;\n    this.target = this.queryCtrl.target;\n    this.panel = this.panelCtrl.panel;\n\n    if (this.hasTextEditMode && this.queryCtrl.toggleEditorMode) {\n      // expose this function to react parent component\n      this.panelCtrl.toggleEditorMode = this.queryCtrl.toggleEditorMode.bind(this.queryCtrl);\n    }\n\n    if (this.queryCtrl.getCollapsedText) {\n      // expose this function to react parent component\n      this.panelCtrl.getCollapsedText = this.queryCtrl.getCollapsedText.bind(this.queryCtrl);\n    }\n  }\n}\n\n/** @ngInject */\nfunction queryEditorRowDirective() {\n  return {\n    restrict: 'E',\n    controller: QueryRowCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/angular/panel/partials/query_editor_row.html',\n    transclude: true,\n    scope: {\n      queryCtrl: '=',\n      canCollapse: '=',\n      hasTextEditMode: '=',\n    },\n  };\n}\n\ncoreModule.directive('queryEditorRow', queryEditorRowDirective);\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,yBAA3B;AAEA,OAAO,MAAMC,YAAN,CAAmB;EAAA;IAAA;;IAAA;;IAAA;;IAAA;;IAAA,yCAKN,KALM;EAAA;;EAOxBC,OAAO,GAAG;IACR,KAAKC,SAAL,GAAiB,KAAKC,SAAL,CAAeD,SAAhC;IACA,KAAKE,MAAL,GAAc,KAAKD,SAAL,CAAeC,MAA7B;IACA,KAAKC,KAAL,GAAa,KAAKH,SAAL,CAAeG,KAA5B;;IAEA,IAAI,KAAKC,eAAL,IAAwB,KAAKH,SAAL,CAAeI,gBAA3C,EAA6D;MAC3D;MACA,KAAKL,SAAL,CAAeK,gBAAf,GAAkC,KAAKJ,SAAL,CAAeI,gBAAf,CAAgCC,IAAhC,CAAqC,KAAKL,SAA1C,CAAlC;IACD;;IAED,IAAI,KAAKA,SAAL,CAAeM,gBAAnB,EAAqC;MACnC;MACA,KAAKP,SAAL,CAAeO,gBAAf,GAAkC,KAAKN,SAAL,CAAeM,gBAAf,CAAgCD,IAAhC,CAAqC,KAAKL,SAA1C,CAAlC;IACD;EACF;;AArBuB;;;AAwB1B;AACA,SAASO,uBAAT,GAAmC;EACjC,OAAO;IACLC,QAAQ,EAAE,GADL;IAELC,UAAU,EAAEZ,YAFP;IAGLa,gBAAgB,EAAE,IAHb;IAILC,YAAY,EAAE,MAJT;IAKLC,WAAW,EAAE,yDALR;IAMLC,UAAU,EAAE,IANP;IAOLC,KAAK,EAAE;MACLd,SAAS,EAAE,GADN;MAELe,WAAW,EAAE,GAFR;MAGLZ,eAAe,EAAE;IAHZ;EAPF,CAAP;AAaD;;AAEDP,UAAU,CAACoB,SAAX,CAAqB,gBAArB,EAAuCT,uBAAvC"},"metadata":{},"sourceType":"module"}