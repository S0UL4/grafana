{"ast":null,"code":"import React from 'react';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst liveTestDataChannels = [{\n  label: 'random-2s-stream',\n  value: 'random-2s-stream',\n  description: 'Random stream with points every 2s'\n}, {\n  label: 'random-flakey-stream',\n  value: 'random-flakey-stream',\n  description: 'Stream that returns data in random intervals'\n}, {\n  label: 'random-labeled-stream',\n  value: 'random-labeled-stream',\n  description: 'Value with moving labels'\n}, {\n  label: 'random-20Hz-stream',\n  value: 'random-20Hz-stream',\n  description: 'Random stream with points in 20Hz'\n}];\nexport const GrafanaLiveEditor = ({\n  onChange,\n  query\n}) => {\n  const onChannelChange = ({\n    value\n  }) => {\n    onChange(Object.assign({}, query, {\n      channel: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(InlineFieldRow, {\n    children: /*#__PURE__*/_jsx(InlineField, {\n      label: \"Channel\",\n      labelWidth: 14,\n      children: /*#__PURE__*/_jsx(Select, {\n        width: 32,\n        onChange: onChannelChange,\n        placeholder: \"Select channel\",\n        options: liveTestDataChannels,\n        value: liveTestDataChannels.find(f => f.value === query.channel)\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","InlineField","InlineFieldRow","Select","liveTestDataChannels","label","value","description","GrafanaLiveEditor","onChange","query","onChannelChange","channel","find","f"],"sources":["/home/soula/grafana/public/app/plugins/datasource/testdata/components/GrafanaLiveEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst liveTestDataChannels = [\n  {\n    label: 'random-2s-stream',\n    value: 'random-2s-stream',\n    description: 'Random stream with points every 2s',\n  },\n  {\n    label: 'random-flakey-stream',\n    value: 'random-flakey-stream',\n    description: 'Stream that returns data in random intervals',\n  },\n  {\n    label: 'random-labeled-stream',\n    value: 'random-labeled-stream',\n    description: 'Value with moving labels',\n  },\n  {\n    label: 'random-20Hz-stream',\n    value: 'random-20Hz-stream',\n    description: 'Random stream with points in 20Hz',\n  },\n];\n\nexport const GrafanaLiveEditor = ({ onChange, query }: EditorProps) => {\n  const onChannelChange = ({ value }: SelectableValue<string>) => {\n    onChange({ ...query, channel: value });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Channel\" labelWidth={14}>\n        <Select\n          width={32}\n          onChange={onChannelChange}\n          placeholder=\"Select channel\"\n          options={liveTestDataChannels}\n          value={liveTestDataChannels.find((f) => f.value === query.channel)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,MAAtC,QAAoD,aAApD;;AAIA,MAAMC,oBAAoB,GAAG,CAC3B;EACEC,KAAK,EAAE,kBADT;EAEEC,KAAK,EAAE,kBAFT;EAGEC,WAAW,EAAE;AAHf,CAD2B,EAM3B;EACEF,KAAK,EAAE,sBADT;EAEEC,KAAK,EAAE,sBAFT;EAGEC,WAAW,EAAE;AAHf,CAN2B,EAW3B;EACEF,KAAK,EAAE,uBADT;EAEEC,KAAK,EAAE,uBAFT;EAGEC,WAAW,EAAE;AAHf,CAX2B,EAgB3B;EACEF,KAAK,EAAE,oBADT;EAEEC,KAAK,EAAE,oBAFT;EAGEC,WAAW,EAAE;AAHf,CAhB2B,CAA7B;AAuBA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KAAsC;EACrE,MAAMC,eAAe,GAAG,CAAC;IAAEL;EAAF,CAAD,KAAwC;IAC9DG,QAAQ,mBAAMC,KAAN;MAAaE,OAAO,EAAEN;IAAtB,GAAR;EACD,CAFD;;EAIA,oBACE,KAAC,cAAD;IAAA,uBACE,KAAC,WAAD;MAAa,KAAK,EAAC,SAAnB;MAA6B,UAAU,EAAE,EAAzC;MAAA,uBACE,KAAC,MAAD;QACE,KAAK,EAAE,EADT;QAEE,QAAQ,EAAEK,eAFZ;QAGE,WAAW,EAAC,gBAHd;QAIE,OAAO,EAAEP,oBAJX;QAKE,KAAK,EAAEA,oBAAoB,CAACS,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACR,KAAF,KAAYI,KAAK,CAACE,OAAnD;MALT;IADF;EADF,EADF;AAaD,CAlBM"},"metadata":{},"sourceType":"module"}