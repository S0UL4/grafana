{"ast":null,"code":"import React, { useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport { Marker } from './Marker';\nimport { XYCanvas } from './XYCanvas';\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function EventsCanvas({\n  id,\n  events,\n  renderEventMarker,\n  mapEventToXYCoords,\n  config\n}) {\n  const plotInstance = useRef(); // render token required to re-render annotation markers. Rendering lines happens in uPlot and the props do not change\n  // so we need to force the re-render when the draw hook was performed by uPlot\n\n  const [renderToken, setRenderToken] = useState(0);\n  const isMounted = useMountedState();\n  useLayoutEffect(() => {\n    config.addHook('init', u => {\n      plotInstance.current = u;\n    });\n    config.addHook('draw', () => {\n      if (!isMounted()) {\n        return;\n      }\n\n      setRenderToken(s => s + 1);\n    });\n  }, [config, setRenderToken]);\n  const eventMarkers = useMemo(() => {\n    const markers = [];\n\n    if (!plotInstance.current || events.length === 0) {\n      return markers;\n    }\n\n    for (let i = 0; i < events.length; i++) {\n      const frame = events[i];\n\n      for (let j = 0; j < frame.length; j++) {\n        const coords = mapEventToXYCoords(frame, {\n          fieldIndex: j,\n          frameIndex: i\n        });\n\n        if (!coords) {\n          continue;\n        }\n\n        markers.push( /*#__PURE__*/_createElement(Marker, Object.assign({}, coords, {\n          key: `${id}-marker-${i}-${j}`\n        }), renderEventMarker(frame, {\n          fieldIndex: j,\n          frameIndex: i\n        })));\n      }\n    }\n\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: markers\n    });\n  }, [events, renderEventMarker, renderToken]);\n\n  if (!plotInstance.current) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(XYCanvas, {\n    left: plotInstance.current.bbox.left / window.devicePixelRatio,\n    top: plotInstance.current.bbox.top / window.devicePixelRatio,\n    children: eventMarkers\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useMemo","useRef","useState","useMountedState","Marker","XYCanvas","EventsCanvas","id","events","renderEventMarker","mapEventToXYCoords","config","plotInstance","renderToken","setRenderToken","isMounted","addHook","u","current","s","eventMarkers","markers","length","i","frame","j","coords","fieldIndex","frameIndex","push","bbox","left","window","devicePixelRatio","top"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/uPlot/geometries/EventsCanvas.tsx"],"sourcesContent":["import React, { useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport uPlot from 'uplot';\n\nimport { DataFrame, DataFrameFieldIndex } from '@grafana/data';\n\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\n\nimport { Marker } from './Marker';\nimport { XYCanvas } from './XYCanvas';\n\ninterface EventsCanvasProps {\n  id: string;\n  config: UPlotConfigBuilder;\n  events: DataFrame[];\n  renderEventMarker: (dataFrame: DataFrame, dataFrameFieldIndex: DataFrameFieldIndex) => React.ReactNode;\n  mapEventToXYCoords: (\n    dataFrame: DataFrame,\n    dataFrameFieldIndex: DataFrameFieldIndex\n  ) => { x: number; y: number } | undefined;\n}\n\nexport function EventsCanvas({ id, events, renderEventMarker, mapEventToXYCoords, config }: EventsCanvasProps) {\n  const plotInstance = useRef<uPlot>();\n  // render token required to re-render annotation markers. Rendering lines happens in uPlot and the props do not change\n  // so we need to force the re-render when the draw hook was performed by uPlot\n  const [renderToken, setRenderToken] = useState(0);\n  const isMounted = useMountedState();\n\n  useLayoutEffect(() => {\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n    });\n\n    config.addHook('draw', () => {\n      if (!isMounted()) {\n        return;\n      }\n      setRenderToken((s) => s + 1);\n    });\n  }, [config, setRenderToken]);\n\n  const eventMarkers = useMemo(() => {\n    const markers: React.ReactNode[] = [];\n\n    if (!plotInstance.current || events.length === 0) {\n      return markers;\n    }\n\n    for (let i = 0; i < events.length; i++) {\n      const frame = events[i];\n      for (let j = 0; j < frame.length; j++) {\n        const coords = mapEventToXYCoords(frame, { fieldIndex: j, frameIndex: i });\n        if (!coords) {\n          continue;\n        }\n        markers.push(\n          <Marker {...coords} key={`${id}-marker-${i}-${j}`}>\n            {renderEventMarker(frame, { fieldIndex: j, frameIndex: i })}\n          </Marker>\n        );\n      }\n    }\n\n    return <>{markers}</>;\n  }, [events, renderEventMarker, renderToken]);\n\n  if (!plotInstance.current) {\n    return null;\n  }\n\n  return (\n    <XYCanvas\n      left={plotInstance.current.bbox.left / window.devicePixelRatio}\n      top={plotInstance.current.bbox.top / window.devicePixelRatio}\n    >\n      {eventMarkers}\n    </XYCanvas>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,eAAT,QAAgC,WAAhC;AAOA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;;AAaA,OAAO,SAASC,YAAT,CAAsB;EAAEC,EAAF;EAAMC,MAAN;EAAcC,iBAAd;EAAiCC,kBAAjC;EAAqDC;AAArD,CAAtB,EAAwG;EAC7G,MAAMC,YAAY,GAAGX,MAAM,EAA3B,CAD6G,CAE7G;EACA;;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMa,SAAS,GAAGZ,eAAe,EAAjC;EAEAJ,eAAe,CAAC,MAAM;IACpBY,MAAM,CAACK,OAAP,CAAe,MAAf,EAAwBC,CAAD,IAAO;MAC5BL,YAAY,CAACM,OAAb,GAAuBD,CAAvB;IACD,CAFD;IAIAN,MAAM,CAACK,OAAP,CAAe,MAAf,EAAuB,MAAM;MAC3B,IAAI,CAACD,SAAS,EAAd,EAAkB;QAChB;MACD;;MACDD,cAAc,CAAEK,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAd;IACD,CALD;EAMD,CAXc,EAWZ,CAACR,MAAD,EAASG,cAAT,CAXY,CAAf;EAaA,MAAMM,YAAY,GAAGpB,OAAO,CAAC,MAAM;IACjC,MAAMqB,OAA0B,GAAG,EAAnC;;IAEA,IAAI,CAACT,YAAY,CAACM,OAAd,IAAyBV,MAAM,CAACc,MAAP,KAAkB,CAA/C,EAAkD;MAChD,OAAOD,OAAP;IACD;;IAED,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACc,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;MACtC,MAAMC,KAAK,GAAGhB,MAAM,CAACe,CAAD,CAApB;;MACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACF,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;QACrC,MAAMC,MAAM,GAAGhB,kBAAkB,CAACc,KAAD,EAAQ;UAAEG,UAAU,EAAEF,CAAd;UAAiBG,UAAU,EAAEL;QAA7B,CAAR,CAAjC;;QACA,IAAI,CAACG,MAAL,EAAa;UACX;QACD;;QACDL,OAAO,CAACQ,IAAR,eACE,eAAC,MAAD,oBAAYH,MAAZ;UAAoB,GAAG,EAAG,GAAEnB,EAAG,WAAUgB,CAAE,IAAGE,CAAE;QAAhD,IACGhB,iBAAiB,CAACe,KAAD,EAAQ;UAAEG,UAAU,EAAEF,CAAd;UAAiBG,UAAU,EAAEL;QAA7B,CAAR,CADpB,CADF;MAKD;IACF;;IAED,oBAAO;MAAA,UAAGF;IAAH,EAAP;EACD,CAvB2B,EAuBzB,CAACb,MAAD,EAASC,iBAAT,EAA4BI,WAA5B,CAvByB,CAA5B;;EAyBA,IAAI,CAACD,YAAY,CAACM,OAAlB,EAA2B;IACzB,OAAO,IAAP;EACD;;EAED,oBACE,KAAC,QAAD;IACE,IAAI,EAAEN,YAAY,CAACM,OAAb,CAAqBY,IAArB,CAA0BC,IAA1B,GAAiCC,MAAM,CAACC,gBADhD;IAEE,GAAG,EAAErB,YAAY,CAACM,OAAb,CAAqBY,IAArB,CAA0BI,GAA1B,GAAgCF,MAAM,CAACC,gBAF9C;IAAA,UAIGb;EAJH,EADF;AAQD"},"metadata":{},"sourceType":"module"}