{"ast":null,"code":"var _LinkButton, _PageLoader, _th, _th2, _th3, _th4, _th5, _Icon, _th6, _Tooltip, _Tooltip2, _span;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect, useMemo, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon, LinkButton, Pagination, RadioButtonGroup, Tooltip, useStyles2, FilterInput } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { contextSrv } from 'app/core/core';\nimport PageLoader from '../../core/components/PageLoader/PageLoader';\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { AccessControlAction } from '../../types';\nimport { changeFilter, changePage, changeQuery, fetchUsers } from './state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst extraFilters = [];\nexport const addExtraFilters = filter => {\n  extraFilters.push(filter);\n};\nconst mapDispatchToProps = {\n  fetchUsers,\n  changeQuery,\n  changePage,\n  changeFilter\n};\n\nconst mapStateToProps = state => ({\n  navModel: getNavModel(state.navIndex, 'global-users'),\n  users: state.userListAdmin.users,\n  query: state.userListAdmin.query,\n  showPaging: state.userListAdmin.showPaging,\n  totalPages: state.userListAdmin.totalPages,\n  page: state.userListAdmin.page,\n  filters: state.userListAdmin.filters,\n  isLoading: state.userListAdmin.isLoading\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst UserListAdminPageUnConnected = ({\n  fetchUsers,\n  navModel,\n  query,\n  changeQuery,\n  users,\n  showPaging,\n  totalPages,\n  page,\n  changePage,\n  changeFilter,\n  filters,\n  isLoading\n}) => {\n  var _filters$find;\n\n  const styles = useStyles2(getStyles);\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n  const showLicensedRole = useMemo(() => users.some(user => user.licensedRole), [users]);\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsxs(Page.Contents, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"page-action-bar\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"gf-form gf-form--grow\",\n          children: [/*#__PURE__*/_jsx(FilterInput, {\n            placeholder: \"Search user by login, email, or name.\",\n            autoFocus: true,\n            value: query,\n            onChange: changeQuery\n          }), /*#__PURE__*/_jsx(RadioButtonGroup, {\n            options: [{\n              label: 'All users',\n              value: false\n            }, {\n              label: 'Active last 30 days',\n              value: true\n            }],\n            onChange: value => changeFilter({\n              name: 'activeLast30Days',\n              value\n            }),\n            value: (_filters$find = filters.find(f => f.name === 'activeLast30Days')) === null || _filters$find === void 0 ? void 0 : _filters$find.value,\n            className: styles.filter\n          }), extraFilters.map((FilterComponent, index) => /*#__PURE__*/_jsx(FilterComponent, {\n            filters: filters,\n            onChange: changeFilter,\n            className: styles.filter\n          }, index))]\n        }), contextSrv.hasPermission(AccessControlAction.UsersCreate) && (_LinkButton || (_LinkButton = /*#__PURE__*/_jsx(LinkButton, {\n          href: \"admin/users/create\",\n          variant: \"primary\",\n          children: \"New user\"\n        })))]\n      }), isLoading ? _PageLoader || (_PageLoader = /*#__PURE__*/_jsx(PageLoader, {})) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: cx(styles.table, 'admin-list-table'),\n          children: /*#__PURE__*/_jsxs(\"table\", {\n            className: \"filter-table form-inline filter-table--hover\",\n            children: [/*#__PURE__*/_jsx(\"thead\", {\n              children: /*#__PURE__*/_jsxs(\"tr\", {\n                children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {})), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Login\"\n                })), _th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Email\"\n                })), _th4 || (_th4 = /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Name\"\n                })), _th5 || (_th5 = /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Belongs to\"\n                })), showLicensedRole && /*#__PURE__*/_jsxs(\"th\", {\n                  children: [\"Licensed role\", ' ', /*#__PURE__*/_jsx(Tooltip, {\n                    placement: \"top\",\n                    content: /*#__PURE__*/_jsxs(_Fragment, {\n                      children: [\"Licensed role is based on a user's Org role (i.e. Viewer, Editor, Admin) and their dashboard/folder permissions.\", ' ', /*#__PURE__*/_jsx(\"a\", {\n                        className: styles.link,\n                        target: \"_blank\",\n                        rel: \"noreferrer noopener\",\n                        href: 'https://grafana.com/docs/grafana/next/enterprise/license/license-restrictions/#active-users-limit',\n                        children: \"Learn more\"\n                      })]\n                    }),\n                    children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                      name: \"question-circle\"\n                    }))\n                  })]\n                }), _th6 || (_th6 = /*#__PURE__*/_jsxs(\"th\", {\n                  children: [\"Last active\\xA0\", /*#__PURE__*/_jsx(Tooltip, {\n                    placement: \"top\",\n                    content: \"Time since user was seen using Grafana\",\n                    children: /*#__PURE__*/_jsx(Icon, {\n                      name: \"question-circle\"\n                    })\n                  })]\n                })), /*#__PURE__*/_jsx(\"th\", {\n                  style: {\n                    width: '1%'\n                  }\n                })]\n              })\n            }), /*#__PURE__*/_jsx(\"tbody\", {\n              children: users.map(user => /*#__PURE__*/_jsx(UserListItem, {\n                user: user,\n                showLicensedRole: showLicensedRole\n              }, user.id))\n            })]\n          })\n        }), showPaging && /*#__PURE__*/_jsx(Pagination, {\n          numberOfPages: totalPages,\n          currentPage: page,\n          onNavigate: changePage\n        })]\n      })]\n    })\n  });\n};\n\nconst getUsersAriaLabel = name => {\n  return `Edit user's ${name} details`;\n};\n\nconst UserListItem = /*#__PURE__*/memo(({\n  user,\n  showLicensedRole\n}) => {\n  var _user$orgs;\n\n  const styles = useStyles2(getStyles);\n  const editUrl = `admin/users/edit/${user.id}`;\n  return /*#__PURE__*/_jsxs(\"tr\", {\n    children: [/*#__PURE__*/_jsx(\"td\", {\n      className: \"width-4 text-center link-td\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        href: editUrl,\n        \"aria-label\": `Edit user's ${user.name} details`,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          className: \"filter-table__avatar\",\n          src: user.avatarUrl,\n          alt: `Avatar for user ${user.name}`\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"link-td max-width-10\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        className: \"ellipsis\",\n        href: editUrl,\n        title: user.login,\n        \"aria-label\": getUsersAriaLabel(user.name),\n        children: user.login\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"link-td max-width-10\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        className: \"ellipsis\",\n        href: editUrl,\n        title: user.email,\n        \"aria-label\": getUsersAriaLabel(user.name),\n        children: user.email\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"link-td max-width-10\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        className: \"ellipsis\",\n        href: editUrl,\n        title: user.name,\n        \"aria-label\": getUsersAriaLabel(user.name),\n        children: user.name\n      })\n    }), /*#__PURE__*/_jsxs(\"td\", {\n      className: styles.row,\n      title: (_user$orgs = user.orgs) !== null && _user$orgs !== void 0 && _user$orgs.length ? `The user is a member of the following organizations: ${user.orgs.map(org => org.name).join(',')}` : undefined,\n      children: [/*#__PURE__*/_jsx(OrgUnits, {\n        units: user.orgs,\n        icon: 'building'\n      }), user.isAdmin && /*#__PURE__*/_jsx(\"a\", {\n        href: editUrl,\n        \"aria-label\": getUsersAriaLabel(user.name),\n        children: _Tooltip || (_Tooltip = /*#__PURE__*/_jsx(Tooltip, {\n          placement: \"top\",\n          content: \"Grafana Admin\",\n          children: /*#__PURE__*/_jsx(Icon, {\n            name: \"shield\"\n          })\n        }))\n      })]\n    }), showLicensedRole && /*#__PURE__*/_jsx(\"td\", {\n      className: cx('link-td', styles.iconRow),\n      children: /*#__PURE__*/_jsx(\"a\", {\n        className: \"ellipsis\",\n        href: editUrl,\n        title: user.name,\n        \"aria-label\": getUsersAriaLabel(user.name),\n        children: user.licensedRole === 'None' ? /*#__PURE__*/_jsxs(\"span\", {\n          className: styles.disabled,\n          children: [\"Not assigned\", ' ', _Tooltip2 || (_Tooltip2 = /*#__PURE__*/_jsx(Tooltip, {\n            placement: \"top\",\n            content: \"A licensed role will be assigned when this user signs in\",\n            children: /*#__PURE__*/_jsx(Icon, {\n              name: \"question-circle\"\n            })\n          }))]\n        }) : user.licensedRole\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"link-td\",\n      children: user.lastSeenAtAge && /*#__PURE__*/_jsx(\"a\", {\n        href: editUrl,\n        \"aria-label\": `Last seen at ${user.lastSeenAtAge}. Follow to edit user's ${user.name} details.`,\n        children: user.lastSeenAtAge === '10 years' ? /*#__PURE__*/_jsx(\"span\", {\n          className: styles.disabled,\n          children: \"Never\"\n        }) : user.lastSeenAtAge\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"text-right\",\n      children: Array.isArray(user.authLabels) && user.authLabels.length > 0 && /*#__PURE__*/_jsx(TagBadge, {\n        label: user.authLabels[0],\n        removeIcon: false,\n        count: 0\n      })\n    }), /*#__PURE__*/_jsx(\"td\", {\n      className: \"text-right\",\n      children: user.isDisabled && (_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"label label-tag label-tag--gray\",\n        children: \"Disabled\"\n      })))\n    })]\n  }, user.id);\n});\nUserListItem.displayName = 'UserListItem';\n\nconst OrgUnits = ({\n  units,\n  icon\n}) => {\n  const styles = useStyles2(getStyles);\n\n  if (!(units !== null && units !== void 0 && units.length)) {\n    return null;\n  }\n\n  return units.length > 1 ? /*#__PURE__*/_jsx(Tooltip, {\n    placement: 'top',\n    content: /*#__PURE__*/_jsx(\"div\", {\n      className: styles.unitTooltip,\n      children: units === null || units === void 0 ? void 0 : units.map(unit => /*#__PURE__*/_jsx(\"a\", {\n        href: unit.url,\n        className: styles.link,\n        title: unit.name,\n        \"aria-label\": `Edit ${unit.name}`,\n        children: unit.name\n      }, unit.name))\n    }),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.unitItem,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: icon\n      }), \" \", /*#__PURE__*/_jsx(\"span\", {\n        children: units.length\n      })]\n    })\n  }) : /*#__PURE__*/_jsxs(\"a\", {\n    href: units[0].url,\n    className: styles.unitItem,\n    title: units[0].name,\n    \"aria-label\": `Edit ${units[0].name}`,\n    children: [/*#__PURE__*/_jsx(Icon, {\n      name: icon\n    }), \" \", units[0].name]\n  }, units[0].name);\n};\n\nconst getStyles = theme => {\n  return {\n    table: css`\n      margin-top: ${theme.spacing(3)};\n    `,\n    filter: css`\n      margin: 0 ${theme.spacing(1)};\n    `,\n    iconRow: css`\n      svg {\n        margin-left: ${theme.spacing(0.5)};\n      }\n    `,\n    row: css`\n      display: flex;\n      align-items: center;\n      height: 100% !important;\n\n      a {\n        padding: ${theme.spacing(0.5)} 0 !important;\n      }\n    `,\n    unitTooltip: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    unitItem: css`\n      cursor: pointer;\n      padding: ${theme.spacing(0.5)} 0;\n      margin-right: ${theme.spacing(1)};\n    `,\n    disabled: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    link: css`\n      color: inherit;\n      cursor: pointer;\n      text-decoration: underline;\n    `\n  };\n};\n\nexport default connector(UserListAdminPageUnConnected);","map":{"version":3,"names":["css","cx","React","useEffect","useMemo","memo","connect","Icon","LinkButton","Pagination","RadioButtonGroup","Tooltip","useStyles2","FilterInput","Page","TagBadge","contextSrv","PageLoader","getNavModel","AccessControlAction","changeFilter","changePage","changeQuery","fetchUsers","extraFilters","addExtraFilters","filter","push","mapDispatchToProps","mapStateToProps","state","navModel","navIndex","users","userListAdmin","query","showPaging","totalPages","page","filters","isLoading","connector","UserListAdminPageUnConnected","styles","getStyles","showLicensedRole","some","user","licensedRole","label","value","name","find","f","map","FilterComponent","index","hasPermission","UsersCreate","table","link","width","id","getUsersAriaLabel","UserListItem","editUrl","avatarUrl","login","email","row","orgs","length","org","join","undefined","isAdmin","iconRow","disabled","lastSeenAtAge","Array","isArray","authLabels","isDisabled","displayName","OrgUnits","units","icon","unitTooltip","unit","url","unitItem","theme","spacing","colors","text"],"sources":["/home/soula/grafana/public/app/features/admin/UserListAdminPage.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ComponentType, useEffect, useMemo, memo } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport {\n  Icon,\n  IconName,\n  LinkButton,\n  Pagination,\n  RadioButtonGroup,\n  Tooltip,\n  useStyles2,\n  FilterInput,\n} from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { contextSrv } from 'app/core/core';\n\nimport PageLoader from '../../core/components/PageLoader/PageLoader';\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { AccessControlAction, StoreState, Unit, UserDTO, UserFilter } from '../../types';\n\nimport { changeFilter, changePage, changeQuery, fetchUsers } from './state/actions';\n\nexport interface FilterProps {\n  filters: UserFilter[];\n  onChange: (filter: any) => void;\n  className?: string;\n}\nconst extraFilters: Array<ComponentType<FilterProps>> = [];\nexport const addExtraFilters = (filter: ComponentType<FilterProps>) => {\n  extraFilters.push(filter);\n};\n\nconst mapDispatchToProps = {\n  fetchUsers,\n  changeQuery,\n  changePage,\n  changeFilter,\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'global-users'),\n  users: state.userListAdmin.users,\n  query: state.userListAdmin.query,\n  showPaging: state.userListAdmin.showPaging,\n  totalPages: state.userListAdmin.totalPages,\n  page: state.userListAdmin.page,\n  filters: state.userListAdmin.filters,\n  isLoading: state.userListAdmin.isLoading,\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nconst UserListAdminPageUnConnected: React.FC<Props> = ({\n  fetchUsers,\n  navModel,\n  query,\n  changeQuery,\n  users,\n  showPaging,\n  totalPages,\n  page,\n  changePage,\n  changeFilter,\n  filters,\n  isLoading,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const showLicensedRole = useMemo(() => users.some((user) => user.licensedRole), [users]);\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput\n              placeholder=\"Search user by login, email, or name.\"\n              autoFocus={true}\n              value={query}\n              onChange={changeQuery}\n            />\n            <RadioButtonGroup\n              options={[\n                { label: 'All users', value: false },\n                { label: 'Active last 30 days', value: true },\n              ]}\n              onChange={(value) => changeFilter({ name: 'activeLast30Days', value })}\n              value={filters.find((f) => f.name === 'activeLast30Days')?.value}\n              className={styles.filter}\n            />\n            {extraFilters.map((FilterComponent, index) => (\n              <FilterComponent key={index} filters={filters} onChange={changeFilter} className={styles.filter} />\n            ))}\n          </div>\n          {contextSrv.hasPermission(AccessControlAction.UsersCreate) && (\n            <LinkButton href=\"admin/users/create\" variant=\"primary\">\n              New user\n            </LinkButton>\n          )}\n        </div>\n        {isLoading ? (\n          <PageLoader />\n        ) : (\n          <>\n            <div className={cx(styles.table, 'admin-list-table')}>\n              <table className=\"filter-table form-inline filter-table--hover\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th>Login</th>\n                    <th>Email</th>\n                    <th>Name</th>\n                    <th>Belongs to</th>\n                    {showLicensedRole && (\n                      <th>\n                        Licensed role{' '}\n                        <Tooltip\n                          placement=\"top\"\n                          content={\n                            <>\n                              Licensed role is based on a user&apos;s Org role (i.e. Viewer, Editor, Admin) and their\n                              dashboard/folder permissions.{' '}\n                              <a\n                                className={styles.link}\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                href={\n                                  'https://grafana.com/docs/grafana/next/enterprise/license/license-restrictions/#active-users-limit'\n                                }\n                              >\n                                Learn more\n                              </a>\n                            </>\n                          }\n                        >\n                          <Icon name=\"question-circle\" />\n                        </Tooltip>\n                      </th>\n                    )}\n                    <th>\n                      Last active&nbsp;\n                      <Tooltip placement=\"top\" content=\"Time since user was seen using Grafana\">\n                        <Icon name=\"question-circle\" />\n                      </Tooltip>\n                    </th>\n                    <th style={{ width: '1%' }}></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users.map((user) => (\n                    <UserListItem user={user} showLicensedRole={showLicensedRole} key={user.id} />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            {showPaging && <Pagination numberOfPages={totalPages} currentPage={page} onNavigate={changePage} />}\n          </>\n        )}\n      </Page.Contents>\n    </Page>\n  );\n};\n\nconst getUsersAriaLabel = (name: string) => {\n  return `Edit user's ${name} details`;\n};\n\ntype UserListItemProps = {\n  user: UserDTO;\n  showLicensedRole: boolean;\n};\n\nconst UserListItem = memo(({ user, showLicensedRole }: UserListItemProps) => {\n  const styles = useStyles2(getStyles);\n  const editUrl = `admin/users/edit/${user.id}`;\n\n  return (\n    <tr key={user.id}>\n      <td className=\"width-4 text-center link-td\">\n        <a href={editUrl} aria-label={`Edit user's ${user.name} details`}>\n          <img className=\"filter-table__avatar\" src={user.avatarUrl} alt={`Avatar for user ${user.name}`} />\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.login} aria-label={getUsersAriaLabel(user.name)}>\n          {user.login}\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.email} aria-label={getUsersAriaLabel(user.name)}>\n          {user.email}\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.name} aria-label={getUsersAriaLabel(user.name)}>\n          {user.name}\n        </a>\n      </td>\n\n      <td\n        className={styles.row}\n        title={\n          user.orgs?.length\n            ? `The user is a member of the following organizations: ${user.orgs.map((org) => org.name).join(',')}`\n            : undefined\n        }\n      >\n        <OrgUnits units={user.orgs} icon={'building'} />\n        {user.isAdmin && (\n          <a href={editUrl} aria-label={getUsersAriaLabel(user.name)}>\n            <Tooltip placement=\"top\" content=\"Grafana Admin\">\n              <Icon name=\"shield\" />\n            </Tooltip>\n          </a>\n        )}\n      </td>\n      {showLicensedRole && (\n        <td className={cx('link-td', styles.iconRow)}>\n          <a className=\"ellipsis\" href={editUrl} title={user.name} aria-label={getUsersAriaLabel(user.name)}>\n            {user.licensedRole === 'None' ? (\n              <span className={styles.disabled}>\n                Not assigned{' '}\n                <Tooltip placement=\"top\" content=\"A licensed role will be assigned when this user signs in\">\n                  <Icon name=\"question-circle\" />\n                </Tooltip>\n              </span>\n            ) : (\n              user.licensedRole\n            )}\n          </a>\n        </td>\n      )}\n      <td className=\"link-td\">\n        {user.lastSeenAtAge && (\n          <a\n            href={editUrl}\n            aria-label={`Last seen at ${user.lastSeenAtAge}. Follow to edit user's ${user.name} details.`}\n          >\n            {user.lastSeenAtAge === '10 years' ? <span className={styles.disabled}>Never</span> : user.lastSeenAtAge}\n          </a>\n        )}\n      </td>\n      <td className=\"text-right\">\n        {Array.isArray(user.authLabels) && user.authLabels.length > 0 && (\n          <TagBadge label={user.authLabels[0]} removeIcon={false} count={0} />\n        )}\n      </td>\n      <td className=\"text-right\">\n        {user.isDisabled && <span className=\"label label-tag label-tag--gray\">Disabled</span>}\n      </td>\n    </tr>\n  );\n});\n\nUserListItem.displayName = 'UserListItem';\n\ntype OrgUnitProps = { units?: Unit[]; icon: IconName };\n\nconst OrgUnits = ({ units, icon }: OrgUnitProps) => {\n  const styles = useStyles2(getStyles);\n\n  if (!units?.length) {\n    return null;\n  }\n\n  return units.length > 1 ? (\n    <Tooltip\n      placement={'top'}\n      content={\n        <div className={styles.unitTooltip}>\n          {units?.map((unit) => (\n            <a\n              href={unit.url}\n              className={styles.link}\n              title={unit.name}\n              key={unit.name}\n              aria-label={`Edit ${unit.name}`}\n            >\n              {unit.name}\n            </a>\n          ))}\n        </div>\n      }\n    >\n      <div className={styles.unitItem}>\n        <Icon name={icon} /> <span>{units.length}</span>\n      </div>\n    </Tooltip>\n  ) : (\n    <a\n      href={units[0].url}\n      className={styles.unitItem}\n      title={units[0].name}\n      key={units[0].name}\n      aria-label={`Edit ${units[0].name}`}\n    >\n      <Icon name={icon} /> {units[0].name}\n    </a>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    table: css`\n      margin-top: ${theme.spacing(3)};\n    `,\n    filter: css`\n      margin: 0 ${theme.spacing(1)};\n    `,\n    iconRow: css`\n      svg {\n        margin-left: ${theme.spacing(0.5)};\n      }\n    `,\n    row: css`\n      display: flex;\n      align-items: center;\n      height: 100% !important;\n\n      a {\n        padding: ${theme.spacing(0.5)} 0 !important;\n      }\n    `,\n    unitTooltip: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    unitItem: css`\n      cursor: pointer;\n      padding: ${theme.spacing(0.5)} 0;\n      margin-right: ${theme.spacing(1)};\n    `,\n    disabled: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    link: css`\n      color: inherit;\n      cursor: pointer;\n      text-decoration: underline;\n    `,\n  };\n};\n\nexport default connector(UserListAdminPageUnConnected);\n"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAA+BC,SAA/B,EAA0CC,OAA1C,EAAmDC,IAAnD,QAA+D,OAA/D;AACA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SACEC,IADF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,gBALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,WARF,QASO,aATP;AAUA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAA2E,aAA3E;AAEA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgDC,UAAhD,QAAkE,iBAAlE;;;;AAOA,MAAMC,YAA+C,GAAG,EAAxD;AACA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAwC;EACrEF,YAAY,CAACG,IAAb,CAAkBD,MAAlB;AACD,CAFM;AAIP,MAAME,kBAAkB,GAAG;EACzBL,UADyB;EAEzBD,WAFyB;EAGzBD,UAHyB;EAIzBD;AAJyB,CAA3B;;AAOA,MAAMS,eAAe,GAAIC,KAAD,KAAwB;EAC9CC,QAAQ,EAAEb,WAAW,CAACY,KAAK,CAACE,QAAP,EAAiB,cAAjB,CADyB;EAE9CC,KAAK,EAAEH,KAAK,CAACI,aAAN,CAAoBD,KAFmB;EAG9CE,KAAK,EAAEL,KAAK,CAACI,aAAN,CAAoBC,KAHmB;EAI9CC,UAAU,EAAEN,KAAK,CAACI,aAAN,CAAoBE,UAJc;EAK9CC,UAAU,EAAEP,KAAK,CAACI,aAAN,CAAoBG,UALc;EAM9CC,IAAI,EAAER,KAAK,CAACI,aAAN,CAAoBI,IANoB;EAO9CC,OAAO,EAAET,KAAK,CAACI,aAAN,CAAoBK,OAPiB;EAQ9CC,SAAS,EAAEV,KAAK,CAACI,aAAN,CAAoBM;AARe,CAAxB,CAAxB;;AAWA,MAAMC,SAAS,GAAGnC,OAAO,CAACuB,eAAD,EAAkBD,kBAAlB,CAAzB;;AAMA,MAAMc,4BAA6C,GAAG,CAAC;EACrDnB,UADqD;EAErDQ,QAFqD;EAGrDI,KAHqD;EAIrDb,WAJqD;EAKrDW,KALqD;EAMrDG,UANqD;EAOrDC,UAPqD;EAQrDC,IARqD;EASrDjB,UATqD;EAUrDD,YAVqD;EAWrDmB,OAXqD;EAYrDC;AAZqD,CAAD,KAahD;EAAA;;EACJ,MAAMG,MAAM,GAAG/B,UAAU,CAACgC,SAAD,CAAzB;EAEAzC,SAAS,CAAC,MAAM;IACdoB,UAAU;EACX,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;EAIA,MAAMsB,gBAAgB,GAAGzC,OAAO,CAAC,MAAM6B,KAAK,CAACa,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,YAA1B,CAAP,EAAgD,CAACf,KAAD,CAAhD,CAAhC;EAEA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEF,QAAhB;IAAA,uBACE,MAAC,IAAD,CAAM,QAAN;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,uBAAf;UAAA,wBACE,KAAC,WAAD;YACE,WAAW,EAAC,uCADd;YAEE,SAAS,EAAE,IAFb;YAGE,KAAK,EAAEI,KAHT;YAIE,QAAQ,EAAEb;UAJZ,EADF,eAOE,KAAC,gBAAD;YACE,OAAO,EAAE,CACP;cAAE2B,KAAK,EAAE,WAAT;cAAsBC,KAAK,EAAE;YAA7B,CADO,EAEP;cAAED,KAAK,EAAE,qBAAT;cAAgCC,KAAK,EAAE;YAAvC,CAFO,CADX;YAKE,QAAQ,EAAGA,KAAD,IAAW9B,YAAY,CAAC;cAAE+B,IAAI,EAAE,kBAAR;cAA4BD;YAA5B,CAAD,CALnC;YAME,KAAK,mBAAEX,OAAO,CAACa,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACF,IAAF,KAAW,kBAA/B,CAAF,kDAAE,cAAoDD,KAN7D;YAOE,SAAS,EAAEP,MAAM,CAACjB;UAPpB,EAPF,EAgBGF,YAAY,CAAC8B,GAAb,CAAiB,CAACC,eAAD,EAAkBC,KAAlB,kBAChB,KAAC,eAAD;YAA6B,OAAO,EAAEjB,OAAtC;YAA+C,QAAQ,EAAEnB,YAAzD;YAAuE,SAAS,EAAEuB,MAAM,CAACjB;UAAzF,GAAsB8B,KAAtB,CADD,CAhBH;QAAA,EADF,EAqBGxC,UAAU,CAACyC,aAAX,CAAyBtC,mBAAmB,CAACuC,WAA7C,iDACC,KAAC,UAAD;UAAY,IAAI,EAAC,oBAAjB;UAAsC,OAAO,EAAC,SAA9C;UAAA;QAAA,EADD,EArBH;MAAA,EADF,EA4BGlB,SAAS,8CACR,KAAC,UAAD,KADQ,iBAGR;QAAA,wBACE;UAAK,SAAS,EAAEvC,EAAE,CAAC0C,MAAM,CAACgB,KAAR,EAAe,kBAAf,CAAlB;UAAA,uBACE;YAAO,SAAS,EAAC,8CAAjB;YAAA,wBACE;cAAA,uBACE;gBAAA,sCACE,cADF,gCAEE;kBAAA;gBAAA,EAFF,gCAGE;kBAAA;gBAAA,EAHF,gCAIE;kBAAA;gBAAA,EAJF,gCAKE;kBAAA;gBAAA,EALF,GAMGd,gBAAgB,iBACf;kBAAA,4BACgB,GADhB,eAEE,KAAC,OAAD;oBACE,SAAS,EAAC,KADZ;oBAEE,OAAO,eACL;sBAAA,+HAEgC,GAFhC,eAGE;wBACE,SAAS,EAAEF,MAAM,CAACiB,IADpB;wBAEE,MAAM,EAAC,QAFT;wBAGE,GAAG,EAAC,qBAHN;wBAIE,IAAI,EACF,mGALJ;wBAAA;sBAAA,EAHF;oBAAA,EAHJ;oBAAA,yCAmBE,KAAC,IAAD;sBAAM,IAAI,EAAC;oBAAX,EAnBF;kBAAA,EAFF;gBAAA,EAPJ,+BAgCE;kBAAA,2CAEE,KAAC,OAAD;oBAAS,SAAS,EAAC,KAAnB;oBAAyB,OAAO,EAAC,wCAAjC;oBAAA,uBACE,KAAC,IAAD;sBAAM,IAAI,EAAC;oBAAX;kBADF,EAFF;gBAAA,EAhCF,gBAsCE;kBAAI,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAT;gBAAX,EAtCF;cAAA;YADF,EADF,eA2CE;cAAA,UACG5B,KAAK,CAACqB,GAAN,CAAWP,IAAD,iBACT,KAAC,YAAD;gBAAc,IAAI,EAAEA,IAApB;gBAA0B,gBAAgB,EAAEF;cAA5C,GAAmEE,IAAI,CAACe,EAAxE,CADD;YADH,EA3CF;UAAA;QADF,EADF,EAoDG1B,UAAU,iBAAI,KAAC,UAAD;UAAY,aAAa,EAAEC,UAA3B;UAAuC,WAAW,EAAEC,IAApD;UAA0D,UAAU,EAAEjB;QAAtE,EApDjB;MAAA,EA/BJ;IAAA;EADF,EADF;AA2FD,CAjHD;;AAmHA,MAAM0C,iBAAiB,GAAIZ,IAAD,IAAkB;EAC1C,OAAQ,eAAcA,IAAK,UAA3B;AACD,CAFD;;AASA,MAAMa,YAAY,gBAAG3D,IAAI,CAAC,CAAC;EAAE0C,IAAF;EAAQF;AAAR,CAAD,KAAmD;EAAA;;EAC3E,MAAMF,MAAM,GAAG/B,UAAU,CAACgC,SAAD,CAAzB;EACA,MAAMqB,OAAO,GAAI,oBAAmBlB,IAAI,CAACe,EAAG,EAA5C;EAEA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,6BAAd;MAAA,uBACE;QAAG,IAAI,EAAEG,OAAT;QAAkB,cAAa,eAAclB,IAAI,CAACI,IAAK,UAAvD;QAAA,uBACE;UAAK,SAAS,EAAC,sBAAf;UAAsC,GAAG,EAAEJ,IAAI,CAACmB,SAAhD;UAA2D,GAAG,EAAG,mBAAkBnB,IAAI,CAACI,IAAK;QAA7F;MADF;IADF,EADF,eAME;MAAI,SAAS,EAAC,sBAAd;MAAA,uBACE;QAAG,SAAS,EAAC,UAAb;QAAwB,IAAI,EAAEc,OAA9B;QAAuC,KAAK,EAAElB,IAAI,CAACoB,KAAnD;QAA0D,cAAYJ,iBAAiB,CAAChB,IAAI,CAACI,IAAN,CAAvF;QAAA,UACGJ,IAAI,CAACoB;MADR;IADF,EANF,eAWE;MAAI,SAAS,EAAC,sBAAd;MAAA,uBACE;QAAG,SAAS,EAAC,UAAb;QAAwB,IAAI,EAAEF,OAA9B;QAAuC,KAAK,EAAElB,IAAI,CAACqB,KAAnD;QAA0D,cAAYL,iBAAiB,CAAChB,IAAI,CAACI,IAAN,CAAvF;QAAA,UACGJ,IAAI,CAACqB;MADR;IADF,EAXF,eAgBE;MAAI,SAAS,EAAC,sBAAd;MAAA,uBACE;QAAG,SAAS,EAAC,UAAb;QAAwB,IAAI,EAAEH,OAA9B;QAAuC,KAAK,EAAElB,IAAI,CAACI,IAAnD;QAAyD,cAAYY,iBAAiB,CAAChB,IAAI,CAACI,IAAN,CAAtF;QAAA,UACGJ,IAAI,CAACI;MADR;IADF,EAhBF,eAsBE;MACE,SAAS,EAAER,MAAM,CAAC0B,GADpB;MAEE,KAAK,EACH,cAAAtB,IAAI,CAACuB,IAAL,kDAAWC,MAAX,GACK,wDAAuDxB,IAAI,CAACuB,IAAL,CAAUhB,GAAV,CAAekB,GAAD,IAASA,GAAG,CAACrB,IAA3B,EAAiCsB,IAAjC,CAAsC,GAAtC,CAA2C,EADvG,GAEIC,SALR;MAAA,wBAQE,KAAC,QAAD;QAAU,KAAK,EAAE3B,IAAI,CAACuB,IAAtB;QAA4B,IAAI,EAAE;MAAlC,EARF,EASGvB,IAAI,CAAC4B,OAAL,iBACC;QAAG,IAAI,EAAEV,OAAT;QAAkB,cAAYF,iBAAiB,CAAChB,IAAI,CAACI,IAAN,CAA/C;QAAA,+CACE,KAAC,OAAD;UAAS,SAAS,EAAC,KAAnB;UAAyB,OAAO,EAAC,eAAjC;UAAA,uBACE,KAAC,IAAD;YAAM,IAAI,EAAC;UAAX;QADF,EADF;MAAA,EAVJ;IAAA,EAtBF,EAuCGN,gBAAgB,iBACf;MAAI,SAAS,EAAE5C,EAAE,CAAC,SAAD,EAAY0C,MAAM,CAACiC,OAAnB,CAAjB;MAAA,uBACE;QAAG,SAAS,EAAC,UAAb;QAAwB,IAAI,EAAEX,OAA9B;QAAuC,KAAK,EAAElB,IAAI,CAACI,IAAnD;QAAyD,cAAYY,iBAAiB,CAAChB,IAAI,CAACI,IAAN,CAAtF;QAAA,UACGJ,IAAI,CAACC,YAAL,KAAsB,MAAtB,gBACC;UAAM,SAAS,EAAEL,MAAM,CAACkC,QAAxB;UAAA,2BACe,GADf,yCAEE,KAAC,OAAD;YAAS,SAAS,EAAC,KAAnB;YAAyB,OAAO,EAAC,0DAAjC;YAAA,uBACE,KAAC,IAAD;cAAM,IAAI,EAAC;YAAX;UADF,EAFF;QAAA,EADD,GAQC9B,IAAI,CAACC;MATT;IADF,EAxCJ,eAuDE;MAAI,SAAS,EAAC,SAAd;MAAA,UACGD,IAAI,CAAC+B,aAAL,iBACC;QACE,IAAI,EAAEb,OADR;QAEE,cAAa,gBAAelB,IAAI,CAAC+B,aAAc,2BAA0B/B,IAAI,CAACI,IAAK,WAFrF;QAAA,UAIGJ,IAAI,CAAC+B,aAAL,KAAuB,UAAvB,gBAAoC;UAAM,SAAS,EAAEnC,MAAM,CAACkC,QAAxB;UAAA;QAAA,EAApC,GAAqF9B,IAAI,CAAC+B;MAJ7F;IAFJ,EAvDF,eAiEE;MAAI,SAAS,EAAC,YAAd;MAAA,UACGC,KAAK,CAACC,OAAN,CAAcjC,IAAI,CAACkC,UAAnB,KAAkClC,IAAI,CAACkC,UAAL,CAAgBV,MAAhB,GAAyB,CAA3D,iBACC,KAAC,QAAD;QAAU,KAAK,EAAExB,IAAI,CAACkC,UAAL,CAAgB,CAAhB,CAAjB;QAAqC,UAAU,EAAE,KAAjD;QAAwD,KAAK,EAAE;MAA/D;IAFJ,EAjEF,eAsEE;MAAI,SAAS,EAAC,YAAd;MAAA,UACGlC,IAAI,CAACmC,UAAL,oCAAmB;QAAM,SAAS,EAAC,iCAAhB;QAAA;MAAA,EAAnB;IADH,EAtEF;EAAA,GAASnC,IAAI,CAACe,EAAd,CADF;AA4ED,CAhFwB,CAAzB;AAkFAE,YAAY,CAACmB,WAAb,GAA2B,cAA3B;;AAIA,MAAMC,QAAQ,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAAmC;EAClD,MAAM3C,MAAM,GAAG/B,UAAU,CAACgC,SAAD,CAAzB;;EAEA,IAAI,EAACyC,KAAD,aAACA,KAAD,eAACA,KAAK,CAAEd,MAAR,CAAJ,EAAoB;IAClB,OAAO,IAAP;EACD;;EAED,OAAOc,KAAK,CAACd,MAAN,GAAe,CAAf,gBACL,KAAC,OAAD;IACE,SAAS,EAAE,KADb;IAEE,OAAO,eACL;MAAK,SAAS,EAAE5B,MAAM,CAAC4C,WAAvB;MAAA,UACGF,KADH,aACGA,KADH,uBACGA,KAAK,CAAE/B,GAAP,CAAYkC,IAAD,iBACV;QACE,IAAI,EAAEA,IAAI,CAACC,GADb;QAEE,SAAS,EAAE9C,MAAM,CAACiB,IAFpB;QAGE,KAAK,EAAE4B,IAAI,CAACrC,IAHd;QAKE,cAAa,QAAOqC,IAAI,CAACrC,IAAK,EALhC;QAAA,UAOGqC,IAAI,CAACrC;MAPR,GAIOqC,IAAI,CAACrC,IAJZ,CADD;IADH,EAHJ;IAAA,uBAkBE;MAAK,SAAS,EAAER,MAAM,CAAC+C,QAAvB;MAAA,wBACE,KAAC,IAAD;QAAM,IAAI,EAAEJ;MAAZ,EADF,oBACuB;QAAA,UAAOD,KAAK,CAACd;MAAb,EADvB;IAAA;EAlBF,EADK,gBAwBL;IACE,IAAI,EAAEc,KAAK,CAAC,CAAD,CAAL,CAASI,GADjB;IAEE,SAAS,EAAE9C,MAAM,CAAC+C,QAFpB;IAGE,KAAK,EAAEL,KAAK,CAAC,CAAD,CAAL,CAASlC,IAHlB;IAKE,cAAa,QAAOkC,KAAK,CAAC,CAAD,CAAL,CAASlC,IAAK,EALpC;IAAA,wBAOE,KAAC,IAAD;MAAM,IAAI,EAAEmC;IAAZ,EAPF,OAOwBD,KAAK,CAAC,CAAD,CAAL,CAASlC,IAPjC;EAAA,GAIOkC,KAAK,CAAC,CAAD,CAAL,CAASlC,IAJhB,CAxBF;AAkCD,CAzCD;;AA2CA,MAAMP,SAAS,GAAI+C,KAAD,IAA0B;EAC1C,OAAO;IACLhC,KAAK,EAAE3D,GAAI;AACf,oBAAoB2F,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACrC,KAHS;IAILlE,MAAM,EAAE1B,GAAI;AAChB,kBAAkB2F,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACnC,KANS;IAOLhB,OAAO,EAAE5E,GAAI;AACjB;AACA,uBAAuB2F,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AAC1C;AACA,KAXS;IAYLvB,GAAG,EAAErE,GAAI;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB2F,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACtC;AACA,KApBS;IAqBLL,WAAW,EAAEvF,GAAI;AACrB;AACA;AACA,KAxBS;IAyBL0F,QAAQ,EAAE1F,GAAI;AAClB;AACA,iBAAiB2F,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACpC,sBAAsBD,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACvC,KA7BS;IA8BLf,QAAQ,EAAE7E,GAAI;AAClB,eAAe2F,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBjB,QAAS;AAC1C,KAhCS;IAiCLjB,IAAI,EAAE5D,GAAI;AACd;AACA;AACA;AACA;EArCS,CAAP;AAuCD,CAxCD;;AA0CA,eAAeyC,SAAS,CAACC,4BAAD,CAAxB"},"metadata":{},"sourceType":"module"}