{"ast":null,"code":"var _span, _span2;\n\nimport { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React from 'react';\nimport { getTimeZoneInfo } from '@grafana/data';\nimport { useTheme2 } from '../../../themes/ThemeContext';\nimport { stylesFactory } from '../../../themes/stylesFactory';\nimport { Icon } from '../../Icon/Icon';\nimport { TimeZoneDescription } from './TimeZoneDescription';\nimport { TimeZoneOffset } from './TimeZoneOffset';\nimport { TimeZoneTitle } from './TimeZoneTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst offsetClassName = 'tz-utc-offset';\nexport const WideTimeZoneOption = (props, ref) => {\n  const {\n    children,\n    innerProps,\n    data,\n    isSelected,\n    isFocused\n  } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    className: containerStyles\n  }, innerProps, {\n    \"aria-label\": \"Select option\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.leftColumn, styles.row),\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: cx(styles.leftColumn, styles.wideRow),\n        children: [/*#__PURE__*/_jsx(TimeZoneTitle, {\n          title: children\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.spacer\n        }), /*#__PURE__*/_jsx(TimeZoneDescription, {\n          info: timeZoneInfo\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.rightColumn,\n        children: [/*#__PURE__*/_jsx(TimeZoneOffset\n        /* Use the timeZoneInfo to pass the correct timeZone name,\n           as 'Default' has value '' which defaults to browser timezone */\n        , {\n          timeZone: (timeZoneInfo === null || timeZoneInfo === void 0 ? void 0 : timeZoneInfo.ianaName) || data.value,\n          timestamp: timestamp,\n          className: offsetClassName\n        }), isSelected && (_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          children: /*#__PURE__*/_jsx(Icon, {\n            name: \"check\"\n          })\n        })))]\n      })]\n    })\n  }));\n};\nexport const CompactTimeZoneOption = (props, ref) => {\n  const {\n    children,\n    innerProps,\n    data,\n    isSelected,\n    isFocused\n  } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    className: containerStyles\n  }, innerProps, {\n    \"aria-label\": \"Select option\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.leftColumn,\n          children: /*#__PURE__*/_jsx(TimeZoneTitle, {\n            title: children\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.rightColumn,\n          children: isSelected && (_span2 || (_span2 = /*#__PURE__*/_jsx(\"span\", {\n            children: /*#__PURE__*/_jsx(Icon, {\n              name: \"check\"\n            })\n          })))\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.leftColumn,\n          children: /*#__PURE__*/_jsx(TimeZoneDescription, {\n            info: timeZoneInfo\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.rightColumn,\n          children: /*#__PURE__*/_jsx(TimeZoneOffset, {\n            timestamp: timestamp\n            /* Use the timeZoneInfo to pass the correct timeZone name,\n               as 'Default' has value '' which defaults to browser timezone */\n            ,\n            timeZone: (timeZoneInfo === null || timeZoneInfo === void 0 ? void 0 : timeZoneInfo.ianaName) || data.value,\n            className: offsetClassName\n          })\n        })]\n      })]\n    })\n  }));\n};\nconst getStyles = stylesFactory(theme => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      flex-shrink: 0;\n      white-space: nowrap;\n      cursor: pointer;\n      padding: 6px 8px 4px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n      }\n    `,\n    containerFocused: css`\n      background: ${theme.colors.action.hover};\n    `,\n    body: css`\n      display: flex;\n      font-weight: ${theme.typography.fontWeightMedium};\n      flex-direction: column;\n      flex-grow: 1;\n    `,\n    row: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    leftColumn: css`\n      flex-grow: 1;\n      text-overflow: ellipsis;\n    `,\n    rightColumn: css`\n      justify-content: flex-end;\n      align-items: center;\n    `,\n    wideRow: css`\n      display: flex;\n      flex-direction: row;\n      align-items: baseline;\n    `,\n    spacer: css`\n      margin-left: 6px;\n    `\n  };\n});","map":{"version":3,"names":["css","cx","isString","React","getTimeZoneInfo","useTheme2","stylesFactory","Icon","TimeZoneDescription","TimeZoneOffset","TimeZoneTitle","offsetClassName","WideTimeZoneOption","props","ref","children","innerProps","data","isSelected","isFocused","theme","styles","getStyles","timestamp","Date","now","containerStyles","container","containerFocused","value","timeZoneInfo","leftColumn","row","wideRow","spacer","rightColumn","ianaName","CompactTimeZoneOption","body","colors","action","hover","typography","fontWeightMedium"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeZonePicker/TimeZoneOption.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React, { PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2, SelectableValue, getTimeZoneInfo } from '@grafana/data';\n\nimport { useTheme2 } from '../../../themes/ThemeContext';\nimport { stylesFactory } from '../../../themes/stylesFactory';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimeZoneDescription } from './TimeZoneDescription';\nimport { TimeZoneOffset } from './TimeZoneOffset';\nimport { TimeZoneTitle } from './TimeZoneTitle';\n\ninterface Props {\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: any;\n  data: SelectableZone;\n}\n\nconst offsetClassName = 'tz-utc-offset';\n\nexport interface SelectableZone extends SelectableValue<string> {\n  searchIndex: string;\n}\n\nexport const WideTimeZoneOption: React.FC<PropsWithChildren<Props>> = (props, ref) => {\n  const { children, innerProps, data, isSelected, isFocused } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n\n  return (\n    <div className={containerStyles} {...innerProps} aria-label=\"Select option\">\n      <div className={cx(styles.leftColumn, styles.row)}>\n        <div className={cx(styles.leftColumn, styles.wideRow)}>\n          <TimeZoneTitle title={children} />\n          <div className={styles.spacer} />\n          <TimeZoneDescription info={timeZoneInfo} />\n        </div>\n        <div className={styles.rightColumn}>\n          <TimeZoneOffset\n            /* Use the timeZoneInfo to pass the correct timeZone name,\n               as 'Default' has value '' which defaults to browser timezone */\n            timeZone={timeZoneInfo?.ianaName || data.value}\n            timestamp={timestamp}\n            className={offsetClassName}\n          />\n          {isSelected && (\n            <span>\n              <Icon name=\"check\" />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const CompactTimeZoneOption: React.FC<PropsWithChildren<Props>> = (props, ref) => {\n  const { children, innerProps, data, isSelected, isFocused } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n\n  return (\n    <div className={containerStyles} {...innerProps} aria-label=\"Select option\">\n      <div className={styles.body}>\n        <div className={styles.row}>\n          <div className={styles.leftColumn}>\n            <TimeZoneTitle title={children} />\n          </div>\n          <div className={styles.rightColumn}>\n            {isSelected && (\n              <span>\n                <Icon name=\"check\" />\n              </span>\n            )}\n          </div>\n        </div>\n        <div className={styles.row}>\n          <div className={styles.leftColumn}>\n            <TimeZoneDescription info={timeZoneInfo} />\n          </div>\n          <div className={styles.rightColumn}>\n            <TimeZoneOffset\n              timestamp={timestamp}\n              /* Use the timeZoneInfo to pass the correct timeZone name,\n                 as 'Default' has value '' which defaults to browser timezone */\n              timeZone={timeZoneInfo?.ianaName || data.value}\n              className={offsetClassName}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      flex-shrink: 0;\n      white-space: nowrap;\n      cursor: pointer;\n      padding: 6px 8px 4px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n      }\n    `,\n    containerFocused: css`\n      background: ${theme.colors.action.hover};\n    `,\n    body: css`\n      display: flex;\n      font-weight: ${theme.typography.fontWeightMedium};\n      flex-direction: column;\n      flex-grow: 1;\n    `,\n    row: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    leftColumn: css`\n      flex-grow: 1;\n      text-overflow: ellipsis;\n    `,\n    rightColumn: css`\n      justify-content: flex-end;\n      align-items: center;\n    `,\n    wideRow: css`\n      display: flex;\n      flex-direction: row;\n      align-items: baseline;\n    `,\n    spacer: css`\n      margin-left: 6px;\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}