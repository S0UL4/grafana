{"ast":null,"code":"export let OrgRole;\n\n(function (OrgRole) {\n  OrgRole[\"Viewer\"] = \"Viewer\";\n  OrgRole[\"Editor\"] = \"Editor\";\n  OrgRole[\"Admin\"] = \"Admin\";\n})(OrgRole || (OrgRole = {}));\n\nexport let PermissionLevel;\n\n(function (PermissionLevel) {\n  PermissionLevel[PermissionLevel[\"View\"] = 1] = \"View\";\n  PermissionLevel[PermissionLevel[\"Edit\"] = 2] = \"Edit\";\n  PermissionLevel[PermissionLevel[\"Admin\"] = 4] = \"Admin\";\n})(PermissionLevel || (PermissionLevel = {}));\n\nexport let PermissionLevelString;\n\n(function (PermissionLevelString) {\n  PermissionLevelString[\"View\"] = \"View\";\n  PermissionLevelString[\"Edit\"] = \"Edit\";\n  PermissionLevelString[\"Admin\"] = \"Admin\";\n})(PermissionLevelString || (PermissionLevelString = {}));\n\nexport let DataSourcePermissionLevel;\n\n(function (DataSourcePermissionLevel) {\n  DataSourcePermissionLevel[DataSourcePermissionLevel[\"Query\"] = 1] = \"Query\";\n  DataSourcePermissionLevel[DataSourcePermissionLevel[\"Admin\"] = 2] = \"Admin\";\n})(DataSourcePermissionLevel || (DataSourcePermissionLevel = {}));\n\nexport let AclTarget;\n\n(function (AclTarget) {\n  AclTarget[\"Team\"] = \"Team\";\n  AclTarget[\"User\"] = \"User\";\n  AclTarget[\"Viewer\"] = \"Viewer\";\n  AclTarget[\"Editor\"] = \"Editor\";\n})(AclTarget || (AclTarget = {}));\n\nexport const dataSourceAclLevels = [{\n  value: DataSourcePermissionLevel.Query,\n  label: 'Query',\n  description: 'Can query data source.'\n}];\nexport const dashboardAclTargets = [{\n  value: AclTarget.Team,\n  label: 'Team'\n}, {\n  value: AclTarget.User,\n  label: 'User'\n}, {\n  value: AclTarget.Viewer,\n  label: 'Everyone With Viewer Role'\n}, {\n  value: AclTarget.Editor,\n  label: 'Everyone With Editor Role'\n}];\nexport const dashboardPermissionLevels = [{\n  value: PermissionLevel.View,\n  label: PermissionLevelString.View,\n  description: 'Can view dashboards.'\n}, {\n  value: PermissionLevel.Edit,\n  label: PermissionLevelString.Edit,\n  description: 'Can add, edit and delete dashboards.'\n}, {\n  value: PermissionLevel.Admin,\n  label: 'Admin',\n  description: 'Can add/remove permissions and can add, edit and delete dashboards.'\n}];\nexport let TeamPermissionLevel;\n\n(function (TeamPermissionLevel) {\n  TeamPermissionLevel[TeamPermissionLevel[\"Member\"] = 0] = \"Member\";\n  TeamPermissionLevel[TeamPermissionLevel[\"Admin\"] = 4] = \"Admin\";\n})(TeamPermissionLevel || (TeamPermissionLevel = {}));\n\nexport const teamsPermissionLevels = [{\n  value: TeamPermissionLevel.Member,\n  label: 'Member',\n  description: 'Is team member'\n}, {\n  value: TeamPermissionLevel.Admin,\n  label: 'Admin',\n  description: 'Can add/remove permissions, members and delete team.'\n}];","map":{"version":3,"names":["OrgRole","PermissionLevel","PermissionLevelString","DataSourcePermissionLevel","AclTarget","dataSourceAclLevels","value","Query","label","description","dashboardAclTargets","Team","User","Viewer","Editor","dashboardPermissionLevels","View","Edit","Admin","TeamPermissionLevel","teamsPermissionLevels","Member"],"sources":["/home/soula/grafana/public/app/types/acl.ts"],"sourcesContent":["export enum OrgRole {\n  Viewer = 'Viewer',\n  Editor = 'Editor',\n  Admin = 'Admin',\n}\n\nexport interface DashboardAclDTO {\n  id?: number;\n  dashboardId?: number;\n  userId?: number;\n  userLogin?: string;\n  userEmail?: string;\n  teamId?: number;\n  team?: string;\n  permission?: PermissionLevel;\n  role?: OrgRole;\n  icon?: string;\n  inherited?: boolean;\n}\n\nexport interface DashboardAclUpdateDTO {\n  userId?: number;\n  teamId?: number;\n  role?: OrgRole;\n  permission?: PermissionLevel;\n}\n\nexport interface DashboardAcl {\n  id?: number;\n  dashboardId?: number;\n  userId?: number;\n  userLogin?: string;\n  userEmail?: string;\n  teamId?: number;\n  team?: string;\n  permission?: PermissionLevel;\n  role?: OrgRole;\n  icon?: string;\n  name?: string;\n  inherited?: boolean;\n  sortRank?: number;\n  userAvatarUrl?: string;\n  teamAvatarUrl?: string;\n}\n\nexport interface DashboardPermissionInfo {\n  value: PermissionLevel;\n  label: string;\n  description: string;\n}\n\nexport interface NewDashboardAclItem {\n  teamId: number;\n  userId: number;\n  role?: OrgRole;\n  permission: PermissionLevel;\n  type: AclTarget;\n}\n\nexport enum PermissionLevel {\n  View = 1,\n  Edit = 2,\n  Admin = 4,\n}\n\nexport enum PermissionLevelString {\n  View = 'View',\n  Edit = 'Edit',\n  Admin = 'Admin',\n}\n\nexport enum DataSourcePermissionLevel {\n  Query = 1,\n  Admin = 2,\n}\n\nexport enum AclTarget {\n  Team = 'Team',\n  User = 'User',\n  Viewer = 'Viewer',\n  Editor = 'Editor',\n}\n\nexport interface AclTargetInfo {\n  value: AclTarget;\n  label: string;\n}\n\nexport const dataSourceAclLevels = [\n  { value: DataSourcePermissionLevel.Query, label: 'Query', description: 'Can query data source.' },\n];\n\nexport const dashboardAclTargets: AclTargetInfo[] = [\n  { value: AclTarget.Team, label: 'Team' },\n  { value: AclTarget.User, label: 'User' },\n  { value: AclTarget.Viewer, label: 'Everyone With Viewer Role' },\n  { value: AclTarget.Editor, label: 'Everyone With Editor Role' },\n];\n\nexport const dashboardPermissionLevels: DashboardPermissionInfo[] = [\n  { value: PermissionLevel.View, label: PermissionLevelString.View, description: 'Can view dashboards.' },\n  {\n    value: PermissionLevel.Edit,\n    label: PermissionLevelString.Edit,\n    description: 'Can add, edit and delete dashboards.',\n  },\n  {\n    value: PermissionLevel.Admin,\n    label: 'Admin',\n    description: 'Can add/remove permissions and can add, edit and delete dashboards.',\n  },\n];\n\nexport enum TeamPermissionLevel {\n  Member = 0,\n  Admin = 4,\n}\n\nexport interface TeamPermissionInfo {\n  value: TeamPermissionLevel;\n  label: string;\n  description: string;\n}\n\nexport const teamsPermissionLevels: TeamPermissionInfo[] = [\n  { value: TeamPermissionLevel.Member, label: 'Member', description: 'Is team member' },\n  {\n    value: TeamPermissionLevel.Admin,\n    label: 'Admin',\n    description: 'Can add/remove permissions, members and delete team.',\n  },\n];\n"],"mappings":"AAAA,WAAYA,OAAZ;;WAAYA,O;EAAAA,O;EAAAA,O;EAAAA,O;GAAAA,O,KAAAA,O;;AA2DZ,WAAYC,eAAZ;;WAAYA,e;EAAAA,e,CAAAA,e;EAAAA,e,CAAAA,e;EAAAA,e,CAAAA,e;GAAAA,e,KAAAA,e;;AAMZ,WAAYC,qBAAZ;;WAAYA,qB;EAAAA,qB;EAAAA,qB;EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAMZ,WAAYC,yBAAZ;;WAAYA,yB;EAAAA,yB,CAAAA,yB;EAAAA,yB,CAAAA,yB;GAAAA,yB,KAAAA,yB;;AAKZ,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAYZ,OAAO,MAAMC,mBAAmB,GAAG,CACjC;EAAEC,KAAK,EAAEH,yBAAyB,CAACI,KAAnC;EAA0CC,KAAK,EAAE,OAAjD;EAA0DC,WAAW,EAAE;AAAvE,CADiC,CAA5B;AAIP,OAAO,MAAMC,mBAAoC,GAAG,CAClD;EAAEJ,KAAK,EAAEF,SAAS,CAACO,IAAnB;EAAyBH,KAAK,EAAE;AAAhC,CADkD,EAElD;EAAEF,KAAK,EAAEF,SAAS,CAACQ,IAAnB;EAAyBJ,KAAK,EAAE;AAAhC,CAFkD,EAGlD;EAAEF,KAAK,EAAEF,SAAS,CAACS,MAAnB;EAA2BL,KAAK,EAAE;AAAlC,CAHkD,EAIlD;EAAEF,KAAK,EAAEF,SAAS,CAACU,MAAnB;EAA2BN,KAAK,EAAE;AAAlC,CAJkD,CAA7C;AAOP,OAAO,MAAMO,yBAAoD,GAAG,CAClE;EAAET,KAAK,EAAEL,eAAe,CAACe,IAAzB;EAA+BR,KAAK,EAAEN,qBAAqB,CAACc,IAA5D;EAAkEP,WAAW,EAAE;AAA/E,CADkE,EAElE;EACEH,KAAK,EAAEL,eAAe,CAACgB,IADzB;EAEET,KAAK,EAAEN,qBAAqB,CAACe,IAF/B;EAGER,WAAW,EAAE;AAHf,CAFkE,EAOlE;EACEH,KAAK,EAAEL,eAAe,CAACiB,KADzB;EAEEV,KAAK,EAAE,OAFT;EAGEC,WAAW,EAAE;AAHf,CAPkE,CAA7D;AAcP,WAAYU,mBAAZ;;WAAYA,mB;EAAAA,mB,CAAAA,mB;EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB;;AAWZ,OAAO,MAAMC,qBAA2C,GAAG,CACzD;EAAEd,KAAK,EAAEa,mBAAmB,CAACE,MAA7B;EAAqCb,KAAK,EAAE,QAA5C;EAAsDC,WAAW,EAAE;AAAnE,CADyD,EAEzD;EACEH,KAAK,EAAEa,mBAAmB,CAACD,KAD7B;EAEEV,KAAK,EAAE,OAFT;EAGEC,WAAW,EAAE;AAHf,CAFyD,CAApD"},"metadata":{},"sourceType":"module"}