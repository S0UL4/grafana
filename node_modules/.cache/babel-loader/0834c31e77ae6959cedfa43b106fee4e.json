{"ast":null,"code":"const _excluded = [\"reverseMenuDirection\", \"adjustHeightForBorder\", \"disabledKeys\", \"onNavigate\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport { useMenu } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { useTreeState } from '@react-stately/tree';\nimport React, { useEffect, useRef } from 'react';\nimport { NavMenuItemType } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\nimport { NavBarItemMenuItem } from './NavBarItemMenuItem';\nimport { NavBarScrollContainer } from './NavBarScrollContainer';\nimport { useNavBarItemMenuContext } from './context';\nimport { getNavModelItemKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function NavBarItemMenu(props) {\n  const {\n    reverseMenuDirection,\n    disabledKeys,\n    onNavigate\n  } = props,\n        rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const contextProps = useNavBarItemMenuContext();\n  const completeProps = Object.assign({}, mergeProps(contextProps, rest));\n  const {\n    menuHasFocus,\n    menuProps: contextMenuProps = {}\n  } = contextProps;\n  const theme = useTheme2();\n  const styles = getStyles(theme, reverseMenuDirection);\n  const state = useTreeState(Object.assign({}, rest, {\n    disabledKeys\n  }));\n  const ref = useRef(null);\n  const {\n    menuProps\n  } = useMenu(completeProps, Object.assign({}, state), ref);\n  const allItems = [...state.collection];\n  const items = allItems.filter(item => item.value.menuItemType === NavMenuItemType.Item);\n  const section = allItems.find(item => item.value.menuItemType === NavMenuItemType.Section);\n  useEffect(() => {\n    if (menuHasFocus && !state.selectionManager.isFocused) {\n      var _section$key;\n\n      state.selectionManager.setFocusedKey((_section$key = section === null || section === void 0 ? void 0 : section.key) !== null && _section$key !== void 0 ? _section$key : '');\n      state.selectionManager.setFocused(true);\n    } else if (!menuHasFocus) {\n      state.selectionManager.setFocused(false);\n      state.selectionManager.setFocusedKey('');\n      state.selectionManager.clearSelection();\n    }\n  }, [menuHasFocus, state.selectionManager, reverseMenuDirection, section === null || section === void 0 ? void 0 : section.key]);\n\n  if (!section) {\n    return null;\n  }\n\n  const menuSubTitle = section.value.subTitle;\n\n  const headerComponent = /*#__PURE__*/_jsx(NavBarItemMenuItem, {\n    item: section,\n    state: state,\n    onNavigate: onNavigate\n  }, section.key);\n\n  const itemComponents = items.map(item => /*#__PURE__*/_jsx(NavBarItemMenuItem, {\n    item: item,\n    state: state,\n    onNavigate: onNavigate\n  }, getNavModelItemKey(item.value)));\n\n  const subTitleComponent = menuSubTitle && /*#__PURE__*/_jsx(\"li\", {\n    className: styles.subtitle,\n    children: menuSubTitle\n  }, menuSubTitle);\n\n  const contents = [itemComponents, subTitleComponent];\n\n  const contentComponent = /*#__PURE__*/_jsx(NavBarScrollContainer, {\n    children: reverseMenuDirection ? contents.reverse() : contents\n  }, \"scrollContainer\");\n\n  const menu = [headerComponent, contentComponent];\n  return /*#__PURE__*/_jsx(\"ul\", Object.assign({\n    className: styles.menu,\n    ref: ref\n  }, mergeProps(menuProps, contextMenuProps), {\n    tabIndex: menuHasFocus ? 0 : -1,\n    children: reverseMenuDirection ? menu.reverse() : menu\n  }));\n}\n\nfunction getStyles(theme, reverseDirection) {\n  return {\n    menu: css`\n      background-color: ${theme.colors.background.primary};\n      border: 1px solid ${theme.components.panel.borderColor};\n      box-shadow: ${theme.shadows.z3};\n      display: flex;\n      flex-direction: column;\n      list-style: none;\n      max-height: 400px;\n      max-width: 300px;\n      min-width: 140px;\n      transition: ${theme.transitions.create('opacity')};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    subtitle: css`\n      background-color: transparent;\n      border-${reverseDirection ? 'bottom' : 'top'}: 1px solid ${theme.colors.border.weak};\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.bodySmall.fontWeight};\n      padding: ${theme.spacing(1)} ${theme.spacing(2)} ${theme.spacing(1)};\n      text-align: left;\n      white-space: nowrap;\n    `\n  };\n}","map":{"version":3,"names":["css","useMenu","mergeProps","useTreeState","React","useEffect","useRef","NavMenuItemType","useTheme2","NavBarItemMenuItem","NavBarScrollContainer","useNavBarItemMenuContext","getNavModelItemKey","NavBarItemMenu","props","reverseMenuDirection","disabledKeys","onNavigate","rest","contextProps","completeProps","menuHasFocus","menuProps","contextMenuProps","theme","styles","getStyles","state","ref","allItems","collection","items","filter","item","value","menuItemType","Item","section","find","Section","selectionManager","isFocused","setFocusedKey","key","setFocused","clearSelection","menuSubTitle","subTitle","headerComponent","itemComponents","map","subTitleComponent","subtitle","contents","contentComponent","reverse","menu","reverseDirection","colors","background","primary","components","panel","borderColor","shadows","z3","transitions","create","zIndex","sidemenu","border","weak","text","secondary","typography","bodySmall","fontSize","fontWeight","spacing"],"sources":["/home/soula/grafana/public/app/core/components/NavBar/NavBarItemMenu.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useMenu } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { useTreeState } from '@react-stately/tree';\nimport { SpectrumMenuProps } from '@react-types/menu';\nimport React, { ReactElement, useEffect, useRef } from 'react';\n\nimport { GrafanaTheme2, NavMenuItemType, NavModelItem } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nimport { NavBarItemMenuItem } from './NavBarItemMenuItem';\nimport { NavBarScrollContainer } from './NavBarScrollContainer';\nimport { useNavBarItemMenuContext } from './context';\nimport { getNavModelItemKey } from './utils';\n\nexport interface NavBarItemMenuProps extends SpectrumMenuProps<NavModelItem> {\n  onNavigate: (item: NavModelItem) => void;\n  adjustHeightForBorder: boolean;\n  reverseMenuDirection?: boolean;\n}\n\nexport function NavBarItemMenu(props: NavBarItemMenuProps): ReactElement | null {\n  const { reverseMenuDirection, adjustHeightForBorder, disabledKeys, onNavigate, ...rest } = props;\n  const contextProps = useNavBarItemMenuContext();\n  const completeProps = {\n    ...mergeProps(contextProps, rest),\n  };\n  const { menuHasFocus, menuProps: contextMenuProps = {} } = contextProps;\n  const theme = useTheme2();\n  const styles = getStyles(theme, reverseMenuDirection);\n  const state = useTreeState<NavModelItem>({ ...rest, disabledKeys });\n  const ref = useRef(null);\n  const { menuProps } = useMenu(completeProps, { ...state }, ref);\n  const allItems = [...state.collection];\n  const items = allItems.filter((item) => item.value.menuItemType === NavMenuItemType.Item);\n  const section = allItems.find((item) => item.value.menuItemType === NavMenuItemType.Section);\n\n  useEffect(() => {\n    if (menuHasFocus && !state.selectionManager.isFocused) {\n      state.selectionManager.setFocusedKey(section?.key ?? '');\n      state.selectionManager.setFocused(true);\n    } else if (!menuHasFocus) {\n      state.selectionManager.setFocused(false);\n      state.selectionManager.setFocusedKey('');\n      state.selectionManager.clearSelection();\n    }\n  }, [menuHasFocus, state.selectionManager, reverseMenuDirection, section?.key]);\n\n  if (!section) {\n    return null;\n  }\n\n  const menuSubTitle = section.value.subTitle;\n\n  const headerComponent = <NavBarItemMenuItem key={section.key} item={section} state={state} onNavigate={onNavigate} />;\n\n  const itemComponents = items.map((item) => (\n    <NavBarItemMenuItem key={getNavModelItemKey(item.value)} item={item} state={state} onNavigate={onNavigate} />\n  ));\n\n  const subTitleComponent = menuSubTitle && (\n    <li key={menuSubTitle} className={styles.subtitle}>\n      {menuSubTitle}\n    </li>\n  );\n\n  const contents = [itemComponents, subTitleComponent];\n  const contentComponent = (\n    <NavBarScrollContainer key=\"scrollContainer\">\n      {reverseMenuDirection ? contents.reverse() : contents}\n    </NavBarScrollContainer>\n  );\n\n  const menu = [headerComponent, contentComponent];\n\n  return (\n    <ul className={styles.menu} ref={ref} {...mergeProps(menuProps, contextMenuProps)} tabIndex={menuHasFocus ? 0 : -1}>\n      {reverseMenuDirection ? menu.reverse() : menu}\n    </ul>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2, reverseDirection?: boolean) {\n  return {\n    menu: css`\n      background-color: ${theme.colors.background.primary};\n      border: 1px solid ${theme.components.panel.borderColor};\n      box-shadow: ${theme.shadows.z3};\n      display: flex;\n      flex-direction: column;\n      list-style: none;\n      max-height: 400px;\n      max-width: 300px;\n      min-width: 140px;\n      transition: ${theme.transitions.create('opacity')};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    subtitle: css`\n      background-color: transparent;\n      border-${reverseDirection ? 'bottom' : 'top'}: 1px solid ${theme.colors.border.weak};\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.bodySmall.fontWeight};\n      padding: ${theme.spacing(1)} ${theme.spacing(2)} ${theme.spacing(1)};\n      text-align: left;\n      white-space: nowrap;\n    `,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}