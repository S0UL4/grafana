{"ast":null,"code":"SeriesOverridesCtrl.$inject = [\"$scope\", \"$element\", \"popoverSrv\"];\nimport { map, each, isUndefined } from 'lodash';\nimport { textUtil } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\n/** @ngInject */\n\nexport function SeriesOverridesCtrl($scope, $element, popoverSrv) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name, propertyName, values) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: map(values, value => {\n        return {\n          text: String(value),\n          value: value\n        };\n      })\n    };\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item, subItem) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value; // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({\n        alias: subItem.value,\n        lines: false\n      });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = color => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render(); // update picker model so that the picker UI will also update\n\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = color => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: {\n        color\n      }\n    };\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      }\n    });\n  };\n\n  $scope.removeOverride = option => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return map($scope.ctrl.seriesList, series => {\n      return textUtil.escapeHtml(series.alias);\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    each($scope.overrideMenu, option => {\n      const value = $scope.override[option.propertyName];\n\n      if (isUndefined(value)) {\n        return;\n      }\n\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value)\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Fill gradient', 'fillGradient', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Hidden Series', 'hiddenSeries', [true, false]);\n  $scope.addOverrideOption('Dash Length', 'dashLength', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);\n  $scope.addOverrideOption('Dash Space', 'spaceLength', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\ncoreModule.controller('SeriesOverridesCtrl', SeriesOverridesCtrl);","map":{"version":3,"names":["map","each","isUndefined","textUtil","coreModule","SeriesOverridesCtrl","$scope","$element","popoverSrv","overrideMenu","currentOverrides","override","colorPickerModel","addOverrideOption","name","propertyName","values","option","text","index","length","submenu","value","String","push","setOverride","item","subItem","openColorSelector","ctrl","addSeriesOverride","alias","lines","updateCurrentOverrides","render","colorSelected","color","series","autoClose","show","element","find","position","openOn","template","classNames","model","onClose","removeOverride","refresh","getSeriesNames","seriesList","escapeHtml","controller"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/series_overrides_ctrl.ts"],"sourcesContent":["import { map, each, isUndefined } from 'lodash';\n\nimport { textUtil } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\n\n/** @ngInject */\nexport function SeriesOverridesCtrl($scope: any, $element: JQuery, popoverSrv: any) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name: string, propertyName: string, values: any) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: map(values, (value) => {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item: { propertyName: string }, subItem: { value: any }) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = (color: any) => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n\n    // update picker model so that the picker UI will also update\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = (color: any) => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: { color },\n    };\n\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = (option: { propertyName: string | number }) => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return map($scope.ctrl.seriesList, (series) => {\n      return textUtil.escapeHtml(series.alias);\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    each($scope.overrideMenu, (option) => {\n      const value = $scope.override[option.propertyName];\n      if (isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Fill gradient', 'fillGradient', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Hidden Series', 'hiddenSeries', [true, false]);\n  $scope.addOverrideOption(\n    'Dash Length',\n    'dashLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption(\n    'Dash Space',\n    'spaceLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n\ncoreModule.controller('SeriesOverridesCtrl', SeriesOverridesCtrl);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}