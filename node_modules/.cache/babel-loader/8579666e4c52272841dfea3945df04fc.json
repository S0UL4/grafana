{"ast":null,"code":"function getColors(theme) {\n  if (theme === undefined) {\n    return {};\n  } else {\n    return {\n      'editor.background': theme.components.input.background,\n      'minimap.background': theme.colors.background.secondary\n    };\n  }\n} // we support calling this without a theme, it will make sure the themes\n// are registered in monaco, even if the colors are not perfect.\n\n\nexport default function defineThemes(monaco, theme) {\n  // color tokens are defined here https://github.com/microsoft/vscode/blob/main/src/vs/platform/theme/common/colorRegistry.ts#L174\n  const colors = getColors(theme);\n  monaco.editor.defineTheme('grafana-dark', {\n    base: 'vs-dark',\n    inherit: true,\n    colors: colors,\n    // fallback syntax highlighting for languages that microsoft doesn't handle (ex cloudwatch's metric math)\n    rules: [{\n      token: 'predefined',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('purple')\n    }, {\n      token: 'operator',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('orange')\n    }, {\n      token: 'tag',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('green')\n    }]\n  });\n  monaco.editor.defineTheme('grafana-light', {\n    base: 'vs',\n    inherit: true,\n    colors: colors,\n    // fallback syntax highlighting for languages that microsoft doesn't handle (ex cloudwatch's metric math)\n    rules: [{\n      token: 'predefined',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('purple')\n    }, {\n      token: 'operator',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('orange')\n    }, {\n      token: 'tag',\n      foreground: theme === null || theme === void 0 ? void 0 : theme.visualization.getColorByName('green')\n    }]\n  });\n}","map":{"version":3,"names":["getColors","theme","undefined","components","input","background","colors","secondary","defineThemes","monaco","editor","defineTheme","base","inherit","rules","token","foreground","visualization","getColorByName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Monaco/theme.ts"],"sourcesContent":["import { GrafanaTheme2 } from '@grafana/data';\n\nimport { Monaco, monacoTypes } from './types';\n\nfunction getColors(theme?: GrafanaTheme2): monacoTypes.editor.IColors {\n  if (theme === undefined) {\n    return {};\n  } else {\n    return {\n      'editor.background': theme.components.input.background,\n      'minimap.background': theme.colors.background.secondary,\n    };\n  }\n}\n\n// we support calling this without a theme, it will make sure the themes\n// are registered in monaco, even if the colors are not perfect.\nexport default function defineThemes(monaco: Monaco, theme?: GrafanaTheme2) {\n  // color tokens are defined here https://github.com/microsoft/vscode/blob/main/src/vs/platform/theme/common/colorRegistry.ts#L174\n  const colors = getColors(theme);\n  monaco.editor.defineTheme('grafana-dark', {\n    base: 'vs-dark',\n    inherit: true,\n    colors: colors,\n    // fallback syntax highlighting for languages that microsoft doesn't handle (ex cloudwatch's metric math)\n    rules: [\n      { token: 'predefined', foreground: theme?.visualization.getColorByName('purple') },\n      { token: 'operator', foreground: theme?.visualization.getColorByName('orange') },\n      { token: 'tag', foreground: theme?.visualization.getColorByName('green') },\n    ],\n  });\n\n  monaco.editor.defineTheme('grafana-light', {\n    base: 'vs',\n    inherit: true,\n    colors: colors,\n    // fallback syntax highlighting for languages that microsoft doesn't handle (ex cloudwatch's metric math)\n    rules: [\n      { token: 'predefined', foreground: theme?.visualization.getColorByName('purple') },\n      { token: 'operator', foreground: theme?.visualization.getColorByName('orange') },\n      { token: 'tag', foreground: theme?.visualization.getColorByName('green') },\n    ],\n  });\n}\n"],"mappings":"AAIA,SAASA,SAAT,CAAmBC,KAAnB,EAAsE;EACpE,IAAIA,KAAK,KAAKC,SAAd,EAAyB;IACvB,OAAO,EAAP;EACD,CAFD,MAEO;IACL,OAAO;MACL,qBAAqBD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBC,UADvC;MAEL,sBAAsBJ,KAAK,CAACK,MAAN,CAAaD,UAAb,CAAwBE;IAFzC,CAAP;EAID;AACF,C,CAED;AACA;;;AACA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAsCR,KAAtC,EAA6D;EAC1E;EACA,MAAMK,MAAM,GAAGN,SAAS,CAACC,KAAD,CAAxB;EACAQ,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,cAA1B,EAA0C;IACxCC,IAAI,EAAE,SADkC;IAExCC,OAAO,EAAE,IAF+B;IAGxCP,MAAM,EAAEA,MAHgC;IAIxC;IACAQ,KAAK,EAAE,CACL;MAAEC,KAAK,EAAE,YAAT;MAAuBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,QAApC;IAAnC,CADK,EAEL;MAAEH,KAAK,EAAE,UAAT;MAAqBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,QAApC;IAAjC,CAFK,EAGL;MAAEH,KAAK,EAAE,KAAT;MAAgBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,OAApC;IAA5B,CAHK;EALiC,CAA1C;EAYAT,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,eAA1B,EAA2C;IACzCC,IAAI,EAAE,IADmC;IAEzCC,OAAO,EAAE,IAFgC;IAGzCP,MAAM,EAAEA,MAHiC;IAIzC;IACAQ,KAAK,EAAE,CACL;MAAEC,KAAK,EAAE,YAAT;MAAuBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,QAApC;IAAnC,CADK,EAEL;MAAEH,KAAK,EAAE,UAAT;MAAqBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,QAApC;IAAjC,CAFK,EAGL;MAAEH,KAAK,EAAE,KAAT;MAAgBC,UAAU,EAAEf,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,aAAP,CAAqBC,cAArB,CAAoC,OAApC;IAA5B,CAHK;EALkC,CAA3C;AAWD"},"metadata":{},"sourceType":"module"}