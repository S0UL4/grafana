{"ast":null,"code":"import { GoogleAuthType } from '@grafana/google-sdk';\nexport const authTypes = [{\n  label: 'Google JWT File',\n  value: GoogleAuthType.JWT\n}, {\n  label: 'GCE Default Service Account',\n  value: GoogleAuthType.GCE\n}];\nexport let MetricFindQueryTypes;\n\n(function (MetricFindQueryTypes) {\n  MetricFindQueryTypes[\"Projects\"] = \"projects\";\n  MetricFindQueryTypes[\"Services\"] = \"services\";\n  MetricFindQueryTypes[\"DefaultProject\"] = \"defaultProject\";\n  MetricFindQueryTypes[\"MetricTypes\"] = \"metricTypes\";\n  MetricFindQueryTypes[\"LabelKeys\"] = \"labelKeys\";\n  MetricFindQueryTypes[\"LabelValues\"] = \"labelValues\";\n  MetricFindQueryTypes[\"ResourceTypes\"] = \"resourceTypes\";\n  MetricFindQueryTypes[\"Aggregations\"] = \"aggregations\";\n  MetricFindQueryTypes[\"Aligners\"] = \"aligners\";\n  MetricFindQueryTypes[\"AlignmentPeriods\"] = \"alignmentPeriods\";\n  MetricFindQueryTypes[\"Selectors\"] = \"selectors\";\n  MetricFindQueryTypes[\"SLOServices\"] = \"sloServices\";\n  MetricFindQueryTypes[\"SLO\"] = \"slo\";\n})(MetricFindQueryTypes || (MetricFindQueryTypes = {}));\n\nexport let QueryType;\n\n(function (QueryType) {\n  QueryType[\"METRICS\"] = \"metrics\";\n  QueryType[\"SLO\"] = \"slo\";\n})(QueryType || (QueryType = {}));\n\nexport let EditorMode;\n\n(function (EditorMode) {\n  EditorMode[\"Visual\"] = \"visual\";\n  EditorMode[\"MQL\"] = \"mql\";\n})(EditorMode || (EditorMode = {}));\n\nexport let PreprocessorType;\n\n(function (PreprocessorType) {\n  PreprocessorType[\"None\"] = \"none\";\n  PreprocessorType[\"Rate\"] = \"rate\";\n  PreprocessorType[\"Delta\"] = \"delta\";\n})(PreprocessorType || (PreprocessorType = {}));\n\nexport let MetricKind;\n\n(function (MetricKind) {\n  MetricKind[\"METRIC_KIND_UNSPECIFIED\"] = \"METRIC_KIND_UNSPECIFIED\";\n  MetricKind[\"GAUGE\"] = \"GAUGE\";\n  MetricKind[\"DELTA\"] = \"DELTA\";\n  MetricKind[\"CUMULATIVE\"] = \"CUMULATIVE\";\n})(MetricKind || (MetricKind = {}));\n\nexport let ValueTypes;\n\n(function (ValueTypes) {\n  ValueTypes[\"VALUE_TYPE_UNSPECIFIED\"] = \"VALUE_TYPE_UNSPECIFIED\";\n  ValueTypes[\"BOOL\"] = \"BOOL\";\n  ValueTypes[\"INT64\"] = \"INT64\";\n  ValueTypes[\"DOUBLE\"] = \"DOUBLE\";\n  ValueTypes[\"STRING\"] = \"STRING\";\n  ValueTypes[\"DISTRIBUTION\"] = \"DISTRIBUTION\";\n  ValueTypes[\"MONEY\"] = \"MONEY\";\n})(ValueTypes || (ValueTypes = {}));\n\nexport let AlignmentTypes;\n\n(function (AlignmentTypes) {\n  AlignmentTypes[\"ALIGN_DELTA\"] = \"ALIGN_DELTA\";\n  AlignmentTypes[\"ALIGN_RATE\"] = \"ALIGN_RATE\";\n  AlignmentTypes[\"ALIGN_INTERPOLATE\"] = \"ALIGN_INTERPOLATE\";\n  AlignmentTypes[\"ALIGN_NEXT_OLDER\"] = \"ALIGN_NEXT_OLDER\";\n  AlignmentTypes[\"ALIGN_MIN\"] = \"ALIGN_MIN\";\n  AlignmentTypes[\"ALIGN_MAX\"] = \"ALIGN_MAX\";\n  AlignmentTypes[\"ALIGN_MEAN\"] = \"ALIGN_MEAN\";\n  AlignmentTypes[\"ALIGN_COUNT\"] = \"ALIGN_COUNT\";\n  AlignmentTypes[\"ALIGN_SUM\"] = \"ALIGN_SUM\";\n  AlignmentTypes[\"ALIGN_STDDEV\"] = \"ALIGN_STDDEV\";\n  AlignmentTypes[\"ALIGN_COUNT_TRUE\"] = \"ALIGN_COUNT_TRUE\";\n  AlignmentTypes[\"ALIGN_COUNT_FALSE\"] = \"ALIGN_COUNT_FALSE\";\n  AlignmentTypes[\"ALIGN_FRACTION_TRUE\"] = \"ALIGN_FRACTION_TRUE\";\n  AlignmentTypes[\"ALIGN_PERCENTILE_99\"] = \"ALIGN_PERCENTILE_99\";\n  AlignmentTypes[\"ALIGN_PERCENTILE_95\"] = \"ALIGN_PERCENTILE_95\";\n  AlignmentTypes[\"ALIGN_PERCENTILE_50\"] = \"ALIGN_PERCENTILE_50\";\n  AlignmentTypes[\"ALIGN_PERCENTILE_05\"] = \"ALIGN_PERCENTILE_05\";\n  AlignmentTypes[\"ALIGN_PERCENT_CHANGE\"] = \"ALIGN_PERCENT_CHANGE\";\n  AlignmentTypes[\"ALIGN_NONE\"] = \"ALIGN_NONE\";\n})(AlignmentTypes || (AlignmentTypes = {}));","map":{"version":3,"names":["GoogleAuthType","authTypes","label","value","JWT","GCE","MetricFindQueryTypes","QueryType","EditorMode","PreprocessorType","MetricKind","ValueTypes","AlignmentTypes"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloud-monitoring/types.ts"],"sourcesContent":["import { DataQuery, DataSourceJsonData, SelectableValue } from '@grafana/data';\nimport { GoogleAuthType } from '@grafana/google-sdk';\n\nexport const authTypes: Array<SelectableValue<string>> = [\n  { label: 'Google JWT File', value: GoogleAuthType.JWT },\n  { label: 'GCE Default Service Account', value: GoogleAuthType.GCE },\n];\n\nexport enum MetricFindQueryTypes {\n  Projects = 'projects',\n  Services = 'services',\n  DefaultProject = 'defaultProject',\n  MetricTypes = 'metricTypes',\n  LabelKeys = 'labelKeys',\n  LabelValues = 'labelValues',\n  ResourceTypes = 'resourceTypes',\n  Aggregations = 'aggregations',\n  Aligners = 'aligners',\n  AlignmentPeriods = 'alignmentPeriods',\n  Selectors = 'selectors',\n  SLOServices = 'sloServices',\n  SLO = 'slo',\n}\n\nexport interface CloudMonitoringVariableQuery extends DataQuery {\n  selectedQueryType: string;\n  selectedService: string;\n  selectedMetricType: string;\n  selectedSLOService: string;\n  labelKey: string;\n  projects: SelectableValue[];\n  sloServices: SelectableValue[];\n  projectName: string;\n}\n\nexport interface VariableQueryData {\n  selectedQueryType: string;\n  metricDescriptors: MetricDescriptor[];\n  selectedService: string;\n  selectedMetricType: string;\n  selectedSLOService: string;\n  labels: string[];\n  labelKey: string;\n  metricTypes: Array<{ value: string; name: string }>;\n  services: SelectableValue[];\n  projects: SelectableValue[];\n  sloServices: SelectableValue[];\n  projectName: string;\n  loading: boolean;\n}\n\nexport interface Aggregation {\n  crossSeriesReducer?: string;\n  groupBys?: string[];\n}\n\nexport enum QueryType {\n  METRICS = 'metrics',\n  SLO = 'slo',\n}\n\nexport enum EditorMode {\n  Visual = 'visual',\n  MQL = 'mql',\n}\n\nexport enum PreprocessorType {\n  None = 'none',\n  Rate = 'rate',\n  Delta = 'delta',\n}\n\nexport enum MetricKind {\n  METRIC_KIND_UNSPECIFIED = 'METRIC_KIND_UNSPECIFIED',\n  GAUGE = 'GAUGE',\n  DELTA = 'DELTA',\n  CUMULATIVE = 'CUMULATIVE',\n}\n\nexport enum ValueTypes {\n  VALUE_TYPE_UNSPECIFIED = 'VALUE_TYPE_UNSPECIFIED',\n  BOOL = 'BOOL',\n  INT64 = 'INT64',\n  DOUBLE = 'DOUBLE',\n  STRING = 'STRING',\n  DISTRIBUTION = 'DISTRIBUTION',\n  MONEY = 'MONEY',\n}\n\nexport enum AlignmentTypes {\n  ALIGN_DELTA = 'ALIGN_DELTA',\n  ALIGN_RATE = 'ALIGN_RATE',\n  ALIGN_INTERPOLATE = 'ALIGN_INTERPOLATE',\n  ALIGN_NEXT_OLDER = 'ALIGN_NEXT_OLDER',\n  ALIGN_MIN = 'ALIGN_MIN',\n  ALIGN_MAX = 'ALIGN_MAX',\n  ALIGN_MEAN = 'ALIGN_MEAN',\n  ALIGN_COUNT = 'ALIGN_COUNT',\n  ALIGN_SUM = 'ALIGN_SUM',\n  ALIGN_STDDEV = 'ALIGN_STDDEV',\n  ALIGN_COUNT_TRUE = 'ALIGN_COUNT_TRUE',\n  ALIGN_COUNT_FALSE = 'ALIGN_COUNT_FALSE',\n  ALIGN_FRACTION_TRUE = 'ALIGN_FRACTION_TRUE',\n  ALIGN_PERCENTILE_99 = 'ALIGN_PERCENTILE_99',\n  ALIGN_PERCENTILE_95 = 'ALIGN_PERCENTILE_95',\n  ALIGN_PERCENTILE_50 = 'ALIGN_PERCENTILE_50',\n  ALIGN_PERCENTILE_05 = 'ALIGN_PERCENTILE_05',\n  ALIGN_PERCENT_CHANGE = 'ALIGN_PERCENT_CHANGE',\n  ALIGN_NONE = 'ALIGN_NONE',\n}\n\nexport interface BaseQuery {\n  projectName: string;\n  perSeriesAligner?: string;\n  alignmentPeriod?: string;\n  aliasBy?: string;\n}\n\nexport interface MetricQuery extends BaseQuery {\n  editorMode: EditorMode;\n  metricType: string;\n  crossSeriesReducer: string;\n  groupBys?: string[];\n  filters?: string[];\n  metricKind?: MetricKind;\n  valueType?: string;\n  view?: string;\n  query: string;\n  preprocessor?: PreprocessorType;\n  // To disable the graphPeriod, it should explictly be set to 'disabled'\n  graphPeriod?: 'disabled' | string;\n}\n\nexport interface AnnotationMetricQuery extends MetricQuery {\n  title?: string;\n  text?: string;\n}\n\nexport interface SLOQuery extends BaseQuery {\n  selectorName: string;\n  serviceId: string;\n  serviceName: string;\n  sloId: string;\n  sloName: string;\n  goal?: number;\n}\n\nexport interface CloudMonitoringQuery extends DataQuery {\n  datasourceId?: number; // Should not be necessary anymore\n  queryType: QueryType;\n  metricQuery: MetricQuery | AnnotationMetricQuery;\n  sloQuery?: SLOQuery;\n  intervalMs: number;\n  type: string;\n}\n\nexport interface CloudMonitoringOptions extends DataSourceJsonData {\n  defaultProject?: string;\n  gceDefaultProject?: string;\n  authenticationType: GoogleAuthType;\n  clientEmail?: string;\n  tokenUri?: string;\n}\n\nexport interface CloudMonitoringSecureJsonData {\n  privateKey?: string;\n}\n\nexport interface LegacyCloudMonitoringAnnotationQuery {\n  projectName: string;\n  metricType: string;\n  refId: string;\n  filters: string[];\n  metricKind: MetricKind;\n  valueType: string;\n  title: string;\n  text: string;\n}\n\nexport interface QueryMeta {\n  alignmentPeriod: string;\n  rawQuery: string;\n  rawQueryString: string;\n  metricLabels: { [key: string]: string[] };\n  resourceLabels: { [key: string]: string[] };\n  resourceTypes: string[];\n}\n\nexport interface MetricDescriptor {\n  valueType: string;\n  metricKind: MetricKind;\n  type: string;\n  unit: string;\n  service: string;\n  serviceShortName: string;\n  displayName: string;\n  description: string;\n}\n\nexport interface Segment {\n  type: string;\n  value: string;\n}\n\nexport interface Filter {\n  key: string;\n  operator: string;\n  value: string;\n  condition?: string;\n}\n\nexport interface CustomMetaData {\n  perSeriesAligner?: string;\n  alignmentPeriod?: string;\n}\n\nexport interface PostResponse {\n  results: Record<string, any>;\n}\n"],"mappings":"AACA,SAASA,cAAT,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,SAAyC,GAAG,CACvD;EAAEC,KAAK,EAAE,iBAAT;EAA4BC,KAAK,EAAEH,cAAc,CAACI;AAAlD,CADuD,EAEvD;EAAEF,KAAK,EAAE,6BAAT;EAAwCC,KAAK,EAAEH,cAAc,CAACK;AAA9D,CAFuD,CAAlD;AAKP,WAAYC,oBAAZ;;WAAYA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;EAAAA,oB;GAAAA,oB,KAAAA,oB;;AAgDZ,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAKZ,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,gBAAZ;;WAAYA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;GAAAA,gB,KAAAA,gB;;AAMZ,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAUZ,WAAYC,cAAZ;;WAAYA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;GAAAA,c,KAAAA,c"},"metadata":{},"sourceType":"module"}