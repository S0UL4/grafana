{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useCallback, useRef } from 'react';\nimport { CodeEditor, getInputStyles, useTheme2 } from '@grafana/ui';\nimport { DynamicLabelsCompletionItemProvider } from '../dynamic-labels/CompletionItemProvider';\nimport language from '../dynamic-labels/definition';\nimport { TRIGGER_SUGGEST } from '../monarch/commands';\nimport { registerLanguage } from '../monarch/register';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst dynamicLabelsCompletionItemProvider = new DynamicLabelsCompletionItemProvider();\nexport function DynamicLabelsField({\n  label,\n  width,\n  onChange,\n  onRunQuery\n}) {\n  const theme = useTheme2();\n  const styles = getInputStyles({\n    theme,\n    width\n  });\n  const containerRef = useRef(null);\n  const onEditorMount = useCallback((editor, monaco) => {\n    editor.onDidFocusEditorText(() => editor.trigger(TRIGGER_SUGGEST.id, TRIGGER_SUGGEST.id, {}));\n    editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n      const text = editor.getValue();\n      onChange(text);\n      onRunQuery();\n    });\n    const containerDiv = containerRef.current;\n    containerDiv !== null && editor.layout({\n      width: containerDiv.clientWidth,\n      height: containerDiv.clientHeight\n    });\n  }, [onChange, onRunQuery]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: containerRef,\n    className: cx(styles.wrapper),\n    children: /*#__PURE__*/_jsx(CodeEditor, {\n      containerStyles: css`\n          border: 1px solid ${theme.colors.action.disabledBackground};\n          &:hover {\n            border-color: ${theme.components.input.borderColor};\n          }\n        `,\n      monacoOptions: {\n        // without this setting, the auto-resize functionality causes an infinite loop, don't remove it!\n        scrollBeyondLastLine: false,\n        // These additional options are style focused and are a subset of those in the query editor in Prometheus\n        fontSize: 14,\n        lineNumbers: 'off',\n        renderLineHighlight: 'none',\n        overviewRulerLanes: 0,\n        scrollbar: {\n          vertical: 'hidden',\n          horizontal: 'hidden'\n        },\n        suggestFontSize: 12,\n        padding: {\n          top: 6\n        }\n      },\n      language: language.id,\n      value: label,\n      onBlur: value => {\n        if (value !== label) {\n          onChange(value);\n          onRunQuery();\n        }\n      },\n      onBeforeEditorMount: monaco => registerLanguage(monaco, language, dynamicLabelsCompletionItemProvider),\n      onEditorDidMount: onEditorMount\n    })\n  });\n}","map":{"version":3,"names":["css","cx","React","useCallback","useRef","CodeEditor","getInputStyles","useTheme2","DynamicLabelsCompletionItemProvider","language","TRIGGER_SUGGEST","registerLanguage","dynamicLabelsCompletionItemProvider","DynamicLabelsField","label","width","onChange","onRunQuery","theme","styles","containerRef","onEditorMount","editor","monaco","onDidFocusEditorText","trigger","id","addCommand","KeyMod","Shift","KeyCode","Enter","text","getValue","containerDiv","current","layout","clientWidth","height","clientHeight","wrapper","colors","action","disabledBackground","components","input","borderColor","scrollBeyondLastLine","fontSize","lineNumbers","renderLineHighlight","overviewRulerLanes","scrollbar","vertical","horizontal","suggestFontSize","padding","top","value"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/components/DynamicLabelsField.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { useCallback, useRef } from 'react';\n\nimport { CodeEditor, getInputStyles, Monaco, useTheme2 } from '@grafana/ui';\n\nimport { DynamicLabelsCompletionItemProvider } from '../dynamic-labels/CompletionItemProvider';\nimport language from '../dynamic-labels/definition';\nimport { TRIGGER_SUGGEST } from '../monarch/commands';\nimport { registerLanguage } from '../monarch/register';\n\nconst dynamicLabelsCompletionItemProvider = new DynamicLabelsCompletionItemProvider();\n\nexport interface Props {\n  onChange: (query: string) => void;\n  onRunQuery: () => void;\n  label: string;\n  width: number;\n}\n\nexport function DynamicLabelsField({ label, width, onChange, onRunQuery }: Props) {\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, width });\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onEditorMount = useCallback(\n    (editor: monacoType.editor.IStandaloneCodeEditor, monaco: Monaco) => {\n      editor.onDidFocusEditorText(() => editor.trigger(TRIGGER_SUGGEST.id, TRIGGER_SUGGEST.id, {}));\n      editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n        const text = editor.getValue();\n        onChange(text);\n        onRunQuery();\n      });\n\n      const containerDiv = containerRef.current;\n      containerDiv !== null && editor.layout({ width: containerDiv.clientWidth, height: containerDiv.clientHeight });\n    },\n    [onChange, onRunQuery]\n  );\n\n  return (\n    <div ref={containerRef} className={cx(styles.wrapper)}>\n      <CodeEditor\n        containerStyles={css`\n          border: 1px solid ${theme.colors.action.disabledBackground};\n          &:hover {\n            border-color: ${theme.components.input.borderColor};\n          }\n        `}\n        monacoOptions={{\n          // without this setting, the auto-resize functionality causes an infinite loop, don't remove it!\n          scrollBeyondLastLine: false,\n\n          // These additional options are style focused and are a subset of those in the query editor in Prometheus\n          fontSize: 14,\n          lineNumbers: 'off',\n          renderLineHighlight: 'none',\n          overviewRulerLanes: 0,\n          scrollbar: {\n            vertical: 'hidden',\n            horizontal: 'hidden',\n          },\n          suggestFontSize: 12,\n          padding: {\n            top: 6,\n          },\n        }}\n        language={language.id}\n        value={label}\n        onBlur={(value) => {\n          if (value !== label) {\n            onChange(value);\n            onRunQuery();\n          }\n        }}\n        onBeforeEditorMount={(monaco: Monaco) =>\n          registerLanguage(monaco, language, dynamicLabelsCompletionItemProvider)\n        }\n        onEditorDidMount={onEditorMount}\n      />\n    </div>\n  );\n}\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,SAASC,UAAT,EAAqBC,cAArB,EAA6CC,SAA7C,QAA8D,aAA9D;AAEA,SAASC,mCAAT,QAAoD,0CAApD;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAEA,MAAMC,mCAAmC,GAAG,IAAIJ,mCAAJ,EAA5C;AASA,OAAO,SAASK,kBAAT,CAA4B;EAAEC,KAAF;EAASC,KAAT;EAAgBC,QAAhB;EAA0BC;AAA1B,CAA5B,EAA2E;EAChF,MAAMC,KAAK,GAAGX,SAAS,EAAvB;EACA,MAAMY,MAAM,GAAGb,cAAc,CAAC;IAAEY,KAAF;IAASH;EAAT,CAAD,CAA7B;EACA,MAAMK,YAAY,GAAGhB,MAAM,CAAiB,IAAjB,CAA3B;EACA,MAAMiB,aAAa,GAAGlB,WAAW,CAC/B,CAACmB,MAAD,EAAkDC,MAAlD,KAAqE;IACnED,MAAM,CAACE,oBAAP,CAA4B,MAAMF,MAAM,CAACG,OAAP,CAAef,eAAe,CAACgB,EAA/B,EAAmChB,eAAe,CAACgB,EAAnD,EAAuD,EAAvD,CAAlC;IACAJ,MAAM,CAACK,UAAP,CAAkBJ,MAAM,CAACK,MAAP,CAAcC,KAAd,GAAsBN,MAAM,CAACO,OAAP,CAAeC,KAAvD,EAA8D,MAAM;MAClE,MAAMC,IAAI,GAAGV,MAAM,CAACW,QAAP,EAAb;MACAjB,QAAQ,CAACgB,IAAD,CAAR;MACAf,UAAU;IACX,CAJD;IAMA,MAAMiB,YAAY,GAAGd,YAAY,CAACe,OAAlC;IACAD,YAAY,KAAK,IAAjB,IAAyBZ,MAAM,CAACc,MAAP,CAAc;MAAErB,KAAK,EAAEmB,YAAY,CAACG,WAAtB;MAAmCC,MAAM,EAAEJ,YAAY,CAACK;IAAxD,CAAd,CAAzB;EACD,CAX8B,EAY/B,CAACvB,QAAD,EAAWC,UAAX,CAZ+B,CAAjC;EAeA,oBACE;IAAK,GAAG,EAAEG,YAAV;IAAwB,SAAS,EAAEnB,EAAE,CAACkB,MAAM,CAACqB,OAAR,CAArC;IAAA,uBACE,KAAC,UAAD;MACE,eAAe,EAAExC,GAAI;AAC7B,8BAA8BkB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBC,kBAAmB;AACrE;AACA,4BAA4BzB,KAAK,CAAC0B,UAAN,CAAiBC,KAAjB,CAAuBC,WAAY;AAC/D;AACA,SANM;MAOE,aAAa,EAAE;QACb;QACAC,oBAAoB,EAAE,KAFT;QAIb;QACAC,QAAQ,EAAE,EALG;QAMbC,WAAW,EAAE,KANA;QAObC,mBAAmB,EAAE,MAPR;QAQbC,kBAAkB,EAAE,CARP;QASbC,SAAS,EAAE;UACTC,QAAQ,EAAE,QADD;UAETC,UAAU,EAAE;QAFH,CATE;QAabC,eAAe,EAAE,EAbJ;QAcbC,OAAO,EAAE;UACPC,GAAG,EAAE;QADE;MAdI,CAPjB;MAyBE,QAAQ,EAAEhD,QAAQ,CAACiB,EAzBrB;MA0BE,KAAK,EAAEZ,KA1BT;MA2BE,MAAM,EAAG4C,KAAD,IAAW;QACjB,IAAIA,KAAK,KAAK5C,KAAd,EAAqB;UACnBE,QAAQ,CAAC0C,KAAD,CAAR;UACAzC,UAAU;QACX;MACF,CAhCH;MAiCE,mBAAmB,EAAGM,MAAD,IACnBZ,gBAAgB,CAACY,MAAD,EAASd,QAAT,EAAmBG,mCAAnB,CAlCpB;MAoCE,gBAAgB,EAAES;IApCpB;EADF,EADF;AA0CD"},"metadata":{},"sourceType":"module"}