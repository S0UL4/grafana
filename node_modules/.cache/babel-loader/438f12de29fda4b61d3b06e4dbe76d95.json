{"ast":null,"code":"var _th, _th2, _th3, _th4;\n\nimport { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Tag, useStyles, IconButton } from '@grafana/ui';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { RuleModal } from './RuleModal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction renderOutputTags(key, output) {\n  if (!(output !== null && output !== void 0 && output.type)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Tag, {\n    name: output.type\n  }, key);\n}\n\nexport const PipelineTable = props => {\n  const {\n    rules\n  } = props;\n  const [isOpen, setOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState();\n  const [clickColumn, setClickColumn] = useState('converter');\n  const styles = useStyles(getStyles);\n\n  const onRowClick = (rule, event) => {\n    var _event$target;\n\n    if (!rule) {\n      return;\n    }\n\n    let column = event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.getAttribute('data-column');\n\n    if (!column || column === 'pattern') {\n      column = 'converter';\n    }\n\n    setClickColumn(column);\n    setSelectedRule(rule);\n    setOpen(true);\n  }; // Supports selecting a rule from external config (after add rule)\n\n\n  useEffect(() => {\n    if (props.selectRule) {\n      onRowClick(props.selectRule);\n    }\n  }, [props.selectRule]);\n\n  const onRemoveRule = pattern => {\n    getBackendSrv().delete(`api/live/channel-rules`, JSON.stringify({\n      pattern: pattern\n    })).catch(e => console.error(e)).finally(() => {\n      props.onRuleChanged();\n    });\n  };\n\n  const renderPattern = pattern => {\n    if (pattern.startsWith('ds/')) {\n      const idx = pattern.indexOf('/', 4);\n\n      if (idx > 3) {\n        const uid = pattern.substring(3, idx);\n        const ds = getDatasourceSrv().getInstanceSettings(uid);\n\n        if (ds) {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(Tag, {\n              name: ds.name,\n              colorIndex: 1\n            }), \" \\xA0\", /*#__PURE__*/_jsx(\"span\", {\n              children: pattern.substring(idx + 1)\n            })]\n          });\n        }\n      }\n    }\n\n    return pattern;\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"admin-list-table\",\n      children: /*#__PURE__*/_jsxs(\"table\", {\n        className: \"filter-table filter-table--hover form-inline\",\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {\n              children: \"Channel\"\n            })), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n              children: \"Converter\"\n            })), _th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n              children: \"Processor\"\n            })), _th4 || (_th4 = /*#__PURE__*/_jsx(\"th\", {\n              children: \"Output\"\n            })), /*#__PURE__*/_jsx(\"th\", {\n              style: {\n                width: 10\n              },\n              children: \"\\xA0\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: rules.map(rule => {\n            var _rule$settings, _rule$settings$conver, _rule$settings2, _rule$settings2$frame, _rule$settings3, _rule$settings3$frame;\n\n            return /*#__PURE__*/_jsxs(\"tr\", {\n              onClick: e => onRowClick(rule, e),\n              className: styles.row,\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                \"data-pattern\": rule.pattern,\n                \"data-column\": \"pattern\",\n                children: renderPattern(rule.pattern)\n              }), /*#__PURE__*/_jsx(\"td\", {\n                \"data-pattern\": rule.pattern,\n                \"data-column\": \"converter\",\n                children: (_rule$settings = rule.settings) === null || _rule$settings === void 0 ? void 0 : (_rule$settings$conver = _rule$settings.converter) === null || _rule$settings$conver === void 0 ? void 0 : _rule$settings$conver.type\n              }), /*#__PURE__*/_jsx(\"td\", {\n                \"data-pattern\": rule.pattern,\n                \"data-column\": \"processor\",\n                children: (_rule$settings2 = rule.settings) === null || _rule$settings2 === void 0 ? void 0 : (_rule$settings2$frame = _rule$settings2.frameProcessors) === null || _rule$settings2$frame === void 0 ? void 0 : _rule$settings2$frame.map(processor => /*#__PURE__*/_jsx(\"span\", {\n                  children: processor.type\n                }, rule.pattern + processor.type))\n              }), /*#__PURE__*/_jsx(\"td\", {\n                \"data-pattern\": rule.pattern,\n                \"data-column\": \"output\",\n                children: (_rule$settings3 = rule.settings) === null || _rule$settings3 === void 0 ? void 0 : (_rule$settings3$frame = _rule$settings3.frameOutputs) === null || _rule$settings3$frame === void 0 ? void 0 : _rule$settings3$frame.map(output => /*#__PURE__*/_jsx(\"span\", {\n                  children: renderOutputTags('out', output)\n                }, rule.pattern + output.type))\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  name: \"trash-alt\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    onRemoveRule(rule.pattern);\n                  }\n                })\n              })]\n            }, rule.pattern);\n          })\n        })]\n      })\n    }), isOpen && selectedRule && /*#__PURE__*/_jsx(RuleModal, {\n      rule: selectedRule,\n      isOpen: isOpen,\n      onClose: () => {\n        setOpen(false);\n      },\n      clickColumn: clickColumn\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    row: css`\n      cursor: pointer;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useEffect","useState","getBackendSrv","Tag","useStyles","IconButton","getDatasourceSrv","RuleModal","renderOutputTags","key","output","type","PipelineTable","props","rules","isOpen","setOpen","selectedRule","setSelectedRule","clickColumn","setClickColumn","styles","getStyles","onRowClick","rule","event","column","target","getAttribute","selectRule","onRemoveRule","pattern","delete","JSON","stringify","catch","e","console","error","finally","onRuleChanged","renderPattern","startsWith","idx","indexOf","uid","substring","ds","getInstanceSettings","name","width","map","row","settings","converter","frameProcessors","processor","frameOutputs","stopPropagation","theme"],"sources":["/home/soula/grafana/public/app/features/live/pages/PipelineTable.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Tag, useStyles, IconButton } from '@grafana/ui';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\n\nimport { RuleModal } from './RuleModal';\nimport { Rule, Output, RuleType } from './types';\n\nfunction renderOutputTags(key: string, output?: Output): React.ReactNode {\n  if (!output?.type) {\n    return null;\n  }\n  return <Tag key={key} name={output.type} />;\n}\n\ninterface Props {\n  rules: Rule[];\n  onRuleChanged: () => void;\n  selectRule?: Rule;\n}\n\nexport const PipelineTable: React.FC<Props> = (props) => {\n  const { rules } = props;\n  const [isOpen, setOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState<Rule>();\n  const [clickColumn, setClickColumn] = useState<RuleType>('converter');\n  const styles = useStyles(getStyles);\n\n  const onRowClick = (rule: Rule, event?: any) => {\n    if (!rule) {\n      return;\n    }\n    let column = event?.target?.getAttribute('data-column');\n    if (!column || column === 'pattern') {\n      column = 'converter';\n    }\n    setClickColumn(column);\n    setSelectedRule(rule);\n    setOpen(true);\n  };\n\n  // Supports selecting a rule from external config (after add rule)\n  useEffect(() => {\n    if (props.selectRule) {\n      onRowClick(props.selectRule);\n    }\n  }, [props.selectRule]);\n\n  const onRemoveRule = (pattern: string) => {\n    getBackendSrv()\n      .delete(`api/live/channel-rules`, JSON.stringify({ pattern: pattern }))\n      .catch((e) => console.error(e))\n      .finally(() => {\n        props.onRuleChanged();\n      });\n  };\n\n  const renderPattern = (pattern: string) => {\n    if (pattern.startsWith('ds/')) {\n      const idx = pattern.indexOf('/', 4);\n      if (idx > 3) {\n        const uid = pattern.substring(3, idx);\n        const ds = getDatasourceSrv().getInstanceSettings(uid);\n        if (ds) {\n          return (\n            <div>\n              <Tag name={ds.name} colorIndex={1} /> &nbsp;\n              <span>{pattern.substring(idx + 1)}</span>\n            </div>\n          );\n        }\n      }\n    }\n    return pattern;\n  };\n\n  return (\n    <div>\n      <div className=\"admin-list-table\">\n        <table className=\"filter-table filter-table--hover form-inline\">\n          <thead>\n            <tr>\n              <th>Channel</th>\n              <th>Converter</th>\n              <th>Processor</th>\n              <th>Output</th>\n              <th style={{ width: 10 }}>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rules.map((rule) => (\n              <tr key={rule.pattern} onClick={(e) => onRowClick(rule, e)} className={styles.row}>\n                <td data-pattern={rule.pattern} data-column=\"pattern\">\n                  {renderPattern(rule.pattern)}\n                </td>\n                <td data-pattern={rule.pattern} data-column=\"converter\">\n                  {rule.settings?.converter?.type}\n                </td>\n                <td data-pattern={rule.pattern} data-column=\"processor\">\n                  {rule.settings?.frameProcessors?.map((processor) => (\n                    <span key={rule.pattern + processor.type}>{processor.type}</span>\n                  ))}\n                </td>\n                <td data-pattern={rule.pattern} data-column=\"output\">\n                  {rule.settings?.frameOutputs?.map((output) => (\n                    <span key={rule.pattern + output.type}>{renderOutputTags('out', output)}</span>\n                  ))}\n                </td>\n                <td>\n                  <IconButton\n                    name=\"trash-alt\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onRemoveRule(rule.pattern);\n                    }}\n                  ></IconButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {isOpen && selectedRule && (\n        <RuleModal\n          rule={selectedRule}\n          isOpen={isOpen}\n          onClose={() => {\n            setOpen(false);\n          }}\n          clickColumn={clickColumn}\n        />\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    row: css`\n      cursor: pointer;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}