{"ast":null,"code":"export let RuleFormType;\n\n(function (RuleFormType) {\n  RuleFormType[\"grafana\"] = \"grafana\";\n  RuleFormType[\"cloudAlerting\"] = \"cloud-alerting\";\n  RuleFormType[\"cloudRecording\"] = \"cloud-recording\";\n})(RuleFormType || (RuleFormType = {}));","map":{"version":3,"names":["RuleFormType"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/types/rule-form.ts"],"sourcesContent":["import { AlertQuery, GrafanaAlertStateDecision } from 'app/types/unified-alerting-dto';\n\nexport enum RuleFormType {\n  grafana = 'grafana',\n  cloudAlerting = 'cloud-alerting',\n  cloudRecording = 'cloud-recording',\n}\n\nexport interface RuleForm {\n  title: string;\n  id: number;\n}\n\nexport interface RuleFormValues {\n  // common\n  name: string;\n  type?: RuleFormType;\n  dataSourceName: string | null;\n  group: string;\n\n  labels: Array<{ key: string; value: string }>;\n  annotations: Array<{ key: string; value: string }>;\n\n  // grafana rules\n  queries: AlertQuery[];\n  condition: string | null; // refId of the query that gets alerted on\n  noDataState: GrafanaAlertStateDecision;\n  execErrState: GrafanaAlertStateDecision;\n  folder: RuleForm | null;\n  evaluateEvery: string;\n  evaluateFor: string;\n\n  // cortex / loki rules\n  namespace: string;\n  forTime: number;\n  forTimeUnit: string;\n  expression: string;\n}\n"],"mappings":"AAEA,WAAYA,YAAZ;;WAAYA,Y;EAAAA,Y;EAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y"},"metadata":{},"sourceType":"module"}