{"ast":null,"code":"/**\n * Callback info for DataLink click events\n */\n\n/**\n * Link configuration. The values may contain variables that need to be\n * processed before showing the link to user.\n *\n * TODO: <T extends DataQuery> is not strictly true for internal links as we do not need refId for example but all\n *  data source defined queries extend this so this is more for documentation.\n */\n\n/** @internal */\n\n/**\n * Processed Link Model. The values are ready to use\n */\n\n/**\n * Provides a way to produce links on demand\n *\n * TODO: ScopedVars in in GrafanaUI package!\n */\nexport let VariableOrigin;\n\n(function (VariableOrigin) {\n  VariableOrigin[\"Series\"] = \"series\";\n  VariableOrigin[\"Field\"] = \"field\";\n  VariableOrigin[\"Fields\"] = \"fields\";\n  VariableOrigin[\"Value\"] = \"value\";\n  VariableOrigin[\"BuiltIn\"] = \"built-in\";\n  VariableOrigin[\"Template\"] = \"template\";\n})(VariableOrigin || (VariableOrigin = {}));\n\nexport let VariableSuggestionsScope;\n\n(function (VariableSuggestionsScope) {\n  VariableSuggestionsScope[\"Values\"] = \"values\";\n})(VariableSuggestionsScope || (VariableSuggestionsScope = {}));","map":{"version":3,"names":["VariableOrigin","VariableSuggestionsScope"],"sources":["/home/soula/grafana/packages/grafana-data/src/types/dataLink.ts"],"sourcesContent":["import { ExplorePanelsState } from './explore';\nimport { InterpolateFunction } from './panel';\nimport { DataQuery } from './query';\n\n/**\n * Callback info for DataLink click events\n */\nexport interface DataLinkClickEvent<T = any> {\n  origin: T;\n  replaceVariables: InterpolateFunction | undefined;\n  e?: any; // mouse|react event\n}\n\n/**\n * Link configuration. The values may contain variables that need to be\n * processed before showing the link to user.\n *\n * TODO: <T extends DataQuery> is not strictly true for internal links as we do not need refId for example but all\n *  data source defined queries extend this so this is more for documentation.\n */\nexport interface DataLink<T extends DataQuery = any> {\n  title: string;\n  targetBlank?: boolean;\n\n  // 3: The URL if others did not set it first\n  url: string;\n\n  // 2: If exists, use this to construct the URL\n  // Not saved in JSON/DTO\n  onBuildUrl?: (event: DataLinkClickEvent) => string;\n\n  // 1: If exists, handle click directly\n  // Not saved in JSON/DTO\n  onClick?: (event: DataLinkClickEvent) => void;\n\n  // If dataLink represents internal link this has to be filled. Internal link is defined as a query in a particular\n  // data source that we want to show to the user. Usually this results in a link to explore but can also lead to\n  // more custom onClick behaviour if needed.\n  // @internal and subject to change in future releases\n  internal?: InternalDataLink<T>;\n}\n\n/** @internal */\nexport interface InternalDataLink<T extends DataQuery = any> {\n  query: T;\n  datasourceUid: string;\n  datasourceName: string;\n  panelsState?: ExplorePanelsState;\n}\n\nexport type LinkTarget = '_blank' | '_self' | undefined;\n\n/**\n * Processed Link Model. The values are ready to use\n */\nexport interface LinkModel<T = any> {\n  href: string;\n  title: string;\n  target: LinkTarget;\n  origin: T;\n\n  // When a click callback exists, this is passed the raw mouse|react event\n  onClick?: (e: any, origin?: any) => void;\n}\n\n/**\n * Provides a way to produce links on demand\n *\n * TODO: ScopedVars in in GrafanaUI package!\n */\nexport interface LinkModelSupplier<T extends object> {\n  getLinks(replaceVariables?: InterpolateFunction): Array<LinkModel<T>>;\n}\n\nexport enum VariableOrigin {\n  Series = 'series',\n  Field = 'field',\n  Fields = 'fields',\n  Value = 'value',\n  BuiltIn = 'built-in',\n  Template = 'template',\n}\n\nexport interface VariableSuggestion {\n  value: string;\n  label: string;\n  documentation?: string;\n  origin: VariableOrigin;\n}\n\nexport enum VariableSuggestionsScope {\n  Values = 'values',\n}\n"],"mappings":"AAIA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAuBA;;AAUA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AAKA,WAAYA,cAAZ;;WAAYA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;GAAAA,c,KAAAA,c;;AAgBZ,WAAYC,wBAAZ;;WAAYA,wB;EAAAA,wB;GAAAA,wB,KAAAA,wB"},"metadata":{},"sourceType":"module"}