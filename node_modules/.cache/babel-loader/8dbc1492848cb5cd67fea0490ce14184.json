{"ast":null,"code":"var _br, _br2;\n\nimport React, { useMemo } from 'react';\nimport { TooltipPlugin, useTheme2, ZoomPlugin } from '@grafana/ui';\nimport { TimelineChart } from '../state-timeline/TimelineChart';\nimport { TimelineMode } from '../state-timeline/types';\nimport { prepareTimelineFields, prepareTimelineLegendItems } from '../state-timeline/utils';\nimport { OutsideRangePlugin } from '../timeseries/plugins/OutsideRangePlugin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\n/**\n * @alpha\n */\nexport const StatusHistoryPanel = ({\n  data,\n  timeRange,\n  timeZone,\n  options,\n  width,\n  height,\n  onChangeTimeRange\n}) => {\n  const theme = useTheme2();\n  const {\n    frames,\n    warn\n  } = useMemo(() => prepareTimelineFields(data === null || data === void 0 ? void 0 : data.series, false, timeRange, theme), [data, timeRange, theme]);\n  const legendItems = useMemo(() => prepareTimelineLegendItems(frames, options.legend, theme), [frames, options.legend, theme]);\n\n  if (!frames || warn) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-empty\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: warn !== null && warn !== void 0 ? warn : 'No data found in response'\n      })\n    });\n  } // Status grid requires some space between values\n\n\n  if (frames[0].length > width / 2) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-empty\",\n      children: /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Too many points to visualize properly. \", _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), \"Update the query to return fewer points. \", _br2 || (_br2 = /*#__PURE__*/_jsx(\"br\", {})), \"(\", frames[0].length, \" points received)\"]\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(TimelineChart, Object.assign({\n    theme: theme,\n    frames: frames,\n    structureRev: data.structureRev,\n    timeRange: timeRange,\n    timeZone: timeZone,\n    width: width,\n    height: height,\n    legendItems: legendItems\n  }, options, {\n    // hardcoded\n    mode: TimelineMode.Samples,\n    children: (config, alignedFrame) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(ZoomPlugin, {\n          config: config,\n          onZoom: onChangeTimeRange\n        }), /*#__PURE__*/_jsx(TooltipPlugin, {\n          data: alignedFrame,\n          config: config,\n          mode: options.tooltip.mode,\n          timeZone: timeZone\n        }), /*#__PURE__*/_jsx(OutsideRangePlugin, {\n          config: config,\n          onChangeTimeRange: onChangeTimeRange\n        })]\n      });\n    }\n  }));\n};","map":{"version":3,"names":["React","useMemo","TooltipPlugin","useTheme2","ZoomPlugin","TimelineChart","TimelineMode","prepareTimelineFields","prepareTimelineLegendItems","OutsideRangePlugin","StatusHistoryPanel","data","timeRange","timeZone","options","width","height","onChangeTimeRange","theme","frames","warn","series","legendItems","legend","length","structureRev","Samples","config","alignedFrame","tooltip","mode"],"sources":["/home/soula/grafana/public/app/plugins/panel/status-history/StatusHistoryPanel.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { PanelProps } from '@grafana/data';\nimport { TooltipPlugin, useTheme2, ZoomPlugin } from '@grafana/ui';\n\nimport { TimelineChart } from '../state-timeline/TimelineChart';\nimport { TimelineMode } from '../state-timeline/types';\nimport { prepareTimelineFields, prepareTimelineLegendItems } from '../state-timeline/utils';\nimport { OutsideRangePlugin } from '../timeseries/plugins/OutsideRangePlugin';\n\nimport { StatusPanelOptions } from './types';\n\ninterface TimelinePanelProps extends PanelProps<StatusPanelOptions> {}\n\n/**\n * @alpha\n */\nexport const StatusHistoryPanel: React.FC<TimelinePanelProps> = ({\n  data,\n  timeRange,\n  timeZone,\n  options,\n  width,\n  height,\n  onChangeTimeRange,\n}) => {\n  const theme = useTheme2();\n\n  const { frames, warn } = useMemo(\n    () => prepareTimelineFields(data?.series, false, timeRange, theme),\n    [data, timeRange, theme]\n  );\n\n  const legendItems = useMemo(\n    () => prepareTimelineLegendItems(frames, options.legend, theme),\n    [frames, options.legend, theme]\n  );\n\n  if (!frames || warn) {\n    return (\n      <div className=\"panel-empty\">\n        <p>{warn ?? 'No data found in response'}</p>\n      </div>\n    );\n  }\n\n  // Status grid requires some space between values\n  if (frames[0].length > width / 2) {\n    return (\n      <div className=\"panel-empty\">\n        <p>\n          Too many points to visualize properly. <br />\n          Update the query to return fewer points. <br />({frames[0].length} points received)\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <TimelineChart\n      theme={theme}\n      frames={frames}\n      structureRev={data.structureRev}\n      timeRange={timeRange}\n      timeZone={timeZone}\n      width={width}\n      height={height}\n      legendItems={legendItems}\n      {...options}\n      // hardcoded\n      mode={TimelineMode.Samples}\n    >\n      {(config, alignedFrame) => {\n        return (\n          <>\n            <ZoomPlugin config={config} onZoom={onChangeTimeRange} />\n            <TooltipPlugin data={alignedFrame} config={config} mode={options.tooltip.mode} timeZone={timeZone} />\n            <OutsideRangePlugin config={config} onChangeTimeRange={onChangeTimeRange} />\n          </>\n        );\n      }}\n    </TimelineChart>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,aAArD;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,QAAkE,yBAAlE;AACA,SAASC,kBAAT,QAAmC,0CAAnC;;;;;AAMA;AACA;AACA;AACA,OAAO,MAAMC,kBAAgD,GAAG,CAAC;EAC/DC,IAD+D;EAE/DC,SAF+D;EAG/DC,QAH+D;EAI/DC,OAJ+D;EAK/DC,KAL+D;EAM/DC,MAN+D;EAO/DC;AAP+D,CAAD,KAQ1D;EACJ,MAAMC,KAAK,GAAGf,SAAS,EAAvB;EAEA,MAAM;IAAEgB,MAAF;IAAUC;EAAV,IAAmBnB,OAAO,CAC9B,MAAMM,qBAAqB,CAACI,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEU,MAAP,EAAe,KAAf,EAAsBT,SAAtB,EAAiCM,KAAjC,CADG,EAE9B,CAACP,IAAD,EAAOC,SAAP,EAAkBM,KAAlB,CAF8B,CAAhC;EAKA,MAAMI,WAAW,GAAGrB,OAAO,CACzB,MAAMO,0BAA0B,CAACW,MAAD,EAASL,OAAO,CAACS,MAAjB,EAAyBL,KAAzB,CADP,EAEzB,CAACC,MAAD,EAASL,OAAO,CAACS,MAAjB,EAAyBL,KAAzB,CAFyB,CAA3B;;EAKA,IAAI,CAACC,MAAD,IAAWC,IAAf,EAAqB;IACnB,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA,UAAIA,IAAJ,aAAIA,IAAJ,cAAIA,IAAJ,GAAY;MAAZ;IADF,EADF;EAKD,CAnBG,CAqBJ;;;EACA,IAAID,MAAM,CAAC,CAAD,CAAN,CAAUK,MAAV,GAAmBT,KAAK,GAAG,CAA/B,EAAkC;IAChC,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA,iFACyC,cADzC,6EAE2C,cAF3C,QAEmDI,MAAM,CAAC,CAAD,CAAN,CAAUK,MAF7D;MAAA;IADF,EADF;EAQD;;EAED,oBACE,KAAC,aAAD;IACE,KAAK,EAAEN,KADT;IAEE,MAAM,EAAEC,MAFV;IAGE,YAAY,EAAER,IAAI,CAACc,YAHrB;IAIE,SAAS,EAAEb,SAJb;IAKE,QAAQ,EAAEC,QALZ;IAME,KAAK,EAAEE,KANT;IAOE,MAAM,EAAEC,MAPV;IAQE,WAAW,EAAEM;EARf,GASMR,OATN;IAUE;IACA,IAAI,EAAER,YAAY,CAACoB,OAXrB;IAAA,UAaG,CAACC,MAAD,EAASC,YAAT,KAA0B;MACzB,oBACE;QAAA,wBACE,KAAC,UAAD;UAAY,MAAM,EAAED,MAApB;UAA4B,MAAM,EAAEV;QAApC,EADF,eAEE,KAAC,aAAD;UAAe,IAAI,EAAEW,YAArB;UAAmC,MAAM,EAAED,MAA3C;UAAmD,IAAI,EAAEb,OAAO,CAACe,OAAR,CAAgBC,IAAzE;UAA+E,QAAQ,EAAEjB;QAAzF,EAFF,eAGE,KAAC,kBAAD;UAAoB,MAAM,EAAEc,MAA5B;UAAoC,iBAAiB,EAAEV;QAAvD,EAHF;MAAA,EADF;IAOD;EArBH,GADF;AAyBD,CAlEM"},"metadata":{},"sourceType":"module"}