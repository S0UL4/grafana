{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { memo } from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { shortenLine } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    mainGroup: css`\n      pointer-events: none;\n      font-size: 8px;\n    `,\n    background: css`\n      fill: ${theme.components.tooltip.background};\n    `,\n    text: css`\n      fill: ${theme.components.tooltip.text};\n    `\n  };\n};\n\nexport const EdgeLabel = /*#__PURE__*/memo(function EdgeLabel(props) {\n  const {\n    edge\n  } = props; // Not great typing but after we do layout these properties are full objects not just references\n\n  const {\n    source,\n    target\n  } = edge; // As the nodes have some radius we want edges to end outside of the node circle.\n\n  const line = shortenLine({\n    x1: source.x,\n    y1: source.y,\n    x2: target.x,\n    y2: target.y\n  }, 90);\n  const middle = {\n    x: line.x1 + (line.x2 - line.x1) / 2,\n    y: line.y1 + (line.y2 - line.y1) / 2\n  };\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"g\", {\n    className: styles.mainGroup,\n    children: [/*#__PURE__*/_jsx(\"rect\", {\n      className: styles.background,\n      x: middle.x - 40,\n      y: middle.y - 15,\n      width: \"80\",\n      height: \"30\",\n      rx: \"5\"\n    }), /*#__PURE__*/_jsx(\"text\", {\n      className: styles.text,\n      x: middle.x,\n      y: middle.y - 5,\n      textAnchor: 'middle',\n      children: edge.mainStat\n    }), /*#__PURE__*/_jsx(\"text\", {\n      className: styles.text,\n      x: middle.x,\n      y: middle.y + 10,\n      textAnchor: 'middle',\n      children: edge.secondaryStat\n    })]\n  });\n});","map":{"version":3,"names":["css","React","memo","useStyles2","shortenLine","getStyles","theme","mainGroup","background","components","tooltip","text","EdgeLabel","props","edge","source","target","line","x1","x","y1","y","x2","y2","middle","styles","mainStat","secondaryStat"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/EdgeLabel.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { EdgeDatum, NodeDatum } from './types';\nimport { shortenLine } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    mainGroup: css`\n      pointer-events: none;\n      font-size: 8px;\n    `,\n\n    background: css`\n      fill: ${theme.components.tooltip.background};\n    `,\n\n    text: css`\n      fill: ${theme.components.tooltip.text};\n    `,\n  };\n};\n\ninterface Props {\n  edge: EdgeDatum;\n}\nexport const EdgeLabel = memo(function EdgeLabel(props: Props) {\n  const { edge } = props;\n  // Not great typing but after we do layout these properties are full objects not just references\n  const { source, target } = edge as { source: NodeDatum; target: NodeDatum };\n\n  // As the nodes have some radius we want edges to end outside of the node circle.\n  const line = shortenLine(\n    {\n      x1: source.x!,\n      y1: source.y!,\n      x2: target.x!,\n      y2: target.y!,\n    },\n    90\n  );\n\n  const middle = {\n    x: line.x1 + (line.x2 - line.x1) / 2,\n    y: line.y1 + (line.y2 - line.y1) / 2,\n  };\n  const styles = useStyles2(getStyles);\n\n  return (\n    <g className={styles.mainGroup}>\n      <rect className={styles.background} x={middle.x - 40} y={middle.y - 15} width=\"80\" height=\"30\" rx=\"5\" />\n      <text className={styles.text} x={middle.x} y={middle.y - 5} textAnchor={'middle'}>\n        {edge.mainStat}\n      </text>\n      <text className={styles.text} x={middle.x} y={middle.y + 10} textAnchor={'middle'}>\n        {edge.secondaryStat}\n      </text>\n    </g>\n  );\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAGA,SAASC,WAAT,QAA4B,SAA5B;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,SAAS,EAAEP,GAAI;AACnB;AACA;AACA,KAJS;IAMLQ,UAAU,EAAER,GAAI;AACpB,cAAcM,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyBF,UAAW;AAClD,KARS;IAULG,IAAI,EAAEX,GAAI;AACd,cAAcM,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyBC,IAAK;AAC5C;EAZS,CAAP;AAcD,CAfD;;AAoBA,OAAO,MAAMC,SAAS,gBAAGV,IAAI,CAAC,SAASU,SAAT,CAAmBC,KAAnB,EAAiC;EAC7D,MAAM;IAAEC;EAAF,IAAWD,KAAjB,CAD6D,CAE7D;;EACA,MAAM;IAAEE,MAAF;IAAUC;EAAV,IAAqBF,IAA3B,CAH6D,CAK7D;;EACA,MAAMG,IAAI,GAAGb,WAAW,CACtB;IACEc,EAAE,EAAEH,MAAM,CAACI,CADb;IAEEC,EAAE,EAAEL,MAAM,CAACM,CAFb;IAGEC,EAAE,EAAEN,MAAM,CAACG,CAHb;IAIEI,EAAE,EAAEP,MAAM,CAACK;EAJb,CADsB,EAOtB,EAPsB,CAAxB;EAUA,MAAMG,MAAM,GAAG;IACbL,CAAC,EAAEF,IAAI,CAACC,EAAL,GAAU,CAACD,IAAI,CAACK,EAAL,GAAUL,IAAI,CAACC,EAAhB,IAAsB,CADtB;IAEbG,CAAC,EAAEJ,IAAI,CAACG,EAAL,GAAU,CAACH,IAAI,CAACM,EAAL,GAAUN,IAAI,CAACG,EAAhB,IAAsB;EAFtB,CAAf;EAIA,MAAMK,MAAM,GAAGtB,UAAU,CAACE,SAAD,CAAzB;EAEA,oBACE;IAAG,SAAS,EAAEoB,MAAM,CAAClB,SAArB;IAAA,wBACE;MAAM,SAAS,EAAEkB,MAAM,CAACjB,UAAxB;MAAoC,CAAC,EAAEgB,MAAM,CAACL,CAAP,GAAW,EAAlD;MAAsD,CAAC,EAAEK,MAAM,CAACH,CAAP,GAAW,EAApE;MAAwE,KAAK,EAAC,IAA9E;MAAmF,MAAM,EAAC,IAA1F;MAA+F,EAAE,EAAC;IAAlG,EADF,eAEE;MAAM,SAAS,EAAEI,MAAM,CAACd,IAAxB;MAA8B,CAAC,EAAEa,MAAM,CAACL,CAAxC;MAA2C,CAAC,EAAEK,MAAM,CAACH,CAAP,GAAW,CAAzD;MAA4D,UAAU,EAAE,QAAxE;MAAA,UACGP,IAAI,CAACY;IADR,EAFF,eAKE;MAAM,SAAS,EAAED,MAAM,CAACd,IAAxB;MAA8B,CAAC,EAAEa,MAAM,CAACL,CAAxC;MAA2C,CAAC,EAAEK,MAAM,CAACH,CAAP,GAAW,EAAzD;MAA6D,UAAU,EAAE,QAAzE;MAAA,UACGP,IAAI,CAACa;IADR,EALF;EAAA,EADF;AAWD,CAjC4B,CAAtB"},"metadata":{},"sourceType":"module"}