{"ast":null,"code":"var _h, _thead;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport { withI18n } from '@lingui/react';\nimport React, { PureComponent } from 'react';\nimport { ConfirmButton, ConfirmModal, Button } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nclass BaseUserSessions extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"forceAllLogoutButton\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      showLogoutModal: false\n    });\n\n    _defineProperty(this, \"showLogoutConfirmationModal\", () => {\n      this.setState({\n        showLogoutModal: true\n      });\n    });\n\n    _defineProperty(this, \"dismissLogoutConfirmationModal\", () => {\n      this.setState({\n        showLogoutModal: false\n      }, () => {\n        var _this$forceAllLogoutB;\n\n        (_this$forceAllLogoutB = this.forceAllLogoutButton.current) === null || _this$forceAllLogoutB === void 0 ? void 0 : _this$forceAllLogoutB.focus();\n      });\n    });\n\n    _defineProperty(this, \"onSessionRevoke\", id => {\n      return () => {\n        this.props.onSessionRevoke(id);\n      };\n    });\n\n    _defineProperty(this, \"onAllSessionsRevoke\", () => {\n      this.setState({\n        showLogoutModal: false\n      });\n      this.props.onAllSessionsRevoke();\n    });\n  }\n\n  render() {\n    const {\n      sessions,\n      i18n\n    } = this.props;\n    const {\n      showLogoutModal\n    } = this.state;\n    const logoutFromAllDevicesClass = css`\n      margin-top: 0.8rem;\n    `;\n    const canLogout = contextSrv.hasPermission(AccessControlAction.UsersLogout);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-heading\",\n        children: \"Sessions\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsxs(\"table\", {\n            className: \"filter-table form-inline\",\n            children: [_thead || (_thead = /*#__PURE__*/_jsx(\"thead\", {\n              children: /*#__PURE__*/_jsxs(\"tr\", {\n                children: [/*#__PURE__*/_jsx(\"th\", {\n                  children: \"Last seen\"\n                }), /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Logged on\"\n                }), /*#__PURE__*/_jsx(\"th\", {\n                  children: \"IP address\"\n                }), /*#__PURE__*/_jsx(\"th\", {\n                  colSpan: 2,\n                  children: \"Browser and OS\"\n                })]\n              })\n            })), /*#__PURE__*/_jsx(\"tbody\", {\n              children: sessions && sessions.map((session, index) => /*#__PURE__*/_jsxs(\"tr\", {\n                children: [/*#__PURE__*/_jsx(\"td\", {\n                  children: session.isActive ? 'Now' : session.seenAt\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: i18n.date(session.createdAt, {\n                    dateStyle: 'long'\n                  })\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: session.clientIp\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: `${session.browser} on ${session.os} ${session.osVersion}`\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    className: \"pull-right\",\n                    children: canLogout && /*#__PURE__*/_jsx(ConfirmButton, {\n                      confirmText: \"Confirm logout\",\n                      confirmVariant: \"destructive\",\n                      onConfirm: this.onSessionRevoke(session.id),\n                      autoFocus: true,\n                      children: \"Force logout\"\n                    })\n                  })\n                })]\n              }, `${session.id}-${index}`))\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: logoutFromAllDevicesClass,\n          children: [canLogout && sessions.length > 0 && /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: this.showLogoutConfirmationModal,\n            ref: this.forceAllLogoutButton,\n            children: \"Force logout from all devices\"\n          }), /*#__PURE__*/_jsx(ConfirmModal, {\n            isOpen: showLogoutModal,\n            title: \"Force logout from all devices\",\n            body: \"Are you sure you want to force logout from all devices?\",\n            confirmText: \"Force logout\",\n            onConfirm: this.onAllSessionsRevoke,\n            onDismiss: this.dismissLogoutConfirmationModal\n          })]\n        })]\n      })]\n    });\n  }\n\n}\n\nexport const UserSessions = withI18n()(BaseUserSessions);","map":{"version":3,"names":["css","withI18n","React","PureComponent","ConfirmButton","ConfirmModal","Button","contextSrv","AccessControlAction","BaseUserSessions","createRef","showLogoutModal","setState","forceAllLogoutButton","current","focus","id","props","onSessionRevoke","onAllSessionsRevoke","render","sessions","i18n","state","logoutFromAllDevicesClass","canLogout","hasPermission","UsersLogout","map","session","index","isActive","seenAt","date","createdAt","dateStyle","clientIp","browser","os","osVersion","length","showLogoutConfirmationModal","dismissLogoutConfirmationModal","UserSessions"],"sources":["/home/soula/grafana/public/app/features/admin/UserSessions.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { withI18n, withI18nProps } from '@lingui/react';\nimport React, { PureComponent } from 'react';\n\nimport { ConfirmButton, ConfirmModal, Button } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, UserSession } from 'app/types';\n\ninterface Props extends withI18nProps {\n  sessions: UserSession[];\n\n  onSessionRevoke: (id: number) => void;\n  onAllSessionsRevoke: () => void;\n}\n\ninterface State {\n  showLogoutModal: boolean;\n}\n\nclass BaseUserSessions extends PureComponent<Props, State> {\n  forceAllLogoutButton = React.createRef<HTMLButtonElement>();\n  state: State = {\n    showLogoutModal: false,\n  };\n\n  showLogoutConfirmationModal = () => {\n    this.setState({ showLogoutModal: true });\n  };\n\n  dismissLogoutConfirmationModal = () => {\n    this.setState({ showLogoutModal: false }, () => {\n      this.forceAllLogoutButton.current?.focus();\n    });\n  };\n\n  onSessionRevoke = (id: number) => {\n    return () => {\n      this.props.onSessionRevoke(id);\n    };\n  };\n\n  onAllSessionsRevoke = () => {\n    this.setState({ showLogoutModal: false });\n    this.props.onAllSessionsRevoke();\n  };\n\n  render() {\n    const { sessions, i18n } = this.props;\n    const { showLogoutModal } = this.state;\n\n    const logoutFromAllDevicesClass = css`\n      margin-top: 0.8rem;\n    `;\n\n    const canLogout = contextSrv.hasPermission(AccessControlAction.UsersLogout);\n\n    return (\n      <>\n        <h3 className=\"page-heading\">Sessions</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <thead>\n                <tr>\n                  <th>Last seen</th>\n                  <th>Logged on</th>\n                  <th>IP address</th>\n                  <th colSpan={2}>Browser and OS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sessions &&\n                  sessions.map((session, index) => (\n                    <tr key={`${session.id}-${index}`}>\n                      <td>{session.isActive ? 'Now' : session.seenAt}</td>\n                      <td>{i18n.date(session.createdAt, { dateStyle: 'long' })}</td>\n                      <td>{session.clientIp}</td>\n                      <td>{`${session.browser} on ${session.os} ${session.osVersion}`}</td>\n                      <td>\n                        <div className=\"pull-right\">\n                          {canLogout && (\n                            <ConfirmButton\n                              confirmText=\"Confirm logout\"\n                              confirmVariant=\"destructive\"\n                              onConfirm={this.onSessionRevoke(session.id)}\n                              autoFocus\n                            >\n                              Force logout\n                            </ConfirmButton>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n          <div className={logoutFromAllDevicesClass}>\n            {canLogout && sessions.length > 0 && (\n              <Button variant=\"secondary\" onClick={this.showLogoutConfirmationModal} ref={this.forceAllLogoutButton}>\n                Force logout from all devices\n              </Button>\n            )}\n            <ConfirmModal\n              isOpen={showLogoutModal}\n              title=\"Force logout from all devices\"\n              body=\"Are you sure you want to force logout from all devices?\"\n              confirmText=\"Force logout\"\n              onConfirm={this.onAllSessionsRevoke}\n              onDismiss={this.dismissLogoutConfirmationModal}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const UserSessions = withI18n()(BaseUserSessions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}