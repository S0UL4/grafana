{"ast":null,"code":"var _br;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { captureException } from '@sentry/browser';\nimport React, { PureComponent } from 'react';\nimport { Alert } from '../Alert/Alert';\nimport { ErrorWithStack } from './ErrorWithStack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class ErrorBoundary extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      error: null,\n      errorInfo: null\n    });\n  }\n\n  componentDidCatch(error, errorInfo) {\n    captureException(error, {\n      contexts: {\n        react: {\n          componentStack: errorInfo.componentStack\n        }\n      }\n    });\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      dependencies,\n      onRecover\n    } = this.props;\n\n    if (this.state.error) {\n      if (dependencies && prevProps.dependencies) {\n        for (let i = 0; i < dependencies.length; i++) {\n          if (dependencies[i] !== prevProps.dependencies[i]) {\n            this.setState({\n              error: null,\n              errorInfo: null\n            });\n\n            if (onRecover) {\n              onRecover();\n            }\n\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      error,\n      errorInfo\n    } = this.state;\n    return children({\n      error,\n      errorInfo\n    });\n  }\n\n}\n/**\n * Props for the ErrorBoundaryAlert component\n *\n * @public\n */\n\nexport class ErrorBoundaryAlert extends PureComponent {\n  render() {\n    const {\n      title,\n      children,\n      style,\n      dependencies\n    } = this.props;\n    return /*#__PURE__*/_jsx(ErrorBoundary, {\n      dependencies: dependencies,\n      children: ({\n        error,\n        errorInfo\n      }) => {\n        if (!errorInfo) {\n          return children;\n        }\n\n        if (style === 'alertbox') {\n          return /*#__PURE__*/_jsx(Alert, {\n            title: title || '',\n            children: /*#__PURE__*/_jsxs(\"details\", {\n              style: {\n                whiteSpace: 'pre-wrap'\n              },\n              children: [error && error.toString(), _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), errorInfo.componentStack]\n            })\n          });\n        }\n\n        return /*#__PURE__*/_jsx(ErrorWithStack, {\n          title: title || '',\n          error: error,\n          errorInfo: errorInfo\n        });\n      }\n    });\n  }\n\n}\n/**\n * HOC for wrapping a component in an error boundary.\n *\n * @param Component - the react component to wrap in error boundary\n * @param errorBoundaryProps - error boundary options\n *\n * @public\n */\n\n_defineProperty(ErrorBoundaryAlert, \"defaultProps\", {\n  title: 'An unexpected error happened',\n  style: 'alertbox'\n});\n\nexport function withErrorBoundary(Component, errorBoundaryProps = {}) {\n  const comp = props => /*#__PURE__*/_jsx(ErrorBoundaryAlert, Object.assign({}, errorBoundaryProps, {\n    children: /*#__PURE__*/_jsx(Component, Object.assign({}, props))\n  }));\n\n  comp.displayName = 'WithErrorBoundary';\n  return comp;\n}","map":{"version":3,"names":["captureException","React","PureComponent","Alert","ErrorWithStack","ErrorBoundary","error","errorInfo","componentDidCatch","contexts","react","componentStack","setState","props","onError","componentDidUpdate","prevProps","dependencies","onRecover","state","i","length","render","children","ErrorBoundaryAlert","title","style","whiteSpace","toString","withErrorBoundary","Component","errorBoundaryProps","comp","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ErrorBoundary/ErrorBoundary.tsx"],"sourcesContent":["import { captureException } from '@sentry/browser';\nimport React, { PureComponent, ReactNode, ComponentType } from 'react';\n\nimport { Alert } from '../Alert/Alert';\n\nimport { ErrorWithStack } from './ErrorWithStack';\n\nexport interface ErrorInfo {\n  componentStack: string;\n}\n\nexport interface ErrorBoundaryApi {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\ninterface Props {\n  children: (r: ErrorBoundaryApi) => ReactNode;\n  /** Will re-render children after error if recover values changes */\n  dependencies?: any[];\n  /** Callback called on error */\n  onError?: (error: Error) => void;\n  /** Callback error state is cleared due to recover props change */\n  onRecover?: () => void;\n}\n\ninterface State {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends PureComponent<Props, State> {\n  readonly state: State = {\n    error: null,\n    errorInfo: null,\n  };\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    captureException(error, { contexts: { react: { componentStack: errorInfo.componentStack } } });\n    this.setState({ error, errorInfo });\n\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { dependencies, onRecover } = this.props;\n\n    if (this.state.error) {\n      if (dependencies && prevProps.dependencies) {\n        for (let i = 0; i < dependencies.length; i++) {\n          if (dependencies[i] !== prevProps.dependencies[i]) {\n            this.setState({ error: null, errorInfo: null });\n            if (onRecover) {\n              onRecover();\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error, errorInfo } = this.state;\n\n    return children({\n      error,\n      errorInfo,\n    });\n  }\n}\n\n/**\n * Props for the ErrorBoundaryAlert component\n *\n * @public\n */\nexport interface ErrorBoundaryAlertProps {\n  /** Title for the error boundary alert */\n  title?: string;\n\n  /** Component to be wrapped with an error boundary */\n  children: ReactNode;\n\n  /** 'page' will render full page error with stacktrace. 'alertbox' will render an <Alert />. Default 'alertbox' */\n  style?: 'page' | 'alertbox';\n\n  /** Will re-render children after error if recover values changes */\n  dependencies?: any[];\n}\n\nexport class ErrorBoundaryAlert extends PureComponent<ErrorBoundaryAlertProps> {\n  static defaultProps: Partial<ErrorBoundaryAlertProps> = {\n    title: 'An unexpected error happened',\n    style: 'alertbox',\n  };\n\n  render() {\n    const { title, children, style, dependencies } = this.props;\n\n    return (\n      <ErrorBoundary dependencies={dependencies}>\n        {({ error, errorInfo }) => {\n          if (!errorInfo) {\n            return children;\n          }\n\n          if (style === 'alertbox') {\n            return (\n              <Alert title={title || ''}>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                  {error && error.toString()}\n                  <br />\n                  {errorInfo.componentStack}\n                </details>\n              </Alert>\n            );\n          }\n\n          return <ErrorWithStack title={title || ''} error={error} errorInfo={errorInfo} />;\n        }}\n      </ErrorBoundary>\n    );\n  }\n}\n\n/**\n * HOC for wrapping a component in an error boundary.\n *\n * @param Component - the react component to wrap in error boundary\n * @param errorBoundaryProps - error boundary options\n *\n * @public\n */\nexport function withErrorBoundary<P = {}>(\n  Component: ComponentType<P>,\n  errorBoundaryProps: Omit<ErrorBoundaryAlertProps, 'children'> = {}\n): ComponentType<P> {\n  const comp = (props: P) => (\n    <ErrorBoundaryAlert {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundaryAlert>\n  );\n  comp.displayName = 'WithErrorBoundary';\n\n  return comp;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}