{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { createRef, PureComponent } from 'react';\nimport SplitPane from 'react-split-pane';\nimport { stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Pane;\n\n(function (Pane) {\n  Pane[Pane[\"Right\"] = 0] = \"Right\";\n  Pane[Pane[\"Top\"] = 1] = \"Top\";\n})(Pane || (Pane = {}));\n\nexport class SplitPaneWrapper extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"rafToken\", /*#__PURE__*/createRef());\n\n    _defineProperty(this, \"updateSplitPaneSize\", () => {\n      if (this.rafToken.current !== undefined) {\n        window.cancelAnimationFrame(this.rafToken.current);\n      }\n\n      this.rafToken.current = window.requestAnimationFrame(() => {\n        this.forceUpdate();\n      });\n    });\n\n    _defineProperty(this, \"onDragFinished\", (pane, size) => {\n      document.body.style.cursor = 'auto'; // When the drag handle is just clicked size is undefined\n\n      if (!size) {\n        return;\n      }\n\n      const {\n        updateUiState\n      } = this.props;\n\n      if (pane === Pane.Top) {\n        updateUiState({\n          topPaneSize: size / window.innerHeight\n        });\n      } else {\n        updateUiState({\n          rightPaneSize: size / window.innerWidth\n        });\n      }\n    });\n\n    _defineProperty(this, \"onDragStarted\", () => {\n      document.body.style.cursor = 'row-resize';\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateSplitPaneSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateSplitPaneSize);\n  }\n\n  renderHorizontalSplit() {\n    const {\n      leftPaneComponents,\n      uiState\n    } = this.props;\n    const styles = getStyles(config.theme);\n    const topPaneSize = uiState.topPaneSize >= 1 ? uiState.topPaneSize : uiState.topPaneSize * window.innerHeight;\n    /*\n      Guesstimate the height of the browser window minus\n      panel toolbar and editor toolbar (~120px). This is to prevent resizing\n      the preview window beyond the browser window.\n     */\n\n    if (Array.isArray(leftPaneComponents)) {\n      return /*#__PURE__*/_jsx(SplitPane, {\n        split: \"horizontal\",\n        maxSize: -200,\n        primary: \"first\",\n        size: topPaneSize,\n        pane2Style: {\n          minHeight: 0\n        },\n        resizerClassName: styles.resizerH,\n        onDragStarted: this.onDragStarted,\n        onDragFinished: size => this.onDragFinished(Pane.Top, size),\n        children: leftPaneComponents\n      });\n    }\n\n    return leftPaneComponents;\n  }\n\n  render() {\n    const {\n      rightPaneVisible,\n      rightPaneComponents,\n      uiState\n    } = this.props; // Limit options pane width to 90% of screen.\n\n    const styles = getStyles(config.theme); // Need to handle when width is relative. ie a percentage of the viewport\n\n    const rightPaneSize = uiState.rightPaneSize <= 1 ? uiState.rightPaneSize * window.innerWidth : uiState.rightPaneSize;\n\n    if (!rightPaneVisible) {\n      return this.renderHorizontalSplit();\n    }\n\n    return /*#__PURE__*/_jsxs(SplitPane, {\n      split: \"vertical\",\n      maxSize: -300,\n      size: rightPaneSize,\n      primary: \"second\",\n      resizerClassName: styles.resizerV,\n      onDragStarted: () => document.body.style.cursor = 'col-resize',\n      onDragFinished: size => this.onDragFinished(Pane.Right, size),\n      children: [this.renderHorizontalSplit(), rightPaneComponents]\n    });\n  }\n\n}\n\n_defineProperty(SplitPaneWrapper, \"defaultProps\", {\n  rightPaneVisible: true\n});\n\nconst getStyles = stylesFactory(theme => {\n  const handleColor = theme.palette.blue95;\n  const paneSpacing = theme.spacing.md;\n  const resizer = css`\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      transition: 0.2s border-color ease-in-out;\n    }\n\n    &::after {\n      background: ${theme.colors.panelBorder};\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transition: 0.2s background ease-in-out;\n      transform: translate(-50%, -50%);\n      border-radius: 4px;\n    }\n\n    &:hover {\n      &::before {\n        border-color: ${handleColor};\n      }\n\n      &::after {\n        background: ${handleColor};\n      }\n    }\n  `;\n  return {\n    resizerV: cx(resizer, css`\n        cursor: col-resize;\n        width: ${paneSpacing};\n\n        &::before {\n          border-right: 1px solid transparent;\n          height: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        }\n\n        &::after {\n          height: 200px;\n          width: 4px;\n        }\n      `),\n    resizerH: cx(resizer, css`\n        height: ${paneSpacing};\n        cursor: row-resize;\n        margin-left: ${paneSpacing};\n\n        &::before {\n          border-top: 1px solid transparent;\n          top: 50%;\n          transform: translateY(-50%);\n          width: 100%;\n        }\n\n        &::after {\n          height: 4px;\n          width: 200px;\n        }\n      `)\n  };\n});","map":{"version":3,"names":["css","cx","React","createRef","PureComponent","SplitPane","stylesFactory","config","Pane","SplitPaneWrapper","rafToken","current","undefined","window","cancelAnimationFrame","requestAnimationFrame","forceUpdate","pane","size","document","body","style","cursor","updateUiState","props","Top","topPaneSize","innerHeight","rightPaneSize","innerWidth","componentDidMount","addEventListener","updateSplitPaneSize","componentWillUnmount","removeEventListener","renderHorizontalSplit","leftPaneComponents","uiState","styles","getStyles","theme","Array","isArray","minHeight","resizerH","onDragStarted","onDragFinished","render","rightPaneVisible","rightPaneComponents","resizerV","Right","handleColor","palette","blue95","paneSpacing","spacing","md","resizer","colors","panelBorder"],"sources":["/home/soula/grafana/public/app/core/components/SplitPaneWrapper/SplitPaneWrapper.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { createRef, MutableRefObject, PureComponent, ReactNode } from 'react';\nimport SplitPane from 'react-split-pane';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\n\nenum Pane {\n  Right,\n  Top,\n}\n\ninterface Props {\n  leftPaneComponents: ReactNode[] | ReactNode;\n  rightPaneComponents: ReactNode;\n  uiState: { topPaneSize: number; rightPaneSize: number };\n  rightPaneVisible?: boolean;\n  updateUiState: (uiState: { topPaneSize?: number; rightPaneSize?: number }) => void;\n}\n\nexport class SplitPaneWrapper extends PureComponent<Props> {\n  rafToken: MutableRefObject<number | null> = createRef();\n  static defaultProps = {\n    rightPaneVisible: true,\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateSplitPaneSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateSplitPaneSize);\n  }\n\n  updateSplitPaneSize = () => {\n    if (this.rafToken.current !== undefined) {\n      window.cancelAnimationFrame(this.rafToken.current!);\n    }\n    this.rafToken.current = window.requestAnimationFrame(() => {\n      this.forceUpdate();\n    });\n  };\n\n  onDragFinished = (pane: Pane, size?: number) => {\n    document.body.style.cursor = 'auto';\n\n    // When the drag handle is just clicked size is undefined\n    if (!size) {\n      return;\n    }\n\n    const { updateUiState } = this.props;\n    if (pane === Pane.Top) {\n      updateUiState({\n        topPaneSize: size / window.innerHeight,\n      });\n    } else {\n      updateUiState({\n        rightPaneSize: size / window.innerWidth,\n      });\n    }\n  };\n\n  onDragStarted = () => {\n    document.body.style.cursor = 'row-resize';\n  };\n\n  renderHorizontalSplit() {\n    const { leftPaneComponents, uiState } = this.props;\n    const styles = getStyles(config.theme);\n    const topPaneSize = uiState.topPaneSize >= 1 ? uiState.topPaneSize : uiState.topPaneSize * window.innerHeight;\n\n    /*\n      Guesstimate the height of the browser window minus\n      panel toolbar and editor toolbar (~120px). This is to prevent resizing\n      the preview window beyond the browser window.\n     */\n\n    if (Array.isArray(leftPaneComponents)) {\n      return (\n        <SplitPane\n          split=\"horizontal\"\n          maxSize={-200}\n          primary=\"first\"\n          size={topPaneSize}\n          pane2Style={{ minHeight: 0 }}\n          resizerClassName={styles.resizerH}\n          onDragStarted={this.onDragStarted}\n          onDragFinished={(size) => this.onDragFinished(Pane.Top, size)}\n        >\n          {leftPaneComponents}\n        </SplitPane>\n      );\n    }\n\n    return leftPaneComponents;\n  }\n\n  render() {\n    const { rightPaneVisible, rightPaneComponents, uiState } = this.props;\n    // Limit options pane width to 90% of screen.\n    const styles = getStyles(config.theme);\n\n    // Need to handle when width is relative. ie a percentage of the viewport\n    const rightPaneSize =\n      uiState.rightPaneSize <= 1 ? uiState.rightPaneSize * window.innerWidth : uiState.rightPaneSize;\n\n    if (!rightPaneVisible) {\n      return this.renderHorizontalSplit();\n    }\n\n    return (\n      <SplitPane\n        split=\"vertical\"\n        maxSize={-300}\n        size={rightPaneSize}\n        primary=\"second\"\n        resizerClassName={styles.resizerV}\n        onDragStarted={() => (document.body.style.cursor = 'col-resize')}\n        onDragFinished={(size) => this.onDragFinished(Pane.Right, size)}\n      >\n        {this.renderHorizontalSplit()}\n        {rightPaneComponents}\n      </SplitPane>\n    );\n  }\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const handleColor = theme.palette.blue95;\n  const paneSpacing = theme.spacing.md;\n\n  const resizer = css`\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      transition: 0.2s border-color ease-in-out;\n    }\n\n    &::after {\n      background: ${theme.colors.panelBorder};\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transition: 0.2s background ease-in-out;\n      transform: translate(-50%, -50%);\n      border-radius: 4px;\n    }\n\n    &:hover {\n      &::before {\n        border-color: ${handleColor};\n      }\n\n      &::after {\n        background: ${handleColor};\n      }\n    }\n  `;\n\n  return {\n    resizerV: cx(\n      resizer,\n      css`\n        cursor: col-resize;\n        width: ${paneSpacing};\n\n        &::before {\n          border-right: 1px solid transparent;\n          height: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        }\n\n        &::after {\n          height: 200px;\n          width: 4px;\n        }\n      `\n    ),\n    resizerH: cx(\n      resizer,\n      css`\n        height: ${paneSpacing};\n        cursor: row-resize;\n        margin-left: ${paneSpacing};\n\n        &::before {\n          border-top: 1px solid transparent;\n          top: 50%;\n          transform: translateY(-50%);\n          width: 100%;\n        }\n\n        &::after {\n          height: 4px;\n          width: 200px;\n        }\n      `\n    ),\n  };\n});\n"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA6CC,aAA7C,QAA6E,OAA7E;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAGA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;IAEKC,I;;WAAAA,I;EAAAA,I,CAAAA,I;EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAaL,OAAO,MAAMC,gBAAN,SAA+BL,aAA/B,CAAoD;EAAA;IAAA;;IAAA,+CACbD,SAAS,EADI;;IAAA,6CAcnC,MAAM;MAC1B,IAAI,KAAKO,QAAL,CAAcC,OAAd,KAA0BC,SAA9B,EAAyC;QACvCC,MAAM,CAACC,oBAAP,CAA4B,KAAKJ,QAAL,CAAcC,OAA1C;MACD;;MACD,KAAKD,QAAL,CAAcC,OAAd,GAAwBE,MAAM,CAACE,qBAAP,CAA6B,MAAM;QACzD,KAAKC,WAAL;MACD,CAFuB,CAAxB;IAGD,CArBwD;;IAAA,wCAuBxC,CAACC,IAAD,EAAaC,IAAb,KAA+B;MAC9CC,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,MAA7B,CAD8C,CAG9C;;MACA,IAAI,CAACJ,IAAL,EAAW;QACT;MACD;;MAED,MAAM;QAAEK;MAAF,IAAoB,KAAKC,KAA/B;;MACA,IAAIP,IAAI,KAAKT,IAAI,CAACiB,GAAlB,EAAuB;QACrBF,aAAa,CAAC;UACZG,WAAW,EAAER,IAAI,GAAGL,MAAM,CAACc;QADf,CAAD,CAAb;MAGD,CAJD,MAIO;QACLJ,aAAa,CAAC;UACZK,aAAa,EAAEV,IAAI,GAAGL,MAAM,CAACgB;QADjB,CAAD,CAAb;MAGD;IACF,CAzCwD;;IAAA,uCA2CzC,MAAM;MACpBV,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,YAA7B;IACD,CA7CwD;EAAA;;EAMzDQ,iBAAiB,GAAG;IAClBjB,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,mBAAvC;EACD;;EAEDC,oBAAoB,GAAG;IACrBpB,MAAM,CAACqB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,mBAA1C;EACD;;EAmCDG,qBAAqB,GAAG;IACtB,MAAM;MAAEC,kBAAF;MAAsBC;IAAtB,IAAkC,KAAKb,KAA7C;IACA,MAAMc,MAAM,GAAGC,SAAS,CAAChC,MAAM,CAACiC,KAAR,CAAxB;IACA,MAAMd,WAAW,GAAGW,OAAO,CAACX,WAAR,IAAuB,CAAvB,GAA2BW,OAAO,CAACX,WAAnC,GAAiDW,OAAO,CAACX,WAAR,GAAsBb,MAAM,CAACc,WAAlG;IAEA;AACJ;AACA;AACA;AACA;;IAEI,IAAIc,KAAK,CAACC,OAAN,CAAcN,kBAAd,CAAJ,EAAuC;MACrC,oBACE,KAAC,SAAD;QACE,KAAK,EAAC,YADR;QAEE,OAAO,EAAE,CAAC,GAFZ;QAGE,OAAO,EAAC,OAHV;QAIE,IAAI,EAAEV,WAJR;QAKE,UAAU,EAAE;UAAEiB,SAAS,EAAE;QAAb,CALd;QAME,gBAAgB,EAAEL,MAAM,CAACM,QAN3B;QAOE,aAAa,EAAE,KAAKC,aAPtB;QAQE,cAAc,EAAG3B,IAAD,IAAU,KAAK4B,cAAL,CAAoBtC,IAAI,CAACiB,GAAzB,EAA8BP,IAA9B,CAR5B;QAAA,UAUGkB;MAVH,EADF;IAcD;;IAED,OAAOA,kBAAP;EACD;;EAEDW,MAAM,GAAG;IACP,MAAM;MAAEC,gBAAF;MAAoBC,mBAApB;MAAyCZ;IAAzC,IAAqD,KAAKb,KAAhE,CADO,CAEP;;IACA,MAAMc,MAAM,GAAGC,SAAS,CAAChC,MAAM,CAACiC,KAAR,CAAxB,CAHO,CAKP;;IACA,MAAMZ,aAAa,GACjBS,OAAO,CAACT,aAAR,IAAyB,CAAzB,GAA6BS,OAAO,CAACT,aAAR,GAAwBf,MAAM,CAACgB,UAA5D,GAAyEQ,OAAO,CAACT,aADnF;;IAGA,IAAI,CAACoB,gBAAL,EAAuB;MACrB,OAAO,KAAKb,qBAAL,EAAP;IACD;;IAED,oBACE,MAAC,SAAD;MACE,KAAK,EAAC,UADR;MAEE,OAAO,EAAE,CAAC,GAFZ;MAGE,IAAI,EAAEP,aAHR;MAIE,OAAO,EAAC,QAJV;MAKE,gBAAgB,EAAEU,MAAM,CAACY,QAL3B;MAME,aAAa,EAAE,MAAO/B,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,YANrD;MAOE,cAAc,EAAGJ,IAAD,IAAU,KAAK4B,cAAL,CAAoBtC,IAAI,CAAC2C,KAAzB,EAAgCjC,IAAhC,CAP5B;MAAA,WASG,KAAKiB,qBAAL,EATH,EAUGc,mBAVH;IAAA,EADF;EAcD;;AAzGwD;;gBAA9CxC,gB,kBAEW;EACpBuC,gBAAgB,EAAE;AADE,C;;AA0GxB,MAAMT,SAAS,GAAGjC,aAAa,CAAEkC,KAAD,IAAyB;EACvD,MAAMY,WAAW,GAAGZ,KAAK,CAACa,OAAN,CAAcC,MAAlC;EACA,MAAMC,WAAW,GAAGf,KAAK,CAACgB,OAAN,CAAcC,EAAlC;EAEA,MAAMC,OAAO,GAAG1D,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBwC,KAAK,CAACmB,MAAN,CAAaC,WAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBR,WAAY;AACpC;AACA;AACA;AACA,sBAAsBA,WAAY;AAClC;AACA;AACA,GA7BE;EA+BA,OAAO;IACLF,QAAQ,EAAEjD,EAAE,CACVyD,OADU,EAEV1D,GAAI;AACV;AACA,iBAAiBuD,WAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAjBgB,CADP;IAoBLX,QAAQ,EAAE3C,EAAE,CACVyD,OADU,EAEV1D,GAAI;AACV,kBAAkBuD,WAAY;AAC9B;AACA,uBAAuBA,WAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAlBgB;EApBP,CAAP;AAyCD,CA5E8B,CAA/B"},"metadata":{},"sourceType":"module"}