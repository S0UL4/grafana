{"ast":null,"code":"var _i, _p;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { Button, useStyles2 } from '@grafana/ui';\nimport { Authorize } from '../../components/Authorize';\nimport { getNotificationsPermissions } from '../../utils/access-control';\nimport { AmRootRouteForm } from './AmRootRouteForm';\nimport { AmRootRouteRead } from './AmRootRouteRead';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AmRootRoute = ({\n  isEditMode,\n  onSave,\n  onEnterEditMode,\n  onExitEditMode,\n  receivers,\n  routes,\n  alertManagerSourceName,\n  readOnly = false\n}) => {\n  const styles = useStyles2(getStyles);\n  const permissions = getNotificationsPermissions(alertManagerSourceName);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    \"data-testid\": \"am-root-route-container\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.titleContainer,\n      children: [/*#__PURE__*/_jsxs(\"h5\", {\n        className: styles.title,\n        children: [\"Root policy - \", _i || (_i = /*#__PURE__*/_jsx(\"i\", {\n          children: \"default for all alerts\"\n        }))]\n      }), !isEditMode && !readOnly && /*#__PURE__*/_jsx(Authorize, {\n        actions: [permissions.update],\n        children: /*#__PURE__*/_jsx(Button, {\n          icon: \"pen\",\n          onClick: onEnterEditMode,\n          size: \"sm\",\n          type: \"button\",\n          variant: \"secondary\",\n          children: \"Edit\"\n        })\n      })]\n    }), _p || (_p = /*#__PURE__*/_jsx(\"p\", {\n      children: \"All alerts will go to the default contact point, unless you set additional matchers in the specific routing area.\"\n    })), isEditMode ? /*#__PURE__*/_jsx(AmRootRouteForm, {\n      alertManagerSourceName: alertManagerSourceName,\n      onCancel: onExitEditMode,\n      onSave: onSave,\n      receivers: receivers,\n      routes: routes\n    }) : /*#__PURE__*/_jsx(AmRootRouteRead, {\n      routes: routes\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      background-color: ${theme.colors.background.secondary};\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(2)};\n    `,\n    titleContainer: css`\n      color: ${theme.colors.text.primary};\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n    title: css`\n      flex: 100%;\n    `\n  };\n};","map":{"version":3,"names":["css","React","Button","useStyles2","Authorize","getNotificationsPermissions","AmRootRouteForm","AmRootRouteRead","AmRootRoute","isEditMode","onSave","onEnterEditMode","onExitEditMode","receivers","routes","alertManagerSourceName","readOnly","styles","getStyles","permissions","container","titleContainer","title","update","theme","colors","background","secondary","text","spacing","primary"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/amroutes/AmRootRoute.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport { Authorize } from '../../components/Authorize';\nimport { AmRouteReceiver, FormAmRoute } from '../../types/amroutes';\nimport { getNotificationsPermissions } from '../../utils/access-control';\n\nimport { AmRootRouteForm } from './AmRootRouteForm';\nimport { AmRootRouteRead } from './AmRootRouteRead';\n\nexport interface AmRootRouteProps {\n  isEditMode: boolean;\n  onEnterEditMode: () => void;\n  onExitEditMode: () => void;\n  onSave: (data: Partial<FormAmRoute>) => void;\n  receivers: AmRouteReceiver[];\n  routes: FormAmRoute;\n  alertManagerSourceName: string;\n  readOnly?: boolean;\n}\n\nexport const AmRootRoute: FC<AmRootRouteProps> = ({\n  isEditMode,\n  onSave,\n  onEnterEditMode,\n  onExitEditMode,\n  receivers,\n  routes,\n  alertManagerSourceName,\n  readOnly = false,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const permissions = getNotificationsPermissions(alertManagerSourceName);\n\n  return (\n    <div className={styles.container} data-testid=\"am-root-route-container\">\n      <div className={styles.titleContainer}>\n        <h5 className={styles.title}>\n          Root policy - <i>default for all alerts</i>\n        </h5>\n        {!isEditMode && !readOnly && (\n          <Authorize actions={[permissions.update]}>\n            <Button icon=\"pen\" onClick={onEnterEditMode} size=\"sm\" type=\"button\" variant=\"secondary\">\n              Edit\n            </Button>\n          </Authorize>\n        )}\n      </div>\n      <p>\n        All alerts will go to the default contact point, unless you set additional matchers in the specific routing\n        area.\n      </p>\n      {isEditMode ? (\n        <AmRootRouteForm\n          alertManagerSourceName={alertManagerSourceName}\n          onCancel={onExitEditMode}\n          onSave={onSave}\n          receivers={receivers}\n          routes={routes}\n        />\n      ) : (\n        <AmRootRouteRead routes={routes} />\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      background-color: ${theme.colors.background.secondary};\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(2)};\n    `,\n    titleContainer: css`\n      color: ${theme.colors.text.primary};\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n    title: css`\n      flex: 100%;\n    `,\n  };\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AAEA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,SAASC,2BAAT,QAA4C,4BAA5C;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAaA,OAAO,MAAMC,WAAiC,GAAG,CAAC;EAChDC,UADgD;EAEhDC,MAFgD;EAGhDC,eAHgD;EAIhDC,cAJgD;EAKhDC,SALgD;EAMhDC,MANgD;EAOhDC,sBAPgD;EAQhDC,QAAQ,GAAG;AARqC,CAAD,KAS3C;EACJ,MAAMC,MAAM,GAAGd,UAAU,CAACe,SAAD,CAAzB;EAEA,MAAMC,WAAW,GAAGd,2BAA2B,CAACU,sBAAD,CAA/C;EAEA,oBACE;IAAK,SAAS,EAAEE,MAAM,CAACG,SAAvB;IAAkC,eAAY,yBAA9C;IAAA,wBACE;MAAK,SAAS,EAAEH,MAAM,CAACI,cAAvB;MAAA,wBACE;QAAI,SAAS,EAAEJ,MAAM,CAACK,KAAtB;QAAA,sDACgB;UAAA;QAAA,EADhB;MAAA,EADF,EAIG,CAACb,UAAD,IAAe,CAACO,QAAhB,iBACC,KAAC,SAAD;QAAW,OAAO,EAAE,CAACG,WAAW,CAACI,MAAb,CAApB;QAAA,uBACE,KAAC,MAAD;UAAQ,IAAI,EAAC,KAAb;UAAmB,OAAO,EAAEZ,eAA5B;UAA6C,IAAI,EAAC,IAAlD;UAAuD,IAAI,EAAC,QAA5D;UAAqE,OAAO,EAAC,WAA7E;UAAA;QAAA;MADF,EALJ;IAAA,EADF,2BAaE;MAAA;IAAA,EAbF,GAiBGF,UAAU,gBACT,KAAC,eAAD;MACE,sBAAsB,EAAEM,sBAD1B;MAEE,QAAQ,EAAEH,cAFZ;MAGE,MAAM,EAAEF,MAHV;MAIE,SAAS,EAAEG,SAJb;MAKE,MAAM,EAAEC;IALV,EADS,gBAST,KAAC,eAAD;MAAiB,MAAM,EAAEA;IAAzB,EA1BJ;EAAA,EADF;AA+BD,CA7CM;;AA+CP,MAAMI,SAAS,GAAIM,KAAD,IAA0B;EAC1C,OAAO;IACLJ,SAAS,EAAEpB,GAAI;AACnB,0BAA0BwB,KAAK,CAACC,MAAN,CAAaC,UAAb,CAAwBC,SAAU;AAC5D,eAAeH,KAAK,CAACC,MAAN,CAAaG,IAAb,CAAkBD,SAAU;AAC3C,iBAAiBH,KAAK,CAACK,OAAN,CAAc,CAAd,CAAiB;AAClC,KALS;IAMLR,cAAc,EAAErB,GAAI;AACxB,eAAewB,KAAK,CAACC,MAAN,CAAaG,IAAb,CAAkBE,OAAQ;AACzC;AACA;AACA,KAVS;IAWLR,KAAK,EAAEtB,GAAI;AACf;AACA;EAbS,CAAP;AAeD,CAhBD"},"metadata":{},"sourceType":"module"}