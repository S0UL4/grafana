{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { AccessControlAction } from 'app/types';\nimport { isCloudRulesSource, isGrafanaRulesSource } from '../../utils/datasource';\nimport { Authorize } from '../Authorize';\nimport { CloudRules } from './CloudRules';\nimport { GrafanaRules } from './GrafanaRules';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const RuleListGroupView = ({\n  namespaces,\n  expandAll\n}) => {\n  const [grafanaNamespaces, cloudNamespaces] = useMemo(() => {\n    const sorted = namespaces.map(namespace => Object.assign({}, namespace, {\n      groups: namespace.groups.sort((a, b) => a.name.localeCompare(b.name))\n    })).sort((a, b) => a.name.localeCompare(b.name));\n    return [sorted.filter(ns => isGrafanaRulesSource(ns.rulesSource)), sorted.filter(ns => isCloudRulesSource(ns.rulesSource))];\n  }, [namespaces]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Authorize, {\n      actions: [AccessControlAction.AlertingRuleRead],\n      children: /*#__PURE__*/_jsx(GrafanaRules, {\n        namespaces: grafanaNamespaces,\n        expandAll: expandAll\n      })\n    }), /*#__PURE__*/_jsx(Authorize, {\n      actions: [AccessControlAction.AlertingRuleExternalRead],\n      children: /*#__PURE__*/_jsx(CloudRules, {\n        namespaces: cloudNamespaces,\n        expandAll: expandAll\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","useMemo","AccessControlAction","isCloudRulesSource","isGrafanaRulesSource","Authorize","CloudRules","GrafanaRules","RuleListGroupView","namespaces","expandAll","grafanaNamespaces","cloudNamespaces","sorted","map","namespace","groups","sort","a","b","name","localeCompare","filter","ns","rulesSource","AlertingRuleRead","AlertingRuleExternalRead"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleListGroupView.tsx"],"sourcesContent":["import React, { FC, useMemo } from 'react';\n\nimport { AccessControlAction } from 'app/types';\nimport { CombinedRuleNamespace } from 'app/types/unified-alerting';\n\nimport { isCloudRulesSource, isGrafanaRulesSource } from '../../utils/datasource';\nimport { Authorize } from '../Authorize';\n\nimport { CloudRules } from './CloudRules';\nimport { GrafanaRules } from './GrafanaRules';\n\ninterface Props {\n  namespaces: CombinedRuleNamespace[];\n  expandAll: boolean;\n}\n\nexport const RuleListGroupView: FC<Props> = ({ namespaces, expandAll }) => {\n  const [grafanaNamespaces, cloudNamespaces] = useMemo(() => {\n    const sorted = namespaces\n      .map((namespace) => ({\n        ...namespace,\n        groups: namespace.groups.sort((a, b) => a.name.localeCompare(b.name)),\n      }))\n      .sort((a, b) => a.name.localeCompare(b.name));\n    return [\n      sorted.filter((ns) => isGrafanaRulesSource(ns.rulesSource)),\n      sorted.filter((ns) => isCloudRulesSource(ns.rulesSource)),\n    ];\n  }, [namespaces]);\n\n  return (\n    <>\n      <Authorize actions={[AccessControlAction.AlertingRuleRead]}>\n        <GrafanaRules namespaces={grafanaNamespaces} expandAll={expandAll} />\n      </Authorize>\n      <Authorize actions={[AccessControlAction.AlertingRuleExternalRead]}>\n        <CloudRules namespaces={cloudNamespaces} expandAll={expandAll} />\n      </Authorize>\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAEA,SAASC,mBAAT,QAAoC,WAApC;AAGA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,wBAAzD;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AAOA,OAAO,MAAMC,iBAA4B,GAAG,CAAC;EAAEC,UAAF;EAAcC;AAAd,CAAD,KAA+B;EACzE,MAAM,CAACC,iBAAD,EAAoBC,eAApB,IAAuCX,OAAO,CAAC,MAAM;IACzD,MAAMY,MAAM,GAAGJ,UAAU,CACtBK,GADY,CACPC,SAAD,sBACAA,SADA;MAEHC,MAAM,EAAED,SAAS,CAACC,MAAV,CAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAhC;IAFL,EADQ,EAKZH,IALY,CAKP,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CALH,CAAf;IAMA,OAAO,CACLP,MAAM,CAACS,MAAP,CAAeC,EAAD,IAAQnB,oBAAoB,CAACmB,EAAE,CAACC,WAAJ,CAA1C,CADK,EAELX,MAAM,CAACS,MAAP,CAAeC,EAAD,IAAQpB,kBAAkB,CAACoB,EAAE,CAACC,WAAJ,CAAxC,CAFK,CAAP;EAID,CAXmD,EAWjD,CAACf,UAAD,CAXiD,CAApD;EAaA,oBACE;IAAA,wBACE,KAAC,SAAD;MAAW,OAAO,EAAE,CAACP,mBAAmB,CAACuB,gBAArB,CAApB;MAAA,uBACE,KAAC,YAAD;QAAc,UAAU,EAAEd,iBAA1B;QAA6C,SAAS,EAAED;MAAxD;IADF,EADF,eAIE,KAAC,SAAD;MAAW,OAAO,EAAE,CAACR,mBAAmB,CAACwB,wBAArB,CAApB;MAAA,uBACE,KAAC,UAAD;QAAY,UAAU,EAAEd,eAAxB;QAAyC,SAAS,EAAEF;MAApD;IADF,EAJF;EAAA,EADF;AAUD,CAxBM"},"metadata":{},"sourceType":"module"}