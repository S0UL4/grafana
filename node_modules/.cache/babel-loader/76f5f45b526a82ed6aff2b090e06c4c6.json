{"ast":null,"code":"var _Label, _InlineLabel;\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { Button, Field, FieldArray, Input, InlineLabel, Label, useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst LabelsField = ({\n  className\n}) => {\n  const styles = useStyles(getStyles);\n  const {\n    register,\n    control,\n    watch,\n    formState: {\n      errors\n    }\n  } = useFormContext();\n  const labels = watch('labels');\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(className, styles.wrapper),\n    children: [_Label || (_Label = /*#__PURE__*/_jsx(Label, {\n      children: \"Custom Labels\"\n    })), /*#__PURE__*/_jsx(FieldArray, {\n      control: control,\n      name: \"labels\",\n      children: ({\n        fields,\n        append,\n        remove\n      }) => {\n        return /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.flexRow,\n            children: [_InlineLabel || (_InlineLabel = /*#__PURE__*/_jsx(InlineLabel, {\n              width: 18,\n              children: \"Labels\"\n            })), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.flexColumn,\n              children: [fields.map((field, index) => {\n                var _errors$labels, _errors$labels$index, _errors$labels$index$, _errors$labels2, _errors$labels2$index, _errors$labels2$index2, _labels$index, _errors$labels3, _errors$labels3$index, _errors$labels3$index2, _errors$labels4, _errors$labels4$index, _errors$labels4$index2, _labels$index2;\n\n                return /*#__PURE__*/_jsx(\"div\", {\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: cx(styles.flexRow, styles.centerAlignRow),\n                    children: [/*#__PURE__*/_jsx(Field, {\n                      className: styles.labelInput,\n                      invalid: !!((_errors$labels = errors.labels) !== null && _errors$labels !== void 0 && (_errors$labels$index = _errors$labels[index]) !== null && _errors$labels$index !== void 0 && (_errors$labels$index$ = _errors$labels$index.key) !== null && _errors$labels$index$ !== void 0 && _errors$labels$index$.message),\n                      error: (_errors$labels2 = errors.labels) === null || _errors$labels2 === void 0 ? void 0 : (_errors$labels2$index = _errors$labels2[index]) === null || _errors$labels2$index === void 0 ? void 0 : (_errors$labels2$index2 = _errors$labels2$index.key) === null || _errors$labels2$index2 === void 0 ? void 0 : _errors$labels2$index2.message,\n                      children: /*#__PURE__*/_jsx(Input, Object.assign({}, register(`labels[${index}].key`, {\n                        required: {\n                          value: !!((_labels$index = labels[index]) !== null && _labels$index !== void 0 && _labels$index.value),\n                          message: 'Required.'\n                        }\n                      }), {\n                        placeholder: \"key\",\n                        \"data-testid\": `label-key-${index}`,\n                        defaultValue: field.key\n                      }))\n                    }), /*#__PURE__*/_jsx(InlineLabel, {\n                      className: styles.equalSign,\n                      children: \"=\"\n                    }), /*#__PURE__*/_jsx(Field, {\n                      className: styles.labelInput,\n                      invalid: !!((_errors$labels3 = errors.labels) !== null && _errors$labels3 !== void 0 && (_errors$labels3$index = _errors$labels3[index]) !== null && _errors$labels3$index !== void 0 && (_errors$labels3$index2 = _errors$labels3$index.value) !== null && _errors$labels3$index2 !== void 0 && _errors$labels3$index2.message),\n                      error: (_errors$labels4 = errors.labels) === null || _errors$labels4 === void 0 ? void 0 : (_errors$labels4$index = _errors$labels4[index]) === null || _errors$labels4$index === void 0 ? void 0 : (_errors$labels4$index2 = _errors$labels4$index.value) === null || _errors$labels4$index2 === void 0 ? void 0 : _errors$labels4$index2.message,\n                      children: /*#__PURE__*/_jsx(Input, Object.assign({}, register(`labels[${index}].value`, {\n                        required: {\n                          value: !!((_labels$index2 = labels[index]) !== null && _labels$index2 !== void 0 && _labels$index2.key),\n                          message: 'Required.'\n                        }\n                      }), {\n                        placeholder: \"value\",\n                        \"data-testid\": `label-value-${index}`,\n                        defaultValue: field.value\n                      }))\n                    }), /*#__PURE__*/_jsx(Button, {\n                      className: styles.deleteLabelButton,\n                      \"aria-label\": \"delete label\",\n                      icon: \"trash-alt\",\n                      variant: \"secondary\",\n                      onClick: () => {\n                        remove(index);\n                      }\n                    })]\n                  })\n                }, field.id);\n              }), /*#__PURE__*/_jsx(Button, {\n                className: styles.addLabelButton,\n                icon: \"plus-circle\",\n                type: \"button\",\n                variant: \"secondary\",\n                onClick: () => {\n                  append({});\n                },\n                children: \"Add label\"\n              })]\n            })]\n          })\n        });\n      }\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing.xl};\n    `,\n    flexColumn: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      & + button {\n        margin-left: ${theme.spacing.xs};\n      }\n    `,\n    deleteLabelButton: css`\n      margin-left: ${theme.spacing.xs};\n      align-self: flex-start;\n    `,\n    addLabelButton: css`\n      flex-grow: 0;\n      align-self: flex-start;\n    `,\n    centerAlignRow: css`\n      align-items: baseline;\n    `,\n    equalSign: css`\n      align-self: flex-start;\n      width: 28px;\n      justify-content: center;\n      margin-left: ${theme.spacing.xs};\n    `,\n    labelInput: css`\n      width: 175px;\n      margin-bottom: ${theme.spacing.sm};\n      & + & {\n        margin-left: ${theme.spacing.sm};\n      }\n    `\n  };\n};\n\nexport default LabelsField;","map":{"version":3,"names":["css","cx","React","useFormContext","Button","Field","FieldArray","Input","InlineLabel","Label","useStyles","LabelsField","className","styles","getStyles","register","control","watch","formState","errors","labels","wrapper","fields","append","remove","flexRow","flexColumn","map","field","index","centerAlignRow","labelInput","key","message","required","value","equalSign","deleteLabelButton","id","addLabelButton","theme","spacing","xl","xs","sm"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-editor/LabelsField.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Button, Field, FieldArray, Input, InlineLabel, Label, useStyles } from '@grafana/ui';\n\ninterface Props {\n  className?: string;\n}\n\nconst LabelsField: FC<Props> = ({ className }) => {\n  const styles = useStyles(getStyles);\n  const {\n    register,\n    control,\n    watch,\n    formState: { errors },\n  } = useFormContext();\n  const labels = watch('labels');\n  return (\n    <div className={cx(className, styles.wrapper)}>\n      <Label>Custom Labels</Label>\n      <FieldArray control={control} name=\"labels\">\n        {({ fields, append, remove }) => {\n          return (\n            <>\n              <div className={styles.flexRow}>\n                <InlineLabel width={18}>Labels</InlineLabel>\n                <div className={styles.flexColumn}>\n                  {fields.map((field, index) => {\n                    return (\n                      <div key={field.id}>\n                        <div className={cx(styles.flexRow, styles.centerAlignRow)}>\n                          <Field\n                            className={styles.labelInput}\n                            invalid={!!errors.labels?.[index]?.key?.message}\n                            error={errors.labels?.[index]?.key?.message}\n                          >\n                            <Input\n                              {...register(`labels[${index}].key`, {\n                                required: { value: !!labels[index]?.value, message: 'Required.' },\n                              })}\n                              placeholder=\"key\"\n                              data-testid={`label-key-${index}`}\n                              defaultValue={field.key}\n                            />\n                          </Field>\n                          <InlineLabel className={styles.equalSign}>=</InlineLabel>\n                          <Field\n                            className={styles.labelInput}\n                            invalid={!!errors.labels?.[index]?.value?.message}\n                            error={errors.labels?.[index]?.value?.message}\n                          >\n                            <Input\n                              {...register(`labels[${index}].value`, {\n                                required: { value: !!labels[index]?.key, message: 'Required.' },\n                              })}\n                              placeholder=\"value\"\n                              data-testid={`label-value-${index}`}\n                              defaultValue={field.value}\n                            />\n                          </Field>\n                          <Button\n                            className={styles.deleteLabelButton}\n                            aria-label=\"delete label\"\n                            icon=\"trash-alt\"\n                            variant=\"secondary\"\n                            onClick={() => {\n                              remove(index);\n                            }}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n                  <Button\n                    className={styles.addLabelButton}\n                    icon=\"plus-circle\"\n                    type=\"button\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                      append({});\n                    }}\n                  >\n                    Add label\n                  </Button>\n                </div>\n              </div>\n            </>\n          );\n        }}\n      </FieldArray>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing.xl};\n    `,\n    flexColumn: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      & + button {\n        margin-left: ${theme.spacing.xs};\n      }\n    `,\n    deleteLabelButton: css`\n      margin-left: ${theme.spacing.xs};\n      align-self: flex-start;\n    `,\n    addLabelButton: css`\n      flex-grow: 0;\n      align-self: flex-start;\n    `,\n    centerAlignRow: css`\n      align-items: baseline;\n    `,\n    equalSign: css`\n      align-self: flex-start;\n      width: 28px;\n      justify-content: center;\n      margin-left: ${theme.spacing.xs};\n    `,\n    labelInput: css`\n      width: 175px;\n      margin-bottom: ${theme.spacing.sm};\n      & + & {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n  };\n};\n\nexport default LabelsField;\n"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,KAApC,EAA2CC,WAA3C,EAAwDC,KAAxD,EAA+DC,SAA/D,QAAgF,aAAhF;;;;;AAMA,MAAMC,WAAsB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAmB;EAChD,MAAMC,MAAM,GAAGH,SAAS,CAACI,SAAD,CAAxB;EACA,MAAM;IACJC,QADI;IAEJC,OAFI;IAGJC,KAHI;IAIJC,SAAS,EAAE;MAAEC;IAAF;EAJP,IAKFhB,cAAc,EALlB;EAMA,MAAMiB,MAAM,GAAGH,KAAK,CAAC,QAAD,CAApB;EACA,oBACE;IAAK,SAAS,EAAEhB,EAAE,CAACW,SAAD,EAAYC,MAAM,CAACQ,OAAnB,CAAlB;IAAA,4CACE,KAAC,KAAD;MAAA;IAAA,EADF,gBAEE,KAAC,UAAD;MAAY,OAAO,EAAEL,OAArB;MAA8B,IAAI,EAAC,QAAnC;MAAA,UACG,CAAC;QAAEM,MAAF;QAAUC,MAAV;QAAkBC;MAAlB,CAAD,KAAgC;QAC/B,oBACE;UAAA,uBACE;YAAK,SAAS,EAAEX,MAAM,CAACY,OAAvB;YAAA,wDACE,KAAC,WAAD;cAAa,KAAK,EAAE,EAApB;cAAA;YAAA,EADF,gBAEE;cAAK,SAAS,EAAEZ,MAAM,CAACa,UAAvB;cAAA,WACGJ,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;gBAAA;;gBAC5B,oBACE;kBAAA,uBACE;oBAAK,SAAS,EAAE5B,EAAE,CAACY,MAAM,CAACY,OAAR,EAAiBZ,MAAM,CAACiB,cAAxB,CAAlB;oBAAA,wBACE,KAAC,KAAD;sBACE,SAAS,EAAEjB,MAAM,CAACkB,UADpB;sBAEE,OAAO,EAAE,CAAC,oBAACZ,MAAM,CAACC,MAAR,mEAAC,eAAgBS,KAAhB,CAAD,0EAAC,qBAAwBG,GAAzB,kDAAC,sBAA6BC,OAA9B,CAFZ;sBAGE,KAAK,qBAAEd,MAAM,CAACC,MAAT,6EAAE,gBAAgBS,KAAhB,CAAF,oFAAE,sBAAwBG,GAA1B,2DAAE,uBAA6BC,OAHtC;sBAAA,uBAKE,KAAC,KAAD,oBACMlB,QAAQ,CAAE,UAASc,KAAM,OAAjB,EAAyB;wBACnCK,QAAQ,EAAE;0BAAEC,KAAK,EAAE,CAAC,mBAACf,MAAM,CAACS,KAAD,CAAP,0CAAC,cAAeM,KAAhB,CAAV;0BAAiCF,OAAO,EAAE;wBAA1C;sBADyB,CAAzB,CADd;wBAIE,WAAW,EAAC,KAJd;wBAKE,eAAc,aAAYJ,KAAM,EALlC;wBAME,YAAY,EAAED,KAAK,CAACI;sBANtB;oBALF,EADF,eAeE,KAAC,WAAD;sBAAa,SAAS,EAAEnB,MAAM,CAACuB,SAA/B;sBAAA;oBAAA,EAfF,eAgBE,KAAC,KAAD;sBACE,SAAS,EAAEvB,MAAM,CAACkB,UADpB;sBAEE,OAAO,EAAE,CAAC,qBAACZ,MAAM,CAACC,MAAR,qEAAC,gBAAgBS,KAAhB,CAAD,4EAAC,sBAAwBM,KAAzB,mDAAC,uBAA+BF,OAAhC,CAFZ;sBAGE,KAAK,qBAAEd,MAAM,CAACC,MAAT,6EAAE,gBAAgBS,KAAhB,CAAF,oFAAE,sBAAwBM,KAA1B,2DAAE,uBAA+BF,OAHxC;sBAAA,uBAKE,KAAC,KAAD,oBACMlB,QAAQ,CAAE,UAASc,KAAM,SAAjB,EAA2B;wBACrCK,QAAQ,EAAE;0BAAEC,KAAK,EAAE,CAAC,oBAACf,MAAM,CAACS,KAAD,CAAP,2CAAC,eAAeG,GAAhB,CAAV;0BAA+BC,OAAO,EAAE;wBAAxC;sBAD2B,CAA3B,CADd;wBAIE,WAAW,EAAC,OAJd;wBAKE,eAAc,eAAcJ,KAAM,EALpC;wBAME,YAAY,EAAED,KAAK,CAACO;sBANtB;oBALF,EAhBF,eA8BE,KAAC,MAAD;sBACE,SAAS,EAAEtB,MAAM,CAACwB,iBADpB;sBAEE,cAAW,cAFb;sBAGE,IAAI,EAAC,WAHP;sBAIE,OAAO,EAAC,WAJV;sBAKE,OAAO,EAAE,MAAM;wBACbb,MAAM,CAACK,KAAD,CAAN;sBACD;oBAPH,EA9BF;kBAAA;gBADF,GAAUD,KAAK,CAACU,EAAhB,CADF;cA4CD,CA7CA,CADH,eA+CE,KAAC,MAAD;gBACE,SAAS,EAAEzB,MAAM,CAAC0B,cADpB;gBAEE,IAAI,EAAC,aAFP;gBAGE,IAAI,EAAC,QAHP;gBAIE,OAAO,EAAC,WAJV;gBAKE,OAAO,EAAE,MAAM;kBACbhB,MAAM,CAAC,EAAD,CAAN;gBACD,CAPH;gBAAA;cAAA,EA/CF;YAAA,EAFF;UAAA;QADF,EADF;MAkED;IApEH,EAFF;EAAA,EADF;AA2ED,CApFD;;AAsFA,MAAMT,SAAS,GAAI0B,KAAD,IAAyB;EACzC,OAAO;IACLnB,OAAO,EAAErB,GAAI;AACjB,uBAAuBwC,KAAK,CAACC,OAAN,CAAcC,EAAG;AACxC,KAHS;IAILhB,UAAU,EAAE1B,GAAI;AACpB;AACA;AACA,KAPS;IAQLyB,OAAO,EAAEzB,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA,uBAAuBwC,KAAK,CAACC,OAAN,CAAcE,EAAG;AACxC;AACA,KAhBS;IAiBLN,iBAAiB,EAAErC,GAAI;AAC3B,qBAAqBwC,KAAK,CAACC,OAAN,CAAcE,EAAG;AACtC;AACA,KApBS;IAqBLJ,cAAc,EAAEvC,GAAI;AACxB;AACA;AACA,KAxBS;IAyBL8B,cAAc,EAAE9B,GAAI;AACxB;AACA,KA3BS;IA4BLoC,SAAS,EAAEpC,GAAI;AACnB;AACA;AACA;AACA,qBAAqBwC,KAAK,CAACC,OAAN,CAAcE,EAAG;AACtC,KAjCS;IAkCLZ,UAAU,EAAE/B,GAAI;AACpB;AACA,uBAAuBwC,KAAK,CAACC,OAAN,CAAcG,EAAG;AACxC;AACA,uBAAuBJ,KAAK,CAACC,OAAN,CAAcG,EAAG;AACxC;AACA;EAxCS,CAAP;AA0CD,CA3CD;;AA6CA,eAAejC,WAAf"},"metadata":{},"sourceType":"module"}