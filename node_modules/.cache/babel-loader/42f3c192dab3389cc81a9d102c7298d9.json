{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Tooltip, useStyles } from '@grafana/ui';\nimport { annotationLabels } from '../utils/constants';\nimport { DetailsField } from './DetailsField';\nimport { Well } from './Well';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst wellableAnnotationKeys = ['message', 'description'];\nexport const AnnotationDetailsField = ({\n  annotationKey,\n  value\n}) => {\n  const label = annotationLabels[annotationKey] ? /*#__PURE__*/_jsx(Tooltip, {\n    content: annotationKey,\n    placement: \"top\",\n    theme: \"info\",\n    children: /*#__PURE__*/_jsx(\"span\", {\n      children: annotationLabels[annotationKey]\n    })\n  }) : annotationKey;\n  return /*#__PURE__*/_jsx(DetailsField, {\n    label: label,\n    horizontal: true,\n    children: /*#__PURE__*/_jsx(AnnotationValue, {\n      annotationKey: annotationKey,\n      value: value\n    })\n  });\n};\n\nconst AnnotationValue = ({\n  annotationKey,\n  value\n}) => {\n  const styles = useStyles(getStyles);\n  const needsWell = wellableAnnotationKeys.includes(annotationKey);\n  const needsLink = value && value.startsWith('http');\n\n  if (needsWell) {\n    return /*#__PURE__*/_jsx(Well, {\n      className: styles.well,\n      children: value\n    });\n  }\n\n  if (needsLink) {\n    return /*#__PURE__*/_jsx(\"a\", {\n      href: value,\n      target: \"__blank\",\n      className: styles.link,\n      children: value\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: value\n  });\n};\n\nexport const getStyles = theme => ({\n  well: css`\n    word-break: break-all;\n  `,\n  link: css`\n    word-break: break-all;\n    color: ${theme.colors.textBlue};\n  `\n});","map":{"version":3,"names":["css","React","Tooltip","useStyles","annotationLabels","DetailsField","Well","wellableAnnotationKeys","AnnotationDetailsField","annotationKey","value","label","AnnotationValue","styles","getStyles","needsWell","includes","needsLink","startsWith","well","link","theme","colors","textBlue"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/AnnotationDetailsField.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Tooltip, useStyles } from '@grafana/ui';\n\nimport { Annotation, annotationLabels } from '../utils/constants';\n\nimport { DetailsField } from './DetailsField';\nimport { Well } from './Well';\n\nconst wellableAnnotationKeys = ['message', 'description'];\n\ninterface Props {\n  annotationKey: string;\n  value: string;\n}\n\nexport const AnnotationDetailsField: FC<Props> = ({ annotationKey, value }) => {\n  const label = annotationLabels[annotationKey as Annotation] ? (\n    <Tooltip content={annotationKey} placement=\"top\" theme=\"info\">\n      <span>{annotationLabels[annotationKey as Annotation]}</span>\n    </Tooltip>\n  ) : (\n    annotationKey\n  );\n\n  return (\n    <DetailsField label={label} horizontal={true}>\n      <AnnotationValue annotationKey={annotationKey} value={value} />\n    </DetailsField>\n  );\n};\n\nconst AnnotationValue: FC<Props> = ({ annotationKey, value }) => {\n  const styles = useStyles(getStyles);\n\n  const needsWell = wellableAnnotationKeys.includes(annotationKey);\n  const needsLink = value && value.startsWith('http');\n\n  if (needsWell) {\n    return <Well className={styles.well}>{value}</Well>;\n  }\n\n  if (needsLink) {\n    return (\n      <a href={value} target=\"__blank\" className={styles.link}>\n        {value}\n      </a>\n    );\n  }\n\n  return <>{value}</>;\n};\n\nexport const getStyles = (theme: GrafanaTheme) => ({\n  well: css`\n    word-break: break-all;\n  `,\n  link: css`\n    word-break: break-all;\n    color: ${theme.colors.textBlue};\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,aAAnC;AAEA,SAAqBC,gBAArB,QAA6C,oBAA7C;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;;;AAEA,MAAMC,sBAAsB,GAAG,CAAC,SAAD,EAAY,aAAZ,CAA/B;AAOA,OAAO,MAAMC,sBAAiC,GAAG,CAAC;EAAEC,aAAF;EAAiBC;AAAjB,CAAD,KAA8B;EAC7E,MAAMC,KAAK,GAAGP,gBAAgB,CAACK,aAAD,CAAhB,gBACZ,KAAC,OAAD;IAAS,OAAO,EAAEA,aAAlB;IAAiC,SAAS,EAAC,KAA3C;IAAiD,KAAK,EAAC,MAAvD;IAAA,uBACE;MAAA,UAAOL,gBAAgB,CAACK,aAAD;IAAvB;EADF,EADY,GAKZA,aALF;EAQA,oBACE,KAAC,YAAD;IAAc,KAAK,EAAEE,KAArB;IAA4B,UAAU,EAAE,IAAxC;IAAA,uBACE,KAAC,eAAD;MAAiB,aAAa,EAAEF,aAAhC;MAA+C,KAAK,EAAEC;IAAtD;EADF,EADF;AAKD,CAdM;;AAgBP,MAAME,eAA0B,GAAG,CAAC;EAAEH,aAAF;EAAiBC;AAAjB,CAAD,KAA8B;EAC/D,MAAMG,MAAM,GAAGV,SAAS,CAACW,SAAD,CAAxB;EAEA,MAAMC,SAAS,GAAGR,sBAAsB,CAACS,QAAvB,CAAgCP,aAAhC,CAAlB;EACA,MAAMQ,SAAS,GAAGP,KAAK,IAAIA,KAAK,CAACQ,UAAN,CAAiB,MAAjB,CAA3B;;EAEA,IAAIH,SAAJ,EAAe;IACb,oBAAO,KAAC,IAAD;MAAM,SAAS,EAAEF,MAAM,CAACM,IAAxB;MAAA,UAA+BT;IAA/B,EAAP;EACD;;EAED,IAAIO,SAAJ,EAAe;IACb,oBACE;MAAG,IAAI,EAAEP,KAAT;MAAgB,MAAM,EAAC,SAAvB;MAAiC,SAAS,EAAEG,MAAM,CAACO,IAAnD;MAAA,UACGV;IADH,EADF;EAKD;;EAED,oBAAO;IAAA,UAAGA;EAAH,EAAP;AACD,CAnBD;;AAqBA,OAAO,MAAMI,SAAS,GAAIO,KAAD,KAA0B;EACjDF,IAAI,EAAEnB,GAAI;AACZ;AACA,GAHmD;EAIjDoB,IAAI,EAAEpB,GAAI;AACZ;AACA,aAAaqB,KAAK,CAACC,MAAN,CAAaC,QAAS;AACnC;AAPmD,CAA1B,CAAlB"},"metadata":{},"sourceType":"module"}