{"ast":null,"code":"export let StatementPosition;\n\n(function (StatementPosition) {\n  StatementPosition[StatementPosition[\"Unknown\"] = 0] = \"Unknown\";\n  StatementPosition[StatementPosition[\"SelectKeyword\"] = 1] = \"SelectKeyword\";\n  StatementPosition[StatementPosition[\"AfterSelectKeyword\"] = 2] = \"AfterSelectKeyword\";\n  StatementPosition[StatementPosition[\"AfterSelectFuncFirstArgument\"] = 3] = \"AfterSelectFuncFirstArgument\";\n  StatementPosition[StatementPosition[\"AfterFromKeyword\"] = 4] = \"AfterFromKeyword\";\n  StatementPosition[StatementPosition[\"SchemaFuncFirstArgument\"] = 5] = \"SchemaFuncFirstArgument\";\n  StatementPosition[StatementPosition[\"SchemaFuncExtraArgument\"] = 6] = \"SchemaFuncExtraArgument\";\n  StatementPosition[StatementPosition[\"FromKeyword\"] = 7] = \"FromKeyword\";\n  StatementPosition[StatementPosition[\"AfterFrom\"] = 8] = \"AfterFrom\";\n  StatementPosition[StatementPosition[\"WhereKey\"] = 9] = \"WhereKey\";\n  StatementPosition[StatementPosition[\"WhereComparisonOperator\"] = 10] = \"WhereComparisonOperator\";\n  StatementPosition[StatementPosition[\"WhereValue\"] = 11] = \"WhereValue\";\n  StatementPosition[StatementPosition[\"AfterWhereValue\"] = 12] = \"AfterWhereValue\";\n  StatementPosition[StatementPosition[\"AfterGroupByKeywords\"] = 13] = \"AfterGroupByKeywords\";\n  StatementPosition[StatementPosition[\"AfterGroupBy\"] = 14] = \"AfterGroupBy\";\n  StatementPosition[StatementPosition[\"AfterOrderByKeywords\"] = 15] = \"AfterOrderByKeywords\";\n  StatementPosition[StatementPosition[\"AfterOrderByFunction\"] = 16] = \"AfterOrderByFunction\";\n  StatementPosition[StatementPosition[\"AfterOrderByDirection\"] = 17] = \"AfterOrderByDirection\";\n  StatementPosition[StatementPosition[\"PredefinedFunction\"] = 18] = \"PredefinedFunction\";\n  StatementPosition[StatementPosition[\"SearchFuncSecondArg\"] = 19] = \"SearchFuncSecondArg\";\n  StatementPosition[StatementPosition[\"SearchFuncThirdArg\"] = 20] = \"SearchFuncThirdArg\";\n  StatementPosition[StatementPosition[\"PredefinedFuncSecondArg\"] = 21] = \"PredefinedFuncSecondArg\";\n  StatementPosition[StatementPosition[\"AfterFunction\"] = 22] = \"AfterFunction\";\n  StatementPosition[StatementPosition[\"WithinString\"] = 23] = \"WithinString\";\n})(StatementPosition || (StatementPosition = {}));\n\nexport let SuggestionKind;\n\n(function (SuggestionKind) {\n  SuggestionKind[SuggestionKind[\"SelectKeyword\"] = 0] = \"SelectKeyword\";\n  SuggestionKind[SuggestionKind[\"FunctionsWithArguments\"] = 1] = \"FunctionsWithArguments\";\n  SuggestionKind[SuggestionKind[\"Metrics\"] = 2] = \"Metrics\";\n  SuggestionKind[SuggestionKind[\"FromKeyword\"] = 3] = \"FromKeyword\";\n  SuggestionKind[SuggestionKind[\"SchemaKeyword\"] = 4] = \"SchemaKeyword\";\n  SuggestionKind[SuggestionKind[\"Namespaces\"] = 5] = \"Namespaces\";\n  SuggestionKind[SuggestionKind[\"LabelKeys\"] = 6] = \"LabelKeys\";\n  SuggestionKind[SuggestionKind[\"WhereKeyword\"] = 7] = \"WhereKeyword\";\n  SuggestionKind[SuggestionKind[\"GroupByKeywords\"] = 8] = \"GroupByKeywords\";\n  SuggestionKind[SuggestionKind[\"OrderByKeywords\"] = 9] = \"OrderByKeywords\";\n  SuggestionKind[SuggestionKind[\"FunctionsWithoutArguments\"] = 10] = \"FunctionsWithoutArguments\";\n  SuggestionKind[SuggestionKind[\"LimitKeyword\"] = 11] = \"LimitKeyword\";\n  SuggestionKind[SuggestionKind[\"SortOrderDirectionKeyword\"] = 12] = \"SortOrderDirectionKeyword\";\n  SuggestionKind[SuggestionKind[\"ComparisonOperators\"] = 13] = \"ComparisonOperators\";\n  SuggestionKind[SuggestionKind[\"LabelValues\"] = 14] = \"LabelValues\";\n  SuggestionKind[SuggestionKind[\"LogicalOperators\"] = 15] = \"LogicalOperators\";\n  SuggestionKind[SuggestionKind[\"KeywordArguments\"] = 16] = \"KeywordArguments\";\n  SuggestionKind[SuggestionKind[\"Operators\"] = 17] = \"Operators\";\n  SuggestionKind[SuggestionKind[\"Statistic\"] = 18] = \"Statistic\";\n  SuggestionKind[SuggestionKind[\"Period\"] = 19] = \"Period\";\n})(SuggestionKind || (SuggestionKind = {}));\n\nexport let CompletionItemPriority;\n\n(function (CompletionItemPriority) {\n  CompletionItemPriority[\"High\"] = \"a\";\n  CompletionItemPriority[\"MediumHigh\"] = \"d\";\n  CompletionItemPriority[\"Medium\"] = \"g\";\n  CompletionItemPriority[\"MediumLow\"] = \"k\";\n  CompletionItemPriority[\"Low\"] = \"q\";\n})(CompletionItemPriority || (CompletionItemPriority = {}));","map":{"version":3,"names":["StatementPosition","SuggestionKind","CompletionItemPriority"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/monarch/types.ts"],"sourcesContent":["import { monacoTypes } from '@grafana/ui';\n\nimport { LanguageDefinition } from './register';\n\nexport interface TokenTypes {\n  Parenthesis: string;\n  Whitespace: string;\n  Keyword: string;\n  Delimiter: string;\n  Operator: string;\n  Identifier: string;\n  Type: string;\n  Function: string;\n  Number: string;\n  String: string;\n  Variable: string;\n}\n\nexport enum StatementPosition {\n  Unknown,\n  // sql\n  SelectKeyword,\n  AfterSelectKeyword,\n  AfterSelectFuncFirstArgument,\n  AfterFromKeyword,\n  SchemaFuncFirstArgument,\n  SchemaFuncExtraArgument,\n  FromKeyword,\n  AfterFrom,\n  WhereKey,\n  WhereComparisonOperator,\n  WhereValue,\n  AfterWhereValue,\n  AfterGroupByKeywords,\n  AfterGroupBy,\n  AfterOrderByKeywords,\n  AfterOrderByFunction,\n  AfterOrderByDirection,\n  // metric math\n  PredefinedFunction,\n  SearchFuncSecondArg,\n  SearchFuncThirdArg,\n  PredefinedFuncSecondArg,\n  AfterFunction,\n  WithinString,\n}\n\nexport enum SuggestionKind {\n  SelectKeyword,\n  FunctionsWithArguments,\n  Metrics,\n  FromKeyword,\n  SchemaKeyword,\n  Namespaces,\n  LabelKeys,\n  WhereKeyword,\n  GroupByKeywords,\n  OrderByKeywords,\n  FunctionsWithoutArguments,\n  LimitKeyword,\n  SortOrderDirectionKeyword,\n  ComparisonOperators,\n  LabelValues,\n  LogicalOperators,\n\n  // metricmath,\n  KeywordArguments,\n  Operators,\n  Statistic,\n  Period,\n}\n\nexport enum CompletionItemPriority {\n  High = 'a',\n  MediumHigh = 'd',\n  Medium = 'g',\n  MediumLow = 'k',\n  Low = 'q',\n}\n\nexport interface Editor {\n  tokenize: (value: string, languageId: string) => monacoTypes.Token[][];\n}\n\nexport interface Range {\n  containsPosition: (range: monacoTypes.IRange, position: monacoTypes.IPosition) => boolean;\n  fromPositions: (start: monacoTypes.IPosition, end?: monacoTypes.IPosition) => monacoTypes.Range;\n}\n\nexport interface Languages {\n  CompletionItemInsertTextRule: {\n    InsertAsSnippet: 4;\n  };\n  CompletionItemKind: {\n    Function: 1;\n  };\n}\nexport interface Monaco {\n  editor: Editor;\n  Range: Range;\n  languages: Languages;\n}\n\nexport interface Completeable {\n  getCompletionProvider(\n    monaco: Monaco,\n    languageDefinition: LanguageDefinition\n  ): monacoTypes.languages.CompletionItemProvider;\n}\n"],"mappings":"AAkBA,WAAYA,iBAAZ;;WAAYA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB;;AA6BZ,WAAYC,cAAZ;;WAAYA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c;;AAyBZ,WAAYC,sBAAZ;;WAAYA,sB;EAAAA,sB;EAAAA,sB;EAAAA,sB;EAAAA,sB;EAAAA,sB;GAAAA,sB,KAAAA,sB"},"metadata":{},"sourceType":"module"}