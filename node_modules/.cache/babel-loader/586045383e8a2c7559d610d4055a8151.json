{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Button, ColorPicker, useStyles2 } from '@grafana/ui';\nimport { FieldNamePicker } from '@grafana/ui/src/components/MatchersUI/FieldNamePicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const ArcOptionsEditor = ({\n  value,\n  onChange,\n  context\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const addArc = () => {\n    const newArc = {\n      field: '',\n      color: ''\n    };\n    onChange(value ? [...value, newArc] : [newArc]);\n  };\n\n  const removeArc = idx => {\n    const copy = value === null || value === void 0 ? void 0 : value.slice();\n    copy.splice(idx, 1);\n    onChange(copy);\n  };\n\n  const updateField = (idx, field, newValue) => {\n    var _value$slice;\n\n    let arcs = (_value$slice = value === null || value === void 0 ? void 0 : value.slice()) !== null && _value$slice !== void 0 ? _value$slice : [];\n    arcs[idx][field] = newValue;\n    onChange(arcs);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [value === null || value === void 0 ? void 0 : value.map((arc, i) => {\n      var _arc$field;\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.section,\n        children: [/*#__PURE__*/_jsx(FieldNamePicker, {\n          context: context,\n          value: (_arc$field = arc.field) !== null && _arc$field !== void 0 ? _arc$field : '',\n          onChange: val => {\n            updateField(i, 'field', val);\n          },\n          item: {\n            settings: {\n              filter: field => field.name.includes('arc__')\n            },\n            id: `arc-field-${i}`,\n            name: `arc-field-${i}`,\n            editor: () => null\n          }\n        }), /*#__PURE__*/_jsx(ColorPicker, {\n          color: arc.color || '#808080',\n          onChange: val => {\n            updateField(i, 'color', val);\n          }\n        }), /*#__PURE__*/_jsx(Button, {\n          size: \"sm\",\n          icon: \"minus\",\n          variant: \"secondary\",\n          onClick: () => removeArc(i),\n          title: \"Remove arc\"\n        })]\n      }, i);\n    }), /*#__PURE__*/_jsx(Button, {\n      size: 'sm',\n      icon: \"plus\",\n      onClick: addArc,\n      variant: \"secondary\",\n      children: \"Add arc\"\n    })]\n  });\n};\n\nconst getStyles = () => {\n  return {\n    section: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 0 8px;\n      margin-bottom: 8px;\n    `\n  };\n};","map":{"version":3,"names":["css","React","Button","ColorPicker","useStyles2","FieldNamePicker","ArcOptionsEditor","value","onChange","context","styles","getStyles","addArc","newArc","field","color","removeArc","idx","copy","slice","splice","updateField","newValue","arcs","map","arc","i","section","val","settings","filter","name","includes","id","editor"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/editor/ArcOptionsEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Field, StandardEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, useStyles2 } from '@grafana/ui';\nimport { FieldNamePicker } from '@grafana/ui/src/components/MatchersUI/FieldNamePicker';\n\nimport { ArcOption, NodeGraphOptions } from '../types';\n\ntype Settings = { filter: (field: Field) => boolean };\ntype ArcOptionsEditorProps = StandardEditorProps<ArcOption[], Settings, NodeGraphOptions, undefined>;\n\nexport const ArcOptionsEditor = ({ value, onChange, context }: ArcOptionsEditorProps) => {\n  const styles = useStyles2(getStyles);\n\n  const addArc = () => {\n    const newArc = { field: '', color: '' };\n    onChange(value ? [...value, newArc] : [newArc]);\n  };\n\n  const removeArc = (idx: number) => {\n    const copy = value?.slice();\n    copy.splice(idx, 1);\n    onChange(copy);\n  };\n\n  const updateField = <K extends keyof ArcOption>(idx: number, field: K, newValue: ArcOption[K]) => {\n    let arcs = value?.slice() ?? [];\n    arcs[idx][field] = newValue;\n    onChange(arcs);\n  };\n\n  return (\n    <>\n      {value?.map((arc, i) => {\n        return (\n          <div className={styles.section} key={i}>\n            <FieldNamePicker\n              context={context}\n              value={arc.field ?? ''}\n              onChange={(val) => {\n                updateField(i, 'field', val);\n              }}\n              item={{\n                settings: {\n                  filter: (field: Field) => field.name.includes('arc__'),\n                },\n                id: `arc-field-${i}`,\n                name: `arc-field-${i}`,\n                editor: () => null,\n              }}\n            />\n            <ColorPicker\n              color={arc.color || '#808080'}\n              onChange={(val) => {\n                updateField(i, 'color', val);\n              }}\n            />\n            <Button size=\"sm\" icon=\"minus\" variant=\"secondary\" onClick={() => removeArc(i)} title=\"Remove arc\" />\n          </div>\n        );\n      })}\n      <Button size={'sm'} icon=\"plus\" onClick={addArc} variant=\"secondary\">\n        Add arc\n      </Button>\n    </>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    section: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 0 8px;\n      margin-bottom: 8px;\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,QAAgD,aAAhD;AACA,SAASC,eAAT,QAAgC,uDAAhC;;;;AAOA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBC;AAAnB,CAAD,KAAyD;EACvF,MAAMC,MAAM,GAAGN,UAAU,CAACO,SAAD,CAAzB;;EAEA,MAAMC,MAAM,GAAG,MAAM;IACnB,MAAMC,MAAM,GAAG;MAAEC,KAAK,EAAE,EAAT;MAAaC,KAAK,EAAE;IAApB,CAAf;IACAP,QAAQ,CAACD,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWM,MAAX,CAAH,GAAwB,CAACA,MAAD,CAA9B,CAAR;EACD,CAHD;;EAKA,MAAMG,SAAS,GAAIC,GAAD,IAAiB;IACjC,MAAMC,IAAI,GAAGX,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEY,KAAP,EAAb;IACAD,IAAI,CAACE,MAAL,CAAYH,GAAZ,EAAiB,CAAjB;IACAT,QAAQ,CAACU,IAAD,CAAR;EACD,CAJD;;EAMA,MAAMG,WAAW,GAAG,CAA4BJ,GAA5B,EAAyCH,KAAzC,EAAmDQ,QAAnD,KAA8E;IAAA;;IAChG,IAAIC,IAAI,mBAAGhB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEY,KAAP,EAAH,uDAAqB,EAA7B;IACAI,IAAI,CAACN,GAAD,CAAJ,CAAUH,KAAV,IAAmBQ,QAAnB;IACAd,QAAQ,CAACe,IAAD,CAAR;EACD,CAJD;;EAMA,oBACE;IAAA,WACGhB,KADH,aACGA,KADH,uBACGA,KAAK,CAAEiB,GAAP,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAY;MAAA;;MACtB,oBACE;QAAK,SAAS,EAAEhB,MAAM,CAACiB,OAAvB;QAAA,wBACE,KAAC,eAAD;UACE,OAAO,EAAElB,OADX;UAEE,KAAK,gBAAEgB,GAAG,CAACX,KAAN,mDAAe,EAFtB;UAGE,QAAQ,EAAGc,GAAD,IAAS;YACjBP,WAAW,CAACK,CAAD,EAAI,OAAJ,EAAaE,GAAb,CAAX;UACD,CALH;UAME,IAAI,EAAE;YACJC,QAAQ,EAAE;cACRC,MAAM,EAAGhB,KAAD,IAAkBA,KAAK,CAACiB,IAAN,CAAWC,QAAX,CAAoB,OAApB;YADlB,CADN;YAIJC,EAAE,EAAG,aAAYP,CAAE,EAJf;YAKJK,IAAI,EAAG,aAAYL,CAAE,EALjB;YAMJQ,MAAM,EAAE,MAAM;UANV;QANR,EADF,eAgBE,KAAC,WAAD;UACE,KAAK,EAAET,GAAG,CAACV,KAAJ,IAAa,SADtB;UAEE,QAAQ,EAAGa,GAAD,IAAS;YACjBP,WAAW,CAACK,CAAD,EAAI,OAAJ,EAAaE,GAAb,CAAX;UACD;QAJH,EAhBF,eAsBE,KAAC,MAAD;UAAQ,IAAI,EAAC,IAAb;UAAkB,IAAI,EAAC,OAAvB;UAA+B,OAAO,EAAC,WAAvC;UAAmD,OAAO,EAAE,MAAMZ,SAAS,CAACU,CAAD,CAA3E;UAAgF,KAAK,EAAC;QAAtF,EAtBF;MAAA,GAAqCA,CAArC,CADF;IA0BD,CA3BA,CADH,eA6BE,KAAC,MAAD;MAAQ,IAAI,EAAE,IAAd;MAAoB,IAAI,EAAC,MAAzB;MAAgC,OAAO,EAAEd,MAAzC;MAAiD,OAAO,EAAC,WAAzD;MAAA;IAAA,EA7BF;EAAA,EADF;AAmCD,CAvDM;;AAyDP,MAAMD,SAAS,GAAG,MAAM;EACtB,OAAO;IACLgB,OAAO,EAAE3B,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;EAPS,CAAP;AASD,CAVD"},"metadata":{},"sourceType":"module"}