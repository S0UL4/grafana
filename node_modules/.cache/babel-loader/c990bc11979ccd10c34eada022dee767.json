{"ast":null,"code":"// https://github.com/grafana/metrictank/blob/master/scripts/config/storage-schemas.conf#L15-L46\nfunction toInteger(val) {\n  if (val) {\n    return parseInt(val, 10);\n  }\n\n  return undefined;\n}\n\nfunction toBooleanOrTimestamp(val) {\n  if (val) {\n    if (val === 'true') {\n      return true;\n    }\n\n    if (val === 'false') {\n      return false;\n    }\n\n    return parseInt(val, 10);\n  }\n\n  return undefined;\n}\n\nexport function getRollupNotice(metaList) {\n  for (const meta of metaList) {\n    const archiveIndex = meta['archive-read'];\n\n    if (archiveIndex > 0) {\n      var _meta$consolidatorNo;\n\n      const schema = parseSchemaRetentions(meta['schema-retentions']);\n      const intervalString = schema[archiveIndex].interval;\n      const func = ((_meta$consolidatorNo = meta['consolidator-normfetch']) !== null && _meta$consolidatorNo !== void 0 ? _meta$consolidatorNo : '').replace('Consolidator', '');\n      return {\n        text: `Data is rolled up, aggregated over ${intervalString} using ${func} function`,\n        severity: 'info',\n        inspect: 'meta'\n      };\n    }\n  }\n\n  return null;\n}\nexport function getRuntimeConsolidationNotice(metaList) {\n  for (const meta of metaList) {\n    const runtimeNr = meta['aggnum-rc'];\n\n    if (runtimeNr > 0) {\n      var _meta$consolidatorRc;\n\n      const func = ((_meta$consolidatorRc = meta['consolidator-rc']) !== null && _meta$consolidatorRc !== void 0 ? _meta$consolidatorRc : '').replace('Consolidator', '');\n      return {\n        text: `Data is runtime consolidated, ${runtimeNr} datapoints combined using ${func} function`,\n        severity: 'info',\n        inspect: 'meta'\n      };\n    }\n  }\n\n  return null;\n}\nexport function parseSchemaRetentions(spec) {\n  if (!spec) {\n    return [];\n  }\n\n  return spec.split(',').map(str => {\n    const vals = str.split(':');\n    return {\n      interval: vals[0],\n      retention: vals[1],\n      chunkspan: vals[2],\n      numchunks: toInteger(vals[3]),\n      ready: toBooleanOrTimestamp(vals[4])\n    };\n  });\n}","map":{"version":3,"names":["toInteger","val","parseInt","undefined","toBooleanOrTimestamp","getRollupNotice","metaList","meta","archiveIndex","schema","parseSchemaRetentions","intervalString","interval","func","replace","text","severity","inspect","getRuntimeConsolidationNotice","runtimeNr","spec","split","map","str","vals","retention","chunkspan","numchunks","ready"],"sources":["/home/soula/grafana/public/app/plugins/datasource/graphite/meta.ts"],"sourcesContent":["import { QueryResultMetaNotice } from '@grafana/data';\n\nimport { MetricTankSeriesMeta } from './types';\n\n// https://github.com/grafana/metrictank/blob/master/scripts/config/storage-schemas.conf#L15-L46\n\nexport interface RetentionInfo {\n  interval: string;\n  retention?: string;\n  chunkspan?: string;\n  numchunks?: number;\n  ready?: boolean | number; // whether, or as of what data timestamp, the archive is ready for querying.\n}\n\nfunction toInteger(val?: string): number | undefined {\n  if (val) {\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\n\nfunction toBooleanOrTimestamp(val?: string): number | boolean | undefined {\n  if (val) {\n    if (val === 'true') {\n      return true;\n    }\n    if (val === 'false') {\n      return false;\n    }\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\n\nexport function getRollupNotice(metaList: MetricTankSeriesMeta[]): QueryResultMetaNotice | null {\n  for (const meta of metaList) {\n    const archiveIndex = meta['archive-read'];\n\n    if (archiveIndex > 0) {\n      const schema = parseSchemaRetentions(meta['schema-retentions']);\n      const intervalString = schema[archiveIndex].interval;\n      const func = (meta['consolidator-normfetch'] ?? '').replace('Consolidator', '');\n\n      return {\n        text: `Data is rolled up, aggregated over ${intervalString} using ${func} function`,\n        severity: 'info',\n        inspect: 'meta',\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function getRuntimeConsolidationNotice(metaList: MetricTankSeriesMeta[]): QueryResultMetaNotice | null {\n  for (const meta of metaList) {\n    const runtimeNr = meta['aggnum-rc'];\n\n    if (runtimeNr > 0) {\n      const func = (meta['consolidator-rc'] ?? '').replace('Consolidator', '');\n\n      return {\n        text: `Data is runtime consolidated, ${runtimeNr} datapoints combined using ${func} function`,\n        severity: 'info',\n        inspect: 'meta',\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function parseSchemaRetentions(spec: string): RetentionInfo[] {\n  if (!spec) {\n    return [];\n  }\n  return spec.split(',').map((str) => {\n    const vals = str.split(':');\n    return {\n      interval: vals[0],\n      retention: vals[1],\n      chunkspan: vals[2],\n      numchunks: toInteger(vals[3]),\n      ready: toBooleanOrTimestamp(vals[4]),\n    };\n  });\n}\n"],"mappings":"AAIA;AAUA,SAASA,SAAT,CAAmBC,GAAnB,EAAqD;EACnD,IAAIA,GAAJ,EAAS;IACP,OAAOC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAf;EACD;;EACD,OAAOE,SAAP;AACD;;AAED,SAASC,oBAAT,CAA8BH,GAA9B,EAA0E;EACxE,IAAIA,GAAJ,EAAS;IACP,IAAIA,GAAG,KAAK,MAAZ,EAAoB;MAClB,OAAO,IAAP;IACD;;IACD,IAAIA,GAAG,KAAK,OAAZ,EAAqB;MACnB,OAAO,KAAP;IACD;;IACD,OAAOC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAf;EACD;;EACD,OAAOE,SAAP;AACD;;AAED,OAAO,SAASE,eAAT,CAAyBC,QAAzB,EAAyF;EAC9F,KAAK,MAAMC,IAAX,IAAmBD,QAAnB,EAA6B;IAC3B,MAAME,YAAY,GAAGD,IAAI,CAAC,cAAD,CAAzB;;IAEA,IAAIC,YAAY,GAAG,CAAnB,EAAsB;MAAA;;MACpB,MAAMC,MAAM,GAAGC,qBAAqB,CAACH,IAAI,CAAC,mBAAD,CAAL,CAApC;MACA,MAAMI,cAAc,GAAGF,MAAM,CAACD,YAAD,CAAN,CAAqBI,QAA5C;MACA,MAAMC,IAAI,GAAG,yBAACN,IAAI,CAAC,wBAAD,CAAL,uEAAmC,EAAnC,EAAuCO,OAAvC,CAA+C,cAA/C,EAA+D,EAA/D,CAAb;MAEA,OAAO;QACLC,IAAI,EAAG,sCAAqCJ,cAAe,UAASE,IAAK,WADpE;QAELG,QAAQ,EAAE,MAFL;QAGLC,OAAO,EAAE;MAHJ,CAAP;IAKD;EACF;;EAED,OAAO,IAAP;AACD;AAED,OAAO,SAASC,6BAAT,CAAuCZ,QAAvC,EAAuG;EAC5G,KAAK,MAAMC,IAAX,IAAmBD,QAAnB,EAA6B;IAC3B,MAAMa,SAAS,GAAGZ,IAAI,CAAC,WAAD,CAAtB;;IAEA,IAAIY,SAAS,GAAG,CAAhB,EAAmB;MAAA;;MACjB,MAAMN,IAAI,GAAG,yBAACN,IAAI,CAAC,iBAAD,CAAL,uEAA4B,EAA5B,EAAgCO,OAAhC,CAAwC,cAAxC,EAAwD,EAAxD,CAAb;MAEA,OAAO;QACLC,IAAI,EAAG,iCAAgCI,SAAU,8BAA6BN,IAAK,WAD9E;QAELG,QAAQ,EAAE,MAFL;QAGLC,OAAO,EAAE;MAHJ,CAAP;IAKD;EACF;;EAED,OAAO,IAAP;AACD;AAED,OAAO,SAASP,qBAAT,CAA+BU,IAA/B,EAA8D;EACnE,IAAI,CAACA,IAAL,EAAW;IACT,OAAO,EAAP;EACD;;EACD,OAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAqBC,GAAD,IAAS;IAClC,MAAMC,IAAI,GAAGD,GAAG,CAACF,KAAJ,CAAU,GAAV,CAAb;IACA,OAAO;MACLT,QAAQ,EAAEY,IAAI,CAAC,CAAD,CADT;MAELC,SAAS,EAAED,IAAI,CAAC,CAAD,CAFV;MAGLE,SAAS,EAAEF,IAAI,CAAC,CAAD,CAHV;MAILG,SAAS,EAAE3B,SAAS,CAACwB,IAAI,CAAC,CAAD,CAAL,CAJf;MAKLI,KAAK,EAAExB,oBAAoB,CAACoB,IAAI,CAAC,CAAD,CAAL;IALtB,CAAP;EAOD,CATM,CAAP;AAUD"},"metadata":{},"sourceType":"module"}