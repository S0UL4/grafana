{"ast":null,"code":"import { cx } from '@emotion/css';\nimport React from 'react';\nimport { Input } from '@grafana/ui';\nimport { useShadowedState } from '../useShadowedState';\nimport { paddingRightClass } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const InputSection = ({\n  value,\n  onChange,\n  isWide,\n  placeholder\n}) => {\n  const [currentValue, setCurrentValue] = useShadowedState(value);\n\n  const onBlur = () => {\n    // we send empty-string as undefined\n    const newValue = currentValue === '' ? undefined : currentValue;\n    onChange(newValue);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Input, {\n      placeholder: placeholder,\n      className: cx((isWide !== null && isWide !== void 0 ? isWide : false) ? 'width-14' : 'width-8', paddingRightClass),\n      type: \"text\",\n      spellCheck: false,\n      onBlur: onBlur,\n      onChange: e => {\n        setCurrentValue(e.currentTarget.value);\n      },\n      value: currentValue !== null && currentValue !== void 0 ? currentValue : ''\n    })\n  });\n};","map":{"version":3,"names":["cx","React","Input","useShadowedState","paddingRightClass","InputSection","value","onChange","isWide","placeholder","currentValue","setCurrentValue","onBlur","newValue","undefined","e","currentTarget"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/VisualInfluxQLEditor/InputSection.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport React from 'react';\n\nimport { Input } from '@grafana/ui';\n\nimport { useShadowedState } from '../useShadowedState';\n\nimport { paddingRightClass } from './styles';\n\ntype Props = {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n  isWide?: boolean;\n  placeholder?: string;\n};\n\nexport const InputSection = ({ value, onChange, isWide, placeholder }: Props): JSX.Element => {\n  const [currentValue, setCurrentValue] = useShadowedState(value);\n\n  const onBlur = () => {\n    // we send empty-string as undefined\n    const newValue = currentValue === '' ? undefined : currentValue;\n    onChange(newValue);\n  };\n\n  return (\n    <>\n      <Input\n        placeholder={placeholder}\n        className={cx(isWide ?? false ? 'width-14' : 'width-8', paddingRightClass)}\n        type=\"text\"\n        spellCheck={false}\n        onBlur={onBlur}\n        onChange={(e) => {\n          setCurrentValue(e.currentTarget.value);\n        }}\n        value={currentValue ?? ''}\n      />\n    </>\n  );\n};\n"],"mappings":"AAAA,SAASA,EAAT,QAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,iBAAT,QAAkC,UAAlC;;;AASA,OAAO,MAAMC,YAAY,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBC,MAAnB;EAA2BC;AAA3B,CAAD,KAAkE;EAC5F,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,gBAAgB,CAACG,KAAD,CAAxD;;EAEA,MAAMM,MAAM,GAAG,MAAM;IACnB;IACA,MAAMC,QAAQ,GAAGH,YAAY,KAAK,EAAjB,GAAsBI,SAAtB,GAAkCJ,YAAnD;IACAH,QAAQ,CAACM,QAAD,CAAR;EACD,CAJD;;EAMA,oBACE;IAAA,uBACE,KAAC,KAAD;MACE,WAAW,EAAEJ,WADf;MAEE,SAAS,EAAET,EAAE,CAAC,CAAAQ,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAM,GAAI,KAAV,IAAkB,UAAlB,GAA+B,SAAhC,EAA2CJ,iBAA3C,CAFf;MAGE,IAAI,EAAC,MAHP;MAIE,UAAU,EAAE,KAJd;MAKE,MAAM,EAAEQ,MALV;MAME,QAAQ,EAAGG,CAAD,IAAO;QACfJ,eAAe,CAACI,CAAC,CAACC,aAAF,CAAgBV,KAAjB,CAAf;MACD,CARH;MASE,KAAK,EAAEI,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB;IATzB;EADF,EADF;AAeD,CAxBM"},"metadata":{},"sourceType":"module"}