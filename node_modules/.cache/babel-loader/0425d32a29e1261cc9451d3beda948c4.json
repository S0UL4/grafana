{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { InlineField, TextArea, useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function VariableTextAreaField({\n  name,\n  value,\n  placeholder,\n  tooltip,\n  onChange,\n  onBlur,\n  ariaLabel,\n  required,\n  width,\n  labelWidth,\n  testId\n}) {\n  const styles = useStyles(getStyles);\n  const getLineCount = useCallback(value => {\n    if (value && typeof value === 'string') {\n      return value.split('\\n').length;\n    }\n\n    return 1;\n  }, []);\n  return /*#__PURE__*/_jsx(InlineField, {\n    label: name,\n    labelWidth: labelWidth !== null && labelWidth !== void 0 ? labelWidth : 12,\n    tooltip: tooltip,\n    children: /*#__PURE__*/_jsx(TextArea, {\n      rows: getLineCount(value),\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur,\n      placeholder: placeholder,\n      required: required,\n      \"aria-label\": ariaLabel,\n      cols: width,\n      className: styles.textarea,\n      \"data-testid\": testId\n    })\n  });\n}\n\nfunction getStyles(theme) {\n  return {\n    textarea: css`\n      white-space: pre-wrap;\n      min-height: 32px;\n      height: auto;\n      overflow: auto;\n      padding: 6px 8px;\n    `\n  };\n}","map":{"version":3,"names":["css","React","useCallback","InlineField","TextArea","useStyles","VariableTextAreaField","name","value","placeholder","tooltip","onChange","onBlur","ariaLabel","required","width","labelWidth","testId","styles","getStyles","getLineCount","split","length","textarea","theme"],"sources":["/home/soula/grafana/public/app/features/variables/editor/VariableTextAreaField.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FormEvent, PropsWithChildren, ReactElement, useCallback } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { InlineField, TextArea, useStyles } from '@grafana/ui';\n\ninterface VariableTextAreaFieldProps<T> {\n  name: string;\n  value: string;\n  placeholder: string;\n  onChange: (event: FormEvent<HTMLTextAreaElement>) => void;\n  width: number;\n  tooltip?: string;\n  ariaLabel?: string;\n  required?: boolean;\n  labelWidth?: number;\n  testId?: string;\n  onBlur?: (event: FormEvent<HTMLTextAreaElement>) => void;\n}\n\nexport function VariableTextAreaField({\n  name,\n  value,\n  placeholder,\n  tooltip,\n  onChange,\n  onBlur,\n  ariaLabel,\n  required,\n  width,\n  labelWidth,\n  testId,\n}: PropsWithChildren<VariableTextAreaFieldProps<any>>): ReactElement {\n  const styles = useStyles(getStyles);\n  const getLineCount = useCallback((value: any) => {\n    if (value && typeof value === 'string') {\n      return value.split('\\n').length;\n    }\n\n    return 1;\n  }, []);\n\n  return (\n    <InlineField label={name} labelWidth={labelWidth ?? 12} tooltip={tooltip}>\n      <TextArea\n        rows={getLineCount(value)}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        required={required}\n        aria-label={ariaLabel}\n        cols={width}\n        className={styles.textarea}\n        data-testid={testId}\n      />\n    </InlineField>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme) {\n  return {\n    textarea: css`\n      white-space: pre-wrap;\n      min-height: 32px;\n      height: auto;\n      overflow: auto;\n      padding: 6px 8px;\n    `,\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAA4DC,WAA5D,QAA+E,OAA/E;AAGA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,aAAjD;;AAgBA,OAAO,SAASC,qBAAT,CAA+B;EACpCC,IADoC;EAEpCC,KAFoC;EAGpCC,WAHoC;EAIpCC,OAJoC;EAKpCC,QALoC;EAMpCC,MANoC;EAOpCC,SAPoC;EAQpCC,QARoC;EASpCC,KAToC;EAUpCC,UAVoC;EAWpCC;AAXoC,CAA/B,EAY8D;EACnE,MAAMC,MAAM,GAAGb,SAAS,CAACc,SAAD,CAAxB;EACA,MAAMC,YAAY,GAAGlB,WAAW,CAAEM,KAAD,IAAgB;IAC/C,IAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;MACtC,OAAOA,KAAK,CAACa,KAAN,CAAY,IAAZ,EAAkBC,MAAzB;IACD;;IAED,OAAO,CAAP;EACD,CAN+B,EAM7B,EAN6B,CAAhC;EAQA,oBACE,KAAC,WAAD;IAAa,KAAK,EAAEf,IAApB;IAA0B,UAAU,EAAES,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,EAApD;IAAwD,OAAO,EAAEN,OAAjE;IAAA,uBACE,KAAC,QAAD;MACE,IAAI,EAAEU,YAAY,CAACZ,KAAD,CADpB;MAEE,KAAK,EAAEA,KAFT;MAGE,QAAQ,EAAEG,QAHZ;MAIE,MAAM,EAAEC,MAJV;MAKE,WAAW,EAAEH,WALf;MAME,QAAQ,EAAEK,QANZ;MAOE,cAAYD,SAPd;MAQE,IAAI,EAAEE,KARR;MASE,SAAS,EAAEG,MAAM,CAACK,QATpB;MAUE,eAAaN;IAVf;EADF,EADF;AAgBD;;AAED,SAASE,SAAT,CAAmBK,KAAnB,EAAwC;EACtC,OAAO;IACLD,QAAQ,EAAEvB,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;EAPS,CAAP;AASD"},"metadata":{},"sourceType":"module"}