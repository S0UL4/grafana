{"ast":null,"code":"import { isArray, isEqual } from 'lodash';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { safeStringifyValue } from 'app/core/utils/explore';\nimport { getState } from '../../store/store';\nimport { getTimeSrv } from '../dashboard/services/TimeSrv';\nimport { variableAdapters } from './adapters';\nimport { ALL_VARIABLE_TEXT, ALL_VARIABLE_VALUE } from './constants';\nimport { getVariablesState } from './state/selectors';\nimport { TransactionStatus, VariableRefresh } from './types';\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[(\\w+?)(?::(\\w+))?\\]\\]        [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\n\nexport const variableRegex = /\\$(\\w+)|\\[\\[(\\w+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::([^\\}]+))?}/g; // Helper function since lastIndex is not reset\n\nexport const variableRegexExec = variableString => {\n  variableRegex.lastIndex = 0;\n  return variableRegex.exec(variableString);\n};\nexport const SEARCH_FILTER_VARIABLE = '__searchFilter';\nexport const containsSearchFilter = query => query && typeof query === 'string' ? query.indexOf(SEARCH_FILTER_VARIABLE) !== -1 : false;\nexport const getSearchFilterScopedVar = args => {\n  const {\n    query,\n    wildcardChar\n  } = args;\n\n  if (!containsSearchFilter(query)) {\n    return {};\n  }\n\n  let {\n    options\n  } = args;\n  options = options || {\n    searchFilter: ''\n  };\n  const value = options.searchFilter ? `${options.searchFilter}${wildcardChar}` : `${wildcardChar}`;\n  return {\n    __searchFilter: {\n      value,\n      text: ''\n    }\n  };\n};\nexport function containsVariable(...args) {\n  const variableName = args[args.length - 1];\n  args[0] = typeof args[0] === 'string' ? args[0] : safeStringifyValue(args[0]);\n  const variableString = args.slice(0, -1).join(' ');\n  const matches = variableString.match(variableRegex);\n  const isMatchingVariable = matches !== null ? matches.find(match => {\n    const varMatch = variableRegexExec(match);\n    return varMatch !== null && varMatch.indexOf(variableName) > -1;\n  }) : false;\n  return !!isMatchingVariable;\n}\nexport const isAllVariable = variable => {\n  if (!variable) {\n    return false;\n  }\n\n  if (!variable.current) {\n    return false;\n  }\n\n  if (variable.current.value) {\n    const isArray = Array.isArray(variable.current.value);\n\n    if (isArray && variable.current.value.length && variable.current.value[0] === ALL_VARIABLE_VALUE) {\n      return true;\n    }\n\n    if (!isArray && variable.current.value === ALL_VARIABLE_VALUE) {\n      return true;\n    }\n  }\n\n  if (variable.current.text) {\n    const isArray = Array.isArray(variable.current.text);\n\n    if (isArray && variable.current.text.length && variable.current.text[0] === ALL_VARIABLE_TEXT) {\n      return true;\n    }\n\n    if (!isArray && variable.current.text === ALL_VARIABLE_TEXT) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport const getCurrentText = variable => {\n  if (!variable) {\n    return '';\n  }\n\n  if (!variable.current) {\n    return '';\n  }\n\n  if (!variable.current.text) {\n    return '';\n  }\n\n  if (Array.isArray(variable.current.text)) {\n    return variable.current.text.toString();\n  }\n\n  if (typeof variable.current.text !== 'string') {\n    return '';\n  }\n\n  return variable.current.text;\n};\nexport function getTemplatedRegex(variable, templateSrv = getTemplateSrv()) {\n  if (!variable) {\n    return '';\n  }\n\n  if (!variable.regex) {\n    return '';\n  }\n\n  return templateSrv.replace(variable.regex, {}, 'regex');\n}\nexport function getLegacyQueryOptions(variable, searchFilter, timeSrv = getTimeSrv()) {\n  const queryOptions = {\n    range: undefined,\n    variable,\n    searchFilter\n  };\n\n  if (variable.refresh === VariableRefresh.onTimeRangeChanged || variable.refresh === VariableRefresh.onDashboardLoad) {\n    queryOptions.range = timeSrv.timeRange();\n  }\n\n  return queryOptions;\n}\nexport function getVariableRefresh(variable) {\n  if (!variable || !variable.hasOwnProperty('refresh')) {\n    return VariableRefresh.never;\n  }\n\n  const queryVariable = variable;\n\n  if (queryVariable.refresh !== VariableRefresh.onTimeRangeChanged && queryVariable.refresh !== VariableRefresh.onDashboardLoad && queryVariable.refresh !== VariableRefresh.never) {\n    return VariableRefresh.never;\n  }\n\n  return queryVariable.refresh;\n}\nexport function getVariableTypes() {\n  return variableAdapters.list().filter(v => v.id !== 'system').map(({\n    id,\n    name\n  }) => ({\n    label: name,\n    value: id\n  }));\n}\n\nfunction getUrlValueForComparison(value) {\n  if (isArray(value)) {\n    if (value.length === 0) {\n      value = undefined;\n    } else if (value.length === 1) {\n      value = value[0];\n    }\n  }\n\n  return value;\n}\n\nexport function findTemplateVarChanges(query, old) {\n  let count = 0;\n  const changes = {};\n\n  for (const key in query) {\n    if (!key.startsWith('var-')) {\n      continue;\n    }\n\n    let oldValue = getUrlValueForComparison(old[key]);\n    let newValue = getUrlValueForComparison(query[key]);\n\n    if (!isEqual(newValue, oldValue)) {\n      changes[key] = {\n        value: query[key]\n      };\n      count++;\n    }\n  }\n\n  for (const key in old) {\n    if (!key.startsWith('var-')) {\n      continue;\n    }\n\n    const value = old[key]; // ignore empty array values\n\n    if (isArray(value) && value.length === 0) {\n      continue;\n    }\n\n    if (!query.hasOwnProperty(key)) {\n      changes[key] = {\n        value: '',\n        removed: true\n      }; // removed\n\n      count++;\n    }\n  }\n\n  return count ? changes : undefined;\n}\nexport function ensureStringValues(value) {\n  if (Array.isArray(value)) {\n    return value.map(String);\n  }\n\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  if (typeof value === 'number') {\n    return value.toString(10);\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof value === 'boolean') {\n    return value.toString();\n  }\n\n  return '';\n}\nexport function hasOngoingTransaction(key, state = getState()) {\n  return getVariablesState(key, state).transaction.status !== TransactionStatus.NotStarted;\n}\nexport function toStateKey(key) {\n  return String(key);\n}\nexport const toKeyedVariableIdentifier = variable => {\n  if (!variable.rootStateKey) {\n    throw new Error(`rootStateKey not found for variable with id:${variable.id}`);\n  }\n\n  return {\n    type: variable.type,\n    id: variable.id,\n    rootStateKey: variable.rootStateKey\n  };\n};\n// eslint-disable-next-line\nexport function toVariablePayload(obj, data) {\n  return {\n    type: obj.type,\n    id: obj.id,\n    data: data\n  };\n}","map":{"version":3,"names":["isArray","isEqual","getTemplateSrv","safeStringifyValue","getState","getTimeSrv","variableAdapters","ALL_VARIABLE_TEXT","ALL_VARIABLE_VALUE","getVariablesState","TransactionStatus","VariableRefresh","variableRegex","variableRegexExec","variableString","lastIndex","exec","SEARCH_FILTER_VARIABLE","containsSearchFilter","query","indexOf","getSearchFilterScopedVar","args","wildcardChar","options","searchFilter","value","__searchFilter","text","containsVariable","variableName","length","slice","join","matches","match","isMatchingVariable","find","varMatch","isAllVariable","variable","current","Array","getCurrentText","toString","getTemplatedRegex","templateSrv","regex","replace","getLegacyQueryOptions","timeSrv","queryOptions","range","undefined","refresh","onTimeRangeChanged","onDashboardLoad","timeRange","getVariableRefresh","hasOwnProperty","never","queryVariable","getVariableTypes","list","filter","v","id","map","name","label","getUrlValueForComparison","findTemplateVarChanges","old","count","changes","key","startsWith","oldValue","newValue","removed","ensureStringValues","String","hasOngoingTransaction","state","transaction","status","NotStarted","toStateKey","toKeyedVariableIdentifier","rootStateKey","Error","type","toVariablePayload","obj","data"],"sources":["/home/soula/grafana/public/app/features/variables/utils.ts"],"sourcesContent":["import { isArray, isEqual } from 'lodash';\n\nimport { ScopedVars, UrlQueryMap, UrlQueryValue, VariableType } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { safeStringifyValue } from 'app/core/utils/explore';\n\nimport { getState } from '../../store/store';\nimport { StoreState } from '../../types';\nimport { getTimeSrv } from '../dashboard/services/TimeSrv';\n\nimport { variableAdapters } from './adapters';\nimport { ALL_VARIABLE_TEXT, ALL_VARIABLE_VALUE } from './constants';\nimport { getVariablesState } from './state/selectors';\nimport { KeyedVariableIdentifier, VariableIdentifier, VariablePayload } from './state/types';\nimport { QueryVariableModel, TransactionStatus, VariableModel, VariableRefresh } from './types';\n\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[(\\w+?)(?::(\\w+))?\\]\\]        [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\nexport const variableRegex = /\\$(\\w+)|\\[\\[(\\w+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::([^\\}]+))?}/g;\n\n// Helper function since lastIndex is not reset\nexport const variableRegexExec = (variableString: string) => {\n  variableRegex.lastIndex = 0;\n  return variableRegex.exec(variableString);\n};\n\nexport const SEARCH_FILTER_VARIABLE = '__searchFilter';\n\nexport const containsSearchFilter = (query: string | unknown): boolean =>\n  query && typeof query === 'string' ? query.indexOf(SEARCH_FILTER_VARIABLE) !== -1 : false;\n\nexport const getSearchFilterScopedVar = (args: {\n  query: string;\n  wildcardChar: string;\n  options: { searchFilter?: string };\n}): ScopedVars => {\n  const { query, wildcardChar } = args;\n  if (!containsSearchFilter(query)) {\n    return {};\n  }\n\n  let { options } = args;\n\n  options = options || { searchFilter: '' };\n  const value = options.searchFilter ? `${options.searchFilter}${wildcardChar}` : `${wildcardChar}`;\n\n  return {\n    __searchFilter: {\n      value,\n      text: '',\n    },\n  };\n};\n\nexport function containsVariable(...args: any[]) {\n  const variableName = args[args.length - 1];\n  args[0] = typeof args[0] === 'string' ? args[0] : safeStringifyValue(args[0]);\n  const variableString = args.slice(0, -1).join(' ');\n  const matches = variableString.match(variableRegex);\n  const isMatchingVariable =\n    matches !== null\n      ? matches.find((match) => {\n          const varMatch = variableRegexExec(match);\n          return varMatch !== null && varMatch.indexOf(variableName) > -1;\n        })\n      : false;\n\n  return !!isMatchingVariable;\n}\n\nexport const isAllVariable = (variable: any): boolean => {\n  if (!variable) {\n    return false;\n  }\n\n  if (!variable.current) {\n    return false;\n  }\n\n  if (variable.current.value) {\n    const isArray = Array.isArray(variable.current.value);\n    if (isArray && variable.current.value.length && variable.current.value[0] === ALL_VARIABLE_VALUE) {\n      return true;\n    }\n\n    if (!isArray && variable.current.value === ALL_VARIABLE_VALUE) {\n      return true;\n    }\n  }\n\n  if (variable.current.text) {\n    const isArray = Array.isArray(variable.current.text);\n    if (isArray && variable.current.text.length && variable.current.text[0] === ALL_VARIABLE_TEXT) {\n      return true;\n    }\n\n    if (!isArray && variable.current.text === ALL_VARIABLE_TEXT) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const getCurrentText = (variable: any): string => {\n  if (!variable) {\n    return '';\n  }\n\n  if (!variable.current) {\n    return '';\n  }\n\n  if (!variable.current.text) {\n    return '';\n  }\n\n  if (Array.isArray(variable.current.text)) {\n    return variable.current.text.toString();\n  }\n\n  if (typeof variable.current.text !== 'string') {\n    return '';\n  }\n\n  return variable.current.text;\n};\n\nexport function getTemplatedRegex(variable: QueryVariableModel, templateSrv = getTemplateSrv()): string {\n  if (!variable) {\n    return '';\n  }\n\n  if (!variable.regex) {\n    return '';\n  }\n\n  return templateSrv.replace(variable.regex, {}, 'regex');\n}\n\nexport function getLegacyQueryOptions(variable: QueryVariableModel, searchFilter?: string, timeSrv = getTimeSrv()) {\n  const queryOptions: any = { range: undefined, variable, searchFilter };\n  if (variable.refresh === VariableRefresh.onTimeRangeChanged || variable.refresh === VariableRefresh.onDashboardLoad) {\n    queryOptions.range = timeSrv.timeRange();\n  }\n\n  return queryOptions;\n}\n\nexport function getVariableRefresh(variable: VariableModel): VariableRefresh {\n  if (!variable || !variable.hasOwnProperty('refresh')) {\n    return VariableRefresh.never;\n  }\n\n  const queryVariable = variable as QueryVariableModel;\n\n  if (\n    queryVariable.refresh !== VariableRefresh.onTimeRangeChanged &&\n    queryVariable.refresh !== VariableRefresh.onDashboardLoad &&\n    queryVariable.refresh !== VariableRefresh.never\n  ) {\n    return VariableRefresh.never;\n  }\n\n  return queryVariable.refresh;\n}\n\nexport function getVariableTypes(): Array<{ label: string; value: VariableType }> {\n  return variableAdapters\n    .list()\n    .filter((v) => v.id !== 'system')\n    .map(({ id, name }) => ({\n      label: name,\n      value: id,\n    }));\n}\n\nfunction getUrlValueForComparison(value: any): any {\n  if (isArray(value)) {\n    if (value.length === 0) {\n      value = undefined;\n    } else if (value.length === 1) {\n      value = value[0];\n    }\n  }\n\n  return value;\n}\n\nexport interface UrlQueryType {\n  value: UrlQueryValue;\n  removed?: boolean;\n}\n\nexport interface ExtendedUrlQueryMap extends Record<string, UrlQueryType> {}\n\nexport function findTemplateVarChanges(query: UrlQueryMap, old: UrlQueryMap): ExtendedUrlQueryMap | undefined {\n  let count = 0;\n  const changes: ExtendedUrlQueryMap = {};\n\n  for (const key in query) {\n    if (!key.startsWith('var-')) {\n      continue;\n    }\n\n    let oldValue = getUrlValueForComparison(old[key]);\n    let newValue = getUrlValueForComparison(query[key]);\n\n    if (!isEqual(newValue, oldValue)) {\n      changes[key] = { value: query[key] };\n      count++;\n    }\n  }\n\n  for (const key in old) {\n    if (!key.startsWith('var-')) {\n      continue;\n    }\n\n    const value = old[key];\n\n    // ignore empty array values\n    if (isArray(value) && value.length === 0) {\n      continue;\n    }\n\n    if (!query.hasOwnProperty(key)) {\n      changes[key] = { value: '', removed: true }; // removed\n      count++;\n    }\n  }\n  return count ? changes : undefined;\n}\n\nexport function ensureStringValues(value: any | any[]): string | string[] {\n  if (Array.isArray(value)) {\n    return value.map(String);\n  }\n\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  if (typeof value === 'number') {\n    return value.toString(10);\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof value === 'boolean') {\n    return value.toString();\n  }\n\n  return '';\n}\n\nexport function hasOngoingTransaction(key: string, state: StoreState = getState()): boolean {\n  return getVariablesState(key, state).transaction.status !== TransactionStatus.NotStarted;\n}\n\nexport function toStateKey(key: string | null | undefined): string {\n  return String(key);\n}\n\nexport const toKeyedVariableIdentifier = (variable: VariableModel): KeyedVariableIdentifier => {\n  if (!variable.rootStateKey) {\n    throw new Error(`rootStateKey not found for variable with id:${variable.id}`);\n  }\n\n  return { type: variable.type, id: variable.id, rootStateKey: variable.rootStateKey };\n};\n\nexport function toVariablePayload<T extends any = undefined>(\n  identifier: VariableIdentifier,\n  data?: T\n): VariablePayload<T>;\n// eslint-disable-next-line\nexport function toVariablePayload<T extends any = undefined>(model: VariableModel, data?: T): VariablePayload<T>;\n// eslint-disable-next-line\nexport function toVariablePayload<T extends any = undefined>(\n  obj: VariableIdentifier | VariableModel,\n  data?: T\n): VariablePayload<T> {\n  return { type: obj.type, id: obj.id, data: data as T };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}