{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { AnnotationPicker } from './AnnotationPicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const Annotations = ({\n  annotations,\n  onAnnotationChanged,\n  events\n}) => {\n  const [visibleAnnotations, setVisibleAnnotations] = useState([]);\n  useEffect(() => {\n    setVisibleAnnotations(annotations.filter(annotation => annotation.hide !== true));\n  }, [annotations]);\n\n  if (visibleAnnotations.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: visibleAnnotations.map(annotation => /*#__PURE__*/_jsx(AnnotationPicker, {\n      events: events,\n      annotation: annotation,\n      onEnabledChanged: onAnnotationChanged\n    }, annotation.name))\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","AnnotationPicker","Annotations","annotations","onAnnotationChanged","events","visibleAnnotations","setVisibleAnnotations","filter","annotation","hide","length","map","name"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SubMenu/Annotations.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\n\nimport { AnnotationQuery, EventBus } from '@grafana/data';\n\nimport { AnnotationPicker } from './AnnotationPicker';\n\ninterface Props {\n  events: EventBus;\n  annotations: AnnotationQuery[];\n  onAnnotationChanged: (annotation: any) => void;\n}\n\nexport const Annotations: FunctionComponent<Props> = ({ annotations, onAnnotationChanged, events }) => {\n  const [visibleAnnotations, setVisibleAnnotations] = useState<AnnotationQuery[]>([]);\n  useEffect(() => {\n    setVisibleAnnotations(annotations.filter((annotation) => annotation.hide !== true));\n  }, [annotations]);\n\n  if (visibleAnnotations.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      {visibleAnnotations.map((annotation) => (\n        <AnnotationPicker\n          events={events}\n          annotation={annotation}\n          onEnabledChanged={onAnnotationChanged}\n          key={annotation.name}\n        />\n      ))}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AAIA,SAASC,gBAAT,QAAiC,oBAAjC;;;AAQA,OAAO,MAAMC,WAAqC,GAAG,CAAC;EAAEC,WAAF;EAAeC,mBAAf;EAAoCC;AAApC,CAAD,KAAkD;EACrG,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAoB,EAApB,CAA5D;EACAD,SAAS,CAAC,MAAM;IACdQ,qBAAqB,CAACJ,WAAW,CAACK,MAAZ,CAAoBC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoB,IAAvD,CAAD,CAArB;EACD,CAFQ,EAEN,CAACP,WAAD,CAFM,CAAT;;EAIA,IAAIG,kBAAkB,CAACK,MAAnB,KAA8B,CAAlC,EAAqC;IACnC,OAAO,IAAP;EACD;;EAED,oBACE;IAAA,UACGL,kBAAkB,CAACM,GAAnB,CAAwBH,UAAD,iBACtB,KAAC,gBAAD;MACE,MAAM,EAAEJ,MADV;MAEE,UAAU,EAAEI,UAFd;MAGE,gBAAgB,EAAEL;IAHpB,GAIOK,UAAU,CAACI,IAJlB,CADD;EADH,EADF;AAYD,CAtBM"},"metadata":{},"sourceType":"module"}