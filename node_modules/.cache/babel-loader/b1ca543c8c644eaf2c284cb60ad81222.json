{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useAsync } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Alert, Spinner, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from '../../../../core/services/context_srv';\nimport impressionSrv from '../../../../core/services/impression_srv';\nimport { GENERAL_FOLDER_UID } from '../../constants';\nimport { getGrafanaSearcher } from '../../service';\nimport { FolderSection } from './FolderSection';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const FolderView = ({\n  selection,\n  selectionToggle,\n  onTagSelected,\n  tags,\n  hidePseudoFolders\n}) => {\n  const styles = useStyles2(getStyles);\n  const results = useAsync(async () => {\n    const folders = [];\n\n    if (!hidePseudoFolders) {\n      if (contextSrv.isSignedIn) {\n        const stars = await getBackendSrv().get('api/user/stars');\n\n        if (stars.length > 0) {\n          folders.push({\n            title: 'Starred',\n            icon: 'star',\n            kind: 'query-star',\n            uid: '__starred',\n            itemsUIDs: stars\n          });\n        }\n      }\n\n      const ids = impressionSrv.getDashboardOpened();\n\n      if (ids.length) {\n        const itemsUIDs = await getBackendSrv().get(`/api/dashboards/ids/${ids.slice(0, 30).join(',')}`);\n\n        if (itemsUIDs.length) {\n          folders.push({\n            title: 'Recent',\n            icon: 'clock-nine',\n            kind: 'query-recent',\n            uid: '__recent',\n            itemsUIDs\n          });\n        }\n      }\n    }\n\n    folders.push({\n      title: 'General',\n      url: '/dashboards',\n      kind: 'folder',\n      uid: GENERAL_FOLDER_UID\n    });\n    const rsp = await getGrafanaSearcher().search({\n      query: '*',\n      kind: ['folder']\n    });\n\n    for (const row of rsp.view) {\n      folders.push({\n        title: row.name,\n        url: row.url,\n        uid: row.uid,\n        kind: row.kind\n      });\n    }\n\n    return folders;\n  }, []);\n\n  const renderResults = () => {\n    if (results.loading) {\n      return /*#__PURE__*/_jsx(Spinner, {\n        className: styles.spinner\n      });\n    } else if (!results.value) {\n      return /*#__PURE__*/_jsx(Alert, {\n        className: styles.error,\n        title: results.error ? results.error.message : 'Something went wrong'\n      });\n    } else {\n      return results.value.map(section => /*#__PURE__*/_jsx(\"div\", {\n        \"data-testid\": selectors.components.Search.sectionV2,\n        className: styles.section,\n        children: section.title && /*#__PURE__*/_jsx(FolderSection, {\n          selection: selection,\n          selectionToggle: selectionToggle,\n          onTagSelected: onTagSelected,\n          section: section,\n          tags: tags\n        })\n      }, section.title));\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.wrapper,\n    children: renderResults()\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n\n      > ul {\n        list-style: none;\n      }\n\n      border: solid 1px ${theme.v1.colors.border2};\n    `,\n    section: css`\n      display: flex;\n      flex-direction: column;\n      background: ${theme.v1.colors.panelBg};\n\n      &:not(:last-child) {\n        border-bottom: solid 1px ${theme.v1.colors.border2};\n      }\n    `,\n    spinner: css`\n      align-items: center;\n      display: flex;\n      justify-content: center;\n      min-height: 100px;\n    `,\n    error: css`\n      margin: ${theme.spacing(4)} auto;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useAsync","selectors","getBackendSrv","Alert","Spinner","useStyles2","contextSrv","impressionSrv","GENERAL_FOLDER_UID","getGrafanaSearcher","FolderSection","FolderView","selection","selectionToggle","onTagSelected","tags","hidePseudoFolders","styles","getStyles","results","folders","isSignedIn","stars","get","length","push","title","icon","kind","uid","itemsUIDs","ids","getDashboardOpened","slice","join","url","rsp","search","query","row","view","name","renderResults","loading","spinner","value","error","message","map","section","components","Search","sectionV2","wrapper","theme","v1","colors","border2","panelBg","spacing"],"sources":["/home/soula/grafana/public/app/features/search/page/components/FolderView.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useAsync } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Alert, Spinner, useStyles2 } from '@grafana/ui';\n\nimport { contextSrv } from '../../../../core/services/context_srv';\nimport impressionSrv from '../../../../core/services/impression_srv';\nimport { GENERAL_FOLDER_UID } from '../../constants';\nimport { getGrafanaSearcher } from '../../service';\nimport { SearchResultsProps } from '../components/SearchResultsTable';\n\nimport { DashboardSection, FolderSection } from './FolderSection';\n\ntype Props = Pick<SearchResultsProps, 'selection' | 'selectionToggle' | 'onTagSelected'> & {\n  tags?: string[];\n  hidePseudoFolders?: boolean;\n};\nexport const FolderView = ({ selection, selectionToggle, onTagSelected, tags, hidePseudoFolders }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  const results = useAsync(async () => {\n    const folders: DashboardSection[] = [];\n    if (!hidePseudoFolders) {\n      if (contextSrv.isSignedIn) {\n        const stars = await getBackendSrv().get('api/user/stars');\n        if (stars.length > 0) {\n          folders.push({ title: 'Starred', icon: 'star', kind: 'query-star', uid: '__starred', itemsUIDs: stars });\n        }\n      }\n\n      const ids = impressionSrv.getDashboardOpened();\n      if (ids.length) {\n        const itemsUIDs = await getBackendSrv().get(`/api/dashboards/ids/${ids.slice(0, 30).join(',')}`);\n        if (itemsUIDs.length) {\n          folders.push({ title: 'Recent', icon: 'clock-nine', kind: 'query-recent', uid: '__recent', itemsUIDs });\n        }\n      }\n    }\n    folders.push({ title: 'General', url: '/dashboards', kind: 'folder', uid: GENERAL_FOLDER_UID });\n\n    const rsp = await getGrafanaSearcher().search({\n      query: '*',\n      kind: ['folder'],\n    });\n    for (const row of rsp.view) {\n      folders.push({\n        title: row.name,\n        url: row.url,\n        uid: row.uid,\n        kind: row.kind,\n      });\n    }\n\n    return folders;\n  }, []);\n\n  const renderResults = () => {\n    if (results.loading) {\n      return <Spinner className={styles.spinner} />;\n    } else if (!results.value) {\n      return <Alert className={styles.error} title={results.error ? results.error.message : 'Something went wrong'} />;\n    } else {\n      return results.value.map((section) => (\n        <div data-testid={selectors.components.Search.sectionV2} className={styles.section} key={section.title}>\n          {section.title && (\n            <FolderSection\n              selection={selection}\n              selectionToggle={selectionToggle}\n              onTagSelected={onTagSelected}\n              section={section}\n              tags={tags}\n            />\n          )}\n        </div>\n      ));\n    }\n  };\n\n  return <div className={styles.wrapper}>{renderResults()}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n\n      > ul {\n        list-style: none;\n      }\n\n      border: solid 1px ${theme.v1.colors.border2};\n    `,\n    section: css`\n      display: flex;\n      flex-direction: column;\n      background: ${theme.v1.colors.panelBg};\n\n      &:not(:last-child) {\n        border-bottom: solid 1px ${theme.v1.colors.border2};\n      }\n    `,\n    spinner: css`\n      align-items: center;\n      display: flex;\n      justify-content: center;\n      min-height: 100px;\n    `,\n    error: css`\n      margin: ${theme.spacing(4)} auto;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}