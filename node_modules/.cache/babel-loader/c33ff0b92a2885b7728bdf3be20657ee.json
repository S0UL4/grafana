{"ast":null,"code":"/**\n * @public\n */\nexport class ConstantVector {\n  constructor(value, len) {\n    this.value = value;\n    this.len = len;\n  }\n\n  get length() {\n    return this.len;\n  }\n\n  get(index) {\n    return this.value;\n  }\n\n  toArray() {\n    const arr = new Array(this.length);\n    return arr.fill(this.value);\n  }\n\n  toJSON() {\n    return this.toArray();\n  }\n\n}","map":{"version":3,"names":["ConstantVector","constructor","value","len","length","get","index","toArray","arr","Array","fill","toJSON"],"sources":["/home/soula/grafana/packages/grafana-data/src/vector/ConstantVector.ts"],"sourcesContent":["import { Vector } from '../types/vector';\n\n/**\n * @public\n */\nexport class ConstantVector<T = any> implements Vector<T> {\n  constructor(private value: T, private len: number) {}\n\n  get length() {\n    return this.len;\n  }\n\n  get(index: number): T {\n    return this.value;\n  }\n\n  toArray(): T[] {\n    const arr = new Array<T>(this.length);\n    return arr.fill(this.value);\n  }\n\n  toJSON(): T[] {\n    return this.toArray();\n  }\n}\n"],"mappings":"AAEA;AACA;AACA;AACA,OAAO,MAAMA,cAAN,CAAmD;EACxDC,WAAW,CAASC,KAAT,EAA2BC,GAA3B,EAAwC;IAAA,KAA/BD,KAA+B,GAA/BA,KAA+B;IAAA,KAAbC,GAAa,GAAbA,GAAa;EAAE;;EAE3C,IAANC,MAAM,GAAG;IACX,OAAO,KAAKD,GAAZ;EACD;;EAEDE,GAAG,CAACC,KAAD,EAAmB;IACpB,OAAO,KAAKJ,KAAZ;EACD;;EAEDK,OAAO,GAAQ;IACb,MAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAa,KAAKL,MAAlB,CAAZ;IACA,OAAOI,GAAG,CAACE,IAAJ,CAAS,KAAKR,KAAd,CAAP;EACD;;EAEDS,MAAM,GAAQ;IACZ,OAAO,KAAKJ,OAAL,EAAP;EACD;;AAlBuD"},"metadata":{},"sourceType":"module"}