{"ast":null,"code":"import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime'; // Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\n\nconst DEFAULT_PORTS = {\n  http: 80,\n  https: 443,\n  ftp: 21\n};\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn, replacement) {\n    let self = this;\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl() {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host() {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port() {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol() {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search, paramValue) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue\n      });\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = Object.assign({}, search);\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key of Object.keys(newQuery)) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push(Object.assign({}, locationService.getLocation(), {\n          hash: newUrl\n        }));\n      } else if (newUrl.startsWith('?')) {\n        locationService.push(Object.assign({}, locationService.getLocation(), {\n          search: newUrl\n        }));\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n\n}","map":{"version":3,"names":["deprecationWarning","urlUtil","locationSearchToObject","locationService","navigationLogger","DEFAULT_PORTS","http","https","ftp","AngularLocationWrapper","constructor","absUrl","wrapInDeprecationWarning","hash","host","path","port","protocol","replace","search","state","url","fn","replacement","self","wrapper","name","apply","arguments","window","location","origin","newHash","getLocation","slice","Error","URL","href","hostname","pathname","undefined","parsedPath","String","startsWith","push","length","parseInt","paramValue","getSearchObject","partial","newQuery","key","Object","keys","updatedUrl","renderUrl","newUrl","trim"],"sources":["/home/soula/grafana/public/app/angular/AngularLocationWrapper.ts"],"sourcesContent":["import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime';\n\n// Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\nconst DEFAULT_PORTS: Record<string, number> = { http: 80, https: 443, ftp: 21 };\n\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn: Function, replacement?: string) {\n    let self = this;\n\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl(): string {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash?: string | null) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host(): string {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash,\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port(): number | null {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol(): string {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search?: any, paramValue?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue,\n      });\n\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = { ...search };\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key of Object.keys(newQuery)) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push({ ...locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith('?')) {\n        locationService.push({ ...locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}