{"ast":null,"code":"var _h, _p, _Button;\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Input, Field, Form } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { getConfig } from 'app/core/config';\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { createOrganization } from './state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    navModel: getNavModel(state.navIndex, 'global-orgs')\n  };\n};\n\nconst mapDispatchToProps = {\n  createOrganization\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NewOrgPage = ({\n  navModel,\n  createOrganization\n}) => {\n  const createOrg = async newOrg => {\n    await createOrganization(newOrg);\n    window.location.href = getConfig().appSubUrl + '/org';\n  };\n\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsxs(Page.Contents, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-sub-heading\",\n        children: \"New organization\"\n      })), _p || (_p = /*#__PURE__*/_jsxs(\"p\", {\n        className: \"playlist-description\",\n        children: [\"Each organization contains their own dashboards, data sources, and configuration, which cannot be shared shared between organizations. While users might belong to more than one organization, multiple organizations are most frequently used in multi-tenant deployments.\", ' ']\n      })), /*#__PURE__*/_jsx(Form, {\n        onSubmit: createOrg,\n        children: ({\n          register,\n          errors\n        }) => {\n          return /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Field, {\n              label: \"Organization name\",\n              invalid: !!errors.name,\n              error: errors.name && errors.name.message,\n              children: /*#__PURE__*/_jsx(Input, Object.assign({\n                placeholder: \"Org name\"\n              }, register('name', {\n                required: 'Organization name is required'\n              })))\n            }), _Button || (_Button = /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              children: \"Create\"\n            }))]\n          });\n        }\n      })]\n    })\n  });\n};\nexport default connector(NewOrgPage);","map":{"version":3,"names":["React","connect","Button","Input","Field","Form","Page","getConfig","getNavModel","createOrganization","mapStateToProps","state","navModel","navIndex","mapDispatchToProps","connector","NewOrgPage","createOrg","newOrg","window","location","href","appSubUrl","register","errors","name","message","required"],"sources":["/home/soula/grafana/public/app/features/org/NewOrgPage.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Button, Input, Field, Form } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { getConfig } from 'app/core/config';\nimport { StoreState } from 'app/types';\n\nimport { getNavModel } from '../../core/selectors/navModel';\n\nimport { createOrganization } from './state/actions';\n\nconst mapStateToProps = (state: StoreState) => {\n  return { navModel: getNavModel(state.navIndex, 'global-orgs') };\n};\n\nconst mapDispatchToProps = {\n  createOrganization,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\ninterface CreateOrgFormDTO {\n  name: string;\n}\n\nexport const NewOrgPage: FC<Props> = ({ navModel, createOrganization }) => {\n  const createOrg = async (newOrg: { name: string }) => {\n    await createOrganization(newOrg);\n    window.location.href = getConfig().appSubUrl + '/org';\n  };\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <h3 className=\"page-sub-heading\">New organization</h3>\n\n        <p className=\"playlist-description\">\n          Each organization contains their own dashboards, data sources, and configuration, which cannot be shared\n          shared between organizations. While users might belong to more than one organization, multiple organizations\n          are most frequently used in multi-tenant deployments.{' '}\n        </p>\n\n        <Form<CreateOrgFormDTO> onSubmit={createOrg}>\n          {({ register, errors }) => {\n            return (\n              <>\n                <Field label=\"Organization name\" invalid={!!errors.name} error={errors.name && errors.name.message}>\n                  <Input\n                    placeholder=\"Org name\"\n                    {...register('name', {\n                      required: 'Organization name is required',\n                    })}\n                  />\n                </Field>\n                <Button type=\"submit\">Create</Button>\n              </>\n            );\n          }}\n        </Form>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(NewOrgPage);\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,aAA3C;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAGA,SAASC,WAAT,QAA4B,+BAA5B;AAEA,SAASC,kBAAT,QAAmC,iBAAnC;;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAuB;EAC7C,OAAO;IAAEC,QAAQ,EAAEJ,WAAW,CAACG,KAAK,CAACE,QAAP,EAAiB,aAAjB;EAAvB,CAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;EACzBL;AADyB,CAA3B;AAIA,MAAMM,SAAS,GAAGd,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAzB;AAQA,OAAO,MAAME,UAAqB,GAAG,CAAC;EAAEJ,QAAF;EAAYH;AAAZ,CAAD,KAAsC;EACzE,MAAMQ,SAAS,GAAG,MAAOC,MAAP,IAAoC;IACpD,MAAMT,kBAAkB,CAACS,MAAD,CAAxB;IACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBd,SAAS,GAAGe,SAAZ,GAAwB,MAA/C;EACD,CAHD;;EAKA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEV,QAAhB;IAAA,uBACE,MAAC,IAAD,CAAM,QAAN;MAAA,oCACE;QAAI,SAAS,EAAC,kBAAd;QAAA;MAAA,EADF,4BAGE;QAAG,SAAS,EAAC,sBAAb;QAAA,0RAGwD,GAHxD;MAAA,EAHF,gBASE,KAAC,IAAD;QAAwB,QAAQ,EAAEK,SAAlC;QAAA,UACG,CAAC;UAAEM,QAAF;UAAYC;QAAZ,CAAD,KAA0B;UACzB,oBACE;YAAA,wBACE,KAAC,KAAD;cAAO,KAAK,EAAC,mBAAb;cAAiC,OAAO,EAAE,CAAC,CAACA,MAAM,CAACC,IAAnD;cAAyD,KAAK,EAAED,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,OAA3F;cAAA,uBACE,KAAC,KAAD;gBACE,WAAW,EAAC;cADd,GAEMH,QAAQ,CAAC,MAAD,EAAS;gBACnBI,QAAQ,EAAE;cADS,CAAT,CAFd;YADF,EADF,qCASE,KAAC,MAAD;cAAQ,IAAI,EAAC,QAAb;cAAA;YAAA,EATF;UAAA,EADF;QAaD;MAfH,EATF;IAAA;EADF,EADF;AA+BD,CArCM;AAuCP,eAAeZ,SAAS,CAACC,UAAD,CAAxB"},"metadata":{},"sourceType":"module"}