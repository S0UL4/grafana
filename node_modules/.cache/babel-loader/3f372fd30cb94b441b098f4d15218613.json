{"ast":null,"code":"var _Label;\n\nimport { css } from '@emotion/css';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport { Checkbox, FilterInput, Label, VerticalGroup } from '..';\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ITEM_HEIGHT = 28;\nconst MIN_HEIGHT = ITEM_HEIGHT * 5;\nexport const FilterList = ({\n  options,\n  values,\n  caseSensitive,\n  onChange\n}) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const [searchFilter, setSearchFilter] = useState('');\n  const regex = useMemo(() => new RegExp(searchFilter, caseSensitive ? undefined : 'i'), [searchFilter, caseSensitive]);\n  const items = useMemo(() => options.filter(option => {\n    if (option.label === undefined) {\n      return false;\n    }\n\n    return regex.test(option.label);\n  }), [options, regex]);\n  const gutter = theme.spacing.gridSize;\n  const height = useMemo(() => Math.min(items.length * ITEM_HEIGHT, MIN_HEIGHT) + gutter, [gutter, items.length]);\n  const onInputChange = useCallback(v => {\n    setSearchFilter(v);\n  }, [setSearchFilter]);\n  const onCheckedChanged = useCallback(option => event => {\n    const newValues = event.currentTarget.checked ? values.concat(option) : values.filter(c => c.value !== option.value);\n    onChange(newValues);\n  }, [onChange, values]);\n  return /*#__PURE__*/_jsxs(VerticalGroup, {\n    spacing: \"md\",\n    children: [/*#__PURE__*/_jsx(FilterInput, {\n      placeholder: \"Filter values\",\n      onChange: onInputChange,\n      value: searchFilter\n    }), !items.length && (_Label || (_Label = /*#__PURE__*/_jsx(Label, {\n      children: \"No values\"\n    }))), items.length && /*#__PURE__*/_jsx(List, {\n      height: height,\n      itemCount: items.length,\n      itemSize: ITEM_HEIGHT,\n      width: \"100%\",\n      className: styles.filterList,\n      children: ({\n        index,\n        style\n      }) => {\n        const option = items[index];\n        const {\n          value,\n          label\n        } = option;\n        const isChecked = values.find(s => s.value === value) !== undefined;\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: styles.filterListRow,\n          style: style,\n          title: label,\n          children: /*#__PURE__*/_jsx(Checkbox, {\n            value: isChecked,\n            label: label,\n            onChange: onCheckedChanged(option)\n          })\n        });\n      }\n    })]\n  });\n};\nconst getStyles = stylesFactory(theme => ({\n  filterList: css`\n    label: filterList;\n  `,\n  filterListRow: css`\n    label: filterListRow;\n    cursor: pointer;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: ${theme.spacing(0.5)};\n\n    :hover {\n      background-color: ${theme.colors.action.hover};\n    }\n  `\n}));","map":{"version":3,"names":["css","React","useCallback","useMemo","useState","FixedSizeList","List","Checkbox","FilterInput","Label","VerticalGroup","stylesFactory","useTheme2","ITEM_HEIGHT","MIN_HEIGHT","FilterList","options","values","caseSensitive","onChange","theme","styles","getStyles","searchFilter","setSearchFilter","regex","RegExp","undefined","items","filter","option","label","test","gutter","spacing","gridSize","height","Math","min","length","onInputChange","v","onCheckedChanged","event","newValues","currentTarget","checked","concat","c","value","filterList","index","style","isChecked","find","s","filterListRow","colors","action","hover"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/FilterList.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useCallback, useMemo, useState } from 'react';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { Checkbox, FilterInput, Label, VerticalGroup } from '..';\nimport { stylesFactory, useTheme2 } from '../../themes';\n\ninterface Props {\n  values: SelectableValue[];\n  options: SelectableValue[];\n  onChange: (options: SelectableValue[]) => void;\n  caseSensitive?: boolean;\n}\n\nconst ITEM_HEIGHT = 28;\nconst MIN_HEIGHT = ITEM_HEIGHT * 5;\n\nexport const FilterList: FC<Props> = ({ options, values, caseSensitive, onChange }) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const [searchFilter, setSearchFilter] = useState('');\n  const regex = useMemo(() => new RegExp(searchFilter, caseSensitive ? undefined : 'i'), [searchFilter, caseSensitive]);\n  const items = useMemo(\n    () =>\n      options.filter((option) => {\n        if (option.label === undefined) {\n          return false;\n        }\n        return regex.test(option.label);\n      }),\n    [options, regex]\n  );\n  const gutter = theme.spacing.gridSize;\n  const height = useMemo(() => Math.min(items.length * ITEM_HEIGHT, MIN_HEIGHT) + gutter, [gutter, items.length]);\n\n  const onInputChange = useCallback(\n    (v: string) => {\n      setSearchFilter(v);\n    },\n    [setSearchFilter]\n  );\n\n  const onCheckedChanged = useCallback(\n    (option: SelectableValue) => (event: React.FormEvent<HTMLInputElement>) => {\n      const newValues = event.currentTarget.checked\n        ? values.concat(option)\n        : values.filter((c) => c.value !== option.value);\n\n      onChange(newValues);\n    },\n    [onChange, values]\n  );\n\n  return (\n    <VerticalGroup spacing=\"md\">\n      <FilterInput placeholder=\"Filter values\" onChange={onInputChange} value={searchFilter} />\n      {!items.length && <Label>No values</Label>}\n      {items.length && (\n        <List\n          height={height}\n          itemCount={items.length}\n          itemSize={ITEM_HEIGHT}\n          width=\"100%\"\n          className={styles.filterList}\n        >\n          {({ index, style }) => {\n            const option = items[index];\n            const { value, label } = option;\n            const isChecked = values.find((s) => s.value === value) !== undefined;\n\n            return (\n              <div className={styles.filterListRow} style={style} title={label}>\n                <Checkbox value={isChecked} label={label} onChange={onCheckedChanged(option)} />\n              </div>\n            );\n          }}\n        </List>\n      )}\n    </VerticalGroup>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  filterList: css`\n    label: filterList;\n  `,\n  filterListRow: css`\n    label: filterListRow;\n    cursor: pointer;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: ${theme.spacing(0.5)};\n\n    :hover {\n      background-color: ${theme.colors.action.hover};\n    }\n  `,\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}