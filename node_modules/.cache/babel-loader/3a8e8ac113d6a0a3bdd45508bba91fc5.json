{"ast":null,"code":"var _div, _div2, _br, _small;\n\nimport { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\nimport { Button, ConfirmModal, Modal, stylesFactory, useTheme } from '@grafana/ui';\nimport { SaveDashboardAsButton } from './SaveDashboardButton';\nimport { useDashboardSave } from './useDashboardSave';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const SaveDashboardErrorProxy = ({\n  dashboard,\n  dashboardSaveModel,\n  error,\n  onDismiss\n}) => {\n  const {\n    onDashboardSave\n  } = useDashboardSave(dashboard);\n  useEffect(() => {\n    if (error.data && isHandledError(error.data.status)) {\n      error.isHandled = true;\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [error.data && error.data.status === 'version-mismatch' && /*#__PURE__*/_jsx(ConfirmModal, {\n      isOpen: true,\n      title: \"Conflict\",\n      body: _div || (_div = /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Someone else has updated this dashboard \", /*#__PURE__*/_jsx(\"br\", {}), \" \", /*#__PURE__*/_jsx(\"small\", {\n          children: \"Would you still like to save this dashboard?\"\n        })]\n      })),\n      confirmText: \"Save and overwrite\",\n      onConfirm: async () => {\n        await onDashboardSave(dashboardSaveModel, {\n          overwrite: true\n        }, dashboard);\n        onDismiss();\n      },\n      onDismiss: onDismiss\n    }), error.data && error.data.status === 'name-exists' && /*#__PURE__*/_jsx(ConfirmModal, {\n      isOpen: true,\n      title: \"Conflict\",\n      body: _div2 || (_div2 = /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"A dashboard with the same name in selected folder already exists. \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"small\", {\n          children: \"Would you still like to save this dashboard?\"\n        })]\n      })),\n      confirmText: \"Save and overwrite\",\n      onConfirm: async () => {\n        await onDashboardSave(dashboardSaveModel, {\n          overwrite: true\n        }, dashboard);\n        onDismiss();\n      },\n      onDismiss: onDismiss\n    }), error.data && error.data.status === 'plugin-dashboard' && /*#__PURE__*/_jsx(ConfirmPluginDashboardSaveModal, {\n      dashboard: dashboard,\n      onDismiss: onDismiss\n    })]\n  });\n};\n\nconst ConfirmPluginDashboardSaveModal = ({\n  onDismiss,\n  dashboard\n}) => {\n  const theme = useTheme();\n  const {\n    onDashboardSave\n  } = useDashboardSave(dashboard);\n  const styles = getConfirmPluginDashboardSaveModalStyles(theme);\n  return /*#__PURE__*/_jsxs(Modal, {\n    className: styles.modal,\n    title: \"Plugin dashboard\",\n    icon: \"copy\",\n    isOpen: true,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.modalText,\n      children: [\"Your changes will be lost when you update the plugin.\", _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), _small || (_small = /*#__PURE__*/_jsxs(\"small\", {\n        children: [\"Use \", /*#__PURE__*/_jsx(\"strong\", {\n          children: \"Save As\"\n        }), \" to create custom version.\"]\n      }))]\n    }), /*#__PURE__*/_jsxs(Modal.ButtonRow, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        fill: \"outline\",\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(SaveDashboardAsButton, {\n        dashboard: dashboard,\n        onSaveSuccess: onDismiss\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"destructive\",\n        onClick: async () => {\n          await onDashboardSave(dashboard.getSaveModelClone(), {\n            overwrite: true\n          }, dashboard);\n          onDismiss();\n        },\n        children: \"Overwrite\"\n      })]\n    })]\n  });\n};\n\nconst isHandledError = errorStatus => {\n  switch (errorStatus) {\n    case 'version-mismatch':\n    case 'name-exists':\n    case 'plugin-dashboard':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst getConfirmPluginDashboardSaveModalStyles = stylesFactory(theme => ({\n  modal: css`\n    width: 500px;\n  `,\n  modalText: css`\n    font-size: ${theme.typography.heading.h4};\n    color: ${theme.colors.link};\n    margin-bottom: calc(${theme.spacing.d} * 2);\n    padding-top: ${theme.spacing.d};\n  `,\n  modalButtonRow: css`\n    margin-bottom: 14px;\n    a,\n    button {\n      margin-right: ${theme.spacing.d};\n    }\n  `\n}));","map":{"version":3,"names":["css","React","useEffect","Button","ConfirmModal","Modal","stylesFactory","useTheme","SaveDashboardAsButton","useDashboardSave","SaveDashboardErrorProxy","dashboard","dashboardSaveModel","error","onDismiss","onDashboardSave","data","isHandledError","status","isHandled","overwrite","ConfirmPluginDashboardSaveModal","theme","styles","getConfirmPluginDashboardSaveModalStyles","modal","modalText","getSaveModelClone","errorStatus","typography","heading","h4","colors","link","spacing","d","modalButtonRow"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SaveDashboard/SaveDashboardErrorProxy.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Button, ConfirmModal, Modal, stylesFactory, useTheme } from '@grafana/ui';\nimport { DashboardModel } from 'app/features/dashboard/state';\n\nimport { SaveDashboardAsButton } from './SaveDashboardButton';\nimport { SaveDashboardModalProps } from './types';\nimport { useDashboardSave } from './useDashboardSave';\n\ninterface SaveDashboardErrorProxyProps {\n  /** original dashboard */\n  dashboard: DashboardModel;\n  /** dashboard save model with applied modifications, i.e. title */\n  dashboardSaveModel: any;\n  error: any;\n  onDismiss: () => void;\n}\n\nexport const SaveDashboardErrorProxy: React.FC<SaveDashboardErrorProxyProps> = ({\n  dashboard,\n  dashboardSaveModel,\n  error,\n  onDismiss,\n}) => {\n  const { onDashboardSave } = useDashboardSave(dashboard);\n\n  useEffect(() => {\n    if (error.data && isHandledError(error.data.status)) {\n      error.isHandled = true;\n    }\n  }, [error]);\n\n  return (\n    <>\n      {error.data && error.data.status === 'version-mismatch' && (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Conflict\"\n          body={\n            <div>\n              Someone else has updated this dashboard <br /> <small>Would you still like to save this dashboard?</small>\n            </div>\n          }\n          confirmText=\"Save and overwrite\"\n          onConfirm={async () => {\n            await onDashboardSave(dashboardSaveModel, { overwrite: true }, dashboard);\n            onDismiss();\n          }}\n          onDismiss={onDismiss}\n        />\n      )}\n      {error.data && error.data.status === 'name-exists' && (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Conflict\"\n          body={\n            <div>\n              A dashboard with the same name in selected folder already exists. <br />\n              <small>Would you still like to save this dashboard?</small>\n            </div>\n          }\n          confirmText=\"Save and overwrite\"\n          onConfirm={async () => {\n            await onDashboardSave(dashboardSaveModel, { overwrite: true }, dashboard);\n            onDismiss();\n          }}\n          onDismiss={onDismiss}\n        />\n      )}\n      {error.data && error.data.status === 'plugin-dashboard' && (\n        <ConfirmPluginDashboardSaveModal dashboard={dashboard} onDismiss={onDismiss} />\n      )}\n    </>\n  );\n};\n\nconst ConfirmPluginDashboardSaveModal: React.FC<SaveDashboardModalProps> = ({ onDismiss, dashboard }) => {\n  const theme = useTheme();\n  const { onDashboardSave } = useDashboardSave(dashboard);\n  const styles = getConfirmPluginDashboardSaveModalStyles(theme);\n\n  return (\n    <Modal className={styles.modal} title=\"Plugin dashboard\" icon=\"copy\" isOpen={true} onDismiss={onDismiss}>\n      <div className={styles.modalText}>\n        Your changes will be lost when you update the plugin.\n        <br />\n        <small>\n          Use <strong>Save As</strong> to create custom version.\n        </small>\n      </div>\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n          Cancel\n        </Button>\n        <SaveDashboardAsButton dashboard={dashboard} onSaveSuccess={onDismiss} />\n        <Button\n          variant=\"destructive\"\n          onClick={async () => {\n            await onDashboardSave(dashboard.getSaveModelClone(), { overwrite: true }, dashboard);\n            onDismiss();\n          }}\n        >\n          Overwrite\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n\nconst isHandledError = (errorStatus: string) => {\n  switch (errorStatus) {\n    case 'version-mismatch':\n    case 'name-exists':\n    case 'plugin-dashboard':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst getConfirmPluginDashboardSaveModalStyles = stylesFactory((theme: GrafanaTheme) => ({\n  modal: css`\n    width: 500px;\n  `,\n  modalText: css`\n    font-size: ${theme.typography.heading.h4};\n    color: ${theme.colors.link};\n    margin-bottom: calc(${theme.spacing.d} * 2);\n    padding-top: ${theme.spacing.d};\n  `,\n  modalButtonRow: css`\n    margin-bottom: 14px;\n    a,\n    button {\n      margin-right: ${theme.spacing.d};\n    }\n  `,\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}