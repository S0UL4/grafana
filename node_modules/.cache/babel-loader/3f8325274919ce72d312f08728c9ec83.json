{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { colorManipulator, getDisplayProcessor } from '@grafana/data';\nimport { useStyles2, useTheme2, Portal, DEFAULT_ANNOTATION_COLOR } from '@grafana/ui';\nimport { getCommonAnnotationStyles } from '../styles';\nimport { AnnotationEditorForm } from './AnnotationEditorForm';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AnnotationEditor = ({\n  onDismiss,\n  onSave,\n  timeZone,\n  data,\n  selection,\n  annotation,\n  style\n}) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const commonStyles = useStyles2(getCommonAnnotationStyles);\n  const [popperTrigger, setPopperTrigger] = useState(null);\n  const [editorPopover, setEditorPopover] = useState(null);\n  const popper = usePopper(popperTrigger, editorPopover, {\n    modifiers: [{\n      name: 'arrow',\n      enabled: false\n    }, {\n      name: 'preventOverflow',\n      enabled: true,\n      options: {\n        rootBoundary: 'viewport'\n      }\n    }]\n  });\n  let xField = data.fields[0];\n\n  if (!xField) {\n    return null;\n  }\n\n  const xFieldFmt = xField.display || getDisplayProcessor({\n    field: xField,\n    timeZone,\n    theme\n  });\n  const isRegionAnnotation = selection.min !== selection.max;\n  return /*#__PURE__*/_jsx(Portal, {\n    children: /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        // div overlay matching uPlot canvas bbox\n        style: style,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          // Annotation marker\n          className: cx(css`\n                position: absolute;\n                top: ${selection.bbox.top}px;\n                left: ${selection.bbox.left}px;\n                width: ${selection.bbox.width}px;\n                height: ${selection.bbox.height}px;\n              `, isRegionAnnotation ? styles.overlayRange(annotation) : styles.overlay(annotation)),\n          children: /*#__PURE__*/_jsx(\"div\", {\n            ref: setPopperTrigger,\n            className: isRegionAnnotation ? cx(commonStyles(annotation).markerBar, styles.markerBar) : cx(commonStyles(annotation).markerTriangle, styles.markerTriangle)\n          })\n        })\n      }), /*#__PURE__*/_jsx(AnnotationEditorForm, Object.assign({\n        annotation: annotation || {\n          time: selection.min,\n          timeEnd: selection.max\n        },\n        timeFormatter: v => xFieldFmt(v).text,\n        onSave: onSave,\n        onDismiss: onDismiss,\n        ref: setEditorPopover,\n        style: popper.styles.popper\n      }, popper.attributes.popper))]\n    })\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    overlay: annotation => {\n      const color = theme.visualization.getColorByName((annotation === null || annotation === void 0 ? void 0 : annotation.color) || DEFAULT_ANNOTATION_COLOR);\n      return css`\n        border-left: 1px dashed ${color};\n      `;\n    },\n    overlayRange: annotation => {\n      const color = theme.visualization.getColorByName((annotation === null || annotation === void 0 ? void 0 : annotation.color) || DEFAULT_ANNOTATION_COLOR);\n      return css`\n        background: ${colorManipulator.alpha(color, 0.1)};\n        border-left: 1px dashed ${color};\n        border-right: 1px dashed ${color};\n      `;\n    },\n    markerTriangle: css`\n      top: calc(100% + 2px);\n      left: -4px;\n      position: absolute;\n    `,\n    markerBar: css`\n      top: 100%;\n      left: 0;\n      position: absolute;\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useState","usePopper","colorManipulator","getDisplayProcessor","useStyles2","useTheme2","Portal","DEFAULT_ANNOTATION_COLOR","getCommonAnnotationStyles","AnnotationEditorForm","AnnotationEditor","onDismiss","onSave","timeZone","data","selection","annotation","style","theme","styles","getStyles","commonStyles","popperTrigger","setPopperTrigger","editorPopover","setEditorPopover","popper","modifiers","name","enabled","options","rootBoundary","xField","fields","xFieldFmt","display","field","isRegionAnnotation","min","max","bbox","top","left","width","height","overlayRange","overlay","markerBar","markerTriangle","time","timeEnd","v","text","attributes","color","visualization","getColorByName","alpha"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/plugins/annotations/AnnotationEditor.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes, useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { colorManipulator, DataFrame, getDisplayProcessor, GrafanaTheme2, TimeZone } from '@grafana/data';\nimport { PlotSelection, useStyles2, useTheme2, Portal, DEFAULT_ANNOTATION_COLOR } from '@grafana/ui';\n\nimport { getCommonAnnotationStyles } from '../styles';\n\nimport { AnnotationEditorForm } from './AnnotationEditorForm';\n\ninterface AnnotationEditorProps extends HTMLAttributes<HTMLDivElement> {\n  data: DataFrame;\n  timeZone: TimeZone;\n  selection: PlotSelection;\n  onSave: () => void;\n  onDismiss: () => void;\n  annotation?: AnnotationsDataFrameViewDTO;\n}\n\nexport const AnnotationEditor: React.FC<AnnotationEditorProps> = ({\n  onDismiss,\n  onSave,\n  timeZone,\n  data,\n  selection,\n  annotation,\n  style,\n}) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const commonStyles = useStyles2(getCommonAnnotationStyles);\n  const [popperTrigger, setPopperTrigger] = useState<HTMLDivElement | null>(null);\n  const [editorPopover, setEditorPopover] = useState<HTMLDivElement | null>(null);\n\n  const popper = usePopper(popperTrigger, editorPopover, {\n    modifiers: [\n      { name: 'arrow', enabled: false },\n      {\n        name: 'preventOverflow',\n        enabled: true,\n        options: {\n          rootBoundary: 'viewport',\n        },\n      },\n    ],\n  });\n\n  let xField = data.fields[0];\n  if (!xField) {\n    return null;\n  }\n  const xFieldFmt = xField.display || getDisplayProcessor({ field: xField, timeZone, theme });\n  const isRegionAnnotation = selection.min !== selection.max;\n\n  return (\n    <Portal>\n      <>\n        <div // div overlay matching uPlot canvas bbox\n          style={style}\n        >\n          <div // Annotation marker\n            className={cx(\n              css`\n                position: absolute;\n                top: ${selection.bbox.top}px;\n                left: ${selection.bbox.left}px;\n                width: ${selection.bbox.width}px;\n                height: ${selection.bbox.height}px;\n              `,\n              isRegionAnnotation ? styles.overlayRange(annotation) : styles.overlay(annotation)\n            )}\n          >\n            <div\n              ref={setPopperTrigger}\n              className={\n                isRegionAnnotation\n                  ? cx(commonStyles(annotation).markerBar, styles.markerBar)\n                  : cx(commonStyles(annotation).markerTriangle, styles.markerTriangle)\n              }\n            />\n          </div>\n        </div>\n\n        <AnnotationEditorForm\n          annotation={annotation || ({ time: selection.min, timeEnd: selection.max } as AnnotationsDataFrameViewDTO)}\n          timeFormatter={(v) => xFieldFmt(v).text}\n          onSave={onSave}\n          onDismiss={onDismiss}\n          ref={setEditorPopover}\n          style={popper.styles.popper}\n          {...popper.attributes.popper}\n        />\n      </>\n    </Portal>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    overlay: (annotation?: AnnotationsDataFrameViewDTO) => {\n      const color = theme.visualization.getColorByName(annotation?.color || DEFAULT_ANNOTATION_COLOR);\n      return css`\n        border-left: 1px dashed ${color};\n      `;\n    },\n    overlayRange: (annotation?: AnnotationsDataFrameViewDTO) => {\n      const color = theme.visualization.getColorByName(annotation?.color || DEFAULT_ANNOTATION_COLOR);\n      return css`\n        background: ${colorManipulator.alpha(color, 0.1)};\n        border-left: 1px dashed ${color};\n        border-right: 1px dashed ${color};\n      `;\n    },\n    markerTriangle: css`\n      top: calc(100% + 2px);\n      left: -4px;\n      position: absolute;\n    `,\n    markerBar: css`\n      top: 100%;\n      left: 0;\n      position: absolute;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}