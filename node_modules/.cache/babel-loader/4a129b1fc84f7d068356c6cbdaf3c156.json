{"ast":null,"code":"import usePrevious from 'react-use/lib/usePrevious';\nexport function useFocusPositionOnLayout(config, nodes, focusedNodeId) {\n  const prevLayoutGrid = usePrevious(config.gridLayout);\n  let focusPosition;\n\n  if (prevLayoutGrid === true && !config.gridLayout && focusedNodeId) {\n    const node = nodes.find(n => n.id === focusedNodeId);\n\n    if (node) {\n      focusPosition = {\n        x: -node.x,\n        y: -node.y\n      };\n    }\n  }\n\n  return focusPosition;\n}","map":{"version":3,"names":["usePrevious","useFocusPositionOnLayout","config","nodes","focusedNodeId","prevLayoutGrid","gridLayout","focusPosition","node","find","n","id","x","y"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/useFocusPositionOnLayout.ts"],"sourcesContent":["import usePrevious from 'react-use/lib/usePrevious';\n\nimport { Config } from './layout';\nimport { NodeDatum } from './types';\n\nexport function useFocusPositionOnLayout(config: Config, nodes: NodeDatum[], focusedNodeId: string | undefined) {\n  const prevLayoutGrid = usePrevious(config.gridLayout);\n  let focusPosition;\n  if (prevLayoutGrid === true && !config.gridLayout && focusedNodeId) {\n    const node = nodes.find((n) => n.id === focusedNodeId);\n    if (node) {\n      focusPosition = {\n        x: -node.x!,\n        y: -node.y!,\n      };\n    }\n  }\n\n  return focusPosition;\n}\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AAKA,OAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAAkDC,KAAlD,EAAsEC,aAAtE,EAAyG;EAC9G,MAAMC,cAAc,GAAGL,WAAW,CAACE,MAAM,CAACI,UAAR,CAAlC;EACA,IAAIC,aAAJ;;EACA,IAAIF,cAAc,KAAK,IAAnB,IAA2B,CAACH,MAAM,CAACI,UAAnC,IAAiDF,aAArD,EAAoE;IAClE,MAAMI,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASP,aAA3B,CAAb;;IACA,IAAII,IAAJ,EAAU;MACRD,aAAa,GAAG;QACdK,CAAC,EAAE,CAACJ,IAAI,CAACI,CADK;QAEdC,CAAC,EAAE,CAACL,IAAI,CAACK;MAFK,CAAhB;IAID;EACF;;EAED,OAAON,aAAP;AACD"},"metadata":{},"sourceType":"module"}