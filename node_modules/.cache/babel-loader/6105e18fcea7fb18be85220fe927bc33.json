{"ast":null,"code":"var _Input;\n\nimport React from 'react';\nimport { Button } from '../Button';\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { Input } from '../Input/Input';\nimport { TextArea } from '../TextArea/TextArea';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const CertificationKey = ({\n  hasCert,\n  label,\n  onChange,\n  onClick,\n  placeholder\n}) => {\n  return /*#__PURE__*/_jsxs(InlineFieldRow, {\n    children: [/*#__PURE__*/_jsx(InlineField, {\n      label: label,\n      labelWidth: 14,\n      disabled: hasCert,\n      children: hasCert ? _Input || (_Input = /*#__PURE__*/_jsx(Input, {\n        type: \"text\",\n        value: \"configured\",\n        width: 24\n      })) : /*#__PURE__*/_jsx(TextArea, {\n        rows: 7,\n        onChange: onChange,\n        placeholder: placeholder,\n        required: true\n      })\n    }), hasCert && /*#__PURE__*/_jsx(Button, {\n      variant: \"secondary\",\n      onClick: onClick,\n      style: {\n        marginLeft: 4\n      },\n      children: \"Reset\"\n    })]\n  });\n};","map":{"version":3,"names":["React","Button","InlineField","InlineFieldRow","Input","TextArea","CertificationKey","hasCert","label","onChange","onClick","placeholder","marginLeft"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataSourceSettings/CertificationKey.tsx"],"sourcesContent":["import React, { ChangeEvent, MouseEvent, FC } from 'react';\n\nimport { Button } from '../Button';\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { Input } from '../Input/Input';\nimport { TextArea } from '../TextArea/TextArea';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey: FC<Props> = ({ hasCert, label, onChange, onClick, placeholder }) => {\n  return (\n    <InlineFieldRow>\n      <InlineField label={label} labelWidth={14} disabled={hasCert}>\n        {hasCert ? (\n          <Input type=\"text\" value=\"configured\" width={24} />\n        ) : (\n          <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n        )}\n      </InlineField>\n      {hasCert && (\n        <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n          Reset\n        </Button>\n      )}\n    </InlineFieldRow>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAmD,OAAnD;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;;AAWA,OAAO,MAAMC,gBAA2B,GAAG,CAAC;EAAEC,OAAF;EAAWC,KAAX;EAAkBC,QAAlB;EAA4BC,OAA5B;EAAqCC;AAArC,CAAD,KAAwD;EACjG,oBACE,MAAC,cAAD;IAAA,wBACE,KAAC,WAAD;MAAa,KAAK,EAAEH,KAApB;MAA2B,UAAU,EAAE,EAAvC;MAA2C,QAAQ,EAAED,OAArD;MAAA,UACGA,OAAO,oCACN,KAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAC,YAAzB;QAAsC,KAAK,EAAE;MAA7C,EADM,iBAGN,KAAC,QAAD;QAAU,IAAI,EAAE,CAAhB;QAAmB,QAAQ,EAAEE,QAA7B;QAAuC,WAAW,EAAEE,WAApD;QAAiE,QAAQ;MAAzE;IAJJ,EADF,EAQGJ,OAAO,iBACN,KAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,OAAO,EAAEG,OAArC;MAA8C,KAAK,EAAE;QAAEE,UAAU,EAAE;MAAd,CAArD;MAAA;IAAA,EATJ;EAAA,EADF;AAgBD,CAjBM"},"metadata":{},"sourceType":"module"}