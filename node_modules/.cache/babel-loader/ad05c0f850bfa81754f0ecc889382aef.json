{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getInstanceState } from '../state/selectors';\nimport { initialVariablesState } from '../state/types';\nimport { initialVariableModelState } from '../types';\nexport const initialTextBoxVariableModelState = Object.assign({}, initialVariableModelState, {\n  type: 'textbox',\n  query: '',\n  current: {},\n  options: [],\n  originalQuery: null\n});\nexport const textBoxVariableSlice = createSlice({\n  name: 'templating/textbox',\n  initialState: initialVariablesState,\n  reducers: {\n    createTextBoxOptions: (state, action) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      const option = {\n        text: instanceState.query.trim(),\n        value: instanceState.query.trim(),\n        selected: false\n      };\n      instanceState.options = [option];\n      instanceState.current = option;\n    }\n  }\n});\nexport const textBoxVariableReducer = textBoxVariableSlice.reducer;\nexport const {\n  createTextBoxOptions\n} = textBoxVariableSlice.actions;","map":{"version":3,"names":["createSlice","getInstanceState","initialVariablesState","initialVariableModelState","initialTextBoxVariableModelState","type","query","current","options","originalQuery","textBoxVariableSlice","name","initialState","reducers","createTextBoxOptions","state","action","instanceState","payload","id","option","text","trim","value","selected","textBoxVariableReducer","reducer","actions"],"sources":["/home/soula/grafana/public/app/features/variables/textbox/reducer.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getInstanceState } from '../state/selectors';\nimport { initialVariablesState, VariablePayload, VariablesState } from '../state/types';\nimport { initialVariableModelState, TextBoxVariableModel, VariableOption } from '../types';\n\nexport const initialTextBoxVariableModelState: TextBoxVariableModel = {\n  ...initialVariableModelState,\n  type: 'textbox',\n  query: '',\n  current: {} as VariableOption,\n  options: [],\n  originalQuery: null,\n};\n\nexport const textBoxVariableSlice = createSlice({\n  name: 'templating/textbox',\n  initialState: initialVariablesState,\n  reducers: {\n    createTextBoxOptions: (state: VariablesState, action: PayloadAction<VariablePayload>) => {\n      const instanceState = getInstanceState<TextBoxVariableModel>(state, action.payload.id);\n      const option = { text: instanceState.query.trim(), value: instanceState.query.trim(), selected: false };\n      instanceState.options = [option];\n      instanceState.current = option;\n    },\n  },\n});\n\nexport const textBoxVariableReducer = textBoxVariableSlice.reducer;\n\nexport const { createTextBoxOptions } = textBoxVariableSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,qBAAT,QAAuE,gBAAvE;AACA,SAASC,yBAAT,QAAgF,UAAhF;AAEA,OAAO,MAAMC,gCAAsD,qBAC9DD,yBAD8D;EAEjEE,IAAI,EAAE,SAF2D;EAGjEC,KAAK,EAAE,EAH0D;EAIjEC,OAAO,EAAE,EAJwD;EAKjEC,OAAO,EAAE,EALwD;EAMjEC,aAAa,EAAE;AANkD,EAA5D;AASP,OAAO,MAAMC,oBAAoB,GAAGV,WAAW,CAAC;EAC9CW,IAAI,EAAE,oBADwC;EAE9CC,YAAY,EAAEV,qBAFgC;EAG9CW,QAAQ,EAAE;IACRC,oBAAoB,EAAE,CAACC,KAAD,EAAwBC,MAAxB,KAAmE;MACvF,MAAMC,aAAa,GAAGhB,gBAAgB,CAAuBc,KAAvB,EAA8BC,MAAM,CAACE,OAAP,CAAeC,EAA7C,CAAtC;MACA,MAAMC,MAAM,GAAG;QAAEC,IAAI,EAAEJ,aAAa,CAACX,KAAd,CAAoBgB,IAApB,EAAR;QAAoCC,KAAK,EAAEN,aAAa,CAACX,KAAd,CAAoBgB,IAApB,EAA3C;QAAuEE,QAAQ,EAAE;MAAjF,CAAf;MACAP,aAAa,CAACT,OAAd,GAAwB,CAACY,MAAD,CAAxB;MACAH,aAAa,CAACV,OAAd,GAAwBa,MAAxB;IACD;EANO;AAHoC,CAAD,CAAxC;AAaP,OAAO,MAAMK,sBAAsB,GAAGf,oBAAoB,CAACgB,OAApD;AAEP,OAAO,MAAM;EAAEZ;AAAF,IAA2BJ,oBAAoB,CAACiB,OAAtD"},"metadata":{},"sourceType":"module"}