{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cloneDeep, isNumber } from 'lodash';\nimport { dateTime } from '@grafana/data';\nimport { coreModule } from 'app/angular/core_module';\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from '../../../features/annotations/api';\nimport { getDashboardQueryRunner } from '../../../features/query/state/DashboardQueryRunner/DashboardQueryRunner';\nexport class EventEditorCtrl {\n  // @ts-ignore initialized through Angular not constructor\n  // @ts-ignore initialized through Angular not constructor\n\n  /** @ngInject */\n  constructor() {\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"event\", void 0);\n\n    _defineProperty(this, \"timeRange\", void 0);\n\n    _defineProperty(this, \"form\", void 0);\n\n    _defineProperty(this, \"close\", void 0);\n\n    _defineProperty(this, \"timeFormated\", void 0);\n  }\n\n  $onInit() {\n    this.event.panelId = this.panelCtrl.panel.id; // set correct id if in panel edit\n\n    this.event.dashboardId = this.panelCtrl.dashboard.id; // Annotations query returns time as Unix timestamp in milliseconds\n\n    this.event.time = tryEpochToMoment(this.event.time);\n\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time);\n  }\n\n  canDelete() {\n    if (contextSrv.accessControlEnabled()) {\n      var _this$panelCtrl$dashb2;\n\n      if (this.event.source.type === 'dashboard') {\n        var _this$panelCtrl$dashb;\n\n        return !!((_this$panelCtrl$dashb = this.panelCtrl.dashboard.meta.annotationsPermissions) !== null && _this$panelCtrl$dashb !== void 0 && _this$panelCtrl$dashb.dashboard.canDelete);\n      }\n\n      return !!((_this$panelCtrl$dashb2 = this.panelCtrl.dashboard.meta.annotationsPermissions) !== null && _this$panelCtrl$dashb2 !== void 0 && _this$panelCtrl$dashb2.organization.canDelete);\n    }\n\n    return true;\n  }\n\n  async save() {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = cloneDeep(this.event);\n    saveModel.time = saveModel.time.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    let crudFunction = saveAnnotation;\n\n    if (saveModel.id) {\n      crudFunction = updateAnnotation;\n    }\n\n    try {\n      await crudFunction(saveModel);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({\n        dashboard: this.panelCtrl.dashboard,\n        range: this.panelCtrl.range\n      });\n    }\n  }\n\n  async delete() {\n    try {\n      await deleteAnnotation(this.event);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({\n        dashboard: this.panelCtrl.dashboard,\n        range: this.panelCtrl.range\n      });\n    }\n  }\n\n}\nEventEditorCtrl.$inject = [];\n\nfunction tryEpochToMoment(timestamp) {\n  if (timestamp && isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&'\n    }\n  };\n}\ncoreModule.directive('eventEditor', eventEditor);","map":{"version":3,"names":["cloneDeep","isNumber","dateTime","coreModule","contextSrv","deleteAnnotation","saveAnnotation","updateAnnotation","getDashboardQueryRunner","EventEditorCtrl","constructor","$onInit","event","panelId","panelCtrl","panel","id","dashboardId","dashboard","time","tryEpochToMoment","isRegion","timeEnd","timeFormated","formatDate","canDelete","accessControlEnabled","source","type","meta","annotationsPermissions","organization","save","form","$valid","saveModel","valueOf","console","log","crudFunction","err","close","run","range","delete","timestamp","epoch","Number","eventEditor","restrict","controller","bindToController","controllerAs","templateUrl","scope","directive"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/event_editor.ts"],"sourcesContent":["import { cloneDeep, isNumber } from 'lodash';\n\nimport { AnnotationEvent, dateTime } from '@grafana/data';\nimport { coreModule } from 'app/angular/core_module';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from '../../../features/annotations/api';\nimport { getDashboardQueryRunner } from '../../../features/query/state/DashboardQueryRunner/DashboardQueryRunner';\n\nexport class EventEditorCtrl {\n  // @ts-ignore initialized through Angular not constructor\n  panelCtrl: MetricsPanelCtrl;\n  // @ts-ignore initialized through Angular not constructor\n  event: AnnotationEvent;\n  timeRange?: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated?: string;\n\n  /** @ngInject */\n  constructor() {}\n\n  $onInit() {\n    this.event.panelId = this.panelCtrl.panel.id; // set correct id if in panel edit\n    this.event.dashboardId = this.panelCtrl.dashboard.id;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time!);\n  }\n\n  canDelete(): boolean {\n    if (contextSrv.accessControlEnabled()) {\n      if (this.event.source.type === 'dashboard') {\n        return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.dashboard.canDelete;\n      }\n      return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.organization.canDelete;\n    }\n    return true;\n  }\n\n  async save(): Promise<void> {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = cloneDeep(this.event);\n    saveModel.time = saveModel.time!.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd!.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    let crudFunction = saveAnnotation;\n    if (saveModel.id) {\n      crudFunction = updateAnnotation;\n    }\n\n    try {\n      await crudFunction(saveModel);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n\n  async delete(): Promise<void> {\n    try {\n      await deleteAnnotation(this.event);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n}\n\nfunction tryEpochToMoment(timestamp: any) {\n  if (timestamp && isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}