{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { difference } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { fieldReducers } from '@grafana/data';\nimport { Select } from '../Select/Select';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class StatsPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"checkInput\", () => {\n      const {\n        stats,\n        allowMultiple,\n        defaultStat,\n        onChange\n      } = this.props;\n      const current = fieldReducers.list(stats);\n\n      if (current.length !== stats.length) {\n        const found = current.map(v => v.id);\n        const notFound = difference(stats, found);\n        console.warn('Unknown stats', notFound, stats);\n        onChange(current.map(stat => stat.id));\n      } // Make sure there is only one\n\n\n      if (!allowMultiple && stats.length > 1) {\n        console.warn('Removing extra stat', stats);\n        onChange([stats[0]]);\n      } // Set the reducer from callback\n\n\n      if (defaultStat && stats.length < 1) {\n        onChange([defaultStat]);\n      }\n    });\n\n    _defineProperty(this, \"onSelectionChange\", item => {\n      const {\n        onChange\n      } = this.props;\n\n      if (Array.isArray(item)) {\n        onChange(item.map(v => v.value));\n      } else {\n        onChange(item && item.value ? [item.value] : []);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.checkInput();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.checkInput();\n  }\n\n  render() {\n    const {\n      stats,\n      allowMultiple,\n      defaultStat,\n      placeholder,\n      className,\n      menuPlacement,\n      width,\n      inputId\n    } = this.props;\n    const select = fieldReducers.selectOptions(stats);\n    return /*#__PURE__*/_jsx(Select, {\n      value: select.current,\n      className: className,\n      isClearable: !defaultStat,\n      isMulti: allowMultiple,\n      width: width,\n      isSearchable: true,\n      options: select.options,\n      placeholder: placeholder,\n      onChange: this.onSelectionChange,\n      menuPlacement: menuPlacement,\n      inputId: inputId\n    });\n  }\n\n}\n\n_defineProperty(StatsPicker, \"defaultProps\", {\n  allowMultiple: false\n});","map":{"version":3,"names":["difference","React","PureComponent","fieldReducers","Select","StatsPicker","stats","allowMultiple","defaultStat","onChange","props","current","list","length","found","map","v","id","notFound","console","warn","stat","item","Array","isArray","value","componentDidMount","checkInput","componentDidUpdate","prevProps","render","placeholder","className","menuPlacement","width","inputId","select","selectOptions","options","onSelectionChange"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/StatsPicker/StatsPicker.tsx"],"sourcesContent":["import { difference } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { fieldReducers, SelectableValue } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nexport interface Props {\n  placeholder?: string;\n  onChange: (stats: string[]) => void;\n  stats: string[];\n  allowMultiple?: boolean;\n  defaultStat?: string;\n  className?: string;\n  width?: number;\n  menuPlacement?: 'auto' | 'bottom' | 'top';\n  inputId?: string;\n}\n\nexport class StatsPicker extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    allowMultiple: false,\n  };\n\n  componentDidMount() {\n    this.checkInput();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkInput();\n  }\n\n  checkInput = () => {\n    const { stats, allowMultiple, defaultStat, onChange } = this.props;\n\n    const current = fieldReducers.list(stats);\n    if (current.length !== stats.length) {\n      const found = current.map((v) => v.id);\n      const notFound = difference(stats, found);\n      console.warn('Unknown stats', notFound, stats);\n      onChange(current.map((stat) => stat.id));\n    }\n\n    // Make sure there is only one\n    if (!allowMultiple && stats.length > 1) {\n      console.warn('Removing extra stat', stats);\n      onChange([stats[0]]);\n    }\n\n    // Set the reducer from callback\n    if (defaultStat && stats.length < 1) {\n      onChange([defaultStat]);\n    }\n  };\n\n  onSelectionChange = (item: SelectableValue<string>) => {\n    const { onChange } = this.props;\n    if (Array.isArray(item)) {\n      onChange(item.map((v) => v.value));\n    } else {\n      onChange(item && item.value ? [item.value] : []);\n    }\n  };\n\n  render() {\n    const { stats, allowMultiple, defaultStat, placeholder, className, menuPlacement, width, inputId } = this.props;\n\n    const select = fieldReducers.selectOptions(stats);\n    return (\n      <Select\n        value={select.current}\n        className={className}\n        isClearable={!defaultStat}\n        isMulti={allowMultiple}\n        width={width}\n        isSearchable={true}\n        options={select.options}\n        placeholder={placeholder}\n        onChange={this.onSelectionChange}\n        menuPlacement={menuPlacement}\n        inputId={inputId}\n      />\n    );\n  }\n}\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,aAAT,QAA+C,eAA/C;AAEA,SAASC,MAAT,QAAuB,kBAAvB;;AAcA,OAAO,MAAMC,WAAN,SAA0BH,aAA1B,CAA+C;EAAA;IAAA;;IAAA,oCAavC,MAAM;MACjB,MAAM;QAAEI,KAAF;QAASC,aAAT;QAAwBC,WAAxB;QAAqCC;MAArC,IAAkD,KAAKC,KAA7D;MAEA,MAAMC,OAAO,GAAGR,aAAa,CAACS,IAAd,CAAmBN,KAAnB,CAAhB;;MACA,IAAIK,OAAO,CAACE,MAAR,KAAmBP,KAAK,CAACO,MAA7B,EAAqC;QACnC,MAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,EAArB,CAAd;QACA,MAAMC,QAAQ,GAAGlB,UAAU,CAACM,KAAD,EAAQQ,KAAR,CAA3B;QACAK,OAAO,CAACC,IAAR,CAAa,eAAb,EAA8BF,QAA9B,EAAwCZ,KAAxC;QACAG,QAAQ,CAACE,OAAO,CAACI,GAAR,CAAaM,IAAD,IAAUA,IAAI,CAACJ,EAA3B,CAAD,CAAR;MACD,CATgB,CAWjB;;;MACA,IAAI,CAACV,aAAD,IAAkBD,KAAK,CAACO,MAAN,GAAe,CAArC,EAAwC;QACtCM,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCd,KAApC;QACAG,QAAQ,CAAC,CAACH,KAAK,CAAC,CAAD,CAAN,CAAD,CAAR;MACD,CAfgB,CAiBjB;;;MACA,IAAIE,WAAW,IAAIF,KAAK,CAACO,MAAN,GAAe,CAAlC,EAAqC;QACnCJ,QAAQ,CAAC,CAACD,WAAD,CAAD,CAAR;MACD;IACF,CAlCmD;;IAAA,2CAoC/Bc,IAAD,IAAmC;MACrD,MAAM;QAAEb;MAAF,IAAe,KAAKC,KAA1B;;MACA,IAAIa,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;QACvBb,QAAQ,CAACa,IAAI,CAACP,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACS,KAAlB,CAAD,CAAR;MACD,CAFD,MAEO;QACLhB,QAAQ,CAACa,IAAI,IAAIA,IAAI,CAACG,KAAb,GAAqB,CAACH,IAAI,CAACG,KAAN,CAArB,GAAoC,EAArC,CAAR;MACD;IACF,CA3CmD;EAAA;;EAKpDC,iBAAiB,GAAG;IAClB,KAAKC,UAAL;EACD;;EAEDC,kBAAkB,CAACC,SAAD,EAAmB;IACnC,KAAKF,UAAL;EACD;;EAkCDG,MAAM,GAAG;IACP,MAAM;MAAExB,KAAF;MAASC,aAAT;MAAwBC,WAAxB;MAAqCuB,WAArC;MAAkDC,SAAlD;MAA6DC,aAA7D;MAA4EC,KAA5E;MAAmFC;IAAnF,IAA+F,KAAKzB,KAA1G;IAEA,MAAM0B,MAAM,GAAGjC,aAAa,CAACkC,aAAd,CAA4B/B,KAA5B,CAAf;IACA,oBACE,KAAC,MAAD;MACE,KAAK,EAAE8B,MAAM,CAACzB,OADhB;MAEE,SAAS,EAAEqB,SAFb;MAGE,WAAW,EAAE,CAACxB,WAHhB;MAIE,OAAO,EAAED,aAJX;MAKE,KAAK,EAAE2B,KALT;MAME,YAAY,EAAE,IANhB;MAOE,OAAO,EAAEE,MAAM,CAACE,OAPlB;MAQE,WAAW,EAAEP,WARf;MASE,QAAQ,EAAE,KAAKQ,iBATjB;MAUE,aAAa,EAAEN,aAVjB;MAWE,OAAO,EAAEE;IAXX,EADF;EAeD;;AAhEmD;;gBAAzC9B,W,kBAC2B;EACpCE,aAAa,EAAE;AADqB,C"},"metadata":{},"sourceType":"module"}