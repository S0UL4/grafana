{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport ReactDiffViewer, { DiffMethod } from 'react-diff-viewer';\nimport tinycolor from 'tinycolor2';\nimport { useTheme } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DiffViewer = ({\n  oldValue,\n  newValue\n}) => {\n  const theme = useTheme();\n  const styles = {\n    variables: {\n      // the light theme supplied by ReactDiffViewer is very similar to Grafana\n      // the dark theme needs some tweaks.\n      dark: {\n        diffViewerBackground: theme.colors.dashboardBg,\n        diffViewerColor: theme.colors.text,\n        addedBackground: tinycolor(theme.palette.greenShade).setAlpha(0.3).toString(),\n        addedColor: 'white',\n        removedBackground: tinycolor(theme.palette.redShade).setAlpha(0.3).toString(),\n        removedColor: 'white',\n        wordAddedBackground: tinycolor(theme.palette.greenBase).setAlpha(0.4).toString(),\n        wordRemovedBackground: tinycolor(theme.palette.redBase).setAlpha(0.4).toString(),\n        addedGutterBackground: tinycolor(theme.palette.greenShade).setAlpha(0.2).toString(),\n        removedGutterBackground: tinycolor(theme.palette.redShade).setAlpha(0.2).toString(),\n        gutterBackground: theme.colors.bg1,\n        gutterBackgroundDark: theme.colors.bg1,\n        highlightBackground: tinycolor(theme.colors.bgBlue1).setAlpha(0.4).toString(),\n        highlightGutterBackground: tinycolor(theme.colors.bgBlue2).setAlpha(0.2).toString(),\n        codeFoldGutterBackground: theme.colors.bg2,\n        codeFoldBackground: theme.colors.bg2,\n        emptyLineBackground: theme.colors.bg2,\n        gutterColor: theme.colors.textFaint,\n        addedGutterColor: theme.colors.text,\n        removedGutterColor: theme.colors.text,\n        codeFoldContentColor: theme.colors.textFaint,\n        diffViewerTitleBackground: theme.colors.bg2,\n        diffViewerTitleColor: theme.colors.textFaint,\n        diffViewerTitleBorderColor: theme.colors.border3\n      }\n    },\n    codeFold: {\n      fontSize: theme.typography.size.sm\n    },\n    gutter: `\n      pre {\n        color: ${tinycolor(theme.colors.textFaint).setAlpha(1).toString()};\n        opacity: 0.61;\n      }\n    `\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: css`\n        font-size: ${theme.typography.size.sm};\n        // prevent global styles interfering with diff viewer\n        pre {\n          all: revert;\n        }\n      `,\n    children: /*#__PURE__*/_jsx(ReactDiffViewer, {\n      styles: styles,\n      oldValue: oldValue,\n      newValue: newValue,\n      splitView: false,\n      compareMethod: DiffMethod.CSS,\n      useDarkTheme: theme.isDark\n    })\n  });\n};","map":{"version":3,"names":["css","React","ReactDiffViewer","DiffMethod","tinycolor","useTheme","DiffViewer","oldValue","newValue","theme","styles","variables","dark","diffViewerBackground","colors","dashboardBg","diffViewerColor","text","addedBackground","palette","greenShade","setAlpha","toString","addedColor","removedBackground","redShade","removedColor","wordAddedBackground","greenBase","wordRemovedBackground","redBase","addedGutterBackground","removedGutterBackground","gutterBackground","bg1","gutterBackgroundDark","highlightBackground","bgBlue1","highlightGutterBackground","bgBlue2","codeFoldGutterBackground","bg2","codeFoldBackground","emptyLineBackground","gutterColor","textFaint","addedGutterColor","removedGutterColor","codeFoldContentColor","diffViewerTitleBackground","diffViewerTitleColor","diffViewerTitleBorderColor","border3","codeFold","fontSize","typography","size","sm","gutter","CSS","isDark"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/VersionHistory/DiffViewer.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport ReactDiffViewer, { ReactDiffViewerProps, DiffMethod } from 'react-diff-viewer';\nimport tinycolor from 'tinycolor2';\n\nimport { useTheme } from '@grafana/ui';\n\nexport const DiffViewer: React.FC<ReactDiffViewerProps> = ({ oldValue, newValue }) => {\n  const theme = useTheme();\n\n  const styles = {\n    variables: {\n      // the light theme supplied by ReactDiffViewer is very similar to Grafana\n      // the dark theme needs some tweaks.\n      dark: {\n        diffViewerBackground: theme.colors.dashboardBg,\n        diffViewerColor: theme.colors.text,\n        addedBackground: tinycolor(theme.palette.greenShade).setAlpha(0.3).toString(),\n        addedColor: 'white',\n        removedBackground: tinycolor(theme.palette.redShade).setAlpha(0.3).toString(),\n        removedColor: 'white',\n        wordAddedBackground: tinycolor(theme.palette.greenBase).setAlpha(0.4).toString(),\n        wordRemovedBackground: tinycolor(theme.palette.redBase).setAlpha(0.4).toString(),\n        addedGutterBackground: tinycolor(theme.palette.greenShade).setAlpha(0.2).toString(),\n        removedGutterBackground: tinycolor(theme.palette.redShade).setAlpha(0.2).toString(),\n        gutterBackground: theme.colors.bg1,\n        gutterBackgroundDark: theme.colors.bg1,\n        highlightBackground: tinycolor(theme.colors.bgBlue1).setAlpha(0.4).toString(),\n        highlightGutterBackground: tinycolor(theme.colors.bgBlue2).setAlpha(0.2).toString(),\n        codeFoldGutterBackground: theme.colors.bg2,\n        codeFoldBackground: theme.colors.bg2,\n        emptyLineBackground: theme.colors.bg2,\n        gutterColor: theme.colors.textFaint,\n        addedGutterColor: theme.colors.text,\n        removedGutterColor: theme.colors.text,\n        codeFoldContentColor: theme.colors.textFaint,\n        diffViewerTitleBackground: theme.colors.bg2,\n        diffViewerTitleColor: theme.colors.textFaint,\n        diffViewerTitleBorderColor: theme.colors.border3,\n      },\n    },\n    codeFold: {\n      fontSize: theme.typography.size.sm,\n    },\n    gutter: `\n      pre {\n        color: ${tinycolor(theme.colors.textFaint).setAlpha(1).toString()};\n        opacity: 0.61;\n      }\n    `,\n  };\n\n  return (\n    <div\n      className={css`\n        font-size: ${theme.typography.size.sm};\n        // prevent global styles interfering with diff viewer\n        pre {\n          all: revert;\n        }\n      `}\n    >\n      <ReactDiffViewer\n        styles={styles}\n        oldValue={oldValue}\n        newValue={newValue}\n        splitView={false}\n        compareMethod={DiffMethod.CSS}\n        useDarkTheme={theme.isDark}\n      />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}