{"ast":null,"code":"export const getSearchQuery = state => state.searchQuery;\nexport const getAlertRuleItems = state => {\n  const regex = new RegExp(state.alertRules.searchQuery, 'i');\n  return state.alertRules.items.filter(item => {\n    return regex.test(item.name) || regex.test(item.stateText) || regex.test(item.info);\n  });\n};\nexport const getNotificationChannel = (state, channelId) => {\n  if (state.notificationChannel.id === channelId) {\n    return state.notificationChannel;\n  }\n\n  return null;\n};","map":{"version":3,"names":["getSearchQuery","state","searchQuery","getAlertRuleItems","regex","RegExp","alertRules","items","filter","item","test","name","stateText","info","getNotificationChannel","channelId","notificationChannel","id"],"sources":["/home/soula/grafana/public/app/features/alerting/state/selectors.ts"],"sourcesContent":["import { AlertRule, AlertRulesState, NotificationChannelState, StoreState } from 'app/types';\n\nexport const getSearchQuery = (state: AlertRulesState) => state.searchQuery;\n\nexport const getAlertRuleItems = (state: StoreState): AlertRule[] => {\n  const regex = new RegExp(state.alertRules.searchQuery, 'i');\n\n  return state.alertRules.items.filter((item) => {\n    return regex.test(item.name) || regex.test(item.stateText) || regex.test(item.info!);\n  });\n};\n\nexport const getNotificationChannel = (state: NotificationChannelState, channelId: number) => {\n  if (state.notificationChannel.id === channelId) {\n    return state.notificationChannel;\n  }\n\n  return null;\n};\n"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAIC,KAAD,IAA4BA,KAAK,CAACC,WAAzD;AAEP,OAAO,MAAMC,iBAAiB,GAAIF,KAAD,IAAoC;EACnE,MAAMG,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,KAAK,CAACK,UAAN,CAAiBJ,WAA5B,EAAyC,GAAzC,CAAd;EAEA,OAAOD,KAAK,CAACK,UAAN,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA+BC,IAAD,IAAU;IAC7C,OAAOL,KAAK,CAACM,IAAN,CAAWD,IAAI,CAACE,IAAhB,KAAyBP,KAAK,CAACM,IAAN,CAAWD,IAAI,CAACG,SAAhB,CAAzB,IAAuDR,KAAK,CAACM,IAAN,CAAWD,IAAI,CAACI,IAAhB,CAA9D;EACD,CAFM,CAAP;AAGD,CANM;AAQP,OAAO,MAAMC,sBAAsB,GAAG,CAACb,KAAD,EAAkCc,SAAlC,KAAwD;EAC5F,IAAId,KAAK,CAACe,mBAAN,CAA0BC,EAA1B,KAAiCF,SAArC,EAAgD;IAC9C,OAAOd,KAAK,CAACe,mBAAb;EACD;;EAED,OAAO,IAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}