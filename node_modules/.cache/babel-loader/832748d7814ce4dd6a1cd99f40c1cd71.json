{"ast":null,"code":"init.$inject = [\"plot\"];\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport $ from 'jquery';\nimport { partition, each } from 'lodash'; //@ts-ignore\n\nimport Drop from 'tether-drop';\nimport { getLegacyAngularInjector } from '@grafana/runtime';\n/** @ngInject */\n\nconst createAnnotationToolip = (element, event, plot) => {\n  const injector = getLegacyAngularInjector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n  injector.invoke(['$compile', '$rootScope', ($compile, $rootScope) => {\n    const eventManager = plot.getOptions().events.manager;\n    const tmpScope = $rootScope.$new(true);\n    tmpScope.event = event;\n\n    tmpScope.onEdit = () => {\n      eventManager.editEvent(event);\n    };\n\n    $compile(content)(tmpScope);\n    tmpScope.$digest();\n    tmpScope.$destroy();\n    const drop = new Drop({\n      target: element[0],\n      content: content,\n      position: 'bottom center',\n      classes: 'drop-popover drop-popover--annotation',\n      openOn: 'hover',\n      hoverCloseDelay: 200,\n      tetherOptions: {\n        constraints: [{\n          to: 'window',\n          pin: true,\n          attachment: 'both'\n        }]\n      }\n    });\n    drop.open();\n    drop.on('close', () => {\n      setTimeout(() => {\n        drop.destroy();\n      });\n    });\n  }]);\n};\n\ncreateAnnotationToolip.$inject = [\"element\", \"event\", \"plot\"];\nlet markerElementToAttachTo = null;\n/** @ngInject */\n\nconst createEditPopover = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  } // mark as openend\n\n\n  eventManager.editorOpened(); // set marker elment to attache to\n\n  markerElementToAttachTo = element; // wait for element to be attached and positioned\n\n  setTimeout(() => {\n    const injector = getLegacyAngularInjector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n    injector.invoke(['$compile', '$rootScope', ($compile, $rootScope) => {\n      const scope = $rootScope.$new(true);\n      let drop;\n      scope.event = event;\n      scope.panelCtrl = eventManager.panelCtrl;\n\n      scope.close = () => {\n        drop.close();\n      };\n\n      $compile(content)(scope);\n      scope.$digest();\n      drop = new Drop({\n        target: markerElementToAttachTo[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--form',\n        openOn: 'click',\n        tetherOptions: {\n          constraints: [{\n            to: 'window',\n            pin: true,\n            attachment: 'both'\n          }]\n        }\n      });\n      drop.open();\n      eventManager.editorOpened();\n      drop.on('close', () => {\n        // need timeout here in order call drop.destroy\n        setTimeout(() => {\n          eventManager.editorClosed();\n          scope.$destroy();\n          drop.destroy();\n        });\n      });\n    }]);\n  }, 100);\n};\n\ncreateEditPopover.$inject = [\"element\", \"event\", \"plot\"];\nexport { createEditPopover, createAnnotationToolip };\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\n\nexport class DrawableEvent {\n  /** @ngInject */\n  constructor(object, drawFunc, clearFunc, moveFunc, left, top, width, height) {\n    _defineProperty(this, \"_object\", void 0);\n\n    _defineProperty(this, \"_drawFunc\", void 0);\n\n    _defineProperty(this, \"_clearFunc\", void 0);\n\n    _defineProperty(this, \"_moveFunc\", void 0);\n\n    _defineProperty(this, \"_position\", void 0);\n\n    _defineProperty(this, \"_width\", void 0);\n\n    _defineProperty(this, \"_height\", void 0);\n\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = {\n      left,\n      top\n    };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n\n  height() {\n    return this._height;\n  }\n\n  position() {\n    return this._position;\n  }\n\n  draw() {\n    this._drawFunc(this._object);\n  }\n\n  clear() {\n    this._clearFunc(this._object);\n  }\n\n  getObject() {\n    return this._object;\n  }\n\n  moveTo(position) {\n    this._position = position;\n\n    this._moveFunc(this._object, this._position);\n  }\n\n}\nDrawableEvent.$inject = [\"object\", \"drawFunc\", \"clearFunc\", \"moveFunc\", \"left\", \"top\", \"width\", \"height\"];\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  /** @ngInject */\n  constructor(options, drawableEvent) {\n    _defineProperty(this, \"_parent\", void 0);\n\n    _defineProperty(this, \"_options\", void 0);\n\n    _defineProperty(this, \"_drawableEvent\", void 0);\n\n    _defineProperty(this, \"_hidden\", void 0);\n\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n\n  getOptions() {\n    return this._options;\n  }\n\n  getParent() {\n    return this._parent;\n  }\n\n  isHidden() {\n    return this._hidden;\n  }\n\n  hide() {\n    this._hidden = true;\n  }\n\n  unhide() {\n    this._hidden = false;\n  }\n\n}\nVisualEvent.$inject = [\"options\", \"drawableEvent\"];\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  /** @ngInject */\n  constructor(plot) {\n    _defineProperty(this, \"_events\", void 0);\n\n    _defineProperty(this, \"_types\", void 0);\n\n    _defineProperty(this, \"_plot\", void 0);\n\n    _defineProperty(this, \"eventsEnabled\", void 0);\n\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types) {\n    return this._types = types;\n  }\n  /**\n   * create internal objects for the given events\n   */\n\n\n  setupEvents(events) {\n    const parts = partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n\n      this._events.push(ve);\n    });\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n\n      this._events.push(vre);\n    });\n\n    this._events.sort((a, b) => {\n      const ao = a.getOptions(),\n            bo = b.getOptions();\n\n      if (ao.min > bo.min) {\n        return 1;\n      }\n\n      if (ao.min < bo.min) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n  /**\n   * draw the events to the plot\n   */\n\n\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n    $.each(this._events, (index, event) => {\n      const options = event.getOptions();\n\n      const insidePlot = this._insidePlot(options.min) || this._insidePlot(options.timeEnd);\n\n      const overlapPlot = this._overlapPlot(options.min, options.timeEnd); // check event is inside the graph range\n\n\n      if ((insidePlot || overlapPlot) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event.visual().getObject().hide();\n      }\n    });\n  }\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n\n\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n\n    let left;\n    let top;\n\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({\n        top: top,\n        left: left\n      });\n    });\n  }\n  /**\n   * remove all events from the plot\n   */\n\n\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n  /**\n   * create a DOM element for the given event\n   */\n\n\n  _buildDiv(event) {\n    var _line$width, _line$height;\n\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n\n    const o = this._plot.getPlotOffset();\n\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip; // map the eventType to a types object\n\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.8,\n      left: left + 'px',\n      top: 8,\n      width: lineWidth + 'px',\n      height: this._plot.height() + topOffset * 0.8,\n      'border-left-width': lineWidth + 'px',\n      'border-left-style': lineStyle,\n      'border-left-color': color,\n      color: color\n    }).appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent'\n      });\n      marker.appendTo(line);\n\n      if (this._types[eventTypeId] && this._types[eventTypeId].position && this._types[eventTypeId].position.toUpperCase() === 'BOTTOM') {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none'\n        });\n      }\n\n      marker.data({\n        event: event\n      });\n\n      const mouseenter = function () {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({\n          cursor: 'help'\n        });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(line, function drawFunc(obj) {\n      obj.show();\n    }, obj => {\n      obj.remove();\n    }, (obj, position) => {\n      obj.css({\n        top: position.top,\n        left: position.left\n      });\n    }, left, top, (_line$width = line.width()) !== null && _line$width !== void 0 ? _line$width : 1, (_line$height = line.height()) !== null && _line$height !== void 0 ? _line$height : 1);\n    return drawableEvent;\n  }\n  /**\n   * create a DOM element for the given region\n   */\n\n\n  _buildRegDiv(event) {\n    var _region$width, _region$height;\n\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n\n    const o = this._plot.getPlotOffset();\n\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    let top, left, lineWidth, regionWidth, lineStyle, color, markerTooltip; // map the eventType to a types object\n\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n    const [xmin, xmax] = [o.left, o.left + this._plot.width()];\n    const regionStart = Math.max(left, xmin);\n    const regionEnd = Math.min(right, xmax);\n    const regionOffset = right > xmax ? 0 : lineWidth; // only include lineWidth when right line is visible\n\n    regionWidth = regionEnd - regionStart + regionOffset;\n    each([left, right], position => {\n      // only draw visible region lines\n      if (xmin <= position && position < xmax) {\n        const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n          position: 'absolute',\n          opacity: 0.8,\n          left: position + 'px',\n          top: 8,\n          width: lineWidth + 'px',\n          height: this._plot.height() + topOffset,\n          'border-left-width': lineWidth + 'px',\n          'border-left-style': lineStyle,\n          'border-left-color': color,\n          color: color\n        });\n        line.appendTo(container);\n      }\n    });\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: regionStart + 'px',\n      top: top,\n      width: regionWidth + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color\n    });\n    region.appendTo(container);\n    region.data({\n      event: event\n    });\n\n    const mouseenter = function () {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({\n        cursor: 'help'\n      });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(region, function drawFunc(obj) {\n      obj.show();\n    }, obj => {\n      obj.remove();\n    }, (obj, position) => {\n      obj.css({\n        top: position.top,\n        left: position.left\n      });\n    }, left, top, (_region$width = region.width()) !== null && _region$width !== void 0 ? _region$width : 1, (_region$height = region.height()) !== null && _region$height !== void 0 ? _region$height : 1);\n    return drawableEvent;\n  }\n  /**\n   * check if the event is inside visible range\n   */\n\n\n  _insidePlot(x) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n  /**\n   * check if the event overlaps the visible range\n   */\n\n\n  _overlapPlot(point0, point1) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    const [coord0, coord1] = [xaxis.p2c(point0), xaxis.p2c(point1)];\n    const [coordMin, coordMax] = [0, xaxis.p2c(xaxis.max)];\n    return coordMin < coord0 && coord1 < coordMax;\n  }\n\n}\nEventMarkers.$inject = [\"plot\"];\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(plot) {\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event.visual().getObject().hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n    that.eventMarkers.drawEvents();\n  }; // change events on an existing plot\n\n\n  plot.setEvents = events => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot, options) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n  plot.hooks.draw.push(plot => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\nconst defaultOptions = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM'\n  }\n};\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5'\n});","map":{"version":3,"names":["$","partition","each","Drop","getLegacyAngularInjector","createAnnotationToolip","element","event","plot","injector","content","document","createElement","innerHTML","invoke","$compile","$rootScope","eventManager","getOptions","events","manager","tmpScope","$new","onEdit","editEvent","$digest","$destroy","drop","target","position","classes","openOn","hoverCloseDelay","tetherOptions","constraints","to","pin","attachment","open","on","setTimeout","destroy","markerElementToAttachTo","createEditPopover","editorOpen","editorOpened","scope","panelCtrl","close","editorClosed","DrawableEvent","constructor","object","drawFunc","clearFunc","moveFunc","left","top","width","height","_object","_drawFunc","_clearFunc","_moveFunc","_position","_width","_height","draw","clear","getObject","moveTo","VisualEvent","options","drawableEvent","_options","_drawableEvent","_hidden","visual","getParent","_parent","isHidden","hide","unhide","EventMarkers","_events","_types","_plot","eventsEnabled","getEvents","setTypes","types","setupEvents","parts","regions","index","ve","_buildDiv","push","vre","_buildRegDiv","sort","a","b","ao","bo","min","drawEvents","insidePlot","_insidePlot","timeEnd","overlapPlot","_overlapPlot","updateEvents","o","getPlotOffset","xaxis","getXAxes","p2c","_clearEvents","val","that","container","getPlaceholder","color","markerSize","markerShow","lineStyle","lineWidth","markerTooltip","eventTypeId","eventType","undefined","toLowerCase","topOffset","eventSectionHeight","line","css","opacity","appendTo","marker","Math","round","toUpperCase","data","mouseenter","editModel","mouseleave","clearSelection","cursor","hover","obj","show","remove","regionWidth","timeFrom","timeTo","max","right","xmin","xmax","regionStart","regionEnd","regionOffset","region","x","xc","point0","point1","coord0","coord1","coordMin","coordMax","init","eventMarkers","hideEvents","showEvents","setEvents","hooks","processOptions","length","defaultOptions","plugins","name","version"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/jquery.flot.events.ts"],"sourcesContent":["import $ from 'jquery';\nimport { partition, each } from 'lodash';\n//@ts-ignore\nimport Drop from 'tether-drop';\n\nimport { CreatePlotOverlay } from '@grafana/data';\nimport { getLegacyAngularInjector } from '@grafana/runtime';\n\n/** @ngInject */\nconst createAnnotationToolip: CreatePlotOverlay = (element, event, plot) => {\n  const injector = getLegacyAngularInjector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    ($compile, $rootScope) => {\n      const eventManager = plot.getOptions().events.manager;\n      const tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = () => {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      const drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', () => {\n        setTimeout(() => {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n};\n\nlet markerElementToAttachTo: any = null;\n\n/** @ngInject */\nconst createEditPopover: CreatePlotOverlay = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(() => {\n    const injector = getLegacyAngularInjector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      ($compile, $rootScope) => {\n        const scope = $rootScope.$new(true);\n        let drop: any;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = () => {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', () => {\n          // need timeout here in order call drop.destroy\n          setTimeout(() => {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n};\n\nexport { createEditPopover, createAnnotationToolip };\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  /** @ngInject */\n  constructor(\n    object: JQuery,\n    drawFunc: any,\n    clearFunc: any,\n    moveFunc: any,\n    left: number,\n    top: number,\n    width: number,\n    height: number\n  ) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left, top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position: { left: number; top: number }) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  /** @ngInject */\n  constructor(options: any, drawableEvent: DrawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  /** @ngInject */\n  constructor(plot: any) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types: any) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events: any[]) {\n    const parts = partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a: any, b: any) => {\n      const ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      const options = event.getOptions();\n      const insidePlot = this._insidePlot(options.min) || this._insidePlot(options.timeEnd);\n      const overlapPlot = this._overlapPlot(options.min, options.timeEnd);\n      // check event is inside the graph range\n      if ((insidePlot || overlapPlot) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event.visual().getObject().hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n    let left;\n    let top;\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event: { eventType: any; min: any; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      const mouseenter = function (this: any) {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: any, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width() ?? 1,\n      line.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event: { eventType: any; min: number; timeEnd: number; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top,\n      left,\n      lineWidth: number,\n      regionWidth,\n      lineStyle: string | number | cssPropertySetter,\n      color: string,\n      markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n\n    const [xmin, xmax] = [o.left, o.left + this._plot.width()];\n    const regionStart = Math.max(left, xmin);\n    const regionEnd = Math.min(right, xmax);\n    const regionOffset = right > xmax ? 0 : lineWidth; // only include lineWidth when right line is visible\n    regionWidth = regionEnd - regionStart + regionOffset;\n\n    each([left, right], (position) => {\n      // only draw visible region lines\n      if (xmin <= position && position < xmax) {\n        const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n          position: 'absolute',\n          opacity: 0.8,\n          left: position + 'px',\n          top: 8,\n          width: lineWidth + 'px',\n          height: this._plot.height() + topOffset,\n          'border-left-width': lineWidth + 'px',\n          'border-left-style': lineStyle,\n          'border-left-color': color,\n          color: color,\n        });\n        line.appendTo(container);\n      }\n    });\n\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: regionStart + 'px',\n      top: top,\n      width: regionWidth + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    const mouseenter = function (this: any) {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: { css: (arg0: { top: any; left: any }) => void }, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width() ?? 1,\n      region.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x: any) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n\n  /**\n   * check if the event overlaps the visible range\n   */\n  _overlapPlot(point0: number, point1: number) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const [coord0, coord1] = [xaxis.p2c(point0), xaxis.p2c(point1)];\n    const [coordMin, coordMax] = [0, xaxis.p2c(xaxis.max)];\n    return coordMin < coord0 && coord1 < coordMax;\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(this: any, plot: any) {\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event.visual().getObject().hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = (events: any[]) => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot: any, options: any) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push((plot: any) => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nconst defaultOptions: any = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}