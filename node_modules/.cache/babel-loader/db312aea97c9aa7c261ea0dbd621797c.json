{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, useTheme } from '../../themes';\nimport { getTagColorsFromName } from '../../utils';\nimport { IconButton } from '../IconButton/IconButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getStyles = stylesFactory(({\n  theme,\n  name\n}) => {\n  const {\n    color,\n    borderColor\n  } = getTagColorsFromName(name);\n  const height = theme.spacing.formInputHeight - 8;\n  return {\n    itemStyle: css`\n      display: flex;\n      align-items: center;\n      height: ${height}px;\n      line-height: ${height - 2}px;\n      background-color: ${color};\n      color: ${theme.palette.white};\n      border: 1px solid ${borderColor};\n      border-radius: 3px;\n      padding: 0 ${theme.spacing.xs};\n      margin-right: 3px;\n      white-space: nowrap;\n      text-shadow: none;\n      font-weight: 500;\n      font-size: ${theme.typography.size.sm};\n    `,\n    nameStyle: css`\n      margin-right: 3px;\n    `,\n    buttonStyles: css`\n      margin: 0;\n      &:hover::before {\n        display: none;\n      }\n    `\n  };\n});\n/**\n * @internal\n * Only used internally by TagsInput\n * */\n\nexport const TagItem = ({\n  name,\n  disabled,\n  onRemove\n}) => {\n  const theme = useTheme();\n  const styles = getStyles({\n    theme,\n    name\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.itemStyle,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      className: styles.nameStyle,\n      children: name\n    }), /*#__PURE__*/_jsx(IconButton, {\n      name: \"times\",\n      size: \"lg\",\n      disabled: disabled,\n      ariaLabel: `Remove ${name}`,\n      onClick: () => onRemove(name),\n      type: \"button\",\n      className: styles.buttonStyles\n    })]\n  });\n};","map":{"version":3,"names":["css","React","stylesFactory","useTheme","getTagColorsFromName","IconButton","getStyles","theme","name","color","borderColor","height","spacing","formInputHeight","itemStyle","palette","white","xs","typography","size","sm","nameStyle","buttonStyles","TagItem","disabled","onRemove","styles"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/TagsInput/TagItem.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { stylesFactory, useTheme } from '../../themes';\nimport { getTagColorsFromName } from '../../utils';\nimport { IconButton } from '../IconButton/IconButton';\n\ninterface Props {\n  name: string;\n  disabled?: boolean;\n  onRemove: (tag: string) => void;\n}\n\nconst getStyles = stylesFactory(({ theme, name }: { theme: GrafanaTheme; name: string }) => {\n  const { color, borderColor } = getTagColorsFromName(name);\n  const height = theme.spacing.formInputHeight - 8;\n\n  return {\n    itemStyle: css`\n      display: flex;\n      align-items: center;\n      height: ${height}px;\n      line-height: ${height - 2}px;\n      background-color: ${color};\n      color: ${theme.palette.white};\n      border: 1px solid ${borderColor};\n      border-radius: 3px;\n      padding: 0 ${theme.spacing.xs};\n      margin-right: 3px;\n      white-space: nowrap;\n      text-shadow: none;\n      font-weight: 500;\n      font-size: ${theme.typography.size.sm};\n    `,\n\n    nameStyle: css`\n      margin-right: 3px;\n    `,\n\n    buttonStyles: css`\n      margin: 0;\n      &:hover::before {\n        display: none;\n      }\n    `,\n  };\n});\n\n/**\n * @internal\n * Only used internally by TagsInput\n * */\nexport const TagItem: FC<Props> = ({ name, disabled, onRemove }) => {\n  const theme = useTheme();\n  const styles = getStyles({ theme, name });\n\n  return (\n    <div className={styles.itemStyle}>\n      <span className={styles.nameStyle}>{name}</span>\n      <IconButton\n        name=\"times\"\n        size=\"lg\"\n        disabled={disabled}\n        ariaLabel={`Remove ${name}`}\n        onClick={() => onRemove(name)}\n        type=\"button\"\n        className={styles.buttonStyles}\n      />\n    </div>\n  );\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAIA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAQA,MAAMC,SAAS,GAAGJ,aAAa,CAAC,CAAC;EAAEK,KAAF;EAASC;AAAT,CAAD,KAA4D;EAC1F,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAyBN,oBAAoB,CAACI,IAAD,CAAnD;EACA,MAAMG,MAAM,GAAGJ,KAAK,CAACK,OAAN,CAAcC,eAAd,GAAgC,CAA/C;EAEA,OAAO;IACLC,SAAS,EAAEd,GAAI;AACnB;AACA;AACA,gBAAgBW,MAAO;AACvB,qBAAqBA,MAAM,GAAG,CAAE;AAChC,0BAA0BF,KAAM;AAChC,eAAeF,KAAK,CAACQ,OAAN,CAAcC,KAAM;AACnC,0BAA0BN,WAAY;AACtC;AACA,mBAAmBH,KAAK,CAACK,OAAN,CAAcK,EAAG;AACpC;AACA;AACA;AACA;AACA,mBAAmBV,KAAK,CAACW,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,KAhBS;IAkBLC,SAAS,EAAErB,GAAI;AACnB;AACA,KApBS;IAsBLsB,YAAY,EAAEtB,GAAI;AACtB;AACA;AACA;AACA;AACA;EA3BS,CAAP;AA6BD,CAjC8B,CAA/B;AAmCA;AACA;AACA;AACA;;AACA,OAAO,MAAMuB,OAAkB,GAAG,CAAC;EAAEf,IAAF;EAAQgB,QAAR;EAAkBC;AAAlB,CAAD,KAAkC;EAClE,MAAMlB,KAAK,GAAGJ,QAAQ,EAAtB;EACA,MAAMuB,MAAM,GAAGpB,SAAS,CAAC;IAAEC,KAAF;IAASC;EAAT,CAAD,CAAxB;EAEA,oBACE;IAAK,SAAS,EAAEkB,MAAM,CAACZ,SAAvB;IAAA,wBACE;MAAM,SAAS,EAAEY,MAAM,CAACL,SAAxB;MAAA,UAAoCb;IAApC,EADF,eAEE,KAAC,UAAD;MACE,IAAI,EAAC,OADP;MAEE,IAAI,EAAC,IAFP;MAGE,QAAQ,EAAEgB,QAHZ;MAIE,SAAS,EAAG,UAAShB,IAAK,EAJ5B;MAKE,OAAO,EAAE,MAAMiB,QAAQ,CAACjB,IAAD,CALzB;MAME,IAAI,EAAC,QANP;MAOE,SAAS,EAAEkB,MAAM,CAACJ;IAPpB,EAFF;EAAA,EADF;AAcD,CAlBM"},"metadata":{},"sourceType":"module"}