{"ast":null,"code":"var _h, _h2, _Tooltip, _div;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Tooltip, Icon, Button } from '@grafana/ui';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport AddPermission from 'app/core/components/PermissionList/AddPermission';\nimport PermissionList from 'app/core/components/PermissionList/PermissionList';\nimport PermissionsInfo from 'app/core/components/PermissionList/PermissionsInfo';\nimport { checkFolderPermissions } from '../../../folders/state/actions';\nimport { getDashboardPermissions, addDashboardPermission, removeDashboardPermission, updateDashboardPermission } from '../../state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst mapStateToProps = state => ({\n  permissions: state.dashboard.permissions,\n  canViewFolderPermissions: state.folder.canViewFolderPermissions\n});\n\nconst mapDispatchToProps = {\n  getDashboardPermissions,\n  addDashboardPermission,\n  removeDashboardPermission,\n  updateDashboardPermission,\n  checkFolderPermissions\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport class DashboardPermissionsUnconnected extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenAddPermissions\", () => {\n      this.setState({\n        isAdding: true\n      });\n    });\n\n    _defineProperty(this, \"onRemoveItem\", item => {\n      this.props.removeDashboardPermission(this.props.dashboard.id, item);\n    });\n\n    _defineProperty(this, \"onPermissionChanged\", (item, level) => {\n      this.props.updateDashboardPermission(this.props.dashboard.id, item, level);\n    });\n\n    _defineProperty(this, \"onAddPermission\", newItem => {\n      return this.props.addDashboardPermission(this.props.dashboard.id, newItem);\n    });\n\n    _defineProperty(this, \"onCancelAddPermission\", () => {\n      this.setState({\n        isAdding: false\n      });\n    });\n\n    this.state = {\n      isAdding: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getDashboardPermissions(this.props.dashboard.id);\n\n    if (this.props.dashboard.meta.folderUid) {\n      this.props.checkFolderPermissions(this.props.dashboard.meta.folderUid);\n    }\n  }\n\n  getFolder() {\n    const {\n      dashboard,\n      canViewFolderPermissions\n    } = this.props;\n    return {\n      id: dashboard.meta.folderId,\n      title: dashboard.meta.folderTitle,\n      url: dashboard.meta.folderUrl,\n      canViewFolderPermissions\n    };\n  }\n\n  render() {\n    const {\n      permissions,\n      dashboard: {\n        meta: {\n          hasUnsavedFolderChange\n        }\n      }\n    } = this.props;\n    const {\n      isAdding\n    } = this.state;\n    return hasUnsavedFolderChange ? _h || (_h = /*#__PURE__*/_jsx(\"h5\", {\n      children: \"You have changed a folder, please save to view permissions.\"\n    })) : /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"page-action-bar\",\n        children: [_h2 || (_h2 = /*#__PURE__*/_jsx(\"h3\", {\n          className: \"page-sub-heading\",\n          children: \"Permissions\"\n        })), _Tooltip || (_Tooltip = /*#__PURE__*/_jsx(Tooltip, {\n          placement: \"auto\",\n          content: /*#__PURE__*/_jsx(PermissionsInfo, {}),\n          children: /*#__PURE__*/_jsx(Icon, {\n            className: \"icon--has-hover page-sub-heading-icon\",\n            name: \"question-circle\"\n          })\n        })), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n          className: \"page-action-bar__spacer\"\n        })), /*#__PURE__*/_jsx(Button, {\n          className: \"pull-right\",\n          onClick: this.onOpenAddPermissions,\n          disabled: isAdding,\n          children: \"Add permission\"\n        })]\n      }), /*#__PURE__*/_jsx(SlideDown, {\n        in: isAdding,\n        children: /*#__PURE__*/_jsx(AddPermission, {\n          onAddPermission: this.onAddPermission,\n          onCancel: this.onCancelAddPermission\n        })\n      }), /*#__PURE__*/_jsx(PermissionList, {\n        items: permissions,\n        onRemoveItem: this.onRemoveItem,\n        onPermissionChanged: this.onPermissionChanged,\n        isFetching: false,\n        folderInfo: this.getFolder()\n      })]\n    });\n  }\n\n}\nexport const DashboardPermissions = connector(DashboardPermissionsUnconnected);","map":{"version":3,"names":["React","PureComponent","connect","Tooltip","Icon","Button","SlideDown","AddPermission","PermissionList","PermissionsInfo","checkFolderPermissions","getDashboardPermissions","addDashboardPermission","removeDashboardPermission","updateDashboardPermission","mapStateToProps","state","permissions","dashboard","canViewFolderPermissions","folder","mapDispatchToProps","connector","DashboardPermissionsUnconnected","constructor","props","setState","isAdding","item","id","level","newItem","componentDidMount","meta","folderUid","getFolder","folderId","title","folderTitle","url","folderUrl","render","hasUnsavedFolderChange","onOpenAddPermissions","onAddPermission","onCancelAddPermission","onRemoveItem","onPermissionChanged","DashboardPermissions"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardPermissions/DashboardPermissions.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Tooltip, Icon, Button } from '@grafana/ui';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport AddPermission from 'app/core/components/PermissionList/AddPermission';\nimport PermissionList from 'app/core/components/PermissionList/PermissionList';\nimport PermissionsInfo from 'app/core/components/PermissionList/PermissionsInfo';\nimport { StoreState } from 'app/types';\nimport { DashboardAcl, PermissionLevel, NewDashboardAclItem } from 'app/types/acl';\n\nimport { checkFolderPermissions } from '../../../folders/state/actions';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport {\n  getDashboardPermissions,\n  addDashboardPermission,\n  removeDashboardPermission,\n  updateDashboardPermission,\n} from '../../state/actions';\n\nconst mapStateToProps = (state: StoreState) => ({\n  permissions: state.dashboard.permissions,\n  canViewFolderPermissions: state.folder.canViewFolderPermissions,\n});\n\nconst mapDispatchToProps = {\n  getDashboardPermissions,\n  addDashboardPermission,\n  removeDashboardPermission,\n  updateDashboardPermission,\n  checkFolderPermissions,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport interface OwnProps {\n  dashboard: DashboardModel;\n}\n\nexport type Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport interface State {\n  isAdding: boolean;\n}\n\nexport class DashboardPermissionsUnconnected extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isAdding: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getDashboardPermissions(this.props.dashboard.id);\n    if (this.props.dashboard.meta.folderUid) {\n      this.props.checkFolderPermissions(this.props.dashboard.meta.folderUid);\n    }\n  }\n\n  onOpenAddPermissions = () => {\n    this.setState({ isAdding: true });\n  };\n\n  onRemoveItem = (item: DashboardAcl) => {\n    this.props.removeDashboardPermission(this.props.dashboard.id, item);\n  };\n\n  onPermissionChanged = (item: DashboardAcl, level: PermissionLevel) => {\n    this.props.updateDashboardPermission(this.props.dashboard.id, item, level);\n  };\n\n  onAddPermission = (newItem: NewDashboardAclItem) => {\n    return this.props.addDashboardPermission(this.props.dashboard.id, newItem);\n  };\n\n  onCancelAddPermission = () => {\n    this.setState({ isAdding: false });\n  };\n\n  getFolder() {\n    const { dashboard, canViewFolderPermissions } = this.props;\n\n    return {\n      id: dashboard.meta.folderId,\n      title: dashboard.meta.folderTitle,\n      url: dashboard.meta.folderUrl,\n      canViewFolderPermissions,\n    };\n  }\n\n  render() {\n    const {\n      permissions,\n      dashboard: {\n        meta: { hasUnsavedFolderChange },\n      },\n    } = this.props;\n    const { isAdding } = this.state;\n\n    return hasUnsavedFolderChange ? (\n      <h5>You have changed a folder, please save to view permissions.</h5>\n    ) : (\n      <div>\n        <div className=\"page-action-bar\">\n          <h3 className=\"page-sub-heading\">Permissions</h3>\n          <Tooltip placement=\"auto\" content={<PermissionsInfo />}>\n            <Icon className=\"icon--has-hover page-sub-heading-icon\" name=\"question-circle\" />\n          </Tooltip>\n          <div className=\"page-action-bar__spacer\" />\n          <Button className=\"pull-right\" onClick={this.onOpenAddPermissions} disabled={isAdding}>\n            Add permission\n          </Button>\n        </div>\n        <SlideDown in={isAdding}>\n          <AddPermission onAddPermission={this.onAddPermission} onCancel={this.onCancelAddPermission} />\n        </SlideDown>\n        <PermissionList\n          items={permissions}\n          onRemoveItem={this.onRemoveItem}\n          onPermissionChanged={this.onPermissionChanged}\n          isFetching={false}\n          folderInfo={this.getFolder()}\n        />\n      </div>\n    );\n  }\n}\n\nexport const DashboardPermissions = connector(DashboardPermissionsUnconnected);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}