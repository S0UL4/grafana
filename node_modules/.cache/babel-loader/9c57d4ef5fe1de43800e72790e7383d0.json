{"ast":null,"code":"var _Spinner;\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { dateTimeFormat, systemDateFormats } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime\n}) {\n  const formatTime = time => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone\n    })}`;\n  };\n\n  const createPageContent = (page, index) => {\n    if (currentPageIndex === index && loading) {\n      return _Spinner || (_Spinner = /*#__PURE__*/_jsx(Spinner, {}));\n    }\n\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n  return /*#__PURE__*/_jsx(CustomScrollbar, {\n    autoHide: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: styles.pagesWrapper,\n      \"data-testid\": \"logsNavigationPages\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.pagesContainer,\n        children: pages.map((page, index) => /*#__PURE__*/_jsxs(\"div\", {\n          \"data-testid\": `page${index + 1}`,\n          className: styles.page,\n          onClick: () => {\n            reportInteraction('grafana_explore_logs_pagination_clicked', {\n              pageType: 'page',\n              pageNumber: index + 1\n            });\n            !loading && changeTime({\n              from: page.queryRange.from,\n              to: page.queryRange.to\n            });\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: cx(styles.line, {\n              selectedBg: currentPageIndex === index\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: cx(styles.time, {\n              selectedText: currentPageIndex === index\n            }),\n            children: createPageContent(page, index)\n          })]\n        }, page.queryRange.to))\n      })\n    })\n  });\n}\n\nconst getStyles = (theme, loading) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","dateTimeFormat","systemDateFormats","reportInteraction","CustomScrollbar","Spinner","useTheme2","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","timeZone","loading","changeTime","formatTime","time","format","interval","second","createPageContent","page","index","topContent","logsRange","from","to","bottomContent","theme","styles","getStyles","pagesWrapper","pagesContainer","map","pageType","pageNumber","queryRange","line","selectedBg","selectedText","spacing","colors","background","primary","secondary","main","text","v1","typography","size","sm"],"sources":["/home/soula/grafana/public/app/features/explore/LogsNavigationPages.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => {\n                reportInteraction('grafana_explore_logs_pagination_clicked', {\n                  pageType: 'page',\n                  pageNumber: index + 1,\n                });\n                !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n              }}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}