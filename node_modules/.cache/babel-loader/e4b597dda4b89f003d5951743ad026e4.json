{"ast":null,"code":"import { of } from 'rxjs';\nimport { emptyResult, getAnnotationsByPanelId, translateQueryResult } from './utils';\nexport class SnapshotWorker {\n  canWork({\n    dashboard\n  }) {\n    var _dashboard$annotation, _dashboard$annotation2;\n\n    return dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$annotation = dashboard.annotations) === null || _dashboard$annotation === void 0 ? void 0 : (_dashboard$annotation2 = _dashboard$annotation.list) === null || _dashboard$annotation2 === void 0 ? void 0 : _dashboard$annotation2.some(a => a.enable && Boolean(a.snapshotData));\n  }\n\n  work(options) {\n    if (!this.canWork(options)) {\n      return emptyResult();\n    }\n\n    const annotations = this.getAnnotationsFromSnapshot(options.dashboard);\n    return of({\n      annotations,\n      alertStates: []\n    });\n  }\n\n  getAnnotationsFromSnapshot(dashboard) {\n    var _dashboard$annotation3, _dashboard$annotation4;\n\n    const dashAnnotations = dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$annotation3 = dashboard.annotations) === null || _dashboard$annotation3 === void 0 ? void 0 : (_dashboard$annotation4 = _dashboard$annotation3.list) === null || _dashboard$annotation4 === void 0 ? void 0 : _dashboard$annotation4.filter(a => a.enable);\n    const snapshots = dashAnnotations.filter(a => Boolean(a.snapshotData));\n    const annotations = snapshots.reduce((acc, curr) => acc.concat(translateQueryResult(curr, curr.snapshotData)), []);\n    return annotations;\n  }\n\n  getAnnotationsInSnapshot(dashboard, panelId) {\n    const annotations = this.getAnnotationsFromSnapshot(dashboard);\n    return getAnnotationsByPanelId(annotations, panelId);\n  }\n\n}","map":{"version":3,"names":["of","emptyResult","getAnnotationsByPanelId","translateQueryResult","SnapshotWorker","canWork","dashboard","annotations","list","some","a","enable","Boolean","snapshotData","work","options","getAnnotationsFromSnapshot","alertStates","dashAnnotations","filter","snapshots","reduce","acc","curr","concat","getAnnotationsInSnapshot","panelId"],"sources":["/home/soula/grafana/public/app/features/query/state/DashboardQueryRunner/SnapshotWorker.ts"],"sourcesContent":["import { Observable, of } from 'rxjs';\n\nimport { AnnotationEvent } from '@grafana/data';\n\nimport { DashboardModel } from '../../../dashboard/state';\n\nimport { DashboardQueryRunnerOptions, DashboardQueryRunnerWorker, DashboardQueryRunnerWorkerResult } from './types';\nimport { emptyResult, getAnnotationsByPanelId, translateQueryResult } from './utils';\n\nexport class SnapshotWorker implements DashboardQueryRunnerWorker {\n  canWork({ dashboard }: DashboardQueryRunnerOptions): boolean {\n    return dashboard?.annotations?.list?.some((a) => a.enable && Boolean(a.snapshotData));\n  }\n\n  work(options: DashboardQueryRunnerOptions): Observable<DashboardQueryRunnerWorkerResult> {\n    if (!this.canWork(options)) {\n      return emptyResult();\n    }\n\n    const annotations = this.getAnnotationsFromSnapshot(options.dashboard);\n    return of({ annotations, alertStates: [] });\n  }\n\n  private getAnnotationsFromSnapshot(dashboard: DashboardModel): AnnotationEvent[] {\n    const dashAnnotations = dashboard?.annotations?.list?.filter((a) => a.enable);\n    const snapshots = dashAnnotations.filter((a) => Boolean(a.snapshotData));\n    const annotations = snapshots.reduce(\n      (acc, curr) => acc.concat(translateQueryResult(curr, curr.snapshotData)),\n      [] as AnnotationEvent[]\n    );\n\n    return annotations;\n  }\n\n  getAnnotationsInSnapshot(dashboard: DashboardModel, panelId?: number): AnnotationEvent[] {\n    const annotations = this.getAnnotationsFromSnapshot(dashboard);\n    return getAnnotationsByPanelId(annotations, panelId);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,EAArB,QAA+B,MAA/B;AAOA,SAASC,WAAT,EAAsBC,uBAAtB,EAA+CC,oBAA/C,QAA2E,SAA3E;AAEA,OAAO,MAAMC,cAAN,CAA2D;EAChEC,OAAO,CAAC;IAAEC;EAAF,CAAD,EAAsD;IAAA;;IAC3D,OAAOA,SAAP,aAAOA,SAAP,gDAAOA,SAAS,CAAEC,WAAlB,oFAAO,sBAAwBC,IAA/B,2DAAO,uBAA8BC,IAA9B,CAAoCC,CAAD,IAAOA,CAAC,CAACC,MAAF,IAAYC,OAAO,CAACF,CAAC,CAACG,YAAH,CAA7D,CAAP;EACD;;EAEDC,IAAI,CAACC,OAAD,EAAqF;IACvF,IAAI,CAAC,KAAKV,OAAL,CAAaU,OAAb,CAAL,EAA4B;MAC1B,OAAOd,WAAW,EAAlB;IACD;;IAED,MAAMM,WAAW,GAAG,KAAKS,0BAAL,CAAgCD,OAAO,CAACT,SAAxC,CAApB;IACA,OAAON,EAAE,CAAC;MAAEO,WAAF;MAAeU,WAAW,EAAE;IAA5B,CAAD,CAAT;EACD;;EAEOD,0BAA0B,CAACV,SAAD,EAA+C;IAAA;;IAC/E,MAAMY,eAAe,GAAGZ,SAAH,aAAGA,SAAH,iDAAGA,SAAS,CAAEC,WAAd,qFAAG,uBAAwBC,IAA3B,2DAAG,uBAA8BW,MAA9B,CAAsCT,CAAD,IAAOA,CAAC,CAACC,MAA9C,CAAxB;IACA,MAAMS,SAAS,GAAGF,eAAe,CAACC,MAAhB,CAAwBT,CAAD,IAAOE,OAAO,CAACF,CAAC,CAACG,YAAH,CAArC,CAAlB;IACA,MAAMN,WAAW,GAAGa,SAAS,CAACC,MAAV,CAClB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,CAACE,MAAJ,CAAWrB,oBAAoB,CAACoB,IAAD,EAAOA,IAAI,CAACV,YAAZ,CAA/B,CADG,EAElB,EAFkB,CAApB;IAKA,OAAON,WAAP;EACD;;EAEDkB,wBAAwB,CAACnB,SAAD,EAA4BoB,OAA5B,EAAiE;IACvF,MAAMnB,WAAW,GAAG,KAAKS,0BAAL,CAAgCV,SAAhC,CAApB;IACA,OAAOJ,uBAAuB,CAACK,WAAD,EAAcmB,OAAd,CAA9B;EACD;;AA5B+D"},"metadata":{},"sourceType":"module"}