{"ast":null,"code":"import { AppEvents } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { KioskMode } from '../../types';\nimport appEvents from '../app_events';\nexport function toggleKioskMode() {\n  let kiosk = locationService.getSearchObject().kiosk;\n\n  switch (kiosk) {\n    case 'tv':\n      kiosk = true;\n      appEvents.emit(AppEvents.alertSuccess, ['Press ESC to exit Kiosk mode']);\n      break;\n\n    case '1':\n    case true:\n      kiosk = null;\n      break;\n\n    default:\n      kiosk = 'tv';\n  }\n\n  locationService.partial({\n    kiosk\n  });\n}\nexport function getKioskMode() {\n  const kiosk = locationService.getSearchObject().kiosk;\n\n  switch (kiosk) {\n    case 'tv':\n      return KioskMode.TV;\n    //  legacy support\n\n    case '1':\n    case true:\n      return KioskMode.Full;\n\n    default:\n      return KioskMode.Off;\n  }\n}\nexport function exitKioskMode() {\n  locationService.partial({\n    kiosk: null\n  });\n}","map":{"version":3,"names":["AppEvents","locationService","KioskMode","appEvents","toggleKioskMode","kiosk","getSearchObject","emit","alertSuccess","partial","getKioskMode","TV","Full","Off","exitKioskMode"],"sources":["/home/soula/grafana/public/app/core/navigation/kiosk.ts"],"sourcesContent":["import { AppEvents } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\n\nimport { KioskMode } from '../../types';\nimport appEvents from '../app_events';\n\nexport function toggleKioskMode() {\n  let kiosk = locationService.getSearchObject().kiosk;\n\n  switch (kiosk) {\n    case 'tv':\n      kiosk = true;\n      appEvents.emit(AppEvents.alertSuccess, ['Press ESC to exit Kiosk mode']);\n      break;\n    case '1':\n    case true:\n      kiosk = null;\n      break;\n    default:\n      kiosk = 'tv';\n  }\n\n  locationService.partial({ kiosk });\n}\n\nexport function getKioskMode(): KioskMode {\n  const kiosk = locationService.getSearchObject().kiosk;\n\n  switch (kiosk) {\n    case 'tv':\n      return KioskMode.TV;\n    //  legacy support\n    case '1':\n    case true:\n      return KioskMode.Full;\n    default:\n      return KioskMode.Off;\n  }\n}\n\nexport function exitKioskMode() {\n  locationService.partial({ kiosk: null });\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,OAAO,SAASC,eAAT,GAA2B;EAChC,IAAIC,KAAK,GAAGJ,eAAe,CAACK,eAAhB,GAAkCD,KAA9C;;EAEA,QAAQA,KAAR;IACE,KAAK,IAAL;MACEA,KAAK,GAAG,IAAR;MACAF,SAAS,CAACI,IAAV,CAAeP,SAAS,CAACQ,YAAzB,EAAuC,CAAC,8BAAD,CAAvC;MACA;;IACF,KAAK,GAAL;IACA,KAAK,IAAL;MACEH,KAAK,GAAG,IAAR;MACA;;IACF;MACEA,KAAK,GAAG,IAAR;EAVJ;;EAaAJ,eAAe,CAACQ,OAAhB,CAAwB;IAAEJ;EAAF,CAAxB;AACD;AAED,OAAO,SAASK,YAAT,GAAmC;EACxC,MAAML,KAAK,GAAGJ,eAAe,CAACK,eAAhB,GAAkCD,KAAhD;;EAEA,QAAQA,KAAR;IACE,KAAK,IAAL;MACE,OAAOH,SAAS,CAACS,EAAjB;IACF;;IACA,KAAK,GAAL;IACA,KAAK,IAAL;MACE,OAAOT,SAAS,CAACU,IAAjB;;IACF;MACE,OAAOV,SAAS,CAACW,GAAjB;EARJ;AAUD;AAED,OAAO,SAASC,aAAT,GAAyB;EAC9Bb,eAAe,CAACQ,OAAhB,CAAwB;IAAEJ,KAAK,EAAE;EAAT,CAAxB;AACD"},"metadata":{},"sourceType":"module"}