{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport $ from 'jquery';\nimport { EchoEventType, isExperimentViewEvent, isInteractionEvent, isPageviewEvent } from '@grafana/runtime';\nimport { getUserIdentifier } from '../../utils';\nexport class RudderstackBackend {\n  constructor(options) {\n    _defineProperty(this, \"supportedEvents\", [EchoEventType.Pageview, EchoEventType.Interaction, EchoEventType.ExperimentView]);\n\n    _defineProperty(this, \"addEvent\", e => {\n      if (!window.rudderanalytics) {\n        return;\n      }\n\n      if (isPageviewEvent(e)) {\n        window.rudderanalytics.page();\n      }\n\n      if (isInteractionEvent(e)) {\n        window.rudderanalytics.track(e.payload.interactionName, e.payload.properties);\n      }\n\n      if (isExperimentViewEvent(e)) {\n        window.rudderanalytics.track('experiment_viewed', {\n          experiment_id: e.payload.experimentId,\n          experiment_group: e.payload.experimentGroup,\n          experiment_variant: e.payload.experimentVariant\n        });\n      }\n    });\n\n    _defineProperty(this, \"flush\", () => {});\n\n    this.options = options;\n    const url = options.sdkUrl || `https://cdn.rudderlabs.com/v1/rudder-analytics.min.js`;\n    $.ajax({\n      url,\n      dataType: 'script',\n      cache: true\n    });\n    const rds = window.rudderanalytics = [];\n    var methods = ['load', 'page', 'track', 'identify', 'alias', 'group', 'ready', 'reset', 'getAnonymousId', 'setAnonymousId'];\n\n    for (let i = 0; i < methods.length; i++) {\n      const method = methods[i];\n\n      rds[method] = function (methodName) {\n        return function () {\n          // @ts-ignore\n          rds.push([methodName].concat(Array.prototype.slice.call(arguments)));\n        };\n      }(method);\n    }\n\n    rds.load(options.writeKey, options.dataPlaneUrl, {\n      configUrl: options.configUrl\n    });\n\n    if (options.user) {\n      const identifier = getUserIdentifier(options.user);\n      rds.identify(identifier, {\n        email: options.user.email,\n        orgId: options.user.orgId\n      });\n    }\n  }\n\n}","map":{"version":3,"names":["$","EchoEventType","isExperimentViewEvent","isInteractionEvent","isPageviewEvent","getUserIdentifier","RudderstackBackend","constructor","options","Pageview","Interaction","ExperimentView","e","window","rudderanalytics","page","track","payload","interactionName","properties","experiment_id","experimentId","experiment_group","experimentGroup","experiment_variant","experimentVariant","url","sdkUrl","ajax","dataType","cache","rds","methods","i","length","method","methodName","push","concat","Array","prototype","slice","call","arguments","load","writeKey","dataPlaneUrl","configUrl","user","identifier","identify","email","orgId"],"sources":["/home/soula/grafana/public/app/core/services/echo/backends/analytics/RudderstackBackend.ts"],"sourcesContent":["import $ from 'jquery';\n\nimport { CurrentUserDTO } from '@grafana/data';\nimport {\n  EchoBackend,\n  EchoEventType,\n  isExperimentViewEvent,\n  isInteractionEvent,\n  isPageviewEvent,\n  PageviewEchoEvent,\n} from '@grafana/runtime';\n\nimport { getUserIdentifier } from '../../utils';\n\nexport interface RudderstackBackendOptions {\n  writeKey: string;\n  dataPlaneUrl: string;\n  user?: CurrentUserDTO;\n  sdkUrl?: string;\n  configUrl?: string;\n}\n\nexport class RudderstackBackend implements EchoBackend<PageviewEchoEvent, RudderstackBackendOptions> {\n  supportedEvents = [EchoEventType.Pageview, EchoEventType.Interaction, EchoEventType.ExperimentView];\n\n  constructor(public options: RudderstackBackendOptions) {\n    const url = options.sdkUrl || `https://cdn.rudderlabs.com/v1/rudder-analytics.min.js`;\n\n    $.ajax({\n      url,\n      dataType: 'script',\n      cache: true,\n    });\n\n    const rds = ((window as any).rudderanalytics = []);\n\n    var methods = [\n      'load',\n      'page',\n      'track',\n      'identify',\n      'alias',\n      'group',\n      'ready',\n      'reset',\n      'getAnonymousId',\n      'setAnonymousId',\n    ];\n\n    for (let i = 0; i < methods.length; i++) {\n      const method = methods[i];\n      (rds as Record<string, any>)[method] = (function (methodName) {\n        return function () {\n          // @ts-ignore\n          rds.push([methodName].concat(Array.prototype.slice.call(arguments)));\n        };\n      })(method);\n    }\n\n    (rds as any).load(options.writeKey, options.dataPlaneUrl, { configUrl: options.configUrl });\n\n    if (options.user) {\n      const identifier = getUserIdentifier(options.user);\n\n      (rds as any).identify(identifier, {\n        email: options.user.email,\n        orgId: options.user.orgId,\n      });\n    }\n  }\n\n  addEvent = (e: PageviewEchoEvent) => {\n    if (!(window as any).rudderanalytics) {\n      return;\n    }\n\n    if (isPageviewEvent(e)) {\n      (window as any).rudderanalytics.page();\n    }\n\n    if (isInteractionEvent(e)) {\n      (window as any).rudderanalytics.track(e.payload.interactionName, e.payload.properties);\n    }\n\n    if (isExperimentViewEvent(e)) {\n      (window as any).rudderanalytics.track('experiment_viewed', {\n        experiment_id: e.payload.experimentId,\n        experiment_group: e.payload.experimentGroup,\n        experiment_variant: e.payload.experimentVariant,\n      });\n    }\n  };\n\n  // Not using Echo buffering, addEvent above sends events to GA as soon as they appear\n  flush = () => {};\n}\n"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AAGA,SAEEC,aAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,eALF,QAOO,kBAPP;AASA,SAASC,iBAAT,QAAkC,aAAlC;AAUA,OAAO,MAAMC,kBAAN,CAA8F;EAGnGC,WAAW,CAAQC,OAAR,EAA4C;IAAA,yCAFrC,CAACP,aAAa,CAACQ,QAAf,EAAyBR,aAAa,CAACS,WAAvC,EAAoDT,aAAa,CAACU,cAAlE,CAEqC;;IAAA,kCA8C3CC,CAAD,IAA0B;MACnC,IAAI,CAAEC,MAAD,CAAgBC,eAArB,EAAsC;QACpC;MACD;;MAED,IAAIV,eAAe,CAACQ,CAAD,CAAnB,EAAwB;QACrBC,MAAD,CAAgBC,eAAhB,CAAgCC,IAAhC;MACD;;MAED,IAAIZ,kBAAkB,CAACS,CAAD,CAAtB,EAA2B;QACxBC,MAAD,CAAgBC,eAAhB,CAAgCE,KAAhC,CAAsCJ,CAAC,CAACK,OAAF,CAAUC,eAAhD,EAAiEN,CAAC,CAACK,OAAF,CAAUE,UAA3E;MACD;;MAED,IAAIjB,qBAAqB,CAACU,CAAD,CAAzB,EAA8B;QAC3BC,MAAD,CAAgBC,eAAhB,CAAgCE,KAAhC,CAAsC,mBAAtC,EAA2D;UACzDI,aAAa,EAAER,CAAC,CAACK,OAAF,CAAUI,YADgC;UAEzDC,gBAAgB,EAAEV,CAAC,CAACK,OAAF,CAAUM,eAF6B;UAGzDC,kBAAkB,EAAEZ,CAAC,CAACK,OAAF,CAAUQ;QAH2B,CAA3D;MAKD;IACF,CAlEsD;;IAAA,+BAqE/C,MAAM,CAAE,CArEuC;;IAAA,KAApCjB,OAAoC,GAApCA,OAAoC;IACrD,MAAMkB,GAAG,GAAGlB,OAAO,CAACmB,MAAR,IAAmB,uDAA/B;IAEA3B,CAAC,CAAC4B,IAAF,CAAO;MACLF,GADK;MAELG,QAAQ,EAAE,QAFL;MAGLC,KAAK,EAAE;IAHF,CAAP;IAMA,MAAMC,GAAG,GAAKlB,MAAD,CAAgBC,eAAhB,GAAkC,EAA/C;IAEA,IAAIkB,OAAO,GAAG,CACZ,MADY,EAEZ,MAFY,EAGZ,OAHY,EAIZ,UAJY,EAKZ,OALY,EAMZ,OANY,EAOZ,OAPY,EAQZ,OARY,EASZ,gBATY,EAUZ,gBAVY,CAAd;;IAaA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACvC,MAAME,MAAM,GAAGH,OAAO,CAACC,CAAD,CAAtB;;MACCF,GAAD,CAA6BI,MAA7B,IAAwC,UAAUC,UAAV,EAAsB;QAC5D,OAAO,YAAY;UACjB;UACAL,GAAG,CAACM,IAAJ,CAAS,CAACD,UAAD,EAAaE,MAAb,CAAoBC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAApB,CAAT;QACD,CAHD;MAID,CALsC,CAKpCR,MALoC,CAAvC;IAMD;;IAEAJ,GAAD,CAAaa,IAAb,CAAkBpC,OAAO,CAACqC,QAA1B,EAAoCrC,OAAO,CAACsC,YAA5C,EAA0D;MAAEC,SAAS,EAAEvC,OAAO,CAACuC;IAArB,CAA1D;;IAEA,IAAIvC,OAAO,CAACwC,IAAZ,EAAkB;MAChB,MAAMC,UAAU,GAAG5C,iBAAiB,CAACG,OAAO,CAACwC,IAAT,CAApC;MAECjB,GAAD,CAAamB,QAAb,CAAsBD,UAAtB,EAAkC;QAChCE,KAAK,EAAE3C,OAAO,CAACwC,IAAR,CAAaG,KADY;QAEhCC,KAAK,EAAE5C,OAAO,CAACwC,IAAR,CAAaI;MAFY,CAAlC;IAID;EACF;;AA/CkG"},"metadata":{},"sourceType":"module"}