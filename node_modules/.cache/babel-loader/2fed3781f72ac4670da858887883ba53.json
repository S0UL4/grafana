{"ast":null,"code":"var _Alert, _InlineLabel;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { getDefaultTimeRange } from '@grafana/data';\nimport { Alert, InlineField, InlineLabel, Input, QueryField, useStyles2 } from '@grafana/ui';\nimport { useNextId } from '../../hooks/useNextId';\nimport { useDispatch } from '../../hooks/useStatelessReducer';\nimport { isSupportedVersion } from '../../utils';\nimport { BucketAggregationsEditor } from './BucketAggregationsEditor';\nimport { ElasticsearchProvider } from './ElasticsearchQueryContext';\nimport { MetricAggregationsEditor } from './MetricAggregationsEditor';\nimport { metricAggregationConfig } from './MetricAggregationsEditor/utils';\nimport { changeAliasPattern, changeQuery } from './state';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const QueryEditor = ({\n  query,\n  onChange,\n  onRunQuery,\n  datasource,\n  range\n}) => {\n  if (!isSupportedVersion(datasource.esVersion)) {\n    return _Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n      title: `Support for Elasticsearch versions after their end-of-life (currently versions < 7.10) was removed`\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(ElasticsearchProvider, {\n    datasource: datasource,\n    onChange: onChange,\n    onRunQuery: onRunQuery,\n    query: query,\n    range: range || getDefaultTimeRange(),\n    children: /*#__PURE__*/_jsx(QueryEditorForm, {\n      value: query\n    })\n  });\n};\n\nconst getStyles = theme => ({\n  root: css`\n    display: flex;\n  `,\n  queryFieldWrapper: css`\n    flex-grow: 1;\n    margin: 0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0;\n  `\n});\n\nexport const ElasticSearchQueryField = ({\n  value,\n  onChange\n}) => {\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.queryFieldWrapper,\n    children: /*#__PURE__*/_jsx(QueryField, {\n      query: value // By default QueryField calls onChange if onBlur is not defined, this will trigger a rerender\n      // And slate will claim the focus, making it impossible to leave the field.\n      ,\n      onBlur: () => {},\n      onChange: onChange,\n      placeholder: \"Lucene Query\",\n      portalOrigin: \"elasticsearch\"\n    })\n  });\n};\n\nconst QueryEditorForm = ({\n  value\n}) => {\n  var _value$bucketAggs, _value$bucketAggs$sli, _value$metrics;\n\n  const dispatch = useDispatch();\n  const nextId = useNextId();\n  const styles = useStyles2(getStyles); // To be considered a time series query, the last bucked aggregation must be a Date Histogram\n\n  const isTimeSeriesQuery = (value === null || value === void 0 ? void 0 : (_value$bucketAggs = value.bucketAggs) === null || _value$bucketAggs === void 0 ? void 0 : (_value$bucketAggs$sli = _value$bucketAggs.slice(-1)[0]) === null || _value$bucketAggs$sli === void 0 ? void 0 : _value$bucketAggs$sli.type) === 'date_histogram';\n  const showBucketAggregationsEditor = (_value$metrics = value.metrics) === null || _value$metrics === void 0 ? void 0 : _value$metrics.every(metric => !metricAggregationConfig[metric.type].isSingleMetric);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.root,\n      children: [_InlineLabel || (_InlineLabel = /*#__PURE__*/_jsx(InlineLabel, {\n        width: 17,\n        children: \"Query\"\n      })), /*#__PURE__*/_jsx(ElasticSearchQueryField, {\n        onChange: query => dispatch(changeQuery(query)),\n        value: value === null || value === void 0 ? void 0 : value.query\n      }), /*#__PURE__*/_jsx(InlineField, {\n        label: \"Alias\",\n        labelWidth: 15,\n        disabled: !isTimeSeriesQuery,\n        tooltip: \"Aliasing only works for timeseries queries (when the last group is 'Date Histogram'). For all other query types this field is ignored.\",\n        children: /*#__PURE__*/_jsx(Input, {\n          id: `ES-query-${value.refId}_alias`,\n          placeholder: \"Alias Pattern\",\n          onBlur: e => dispatch(changeAliasPattern(e.currentTarget.value)),\n          defaultValue: value.alias\n        })\n      })]\n    }), /*#__PURE__*/_jsx(MetricAggregationsEditor, {\n      nextId: nextId\n    }), showBucketAggregationsEditor && /*#__PURE__*/_jsx(BucketAggregationsEditor, {\n      nextId: nextId\n    })]\n  });\n};","map":{"version":3,"names":["css","React","getDefaultTimeRange","Alert","InlineField","InlineLabel","Input","QueryField","useStyles2","useNextId","useDispatch","isSupportedVersion","BucketAggregationsEditor","ElasticsearchProvider","MetricAggregationsEditor","metricAggregationConfig","changeAliasPattern","changeQuery","QueryEditor","query","onChange","onRunQuery","datasource","range","esVersion","getStyles","theme","root","queryFieldWrapper","spacing","ElasticSearchQueryField","value","styles","QueryEditorForm","dispatch","nextId","isTimeSeriesQuery","bucketAggs","slice","type","showBucketAggregationsEditor","metrics","every","metric","isSingleMetric","refId","e","currentTarget","alias"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/index.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { getDefaultTimeRange, GrafanaTheme2, QueryEditorProps } from '@grafana/data';\nimport { Alert, InlineField, InlineLabel, Input, QueryField, useStyles2 } from '@grafana/ui';\n\nimport { ElasticDatasource } from '../../datasource';\nimport { useNextId } from '../../hooks/useNextId';\nimport { useDispatch } from '../../hooks/useStatelessReducer';\nimport { ElasticsearchOptions, ElasticsearchQuery } from '../../types';\nimport { isSupportedVersion } from '../../utils';\n\nimport { BucketAggregationsEditor } from './BucketAggregationsEditor';\nimport { ElasticsearchProvider } from './ElasticsearchQueryContext';\nimport { MetricAggregationsEditor } from './MetricAggregationsEditor';\nimport { metricAggregationConfig } from './MetricAggregationsEditor/utils';\nimport { changeAliasPattern, changeQuery } from './state';\n\nexport type ElasticQueryEditorProps = QueryEditorProps<ElasticDatasource, ElasticsearchQuery, ElasticsearchOptions>;\n\nexport const QueryEditor = ({ query, onChange, onRunQuery, datasource, range }: ElasticQueryEditorProps) => {\n  if (!isSupportedVersion(datasource.esVersion)) {\n    return (\n      <Alert\n        title={`Support for Elasticsearch versions after their end-of-life (currently versions < 7.10) was removed`}\n      ></Alert>\n    );\n  }\n  return (\n    <ElasticsearchProvider\n      datasource={datasource}\n      onChange={onChange}\n      onRunQuery={onRunQuery}\n      query={query}\n      range={range || getDefaultTimeRange()}\n    >\n      <QueryEditorForm value={query} />\n    </ElasticsearchProvider>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  root: css`\n    display: flex;\n  `,\n  queryFieldWrapper: css`\n    flex-grow: 1;\n    margin: 0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0;\n  `,\n});\n\ninterface Props {\n  value: ElasticsearchQuery;\n}\n\nexport const ElasticSearchQueryField = ({ value, onChange }: { value?: string; onChange: (v: string) => void }) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.queryFieldWrapper}>\n      <QueryField\n        query={value}\n        // By default QueryField calls onChange if onBlur is not defined, this will trigger a rerender\n        // And slate will claim the focus, making it impossible to leave the field.\n        onBlur={() => {}}\n        onChange={onChange}\n        placeholder=\"Lucene Query\"\n        portalOrigin=\"elasticsearch\"\n      />\n    </div>\n  );\n};\n\nconst QueryEditorForm = ({ value }: Props) => {\n  const dispatch = useDispatch();\n  const nextId = useNextId();\n  const styles = useStyles2(getStyles);\n\n  // To be considered a time series query, the last bucked aggregation must be a Date Histogram\n  const isTimeSeriesQuery = value?.bucketAggs?.slice(-1)[0]?.type === 'date_histogram';\n\n  const showBucketAggregationsEditor = value.metrics?.every(\n    (metric) => !metricAggregationConfig[metric.type].isSingleMetric\n  );\n\n  return (\n    <>\n      <div className={styles.root}>\n        <InlineLabel width={17}>Query</InlineLabel>\n        <ElasticSearchQueryField onChange={(query) => dispatch(changeQuery(query))} value={value?.query} />\n\n        <InlineField\n          label=\"Alias\"\n          labelWidth={15}\n          disabled={!isTimeSeriesQuery}\n          tooltip=\"Aliasing only works for timeseries queries (when the last group is 'Date Histogram'). For all other query types this field is ignored.\"\n        >\n          <Input\n            id={`ES-query-${value.refId}_alias`}\n            placeholder=\"Alias Pattern\"\n            onBlur={(e) => dispatch(changeAliasPattern(e.currentTarget.value))}\n            defaultValue={value.alias}\n          />\n        </InlineField>\n      </div>\n\n      <MetricAggregationsEditor nextId={nextId} />\n      {showBucketAggregationsEditor && <BucketAggregationsEditor nextId={nextId} />}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}