{"ast":null,"code":"import { standardEditorsRegistry } from '@grafana/data';\nimport { LegendDisplayMode } from '@grafana/schema';\n/**\n * @alpha\n */\n\nexport function addLegendOptions(builder, includeLegendCalcs = true) {\n  builder.addRadio({\n    path: 'legend.displayMode',\n    name: 'Legend mode',\n    category: ['Legend'],\n    description: '',\n    defaultValue: LegendDisplayMode.List,\n    settings: {\n      options: [{\n        value: LegendDisplayMode.List,\n        label: 'List'\n      }, {\n        value: LegendDisplayMode.Table,\n        label: 'Table'\n      }, {\n        value: LegendDisplayMode.Hidden,\n        label: 'Hidden'\n      }]\n    }\n  }).addRadio({\n    path: 'legend.placement',\n    name: 'Legend placement',\n    category: ['Legend'],\n    description: '',\n    defaultValue: 'bottom',\n    settings: {\n      options: [{\n        value: 'bottom',\n        label: 'Bottom'\n      }, {\n        value: 'right',\n        label: 'Right'\n      }]\n    },\n    showIf: c => c.legend.displayMode !== LegendDisplayMode.Hidden\n  }).addNumberInput({\n    path: 'legend.width',\n    name: 'Width',\n    category: ['Legend'],\n    settings: {\n      placeholder: 'Auto'\n    },\n    showIf: c => c.legend.displayMode !== LegendDisplayMode.Hidden && c.legend.placement === 'right'\n  });\n\n  if (includeLegendCalcs) {\n    builder.addCustomEditor({\n      id: 'legend.calcs',\n      path: 'legend.calcs',\n      name: 'Legend values',\n      category: ['Legend'],\n      description: 'Select values or calculations to show in legend',\n      editor: standardEditorsRegistry.get('stats-picker').editor,\n      defaultValue: [],\n      settings: {\n        allowMultiple: true\n      },\n      showIf: currentConfig => currentConfig.legend.displayMode !== LegendDisplayMode.Hidden\n    });\n  }\n}","map":{"version":3,"names":["standardEditorsRegistry","LegendDisplayMode","addLegendOptions","builder","includeLegendCalcs","addRadio","path","name","category","description","defaultValue","List","settings","options","value","label","Table","Hidden","showIf","c","legend","displayMode","addNumberInput","placeholder","placement","addCustomEditor","id","editor","get","allowMultiple","currentConfig"],"sources":["/home/soula/grafana/packages/grafana-ui/src/options/builder/legend.tsx"],"sourcesContent":["import { PanelOptionsEditorBuilder, standardEditorsRegistry, StatsPickerConfigSettings } from '@grafana/data';\nimport { LegendDisplayMode, OptionsWithLegend } from '@grafana/schema';\n\n/**\n * @alpha\n */\nexport function addLegendOptions<T extends OptionsWithLegend>(\n  builder: PanelOptionsEditorBuilder<T>,\n  includeLegendCalcs = true\n) {\n  builder\n    .addRadio({\n      path: 'legend.displayMode',\n      name: 'Legend mode',\n      category: ['Legend'],\n      description: '',\n      defaultValue: LegendDisplayMode.List,\n      settings: {\n        options: [\n          { value: LegendDisplayMode.List, label: 'List' },\n          { value: LegendDisplayMode.Table, label: 'Table' },\n          { value: LegendDisplayMode.Hidden, label: 'Hidden' },\n        ],\n      },\n    })\n    .addRadio({\n      path: 'legend.placement',\n      name: 'Legend placement',\n      category: ['Legend'],\n      description: '',\n      defaultValue: 'bottom',\n      settings: {\n        options: [\n          { value: 'bottom', label: 'Bottom' },\n          { value: 'right', label: 'Right' },\n        ],\n      },\n      showIf: (c) => c.legend.displayMode !== LegendDisplayMode.Hidden,\n    })\n    .addNumberInput({\n      path: 'legend.width',\n      name: 'Width',\n      category: ['Legend'],\n      settings: {\n        placeholder: 'Auto',\n      },\n      showIf: (c) => c.legend.displayMode !== LegendDisplayMode.Hidden && c.legend.placement === 'right',\n    });\n\n  if (includeLegendCalcs) {\n    builder.addCustomEditor<StatsPickerConfigSettings, string[]>({\n      id: 'legend.calcs',\n      path: 'legend.calcs',\n      name: 'Legend values',\n      category: ['Legend'],\n      description: 'Select values or calculations to show in legend',\n      editor: standardEditorsRegistry.get('stats-picker').editor as any,\n      defaultValue: [],\n      settings: {\n        allowMultiple: true,\n      },\n      showIf: (currentConfig) => currentConfig.legend.displayMode !== LegendDisplayMode.Hidden,\n    });\n  }\n}\n"],"mappings":"AAAA,SAAoCA,uBAApC,QAA8F,eAA9F;AACA,SAASC,iBAAT,QAAqD,iBAArD;AAEA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CACLC,OADK,EAELC,kBAAkB,GAAG,IAFhB,EAGL;EACAD,OAAO,CACJE,QADH,CACY;IACRC,IAAI,EAAE,oBADE;IAERC,IAAI,EAAE,aAFE;IAGRC,QAAQ,EAAE,CAAC,QAAD,CAHF;IAIRC,WAAW,EAAE,EAJL;IAKRC,YAAY,EAAET,iBAAiB,CAACU,IALxB;IAMRC,QAAQ,EAAE;MACRC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAEb,iBAAiB,CAACU,IAA3B;QAAiCI,KAAK,EAAE;MAAxC,CADO,EAEP;QAAED,KAAK,EAAEb,iBAAiB,CAACe,KAA3B;QAAkCD,KAAK,EAAE;MAAzC,CAFO,EAGP;QAAED,KAAK,EAAEb,iBAAiB,CAACgB,MAA3B;QAAmCF,KAAK,EAAE;MAA1C,CAHO;IADD;EANF,CADZ,EAeGV,QAfH,CAeY;IACRC,IAAI,EAAE,kBADE;IAERC,IAAI,EAAE,kBAFE;IAGRC,QAAQ,EAAE,CAAC,QAAD,CAHF;IAIRC,WAAW,EAAE,EAJL;IAKRC,YAAY,EAAE,QALN;IAMRE,QAAQ,EAAE;MACRC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,QAAT;QAAmBC,KAAK,EAAE;MAA1B,CADO,EAEP;QAAED,KAAK,EAAE,OAAT;QAAkBC,KAAK,EAAE;MAAzB,CAFO;IADD,CANF;IAYRG,MAAM,EAAGC,CAAD,IAAOA,CAAC,CAACC,MAAF,CAASC,WAAT,KAAyBpB,iBAAiB,CAACgB;EAZlD,CAfZ,EA6BGK,cA7BH,CA6BkB;IACdhB,IAAI,EAAE,cADQ;IAEdC,IAAI,EAAE,OAFQ;IAGdC,QAAQ,EAAE,CAAC,QAAD,CAHI;IAIdI,QAAQ,EAAE;MACRW,WAAW,EAAE;IADL,CAJI;IAOdL,MAAM,EAAGC,CAAD,IAAOA,CAAC,CAACC,MAAF,CAASC,WAAT,KAAyBpB,iBAAiB,CAACgB,MAA3C,IAAqDE,CAAC,CAACC,MAAF,CAASI,SAAT,KAAuB;EAP7E,CA7BlB;;EAuCA,IAAIpB,kBAAJ,EAAwB;IACtBD,OAAO,CAACsB,eAAR,CAA6D;MAC3DC,EAAE,EAAE,cADuD;MAE3DpB,IAAI,EAAE,cAFqD;MAG3DC,IAAI,EAAE,eAHqD;MAI3DC,QAAQ,EAAE,CAAC,QAAD,CAJiD;MAK3DC,WAAW,EAAE,iDAL8C;MAM3DkB,MAAM,EAAE3B,uBAAuB,CAAC4B,GAAxB,CAA4B,cAA5B,EAA4CD,MANO;MAO3DjB,YAAY,EAAE,EAP6C;MAQ3DE,QAAQ,EAAE;QACRiB,aAAa,EAAE;MADP,CARiD;MAW3DX,MAAM,EAAGY,aAAD,IAAmBA,aAAa,CAACV,MAAd,CAAqBC,WAArB,KAAqCpB,iBAAiB,CAACgB;IAXvB,CAA7D;EAaD;AACF"},"metadata":{},"sourceType":"module"}