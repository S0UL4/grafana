{"ast":null,"code":"import React, { useState } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useTheme2 } from '../../themes';\nimport { Button } from '../Button';\nimport { Select } from '../Select/Select';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ValuePicker({\n  label,\n  icon,\n  options,\n  onChange,\n  variant,\n  minWidth = 16,\n  size = 'sm',\n  isFullWidth = true,\n  menuPlacement\n}) {\n  const [isPicking, setIsPicking] = useState(false);\n  const theme = useTheme2();\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!isPicking && /*#__PURE__*/_jsx(Button, {\n      size: size || 'sm',\n      icon: icon || 'plus',\n      onClick: () => setIsPicking(true),\n      variant: variant,\n      fullWidth: isFullWidth,\n      \"aria-label\": selectors.components.ValuePicker.button(label),\n      children: label\n    }), isPicking && /*#__PURE__*/_jsx(\"span\", {\n      style: {\n        minWidth: theme.spacing(minWidth),\n        flexGrow: isFullWidth ? 1 : undefined\n      },\n      children: /*#__PURE__*/_jsx(Select, {\n        placeholder: label,\n        options: options,\n        \"aria-label\": selectors.components.ValuePicker.select(label),\n        isOpen: true,\n        onCloseMenu: () => setIsPicking(false),\n        autoFocus: true,\n        onChange: value => {\n          setIsPicking(false);\n          onChange(value);\n        },\n        menuPlacement: menuPlacement\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","selectors","useTheme2","Button","Select","ValuePicker","label","icon","options","onChange","variant","minWidth","size","isFullWidth","menuPlacement","isPicking","setIsPicking","theme","components","button","spacing","flexGrow","undefined","select","value"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ValuePicker/ValuePicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonVariant } from '../Button';\nimport { Select } from '../Select/Select';\n\nexport interface ValuePickerProps<T> {\n  /** Label to display on the picker button */\n  label: string;\n  /** Icon to display on the picker button */\n  icon?: IconName;\n  /** ValuePicker options  */\n  options: Array<SelectableValue<T>>;\n  /** Callback to handle selected option */\n  onChange: (value: SelectableValue<T>) => void;\n  /** Which ButtonVariant to render */\n  variant?: ButtonVariant;\n  /** Size of button  */\n  size?: ComponentSize;\n  /** Min width for select in grid units */\n  minWidth?: number;\n  /** Should the picker cover the full width of its parent */\n  isFullWidth?: boolean;\n  /** Control where the menu is rendered */\n  menuPlacement?: 'auto' | 'bottom' | 'top';\n}\n\nexport function ValuePicker<T>({\n  label,\n  icon,\n  options,\n  onChange,\n  variant,\n  minWidth = 16,\n  size = 'sm',\n  isFullWidth = true,\n  menuPlacement,\n}: ValuePickerProps<T>) {\n  const [isPicking, setIsPicking] = useState(false);\n  const theme = useTheme2();\n\n  return (\n    <>\n      {!isPicking && (\n        <Button\n          size={size || 'sm'}\n          icon={icon || 'plus'}\n          onClick={() => setIsPicking(true)}\n          variant={variant}\n          fullWidth={isFullWidth}\n          aria-label={selectors.components.ValuePicker.button(label)}\n        >\n          {label}\n        </Button>\n      )}\n\n      {isPicking && (\n        <span style={{ minWidth: theme.spacing(minWidth), flexGrow: isFullWidth ? 1 : undefined }}>\n          <Select\n            placeholder={label}\n            options={options}\n            aria-label={selectors.components.ValuePicker.select(label)}\n            isOpen\n            onCloseMenu={() => setIsPicking(false)}\n            autoFocus={true}\n            onChange={(value) => {\n              setIsPicking(false);\n              onChange(value);\n            }}\n            menuPlacement={menuPlacement}\n          />\n        </span>\n      )}\n    </>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAGA,SAASC,MAAT,QAAsC,WAAtC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;;AAuBA,OAAO,SAASC,WAAT,CAAwB;EAC7BC,KAD6B;EAE7BC,IAF6B;EAG7BC,OAH6B;EAI7BC,QAJ6B;EAK7BC,OAL6B;EAM7BC,QAAQ,GAAG,EANkB;EAO7BC,IAAI,GAAG,IAPsB;EAQ7BC,WAAW,GAAG,IARe;EAS7BC;AAT6B,CAAxB,EAUiB;EACtB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAMiB,KAAK,GAAGf,SAAS,EAAvB;EAEA,oBACE;IAAA,WACG,CAACa,SAAD,iBACC,KAAC,MAAD;MACE,IAAI,EAAEH,IAAI,IAAI,IADhB;MAEE,IAAI,EAAEL,IAAI,IAAI,MAFhB;MAGE,OAAO,EAAE,MAAMS,YAAY,CAAC,IAAD,CAH7B;MAIE,OAAO,EAAEN,OAJX;MAKE,SAAS,EAAEG,WALb;MAME,cAAYZ,SAAS,CAACiB,UAAV,CAAqBb,WAArB,CAAiCc,MAAjC,CAAwCb,KAAxC,CANd;MAAA,UAQGA;IARH,EAFJ,EAcGS,SAAS,iBACR;MAAM,KAAK,EAAE;QAAEJ,QAAQ,EAAEM,KAAK,CAACG,OAAN,CAAcT,QAAd,CAAZ;QAAqCU,QAAQ,EAAER,WAAW,GAAG,CAAH,GAAOS;MAAjE,CAAb;MAAA,uBACE,KAAC,MAAD;QACE,WAAW,EAAEhB,KADf;QAEE,OAAO,EAAEE,OAFX;QAGE,cAAYP,SAAS,CAACiB,UAAV,CAAqBb,WAArB,CAAiCkB,MAAjC,CAAwCjB,KAAxC,CAHd;QAIE,MAAM,MAJR;QAKE,WAAW,EAAE,MAAMU,YAAY,CAAC,KAAD,CALjC;QAME,SAAS,EAAE,IANb;QAOE,QAAQ,EAAGQ,KAAD,IAAW;UACnBR,YAAY,CAAC,KAAD,CAAZ;UACAP,QAAQ,CAACe,KAAD,CAAR;QACD,CAVH;QAWE,aAAa,EAAEV;MAXjB;IADF,EAfJ;EAAA,EADF;AAkCD"},"metadata":{},"sourceType":"module"}