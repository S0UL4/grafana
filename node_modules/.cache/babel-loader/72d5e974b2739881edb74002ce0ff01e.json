{"ast":null,"code":"const _excluded = [\"options\", \"value\", \"onChange\", \"Component\", \"className\", \"allowCustomValue\", \"allowEmptyValue\", \"placeholder\", \"disabled\", \"inputMinWidth\", \"inputPlaceholder\", \"onExpandedChange\", \"autofocus\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { cx } from '@emotion/css';\nimport { isObject } from 'lodash';\nimport React from 'react';\nimport { useStyles } from '../../themes';\nimport { InlineLabel } from '../Forms/InlineLabel';\nimport { getSegmentStyles } from './styles';\nimport { SegmentSelect, useExpandableLabel } from './';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Segment(_ref) {\n  let {\n    options,\n    value,\n    onChange,\n    Component,\n    className,\n    allowCustomValue,\n    allowEmptyValue,\n    placeholder,\n    disabled,\n    inputMinWidth,\n    inputPlaceholder,\n    onExpandedChange,\n    autofocus = false\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [Label, labelWidth, expanded, setExpanded] = useExpandableLabel(autofocus, onExpandedChange);\n  const width = inputMinWidth ? Math.max(inputMinWidth, labelWidth) : labelWidth;\n  const styles = useStyles(getSegmentStyles);\n\n  if (!expanded) {\n    const label = isObject(value) ? value.label : value;\n    return /*#__PURE__*/_jsx(Label, {\n      disabled: disabled,\n      Component: Component || /*#__PURE__*/_jsx(InlineLabel, {\n        className: cx(styles.segment, {\n          [styles.queryPlaceholder]: placeholder !== undefined && !value,\n          [styles.disabled]: disabled\n        }, className),\n        children: label || placeholder\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(SegmentSelect, Object.assign({}, rest, {\n    value: value && !isObject(value) ? {\n      value\n    } : value,\n    placeholder: inputPlaceholder,\n    options: options,\n    width: width,\n    onClickOutside: () => setExpanded(false),\n    allowCustomValue: allowCustomValue,\n    allowEmptyValue: allowEmptyValue,\n    onChange: item => {\n      setExpanded(false);\n      onChange(item);\n    }\n  }));\n}","map":{"version":3,"names":["cx","isObject","React","useStyles","InlineLabel","getSegmentStyles","SegmentSelect","useExpandableLabel","Segment","options","value","onChange","Component","className","allowCustomValue","allowEmptyValue","placeholder","disabled","inputMinWidth","inputPlaceholder","onExpandedChange","autofocus","rest","Label","labelWidth","expanded","setExpanded","width","Math","max","styles","label","segment","queryPlaceholder","undefined","item"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Segment/Segment.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport { isObject } from 'lodash';\nimport React, { HTMLProps } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { useStyles } from '../../themes';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\nimport { getSegmentStyles } from './styles';\n\nimport { SegmentSelect, useExpandableLabel, SegmentProps } from './';\n\nexport interface SegmentSyncProps<T> extends SegmentProps<T>, Omit<HTMLProps<HTMLDivElement>, 'value' | 'onChange'> {\n  value?: T | SelectableValue<T>;\n  onChange: (item: SelectableValue<T>) => void;\n  options: Array<SelectableValue<T>>;\n  inputMinWidth?: number;\n}\n\nexport function Segment<T>({\n  options,\n  value,\n  onChange,\n  Component,\n  className,\n  allowCustomValue,\n  allowEmptyValue,\n  placeholder,\n  disabled,\n  inputMinWidth,\n  inputPlaceholder,\n  onExpandedChange,\n  autofocus = false,\n  ...rest\n}: React.PropsWithChildren<SegmentSyncProps<T>>) {\n  const [Label, labelWidth, expanded, setExpanded] = useExpandableLabel(autofocus, onExpandedChange);\n  const width = inputMinWidth ? Math.max(inputMinWidth, labelWidth) : labelWidth;\n  const styles = useStyles(getSegmentStyles);\n\n  if (!expanded) {\n    const label = isObject(value) ? value.label : value;\n\n    return (\n      <Label\n        disabled={disabled}\n        Component={\n          Component || (\n            <InlineLabel\n              className={cx(\n                styles.segment,\n                {\n                  [styles.queryPlaceholder]: placeholder !== undefined && !value,\n                  [styles.disabled]: disabled,\n                },\n                className\n              )}\n            >\n              {label || placeholder}\n            </InlineLabel>\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <SegmentSelect\n      {...rest}\n      value={value && !isObject(value) ? { value } : value}\n      placeholder={inputPlaceholder}\n      options={options}\n      width={width}\n      onClickOutside={() => setExpanded(false)}\n      allowCustomValue={allowCustomValue}\n      allowEmptyValue={allowEmptyValue}\n      onChange={(item) => {\n        setExpanded(false);\n        onChange(item);\n      }}\n    />\n  );\n}\n"],"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAIA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,gBAAT,QAAiC,UAAjC;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAgE,IAAhE;;AASA,OAAO,SAASC,OAAT,OAe0C;EAAA,IAftB;IACzBC,OADyB;IAEzBC,KAFyB;IAGzBC,QAHyB;IAIzBC,SAJyB;IAKzBC,SALyB;IAMzBC,gBANyB;IAOzBC,eAPyB;IAQzBC,WARyB;IASzBC,QATyB;IAUzBC,aAVyB;IAWzBC,gBAXyB;IAYzBC,gBAZyB;IAazBC,SAAS,GAAG;EAba,CAesB;EAAA,IAD5CC,IAC4C;;EAC/C,MAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,QAApB,EAA8BC,WAA9B,IAA6CnB,kBAAkB,CAACc,SAAD,EAAYD,gBAAZ,CAArE;EACA,MAAMO,KAAK,GAAGT,aAAa,GAAGU,IAAI,CAACC,GAAL,CAASX,aAAT,EAAwBM,UAAxB,CAAH,GAAyCA,UAApE;EACA,MAAMM,MAAM,GAAG3B,SAAS,CAACE,gBAAD,CAAxB;;EAEA,IAAI,CAACoB,QAAL,EAAe;IACb,MAAMM,KAAK,GAAG9B,QAAQ,CAACS,KAAD,CAAR,GAAkBA,KAAK,CAACqB,KAAxB,GAAgCrB,KAA9C;IAEA,oBACE,KAAC,KAAD;MACE,QAAQ,EAAEO,QADZ;MAEE,SAAS,EACPL,SAAS,iBACP,KAAC,WAAD;QACE,SAAS,EAAEZ,EAAE,CACX8B,MAAM,CAACE,OADI,EAEX;UACE,CAACF,MAAM,CAACG,gBAAR,GAA2BjB,WAAW,KAAKkB,SAAhB,IAA6B,CAACxB,KAD3D;UAEE,CAACoB,MAAM,CAACb,QAAR,GAAmBA;QAFrB,CAFW,EAMXJ,SANW,CADf;QAAA,UAUGkB,KAAK,IAAIf;MAVZ;IAJN,EADF;EAqBD;;EAED,oBACE,KAAC,aAAD,oBACMM,IADN;IAEE,KAAK,EAAEZ,KAAK,IAAI,CAACT,QAAQ,CAACS,KAAD,CAAlB,GAA4B;MAAEA;IAAF,CAA5B,GAAwCA,KAFjD;IAGE,WAAW,EAAES,gBAHf;IAIE,OAAO,EAAEV,OAJX;IAKE,KAAK,EAAEkB,KALT;IAME,cAAc,EAAE,MAAMD,WAAW,CAAC,KAAD,CANnC;IAOE,gBAAgB,EAAEZ,gBAPpB;IAQE,eAAe,EAAEC,eARnB;IASE,QAAQ,EAAGoB,IAAD,IAAU;MAClBT,WAAW,CAAC,KAAD,CAAX;MACAf,QAAQ,CAACwB,IAAD,CAAR;IACD;EAZH,GADF;AAgBD"},"metadata":{},"sourceType":"module"}