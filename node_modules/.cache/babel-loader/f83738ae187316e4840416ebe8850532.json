{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocalStorage } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, CustomScrollbar, FilterInput, RadioButtonGroup, useStyles } from '@grafana/ui';\nimport { Field } from '@grafana/ui/src/components/Forms/Field';\nimport { LS_VISUALIZATION_SELECT_TAB_KEY } from 'app/core/constants';\nimport { PanelLibraryOptionsGroup } from 'app/features/library-panels/components/PanelLibraryOptionsGroup/PanelLibraryOptionsGroup';\nimport { VisualizationSuggestions } from 'app/features/panel/components/VizTypePicker/VisualizationSuggestions';\nimport { VizTypePicker } from '../../../panel/components/VizTypePicker/VizTypePicker';\nimport { changePanelPlugin } from '../../../panel/state/actions';\nimport { getPanelPluginWithFallback } from '../../state/selectors';\nimport { toggleVizPicker } from './state/reducers';\nimport { VisualizationSelectPaneTab } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VisualizationSelectPane = ({\n  panel,\n  data\n}) => {\n  const plugin = useSelector(getPanelPluginWithFallback(panel.type));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [listMode, setListMode] = useLocalStorage(LS_VISUALIZATION_SELECT_TAB_KEY, VisualizationSelectPaneTab.Visualizations);\n  const dispatch = useDispatch();\n  const styles = useStyles(getStyles);\n  const searchRef = useRef(null);\n  const onVizChange = useCallback(pluginChange => {\n    dispatch(changePanelPlugin(Object.assign({\n      panel: panel\n    }, pluginChange))); // close viz picker unless a mod key is pressed while clicking\n\n    if (!pluginChange.withModKey) {\n      dispatch(toggleVizPicker(false));\n    }\n  }, [dispatch, panel]); // Give Search input focus when using radio button switch list mode\n\n  useEffect(() => {\n    if (searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [listMode]);\n\n  const onCloseVizPicker = () => {\n    dispatch(toggleVizPicker(false));\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  const radioOptions = [{\n    label: 'Visualizations',\n    value: VisualizationSelectPaneTab.Visualizations\n  }, {\n    label: 'Suggestions',\n    value: VisualizationSelectPaneTab.Suggestions\n  }, {\n    label: 'Library panels',\n    value: VisualizationSelectPaneTab.LibraryPanels,\n    description: 'Reusable panels you can share between multiple dashboards.'\n  }];\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.openWrapper,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.formBox,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.searchRow,\n        children: [/*#__PURE__*/_jsx(FilterInput, {\n          value: searchQuery,\n          onChange: setSearchQuery,\n          ref: searchRef,\n          autoFocus: true,\n          placeholder: \"Search for...\"\n        }), /*#__PURE__*/_jsx(Button, {\n          title: \"Close\",\n          variant: \"secondary\",\n          icon: \"angle-up\",\n          className: styles.closeButton,\n          \"aria-label\": selectors.components.PanelEditor.toggleVizPicker,\n          onClick: onCloseVizPicker\n        })]\n      }), /*#__PURE__*/_jsx(Field, {\n        className: styles.customFieldMargin,\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          options: radioOptions,\n          value: listMode,\n          onChange: setListMode,\n          fullWidth: true\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.scrollWrapper,\n      children: /*#__PURE__*/_jsx(CustomScrollbar, {\n        autoHeightMin: \"100%\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.scrollContent,\n          children: [listMode === VisualizationSelectPaneTab.Visualizations && /*#__PURE__*/_jsx(VizTypePicker, {\n            current: plugin.meta,\n            onChange: onVizChange,\n            searchQuery: searchQuery,\n            data: data,\n            onClose: () => {}\n          }), listMode === VisualizationSelectPaneTab.Suggestions && /*#__PURE__*/_jsx(VisualizationSuggestions, {\n            current: plugin.meta,\n            onChange: onVizChange,\n            searchQuery: searchQuery,\n            panel: panel,\n            data: data,\n            onClose: () => {}\n          }), listMode === VisualizationSelectPaneTab.LibraryPanels && /*#__PURE__*/_jsx(PanelLibraryOptionsGroup, {\n            searchQuery: searchQuery,\n            panel: panel\n          }, \"Panel Library\")]\n        })\n      })\n    })]\n  });\n};\nVisualizationSelectPane.displayName = 'VisualizationSelectPane';\n\nconst getStyles = theme => {\n  return {\n    icon: css`\n      color: ${theme.palette.gray33};\n    `,\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      flex: 1 1 0;\n      height: 100%;\n    `,\n    vizButton: css`\n      text-align: left;\n    `,\n    scrollWrapper: css`\n      flex-grow: 1;\n      min-height: 0;\n    `,\n    scrollContent: css`\n      padding: ${theme.spacing.sm};\n    `,\n    openWrapper: css`\n      display: flex;\n      flex-direction: column;\n      flex: 1 1 100%;\n      height: 100%;\n      background: ${theme.colors.bg1};\n      border: 1px solid ${theme.colors.border1};\n    `,\n    searchRow: css`\n      display: flex;\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    closeButton: css`\n      margin-left: ${theme.spacing.sm};\n    `,\n    customFieldMargin: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    formBox: css`\n      padding: ${theme.spacing.sm};\n      padding-bottom: 0;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","useLocalStorage","selectors","Button","CustomScrollbar","FilterInput","RadioButtonGroup","useStyles","Field","LS_VISUALIZATION_SELECT_TAB_KEY","PanelLibraryOptionsGroup","VisualizationSuggestions","VizTypePicker","changePanelPlugin","getPanelPluginWithFallback","toggleVizPicker","VisualizationSelectPaneTab","VisualizationSelectPane","panel","data","plugin","type","searchQuery","setSearchQuery","listMode","setListMode","Visualizations","dispatch","styles","getStyles","searchRef","onVizChange","pluginChange","withModKey","current","focus","onCloseVizPicker","radioOptions","label","value","Suggestions","LibraryPanels","description","openWrapper","formBox","searchRow","closeButton","components","PanelEditor","customFieldMargin","scrollWrapper","scrollContent","meta","displayName","theme","icon","palette","gray33","wrapper","vizButton","spacing","sm","colors","bg1","border1"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/VisualizationSelectPane.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocalStorage } from 'react-use';\n\nimport { GrafanaTheme, PanelData, SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, CustomScrollbar, FilterInput, RadioButtonGroup, useStyles } from '@grafana/ui';\nimport { Field } from '@grafana/ui/src/components/Forms/Field';\nimport { LS_VISUALIZATION_SELECT_TAB_KEY } from 'app/core/constants';\nimport { PanelLibraryOptionsGroup } from 'app/features/library-panels/components/PanelLibraryOptionsGroup/PanelLibraryOptionsGroup';\nimport { VisualizationSuggestions } from 'app/features/panel/components/VizTypePicker/VisualizationSuggestions';\nimport { VizTypeChangeDetails } from 'app/features/panel/components/VizTypePicker/types';\n\nimport { VizTypePicker } from '../../../panel/components/VizTypePicker/VizTypePicker';\nimport { changePanelPlugin } from '../../../panel/state/actions';\nimport { PanelModel } from '../../state/PanelModel';\nimport { getPanelPluginWithFallback } from '../../state/selectors';\n\nimport { toggleVizPicker } from './state/reducers';\nimport { VisualizationSelectPaneTab } from './types';\n\ninterface Props {\n  panel: PanelModel;\n  data?: PanelData;\n}\n\nexport const VisualizationSelectPane: FC<Props> = ({ panel, data }) => {\n  const plugin = useSelector(getPanelPluginWithFallback(panel.type));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [listMode, setListMode] = useLocalStorage(\n    LS_VISUALIZATION_SELECT_TAB_KEY,\n    VisualizationSelectPaneTab.Visualizations\n  );\n\n  const dispatch = useDispatch();\n  const styles = useStyles(getStyles);\n  const searchRef = useRef<HTMLInputElement | null>(null);\n\n  const onVizChange = useCallback(\n    (pluginChange: VizTypeChangeDetails) => {\n      dispatch(changePanelPlugin({ panel: panel, ...pluginChange }));\n\n      // close viz picker unless a mod key is pressed while clicking\n      if (!pluginChange.withModKey) {\n        dispatch(toggleVizPicker(false));\n      }\n    },\n    [dispatch, panel]\n  );\n\n  // Give Search input focus when using radio button switch list mode\n  useEffect(() => {\n    if (searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [listMode]);\n\n  const onCloseVizPicker = () => {\n    dispatch(toggleVizPicker(false));\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  const radioOptions: Array<SelectableValue<VisualizationSelectPaneTab>> = [\n    { label: 'Visualizations', value: VisualizationSelectPaneTab.Visualizations },\n    { label: 'Suggestions', value: VisualizationSelectPaneTab.Suggestions },\n    {\n      label: 'Library panels',\n      value: VisualizationSelectPaneTab.LibraryPanels,\n      description: 'Reusable panels you can share between multiple dashboards.',\n    },\n  ];\n\n  return (\n    <div className={styles.openWrapper}>\n      <div className={styles.formBox}>\n        <div className={styles.searchRow}>\n          <FilterInput\n            value={searchQuery}\n            onChange={setSearchQuery}\n            ref={searchRef}\n            autoFocus={true}\n            placeholder=\"Search for...\"\n          />\n          <Button\n            title=\"Close\"\n            variant=\"secondary\"\n            icon=\"angle-up\"\n            className={styles.closeButton}\n            aria-label={selectors.components.PanelEditor.toggleVizPicker}\n            onClick={onCloseVizPicker}\n          />\n        </div>\n        <Field className={styles.customFieldMargin}>\n          <RadioButtonGroup options={radioOptions} value={listMode} onChange={setListMode} fullWidth />\n        </Field>\n      </div>\n      <div className={styles.scrollWrapper}>\n        <CustomScrollbar autoHeightMin=\"100%\">\n          <div className={styles.scrollContent}>\n            {listMode === VisualizationSelectPaneTab.Visualizations && (\n              <VizTypePicker\n                current={plugin.meta}\n                onChange={onVizChange}\n                searchQuery={searchQuery}\n                data={data}\n                onClose={() => {}}\n              />\n            )}\n            {listMode === VisualizationSelectPaneTab.Suggestions && (\n              <VisualizationSuggestions\n                current={plugin.meta}\n                onChange={onVizChange}\n                searchQuery={searchQuery}\n                panel={panel}\n                data={data}\n                onClose={() => {}}\n              />\n            )}\n            {listMode === VisualizationSelectPaneTab.LibraryPanels && (\n              <PanelLibraryOptionsGroup searchQuery={searchQuery} panel={panel} key=\"Panel Library\" />\n            )}\n          </div>\n        </CustomScrollbar>\n      </div>\n    </div>\n  );\n};\n\nVisualizationSelectPane.displayName = 'VisualizationSelectPane';\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    icon: css`\n      color: ${theme.palette.gray33};\n    `,\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      flex: 1 1 0;\n      height: 100%;\n    `,\n    vizButton: css`\n      text-align: left;\n    `,\n    scrollWrapper: css`\n      flex-grow: 1;\n      min-height: 0;\n    `,\n    scrollContent: css`\n      padding: ${theme.spacing.sm};\n    `,\n    openWrapper: css`\n      display: flex;\n      flex-direction: column;\n      flex: 1 1 100%;\n      height: 100%;\n      background: ${theme.colors.bg1};\n      border: 1px solid ${theme.colors.border1};\n    `,\n    searchRow: css`\n      display: flex;\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    closeButton: css`\n      margin-left: ${theme.spacing.sm};\n    `,\n    customFieldMargin: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    formBox: css`\n      padding: ${theme.spacing.sm};\n      padding-bottom: 0;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}