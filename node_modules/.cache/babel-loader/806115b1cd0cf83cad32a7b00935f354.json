{"ast":null,"code":"import React from 'react';\nimport { useAsync } from 'react-use';\nimport { Icon, Select } from '@grafana/ui';\nimport { DEFAULT_SORT } from 'app/features/search/constants';\nimport { SearchSrv } from '../../services/search_srv';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst defaultSortOptionsGetter = () => {\n  return new SearchSrv().getSortOptions().then(({\n    sortOptions\n  }) => {\n    return sortOptions.map(opt => ({\n      label: opt.displayName,\n      value: opt.name\n    }));\n  });\n};\n\nexport function SortPicker({\n  onChange,\n  value,\n  placeholder,\n  filter,\n  getSortOptions,\n  isClearable\n}) {\n  var _options$value$find, _options$value;\n\n  // Using sync Select and manual options fetching here since we need to find the selected option by value\n  const options = useAsync(async () => {\n    const vals = await (getSortOptions !== null && getSortOptions !== void 0 ? getSortOptions : defaultSortOptionsGetter)();\n\n    if (filter) {\n      return vals.filter(v => filter.includes(v.value));\n    }\n\n    return vals;\n  }, [getSortOptions, filter]);\n\n  if (options.loading) {\n    return null;\n  }\n\n  const isDesc = Boolean((value === null || value === void 0 ? void 0 : value.includes('desc')) || (value === null || value === void 0 ? void 0 : value.startsWith('-'))); // bluge syntax starts with \"-\"\n\n  return /*#__PURE__*/_jsx(Select, {\n    width: 28,\n    onChange: onChange,\n    value: (_options$value$find = (_options$value = options.value) === null || _options$value === void 0 ? void 0 : _options$value.find(opt => opt.value === value)) !== null && _options$value$find !== void 0 ? _options$value$find : null,\n    options: options.value,\n    \"aria-label\": \"Sort\",\n    placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : `Sort (Default ${DEFAULT_SORT.label})`,\n    prefix: /*#__PURE__*/_jsx(Icon, {\n      name: isDesc ? 'sort-amount-down' : 'sort-amount-up'\n    }),\n    isClearable: isClearable\n  }, value);\n}","map":{"version":3,"names":["React","useAsync","Icon","Select","DEFAULT_SORT","SearchSrv","defaultSortOptionsGetter","getSortOptions","then","sortOptions","map","opt","label","displayName","value","name","SortPicker","onChange","placeholder","filter","isClearable","options","vals","v","includes","loading","isDesc","Boolean","startsWith","find"],"sources":["/home/soula/grafana/public/app/core/components/Select/SortPicker.tsx"],"sourcesContent":["import React from 'react';\nimport { useAsync } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Icon, Select } from '@grafana/ui';\nimport { DEFAULT_SORT } from 'app/features/search/constants';\n\nimport { SearchSrv } from '../../services/search_srv';\n\nexport interface Props {\n  onChange: (sortValue: SelectableValue) => void;\n  value?: string;\n  placeholder?: string;\n  getSortOptions?: () => Promise<SelectableValue[]>;\n  filter?: string[];\n  isClearable?: boolean;\n}\n\nconst defaultSortOptionsGetter = (): Promise<SelectableValue[]> => {\n  return new SearchSrv().getSortOptions().then(({ sortOptions }) => {\n    return sortOptions.map((opt: any) => ({ label: opt.displayName, value: opt.name }));\n  });\n};\n\nexport function SortPicker({ onChange, value, placeholder, filter, getSortOptions, isClearable }: Props) {\n  // Using sync Select and manual options fetching here since we need to find the selected option by value\n  const options = useAsync<() => Promise<SelectableValue[]>>(async () => {\n    const vals = await (getSortOptions ?? defaultSortOptionsGetter)();\n    if (filter) {\n      return vals.filter((v) => filter.includes(v.value));\n    }\n    return vals;\n  }, [getSortOptions, filter]);\n\n  if (options.loading) {\n    return null;\n  }\n\n  const isDesc = Boolean(value?.includes('desc') || value?.startsWith('-')); // bluge syntax starts with \"-\"\n  return (\n    <Select\n      key={value}\n      width={28}\n      onChange={onChange}\n      value={options.value?.find((opt) => opt.value === value) ?? null}\n      options={options.value}\n      aria-label=\"Sort\"\n      placeholder={placeholder ?? `Sort (Default ${DEFAULT_SORT.label})`}\n      prefix={<Icon name={isDesc ? 'sort-amount-down' : 'sort-amount-up'} />}\n      isClearable={isClearable}\n    />\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,SAASC,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AAEA,SAASC,SAAT,QAA0B,2BAA1B;;;AAWA,MAAMC,wBAAwB,GAAG,MAAkC;EACjE,OAAO,IAAID,SAAJ,GAAgBE,cAAhB,GAAiCC,IAAjC,CAAsC,CAAC;IAAEC;EAAF,CAAD,KAAqB;IAChE,OAAOA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,KAAe;MAAEC,KAAK,EAAED,GAAG,CAACE,WAAb;MAA0BC,KAAK,EAAEH,GAAG,CAACI;IAArC,CAAf,CAAhB,CAAP;EACD,CAFM,CAAP;AAGD,CAJD;;AAMA,OAAO,SAASC,UAAT,CAAoB;EAAEC,QAAF;EAAYH,KAAZ;EAAmBI,WAAnB;EAAgCC,MAAhC;EAAwCZ,cAAxC;EAAwDa;AAAxD,CAApB,EAAkG;EAAA;;EACvG;EACA,MAAMC,OAAO,GAAGpB,QAAQ,CAAmC,YAAY;IACrE,MAAMqB,IAAI,GAAG,MAAM,CAACf,cAAD,aAACA,cAAD,cAACA,cAAD,GAAmBD,wBAAnB,GAAnB;;IACA,IAAIa,MAAJ,EAAY;MACV,OAAOG,IAAI,CAACH,MAAL,CAAaI,CAAD,IAAOJ,MAAM,CAACK,QAAP,CAAgBD,CAAC,CAACT,KAAlB,CAAnB,CAAP;IACD;;IACD,OAAOQ,IAAP;EACD,CANuB,EAMrB,CAACf,cAAD,EAAiBY,MAAjB,CANqB,CAAxB;;EAQA,IAAIE,OAAO,CAACI,OAAZ,EAAqB;IACnB,OAAO,IAAP;EACD;;EAED,MAAMC,MAAM,GAAGC,OAAO,CAAC,CAAAb,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEU,QAAP,CAAgB,MAAhB,OAA2BV,KAA3B,aAA2BA,KAA3B,uBAA2BA,KAAK,CAAEc,UAAP,CAAkB,GAAlB,CAA3B,CAAD,CAAtB,CAduG,CAc5B;;EAC3E,oBACE,KAAC,MAAD;IAEE,KAAK,EAAE,EAFT;IAGE,QAAQ,EAAEX,QAHZ;IAIE,KAAK,2CAAEI,OAAO,CAACP,KAAV,mDAAE,eAAee,IAAf,CAAqBlB,GAAD,IAASA,GAAG,CAACG,KAAJ,KAAcA,KAA3C,CAAF,qEAAuD,IAJ9D;IAKE,OAAO,EAAEO,OAAO,CAACP,KALnB;IAME,cAAW,MANb;IAOE,WAAW,EAAEI,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAkB,iBAAgBd,YAAY,CAACQ,KAAM,GAPlE;IAQE,MAAM,eAAE,KAAC,IAAD;MAAM,IAAI,EAAEc,MAAM,GAAG,kBAAH,GAAwB;IAA1C,EARV;IASE,WAAW,EAAEN;EATf,GACON,KADP,CADF;AAaD"},"metadata":{},"sourceType":"module"}