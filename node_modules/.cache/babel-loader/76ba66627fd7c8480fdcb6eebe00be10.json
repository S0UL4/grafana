{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../../Theme';\nimport { ubFlex, ubPx2 } from '../../uberUtilityStyles';\nimport Ticks from '../Ticks';\nimport TimelineRow from '../TimelineRow';\nimport { TimelineCollapser } from './TimelineCollapser';\nimport TimelineColumnResizer from './TimelineColumnResizer';\nimport TimelineViewingLayer from './TimelineViewingLayer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    TimelineHeaderRow: css`\n      label: TimelineHeaderRow;\n      background: ${autoColor(theme, '#ececec')};\n      border-bottom: 1px solid ${autoColor(theme, '#ccc')};\n      height: 38px;\n      line-height: 38px;\n      width: 100%;\n      z-index: 4;\n      position: relative;\n    `,\n    TimelineHeaderRowTitle: css`\n      label: TimelineHeaderRowTitle;\n      flex: 1;\n      overflow: hidden;\n      margin: 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    `,\n    TimelineHeaderWrapper: css`\n      label: TimelineHeaderWrapper;\n      align-items: center;\n    `\n  };\n};\n\nexport default function TimelineHeaderRow(props) {\n  const {\n    duration,\n    nameColumnWidth,\n    numTicks,\n    onCollapseAll,\n    onCollapseOne,\n    onColummWidthChange,\n    onExpandAll,\n    onExpandOne,\n    updateViewRangeTime,\n    updateNextViewRangeTime,\n    viewRangeTime,\n    columnResizeHandleHeight\n  } = props;\n  const [viewStart, viewEnd] = viewRangeTime.current;\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(TimelineRow, {\n    className: styles.TimelineHeaderRow,\n    \"data-test-id\": \"TimelineHeaderRow\",\n    children: [/*#__PURE__*/_jsxs(TimelineRow.Cell, {\n      className: cx(ubFlex, ubPx2, styles.TimelineHeaderWrapper),\n      width: nameColumnWidth,\n      children: [/*#__PURE__*/_jsx(\"h4\", {\n        className: styles.TimelineHeaderRowTitle,\n        children: \"Service & Operation\"\n      }), /*#__PURE__*/_jsx(TimelineCollapser, {\n        onCollapseAll: onCollapseAll,\n        onExpandAll: onExpandAll,\n        onCollapseOne: onCollapseOne,\n        onExpandOne: onExpandOne\n      })]\n    }), /*#__PURE__*/_jsxs(TimelineRow.Cell, {\n      width: 1 - nameColumnWidth,\n      children: [/*#__PURE__*/_jsx(TimelineViewingLayer, {\n        boundsInvalidator: nameColumnWidth,\n        updateNextViewRangeTime: updateNextViewRangeTime,\n        updateViewRangeTime: updateViewRangeTime,\n        viewRangeTime: viewRangeTime\n      }), /*#__PURE__*/_jsx(Ticks, {\n        numTicks: numTicks,\n        startTime: viewStart * duration,\n        endTime: viewEnd * duration,\n        showLabels: true\n      })]\n    }), /*#__PURE__*/_jsx(TimelineColumnResizer, {\n      columnResizeHandleHeight: columnResizeHandleHeight,\n      position: nameColumnWidth,\n      onChange: onColummWidthChange,\n      min: 0.2,\n      max: 0.85\n    })]\n  });\n}","map":{"version":3,"names":["css","cx","React","useStyles2","autoColor","ubFlex","ubPx2","Ticks","TimelineRow","TimelineCollapser","TimelineColumnResizer","TimelineViewingLayer","getStyles","theme","TimelineHeaderRow","TimelineHeaderRowTitle","TimelineHeaderWrapper","props","duration","nameColumnWidth","numTicks","onCollapseAll","onCollapseOne","onColummWidthChange","onExpandAll","onExpandOne","updateViewRangeTime","updateNextViewRangeTime","viewRangeTime","columnResizeHandleHeight","viewStart","viewEnd","current","styles"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/TimelineHeaderRow/TimelineHeaderRow.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { ubFlex, ubPx2 } from '../../uberUtilityStyles';\nimport Ticks from '../Ticks';\nimport TimelineRow from '../TimelineRow';\nimport { TUpdateViewRangeTimeFunction, ViewRangeTime, ViewRangeTimeUpdate } from '../types';\n\nimport { TimelineCollapser } from './TimelineCollapser';\nimport TimelineColumnResizer from './TimelineColumnResizer';\nimport TimelineViewingLayer from './TimelineViewingLayer';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TimelineHeaderRow: css`\n      label: TimelineHeaderRow;\n      background: ${autoColor(theme, '#ececec')};\n      border-bottom: 1px solid ${autoColor(theme, '#ccc')};\n      height: 38px;\n      line-height: 38px;\n      width: 100%;\n      z-index: 4;\n      position: relative;\n    `,\n    TimelineHeaderRowTitle: css`\n      label: TimelineHeaderRowTitle;\n      flex: 1;\n      overflow: hidden;\n      margin: 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    `,\n    TimelineHeaderWrapper: css`\n      label: TimelineHeaderWrapper;\n      align-items: center;\n    `,\n  };\n};\n\ntype TimelineHeaderRowProps = {\n  duration: number;\n  nameColumnWidth: number;\n  numTicks: number;\n  onCollapseAll: () => void;\n  onCollapseOne: () => void;\n  onColummWidthChange: (width: number) => void;\n  onExpandAll: () => void;\n  onExpandOne: () => void;\n  updateNextViewRangeTime: (update: ViewRangeTimeUpdate) => void;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  viewRangeTime: ViewRangeTime;\n  columnResizeHandleHeight: number;\n};\n\nexport default function TimelineHeaderRow(props: TimelineHeaderRowProps) {\n  const {\n    duration,\n    nameColumnWidth,\n    numTicks,\n    onCollapseAll,\n    onCollapseOne,\n    onColummWidthChange,\n    onExpandAll,\n    onExpandOne,\n    updateViewRangeTime,\n    updateNextViewRangeTime,\n    viewRangeTime,\n    columnResizeHandleHeight,\n  } = props;\n  const [viewStart, viewEnd] = viewRangeTime.current;\n  const styles = useStyles2(getStyles);\n  return (\n    <TimelineRow className={styles.TimelineHeaderRow} data-test-id=\"TimelineHeaderRow\">\n      <TimelineRow.Cell className={cx(ubFlex, ubPx2, styles.TimelineHeaderWrapper)} width={nameColumnWidth}>\n        <h4 className={styles.TimelineHeaderRowTitle}>Service &amp; Operation</h4>\n        <TimelineCollapser\n          onCollapseAll={onCollapseAll}\n          onExpandAll={onExpandAll}\n          onCollapseOne={onCollapseOne}\n          onExpandOne={onExpandOne}\n        />\n      </TimelineRow.Cell>\n      <TimelineRow.Cell width={1 - nameColumnWidth}>\n        <TimelineViewingLayer\n          boundsInvalidator={nameColumnWidth}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRangeTime={viewRangeTime}\n        />\n        <Ticks numTicks={numTicks} startTime={viewStart * duration} endTime={viewEnd * duration} showLabels />\n      </TimelineRow.Cell>\n      <TimelineColumnResizer\n        columnResizeHandleHeight={columnResizeHandleHeight}\n        position={nameColumnWidth}\n        onChange={onColummWidthChange}\n        min={0.2}\n        max={0.85}\n      />\n    </TimelineRow>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,yBAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAGA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,iBAAiB,EAAEd,GAAI;AAC3B;AACA,oBAAoBI,SAAS,CAACS,KAAD,EAAQ,SAAR,CAAmB;AAChD,iCAAiCT,SAAS,CAACS,KAAD,EAAQ,MAAR,CAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA,KAVS;IAWLE,sBAAsB,EAAEf,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,KAlBS;IAmBLgB,qBAAqB,EAAEhB,GAAI;AAC/B;AACA;AACA;EAtBS,CAAP;AAwBD,CAzBD;;AA0CA,eAAe,SAASc,iBAAT,CAA2BG,KAA3B,EAA0D;EACvE,MAAM;IACJC,QADI;IAEJC,eAFI;IAGJC,QAHI;IAIJC,aAJI;IAKJC,aALI;IAMJC,mBANI;IAOJC,WAPI;IAQJC,WARI;IASJC,mBATI;IAUJC,uBAVI;IAWJC,aAXI;IAYJC;EAZI,IAaFZ,KAbJ;EAcA,MAAM,CAACa,SAAD,EAAYC,OAAZ,IAAuBH,aAAa,CAACI,OAA3C;EACA,MAAMC,MAAM,GAAG9B,UAAU,CAACS,SAAD,CAAzB;EACA,oBACE,MAAC,WAAD;IAAa,SAAS,EAAEqB,MAAM,CAACnB,iBAA/B;IAAkD,gBAAa,mBAA/D;IAAA,wBACE,MAAC,WAAD,CAAa,IAAb;MAAkB,SAAS,EAAEb,EAAE,CAACI,MAAD,EAASC,KAAT,EAAgB2B,MAAM,CAACjB,qBAAvB,CAA/B;MAA8E,KAAK,EAAEG,eAArF;MAAA,wBACE;QAAI,SAAS,EAAEc,MAAM,CAAClB,sBAAtB;QAAA;MAAA,EADF,eAEE,KAAC,iBAAD;QACE,aAAa,EAAEM,aADjB;QAEE,WAAW,EAAEG,WAFf;QAGE,aAAa,EAAEF,aAHjB;QAIE,WAAW,EAAEG;MAJf,EAFF;IAAA,EADF,eAUE,MAAC,WAAD,CAAa,IAAb;MAAkB,KAAK,EAAE,IAAIN,eAA7B;MAAA,wBACE,KAAC,oBAAD;QACE,iBAAiB,EAAEA,eADrB;QAEE,uBAAuB,EAAEQ,uBAF3B;QAGE,mBAAmB,EAAED,mBAHvB;QAIE,aAAa,EAAEE;MAJjB,EADF,eAOE,KAAC,KAAD;QAAO,QAAQ,EAAER,QAAjB;QAA2B,SAAS,EAAEU,SAAS,GAAGZ,QAAlD;QAA4D,OAAO,EAAEa,OAAO,GAAGb,QAA/E;QAAyF,UAAU;MAAnG,EAPF;IAAA,EAVF,eAmBE,KAAC,qBAAD;MACE,wBAAwB,EAAEW,wBAD5B;MAEE,QAAQ,EAAEV,eAFZ;MAGE,QAAQ,EAAEI,mBAHZ;MAIE,GAAG,EAAE,GAJP;MAKE,GAAG,EAAE;IALP,EAnBF;EAAA,EADF;AA6BD"},"metadata":{},"sourceType":"module"}