{"ast":null,"code":"var _h;\n\nimport React from 'react';\nimport { EditorRow, EditorField } from '@grafana/experimental';\nimport { Input } from '@grafana/ui';\nimport { ElasticSearchQueryField } from './index';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function ElasticsearchAnnotationsQueryEditor(props) {\n  var _annotation$target;\n\n  const annotation = props.annotation;\n  const onAnnotationChange = props.onAnnotationChange;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"gf-form-group\",\n      children: /*#__PURE__*/_jsx(ElasticSearchQueryField, {\n        value: (_annotation$target = annotation.target) === null || _annotation$target === void 0 ? void 0 : _annotation$target.query,\n        onChange: query => {\n          onAnnotationChange(Object.assign({}, annotation, {\n            query\n          }));\n        }\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form-group\",\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h6\", {\n        children: \"Field mappings\"\n      })), /*#__PURE__*/_jsxs(EditorRow, {\n        children: [/*#__PURE__*/_jsx(EditorField, {\n          label: \"Time\",\n          children: /*#__PURE__*/_jsx(Input, {\n            type: \"text\",\n            placeholder: \"@timestamp\",\n            value: annotation.timeField,\n            onChange: e => {\n              onAnnotationChange(Object.assign({}, annotation, {\n                timeField: e.currentTarget.value\n              }));\n            }\n          })\n        }), /*#__PURE__*/_jsx(EditorField, {\n          label: \"Time End\",\n          children: /*#__PURE__*/_jsx(Input, {\n            type: \"text\",\n            value: annotation.timeEndField,\n            onChange: e => {\n              onAnnotationChange(Object.assign({}, annotation, {\n                timeEndField: e.currentTarget.value\n              }));\n            }\n          })\n        }), /*#__PURE__*/_jsx(EditorField, {\n          label: \"Text\",\n          children: /*#__PURE__*/_jsx(Input, {\n            type: \"text\",\n            value: annotation.textField,\n            onChange: e => {\n              onAnnotationChange(Object.assign({}, annotation, {\n                textField: e.currentTarget.value\n              }));\n            }\n          })\n        }), /*#__PURE__*/_jsx(EditorField, {\n          label: \"Tags\",\n          children: /*#__PURE__*/_jsx(Input, {\n            type: \"text\",\n            placeholder: \"tags\",\n            value: annotation.tagsField,\n            onChange: e => {\n              onAnnotationChange(Object.assign({}, annotation, {\n                tagsField: e.currentTarget.value\n              }));\n            }\n          })\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","EditorRow","EditorField","Input","ElasticSearchQueryField","ElasticsearchAnnotationsQueryEditor","props","annotation","onAnnotationChange","target","query","timeField","e","currentTarget","value","timeEndField","textField","tagsField"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/AnnotationQueryEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { AnnotationQuery } from '@grafana/data';\nimport { EditorRow, EditorField } from '@grafana/experimental';\nimport { Input } from '@grafana/ui';\n\nimport { ElasticsearchQuery } from '../../types';\n\nimport { ElasticQueryEditorProps, ElasticSearchQueryField } from './index';\n\ntype Props = ElasticQueryEditorProps & {\n  annotation?: AnnotationQuery<ElasticsearchQuery>;\n  onAnnotationChange?: (annotation: AnnotationQuery<ElasticsearchQuery>) => void;\n};\n\nexport function ElasticsearchAnnotationsQueryEditor(props: Props) {\n  const annotation = props.annotation!;\n  const onAnnotationChange = props.onAnnotationChange!;\n\n  return (\n    <>\n      <div className=\"gf-form-group\">\n        <ElasticSearchQueryField\n          value={annotation.target?.query}\n          onChange={(query) => {\n            onAnnotationChange({\n              ...annotation,\n              query,\n            });\n          }}\n        />\n      </div>\n\n      <div className=\"gf-form-group\">\n        <h6>Field mappings</h6>\n        <EditorRow>\n          <EditorField label=\"Time\">\n            <Input\n              type=\"text\"\n              placeholder=\"@timestamp\"\n              value={annotation.timeField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  timeField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Time End\">\n            <Input\n              type=\"text\"\n              value={annotation.timeEndField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  timeEndField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Text\">\n            <Input\n              type=\"text\"\n              value={annotation.textField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  textField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Tags\">\n            <Input\n              type=\"text\"\n              placeholder=\"tags\"\n              value={annotation.tagsField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  tagsField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n        </EditorRow>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,uBAAvC;AACA,SAASC,KAAT,QAAsB,aAAtB;AAIA,SAAkCC,uBAAlC,QAAiE,SAAjE;;;;AAOA,OAAO,SAASC,mCAAT,CAA6CC,KAA7C,EAA2D;EAAA;;EAChE,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;EACA,MAAMC,kBAAkB,GAAGF,KAAK,CAACE,kBAAjC;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAAA,uBACE,KAAC,uBAAD;QACE,KAAK,wBAAED,UAAU,CAACE,MAAb,uDAAE,mBAAmBC,KAD5B;QAEE,QAAQ,EAAGA,KAAD,IAAW;UACnBF,kBAAkB,mBACbD,UADa;YAEhBG;UAFgB,GAAlB;QAID;MAPH;IADF,EADF,eAaE;MAAK,SAAS,EAAC,eAAf;MAAA,oCACE;QAAA;MAAA,EADF,gBAEE,MAAC,SAAD;QAAA,wBACE,KAAC,WAAD;UAAa,KAAK,EAAC,MAAnB;UAAA,uBACE,KAAC,KAAD;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,YAFd;YAGE,KAAK,EAAEH,UAAU,CAACI,SAHpB;YAIE,QAAQ,EAAGC,CAAD,IAAO;cACfJ,kBAAkB,mBACbD,UADa;gBAEhBI,SAAS,EAAEC,CAAC,CAACC,aAAF,CAAgBC;cAFX,GAAlB;YAID;UATH;QADF,EADF,eAcE,KAAC,WAAD;UAAa,KAAK,EAAC,UAAnB;UAAA,uBACE,KAAC,KAAD;YACE,IAAI,EAAC,MADP;YAEE,KAAK,EAAEP,UAAU,CAACQ,YAFpB;YAGE,QAAQ,EAAGH,CAAD,IAAO;cACfJ,kBAAkB,mBACbD,UADa;gBAEhBQ,YAAY,EAAEH,CAAC,CAACC,aAAF,CAAgBC;cAFd,GAAlB;YAID;UARH;QADF,EAdF,eA0BE,KAAC,WAAD;UAAa,KAAK,EAAC,MAAnB;UAAA,uBACE,KAAC,KAAD;YACE,IAAI,EAAC,MADP;YAEE,KAAK,EAAEP,UAAU,CAACS,SAFpB;YAGE,QAAQ,EAAGJ,CAAD,IAAO;cACfJ,kBAAkB,mBACbD,UADa;gBAEhBS,SAAS,EAAEJ,CAAC,CAACC,aAAF,CAAgBC;cAFX,GAAlB;YAID;UARH;QADF,EA1BF,eAsCE,KAAC,WAAD;UAAa,KAAK,EAAC,MAAnB;UAAA,uBACE,KAAC,KAAD;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,MAFd;YAGE,KAAK,EAAEP,UAAU,CAACU,SAHpB;YAIE,QAAQ,EAAGL,CAAD,IAAO;cACfJ,kBAAkB,mBACbD,UADa;gBAEhBU,SAAS,EAAEL,CAAC,CAACC,aAAF,CAAgBC;cAFX,GAAlB;YAID;UATH;QADF,EAtCF;MAAA,EAFF;IAAA,EAbF;EAAA,EADF;AAuED"},"metadata":{},"sourceType":"module"}