{"ast":null,"code":"const _excluded = [\"children\", \"orientation\", \"spacing\", \"justify\", \"align\", \"wrap\", \"width\", \"height\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, useTheme } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Orientation;\n\n(function (Orientation) {\n  Orientation[Orientation[\"Horizontal\"] = 0] = \"Horizontal\";\n  Orientation[Orientation[\"Vertical\"] = 1] = \"Vertical\";\n})(Orientation || (Orientation = {}));\n\nexport const Layout = _ref => {\n  let {\n    children,\n    orientation = Orientation.Horizontal,\n    spacing = 'sm',\n    justify = 'flex-start',\n    align = 'normal',\n    wrap = false,\n    width = '100%',\n    height = '100%'\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, orientation, spacing, justify, align, wrap);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    className: styles.layout,\n    style: {\n      width,\n      height\n    }\n  }, rest, {\n    children: React.Children.toArray(children).filter(Boolean).map((child, index) => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.childWrapper,\n        children: child\n      }, index);\n    })\n  }));\n};\nexport const HorizontalGroup = ({\n  children,\n  spacing,\n  justify,\n  align = 'center',\n  wrap,\n  width,\n  height\n}) => /*#__PURE__*/_jsx(Layout, {\n  spacing: spacing,\n  justify: justify,\n  orientation: Orientation.Horizontal,\n  align: align,\n  width: width,\n  height: height,\n  wrap: wrap,\n  children: children\n});\nexport const VerticalGroup = ({\n  children,\n  spacing,\n  justify,\n  align,\n  width,\n  height\n}) => /*#__PURE__*/_jsx(Layout, {\n  spacing: spacing,\n  justify: justify,\n  orientation: Orientation.Vertical,\n  align: align,\n  width: width,\n  height: height,\n  children: children\n});\nexport const Container = ({\n  children,\n  padding,\n  margin,\n  grow,\n  shrink\n}) => {\n  const theme = useTheme();\n  const styles = getContainerStyles(theme, padding, margin);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: cx(styles.wrapper, grow !== undefined && css`\n            flex-grow: ${grow};\n          `, shrink !== undefined && css`\n            flex-shrink: ${shrink};\n          `),\n    children: children\n  });\n};\nconst getStyles = stylesFactory((theme, orientation, spacing, justify, align, wrap) => {\n  const finalSpacing = spacing !== 'none' ? theme.spacing[spacing] : 0; // compensate for last row margin when wrapped, horizontal layout\n\n  const marginCompensation = orientation === Orientation.Horizontal && !wrap || orientation === Orientation.Vertical ? 0 : `-${finalSpacing}`;\n  const label = orientation === Orientation.Vertical ? 'vertical-group' : 'horizontal-group';\n  return {\n    layout: css`\n        label: ${label};\n        display: flex;\n        flex-direction: ${orientation === Orientation.Vertical ? 'column' : 'row'};\n        flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n        justify-content: ${justify};\n        align-items: ${align};\n        height: 100%;\n        max-width: 100%;\n        // compensate for last row margin when wrapped, horizontal layout\n        margin-bottom: ${marginCompensation};\n      `,\n    childWrapper: css`\n        label: layoutChildrenWrapper;\n        margin-bottom: ${orientation === Orientation.Horizontal && !wrap ? 0 : finalSpacing};\n        margin-right: ${orientation === Orientation.Horizontal ? finalSpacing : 0};\n        display: flex;\n        align-items: ${align};\n\n        &:last-child {\n          margin-bottom: ${orientation === Orientation.Vertical && 0};\n          margin-right: ${orientation === Orientation.Horizontal && 0};\n        }\n      `\n  };\n});\nconst getContainerStyles = stylesFactory((theme, padding, margin) => {\n  const paddingSize = padding && padding !== 'none' && theme.spacing[padding] || 0;\n  const marginSize = margin && margin !== 'none' && theme.spacing[margin] || 0;\n  return {\n    wrapper: css`\n      label: container;\n      margin: ${marginSize};\n      padding: ${paddingSize};\n    `\n  };\n});","map":{"version":3,"names":["css","cx","React","stylesFactory","useTheme","Orientation","Layout","children","orientation","Horizontal","spacing","justify","align","wrap","width","height","rest","theme","styles","getStyles","layout","Children","toArray","filter","Boolean","map","child","index","childWrapper","HorizontalGroup","VerticalGroup","Vertical","Container","padding","margin","grow","shrink","getContainerStyles","wrapper","undefined","finalSpacing","marginCompensation","label","paddingSize","marginSize"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Layout/Layout.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { stylesFactory, useTheme } from '../../themes';\n\nenum Orientation {\n  Horizontal,\n  Vertical,\n}\ntype Spacing = 'none' | 'xs' | 'sm' | 'md' | 'lg';\ntype Justify = 'flex-start' | 'flex-end' | 'space-between' | 'center';\ntype Align = 'normal' | 'flex-start' | 'flex-end' | 'center';\n\nexport interface LayoutProps extends Omit<HTMLProps<HTMLDivElement>, 'align' | 'children' | 'wrap'> {\n  children: React.ReactNode[] | React.ReactNode;\n  orientation?: Orientation;\n  spacing?: Spacing;\n  justify?: Justify;\n  align?: Align;\n  width?: string;\n  wrap?: boolean;\n}\n\nexport interface ContainerProps {\n  padding?: Spacing;\n  margin?: Spacing;\n  grow?: number;\n  shrink?: number;\n}\n\nexport const Layout: React.FC<LayoutProps> = ({\n  children,\n  orientation = Orientation.Horizontal,\n  spacing = 'sm',\n  justify = 'flex-start',\n  align = 'normal',\n  wrap = false,\n  width = '100%',\n  height = '100%',\n  ...rest\n}) => {\n  const theme = useTheme();\n  const styles = getStyles(theme, orientation, spacing, justify, align, wrap);\n  return (\n    <div className={styles.layout} style={{ width, height }} {...rest}>\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, index) => {\n          return (\n            <div className={styles.childWrapper} key={index}>\n              {child}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport const HorizontalGroup: React.FC<Omit<LayoutProps, 'orientation'>> = ({\n  children,\n  spacing,\n  justify,\n  align = 'center',\n  wrap,\n  width,\n  height,\n}) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Horizontal}\n    align={align}\n    width={width}\n    height={height}\n    wrap={wrap}\n  >\n    {children}\n  </Layout>\n);\nexport const VerticalGroup: React.FC<Omit<LayoutProps, 'orientation' | 'wrap'>> = ({\n  children,\n  spacing,\n  justify,\n  align,\n  width,\n  height,\n}) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Vertical}\n    align={align}\n    width={width}\n    height={height}\n  >\n    {children}\n  </Layout>\n);\n\nexport const Container: React.FC<ContainerProps> = ({ children, padding, margin, grow, shrink }) => {\n  const theme = useTheme();\n  const styles = getContainerStyles(theme, padding, margin);\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        grow !== undefined &&\n          css`\n            flex-grow: ${grow};\n          `,\n        shrink !== undefined &&\n          css`\n            flex-shrink: ${shrink};\n          `\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(\n  (theme: GrafanaTheme, orientation: Orientation, spacing: Spacing, justify: Justify, align, wrap) => {\n    const finalSpacing = spacing !== 'none' ? theme.spacing[spacing] : 0;\n    // compensate for last row margin when wrapped, horizontal layout\n    const marginCompensation =\n      (orientation === Orientation.Horizontal && !wrap) || orientation === Orientation.Vertical\n        ? 0\n        : `-${finalSpacing}`;\n\n    const label = orientation === Orientation.Vertical ? 'vertical-group' : 'horizontal-group';\n\n    return {\n      layout: css`\n        label: ${label};\n        display: flex;\n        flex-direction: ${orientation === Orientation.Vertical ? 'column' : 'row'};\n        flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n        justify-content: ${justify};\n        align-items: ${align};\n        height: 100%;\n        max-width: 100%;\n        // compensate for last row margin when wrapped, horizontal layout\n        margin-bottom: ${marginCompensation};\n      `,\n      childWrapper: css`\n        label: layoutChildrenWrapper;\n        margin-bottom: ${orientation === Orientation.Horizontal && !wrap ? 0 : finalSpacing};\n        margin-right: ${orientation === Orientation.Horizontal ? finalSpacing : 0};\n        display: flex;\n        align-items: ${align};\n\n        &:last-child {\n          margin-bottom: ${orientation === Orientation.Vertical && 0};\n          margin-right: ${orientation === Orientation.Horizontal && 0};\n        }\n      `,\n    };\n  }\n);\n\nconst getContainerStyles = stylesFactory((theme: GrafanaTheme, padding?: Spacing, margin?: Spacing) => {\n  const paddingSize = (padding && padding !== 'none' && theme.spacing[padding]) || 0;\n  const marginSize = (margin && margin !== 'none' && theme.spacing[margin]) || 0;\n  return {\n    wrapper: css`\n      label: container;\n      margin: ${marginSize};\n      padding: ${paddingSize};\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}