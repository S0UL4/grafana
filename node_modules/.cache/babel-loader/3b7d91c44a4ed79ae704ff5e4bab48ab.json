{"ast":null,"code":"var _Spinner;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useDebounce, useLocalStorage } from 'react-use';\nimport { config } from '@grafana/runtime';\nimport { Input, useStyles2, Spinner } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nimport { SEARCH_PANELS_LOCAL_STORAGE_KEY } from '../constants';\nimport { useKeyNavigationListener } from '../hooks/useSearchKeyboardSelection';\nimport { useSearchQuery } from '../hooks/useSearchQuery';\nimport { SearchView } from '../page/components/SearchView';\nimport { DashboardActions } from './DashboardActions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const ManageDashboardsNew = /*#__PURE__*/React.memo(({\n  folder\n}) => {\n  var _query$query;\n\n  const styles = useStyles2(getStyles); // since we don't use \"query\" from use search... it is not actually loaded from the URL!\n\n  const {\n    query,\n    onQueryChange\n  } = useSearchQuery({});\n  const {\n    onKeyDown,\n    keyboardEvents\n  } = useKeyNavigationListener(); // TODO: we need to refactor DashboardActions to use folder.uid instead\n\n  const folderId = folder === null || folder === void 0 ? void 0 : folder.id; // const folderUid = folder?.uid;\n\n  const canSave = folder === null || folder === void 0 ? void 0 : folder.canSave;\n  const hasEditPermissionInFolders = folder ? canSave : contextSrv.hasEditPermissionInFolders;\n  let [includePanels, setIncludePanels] = useLocalStorage(SEARCH_PANELS_LOCAL_STORAGE_KEY, true);\n\n  if (!config.featureToggles.panelTitleSearch) {\n    includePanels = false;\n  }\n\n  const {\n    isEditor\n  } = contextSrv;\n  const [inputValue, setInputValue] = useState((_query$query = query.query) !== null && _query$query !== void 0 ? _query$query : '');\n\n  const onSearchQueryChange = e => {\n    e.preventDefault();\n    setInputValue(e.currentTarget.value);\n  };\n\n  useDebounce(() => onQueryChange(inputValue), 200, [inputValue]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.actionBar, 'page-action-bar'),\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: cx(styles.inputWrapper, 'gf-form gf-form--grow m-r-2'),\n        children: /*#__PURE__*/_jsx(Input, {\n          value: inputValue,\n          onChange: onSearchQueryChange,\n          onKeyDown: onKeyDown,\n          autoFocus: true,\n          spellCheck: false,\n          placeholder: includePanels ? 'Search for dashboards and panels' : 'Search for dashboards',\n          className: styles.searchInput,\n          suffix: false ? _Spinner || (_Spinner = /*#__PURE__*/_jsx(Spinner, {})) : null\n        })\n      }), /*#__PURE__*/_jsx(DashboardActions, {\n        folderId: folderId,\n        canCreateFolders: contextSrv.hasAccess(AccessControlAction.FoldersCreate, isEditor),\n        canCreateDashboards: contextSrv.hasAccess(AccessControlAction.DashboardsCreate, hasEditPermissionInFolders || !!canSave)\n      })]\n    }), /*#__PURE__*/_jsx(SearchView, {\n      showManage: isEditor || hasEditPermissionInFolders || canSave,\n      folderDTO: folder,\n      queryText: query.query,\n      onQueryTextChange: newQueryText => {\n        setInputValue(newQueryText);\n      },\n      hidePseudoFolders: true,\n      includePanels: includePanels,\n      setIncludePanels: setIncludePanels,\n      keyboardEvents: keyboardEvents\n    })]\n  });\n});\nManageDashboardsNew.displayName = 'ManageDashboardsNew';\nexport default ManageDashboardsNew;\n\nconst getStyles = theme => ({\n  actionBar: css`\n    ${theme.breakpoints.down('sm')} {\n      flex-wrap: wrap;\n    }\n  `,\n  inputWrapper: css`\n    ${theme.breakpoints.down('sm')} {\n      margin-right: 0 !important;\n    }\n  `,\n  searchInput: css`\n    margin-bottom: 6px;\n    min-height: ${theme.spacing(4)};\n  `,\n  unsupported: css`\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    font-size: 18px;\n  `,\n  noResults: css`\n    padding: ${theme.v1.spacing.md};\n    background: ${theme.v1.colors.bg2};\n    font-style: italic;\n    margin-top: ${theme.v1.spacing.md};\n  `\n});","map":{"version":3,"names":["css","cx","React","useState","useDebounce","useLocalStorage","config","Input","useStyles2","Spinner","contextSrv","AccessControlAction","SEARCH_PANELS_LOCAL_STORAGE_KEY","useKeyNavigationListener","useSearchQuery","SearchView","DashboardActions","ManageDashboardsNew","memo","folder","styles","getStyles","query","onQueryChange","onKeyDown","keyboardEvents","folderId","id","canSave","hasEditPermissionInFolders","includePanels","setIncludePanels","featureToggles","panelTitleSearch","isEditor","inputValue","setInputValue","onSearchQueryChange","e","preventDefault","currentTarget","value","actionBar","inputWrapper","searchInput","hasAccess","FoldersCreate","DashboardsCreate","newQueryText","displayName","theme","breakpoints","down","spacing","unsupported","noResults","v1","md","colors","bg2"],"sources":["/home/soula/grafana/public/app/features/search/components/ManageDashboardsNew.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useDebounce, useLocalStorage } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Input, useStyles2, Spinner } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { FolderDTO, AccessControlAction } from 'app/types';\n\nimport { SEARCH_PANELS_LOCAL_STORAGE_KEY } from '../constants';\nimport { useKeyNavigationListener } from '../hooks/useSearchKeyboardSelection';\nimport { useSearchQuery } from '../hooks/useSearchQuery';\nimport { SearchView } from '../page/components/SearchView';\n\nimport { DashboardActions } from './DashboardActions';\n\nexport interface Props {\n  folder?: FolderDTO;\n}\n\nexport const ManageDashboardsNew = React.memo(({ folder }: Props) => {\n  const styles = useStyles2(getStyles);\n  // since we don't use \"query\" from use search... it is not actually loaded from the URL!\n  const { query, onQueryChange } = useSearchQuery({});\n  const { onKeyDown, keyboardEvents } = useKeyNavigationListener();\n\n  // TODO: we need to refactor DashboardActions to use folder.uid instead\n  const folderId = folder?.id;\n  // const folderUid = folder?.uid;\n  const canSave = folder?.canSave;\n  const hasEditPermissionInFolders = folder ? canSave : contextSrv.hasEditPermissionInFolders;\n\n  let [includePanels, setIncludePanels] = useLocalStorage<boolean>(SEARCH_PANELS_LOCAL_STORAGE_KEY, true);\n  if (!config.featureToggles.panelTitleSearch) {\n    includePanels = false;\n  }\n\n  const { isEditor } = contextSrv;\n\n  const [inputValue, setInputValue] = useState(query.query ?? '');\n  const onSearchQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setInputValue(e.currentTarget.value);\n  };\n  useDebounce(() => onQueryChange(inputValue), 200, [inputValue]);\n\n  return (\n    <>\n      <div className={cx(styles.actionBar, 'page-action-bar')}>\n        <div className={cx(styles.inputWrapper, 'gf-form gf-form--grow m-r-2')}>\n          <Input\n            value={inputValue}\n            onChange={onSearchQueryChange}\n            onKeyDown={onKeyDown}\n            autoFocus\n            spellCheck={false}\n            placeholder={includePanels ? 'Search for dashboards and panels' : 'Search for dashboards'}\n            className={styles.searchInput}\n            suffix={false ? <Spinner /> : null}\n          />\n        </div>\n        <DashboardActions\n          folderId={folderId}\n          canCreateFolders={contextSrv.hasAccess(AccessControlAction.FoldersCreate, isEditor)}\n          canCreateDashboards={contextSrv.hasAccess(\n            AccessControlAction.DashboardsCreate,\n            hasEditPermissionInFolders || !!canSave\n          )}\n        />\n      </div>\n\n      <SearchView\n        showManage={isEditor || hasEditPermissionInFolders || canSave}\n        folderDTO={folder}\n        queryText={query.query}\n        onQueryTextChange={(newQueryText) => {\n          setInputValue(newQueryText);\n        }}\n        hidePseudoFolders={true}\n        includePanels={includePanels!}\n        setIncludePanels={setIncludePanels}\n        keyboardEvents={keyboardEvents}\n      />\n    </>\n  );\n});\n\nManageDashboardsNew.displayName = 'ManageDashboardsNew';\n\nexport default ManageDashboardsNew;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionBar: css`\n    ${theme.breakpoints.down('sm')} {\n      flex-wrap: wrap;\n    }\n  `,\n  inputWrapper: css`\n    ${theme.breakpoints.down('sm')} {\n      margin-right: 0 !important;\n    }\n  `,\n  searchInput: css`\n    margin-bottom: 6px;\n    min-height: ${theme.spacing(4)};\n  `,\n  unsupported: css`\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    font-size: 18px;\n  `,\n  noResults: css`\n    padding: ${theme.v1.spacing.md};\n    background: ${theme.v1.colors.bg2};\n    font-style: italic;\n    margin-top: ${theme.v1.spacing.md};\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}