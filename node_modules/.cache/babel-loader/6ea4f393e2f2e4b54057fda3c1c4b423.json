{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport SharedPreferences from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AccessControlAction } from 'app/types';\nimport OrgProfile from './OrgProfile';\nimport { loadOrganization, updateOrganization } from './state/actions';\nimport { setOrganizationName } from './state/reducers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class OrgDetailsPage extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onUpdateOrganization\", orgName => {\n      this.props.setOrganizationName(orgName);\n      this.props.updateOrganization();\n    });\n  }\n\n  async componentDidMount() {\n    await this.props.loadOrganization();\n  }\n\n  render() {\n    const {\n      navModel,\n      organization\n    } = this.props;\n    const isLoading = Object.keys(organization).length === 0;\n    const canReadOrg = contextSrv.hasPermission(AccessControlAction.OrgsRead);\n    const canReadPreferences = contextSrv.hasPermission(AccessControlAction.OrgsPreferencesRead);\n    const canWritePreferences = contextSrv.hasPermission(AccessControlAction.OrgsPreferencesWrite);\n    return /*#__PURE__*/_jsx(Page, {\n      navModel: navModel,\n      children: /*#__PURE__*/_jsx(Page.Contents, {\n        isLoading: isLoading,\n        children: !isLoading && /*#__PURE__*/_jsxs(VerticalGroup, {\n          spacing: \"lg\",\n          children: [canReadOrg && /*#__PURE__*/_jsx(OrgProfile, {\n            onSubmit: this.onUpdateOrganization,\n            orgName: organization.name\n          }), canReadPreferences && /*#__PURE__*/_jsx(SharedPreferences, {\n            resourceUri: \"org\",\n            disabled: !canWritePreferences\n          })]\n        })\n      })\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    navModel: getNavModel(state.navIndex, 'org-settings'),\n    organization: state.organization.organization\n  };\n}\n\nconst mapDispatchToProps = {\n  loadOrganization,\n  setOrganizationName,\n  updateOrganization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgDetailsPage);","map":{"version":3,"names":["React","PureComponent","connect","VerticalGroup","Page","SharedPreferences","contextSrv","getNavModel","AccessControlAction","OrgProfile","loadOrganization","updateOrganization","setOrganizationName","OrgDetailsPage","orgName","props","componentDidMount","render","navModel","organization","isLoading","Object","keys","length","canReadOrg","hasPermission","OrgsRead","canReadPreferences","OrgsPreferencesRead","canWritePreferences","OrgsPreferencesWrite","onUpdateOrganization","name","mapStateToProps","state","navIndex","mapDispatchToProps"],"sources":["/home/soula/grafana/public/app/features/org/OrgDetailsPage.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { NavModel } from '@grafana/data';\nimport { VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport SharedPreferences from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AccessControlAction, Organization, StoreState } from 'app/types';\n\nimport OrgProfile from './OrgProfile';\nimport { loadOrganization, updateOrganization } from './state/actions';\nimport { setOrganizationName } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  organization: Organization;\n  loadOrganization: typeof loadOrganization;\n  setOrganizationName: typeof setOrganizationName;\n  updateOrganization: typeof updateOrganization;\n}\n\nexport class OrgDetailsPage extends PureComponent<Props> {\n  async componentDidMount() {\n    await this.props.loadOrganization();\n  }\n\n  onUpdateOrganization = (orgName: string) => {\n    this.props.setOrganizationName(orgName);\n    this.props.updateOrganization();\n  };\n\n  render() {\n    const { navModel, organization } = this.props;\n    const isLoading = Object.keys(organization).length === 0;\n    const canReadOrg = contextSrv.hasPermission(AccessControlAction.OrgsRead);\n    const canReadPreferences = contextSrv.hasPermission(AccessControlAction.OrgsPreferencesRead);\n    const canWritePreferences = contextSrv.hasPermission(AccessControlAction.OrgsPreferencesWrite);\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          {!isLoading && (\n            <VerticalGroup spacing=\"lg\">\n              {canReadOrg && <OrgProfile onSubmit={this.onUpdateOrganization} orgName={organization.name} />}\n              {canReadPreferences && <SharedPreferences resourceUri=\"org\" disabled={!canWritePreferences} />}\n            </VerticalGroup>\n          )}\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'org-settings'),\n    organization: state.organization.organization,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadOrganization,\n  setOrganizationName,\n  updateOrganization,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgDetailsPage);\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,iBAAP,MAA8B,yDAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,mBAAT,QAA8D,WAA9D;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,iBAArD;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAUA,OAAO,MAAMC,cAAN,SAA6BZ,aAA7B,CAAkD;EAAA;IAAA;;IAAA,8CAK/Ba,OAAD,IAAqB;MAC1C,KAAKC,KAAL,CAAWH,mBAAX,CAA+BE,OAA/B;MACA,KAAKC,KAAL,CAAWJ,kBAAX;IACD,CARsD;EAAA;;EAChC,MAAjBK,iBAAiB,GAAG;IACxB,MAAM,KAAKD,KAAL,CAAWL,gBAAX,EAAN;EACD;;EAODO,MAAM,GAAG;IACP,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA6B,KAAKJ,KAAxC;IACA,MAAMK,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,KAAqC,CAAvD;IACA,MAAMC,UAAU,GAAGlB,UAAU,CAACmB,aAAX,CAAyBjB,mBAAmB,CAACkB,QAA7C,CAAnB;IACA,MAAMC,kBAAkB,GAAGrB,UAAU,CAACmB,aAAX,CAAyBjB,mBAAmB,CAACoB,mBAA7C,CAA3B;IACA,MAAMC,mBAAmB,GAAGvB,UAAU,CAACmB,aAAX,CAAyBjB,mBAAmB,CAACsB,oBAA7C,CAA5B;IAEA,oBACE,KAAC,IAAD;MAAM,QAAQ,EAAEZ,QAAhB;MAAA,uBACE,KAAC,IAAD,CAAM,QAAN;QAAe,SAAS,EAAEE,SAA1B;QAAA,UACG,CAACA,SAAD,iBACC,MAAC,aAAD;UAAe,OAAO,EAAC,IAAvB;UAAA,WACGI,UAAU,iBAAI,KAAC,UAAD;YAAY,QAAQ,EAAE,KAAKO,oBAA3B;YAAiD,OAAO,EAAEZ,YAAY,CAACa;UAAvE,EADjB,EAEGL,kBAAkB,iBAAI,KAAC,iBAAD;YAAmB,WAAW,EAAC,KAA/B;YAAqC,QAAQ,EAAE,CAACE;UAAhD,EAFzB;QAAA;MAFJ;IADF,EADF;EAYD;;AA7BsD;;AAgCzD,SAASI,eAAT,CAAyBC,KAAzB,EAA4C;EAC1C,OAAO;IACLhB,QAAQ,EAAEX,WAAW,CAAC2B,KAAK,CAACC,QAAP,EAAiB,cAAjB,CADhB;IAELhB,YAAY,EAAEe,KAAK,CAACf,YAAN,CAAmBA;EAF5B,CAAP;AAID;;AAED,MAAMiB,kBAAkB,GAAG;EACzB1B,gBADyB;EAEzBE,mBAFyB;EAGzBD;AAHyB,CAA3B;AAMA,eAAeT,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,cAA7C,CAAf"},"metadata":{},"sourceType":"module"}