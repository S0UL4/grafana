{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { forwardRef, memo } from 'react';\nimport { useTheme2 } from '../../themes';\nimport { Tag } from './Tag';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TagList = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(({\n  displayMax,\n  tags,\n  icon,\n  onClick,\n  className,\n  getAriaLabel\n}, ref) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, Boolean(displayMax && displayMax > 0));\n  const numTags = tags.length;\n  const tagsToDisplay = displayMax ? tags.slice(0, displayMax) : tags;\n  return /*#__PURE__*/_jsxs(\"ul\", {\n    className: cx(styles.wrapper, className),\n    \"aria-label\": \"Tags\",\n    ref: ref,\n    children: [tagsToDisplay.map((tag, i) => /*#__PURE__*/_jsx(\"li\", {\n      className: styles.li,\n      children: /*#__PURE__*/_jsx(Tag, {\n        name: tag,\n        icon: icon,\n        onClick: onClick,\n        \"aria-label\": getAriaLabel === null || getAriaLabel === void 0 ? void 0 : getAriaLabel(tag, i),\n        \"data-tag-id\": i\n      })\n    }, tag)), displayMax && displayMax > 0 && numTags - 1 > 0 && /*#__PURE__*/_jsxs(\"span\", {\n      className: styles.moreTagsLabel,\n      children: [\"+ \", numTags - 1]\n    })]\n  });\n}));\nTagList.displayName = 'TagList';\n\nconst getStyles = (theme, isTruncated) => {\n  return {\n    wrapper: css`\n      position: relative;\n      align-items: ${isTruncated ? 'center' : 'unset'};\n      display: flex;\n      flex: 1 1 auto;\n      flex-wrap: wrap;\n      flex-shrink: ${isTruncated ? 0 : 1};\n      justify-content: flex-end;\n      gap: 6px;\n    `,\n    moreTagsLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    li: css({\n      listStyle: 'none'\n    })\n  };\n};","map":{"version":3,"names":["css","cx","React","forwardRef","memo","useTheme2","Tag","TagList","displayMax","tags","icon","onClick","className","getAriaLabel","ref","theme","styles","getStyles","Boolean","numTags","length","tagsToDisplay","slice","wrapper","map","tag","i","li","moreTagsLabel","displayName","isTruncated","colors","text","secondary","typography","size","sm","listStyle"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Tags/TagList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { forwardRef, memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\n\nimport { OnTagClick, Tag } from './Tag';\n\nexport interface Props {\n  displayMax?: number;\n  tags: string[];\n  onClick?: OnTagClick;\n  /** Custom styles for the wrapper component */\n  className?: string;\n  /** aria-label for the `i`-th Tag component */\n  getAriaLabel?: (name: string, i: number) => string;\n  /** Icon to show next to tag label */\n  icon?: IconName;\n}\n\nexport const TagList = memo(\n  forwardRef<HTMLUListElement, Props>(({ displayMax, tags, icon, onClick, className, getAriaLabel }, ref) => {\n    const theme = useTheme2();\n    const styles = getStyles(theme, Boolean(displayMax && displayMax > 0));\n    const numTags = tags.length;\n    const tagsToDisplay = displayMax ? tags.slice(0, displayMax) : tags;\n    return (\n      <ul className={cx(styles.wrapper, className)} aria-label=\"Tags\" ref={ref}>\n        {tagsToDisplay.map((tag, i) => (\n          <li className={styles.li} key={tag}>\n            <Tag name={tag} icon={icon} onClick={onClick} aria-label={getAriaLabel?.(tag, i)} data-tag-id={i} />\n          </li>\n        ))}\n        {displayMax && displayMax > 0 && numTags - 1 > 0 && (\n          <span className={styles.moreTagsLabel}>+ {numTags - 1}</span>\n        )}\n      </ul>\n    );\n  })\n);\n\nTagList.displayName = 'TagList';\n\nconst getStyles = (theme: GrafanaTheme2, isTruncated: boolean) => {\n  return {\n    wrapper: css`\n      position: relative;\n      align-items: ${isTruncated ? 'center' : 'unset'};\n      display: flex;\n      flex: 1 1 auto;\n      flex-wrap: wrap;\n      flex-shrink: ${isTruncated ? 0 : 1};\n      justify-content: flex-end;\n      gap: 6px;\n    `,\n    moreTagsLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    li: css({\n      listStyle: 'none',\n    }),\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AAIA,SAASC,SAAT,QAA0B,cAA1B;AAGA,SAAqBC,GAArB,QAAgC,OAAhC;;;AAcA,OAAO,MAAMC,OAAO,gBAAGH,IAAI,eACzBD,UAAU,CAA0B,CAAC;EAAEK,UAAF;EAAcC,IAAd;EAAoBC,IAApB;EAA0BC,OAA1B;EAAmCC,SAAnC;EAA8CC;AAA9C,CAAD,EAA+DC,GAA/D,KAAuE;EACzG,MAAMC,KAAK,GAAGV,SAAS,EAAvB;EACA,MAAMW,MAAM,GAAGC,SAAS,CAACF,KAAD,EAAQG,OAAO,CAACV,UAAU,IAAIA,UAAU,GAAG,CAA5B,CAAf,CAAxB;EACA,MAAMW,OAAO,GAAGV,IAAI,CAACW,MAArB;EACA,MAAMC,aAAa,GAAGb,UAAU,GAAGC,IAAI,CAACa,KAAL,CAAW,CAAX,EAAcd,UAAd,CAAH,GAA+BC,IAA/D;EACA,oBACE;IAAI,SAAS,EAAER,EAAE,CAACe,MAAM,CAACO,OAAR,EAAiBX,SAAjB,CAAjB;IAA8C,cAAW,MAAzD;IAAgE,GAAG,EAAEE,GAArE;IAAA,WACGO,aAAa,CAACG,GAAd,CAAkB,CAACC,GAAD,EAAMC,CAAN,kBACjB;MAAI,SAAS,EAAEV,MAAM,CAACW,EAAtB;MAAA,uBACE,KAAC,GAAD;QAAK,IAAI,EAAEF,GAAX;QAAgB,IAAI,EAAEf,IAAtB;QAA4B,OAAO,EAAEC,OAArC;QAA8C,cAAYE,YAAZ,aAAYA,YAAZ,uBAAYA,YAAY,CAAGY,GAAH,EAAQC,CAAR,CAAtE;QAAkF,eAAaA;MAA/F;IADF,GAA+BD,GAA/B,CADD,CADH,EAMGjB,UAAU,IAAIA,UAAU,GAAG,CAA3B,IAAgCW,OAAO,GAAG,CAAV,GAAc,CAA9C,iBACC;MAAM,SAAS,EAAEH,MAAM,CAACY,aAAxB;MAAA,iBAA0CT,OAAO,GAAG,CAApD;IAAA,EAPJ;EAAA,EADF;AAYD,CAjBS,CADe,CAApB;AAqBPZ,OAAO,CAACsB,WAAR,GAAsB,SAAtB;;AAEA,MAAMZ,SAAS,GAAG,CAACF,KAAD,EAAuBe,WAAvB,KAAgD;EAChE,OAAO;IACLP,OAAO,EAAEvB,GAAI;AACjB;AACA,qBAAqB8B,WAAW,GAAG,QAAH,GAAc,OAAQ;AACtD;AACA;AACA;AACA,qBAAqBA,WAAW,GAAG,CAAH,GAAO,CAAE;AACzC;AACA;AACA,KAVS;IAWLF,aAAa,EAAE5B,GAAI;AACvB,eAAee,KAAK,CAACgB,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AAC3C,mBAAmBlB,KAAK,CAACmB,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,KAdS;IAeLT,EAAE,EAAE3B,GAAG,CAAC;MACNqC,SAAS,EAAE;IADL,CAAD;EAfF,CAAP;AAmBD,CApBD"},"metadata":{},"sourceType":"module"}