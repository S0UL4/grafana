{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport { Select } from '@grafana/ui';\nimport TimegrainConverter from '../../time_grain_converter';\nimport { Field } from '../Field';\nimport { setTimeGrain } from './setQueryValue';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TimeGrainField = ({\n  query,\n  timeGrainOptions,\n  variableOptionGroup,\n  onQueryChange\n}) => {\n  var _query$azureMonitor;\n\n  const handleChange = useCallback(change => {\n    if (!change.value) {\n      return;\n    }\n\n    const newQuery = setTimeGrain(query, change.value);\n    onQueryChange(newQuery);\n  }, [onQueryChange, query]);\n  const timeGrains = useMemo(() => {\n    const autoInterval = TimegrainConverter.findClosestTimeGrain('1m', timeGrainOptions.map(o => TimegrainConverter.createKbnUnitFromISO8601Duration(o.value)) || ['1m', '5m', '15m', '30m', '1h', '6h', '12h', '1d']);\n    const baseTimeGrains = timeGrainOptions.map(v => v.value === 'auto' ? Object.assign({}, v, {\n      description: autoInterval\n    }) : v);\n    return [...baseTimeGrains, variableOptionGroup];\n  }, [timeGrainOptions, variableOptionGroup]);\n  return /*#__PURE__*/_jsx(Field, {\n    label: \"Time grain\",\n    children: /*#__PURE__*/_jsx(Select, {\n      inputId: \"azure-monitor-metrics-time-grain-field\",\n      value: (_query$azureMonitor = query.azureMonitor) === null || _query$azureMonitor === void 0 ? void 0 : _query$azureMonitor.timeGrain,\n      onChange: handleChange,\n      options: timeGrains,\n      width: 38\n    })\n  });\n};\n\nexport default TimeGrainField;","map":{"version":3,"names":["React","useCallback","useMemo","Select","TimegrainConverter","Field","setTimeGrain","TimeGrainField","query","timeGrainOptions","variableOptionGroup","onQueryChange","handleChange","change","value","newQuery","timeGrains","autoInterval","findClosestTimeGrain","map","o","createKbnUnitFromISO8601Duration","baseTimeGrains","v","description","azureMonitor","timeGrain"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/components/MetricsQueryEditor/TimeGrainField.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport TimegrainConverter from '../../time_grain_converter';\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { Field } from '../Field';\n\nimport { setTimeGrain } from './setQueryValue';\n\ninterface TimeGrainFieldProps extends AzureQueryEditorFieldProps {\n  timeGrainOptions: AzureMonitorOption[];\n}\n\nconst TimeGrainField: React.FC<TimeGrainFieldProps> = ({\n  query,\n  timeGrainOptions,\n  variableOptionGroup,\n  onQueryChange,\n}) => {\n  const handleChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setTimeGrain(query, change.value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const timeGrains = useMemo(() => {\n    const autoInterval = TimegrainConverter.findClosestTimeGrain(\n      '1m',\n      timeGrainOptions.map((o) => TimegrainConverter.createKbnUnitFromISO8601Duration(o.value)) || [\n        '1m',\n        '5m',\n        '15m',\n        '30m',\n        '1h',\n        '6h',\n        '12h',\n        '1d',\n      ]\n    );\n\n    const baseTimeGrains = timeGrainOptions.map((v) => (v.value === 'auto' ? { ...v, description: autoInterval } : v));\n\n    return [...baseTimeGrains, variableOptionGroup];\n  }, [timeGrainOptions, variableOptionGroup]);\n\n  return (\n    <Field label=\"Time grain\">\n      <Select\n        inputId=\"azure-monitor-metrics-time-grain-field\"\n        value={query.azureMonitor?.timeGrain}\n        onChange={handleChange}\n        options={timeGrains}\n        width={38}\n      />\n    </Field>\n  );\n};\n\nexport default TimeGrainField;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AAGA,SAASC,MAAT,QAAuB,aAAvB;AAEA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,SAASC,KAAT,QAAsB,UAAtB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;;AAMA,MAAMC,cAA6C,GAAG,CAAC;EACrDC,KADqD;EAErDC,gBAFqD;EAGrDC,mBAHqD;EAIrDC;AAJqD,CAAD,KAKhD;EAAA;;EACJ,MAAMC,YAAY,GAAGX,WAAW,CAC7BY,MAAD,IAAqC;IACnC,IAAI,CAACA,MAAM,CAACC,KAAZ,EAAmB;MACjB;IACD;;IAED,MAAMC,QAAQ,GAAGT,YAAY,CAACE,KAAD,EAAQK,MAAM,CAACC,KAAf,CAA7B;IACAH,aAAa,CAACI,QAAD,CAAb;EACD,CAR6B,EAS9B,CAACJ,aAAD,EAAgBH,KAAhB,CAT8B,CAAhC;EAYA,MAAMQ,UAAU,GAAGd,OAAO,CAAC,MAAM;IAC/B,MAAMe,YAAY,GAAGb,kBAAkB,CAACc,oBAAnB,CACnB,IADmB,EAEnBT,gBAAgB,CAACU,GAAjB,CAAsBC,CAAD,IAAOhB,kBAAkB,CAACiB,gCAAnB,CAAoDD,CAAC,CAACN,KAAtD,CAA5B,KAA6F,CAC3F,IAD2F,EAE3F,IAF2F,EAG3F,KAH2F,EAI3F,KAJ2F,EAK3F,IAL2F,EAM3F,IAN2F,EAO3F,KAP2F,EAQ3F,IAR2F,CAF1E,CAArB;IAcA,MAAMQ,cAAc,GAAGb,gBAAgB,CAACU,GAAjB,CAAsBI,CAAD,IAAQA,CAAC,CAACT,KAAF,KAAY,MAAZ,qBAA0BS,CAA1B;MAA6BC,WAAW,EAAEP;IAA1C,KAA2DM,CAAxF,CAAvB;IAEA,OAAO,CAAC,GAAGD,cAAJ,EAAoBZ,mBAApB,CAAP;EACD,CAlByB,EAkBvB,CAACD,gBAAD,EAAmBC,mBAAnB,CAlBuB,CAA1B;EAoBA,oBACE,KAAC,KAAD;IAAO,KAAK,EAAC,YAAb;IAAA,uBACE,KAAC,MAAD;MACE,OAAO,EAAC,wCADV;MAEE,KAAK,yBAAEF,KAAK,CAACiB,YAAR,wDAAE,oBAAoBC,SAF7B;MAGE,QAAQ,EAAEd,YAHZ;MAIE,OAAO,EAAEI,UAJX;MAKE,KAAK,EAAE;IALT;EADF,EADF;AAWD,CAjDD;;AAmDA,eAAeT,cAAf"},"metadata":{},"sourceType":"module"}