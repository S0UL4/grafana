{"ast":null,"code":"var _Icon;\n\nimport { css } from '@emotion/css';\nimport debounce from 'debounce-promise';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { AsyncMultiSelect, Icon, Button, useStyles2 } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { PermissionLevelString } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function FolderFilter({\n  onChange: propsOnChange,\n  maxMenuHeight\n}) {\n  const styles = useStyles2(getStyles);\n  const [loading, setLoading] = useState(false);\n  const getOptions = useCallback(searchString => getFoldersAsOptions(searchString, setLoading), []);\n  const debouncedLoadOptions = useMemo(() => debounce(getOptions, 300), [getOptions]);\n  const [value, setValue] = useState([]);\n  const onChange = useCallback(folders => {\n    const changedFolders = [];\n\n    for (const folder of folders) {\n      if (folder.value) {\n        changedFolders.push(folder.value);\n      }\n    }\n\n    propsOnChange(changedFolders);\n    setValue(folders);\n  }, [propsOnChange]);\n  const selectOptions = {\n    defaultOptions: true,\n    isMulti: true,\n    noOptionsMessage: 'No folders found',\n    placeholder: 'Filter by folder',\n    maxMenuHeight,\n    value,\n    onChange\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [value.length > 0 && /*#__PURE__*/_jsx(Button, {\n      size: \"xs\",\n      icon: \"trash-alt\",\n      fill: \"text\",\n      className: styles.clear,\n      onClick: () => onChange([]),\n      \"aria-label\": \"Clear folders\",\n      children: \"Clear folders\"\n    }), /*#__PURE__*/_jsx(AsyncMultiSelect, Object.assign({}, selectOptions, {\n      isLoading: loading,\n      loadOptions: debouncedLoadOptions,\n      prefix: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"filter\"\n      })),\n      \"aria-label\": \"Folder filter\"\n    }))]\n  });\n}\n\nasync function getFoldersAsOptions(searchString, setLoading) {\n  setLoading(true);\n  const params = {\n    query: searchString,\n    type: 'dash-folder',\n    permission: PermissionLevelString.View\n  };\n  const searchHits = await getBackendSrv().search(params);\n  const options = searchHits.map(d => ({\n    label: d.title,\n    value: {\n      id: d.id,\n      title: d.title\n    }\n  }));\n\n  if (!searchString || 'general'.includes(searchString.toLowerCase())) {\n    options.unshift({\n      label: 'General',\n      value: {\n        id: 0,\n        title: 'General'\n      }\n    });\n  }\n\n  setLoading(false);\n  return options;\n}\n\nfunction getStyles(theme) {\n  return {\n    container: css`\n      label: container;\n      position: relative;\n      min-width: 180px;\n      flex-grow: 1;\n    `,\n    clear: css`\n      label: clear;\n      font-size: ${theme.spacing(1.5)};\n      position: absolute;\n      top: -${theme.spacing(4.5)};\n      right: 0;\n    `\n  };\n}","map":{"version":3,"names":["css","debounce","React","useCallback","useMemo","useState","AsyncMultiSelect","Icon","Button","useStyles2","getBackendSrv","PermissionLevelString","FolderFilter","onChange","propsOnChange","maxMenuHeight","styles","getStyles","loading","setLoading","getOptions","searchString","getFoldersAsOptions","debouncedLoadOptions","value","setValue","folders","changedFolders","folder","push","selectOptions","defaultOptions","isMulti","noOptionsMessage","placeholder","container","length","clear","params","query","type","permission","View","searchHits","search","options","map","d","label","title","id","includes","toLowerCase","unshift","theme","spacing"],"sources":["/home/soula/grafana/public/app/core/components/FolderFilter/FolderFilter.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport debounce from 'debounce-promise';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { AsyncMultiSelect, Icon, Button, useStyles2 } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { FolderInfo, PermissionLevelString } from 'app/types';\n\nexport interface FolderFilterProps {\n  onChange: (folder: FolderInfo[]) => void;\n  maxMenuHeight?: number;\n}\n\nexport function FolderFilter({ onChange: propsOnChange, maxMenuHeight }: FolderFilterProps): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const [loading, setLoading] = useState(false);\n  const getOptions = useCallback((searchString: string) => getFoldersAsOptions(searchString, setLoading), []);\n  const debouncedLoadOptions = useMemo(() => debounce(getOptions, 300), [getOptions]);\n  const [value, setValue] = useState<Array<SelectableValue<FolderInfo>>>([]);\n  const onChange = useCallback(\n    (folders: Array<SelectableValue<FolderInfo>>) => {\n      const changedFolders = [];\n      for (const folder of folders) {\n        if (folder.value) {\n          changedFolders.push(folder.value);\n        }\n      }\n      propsOnChange(changedFolders);\n      setValue(folders);\n    },\n    [propsOnChange]\n  );\n  const selectOptions = {\n    defaultOptions: true,\n    isMulti: true,\n    noOptionsMessage: 'No folders found',\n    placeholder: 'Filter by folder',\n    maxMenuHeight,\n    value,\n    onChange,\n  };\n\n  return (\n    <div className={styles.container}>\n      {value.length > 0 && (\n        <Button\n          size=\"xs\"\n          icon=\"trash-alt\"\n          fill=\"text\"\n          className={styles.clear}\n          onClick={() => onChange([])}\n          aria-label=\"Clear folders\"\n        >\n          Clear folders\n        </Button>\n      )}\n      <AsyncMultiSelect\n        {...selectOptions}\n        isLoading={loading}\n        loadOptions={debouncedLoadOptions}\n        prefix={<Icon name=\"filter\" />}\n        aria-label=\"Folder filter\"\n      />\n    </div>\n  );\n}\n\nasync function getFoldersAsOptions(searchString: string, setLoading: (loading: boolean) => void) {\n  setLoading(true);\n\n  const params = {\n    query: searchString,\n    type: 'dash-folder',\n    permission: PermissionLevelString.View,\n  };\n\n  const searchHits = await getBackendSrv().search(params);\n  const options = searchHits.map((d) => ({ label: d.title, value: { id: d.id, title: d.title } }));\n  if (!searchString || 'general'.includes(searchString.toLowerCase())) {\n    options.unshift({ label: 'General', value: { id: 0, title: 'General' } });\n  }\n\n  setLoading(false);\n\n  return options;\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      label: container;\n      position: relative;\n      min-width: 180px;\n      flex-grow: 1;\n    `,\n    clear: css`\n      label: clear;\n      font-size: ${theme.spacing(1.5)};\n      position: absolute;\n      top: -${theme.spacing(4.5)};\n      right: 0;\n    `,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}