{"ast":null,"code":"// eslint-disable-next-line lodash/import-scope\nimport _ from 'lodash';\nimport { getTemplateSrv, DataSourceWithBackend } from '@grafana/runtime';\nimport { AzureQueryType } from '../types';\nimport { interpolateVariable } from '../utils/common';\nexport default class AzureResourceGraphDatasource extends DataSourceWithBackend {\n  filterQuery(item) {\n    var _item$azureResourceGr;\n\n    return !!((_item$azureResourceGr = item.azureResourceGraph) !== null && _item$azureResourceGr !== void 0 && _item$azureResourceGr.query);\n  }\n\n  applyTemplateVariables(target, scopedVars) {\n    const item = target.azureResourceGraph;\n\n    if (!item) {\n      return target;\n    }\n\n    const templateSrv = getTemplateSrv();\n    const variableNames = templateSrv.getVariables().map(v => `$${v.name}`);\n\n    const subscriptionVar = _.find(target.subscriptions, sub => _.includes(variableNames, sub));\n\n    const interpolatedSubscriptions = templateSrv.replace(subscriptionVar, scopedVars, v => v).split(',').filter(v => v.length > 0);\n    const subscriptions = [...interpolatedSubscriptions, ..._.filter(target.subscriptions, sub => !_.includes(variableNames, sub))];\n    const query = templateSrv.replace(item.query, scopedVars, interpolateVariable);\n    return Object.assign({}, target, {\n      queryType: AzureQueryType.AzureResourceGraph,\n      subscriptions,\n      azureResourceGraph: {\n        resultFormat: 'table',\n        query\n      }\n    });\n  }\n\n}","map":{"version":3,"names":["_","getTemplateSrv","DataSourceWithBackend","AzureQueryType","interpolateVariable","AzureResourceGraphDatasource","filterQuery","item","azureResourceGraph","query","applyTemplateVariables","target","scopedVars","templateSrv","variableNames","getVariables","map","v","name","subscriptionVar","find","subscriptions","sub","includes","interpolatedSubscriptions","replace","split","filter","length","queryType","AzureResourceGraph","resultFormat"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/azure_resource_graph/azure_resource_graph_datasource.ts"],"sourcesContent":["// eslint-disable-next-line lodash/import-scope\nimport _ from 'lodash';\n\nimport { ScopedVars } from '@grafana/data';\nimport { getTemplateSrv, DataSourceWithBackend } from '@grafana/runtime';\n\nimport { AzureMonitorQuery, AzureDataSourceJsonData, AzureQueryType } from '../types';\nimport { interpolateVariable } from '../utils/common';\n\nexport default class AzureResourceGraphDatasource extends DataSourceWithBackend<\n  AzureMonitorQuery,\n  AzureDataSourceJsonData\n> {\n  filterQuery(item: AzureMonitorQuery): boolean {\n    return !!item.azureResourceGraph?.query;\n  }\n\n  applyTemplateVariables(target: AzureMonitorQuery, scopedVars: ScopedVars): AzureMonitorQuery {\n    const item = target.azureResourceGraph;\n    if (!item) {\n      return target;\n    }\n\n    const templateSrv = getTemplateSrv();\n    const variableNames = templateSrv.getVariables().map((v) => `$${v.name}`);\n    const subscriptionVar = _.find(target.subscriptions, (sub) => _.includes(variableNames, sub));\n    const interpolatedSubscriptions = templateSrv\n      .replace(subscriptionVar, scopedVars, (v: any) => v)\n      .split(',')\n      .filter((v) => v.length > 0);\n    const subscriptions = [\n      ...interpolatedSubscriptions,\n      ..._.filter(target.subscriptions, (sub) => !_.includes(variableNames, sub)),\n    ];\n    const query = templateSrv.replace(item.query, scopedVars, interpolateVariable);\n\n    return {\n      ...target,\n      queryType: AzureQueryType.AzureResourceGraph,\n      subscriptions,\n      azureResourceGraph: {\n        resultFormat: 'table',\n        query,\n      },\n    };\n  }\n}\n"],"mappings":"AAAA;AACA,OAAOA,CAAP,MAAc,QAAd;AAGA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,kBAAtD;AAEA,SAAqDC,cAArD,QAA2E,UAA3E;AACA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,eAAe,MAAMC,4BAAN,SAA2CH,qBAA3C,CAGb;EACAI,WAAW,CAACC,IAAD,EAAmC;IAAA;;IAC5C,OAAO,CAAC,2BAACA,IAAI,CAACC,kBAAN,kDAAC,sBAAyBC,KAA1B,CAAR;EACD;;EAEDC,sBAAsB,CAACC,MAAD,EAA4BC,UAA5B,EAAuE;IAC3F,MAAML,IAAI,GAAGI,MAAM,CAACH,kBAApB;;IACA,IAAI,CAACD,IAAL,EAAW;MACT,OAAOI,MAAP;IACD;;IAED,MAAME,WAAW,GAAGZ,cAAc,EAAlC;IACA,MAAMa,aAAa,GAAGD,WAAW,CAACE,YAAZ,GAA2BC,GAA3B,CAAgCC,CAAD,IAAQ,IAAGA,CAAC,CAACC,IAAK,EAAjD,CAAtB;;IACA,MAAMC,eAAe,GAAGnB,CAAC,CAACoB,IAAF,CAAOT,MAAM,CAACU,aAAd,EAA8BC,GAAD,IAAStB,CAAC,CAACuB,QAAF,CAAWT,aAAX,EAA0BQ,GAA1B,CAAtC,CAAxB;;IACA,MAAME,yBAAyB,GAAGX,WAAW,CAC1CY,OAD+B,CACvBN,eADuB,EACNP,UADM,EACOK,CAAD,IAAYA,CADlB,EAE/BS,KAF+B,CAEzB,GAFyB,EAG/BC,MAH+B,CAGvBV,CAAD,IAAOA,CAAC,CAACW,MAAF,GAAW,CAHM,CAAlC;IAIA,MAAMP,aAAa,GAAG,CACpB,GAAGG,yBADiB,EAEpB,GAAGxB,CAAC,CAAC2B,MAAF,CAAShB,MAAM,CAACU,aAAhB,EAAgCC,GAAD,IAAS,CAACtB,CAAC,CAACuB,QAAF,CAAWT,aAAX,EAA0BQ,GAA1B,CAAzC,CAFiB,CAAtB;IAIA,MAAMb,KAAK,GAAGI,WAAW,CAACY,OAAZ,CAAoBlB,IAAI,CAACE,KAAzB,EAAgCG,UAAhC,EAA4CR,mBAA5C,CAAd;IAEA,yBACKO,MADL;MAEEkB,SAAS,EAAE1B,cAAc,CAAC2B,kBAF5B;MAGET,aAHF;MAIEb,kBAAkB,EAAE;QAClBuB,YAAY,EAAE,OADI;QAElBtB;MAFkB;IAJtB;EASD;;AAjCD"},"metadata":{},"sourceType":"module"}