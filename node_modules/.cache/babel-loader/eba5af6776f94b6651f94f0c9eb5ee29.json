{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react'; // @ts-ignore\n\nimport Highlighter from 'react-highlight-words';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Field, Label } from '@grafana/ui';\nimport { OptionsPaneItemOverrides } from './OptionsPaneItemOverrides';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * This is not a real React component but an intermediary to enable deep option search without traversing a React node tree.\n */\nexport class OptionsPaneItemDescriptor {\n  constructor(props) {\n    _defineProperty(this, \"parent\", void 0);\n\n    this.props = props;\n  }\n\n  getLabel(searchQuery) {\n    const {\n      title,\n      description,\n      overrides\n    } = this.props;\n\n    if (!searchQuery) {\n      // Do not render label for categories with only one child\n      if (this.parent.props.title === title && !(overrides !== null && overrides !== void 0 && overrides.length)) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxs(Label, {\n        description: description,\n        children: [title, overrides && overrides.length > 0 && /*#__PURE__*/_jsx(OptionsPaneItemOverrides, {\n          overrides: overrides\n        })]\n      });\n    }\n\n    const categories = [];\n\n    if (this.parent.parent) {\n      categories.push(this.highlightWord(this.parent.parent.props.title, searchQuery));\n    }\n\n    if (this.parent.props.title !== title) {\n      categories.push(this.highlightWord(this.parent.props.title, searchQuery));\n    }\n\n    return /*#__PURE__*/_jsxs(Label, {\n      description: description && this.highlightWord(description, searchQuery),\n      category: categories,\n      children: [this.highlightWord(title, searchQuery), overrides && overrides.length > 0 && /*#__PURE__*/_jsx(OptionsPaneItemOverrides, {\n        overrides: overrides\n      })]\n    });\n  }\n\n  highlightWord(word, query) {\n    return /*#__PURE__*/_jsx(Highlighter, {\n      textToHighlight: word,\n      searchWords: [query],\n      highlightClassName: 'search-fragment-highlight'\n    });\n  }\n\n  renderOverrides() {\n    const {\n      overrides\n    } = this.props;\n\n    if (!overrides || overrides.length === 0) {\n      return;\n    }\n  }\n\n  render(searchQuery) {\n    const {\n      title,\n      description,\n      render,\n      showIf,\n      skipField\n    } = this.props;\n    const key = `${this.parent.props.id} ${title}`;\n\n    if (showIf && !showIf()) {\n      return null;\n    }\n\n    if (skipField) {\n      return render();\n    }\n\n    return /*#__PURE__*/_jsx(Field, {\n      label: this.getLabel(searchQuery),\n      description: description,\n      \"aria-label\": selectors.components.PanelEditor.OptionsPane.fieldLabel(key),\n      children: render()\n    }, key);\n  }\n\n}","map":{"version":3,"names":["React","Highlighter","selectors","Field","Label","OptionsPaneItemOverrides","OptionsPaneItemDescriptor","constructor","props","getLabel","searchQuery","title","description","overrides","parent","length","categories","push","highlightWord","word","query","renderOverrides","render","showIf","skipField","key","id","components","PanelEditor","OptionsPane","fieldLabel"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/OptionsPaneItemDescriptor.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\n// @ts-ignore\nimport Highlighter from 'react-highlight-words';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Field, Label } from '@grafana/ui';\n\nimport { OptionsPaneCategoryDescriptor } from './OptionsPaneCategoryDescriptor';\nimport { OptionsPaneItemOverrides } from './OptionsPaneItemOverrides';\nimport { OptionPaneItemOverrideInfo } from './types';\n\nexport interface OptionsPaneItemProps {\n  title: string;\n  value?: any;\n  description?: string;\n  popularRank?: number;\n  render: () => React.ReactNode;\n  skipField?: boolean;\n  showIf?: () => boolean;\n  overrides?: OptionPaneItemOverrideInfo[];\n}\n\n/**\n * This is not a real React component but an intermediary to enable deep option search without traversing a React node tree.\n */\nexport class OptionsPaneItemDescriptor {\n  parent!: OptionsPaneCategoryDescriptor;\n\n  constructor(public props: OptionsPaneItemProps) {}\n\n  getLabel(searchQuery?: string): ReactNode {\n    const { title, description, overrides } = this.props;\n\n    if (!searchQuery) {\n      // Do not render label for categories with only one child\n      if (this.parent.props.title === title && !overrides?.length) {\n        return null;\n      }\n\n      return (\n        <Label description={description}>\n          {title}\n          {overrides && overrides.length > 0 && <OptionsPaneItemOverrides overrides={overrides} />}\n        </Label>\n      );\n    }\n\n    const categories: React.ReactNode[] = [];\n\n    if (this.parent.parent) {\n      categories.push(this.highlightWord(this.parent.parent.props.title, searchQuery));\n    }\n\n    if (this.parent.props.title !== title) {\n      categories.push(this.highlightWord(this.parent.props.title, searchQuery));\n    }\n\n    return (\n      <Label description={description && this.highlightWord(description, searchQuery)} category={categories}>\n        {this.highlightWord(title, searchQuery)}\n        {overrides && overrides.length > 0 && <OptionsPaneItemOverrides overrides={overrides} />}\n      </Label>\n    );\n  }\n\n  highlightWord(word: string, query: string) {\n    return (\n      <Highlighter textToHighlight={word} searchWords={[query]} highlightClassName={'search-fragment-highlight'} />\n    );\n  }\n\n  renderOverrides() {\n    const { overrides } = this.props;\n    if (!overrides || overrides.length === 0) {\n      return;\n    }\n  }\n\n  render(searchQuery?: string) {\n    const { title, description, render, showIf, skipField } = this.props;\n    const key = `${this.parent.props.id} ${title}`;\n\n    if (showIf && !showIf()) {\n      return null;\n    }\n\n    if (skipField) {\n      return render();\n    }\n\n    return (\n      <Field\n        label={this.getLabel(searchQuery)}\n        description={description}\n        key={key}\n        aria-label={selectors.components.PanelEditor.OptionsPane.fieldLabel(key)}\n      >\n        {render() as React.ReactElement}\n      </Field>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}