{"ast":null,"code":"import React from 'react';\nimport { toOption } from '@grafana/data';\nimport { AutoSizeInput, Checkbox, Select } from '@grafana/ui';\nimport { getOperationParamId } from './operationUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getOperationParamEditor(paramDef) {\n  if (paramDef.editor) {\n    return paramDef.editor;\n  }\n\n  if (paramDef.options) {\n    return SelectInputParamEditor;\n  }\n\n  switch (paramDef.type) {\n    case 'boolean':\n      return BoolInputParamEditor;\n\n    case 'number':\n    case 'string':\n    default:\n      return SimpleInputParamEditor;\n  }\n}\n\nfunction SimpleInputParamEditor(props) {\n  var _props$value;\n\n  return /*#__PURE__*/_jsx(AutoSizeInput, {\n    id: getOperationParamId(props.operationIndex, props.index),\n    defaultValue: (_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.toString(),\n    minWidth: props.paramDef.minWidth,\n    placeholder: props.paramDef.placeholder,\n    title: props.paramDef.description,\n    onCommitChange: evt => {\n      props.onChange(props.index, evt.currentTarget.value);\n\n      if (props.paramDef.runQueryOnEnter && evt.type === 'keydown') {\n        props.onRunQuery();\n      }\n    }\n  });\n}\n\nfunction BoolInputParamEditor(props) {\n  return /*#__PURE__*/_jsx(Checkbox, {\n    id: getOperationParamId(props.operationIndex, props.index),\n    value: props.value,\n    onChange: evt => props.onChange(props.index, evt.currentTarget.checked)\n  });\n}\n\nfunction SelectInputParamEditor({\n  paramDef,\n  value,\n  index,\n  operationIndex,\n  onChange\n}) {\n  var _selectOptions$, _selectOptions$find;\n\n  let selectOptions = paramDef.options;\n\n  if (!((_selectOptions$ = selectOptions[0]) !== null && _selectOptions$ !== void 0 && _selectOptions$.label)) {\n    selectOptions = paramDef.options.map(option => ({\n      label: option.toString(),\n      value: option\n    }));\n  }\n\n  let valueOption = (_selectOptions$find = selectOptions.find(x => x.value === value)) !== null && _selectOptions$find !== void 0 ? _selectOptions$find : toOption(value);\n  return /*#__PURE__*/_jsx(Select, {\n    id: getOperationParamId(operationIndex, index),\n    value: valueOption,\n    options: selectOptions,\n    placeholder: paramDef.placeholder,\n    allowCustomValue: true,\n    onChange: value => onChange(index, value.value)\n  });\n}","map":{"version":3,"names":["React","toOption","AutoSizeInput","Checkbox","Select","getOperationParamId","getOperationParamEditor","paramDef","editor","options","SelectInputParamEditor","type","BoolInputParamEditor","SimpleInputParamEditor","props","operationIndex","index","value","toString","minWidth","placeholder","description","evt","onChange","currentTarget","runQueryOnEnter","onRunQuery","checked","selectOptions","label","map","option","valueOption","find","x"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/shared/OperationParamEditor.tsx"],"sourcesContent":["import React, { ComponentType } from 'react';\n\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { AutoSizeInput, Checkbox, Select } from '@grafana/ui';\n\nimport { QueryBuilderOperationParamDef, QueryBuilderOperationParamEditorProps } from '../shared/types';\n\nimport { getOperationParamId } from './operationUtils';\n\nexport function getOperationParamEditor(\n  paramDef: QueryBuilderOperationParamDef\n): ComponentType<QueryBuilderOperationParamEditorProps> {\n  if (paramDef.editor) {\n    return paramDef.editor;\n  }\n\n  if (paramDef.options) {\n    return SelectInputParamEditor;\n  }\n\n  switch (paramDef.type) {\n    case 'boolean':\n      return BoolInputParamEditor;\n    case 'number':\n    case 'string':\n    default:\n      return SimpleInputParamEditor;\n  }\n}\n\nfunction SimpleInputParamEditor(props: QueryBuilderOperationParamEditorProps) {\n  return (\n    <AutoSizeInput\n      id={getOperationParamId(props.operationIndex, props.index)}\n      defaultValue={props.value?.toString()}\n      minWidth={props.paramDef.minWidth}\n      placeholder={props.paramDef.placeholder}\n      title={props.paramDef.description}\n      onCommitChange={(evt) => {\n        props.onChange(props.index, evt.currentTarget.value);\n        if (props.paramDef.runQueryOnEnter && evt.type === 'keydown') {\n          props.onRunQuery();\n        }\n      }}\n    />\n  );\n}\n\nfunction BoolInputParamEditor(props: QueryBuilderOperationParamEditorProps) {\n  return (\n    <Checkbox\n      id={getOperationParamId(props.operationIndex, props.index)}\n      value={props.value as boolean}\n      onChange={(evt) => props.onChange(props.index, evt.currentTarget.checked)}\n    />\n  );\n}\n\nfunction SelectInputParamEditor({\n  paramDef,\n  value,\n  index,\n  operationIndex,\n  onChange,\n}: QueryBuilderOperationParamEditorProps) {\n  let selectOptions = paramDef.options as Array<SelectableValue<any>>;\n\n  if (!selectOptions[0]?.label) {\n    selectOptions = paramDef.options!.map((option) => ({\n      label: option.toString(),\n      value: option as string,\n    }));\n  }\n\n  let valueOption = selectOptions.find((x) => x.value === value) ?? toOption(value as string);\n\n  return (\n    <Select\n      id={getOperationParamId(operationIndex, index)}\n      value={valueOption}\n      options={selectOptions}\n      placeholder={paramDef.placeholder}\n      allowCustomValue={true}\n      onChange={(value) => onChange(index, value.value!)}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}