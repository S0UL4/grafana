{"ast":null,"code":"var _EmptySearchResult;\n\nimport { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { EmptySearchResult, useStyles2 } from '@grafana/ui';\nimport { filterPluginList, getAllPanelPluginMeta } from '../../state/util';\nimport { VizTypePickerPlugin } from './VizTypePickerPlugin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function VizTypePicker({\n  searchQuery,\n  onChange,\n  current,\n  data\n}) {\n  const styles = useStyles2(getStyles);\n  const pluginsList = useMemo(() => {\n    return getAllPanelPluginMeta();\n  }, []);\n  const filteredPluginTypes = useMemo(() => {\n    return filterPluginList(pluginsList, searchQuery, current);\n  }, [current, pluginsList, searchQuery]);\n\n  if (filteredPluginTypes.length === 0) {\n    return _EmptySearchResult || (_EmptySearchResult = /*#__PURE__*/_jsx(EmptySearchResult, {\n      children: \"Could not find anything matching your query\"\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.grid,\n    children: filteredPluginTypes.map((plugin, index) => /*#__PURE__*/_jsx(VizTypePickerPlugin, {\n      disabled: false,\n      isCurrent: plugin.id === current.id,\n      plugin: plugin,\n      onClick: e => onChange({\n        pluginId: plugin.id,\n        withModKey: Boolean(e.metaKey || e.ctrlKey || e.altKey)\n      })\n    }, plugin.id))\n  });\n}\n\nconst getStyles = theme => {\n  return {\n    grid: css`\n      max-width: 100%;\n      display: grid;\n      grid-gap: ${theme.spacing(0.5)};\n    `,\n    heading: css(Object.assign({}, theme.typography.h5, {\n      margin: theme.spacing(0, 0.5, 1)\n    }))\n  };\n};","map":{"version":3,"names":["css","React","useMemo","EmptySearchResult","useStyles2","filterPluginList","getAllPanelPluginMeta","VizTypePickerPlugin","VizTypePicker","searchQuery","onChange","current","data","styles","getStyles","pluginsList","filteredPluginTypes","length","grid","map","plugin","index","id","e","pluginId","withModKey","Boolean","metaKey","ctrlKey","altKey","theme","spacing","heading","typography","h5","margin"],"sources":["/home/soula/grafana/public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { GrafanaTheme2, PanelData, PanelPluginMeta } from '@grafana/data';\nimport { EmptySearchResult, useStyles2 } from '@grafana/ui';\n\nimport { filterPluginList, getAllPanelPluginMeta } from '../../state/util';\n\nimport { VizTypePickerPlugin } from './VizTypePickerPlugin';\nimport { VizTypeChangeDetails } from './types';\n\nexport interface Props {\n  current: PanelPluginMeta;\n  data?: PanelData;\n  onChange: (options: VizTypeChangeDetails) => void;\n  searchQuery: string;\n  onClose: () => void;\n}\n\nexport function VizTypePicker({ searchQuery, onChange, current, data }: Props) {\n  const styles = useStyles2(getStyles);\n  const pluginsList: PanelPluginMeta[] = useMemo(() => {\n    return getAllPanelPluginMeta();\n  }, []);\n\n  const filteredPluginTypes = useMemo((): PanelPluginMeta[] => {\n    return filterPluginList(pluginsList, searchQuery, current);\n  }, [current, pluginsList, searchQuery]);\n\n  if (filteredPluginTypes.length === 0) {\n    return <EmptySearchResult>Could not find anything matching your query</EmptySearchResult>;\n  }\n\n  return (\n    <div className={styles.grid}>\n      {filteredPluginTypes.map((plugin, index) => (\n        <VizTypePickerPlugin\n          disabled={false}\n          key={plugin.id}\n          isCurrent={plugin.id === current.id}\n          plugin={plugin}\n          onClick={(e) =>\n            onChange({\n              pluginId: plugin.id,\n              withModKey: Boolean(e.metaKey || e.ctrlKey || e.altKey),\n            })\n          }\n        />\n      ))}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    grid: css`\n      max-width: 100%;\n      display: grid;\n      grid-gap: ${theme.spacing(0.5)};\n    `,\n    heading: css({\n      ...theme.typography.h5,\n      margin: theme.spacing(0, 0.5, 1),\n    }),\n  };\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,aAA9C;AAEA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,kBAAxD;AAEA,SAASC,mBAAT,QAAoC,uBAApC;;AAWA,OAAO,SAASC,aAAT,CAAuB;EAAEC,WAAF;EAAeC,QAAf;EAAyBC,OAAzB;EAAkCC;AAAlC,CAAvB,EAAwE;EAC7E,MAAMC,MAAM,GAAGT,UAAU,CAACU,SAAD,CAAzB;EACA,MAAMC,WAA8B,GAAGb,OAAO,CAAC,MAAM;IACnD,OAAOI,qBAAqB,EAA5B;EACD,CAF6C,EAE3C,EAF2C,CAA9C;EAIA,MAAMU,mBAAmB,GAAGd,OAAO,CAAC,MAAyB;IAC3D,OAAOG,gBAAgB,CAACU,WAAD,EAAcN,WAAd,EAA2BE,OAA3B,CAAvB;EACD,CAFkC,EAEhC,CAACA,OAAD,EAAUI,WAAV,EAAuBN,WAAvB,CAFgC,CAAnC;;EAIA,IAAIO,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;IACpC,gEAAO,KAAC,iBAAD;MAAA;IAAA,EAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAEJ,MAAM,CAACK,IAAvB;IAAA,UACGF,mBAAmB,CAACG,GAApB,CAAwB,CAACC,MAAD,EAASC,KAAT,kBACvB,KAAC,mBAAD;MACE,QAAQ,EAAE,KADZ;MAGE,SAAS,EAAED,MAAM,CAACE,EAAP,KAAcX,OAAO,CAACW,EAHnC;MAIE,MAAM,EAAEF,MAJV;MAKE,OAAO,EAAGG,CAAD,IACPb,QAAQ,CAAC;QACPc,QAAQ,EAAEJ,MAAM,CAACE,EADV;QAEPG,UAAU,EAAEC,OAAO,CAACH,CAAC,CAACI,OAAF,IAAaJ,CAAC,CAACK,OAAf,IAA0BL,CAAC,CAACM,MAA7B;MAFZ,CAAD;IANZ,GAEOT,MAAM,CAACE,EAFd,CADD;EADH,EADF;AAkBD;;AAED,MAAMR,SAAS,GAAIgB,KAAD,IAA0B;EAC1C,OAAO;IACLZ,IAAI,EAAElB,GAAI;AACd;AACA;AACA,kBAAkB8B,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACrC,KALS;IAMLC,OAAO,EAAEhC,GAAG,mBACP8B,KAAK,CAACG,UAAN,CAAiBC,EADV;MAEVC,MAAM,EAAEL,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,GAAjB,EAAsB,CAAtB;IAFE;EANP,CAAP;AAWD,CAZD"},"metadata":{},"sourceType":"module"}