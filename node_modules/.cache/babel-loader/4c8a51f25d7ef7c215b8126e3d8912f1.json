{"ast":null,"code":"const _excluded = [\"totalCount\", \"perPage\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { ServiceAccountStateFilter } from 'app/types'; // serviceAccountsProfilePage\n\nexport const initialStateProfile = {\n  serviceAccount: {},\n  isLoading: true,\n  tokens: []\n};\nexport const serviceAccountProfileSlice = createSlice({\n  name: 'serviceaccount',\n  initialState: initialStateProfile,\n  reducers: {\n    serviceAccountFetchBegin: state => {\n      return Object.assign({}, state, {\n        isLoading: true\n      });\n    },\n    serviceAccountFetchEnd: state => {\n      return Object.assign({}, state, {\n        isLoading: false\n      });\n    },\n    serviceAccountLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        serviceAccount: action.payload,\n        isLoading: false\n      });\n    },\n    serviceAccountTokensLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        tokens: action.payload,\n        isLoading: false\n      });\n    }\n  }\n});\nexport const serviceAccountProfileReducer = serviceAccountProfileSlice.reducer;\nexport const {\n  serviceAccountLoaded,\n  serviceAccountTokensLoaded,\n  serviceAccountFetchBegin,\n  serviceAccountFetchEnd\n} = serviceAccountProfileSlice.actions; // serviceAccountsListPage\n\nexport const initialStateList = {\n  serviceAccounts: [],\n  isLoading: true,\n  builtInRoles: {},\n  roleOptions: [],\n  query: '',\n  page: 0,\n  perPage: 50,\n  totalPages: 1,\n  showPaging: false,\n  serviceAccountStateFilter: ServiceAccountStateFilter.All,\n  apiKeysMigrated: false,\n  showApiKeysMigrationInfo: false\n};\nconst serviceAccountsSlice = createSlice({\n  name: 'serviceaccounts',\n  initialState: initialStateList,\n  reducers: {\n    serviceAccountsFetched: (state, action) => {\n      const _action$payload = action.payload,\n            {\n        totalCount,\n        perPage\n      } = _action$payload,\n            rest = _objectWithoutPropertiesLoose(_action$payload, _excluded);\n\n      const totalPages = Math.ceil(totalCount / perPage);\n      return Object.assign({}, state, rest, {\n        totalPages,\n        perPage,\n        showPaging: totalPages > 1,\n        isLoading: false\n      });\n    },\n    serviceAccountsFetchBegin: state => {\n      return Object.assign({}, state, {\n        isLoading: true\n      });\n    },\n    serviceAccountsFetchEnd: state => {\n      return Object.assign({}, state, {\n        isLoading: false\n      });\n    },\n    acOptionsLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        roleOptions: action.payload\n      });\n    },\n    builtInRolesLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        builtInRoles: action.payload\n      });\n    },\n    apiKeysMigrationStatusLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        apiKeysMigrated: action.payload\n      });\n    },\n    showApiKeysMigrationInfoLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        showApiKeysMigrationInfo: action.payload\n      });\n    },\n    queryChanged: (state, action) => {\n      return Object.assign({}, state, {\n        query: action.payload,\n        page: 0\n      });\n    },\n    pageChanged: (state, action) => Object.assign({}, state, {\n      page: action.payload\n    }),\n    stateFilterChanged: (state, action) => Object.assign({}, state, {\n      serviceAccountStateFilter: action.payload\n    })\n  }\n});\nexport const serviceAccountsReducer = serviceAccountsSlice.reducer;\nexport const {\n  serviceAccountsFetchBegin,\n  serviceAccountsFetchEnd,\n  serviceAccountsFetched,\n  acOptionsLoaded,\n  builtInRolesLoaded,\n  apiKeysMigrationStatusLoaded,\n  showApiKeysMigrationInfoLoaded,\n  pageChanged,\n  stateFilterChanged,\n  queryChanged\n} = serviceAccountsSlice.actions;\nexport default {\n  serviceAccountProfile: serviceAccountProfileReducer,\n  serviceAccounts: serviceAccountsReducer\n};","map":{"version":3,"names":["createSlice","ServiceAccountStateFilter","initialStateProfile","serviceAccount","isLoading","tokens","serviceAccountProfileSlice","name","initialState","reducers","serviceAccountFetchBegin","state","serviceAccountFetchEnd","serviceAccountLoaded","action","payload","serviceAccountTokensLoaded","serviceAccountProfileReducer","reducer","actions","initialStateList","serviceAccounts","builtInRoles","roleOptions","query","page","perPage","totalPages","showPaging","serviceAccountStateFilter","All","apiKeysMigrated","showApiKeysMigrationInfo","serviceAccountsSlice","serviceAccountsFetched","totalCount","rest","Math","ceil","serviceAccountsFetchBegin","serviceAccountsFetchEnd","acOptionsLoaded","builtInRolesLoaded","apiKeysMigrationStatusLoaded","showApiKeysMigrationInfoLoaded","queryChanged","pageChanged","stateFilterChanged","serviceAccountsReducer","serviceAccountProfile"],"sources":["/home/soula/grafana/public/app/features/serviceaccounts/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  ApiKey,\n  Role,\n  ServiceAccountDTO,\n  ServiceAccountProfileState,\n  ServiceAccountsState,\n  ServiceAccountStateFilter,\n} from 'app/types';\n\n// serviceAccountsProfilePage\nexport const initialStateProfile: ServiceAccountProfileState = {\n  serviceAccount: {} as ServiceAccountDTO,\n  isLoading: true,\n  tokens: [] as ApiKey[],\n};\n\nexport const serviceAccountProfileSlice = createSlice({\n  name: 'serviceaccount',\n  initialState: initialStateProfile,\n  reducers: {\n    serviceAccountFetchBegin: (state) => {\n      return { ...state, isLoading: true };\n    },\n    serviceAccountFetchEnd: (state) => {\n      return { ...state, isLoading: false };\n    },\n    serviceAccountLoaded: (state, action: PayloadAction<ServiceAccountDTO>): ServiceAccountProfileState => {\n      return { ...state, serviceAccount: action.payload, isLoading: false };\n    },\n    serviceAccountTokensLoaded: (state, action: PayloadAction<ApiKey[]>): ServiceAccountProfileState => {\n      return { ...state, tokens: action.payload, isLoading: false };\n    },\n  },\n});\n\nexport const serviceAccountProfileReducer = serviceAccountProfileSlice.reducer;\nexport const { serviceAccountLoaded, serviceAccountTokensLoaded, serviceAccountFetchBegin, serviceAccountFetchEnd } =\n  serviceAccountProfileSlice.actions;\n\n// serviceAccountsListPage\nexport const initialStateList: ServiceAccountsState = {\n  serviceAccounts: [] as ServiceAccountDTO[],\n  isLoading: true,\n  builtInRoles: {},\n  roleOptions: [],\n  query: '',\n  page: 0,\n  perPage: 50,\n  totalPages: 1,\n  showPaging: false,\n  serviceAccountStateFilter: ServiceAccountStateFilter.All,\n  apiKeysMigrated: false,\n  showApiKeysMigrationInfo: false,\n};\n\ninterface ServiceAccountsFetched {\n  serviceAccounts: ServiceAccountDTO[];\n  perPage: number;\n  page: number;\n  totalCount: number;\n}\n\nconst serviceAccountsSlice = createSlice({\n  name: 'serviceaccounts',\n  initialState: initialStateList,\n  reducers: {\n    serviceAccountsFetched: (state, action: PayloadAction<ServiceAccountsFetched>): ServiceAccountsState => {\n      const { totalCount, perPage, ...rest } = action.payload;\n      const totalPages = Math.ceil(totalCount / perPage);\n\n      return {\n        ...state,\n        ...rest,\n        totalPages,\n        perPage,\n        showPaging: totalPages > 1,\n        isLoading: false,\n      };\n    },\n    serviceAccountsFetchBegin: (state) => {\n      return { ...state, isLoading: true };\n    },\n    serviceAccountsFetchEnd: (state) => {\n      return { ...state, isLoading: false };\n    },\n    acOptionsLoaded: (state, action: PayloadAction<Role[]>): ServiceAccountsState => {\n      return { ...state, roleOptions: action.payload };\n    },\n    builtInRolesLoaded: (state, action: PayloadAction<Record<string, Role[]>>): ServiceAccountsState => {\n      return { ...state, builtInRoles: action.payload };\n    },\n    apiKeysMigrationStatusLoaded: (state, action): ServiceAccountsState => {\n      return { ...state, apiKeysMigrated: action.payload };\n    },\n    showApiKeysMigrationInfoLoaded: (state, action): ServiceAccountsState => {\n      return { ...state, showApiKeysMigrationInfo: action.payload };\n    },\n    queryChanged: (state, action: PayloadAction<string>) => {\n      return {\n        ...state,\n        query: action.payload,\n        page: 0,\n      };\n    },\n    pageChanged: (state, action: PayloadAction<number>) => ({\n      ...state,\n      page: action.payload,\n    }),\n    stateFilterChanged: (state, action: PayloadAction<ServiceAccountStateFilter>) => ({\n      ...state,\n      serviceAccountStateFilter: action.payload,\n    }),\n  },\n});\nexport const serviceAccountsReducer = serviceAccountsSlice.reducer;\n\nexport const {\n  serviceAccountsFetchBegin,\n  serviceAccountsFetchEnd,\n  serviceAccountsFetched,\n  acOptionsLoaded,\n  builtInRolesLoaded,\n  apiKeysMigrationStatusLoaded,\n  showApiKeysMigrationInfoLoaded,\n  pageChanged,\n  stateFilterChanged,\n  queryChanged,\n} = serviceAccountsSlice.actions;\n\nexport default {\n  serviceAccountProfile: serviceAccountProfileReducer,\n  serviceAccounts: serviceAccountsReducer,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}