{"ast":null,"code":"var _div;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { canvasElementRegistry } from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { LayerActionID } from 'app/plugins/panel/canvas/types';\nimport { HorizontalConstraint, VerticalConstraint } from '../types';\nimport { ElementState } from './element';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const frameItemDummy = {\n  id: 'frame',\n  name: 'Frame',\n  description: 'Frame',\n  getNewOptions: () => ({\n    config: {}\n  }),\n  // eslint-disable-next-line react/display-name\n  display: () => {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      children: \"FRAME!\"\n    }));\n  }\n};\nexport class FrameState extends ElementState {\n  constructor(options, scene, parent) {\n    super(frameItemDummy, options, parent);\n\n    _defineProperty(this, \"elements\", []);\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"doAction\", (action, element, updateName = true, shiftItemsOnDuplicate = true) => {\n      var _element$parent;\n\n      switch (action) {\n        case LayerActionID.Delete:\n          this.elements = this.elements.filter(e => e !== element);\n          this.scene.byName.delete(element.options.name);\n          this.scene.save();\n          this.reinitializeMoveable();\n          break;\n\n        case LayerActionID.Duplicate:\n          if (element.item.id === 'frame') {\n            console.log('Can not duplicate frames (yet)', action, element);\n            return;\n          }\n\n          const opts = cloneDeep(element.options);\n\n          if (shiftItemsOnDuplicate) {\n            const {\n              constraint,\n              placement: oldPlacement\n            } = element.options;\n            const {\n              vertical,\n              horizontal\n            } = constraint !== null && constraint !== void 0 ? constraint : {};\n            const placement = oldPlacement !== null && oldPlacement !== void 0 ? oldPlacement : {};\n\n            switch (vertical) {\n              case VerticalConstraint.Top:\n              case VerticalConstraint.TopBottom:\n                if (placement.top == null) {\n                  placement.top = 25;\n                } else {\n                  placement.top += 10;\n                }\n\n                break;\n\n              case VerticalConstraint.Bottom:\n                if (placement.bottom == null) {\n                  placement.bottom = 100;\n                } else {\n                  placement.bottom -= 10;\n                }\n\n                break;\n            }\n\n            switch (horizontal) {\n              case HorizontalConstraint.Left:\n              case HorizontalConstraint.LeftRight:\n                if (placement.left == null) {\n                  placement.left = 50;\n                } else {\n                  placement.left += 10;\n                }\n\n                break;\n\n              case HorizontalConstraint.Right:\n                if (placement.right == null) {\n                  placement.right = 50;\n                } else {\n                  placement.right -= 10;\n                }\n\n                break;\n            }\n\n            opts.placement = placement;\n          }\n\n          const copy = new ElementState(element.item, opts, this);\n          copy.updateData(this.scene.context);\n\n          if (updateName) {\n            copy.options.name = this.scene.getNextElementName();\n          }\n\n          this.elements.push(copy);\n          this.scene.byName.set(copy.options.name, copy);\n          this.scene.save();\n          this.reinitializeMoveable();\n          break;\n\n        case LayerActionID.MoveTop:\n        case LayerActionID.MoveBottom:\n          (_element$parent = element.parent) === null || _element$parent === void 0 ? void 0 : _element$parent.doMove(element, action);\n          break;\n\n        default:\n          console.log('DO action', action, element);\n          return;\n      }\n    });\n\n    this.options = options;\n    this.parent = parent;\n    this.scene = scene; // mutate options object\n\n    let {\n      elements\n    } = this.options;\n\n    if (!elements) {\n      this.options.elements = elements = [];\n    }\n\n    for (const c of elements) {\n      if (c.type === 'frame') {\n        this.elements.push(new FrameState(c, scene, this));\n      } else {\n        var _canvasElementRegistr;\n\n        const item = (_canvasElementRegistr = canvasElementRegistry.getIfExists(c.type)) !== null && _canvasElementRegistr !== void 0 ? _canvasElementRegistr : notFoundItem;\n        this.elements.push(new ElementState(item, c, this));\n      }\n    }\n  }\n\n  isRoot() {\n    return false;\n  }\n\n  updateData(ctx) {\n    super.updateData(ctx);\n\n    for (const elem of this.elements) {\n      elem.updateData(ctx);\n    }\n  } // used in the layer editor\n\n\n  reorder(startIndex, endIndex) {\n    const result = Array.from(this.elements);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    this.elements = result;\n    this.reinitializeMoveable();\n  }\n\n  doMove(child, action) {\n    const vals = this.elements.filter(v => v !== child);\n\n    if (action === LayerActionID.MoveBottom) {\n      vals.unshift(child);\n    } else {\n      vals.push(child);\n    }\n\n    this.elements = vals;\n    this.scene.save();\n    this.reinitializeMoveable();\n  }\n\n  reinitializeMoveable() {\n    // Need to first clear current selection and then re-init moveable with slight delay\n    this.scene.clearCurrentSelection();\n    setTimeout(() => this.scene.initMoveable(true, this.scene.isEditingEnabled));\n  } // ??? or should this be on the element directly?\n  // are actions scoped to layers?\n\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      ref: this.initElement,\n      style: {\n        overflow: 'hidden'\n      },\n      children: this.elements.map(v => v.render())\n    }, this.UID);\n  }\n  /** Recursively visit all nodes */\n\n\n  visit(visitor) {\n    super.visit(visitor);\n\n    for (const e of this.elements) {\n      visitor(e);\n    }\n  }\n\n  getSaveModel() {\n    return Object.assign({}, this.options, {\n      elements: this.elements.map(v => v.getSaveModel())\n    });\n  }\n\n}","map":{"version":3,"names":["cloneDeep","React","canvasElementRegistry","notFoundItem","LayerActionID","HorizontalConstraint","VerticalConstraint","ElementState","frameItemDummy","id","name","description","getNewOptions","config","display","FrameState","constructor","options","scene","parent","action","element","updateName","shiftItemsOnDuplicate","Delete","elements","filter","e","byName","delete","save","reinitializeMoveable","Duplicate","item","console","log","opts","constraint","placement","oldPlacement","vertical","horizontal","Top","TopBottom","top","Bottom","bottom","Left","LeftRight","left","Right","right","copy","updateData","context","getNextElementName","push","set","MoveTop","MoveBottom","doMove","c","type","getIfExists","isRoot","ctx","elem","reorder","startIndex","endIndex","result","Array","from","removed","splice","child","vals","v","unshift","clearCurrentSelection","setTimeout","initMoveable","isEditingEnabled","render","initElement","overflow","map","UID","visit","visitor","getSaveModel"],"sources":["/home/soula/grafana/public/app/features/canvas/runtime/frame.tsx"],"sourcesContent":["import { cloneDeep } from 'lodash';\nimport React from 'react';\n\nimport { canvasElementRegistry, CanvasFrameOptions } from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { DimensionContext } from 'app/features/dimensions';\nimport { LayerActionID } from 'app/plugins/panel/canvas/types';\n\nimport { CanvasElementItem } from '../element';\nimport { HorizontalConstraint, Placement, VerticalConstraint } from '../types';\n\nimport { ElementState } from './element';\nimport { RootElement } from './root';\nimport { Scene } from './scene';\n\nexport const frameItemDummy: CanvasElementItem = {\n  id: 'frame',\n  name: 'Frame',\n  description: 'Frame',\n\n  getNewOptions: () => ({\n    config: {},\n  }),\n\n  // eslint-disable-next-line react/display-name\n  display: () => {\n    return <div>FRAME!</div>;\n  },\n};\n\nexport class FrameState extends ElementState {\n  elements: ElementState[] = [];\n  scene: Scene;\n\n  constructor(public options: CanvasFrameOptions, scene: Scene, public parent?: FrameState) {\n    super(frameItemDummy, options, parent);\n\n    this.scene = scene;\n\n    // mutate options object\n    let { elements } = this.options;\n    if (!elements) {\n      this.options.elements = elements = [];\n    }\n\n    for (const c of elements) {\n      if (c.type === 'frame') {\n        this.elements.push(new FrameState(c as CanvasFrameOptions, scene, this));\n      } else {\n        const item = canvasElementRegistry.getIfExists(c.type) ?? notFoundItem;\n        this.elements.push(new ElementState(item, c, this));\n      }\n    }\n  }\n\n  isRoot(): this is RootElement {\n    return false;\n  }\n\n  updateData(ctx: DimensionContext) {\n    super.updateData(ctx);\n    for (const elem of this.elements) {\n      elem.updateData(ctx);\n    }\n  }\n\n  // used in the layer editor\n  reorder(startIndex: number, endIndex: number) {\n    const result = Array.from(this.elements);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    this.elements = result;\n\n    this.reinitializeMoveable();\n  }\n\n  doMove(child: ElementState, action: LayerActionID) {\n    const vals = this.elements.filter((v) => v !== child);\n    if (action === LayerActionID.MoveBottom) {\n      vals.unshift(child);\n    } else {\n      vals.push(child);\n    }\n    this.elements = vals;\n    this.scene.save();\n    this.reinitializeMoveable();\n  }\n\n  reinitializeMoveable() {\n    // Need to first clear current selection and then re-init moveable with slight delay\n    this.scene.clearCurrentSelection();\n    setTimeout(() => this.scene.initMoveable(true, this.scene.isEditingEnabled));\n  }\n\n  // ??? or should this be on the element directly?\n  // are actions scoped to layers?\n  doAction = (action: LayerActionID, element: ElementState, updateName = true, shiftItemsOnDuplicate = true) => {\n    switch (action) {\n      case LayerActionID.Delete:\n        this.elements = this.elements.filter((e) => e !== element);\n        this.scene.byName.delete(element.options.name);\n        this.scene.save();\n        this.reinitializeMoveable();\n        break;\n      case LayerActionID.Duplicate:\n        if (element.item.id === 'frame') {\n          console.log('Can not duplicate frames (yet)', action, element);\n          return;\n        }\n        const opts = cloneDeep(element.options);\n\n        if (shiftItemsOnDuplicate) {\n          const { constraint, placement: oldPlacement } = element.options;\n          const { vertical, horizontal } = constraint ?? {};\n          const placement = oldPlacement ?? ({} as Placement);\n\n          switch (vertical) {\n            case VerticalConstraint.Top:\n            case VerticalConstraint.TopBottom:\n              if (placement.top == null) {\n                placement.top = 25;\n              } else {\n                placement.top += 10;\n              }\n              break;\n            case VerticalConstraint.Bottom:\n              if (placement.bottom == null) {\n                placement.bottom = 100;\n              } else {\n                placement.bottom -= 10;\n              }\n              break;\n          }\n\n          switch (horizontal) {\n            case HorizontalConstraint.Left:\n            case HorizontalConstraint.LeftRight:\n              if (placement.left == null) {\n                placement.left = 50;\n              } else {\n                placement.left += 10;\n              }\n              break;\n            case HorizontalConstraint.Right:\n              if (placement.right == null) {\n                placement.right = 50;\n              } else {\n                placement.right -= 10;\n              }\n              break;\n          }\n\n          opts.placement = placement;\n        }\n\n        const copy = new ElementState(element.item, opts, this);\n        copy.updateData(this.scene.context);\n        if (updateName) {\n          copy.options.name = this.scene.getNextElementName();\n        }\n        this.elements.push(copy);\n        this.scene.byName.set(copy.options.name, copy);\n        this.scene.save();\n        this.reinitializeMoveable();\n        break;\n      case LayerActionID.MoveTop:\n      case LayerActionID.MoveBottom:\n        element.parent?.doMove(element, action);\n        break;\n\n      default:\n        console.log('DO action', action, element);\n        return;\n    }\n  };\n\n  render() {\n    return (\n      <div key={this.UID} ref={this.initElement} style={{ overflow: 'hidden' }}>\n        {this.elements.map((v) => v.render())}\n      </div>\n    );\n  }\n\n  /** Recursively visit all nodes */\n  visit(visitor: (v: ElementState) => void) {\n    super.visit(visitor);\n    for (const e of this.elements) {\n      visitor(e);\n    }\n  }\n\n  getSaveModel() {\n    return {\n      ...this.options,\n      elements: this.elements.map((v) => v.getSaveModel()),\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}