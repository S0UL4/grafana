{"ast":null,"code":"const _excluded = [\"label\", \"description\", \"value\", \"htmlValue\", \"onChange\", \"disabled\", \"className\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { stylesFactory, useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { getLabelStyles } from './Label';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Checkbox = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    label,\n    description,\n    value,\n    htmlValue,\n    onChange,\n    disabled,\n    className\n  } = _ref,\n      inputProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const handleOnChange = useCallback(e => {\n    if (onChange) {\n      onChange(e);\n    }\n  }, [onChange]);\n  const styles = useStyles2(getCheckboxStyles);\n  return /*#__PURE__*/_jsxs(\"label\", {\n    className: cx(styles.wrapper, className),\n    children: [/*#__PURE__*/_jsx(\"input\", Object.assign({\n      type: \"checkbox\",\n      className: styles.input,\n      checked: value,\n      disabled: disabled,\n      onChange: handleOnChange,\n      value: htmlValue\n    }, inputProps, {\n      ref: ref\n    })), /*#__PURE__*/_jsx(\"span\", {\n      className: styles.checkmark\n    }), label && /*#__PURE__*/_jsx(\"span\", {\n      className: styles.label,\n      children: label\n    }), description && /*#__PURE__*/_jsx(\"span\", {\n      className: styles.description,\n      children: description\n    })]\n  });\n});\nexport const getCheckboxStyles = stylesFactory(theme => {\n  const labelStyles = getLabelStyles(theme);\n  const checkboxSize = 2;\n  const labelPadding = 1;\n  return {\n    wrapper: css`\n      position: relative;\n      vertical-align: middle;\n      font-size: 0;\n    `,\n    input: css`\n      position: absolute;\n      z-index: 1;\n      top: 0;\n      left: 0;\n      width: 100% !important; // global styles unset this\n      height: 100%;\n      opacity: 0;\n\n      &:focus + span,\n      &:focus-visible + span {\n        ${getFocusStyles(theme)}\n      }\n\n      &:focus:not(:focus-visible) + span {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      /**\n       * Using adjacent sibling selector to style checked state.\n       * Primarily to limit the classes necessary to use when these classes will be used\n       * for angular components styling\n       * */\n      &:checked + span {\n        background: blue;\n        background: ${theme.colors.primary.main};\n        border: none;\n\n        &:hover {\n          background: ${theme.colors.primary.shade};\n        }\n\n        &:after {\n          content: '';\n          position: absolute;\n          z-index: 2;\n          left: 5px;\n          top: 1px;\n          width: 6px;\n          height: 12px;\n          border: solid ${theme.colors.primary.contrastText};\n          border-width: 0 3px 3px 0;\n          transform: rotate(45deg);\n        }\n      }\n\n      &:disabled + span {\n        background-color: ${theme.colors.action.disabledBackground};\n        cursor: not-allowed;\n\n        &:hover {\n          background-color: ${theme.colors.action.disabledBackground};\n        }\n\n        &:after {\n          border-color: ${theme.colors.action.disabledText};\n        }\n      }\n    `,\n    checkmark: css`\n      position: relative; /* Checkbox should be layered on top of the invisible input so it recieves :hover */\n      z-index: 2;\n      display: inline-block;\n      width: ${theme.spacing(checkboxSize)};\n      height: ${theme.spacing(checkboxSize)};\n      border-radius: ${theme.shape.borderRadius()};\n      background: ${theme.components.input.background};\n      border: 1px solid ${theme.components.input.borderColor};\n\n      &:hover {\n        cursor: pointer;\n        border-color: ${theme.components.input.borderHover};\n      }\n    `,\n    label: cx(labelStyles.label, css`\n        position: relative;\n        z-index: 2;\n        padding-left: ${theme.spacing(labelPadding)};\n        white-space: nowrap;\n        cursor: pointer;\n        position: relative;\n        top: -3px;\n      `),\n    description: cx(labelStyles.description, css`\n        line-height: ${theme.typography.bodySmall.lineHeight};\n        padding-left: ${theme.spacing(checkboxSize + labelPadding)};\n        margin-top: 0; /* The margin effectively comes from the top: -2px on the label above it */\n      `)\n  };\n});\nCheckbox.displayName = 'Checkbox';","map":{"version":3,"names":["css","cx","React","useCallback","stylesFactory","useStyles2","getFocusStyles","getMouseFocusStyles","getLabelStyles","Checkbox","forwardRef","ref","label","description","value","htmlValue","onChange","disabled","className","inputProps","handleOnChange","e","styles","getCheckboxStyles","wrapper","input","checkmark","theme","labelStyles","checkboxSize","labelPadding","colors","primary","main","shade","contrastText","action","disabledBackground","disabledText","spacing","shape","borderRadius","components","background","borderColor","borderHover","typography","bodySmall","lineHeight","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/Checkbox.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nimport { getLabelStyles } from './Label';\n\nexport interface CheckboxProps extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  label?: string;\n  description?: string;\n  value?: boolean;\n  // htmlValue allows to specify the input \"value\" attribute\n  htmlValue?: string | number;\n}\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ label, description, value, htmlValue, onChange, disabled, className, ...inputProps }, ref) => {\n    const handleOnChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n          onChange(e);\n        }\n      },\n      [onChange]\n    );\n    const styles = useStyles2(getCheckboxStyles);\n\n    return (\n      <label className={cx(styles.wrapper, className)}>\n        <input\n          type=\"checkbox\"\n          className={styles.input}\n          checked={value}\n          disabled={disabled}\n          onChange={handleOnChange}\n          value={htmlValue}\n          {...inputProps}\n          ref={ref}\n        />\n        <span className={styles.checkmark} />\n        {label && <span className={styles.label}>{label}</span>}\n        {description && <span className={styles.description}>{description}</span>}\n      </label>\n    );\n  }\n);\n\nexport const getCheckboxStyles = stylesFactory((theme: GrafanaTheme2) => {\n  const labelStyles = getLabelStyles(theme);\n  const checkboxSize = 2;\n  const labelPadding = 1;\n\n  return {\n    wrapper: css`\n      position: relative;\n      vertical-align: middle;\n      font-size: 0;\n    `,\n    input: css`\n      position: absolute;\n      z-index: 1;\n      top: 0;\n      left: 0;\n      width: 100% !important; // global styles unset this\n      height: 100%;\n      opacity: 0;\n\n      &:focus + span,\n      &:focus-visible + span {\n        ${getFocusStyles(theme)}\n      }\n\n      &:focus:not(:focus-visible) + span {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      /**\n       * Using adjacent sibling selector to style checked state.\n       * Primarily to limit the classes necessary to use when these classes will be used\n       * for angular components styling\n       * */\n      &:checked + span {\n        background: blue;\n        background: ${theme.colors.primary.main};\n        border: none;\n\n        &:hover {\n          background: ${theme.colors.primary.shade};\n        }\n\n        &:after {\n          content: '';\n          position: absolute;\n          z-index: 2;\n          left: 5px;\n          top: 1px;\n          width: 6px;\n          height: 12px;\n          border: solid ${theme.colors.primary.contrastText};\n          border-width: 0 3px 3px 0;\n          transform: rotate(45deg);\n        }\n      }\n\n      &:disabled + span {\n        background-color: ${theme.colors.action.disabledBackground};\n        cursor: not-allowed;\n\n        &:hover {\n          background-color: ${theme.colors.action.disabledBackground};\n        }\n\n        &:after {\n          border-color: ${theme.colors.action.disabledText};\n        }\n      }\n    `,\n    checkmark: css`\n      position: relative; /* Checkbox should be layered on top of the invisible input so it recieves :hover */\n      z-index: 2;\n      display: inline-block;\n      width: ${theme.spacing(checkboxSize)};\n      height: ${theme.spacing(checkboxSize)};\n      border-radius: ${theme.shape.borderRadius()};\n      background: ${theme.components.input.background};\n      border: 1px solid ${theme.components.input.borderColor};\n\n      &:hover {\n        cursor: pointer;\n        border-color: ${theme.components.input.borderHover};\n      }\n    `,\n    label: cx(\n      labelStyles.label,\n      css`\n        position: relative;\n        z-index: 2;\n        padding-left: ${theme.spacing(labelPadding)};\n        white-space: nowrap;\n        cursor: pointer;\n        position: relative;\n        top: -3px;\n      `\n    ),\n    description: cx(\n      labelStyles.description,\n      css`\n        line-height: ${theme.typography.bodySmall.lineHeight};\n        padding-left: ${theme.spacing(checkboxSize + labelPadding)};\n        margin-top: 0; /* The margin effectively comes from the top: -2px on the label above it */\n      `\n    ),\n  };\n});\n\nCheckbox.displayName = 'Checkbox';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}