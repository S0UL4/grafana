{"ast":null,"code":"var _h;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { updateDatasourcePluginJsonDataOption } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, InlineField, InlineFieldRow, useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LokiSearchSettings({\n  options,\n  onOptionsChange\n}) {\n  var _options$jsonData$tra, _options$jsonData$tra2, _options$jsonData$lok, _options$jsonData$lok2;\n\n  const styles = useStyles(getStyles); // Default to the trace to logs datasource if configured and loki search was enabled\n  // but only if jsonData.lokiSearch hasn't been set\n\n  const legacyDatasource = ((_options$jsonData$tra = options.jsonData.tracesToLogs) === null || _options$jsonData$tra === void 0 ? void 0 : _options$jsonData$tra.lokiSearch) !== false ? (_options$jsonData$tra2 = options.jsonData.tracesToLogs) === null || _options$jsonData$tra2 === void 0 ? void 0 : _options$jsonData$tra2.datasourceUid : undefined;\n\n  if (legacyDatasource && options.jsonData.lokiSearch === undefined) {\n    updateDatasourcePluginJsonDataOption({\n      onOptionsChange,\n      options\n    }, 'lokiSearch', {\n      datasourceUid: legacyDatasource\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: css({\n      width: '100%'\n    }),\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n      className: \"page-heading\",\n      children: \"Loki Search\"\n    })), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.infoText,\n      children: \"Select a Loki datasource to search for traces. Derived fields must be configured in the Loki data source.\"\n    }), /*#__PURE__*/_jsxs(InlineFieldRow, {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsx(InlineField, {\n        tooltip: \"The Loki data source with the service graph data\",\n        label: \"Data source\",\n        labelWidth: 26,\n        children: /*#__PURE__*/_jsx(DataSourcePicker, {\n          inputId: \"loki-search-data-source-picker\",\n          pluginId: \"loki\",\n          current: (_options$jsonData$lok = options.jsonData.lokiSearch) === null || _options$jsonData$lok === void 0 ? void 0 : _options$jsonData$lok.datasourceUid,\n          noDefault: true,\n          width: 40,\n          onChange: ds => updateDatasourcePluginJsonDataOption({\n            onOptionsChange,\n            options\n          }, 'lokiSearch', {\n            datasourceUid: ds.uid\n          })\n        })\n      }), (_options$jsonData$lok2 = options.jsonData.lokiSearch) !== null && _options$jsonData$lok2 !== void 0 && _options$jsonData$lok2.datasourceUid ? /*#__PURE__*/_jsx(Button, {\n        type: 'button',\n        variant: 'secondary',\n        size: 'sm',\n        fill: 'text',\n        onClick: () => {\n          updateDatasourcePluginJsonDataOption({\n            onOptionsChange,\n            options\n          }, 'lokiSearch', {\n            datasourceUid: undefined\n          });\n        },\n        children: \"Clear\"\n      }) : null]\n    })]\n  });\n}\n\nconst getStyles = theme => ({\n  infoText: css`\n    label: infoText;\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textSemiWeak};\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `\n});","map":{"version":3,"names":["css","React","updateDatasourcePluginJsonDataOption","DataSourcePicker","Button","InlineField","InlineFieldRow","useStyles","LokiSearchSettings","options","onOptionsChange","styles","getStyles","legacyDatasource","jsonData","tracesToLogs","lokiSearch","datasourceUid","undefined","width","infoText","row","ds","uid","theme","spacing","md","colors","textSemiWeak"],"sources":["/home/soula/grafana/public/app/plugins/datasource/tempo/configuration/LokiSearchSettings.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, GrafanaTheme, updateDatasourcePluginJsonDataOption } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, InlineField, InlineFieldRow, useStyles } from '@grafana/ui';\n\nimport { TempoJsonData } from '../datasource';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TempoJsonData> {}\n\nexport function LokiSearchSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  // Default to the trace to logs datasource if configured and loki search was enabled\n  // but only if jsonData.lokiSearch hasn't been set\n  const legacyDatasource =\n    options.jsonData.tracesToLogs?.lokiSearch !== false ? options.jsonData.tracesToLogs?.datasourceUid : undefined;\n  if (legacyDatasource && options.jsonData.lokiSearch === undefined) {\n    updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'lokiSearch', {\n      datasourceUid: legacyDatasource,\n    });\n  }\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <h3 className=\"page-heading\">Loki Search</h3>\n\n      <div className={styles.infoText}>\n        Select a Loki datasource to search for traces. Derived fields must be configured in the Loki data source.\n      </div>\n\n      <InlineFieldRow className={styles.row}>\n        <InlineField tooltip=\"The Loki data source with the service graph data\" label=\"Data source\" labelWidth={26}>\n          <DataSourcePicker\n            inputId=\"loki-search-data-source-picker\"\n            pluginId=\"loki\"\n            current={options.jsonData.lokiSearch?.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'lokiSearch', {\n                datasourceUid: ds.uid,\n              })\n            }\n          />\n        </InlineField>\n        {options.jsonData.lokiSearch?.datasourceUid ? (\n          <Button\n            type={'button'}\n            variant={'secondary'}\n            size={'sm'}\n            fill={'text'}\n            onClick={() => {\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'lokiSearch', {\n                datasourceUid: undefined,\n              });\n            }}\n          >\n            Clear\n          </Button>\n        ) : null}\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  infoText: css`\n    label: infoText;\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textSemiWeak};\n  `,\n\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAA2DC,oCAA3D,QAAuG,eAAvG;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,cAA9B,EAA8CC,SAA9C,QAA+D,aAA/D;;;AAMA,OAAO,SAASC,kBAAT,CAA4B;EAAEC,OAAF;EAAWC;AAAX,CAA5B,EAAiE;EAAA;;EACtE,MAAMC,MAAM,GAAGJ,SAAS,CAACK,SAAD,CAAxB,CADsE,CAGtE;EACA;;EACA,MAAMC,gBAAgB,GACpB,0BAAAJ,OAAO,CAACK,QAAR,CAAiBC,YAAjB,gFAA+BC,UAA/B,MAA8C,KAA9C,6BAAsDP,OAAO,CAACK,QAAR,CAAiBC,YAAvE,2DAAsD,uBAA+BE,aAArF,GAAqGC,SADvG;;EAEA,IAAIL,gBAAgB,IAAIJ,OAAO,CAACK,QAAR,CAAiBE,UAAjB,KAAgCE,SAAxD,EAAmE;IACjEhB,oCAAoC,CAAC;MAAEQ,eAAF;MAAmBD;IAAnB,CAAD,EAA+B,YAA/B,EAA6C;MAC/EQ,aAAa,EAAEJ;IADgE,CAA7C,CAApC;EAGD;;EAED,oBACE;IAAK,SAAS,EAAEb,GAAG,CAAC;MAAEmB,KAAK,EAAE;IAAT,CAAD,CAAnB;IAAA,oCACE;MAAI,SAAS,EAAC,cAAd;MAAA;IAAA,EADF,gBAGE;MAAK,SAAS,EAAER,MAAM,CAACS,QAAvB;MAAA;IAAA,EAHF,eAOE,MAAC,cAAD;MAAgB,SAAS,EAAET,MAAM,CAACU,GAAlC;MAAA,wBACE,KAAC,WAAD;QAAa,OAAO,EAAC,kDAArB;QAAwE,KAAK,EAAC,aAA9E;QAA4F,UAAU,EAAE,EAAxG;QAAA,uBACE,KAAC,gBAAD;UACE,OAAO,EAAC,gCADV;UAEE,QAAQ,EAAC,MAFX;UAGE,OAAO,2BAAEZ,OAAO,CAACK,QAAR,CAAiBE,UAAnB,0DAAE,sBAA6BC,aAHxC;UAIE,SAAS,EAAE,IAJb;UAKE,KAAK,EAAE,EALT;UAME,QAAQ,EAAGK,EAAD,IACRpB,oCAAoC,CAAC;YAAEQ,eAAF;YAAmBD;UAAnB,CAAD,EAA+B,YAA/B,EAA6C;YAC/EQ,aAAa,EAAEK,EAAE,CAACC;UAD6D,CAA7C;QAPxC;MADF,EADF,EAeG,0BAAAd,OAAO,CAACK,QAAR,CAAiBE,UAAjB,0EAA6BC,aAA7B,gBACC,KAAC,MAAD;QACE,IAAI,EAAE,QADR;QAEE,OAAO,EAAE,WAFX;QAGE,IAAI,EAAE,IAHR;QAIE,IAAI,EAAE,MAJR;QAKE,OAAO,EAAE,MAAM;UACbf,oCAAoC,CAAC;YAAEQ,eAAF;YAAmBD;UAAnB,CAAD,EAA+B,YAA/B,EAA6C;YAC/EQ,aAAa,EAAEC;UADgE,CAA7C,CAApC;QAGD,CATH;QAAA;MAAA,EADD,GAcG,IA7BN;IAAA,EAPF;EAAA,EADF;AAyCD;;AAED,MAAMN,SAAS,GAAIY,KAAD,KAA0B;EAC1CJ,QAAQ,EAAEpB,GAAI;AAChB;AACA,sBAAsBwB,KAAK,CAACC,OAAN,CAAcC,EAAG;AACvC,aAAaF,KAAK,CAACG,MAAN,CAAaC,YAAa;AACvC,GAL4C;EAO1CP,GAAG,EAAErB,GAAI;AACX;AACA;AACA;AAV4C,CAA1B,CAAlB"},"metadata":{},"sourceType":"module"}