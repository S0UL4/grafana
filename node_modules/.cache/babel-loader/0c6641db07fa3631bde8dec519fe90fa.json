{"ast":null,"code":"import { config } from '@grafana/runtime';\nimport { api } from '../api';\nimport { initLoadOrgs, initLoadSessions, initLoadTeams, orgsLoaded, sessionsLoaded, setUpdating, teamsLoaded, userLoaded, userSessionRevoked } from './reducers';\nexport function changePassword(payload) {\n  return async function (dispatch) {\n    dispatch(setUpdating({\n      updating: true\n    }));\n    await api.changePassword(payload);\n    dispatch(setUpdating({\n      updating: false\n    }));\n  };\n}\nexport function initUserProfilePage() {\n  return async function (dispatch) {\n    await dispatch(loadUser());\n    dispatch(loadTeams());\n    dispatch(loadOrgs());\n    dispatch(loadSessions());\n  };\n}\nexport function loadUser() {\n  return async function (dispatch) {\n    const user = await api.loadUser();\n    dispatch(userLoaded({\n      user\n    }));\n  };\n}\n\nfunction loadTeams() {\n  return async function (dispatch) {\n    dispatch(initLoadTeams());\n    const teams = await api.loadTeams();\n    dispatch(teamsLoaded({\n      teams\n    }));\n  };\n}\n\nfunction loadOrgs() {\n  return async function (dispatch) {\n    dispatch(initLoadOrgs());\n    const orgs = await api.loadOrgs();\n    dispatch(orgsLoaded({\n      orgs\n    }));\n  };\n}\n\nfunction loadSessions() {\n  return async function (dispatch) {\n    dispatch(initLoadSessions());\n    const sessions = await api.loadSessions();\n    dispatch(sessionsLoaded({\n      sessions\n    }));\n  };\n}\n\nexport function revokeUserSession(tokenId) {\n  return async function (dispatch) {\n    dispatch(setUpdating({\n      updating: true\n    }));\n    await api.revokeUserSession(tokenId);\n    dispatch(userSessionRevoked({\n      tokenId\n    }));\n  };\n}\nexport function changeUserOrg(org) {\n  return async function (dispatch) {\n    dispatch(setUpdating({\n      updating: true\n    }));\n    await api.setUserOrg(org);\n    window.location.href = config.appSubUrl + '/profile';\n  };\n}\nexport function updateUserProfile(payload) {\n  return async function (dispatch) {\n    dispatch(setUpdating({\n      updating: true\n    }));\n    await api.updateUserProfile(payload);\n    await dispatch(loadUser());\n    dispatch(setUpdating({\n      updating: false\n    }));\n  };\n}","map":{"version":3,"names":["config","api","initLoadOrgs","initLoadSessions","initLoadTeams","orgsLoaded","sessionsLoaded","setUpdating","teamsLoaded","userLoaded","userSessionRevoked","changePassword","payload","dispatch","updating","initUserProfilePage","loadUser","loadTeams","loadOrgs","loadSessions","user","teams","orgs","sessions","revokeUserSession","tokenId","changeUserOrg","org","setUserOrg","window","location","href","appSubUrl","updateUserProfile"],"sources":["/home/soula/grafana/public/app/features/profile/state/actions.ts"],"sourcesContent":["import { config } from '@grafana/runtime';\n\nimport { ThunkResult, UserOrg } from '../../../types';\nimport { api } from '../api';\nimport { ChangePasswordFields, ProfileUpdateFields } from '../types';\n\nimport {\n  initLoadOrgs,\n  initLoadSessions,\n  initLoadTeams,\n  orgsLoaded,\n  sessionsLoaded,\n  setUpdating,\n  teamsLoaded,\n  userLoaded,\n  userSessionRevoked,\n} from './reducers';\n\nexport function changePassword(payload: ChangePasswordFields): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.changePassword(payload);\n    dispatch(setUpdating({ updating: false }));\n  };\n}\n\nexport function initUserProfilePage(): ThunkResult<void> {\n  return async function (dispatch) {\n    await dispatch(loadUser());\n    dispatch(loadTeams());\n    dispatch(loadOrgs());\n    dispatch(loadSessions());\n  };\n}\n\nexport function loadUser(): ThunkResult<void> {\n  return async function (dispatch) {\n    const user = await api.loadUser();\n    dispatch(userLoaded({ user }));\n  };\n}\n\nfunction loadTeams(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadTeams());\n    const teams = await api.loadTeams();\n    dispatch(teamsLoaded({ teams }));\n  };\n}\n\nfunction loadOrgs(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadOrgs());\n    const orgs = await api.loadOrgs();\n    dispatch(orgsLoaded({ orgs }));\n  };\n}\n\nfunction loadSessions(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadSessions());\n    const sessions = await api.loadSessions();\n    dispatch(sessionsLoaded({ sessions }));\n  };\n}\n\nexport function revokeUserSession(tokenId: number): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.revokeUserSession(tokenId);\n    dispatch(userSessionRevoked({ tokenId }));\n  };\n}\n\nexport function changeUserOrg(org: UserOrg): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.setUserOrg(org);\n    window.location.href = config.appSubUrl + '/profile';\n  };\n}\n\nexport function updateUserProfile(payload: ProfileUpdateFields): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.updateUserProfile(payload);\n    await dispatch(loadUser());\n    dispatch(setUpdating({ updating: false }));\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}