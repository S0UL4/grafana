{"ast":null,"code":"var _thead, _Icon;\n\nimport React, { useState } from 'react';\nimport { arrayUtils } from '@grafana/data';\nimport { DeleteButton, HorizontalGroup, Icon, IconButton, TagList } from '@grafana/ui';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { ListNewButton } from '../DashboardSettings/ListNewButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const LinkSettingsList = ({\n  dashboard,\n  onNew,\n  onEdit\n}) => {\n  const [links, setLinks] = useState(dashboard.links);\n\n  const moveLink = (idx, direction) => {\n    dashboard.links = arrayUtils.moveItemImmutably(links, idx, idx + direction);\n    setLinks(dashboard.links);\n  };\n\n  const duplicateLink = (link, idx) => {\n    dashboard.links = [...links, Object.assign({}, link)];\n    setLinks(dashboard.links);\n  };\n\n  const deleteLink = idx => {\n    dashboard.links = [...links.slice(0, idx), ...links.slice(idx + 1)];\n    setLinks(dashboard.links);\n  };\n\n  const isEmptyList = dashboard.links.length === 0;\n\n  if (isEmptyList) {\n    return /*#__PURE__*/_jsx(EmptyListCTA, {\n      onClick: onNew,\n      title: \"There are no dashboard links added yet\",\n      buttonIcon: \"link\",\n      buttonTitle: \"Add dashboard link\",\n      infoBoxTitle: \"What are dashboard links?\",\n      infoBox: {\n        __html: '<p>Dashboard Links allow you to place links to other dashboards and web sites directly below the dashboard header.</p>'\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"table\", {\n      className: \"filter-table filter-table--hover\",\n      children: [_thead || (_thead = /*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"th\", {\n            children: \"Type\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"Info\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            colSpan: 3\n          })]\n        })\n      })), /*#__PURE__*/_jsx(\"tbody\", {\n        children: links.map((link, idx) => {\n          var _link$tags;\n\n          return /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsxs(\"td\", {\n              className: \"pointer\",\n              onClick: () => onEdit(idx),\n              children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                name: \"external-link-alt\"\n              })), \" \\xA0 \", link.type]\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n                children: [link.title && /*#__PURE__*/_jsx(\"span\", {\n                  children: link.title\n                }), link.type === 'link' && /*#__PURE__*/_jsx(\"span\", {\n                  children: link.url\n                }), link.type === 'dashboards' && /*#__PURE__*/_jsx(TagList, {\n                  tags: (_link$tags = link.tags) !== null && _link$tags !== void 0 ? _link$tags : []\n                })]\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              style: {\n                width: '1%'\n              },\n              children: idx !== 0 && /*#__PURE__*/_jsx(IconButton, {\n                name: \"arrow-up\",\n                \"aria-label\": \"arrow-up\",\n                onClick: () => moveLink(idx, -1)\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              style: {\n                width: '1%'\n              },\n              children: links.length > 1 && idx !== links.length - 1 ? /*#__PURE__*/_jsx(IconButton, {\n                name: \"arrow-down\",\n                \"aria-label\": \"arrow-down\",\n                onClick: () => moveLink(idx, 1)\n              }) : null\n            }), /*#__PURE__*/_jsx(\"td\", {\n              style: {\n                width: '1%'\n              },\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"copy\",\n                name: \"copy\",\n                onClick: () => duplicateLink(link, idx)\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              style: {\n                width: '1%'\n              },\n              children: /*#__PURE__*/_jsx(DeleteButton, {\n                \"aria-label\": `Delete link with title \"${link.title}\"`,\n                size: \"sm\",\n                onConfirm: () => deleteLink(idx)\n              })\n            })]\n          }, `${link.title}-${idx}`);\n        })\n      })]\n    }), /*#__PURE__*/_jsx(ListNewButton, {\n      onClick: onNew,\n      children: \"New link\"\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","arrayUtils","DeleteButton","HorizontalGroup","Icon","IconButton","TagList","EmptyListCTA","ListNewButton","LinkSettingsList","dashboard","onNew","onEdit","links","setLinks","moveLink","idx","direction","moveItemImmutably","duplicateLink","link","deleteLink","slice","isEmptyList","length","__html","map","type","title","url","tags","width"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/LinksSettings/LinkSettingsList.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { arrayUtils } from '@grafana/data';\nimport { DeleteButton, HorizontalGroup, Icon, IconButton, TagList } from '@grafana/ui';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\n\nimport { DashboardModel, DashboardLink } from '../../state/DashboardModel';\nimport { ListNewButton } from '../DashboardSettings/ListNewButton';\n\ntype LinkSettingsListProps = {\n  dashboard: DashboardModel;\n  onNew: () => void;\n  onEdit: (idx: number) => void;\n};\n\nexport const LinkSettingsList: React.FC<LinkSettingsListProps> = ({ dashboard, onNew, onEdit }) => {\n  const [links, setLinks] = useState(dashboard.links);\n\n  const moveLink = (idx: number, direction: number) => {\n    dashboard.links = arrayUtils.moveItemImmutably(links, idx, idx + direction);\n    setLinks(dashboard.links);\n  };\n\n  const duplicateLink = (link: DashboardLink, idx: number) => {\n    dashboard.links = [...links, { ...link }];\n    setLinks(dashboard.links);\n  };\n\n  const deleteLink = (idx: number) => {\n    dashboard.links = [...links.slice(0, idx), ...links.slice(idx + 1)];\n    setLinks(dashboard.links);\n  };\n\n  const isEmptyList = dashboard.links.length === 0;\n\n  if (isEmptyList) {\n    return (\n      <EmptyListCTA\n        onClick={onNew}\n        title=\"There are no dashboard links added yet\"\n        buttonIcon=\"link\"\n        buttonTitle=\"Add dashboard link\"\n        infoBoxTitle=\"What are dashboard links?\"\n        infoBox={{\n          __html:\n            '<p>Dashboard Links allow you to place links to other dashboards and web sites directly below the dashboard header.</p>',\n        }}\n      />\n    );\n  }\n\n  return (\n    <>\n      <table className=\"filter-table filter-table--hover\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Info</th>\n            <th colSpan={3} />\n          </tr>\n        </thead>\n        <tbody>\n          {links.map((link, idx) => (\n            <tr key={`${link.title}-${idx}`}>\n              <td className=\"pointer\" onClick={() => onEdit(idx)}>\n                <Icon name=\"external-link-alt\" /> &nbsp; {link.type}\n              </td>\n              <td>\n                <HorizontalGroup>\n                  {link.title && <span>{link.title}</span>}\n                  {link.type === 'link' && <span>{link.url}</span>}\n                  {link.type === 'dashboards' && <TagList tags={link.tags ?? []} />}\n                </HorizontalGroup>\n              </td>\n              <td style={{ width: '1%' }}>\n                {idx !== 0 && <IconButton name=\"arrow-up\" aria-label=\"arrow-up\" onClick={() => moveLink(idx, -1)} />}\n              </td>\n              <td style={{ width: '1%' }}>\n                {links.length > 1 && idx !== links.length - 1 ? (\n                  <IconButton name=\"arrow-down\" aria-label=\"arrow-down\" onClick={() => moveLink(idx, 1)} />\n                ) : null}\n              </td>\n              <td style={{ width: '1%' }}>\n                <IconButton aria-label=\"copy\" name=\"copy\" onClick={() => duplicateLink(link, idx)} />\n              </td>\n              <td style={{ width: '1%' }}>\n                <DeleteButton\n                  aria-label={`Delete link with title \"${link.title}\"`}\n                  size=\"sm\"\n                  onConfirm={() => deleteLink(idx)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <ListNewButton onClick={onNew}>New link</ListNewButton>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}