{"ast":null,"code":"import TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nconst sampleURL = 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer';\nexport const defaultXYZConfig = {\n  url: sampleURL + '/tile/{z}/{y}/{x}',\n  attribution: `Tiles © <a href=\"${sampleURL}\">ArcGIS</a>`\n};\nexport const xyzTiles = {\n  id: 'xyz',\n  name: 'XYZ Tile layer',\n  description: 'Add map from a generic tile layer',\n  isBaseMap: true,\n  create: async (map, options, eventBus, theme) => ({\n    init: () => {\n      const cfg = Object.assign({}, options.config);\n\n      if (!cfg.url) {\n        var _cfg$attribution;\n\n        cfg.url = defaultXYZConfig.url;\n        cfg.attribution = (_cfg$attribution = cfg.attribution) !== null && _cfg$attribution !== void 0 ? _cfg$attribution : defaultXYZConfig.attribution;\n      }\n\n      return new TileLayer({\n        source: new XYZ({\n          url: cfg.url,\n          attributions: cfg.attribution // singular?\n\n        }),\n        minZoom: cfg.minZoom,\n        maxZoom: cfg.maxZoom\n      });\n    },\n    registerOptionsUI: builder => {\n      builder.addTextInput({\n        path: 'config.url',\n        name: 'URL template',\n        description: 'Must include {x}, {y} or {-y}, and {z} placeholders',\n        settings: {\n          placeholder: defaultXYZConfig.url\n        }\n      }).addTextInput({\n        path: 'config.attribution',\n        name: 'Attribution',\n        settings: {\n          placeholder: defaultXYZConfig.attribution\n        }\n      });\n    }\n  })\n};\nexport const genericLayers = [xyzTiles];","map":{"version":3,"names":["TileLayer","XYZ","sampleURL","defaultXYZConfig","url","attribution","xyzTiles","id","name","description","isBaseMap","create","map","options","eventBus","theme","init","cfg","config","source","attributions","minZoom","maxZoom","registerOptionsUI","builder","addTextInput","path","settings","placeholder","genericLayers"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/layers/basemaps/generic.ts"],"sourcesContent":["import Map from 'ol/Map';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n\nimport { MapLayerRegistryItem, MapLayerOptions, GrafanaTheme2, EventBus } from '@grafana/data';\n\nexport interface XYZConfig {\n  url: string;\n  attribution: string;\n  minZoom?: number;\n  maxZoom?: number;\n}\n\nconst sampleURL = 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer';\nexport const defaultXYZConfig: XYZConfig = {\n  url: sampleURL + '/tile/{z}/{y}/{x}',\n  attribution: `Tiles © <a href=\"${sampleURL}\">ArcGIS</a>`,\n};\n\nexport const xyzTiles: MapLayerRegistryItem<XYZConfig> = {\n  id: 'xyz',\n  name: 'XYZ Tile layer',\n  description: 'Add map from a generic tile layer',\n  isBaseMap: true,\n\n  create: async (map: Map, options: MapLayerOptions<XYZConfig>, eventBus: EventBus, theme: GrafanaTheme2) => ({\n    init: () => {\n      const cfg = { ...options.config };\n      if (!cfg.url) {\n        cfg.url = defaultXYZConfig.url;\n        cfg.attribution = cfg.attribution ?? defaultXYZConfig.attribution;\n      }\n      return new TileLayer({\n        source: new XYZ({\n          url: cfg.url,\n          attributions: cfg.attribution, // singular?\n        }),\n        minZoom: cfg.minZoom,\n        maxZoom: cfg.maxZoom,\n      });\n    },\n    registerOptionsUI: (builder) => {\n      builder\n        .addTextInput({\n          path: 'config.url',\n          name: 'URL template',\n          description: 'Must include {x}, {y} or {-y}, and {z} placeholders',\n          settings: {\n            placeholder: defaultXYZConfig.url,\n          },\n        })\n        .addTextInput({\n          path: 'config.attribution',\n          name: 'Attribution',\n          settings: {\n            placeholder: defaultXYZConfig.attribution,\n          },\n        });\n    },\n  }),\n};\n\nexport const genericLayers = [xyzTiles];\n"],"mappings":"AACA,OAAOA,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAWA,MAAMC,SAAS,GAAG,iFAAlB;AACA,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,GAAG,EAAEF,SAAS,GAAG,mBADwB;EAEzCG,WAAW,EAAG,oBAAmBH,SAAU;AAFF,CAApC;AAKP,OAAO,MAAMI,QAAyC,GAAG;EACvDC,EAAE,EAAE,KADmD;EAEvDC,IAAI,EAAE,gBAFiD;EAGvDC,WAAW,EAAE,mCAH0C;EAIvDC,SAAS,EAAE,IAJ4C;EAMvDC,MAAM,EAAE,OAAOC,GAAP,EAAiBC,OAAjB,EAAsDC,QAAtD,EAA0EC,KAA1E,MAAoG;IAC1GC,IAAI,EAAE,MAAM;MACV,MAAMC,GAAG,qBAAQJ,OAAO,CAACK,MAAhB,CAAT;;MACA,IAAI,CAACD,GAAG,CAACb,GAAT,EAAc;QAAA;;QACZa,GAAG,CAACb,GAAJ,GAAUD,gBAAgB,CAACC,GAA3B;QACAa,GAAG,CAACZ,WAAJ,uBAAkBY,GAAG,CAACZ,WAAtB,+DAAqCF,gBAAgB,CAACE,WAAtD;MACD;;MACD,OAAO,IAAIL,SAAJ,CAAc;QACnBmB,MAAM,EAAE,IAAIlB,GAAJ,CAAQ;UACdG,GAAG,EAAEa,GAAG,CAACb,GADK;UAEdgB,YAAY,EAAEH,GAAG,CAACZ,WAFJ,CAEiB;;QAFjB,CAAR,CADW;QAKnBgB,OAAO,EAAEJ,GAAG,CAACI,OALM;QAMnBC,OAAO,EAAEL,GAAG,CAACK;MANM,CAAd,CAAP;IAQD,CAfyG;IAgB1GC,iBAAiB,EAAGC,OAAD,IAAa;MAC9BA,OAAO,CACJC,YADH,CACgB;QACZC,IAAI,EAAE,YADM;QAEZlB,IAAI,EAAE,cAFM;QAGZC,WAAW,EAAE,qDAHD;QAIZkB,QAAQ,EAAE;UACRC,WAAW,EAAEzB,gBAAgB,CAACC;QADtB;MAJE,CADhB,EASGqB,YATH,CASgB;QACZC,IAAI,EAAE,oBADM;QAEZlB,IAAI,EAAE,aAFM;QAGZmB,QAAQ,EAAE;UACRC,WAAW,EAAEzB,gBAAgB,CAACE;QADtB;MAHE,CAThB;IAgBD;EAjCyG,CAApG;AAN+C,CAAlD;AA2CP,OAAO,MAAMwB,aAAa,GAAG,CAACvB,QAAD,CAAtB"},"metadata":{},"sourceType":"module"}