{"ast":null,"code":"var _p, _Container, _Legend, _Button;\n\nimport React, { useState } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Field, Input, Button, Legend, Container, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const VerifyEmail = () => {\n  const notifyApp = useAppNotification();\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = formModel => {\n    getBackendSrv().post('/api/user/signup', formModel).then(() => {\n      setEmailSent(true);\n    }).catch(err => {\n      var _err$data;\n\n      const msg = ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) || err;\n      notifyApp.warning(msg);\n    });\n  };\n\n  if (emailSent) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [_p || (_p = /*#__PURE__*/_jsx(\"p\", {\n        children: \"An email with a verification link has been sent to the email address. You should receive it shortly.\"\n      })), _Container || (_Container = /*#__PURE__*/_jsx(Container, {\n        margin: \"md\"\n      })), /*#__PURE__*/_jsx(LinkButton, {\n        variant: \"primary\",\n        href: getConfig().appSubUrl + '/signup',\n        children: \"Complete Signup\"\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Form, {\n    onSubmit: onSubmit,\n    children: ({\n      register,\n      errors\n    }) => {\n      var _errors$email;\n\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [_Legend || (_Legend = /*#__PURE__*/_jsx(Legend, {\n          children: \"Verify Email\"\n        })), /*#__PURE__*/_jsx(Field, {\n          label: \"Email\",\n          description: \"Enter your email address to get a verification link sent to you\",\n          invalid: !!errors.email,\n          error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          children: /*#__PURE__*/_jsx(Input, Object.assign({\n            id: \"email\"\n          }, register('email', {\n            required: 'Email is required',\n            pattern: {\n              value: /^\\S+@\\S+$/,\n              message: 'Email is invalid'\n            }\n          }), {\n            placeholder: \"Email\"\n          }))\n        }), /*#__PURE__*/_jsxs(HorizontalGroup, {\n          children: [_Button || (_Button = /*#__PURE__*/_jsx(Button, {\n            type: \"submit\",\n            children: \"Send verification email\"\n          })), /*#__PURE__*/_jsx(LinkButton, {\n            fill: \"text\",\n            href: getConfig().appSubUrl + '/login',\n            children: \"Back to login\"\n          })]\n        })]\n      });\n    }\n  });\n};","map":{"version":3,"names":["React","useState","getBackendSrv","Form","Field","Input","Button","Legend","Container","HorizontalGroup","LinkButton","getConfig","useAppNotification","VerifyEmail","notifyApp","emailSent","setEmailSent","onSubmit","formModel","post","then","catch","err","msg","data","message","warning","appSubUrl","register","errors","email","required","pattern","value"],"sources":["/home/soula/grafana/public/app/core/components/Signup/VerifyEmail.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Field, Input, Button, Legend, Container, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\n\ninterface EmailDTO {\n  email: string;\n}\n\nexport const VerifyEmail: FC = () => {\n  const notifyApp = useAppNotification();\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = (formModel: EmailDTO) => {\n    getBackendSrv()\n      .post('/api/user/signup', formModel)\n      .then(() => {\n        setEmailSent(true);\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        notifyApp.warning(msg);\n      });\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a verification link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={getConfig().appSubUrl + '/signup'}>\n          Complete Signup\n        </LinkButton>\n      </div>\n    );\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Verify Email</Legend>\n          <Field\n            label=\"Email\"\n            description=\"Enter your email address to get a verification link sent to you\"\n            invalid={!!errors.email}\n            error={errors.email?.message}\n          >\n            <Input\n              id=\"email\"\n              {...register('email', {\n                required: 'Email is required',\n                pattern: {\n                  value: /^\\S+@\\S+$/,\n                  message: 'Email is invalid',\n                },\n              })}\n              placeholder=\"Email\"\n            />\n          </Field>\n          <HorizontalGroup>\n            <Button type=\"submit\">Send verification email</Button>\n            <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n        </>\n      )}\n    </Form>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,eAAxD,EAAyEC,UAAzE,QAA2F,aAA3F;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;;;AAMA,OAAO,MAAMC,WAAe,GAAG,MAAM;EACnC,MAAMC,SAAS,GAAGF,kBAAkB,EAApC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMgB,QAAQ,GAAIC,SAAD,IAAyB;IACxChB,aAAa,GACViB,IADH,CACQ,kBADR,EAC4BD,SAD5B,EAEGE,IAFH,CAEQ,MAAM;MACVJ,YAAY,CAAC,IAAD,CAAZ;IACD,CAJH,EAKGK,KALH,CAKUC,GAAD,IAAS;MAAA;;MACd,MAAMC,GAAG,GAAG,cAAAD,GAAG,CAACE,IAAJ,wDAAUC,OAAV,KAAqBH,GAAjC;MACAR,SAAS,CAACY,OAAV,CAAkBH,GAAlB;IACD,CARH;EASD,CAVD;;EAYA,IAAIR,SAAJ,EAAe;IACb,oBACE;MAAA,oCACE;QAAA;MAAA,EADF,4CAEE,KAAC,SAAD;QAAW,MAAM,EAAC;MAAlB,EAFF,gBAGE,KAAC,UAAD;QAAY,OAAO,EAAC,SAApB;QAA8B,IAAI,EAAEJ,SAAS,GAAGgB,SAAZ,GAAwB,SAA5D;QAAA;MAAA,EAHF;IAAA,EADF;EASD;;EAED,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEV,QAAhB;IAAA,UACG,CAAC;MAAEW,QAAF;MAAYC;IAAZ,CAAD;MAAA;;MAAA,oBACC;QAAA,8CACE,KAAC,MAAD;UAAA;QAAA,EADF,gBAEE,KAAC,KAAD;UACE,KAAK,EAAC,OADR;UAEE,WAAW,EAAC,iEAFd;UAGE,OAAO,EAAE,CAAC,CAACA,MAAM,CAACC,KAHpB;UAIE,KAAK,mBAAED,MAAM,CAACC,KAAT,kDAAE,cAAcL,OAJvB;UAAA,uBAME,KAAC,KAAD;YACE,EAAE,EAAC;UADL,GAEMG,QAAQ,CAAC,OAAD,EAAU;YACpBG,QAAQ,EAAE,mBADU;YAEpBC,OAAO,EAAE;cACPC,KAAK,EAAE,WADA;cAEPR,OAAO,EAAE;YAFF;UAFW,CAAV,CAFd;YASE,WAAW,EAAC;UATd;QANF,EAFF,eAoBE,MAAC,eAAD;UAAA,8CACE,KAAC,MAAD;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA,EADF,gBAEE,KAAC,UAAD;YAAY,IAAI,EAAC,MAAjB;YAAwB,IAAI,EAAEd,SAAS,GAAGgB,SAAZ,GAAwB,QAAtD;YAAA;UAAA,EAFF;QAAA,EApBF;MAAA,EADD;IAAA;EADH,EADF;AAiCD,CA7DM"},"metadata":{},"sourceType":"module"}