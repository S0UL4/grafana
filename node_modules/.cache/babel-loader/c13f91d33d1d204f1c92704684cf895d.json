{"ast":null,"code":"import React, { useState } from 'react';\nimport { LinkSettingsEdit, LinkSettingsList } from '../LinksSettings';\nimport { newLink } from '../LinksSettings/LinkSettingsEdit';\nimport { DashboardSettingsHeader } from './DashboardSettingsHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const LinksSettings = ({\n  dashboard\n}) => {\n  const [editIdx, setEditIdx] = useState(null);\n\n  const onGoBack = () => {\n    setEditIdx(null);\n  };\n\n  const onNew = () => {\n    dashboard.links = [...dashboard.links, Object.assign({}, newLink)];\n    setEditIdx(dashboard.links.length - 1);\n  };\n\n  const onEdit = idx => {\n    setEditIdx(idx);\n  };\n\n  const isEditing = editIdx !== null;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DashboardSettingsHeader, {\n      onGoBack: onGoBack,\n      title: \"Dashboard links\",\n      isEditing: isEditing\n    }), !isEditing && /*#__PURE__*/_jsx(LinkSettingsList, {\n      dashboard: dashboard,\n      onNew: onNew,\n      onEdit: onEdit\n    }), isEditing && /*#__PURE__*/_jsx(LinkSettingsEdit, {\n      dashboard: dashboard,\n      editLinkIdx: editIdx,\n      onGoBack: onGoBack\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","LinkSettingsEdit","LinkSettingsList","newLink","DashboardSettingsHeader","LinksSettings","dashboard","editIdx","setEditIdx","onGoBack","onNew","links","length","onEdit","idx","isEditing"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardSettings/LinksSettings.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { LinkSettingsEdit, LinkSettingsList } from '../LinksSettings';\nimport { newLink } from '../LinksSettings/LinkSettingsEdit';\n\nimport { DashboardSettingsHeader } from './DashboardSettingsHeader';\ninterface Props {\n  dashboard: DashboardModel;\n}\n\nexport type LinkSettingsMode = 'list' | 'new' | 'edit';\n\nexport const LinksSettings: React.FC<Props> = ({ dashboard }) => {\n  const [editIdx, setEditIdx] = useState<number | null>(null);\n\n  const onGoBack = () => {\n    setEditIdx(null);\n  };\n\n  const onNew = () => {\n    dashboard.links = [...dashboard.links, { ...newLink }];\n    setEditIdx(dashboard.links.length - 1);\n  };\n\n  const onEdit = (idx: number) => {\n    setEditIdx(idx);\n  };\n\n  const isEditing = editIdx !== null;\n\n  return (\n    <>\n      <DashboardSettingsHeader onGoBack={onGoBack} title=\"Dashboard links\" isEditing={isEditing} />\n      {!isEditing && <LinkSettingsList dashboard={dashboard} onNew={onNew} onEdit={onEdit} />}\n      {isEditing && <LinkSettingsEdit dashboard={dashboard} editLinkIdx={editIdx!} onGoBack={onGoBack} />}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,kBAAnD;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;;;;AAOA,OAAO,MAAMC,aAA8B,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAmB;EAC/D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAgB,IAAhB,CAAtC;;EAEA,MAAMS,QAAQ,GAAG,MAAM;IACrBD,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,MAAME,KAAK,GAAG,MAAM;IAClBJ,SAAS,CAACK,KAAV,GAAkB,CAAC,GAAGL,SAAS,CAACK,KAAd,oBAA0BR,OAA1B,EAAlB;IACAK,UAAU,CAACF,SAAS,CAACK,KAAV,CAAgBC,MAAhB,GAAyB,CAA1B,CAAV;EACD,CAHD;;EAKA,MAAMC,MAAM,GAAIC,GAAD,IAAiB;IAC9BN,UAAU,CAACM,GAAD,CAAV;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAGR,OAAO,KAAK,IAA9B;EAEA,oBACE;IAAA,wBACE,KAAC,uBAAD;MAAyB,QAAQ,EAAEE,QAAnC;MAA6C,KAAK,EAAC,iBAAnD;MAAqE,SAAS,EAAEM;IAAhF,EADF,EAEG,CAACA,SAAD,iBAAc,KAAC,gBAAD;MAAkB,SAAS,EAAET,SAA7B;MAAwC,KAAK,EAAEI,KAA/C;MAAsD,MAAM,EAAEG;IAA9D,EAFjB,EAGGE,SAAS,iBAAI,KAAC,gBAAD;MAAkB,SAAS,EAAET,SAA7B;MAAwC,WAAW,EAAEC,OAArD;MAA+D,QAAQ,EAAEE;IAAzE,EAHhB;EAAA,EADF;AAOD,CAzBM"},"metadata":{},"sourceType":"module"}