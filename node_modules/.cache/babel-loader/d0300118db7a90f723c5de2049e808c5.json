{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { ConfirmModal, stylesFactory, useTheme } from '@grafana/ui';\nimport { deleteFoldersAndDashboards } from 'app/features/manage-dashboards/state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ConfirmDeleteModal = ({\n  results,\n  onDeleteItems,\n  isOpen,\n  onDismiss\n}) => {\n  var _results$get, _results$get2;\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const dashboards = Array.from((_results$get = results.get('dashboard')) !== null && _results$get !== void 0 ? _results$get : []);\n  const folders = Array.from((_results$get2 = results.get('folder')) !== null && _results$get2 !== void 0 ? _results$get2 : []);\n  const folderCount = folders.length;\n  const dashCount = dashboards.length;\n  let text = 'Do you want to delete the ';\n  let subtitle;\n  const dashEnding = dashCount === 1 ? '' : 's';\n  const folderEnding = folderCount === 1 ? '' : 's';\n\n  if (folderCount > 0 && dashCount > 0) {\n    text += `selected folder${folderEnding} and dashboard${dashEnding}?\\n`;\n    subtitle = `All dashboards and alerts of the selected folder${folderEnding} will also be deleted`;\n  } else if (folderCount > 0) {\n    text += `selected folder${folderEnding} and all ${folderCount === 1 ? 'its' : 'their'} dashboards and alerts?`;\n  } else {\n    text += `${dashCount} selected dashboard${dashEnding}?`;\n  }\n\n  const deleteItems = () => {\n    deleteFoldersAndDashboards(folders, dashboards).then(() => {\n      onDeleteItems();\n      onDismiss();\n    });\n  };\n\n  return isOpen ? /*#__PURE__*/_jsx(ConfirmModal, {\n    isOpen: isOpen,\n    title: \"Delete\",\n    body: /*#__PURE__*/_jsxs(_Fragment, {\n      children: [text, \" \", subtitle && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.subtitle,\n        children: subtitle\n      })]\n    }),\n    confirmText: \"Delete\",\n    onConfirm: deleteItems,\n    onDismiss: onDismiss\n  }) : null;\n};\nconst getStyles = stylesFactory(theme => {\n  return {\n    subtitle: css`\n      font-size: ${theme.typography.size.base};\n      padding-top: ${theme.spacing.md};\n    `\n  };\n});","map":{"version":3,"names":["css","React","ConfirmModal","stylesFactory","useTheme","deleteFoldersAndDashboards","ConfirmDeleteModal","results","onDeleteItems","isOpen","onDismiss","theme","styles","getStyles","dashboards","Array","from","get","folders","folderCount","length","dashCount","text","subtitle","dashEnding","folderEnding","deleteItems","then","typography","size","base","spacing","md"],"sources":["/home/soula/grafana/public/app/features/search/page/components/ConfirmDeleteModal.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { ConfirmModal, stylesFactory, useTheme } from '@grafana/ui';\nimport { deleteFoldersAndDashboards } from 'app/features/manage-dashboards/state/actions';\n\nimport { OnMoveOrDeleleSelectedItems } from '../../types';\n\ninterface Props {\n  onDeleteItems: OnMoveOrDeleleSelectedItems;\n  results: Map<string, Set<string>>;\n  isOpen: boolean;\n  onDismiss: () => void;\n}\n\nexport const ConfirmDeleteModal: FC<Props> = ({ results, onDeleteItems, isOpen, onDismiss }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const dashboards = Array.from(results.get('dashboard') ?? []);\n  const folders = Array.from(results.get('folder') ?? []);\n\n  const folderCount = folders.length;\n  const dashCount = dashboards.length;\n\n  let text = 'Do you want to delete the ';\n  let subtitle;\n  const dashEnding = dashCount === 1 ? '' : 's';\n  const folderEnding = folderCount === 1 ? '' : 's';\n\n  if (folderCount > 0 && dashCount > 0) {\n    text += `selected folder${folderEnding} and dashboard${dashEnding}?\\n`;\n    subtitle = `All dashboards and alerts of the selected folder${folderEnding} will also be deleted`;\n  } else if (folderCount > 0) {\n    text += `selected folder${folderEnding} and all ${folderCount === 1 ? 'its' : 'their'} dashboards and alerts?`;\n  } else {\n    text += `${dashCount} selected dashboard${dashEnding}?`;\n  }\n\n  const deleteItems = () => {\n    deleteFoldersAndDashboards(folders, dashboards).then(() => {\n      onDeleteItems();\n      onDismiss();\n    });\n  };\n\n  return isOpen ? (\n    <ConfirmModal\n      isOpen={isOpen}\n      title=\"Delete\"\n      body={\n        <>\n          {text} {subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n        </>\n      }\n      confirmText=\"Delete\"\n      onConfirm={deleteItems}\n      onDismiss={onDismiss}\n    />\n  ) : null;\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    subtitle: css`\n      font-size: ${theme.typography.size.base};\n      padding-top: ${theme.spacing.md};\n    `,\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,aAAtD;AACA,SAASC,0BAAT,QAA2C,8CAA3C;;;;AAWA,OAAO,MAAMC,kBAA6B,GAAG,CAAC;EAAEC,OAAF;EAAWC,aAAX;EAA0BC,MAA1B;EAAkCC;AAAlC,CAAD,KAAmD;EAAA;;EAC9F,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;EACA,MAAMQ,MAAM,GAAGC,SAAS,CAACF,KAAD,CAAxB;EAEA,MAAMG,UAAU,GAAGC,KAAK,CAACC,IAAN,iBAAWT,OAAO,CAACU,GAAR,CAAY,WAAZ,CAAX,uDAAuC,EAAvC,CAAnB;EACA,MAAMC,OAAO,GAAGH,KAAK,CAACC,IAAN,kBAAWT,OAAO,CAACU,GAAR,CAAY,QAAZ,CAAX,yDAAoC,EAApC,CAAhB;EAEA,MAAME,WAAW,GAAGD,OAAO,CAACE,MAA5B;EACA,MAAMC,SAAS,GAAGP,UAAU,CAACM,MAA7B;EAEA,IAAIE,IAAI,GAAG,4BAAX;EACA,IAAIC,QAAJ;EACA,MAAMC,UAAU,GAAGH,SAAS,KAAK,CAAd,GAAkB,EAAlB,GAAuB,GAA1C;EACA,MAAMI,YAAY,GAAGN,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyB,GAA9C;;EAEA,IAAIA,WAAW,GAAG,CAAd,IAAmBE,SAAS,GAAG,CAAnC,EAAsC;IACpCC,IAAI,IAAK,kBAAiBG,YAAa,iBAAgBD,UAAW,KAAlE;IACAD,QAAQ,GAAI,mDAAkDE,YAAa,uBAA3E;EACD,CAHD,MAGO,IAAIN,WAAW,GAAG,CAAlB,EAAqB;IAC1BG,IAAI,IAAK,kBAAiBG,YAAa,YAAWN,WAAW,KAAK,CAAhB,GAAoB,KAApB,GAA4B,OAAQ,yBAAtF;EACD,CAFM,MAEA;IACLG,IAAI,IAAK,GAAED,SAAU,sBAAqBG,UAAW,GAArD;EACD;;EAED,MAAME,WAAW,GAAG,MAAM;IACxBrB,0BAA0B,CAACa,OAAD,EAAUJ,UAAV,CAA1B,CAAgDa,IAAhD,CAAqD,MAAM;MACzDnB,aAAa;MACbE,SAAS;IACV,CAHD;EAID,CALD;;EAOA,OAAOD,MAAM,gBACX,KAAC,YAAD;IACE,MAAM,EAAEA,MADV;IAEE,KAAK,EAAC,QAFR;IAGE,IAAI,eACF;MAAA,WACGa,IADH,OACUC,QAAQ,iBAAI;QAAK,SAAS,EAAEX,MAAM,CAACW,QAAvB;QAAA,UAAkCA;MAAlC,EADtB;IAAA,EAJJ;IAQE,WAAW,EAAC,QARd;IASE,SAAS,EAAEG,WATb;IAUE,SAAS,EAAEhB;EAVb,EADW,GAaT,IAbJ;AAcD,CA7CM;AA+CP,MAAMG,SAAS,GAAGV,aAAa,CAAEQ,KAAD,IAAyB;EACvD,OAAO;IACLY,QAAQ,EAAEvB,GAAI;AAClB,mBAAmBW,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBC,IAAK;AAC9C,qBAAqBnB,KAAK,CAACoB,OAAN,CAAcC,EAAG;AACtC;EAJS,CAAP;AAMD,CAP8B,CAA/B"},"metadata":{},"sourceType":"module"}