{"ast":null,"code":"import { useCallback, useState } from 'react';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState({\n    time: {\n      current: [0, 1]\n    }\n  });\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update) {\n    setViewRange(prevRange => {\n      const time = Object.assign({}, prevRange.time, update);\n      return Object.assign({}, prevRange, {\n        time\n      });\n    });\n  }, []);\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start, end) {\n    const current = [start, end];\n    const time = {\n      current\n    };\n    setViewRange(prevRange => {\n      return Object.assign({}, prevRange, {\n        time\n      });\n    });\n  }, []);\n  return {\n    viewRange,\n    updateViewRangeTime,\n    updateNextViewRangeTime\n  };\n}","map":{"version":3,"names":["useCallback","useState","useViewRange","viewRange","setViewRange","time","current","updateNextViewRangeTime","update","prevRange","updateViewRangeTime","start","end"],"sources":["/home/soula/grafana/public/app/features/explore/TraceView/useViewRange.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange((prevRange): ViewRange => {\n      const time = { ...prevRange.time, ...update };\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange((prevRange): ViewRange => {\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAIA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAT,GAAwB;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAY;IACpDI,IAAI,EAAE;MACJC,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;IADL;EAD8C,CAAZ,CAA1C;EAMA,MAAMC,uBAAuB,GAAGP,WAAW,CAAC,SAASO,uBAAT,CAAiCC,MAAjC,EAA8D;IACxGJ,YAAY,CAAEK,SAAD,IAA0B;MACrC,MAAMJ,IAAI,qBAAQI,SAAS,CAACJ,IAAlB,EAA2BG,MAA3B,CAAV;MACA,yBAAYC,SAAZ;QAAuBJ;MAAvB;IACD,CAHW,CAAZ;EAID,CAL0C,EAKxC,EALwC,CAA3C;EAOA,MAAMK,mBAAmB,GAAGV,WAAW,CAAC,SAASU,mBAAT,CAA6BC,KAA7B,EAA4CC,GAA5C,EAAyD;IAC/F,MAAMN,OAAyB,GAAG,CAACK,KAAD,EAAQC,GAAR,CAAlC;IACA,MAAMP,IAAI,GAAG;MAAEC;IAAF,CAAb;IACAF,YAAY,CAAEK,SAAD,IAA0B;MACrC,yBAAYA,SAAZ;QAAuBJ;MAAvB;IACD,CAFW,CAAZ;EAGD,CANsC,EAMpC,EANoC,CAAvC;EAQA,OAAO;IAAEF,SAAF;IAAaO,mBAAb;IAAkCH;EAAlC,CAAP;AACD"},"metadata":{},"sourceType":"module"}