{"ast":null,"code":"import debounce from 'debounce-promise';\nimport React from 'react';\nimport { AsyncSelect } from '@grafana/ui';\nimport { backendSrv } from 'app/core/services/backend_srv';\n/**\n * @deprecated prefer using dashboard uid rather than id\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @deprecated prefer using dashboard uid rather than id\n */\nexport const DashboardPickerByID = ({\n  onChange: propsOnChange,\n  value,\n  width,\n  isClearable = false,\n  invalid,\n  disabled,\n  id,\n  optionLabel = 'label',\n  excludedDashboards\n}) => {\n  const debouncedSearch = debounce(query => getDashboards(query || '', optionLabel, excludedDashboards), 300);\n  const option = value ? {\n    value,\n    [optionLabel]: value[optionLabel]\n  } : undefined;\n\n  const onChange = item => {\n    propsOnChange(item === null || item === void 0 ? void 0 : item.value);\n  };\n\n  return /*#__PURE__*/_jsx(AsyncSelect, {\n    inputId: id,\n    width: width,\n    isClearable: isClearable,\n    defaultOptions: true,\n    loadOptions: debouncedSearch,\n    onChange: onChange,\n    placeholder: \"Select dashboard\",\n    noOptionsMessage: \"No dashboards found\",\n    value: option,\n    invalid: invalid,\n    disabled: disabled,\n    getOptionLabel: option => option[optionLabel]\n  });\n};\n\nasync function getDashboards(query, label, excludedDashboards) {\n  const result = await backendSrv.search({\n    type: 'dash-db',\n    query,\n    limit: 100\n  });\n  const dashboards = result.map(({\n    id,\n    uid = '',\n    title,\n    folderTitle\n  }) => {\n    const value = {\n      id,\n      uid,\n      [label]: `${folderTitle !== null && folderTitle !== void 0 ? folderTitle : 'General'}/${title}`\n    };\n    return {\n      value,\n      [label]: value[label]\n    };\n  });\n\n  if (excludedDashboards) {\n    return dashboards.filter(({\n      value\n    }) => !excludedDashboards.includes(value.uid));\n  }\n\n  return dashboards;\n}","map":{"version":3,"names":["debounce","React","AsyncSelect","backendSrv","DashboardPickerByID","onChange","propsOnChange","value","width","isClearable","invalid","disabled","id","optionLabel","excludedDashboards","debouncedSearch","query","getDashboards","option","undefined","item","label","result","search","type","limit","dashboards","map","uid","title","folderTitle","filter","includes"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/DashboardPickerByID.tsx"],"sourcesContent":["import debounce from 'debounce-promise';\nimport React, { FC } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { AsyncSelect } from '@grafana/ui';\nimport { backendSrv } from 'app/core/services/backend_srv';\n\n/**\n * @deprecated prefer using dashboard uid rather than id\n */\nexport interface DashboardPickerItem {\n  id: number;\n  uid: string;\n  [key: string]: string | number;\n}\n\ninterface Props {\n  onChange: (dashboard?: DashboardPickerItem) => void;\n  value?: DashboardPickerItem;\n  width?: number;\n  isClearable?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  id?: string;\n  optionLabel?: string;\n  /** List of dashboard UIDs to be excluded from the select options */\n  excludedDashboards?: string[];\n}\n\n/**\n * @deprecated prefer using dashboard uid rather than id\n */\nexport const DashboardPickerByID: FC<Props> = ({\n  onChange: propsOnChange,\n  value,\n  width,\n  isClearable = false,\n  invalid,\n  disabled,\n  id,\n  optionLabel = 'label',\n  excludedDashboards,\n}) => {\n  const debouncedSearch = debounce((query: string) => getDashboards(query || '', optionLabel, excludedDashboards), 300);\n  const option = value ? { value, [optionLabel]: value[optionLabel] } : undefined;\n  const onChange = (item: SelectableValue<DashboardPickerItem>) => {\n    propsOnChange(item?.value);\n  };\n\n  return (\n    <AsyncSelect\n      inputId={id}\n      width={width}\n      isClearable={isClearable}\n      defaultOptions={true}\n      loadOptions={debouncedSearch}\n      onChange={onChange}\n      placeholder=\"Select dashboard\"\n      noOptionsMessage=\"No dashboards found\"\n      value={option}\n      invalid={invalid}\n      disabled={disabled}\n      getOptionLabel={(option) => option[optionLabel]}\n    />\n  );\n};\n\nasync function getDashboards(\n  query: string,\n  label: string,\n  excludedDashboards?: string[]\n): Promise<Array<SelectableValue<DashboardPickerItem>>> {\n  const result = await backendSrv.search({ type: 'dash-db', query, limit: 100 });\n  const dashboards = result.map(({ id, uid = '', title, folderTitle }) => {\n    const value: DashboardPickerItem = {\n      id,\n      uid,\n      [label]: `${folderTitle ?? 'General'}/${title}`,\n    };\n\n    return { value, [label]: value[label] };\n  });\n\n  if (excludedDashboards) {\n    return dashboards.filter(({ value }) => !excludedDashboards.includes(value.uid as string));\n  }\n\n  return dashboards;\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,+BAA3B;AAEA;AACA;AACA;;;;AAoBA;AACA;AACA;AACA,OAAO,MAAMC,mBAA8B,GAAG,CAAC;EAC7CC,QAAQ,EAAEC,aADmC;EAE7CC,KAF6C;EAG7CC,KAH6C;EAI7CC,WAAW,GAAG,KAJ+B;EAK7CC,OAL6C;EAM7CC,QAN6C;EAO7CC,EAP6C;EAQ7CC,WAAW,GAAG,OAR+B;EAS7CC;AAT6C,CAAD,KAUxC;EACJ,MAAMC,eAAe,GAAGf,QAAQ,CAAEgB,KAAD,IAAmBC,aAAa,CAACD,KAAK,IAAI,EAAV,EAAcH,WAAd,EAA2BC,kBAA3B,CAAjC,EAAiF,GAAjF,CAAhC;EACA,MAAMI,MAAM,GAAGX,KAAK,GAAG;IAAEA,KAAF;IAAS,CAACM,WAAD,GAAeN,KAAK,CAACM,WAAD;EAA7B,CAAH,GAAkDM,SAAtE;;EACA,MAAMd,QAAQ,GAAIe,IAAD,IAAgD;IAC/Dd,aAAa,CAACc,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEb,KAAP,CAAb;EACD,CAFD;;EAIA,oBACE,KAAC,WAAD;IACE,OAAO,EAAEK,EADX;IAEE,KAAK,EAAEJ,KAFT;IAGE,WAAW,EAAEC,WAHf;IAIE,cAAc,EAAE,IAJlB;IAKE,WAAW,EAAEM,eALf;IAME,QAAQ,EAAEV,QANZ;IAOE,WAAW,EAAC,kBAPd;IAQE,gBAAgB,EAAC,qBARnB;IASE,KAAK,EAAEa,MATT;IAUE,OAAO,EAAER,OAVX;IAWE,QAAQ,EAAEC,QAXZ;IAYE,cAAc,EAAGO,MAAD,IAAYA,MAAM,CAACL,WAAD;EAZpC,EADF;AAgBD,CAjCM;;AAmCP,eAAeI,aAAf,CACED,KADF,EAEEK,KAFF,EAGEP,kBAHF,EAIwD;EACtD,MAAMQ,MAAM,GAAG,MAAMnB,UAAU,CAACoB,MAAX,CAAkB;IAAEC,IAAI,EAAE,SAAR;IAAmBR,KAAnB;IAA0BS,KAAK,EAAE;EAAjC,CAAlB,CAArB;EACA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAP,CAAW,CAAC;IAAEf,EAAF;IAAMgB,GAAG,GAAG,EAAZ;IAAgBC,KAAhB;IAAuBC;EAAvB,CAAD,KAA0C;IACtE,MAAMvB,KAA0B,GAAG;MACjCK,EADiC;MAEjCgB,GAFiC;MAGjC,CAACP,KAAD,GAAU,GAAES,WAAH,aAAGA,WAAH,cAAGA,WAAH,GAAkB,SAAU,IAAGD,KAAM;IAHb,CAAnC;IAMA,OAAO;MAAEtB,KAAF;MAAS,CAACc,KAAD,GAASd,KAAK,CAACc,KAAD;IAAvB,CAAP;EACD,CARkB,CAAnB;;EAUA,IAAIP,kBAAJ,EAAwB;IACtB,OAAOY,UAAU,CAACK,MAAX,CAAkB,CAAC;MAAExB;IAAF,CAAD,KAAe,CAACO,kBAAkB,CAACkB,QAAnB,CAA4BzB,KAAK,CAACqB,GAAlC,CAAlC,CAAP;EACD;;EAED,OAAOF,UAAP;AACD"},"metadata":{},"sourceType":"module"}