{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { find, first, isArray, isString, escape } from 'lodash';\nimport { escapeStringForRegex, formattedValueToString, getValueFormat, stringStartsAsRegEx, stringToJsRegex, textUtil, unEscapeStringFromRegex, dateTimeFormatISO, dateTimeFormat } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { ColumnOptionsCtrl } from './column_options';\nexport class TableRenderer {\n  constructor(panel, table, timeZone, sanitize, templateSrv = getTemplateSrv(), theme) {\n    _defineProperty(this, \"formatters\", []);\n\n    _defineProperty(this, \"colorState\", void 0);\n\n    this.panel = panel;\n    this.table = table;\n    this.timeZone = timeZone;\n    this.sanitize = sanitize;\n    this.templateSrv = templateSrv;\n    this.theme = theme;\n    this.initColumns();\n  }\n\n  setTable(table) {\n    this.table = table;\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n        const escapedPattern = stringStartsAsRegEx(style.pattern) ? style.pattern : escapeStringForRegex(unEscapeStringFromRegex(style.pattern));\n        const regex = stringToJsRegex(escapedPattern);\n\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = textUtil.escapeHtml(column.text.replace(regex, style.alias));\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value, style) {\n    if (!style.thresholds || !style.colors) {\n      return null;\n    }\n\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return this.theme.visualization.getColorByName(style.colors[i]);\n      }\n    }\n\n    return this.theme.visualization.getColorByName(first(style.colors));\n  }\n\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return escape(v);\n    }\n  }\n\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return v => undefined;\n    }\n\n    if (column.style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (isArray(v)) {\n          v = v[0];\n        } // if is an epoch (numeric string and len > 12)\n\n\n        if (isString(v) && !isNaN(v) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n\n        if (!column.style.dateFormat) {\n          return dateTimeFormatISO(v, {\n            timeZone: this.timeZone\n          });\n        }\n\n        return dateTimeFormat(v, {\n          format: column.style.dateFormat,\n          timeZone: this.timeZone\n        });\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return v => {\n        if (isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n\n              continue;\n            } // Allow both numeric and string values to be mapped\n\n\n            if (!isString(v) && Number(map.value) === Number(v) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      const valueFormatter = getValueFormat(column.unit || column.style.unit);\n      return v => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (isNaN(v) || isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return formattedValueToString(valueFormatter(v, column.style.decimals, null));\n      };\n    }\n\n    return value => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value, style) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || isArray(value)) {\n      return;\n    }\n\n    const numericValue = Number(value);\n\n    if (isNaN(numericValue)) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex) {\n    const scopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = {\n        value: row[i],\n        text: row[i] ? row[i].toString() : ''\n      };\n    }\n\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex, value) {\n    const fmt = this.formatters[colIndex];\n\n    if (fmt) {\n      return fmt(value);\n    }\n\n    return value;\n  }\n\n  renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n    const column = this.table.columns[columnIndex];\n    const cellStyles = [];\n    let cellStyle = '';\n    const cellClasses = [];\n    let cellClass = '';\n\n    if (this.colorState.cell) {\n      cellStyles.push('background-color:' + this.colorState.cell);\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      cellStyles.push('color:' + this.colorState.value);\n      this.colorState.value = null;\n    } // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n\n\n    let columnHtml = '';\n\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      cellStyles.push('display:none');\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.hidden === true) {\n      return '';\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.align) {\n      const textAlign = find(ColumnOptionsCtrl.alignTypesEnum, ['text', column.style.align]);\n\n      if (textAlign && textAlign['value']) {\n        cellStyles.push(`text-align:${textAlign['value']}`);\n      }\n    }\n\n    if (cellStyles.length) {\n      cellStyle = ' style=\"' + cellStyles.join(';') + '\"';\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = {\n        value: value,\n        text: value ? value.toString() : ''\n      };\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const sanitizedCellLink = textUtil.sanitizeUrl(cellLink);\n      const cellLinkTooltip = textUtil.escapeHtml(this.templateSrv.replace(column.style.linkTooltip, scopedVars));\n      const cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n      cellClasses.push('table-panel-cell-link');\n      columnHtml += `<a href=\"${sanitizedCellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${cellStyle}>`;\n      columnHtml += `${value}`;\n      columnHtml += `</a>`;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">`;\n      columnHtml += `<i class=\"fa fa-search-minus\"></i>`;\n      columnHtml += `</a>`;\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">`;\n      columnHtml += `<i class=\"fa fa-search-plus\"></i>`;\n      columnHtml += `</a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + cellStyle + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = '';\n\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      const rowClasses = [];\n      let rowClass = '';\n\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    const rows = [];\n    const visibleColumns = this.table.columns.filter(column => !column.hidden);\n\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow = [];\n\n      for (let i = 0; i < this.table.columns.length; i++) {\n        if (!this.table.columns[i].hidden) {\n          newRow.push(this.formatColumnValue(i, row[i]));\n        }\n      }\n\n      rows.push(newRow);\n    }\n\n    return {\n      columns: visibleColumns,\n      rows: rows\n    };\n  }\n\n}","map":{"version":3,"names":["find","first","isArray","isString","escape","escapeStringForRegex","formattedValueToString","getValueFormat","stringStartsAsRegEx","stringToJsRegex","textUtil","unEscapeStringFromRegex","dateTimeFormatISO","dateTimeFormat","getTemplateSrv","ColumnOptionsCtrl","TableRenderer","constructor","panel","table","timeZone","sanitize","templateSrv","theme","initColumns","setTable","formatters","colorState","colIndex","columns","length","column","title","text","i","styles","style","escapedPattern","pattern","regex","match","alias","escapeHtml","replace","createColumnFormatter","getColorForValue","value","thresholds","colors","visualization","getColorByName","defaultCellFormatter","v","undefined","join","type","isNaN","parseInt","dateFormat","format","mappingType","valueMaps","map","Number","setColorState","rangeMaps","from","to","valueFormatter","unit","decimals","colorMode","numericValue","renderRowVariables","rowIndex","scopedVars","cellVariable","row","rows","toString","formatColumnValue","fmt","renderCell","columnIndex","addWidthHack","cellStyles","cellStyle","cellClasses","cellClass","cell","push","columnHtml","hidden","preserveFormat","align","textAlign","alignTypesEnum","link","cellLink","linkUrl","encodeURIComponent","sanitizedCellLink","sanitizeUrl","cellLinkTooltip","linkTooltip","cellTarget","linkTargetBlank","filterable","render","page","pageSize","startPos","endPos","Math","min","html","y","cellHtml","rowStyle","rowClasses","rowClass","render_values","visibleColumns","filter","newRow"],"sources":["/home/soula/grafana/public/app/plugins/panel/table-old/renderer.ts"],"sourcesContent":["import { find, first, isArray, isString, escape } from 'lodash';\n\nimport {\n  escapeStringForRegex,\n  formattedValueToString,\n  getValueFormat,\n  ScopedVars,\n  stringStartsAsRegEx,\n  stringToJsRegex,\n  textUtil,\n  unEscapeStringFromRegex,\n  TimeZone,\n  dateTimeFormatISO,\n  dateTimeFormat,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { ColumnOptionsCtrl } from './column_options';\nimport { ColumnRender, TableRenderModel, ColumnStyle } from './types';\n\nexport class TableRenderer {\n  formatters: any[] = [];\n  colorState: any;\n\n  constructor(\n    private panel: { styles: ColumnStyle[]; pageSize: number },\n    private table: TableRenderModel,\n    private timeZone: TimeZone,\n    private sanitize: (v: any) => any,\n    private templateSrv: TemplateSrv = getTemplateSrv(),\n    private theme: GrafanaTheme\n  ) {\n    this.initColumns();\n  }\n\n  setTable(table: TableRenderModel) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n\n        const escapedPattern = stringStartsAsRegEx(style.pattern)\n          ? style.pattern\n          : escapeStringForRegex(unEscapeStringFromRegex(style.pattern));\n        const regex = stringToJsRegex(escapedPattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = textUtil.escapeHtml(column.text.replace(regex, style.alias));\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value: number, style: ColumnStyle) {\n    if (!style.thresholds || !style.colors) {\n      return null;\n    }\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return this.theme.visualization.getColorByName(style.colors[i]);\n      }\n    }\n    return this.theme.visualization.getColorByName(first(style.colors));\n  }\n\n  defaultCellFormatter(v: any, style: ColumnStyle) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return escape(v);\n    }\n  }\n\n  createColumnFormatter(column: ColumnRender) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return (v: any): undefined => undefined;\n    }\n\n    if (column.style.type === 'date') {\n      return (v: any) => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (isArray(v)) {\n          v = v[0];\n        }\n\n        // if is an epoch (numeric string and len > 12)\n        if (isString(v) && !isNaN(v as any) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n\n        if (!column.style.dateFormat) {\n          return dateTimeFormatISO(v, {\n            timeZone: this.timeZone,\n          });\n        }\n\n        return dateTimeFormat(v, {\n          format: column.style.dateFormat,\n          timeZone: this.timeZone,\n        });\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return (v: any): any => {\n        if (isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            // Allow both numeric and string values to be mapped\n            if ((!isString(v) && Number(map.value) === Number(v)) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      const valueFormatter = getValueFormat(column.unit || column.style.unit);\n\n      return (v: any): any => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (isNaN(v) || isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return formattedValueToString(valueFormatter(v, column.style.decimals, null));\n      };\n    }\n\n    return (value: any) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value: any, style: ColumnStyle) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || isArray(value)) {\n      return;\n    }\n\n    const numericValue = Number(value);\n    if (isNaN(numericValue)) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex: number) {\n    const scopedVars: ScopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = { value: row[i], text: row[i] ? row[i].toString() : '' };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex: number, value: any) {\n    const fmt = this.formatters[colIndex];\n    if (fmt) {\n      return fmt(value);\n    }\n    return value;\n  }\n\n  renderCell(columnIndex: number, rowIndex: number, value: any, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n\n    const column = this.table.columns[columnIndex];\n    const cellStyles = [];\n    let cellStyle = '';\n    const cellClasses = [];\n    let cellClass = '';\n\n    if (this.colorState.cell) {\n      cellStyles.push('background-color:' + this.colorState.cell);\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      cellStyles.push('color:' + this.colorState.value);\n      this.colorState.value = null;\n    }\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    let columnHtml = '';\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      cellStyles.push('display:none');\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.hidden === true) {\n      return '';\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.align) {\n      const textAlign = find(ColumnOptionsCtrl.alignTypesEnum, ['text', column.style.align]);\n      if (textAlign && textAlign['value']) {\n        cellStyles.push(`text-align:${textAlign['value']}`);\n      }\n    }\n\n    if (cellStyles.length) {\n      cellStyle = ' style=\"' + cellStyles.join(';') + '\"';\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value, text: value ? value.toString() : '' };\n\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const sanitizedCellLink = textUtil.sanitizeUrl(cellLink);\n\n      const cellLinkTooltip = textUtil.escapeHtml(this.templateSrv.replace(column.style.linkTooltip, scopedVars));\n      const cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n\n      columnHtml += `<a href=\"${sanitizedCellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${cellStyle}>`;\n      columnHtml += `${value}`;\n      columnHtml += `</a>`;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">`;\n      columnHtml += `<i class=\"fa fa-search-minus\"></i>`;\n      columnHtml += `</a>`;\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">`;\n      columnHtml += `<i class=\"fa fa-search-plus\"></i>`;\n      columnHtml += `</a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + cellStyle + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page: number) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = '';\n\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      const rowClasses = [];\n      let rowClass = '';\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    const rows = [];\n    const visibleColumns = this.table.columns.filter((column) => !column.hidden);\n\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow = [];\n      for (let i = 0; i < this.table.columns.length; i++) {\n        if (!this.table.columns[i].hidden) {\n          newRow.push(this.formatColumnValue(i, row[i]));\n        }\n      }\n      rows.push(newRow);\n    }\n    return {\n      columns: visibleColumns,\n      rows: rows,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}