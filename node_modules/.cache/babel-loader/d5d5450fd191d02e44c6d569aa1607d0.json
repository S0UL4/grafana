{"ast":null,"code":"// NOTE: by default Component string selectors are set up to be aria-labels,\n// however there are many cases where your component may not need an aria-label\n// (a <button> with clear text, for example, does not need an aria-label as it's already labeled)\n// but you still might need to select it for testing,\n// in that case please add the attribute data-test-id={selector} in the component and\n// prefix your selector string with 'data-test-id' so that when create the selectors we know to search for it on the right attribute\n\n/**\n * Selectors grouped/defined in Components\n *\n * @alpha\n */\nexport const Components = {\n  TimePicker: {\n    openButton: 'data-testid TimePicker Open Button',\n    fromField: 'Time Range from field',\n    toField: 'Time Range to field',\n    applyTimeRange: 'data-testid TimePicker submit button',\n    calendar: {\n      label: 'Time Range calendar',\n      openButton: 'Open time range calendar',\n      closeButton: 'Close time range Calendar'\n    },\n    absoluteTimeRangeTitle: 'data-testid-absolute-time-range-narrow'\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value',\n        drop: 'TestData drop values'\n      }\n    },\n    DataSourceHttpSettings: {\n      urlInput: 'Datasource HTTP settings url'\n    },\n    Jaeger: {\n      traceIDInput: 'Trace ID'\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: 'Add exemplar config button',\n        internalLinkSwitch: 'Internal link switch'\n      },\n      exemplarMarker: 'Exemplar marker'\n    }\n  },\n  Menu: {\n    MenuComponent: title => `${title} menu`,\n    MenuGroup: title => `${title} menu group`,\n    MenuItem: title => `${title} menu item`,\n    SubMenu: {\n      container: 'SubMenu container',\n      icon: 'SubMenu icon'\n    }\n  },\n  Panels: {\n    Panel: {\n      title: title => `data-testid Panel header ${title}`,\n      headerItems: item => `Panel header item ${item}`,\n      containerByTitle: title => `${title} panel`,\n      headerCornerInfo: mode => `Panel header ${mode}`\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section'\n        },\n        Legend: {\n          legendItemAlias: name => `gpl alias ${name}`,\n          showLegendSwitch: 'gpl show legend'\n        },\n        xAxis: {\n          labels: () => 'div.flot-x-axis > div.flot-tick-label'\n        }\n      },\n      BarGauge: {\n        /**\n         * @deprecated use valueV2 from Grafana 8.3 instead\n         */\n        value: 'Bar gauge value',\n        valueV2: 'data-testid Bar gauge value'\n      },\n      PieChart: {\n        svgSlice: 'Pie Chart Slice'\n      },\n      Text: {\n        container: () => '.markdown-html'\n      },\n      Table: {\n        header: 'table header',\n        footer: 'table-footer'\n      }\n    }\n  },\n  VizLegend: {\n    seriesName: name => `VizLegend series ${name}`\n  },\n  Drawer: {\n    General: {\n      title: title => `Drawer title ${title}`,\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: () => '.drawer-content-wrapper'\n    }\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content'\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      select: 'Panel editor option pane select',\n      fieldLabel: type => `${type} field property editor`\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content'\n    },\n    applyButton: 'panel editor apply',\n    toggleVizPicker: 'toggle-viz-picker',\n    toggleVizOptions: 'toggle-viz-options',\n    toggleTableView: 'toggle-table-view'\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content'\n    },\n    Stats: {\n      content: 'Panel inspector Stats content'\n    },\n    Json: {\n      content: 'Panel inspector Json content'\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: () => '.json-formatter-key'\n    }\n  },\n  Tab: {\n    title: title => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]'\n  },\n  RefreshPicker: {\n    /**\n     * @deprecated use runButtonV2 from Grafana 8.3 instead\n     */\n    runButton: 'RefreshPicker run button',\n\n    /**\n     * @deprecated use intervalButtonV2 from Grafana 8.3 instead\n     */\n    intervalButton: 'RefreshPicker interval button',\n    runButtonV2: 'data-testid RefreshPicker run button',\n    intervalButtonV2: 'data-testid RefreshPicker interval button'\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    queryHistoryButton: 'Rich history button',\n    addQuery: 'Query editor add query button'\n  },\n  QueryHistory: {\n    queryText: 'Query text'\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row'\n  },\n  QueryEditorRow: {\n    actionButton: title => `${title} query operation action`,\n    title: refId => `Query editor row title ${refId}`,\n    container: refId => `Query editor row ${refId}`\n  },\n  AlertTab: {\n    content: 'Alert editor tab content'\n  },\n  Alert: {\n    /**\n     * @deprecated use alertV2 from Grafana 8.3 instead\n     */\n    alert: severity => `Alert ${severity}`,\n    alertV2: severity => `data-testid Alert ${severity}`\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: name => `New transform ${name}`,\n    transformationEditor: name => `Transformation editor ${name}`,\n    transformationEditorDebugger: name => `Transformation editor debugger ${name}`\n  },\n  Transforms: {\n    card: name => `New transform ${name}`,\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label'\n    },\n    searchInput: 'search transformations'\n  },\n  PageToolbar: {\n    container: () => '.page-toolbar',\n    item: tooltip => `${tooltip}`\n  },\n  QueryEditorToolbarItem: {\n    button: title => `QueryEditor toolbar item button ${title}`\n  },\n  BackButton: {\n    backArrow: 'Go Back'\n  },\n  OptionsGroup: {\n    group: title => title ? `Options group ${title}` : 'Options group',\n    toggle: title => title ? `Options group ${title} toggle` : 'Options group toggle'\n  },\n  PluginVisualization: {\n    item: title => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]'\n  },\n  Select: {\n    option: 'Select option',\n    input: () => 'input[id*=\"time-options-input\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]'\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content'\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content'\n  },\n  FolderPicker: {\n    /**\n     * @deprecated use containerV2 from Grafana 8.3 instead\n     */\n    container: 'Folder picker select container',\n    containerV2: 'data-testid Folder picker select container',\n    input: 'Select a folder'\n  },\n  ReadonlyFolderPicker: {\n    container: 'data-testid Readonly folder picker select container'\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container',\n\n    /**\n     * @deprecated use inputV2 instead\n     */\n    input: () => 'input[id=\"data-source-picker\"]',\n    inputV2: 'Select a data source'\n  },\n  TimeZonePicker: {\n    /**\n     * @deprecated use TimeZonePicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Time zone picker select container',\n    containerV2: 'data-testid Time zone picker select container'\n  },\n  WeekStartPicker: {\n    /**\n     * @deprecated use WeekStartPicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Choose starting day of the week',\n    containerV2: 'data-testid Choose starting day of the week',\n    placeholder: 'Choose starting day of the week'\n  },\n  TraceViewer: {\n    spanBar: 'data-testid SpanBar--wrapper'\n  },\n  QueryField: {\n    container: 'Query field'\n  },\n  ValuePicker: {\n    button: name => `Value picker button ${name}`,\n    select: name => `Value picker select ${name}`\n  },\n  Search: {\n    /**\n     * @deprecated use sectionV2 from Grafana 8.3 instead\n     */\n    section: 'Search section',\n    sectionV2: 'data-testid Search section',\n\n    /**\n     * @deprecated use itemsV2 from Grafana 8.3 instead\n     */\n    items: 'Search items',\n    itemsV2: 'data-testid Search items',\n    cards: 'data-testid Search cards',\n    collapseFolder: sectionId => `data-testid Collapse folder ${sectionId}`,\n    expandFolder: sectionId => `data-testid Expand folder ${sectionId}`,\n    dashboardItem: item => `${Components.Search.dashboardItems} ${item}`,\n    dashboardCard: item => `data-testid Search card ${item}`,\n    dashboardItems: 'data-testid Dashboard search item'\n  },\n  DashboardLinks: {\n    container: 'data-testid Dashboard link container',\n    dropDown: 'data-testid Dashboard link dropdown',\n    link: 'data-testid Dashboard link'\n  },\n  LoadingIndicator: {\n    icon: 'Loading indicator'\n  },\n  CallToActionCard: {\n    /**\n     * @deprecated use buttonV2 from Grafana 8.3 instead\n     */\n    button: name => `Call to action button ${name}`,\n    buttonV2: name => `data-testid Call to action button ${name}`\n  },\n  DataLinksContextMenu: {\n    singleLink: 'Data link'\n  },\n  CodeEditor: {\n    container: 'Code editor container'\n  },\n  DashboardImportPage: {\n    textarea: 'data-testid-import-dashboard-textarea',\n    submit: 'data-testid-load-dashboard'\n  },\n  ImportDashboardForm: {\n    name: 'data-testid-import-dashboard-title',\n    submit: 'data-testid-import-dashboard-submit'\n  },\n  PanelAlertTabContent: {\n    content: 'Unified alert editor tab content'\n  },\n  VisualizationPreview: {\n    card: name => `data-testid suggestion-${name}`\n  },\n  ColorSwatch: {\n    name: `data-testid-colorswatch`\n  },\n  DashboardRow: {\n    title: title => `data-testid dashboard-row-title-${title}`\n  },\n  UserProfile: {\n    profileSaveButton: 'data-testid-user-profile-save',\n    preferencesSaveButton: 'data-testid-shared-prefs-save',\n    orgsTable: 'data-testid-user-orgs-table',\n    sessionsTable: 'data-testid-user-sessions-table'\n  },\n  FileUpload: {\n    inputField: 'data-testid-file-upload-input-field',\n    fileNameSpan: 'data-testid-file-upload-file-name'\n  }\n};","map":{"version":3,"names":["Components","TimePicker","openButton","fromField","toField","applyTimeRange","calendar","label","closeButton","absoluteTimeRangeTitle","DataSource","TestData","QueryTab","scenarioSelectContainer","scenarioSelect","max","min","noise","seriesCount","spread","startValue","drop","DataSourceHttpSettings","urlInput","Jaeger","traceIDInput","Prometheus","configPage","exemplarsAddButton","internalLinkSwitch","exemplarMarker","Menu","MenuComponent","title","MenuGroup","MenuItem","SubMenu","container","icon","Panels","Panel","headerItems","item","containerByTitle","headerCornerInfo","mode","Visualization","Graph","VisualizationTab","legendSection","Legend","legendItemAlias","name","showLegendSwitch","xAxis","labels","BarGauge","value","valueV2","PieChart","svgSlice","Text","Table","header","footer","VizLegend","seriesName","Drawer","General","expand","contract","close","rcContentWrapper","PanelEditor","content","OptionsPane","select","fieldLabel","type","DataPane","applyButton","toggleVizPicker","toggleVizOptions","toggleTableView","PanelInspector","Data","Stats","Json","Query","refreshButton","jsonObjectKeys","Tab","active","RefreshPicker","runButton","intervalButton","runButtonV2","intervalButtonV2","queryInspectorButton","queryHistoryButton","addQuery","QueryHistory","queryText","QueryEditorRows","rows","QueryEditorRow","actionButton","refId","AlertTab","Alert","alert","severity","alertV2","TransformTab","newTransform","transformationEditor","transformationEditorDebugger","Transforms","card","Reduce","modeLabel","calculationsLabel","searchInput","PageToolbar","tooltip","QueryEditorToolbarItem","button","BackButton","backArrow","OptionsGroup","group","toggle","PluginVisualization","current","Select","option","input","singleValue","FieldConfigEditor","OverridesConfigEditor","FolderPicker","containerV2","ReadonlyFolderPicker","DataSourcePicker","inputV2","TimeZonePicker","WeekStartPicker","placeholder","TraceViewer","spanBar","QueryField","ValuePicker","Search","section","sectionV2","items","itemsV2","cards","collapseFolder","sectionId","expandFolder","dashboardItem","dashboardItems","dashboardCard","DashboardLinks","dropDown","link","LoadingIndicator","CallToActionCard","buttonV2","DataLinksContextMenu","singleLink","CodeEditor","DashboardImportPage","textarea","submit","ImportDashboardForm","PanelAlertTabContent","VisualizationPreview","ColorSwatch","DashboardRow","UserProfile","profileSaveButton","preferencesSaveButton","orgsTable","sessionsTable","FileUpload","inputField","fileNameSpan"],"sources":["/home/soula/grafana/packages/grafana-e2e-selectors/src/selectors/components.ts"],"sourcesContent":["// NOTE: by default Component string selectors are set up to be aria-labels,\n// however there are many cases where your component may not need an aria-label\n// (a <button> with clear text, for example, does not need an aria-label as it's already labeled)\n// but you still might need to select it for testing,\n// in that case please add the attribute data-test-id={selector} in the component and\n// prefix your selector string with 'data-test-id' so that when create the selectors we know to search for it on the right attribute\n/**\n * Selectors grouped/defined in Components\n *\n * @alpha\n */\nexport const Components = {\n  TimePicker: {\n    openButton: 'data-testid TimePicker Open Button',\n    fromField: 'Time Range from field',\n    toField: 'Time Range to field',\n    applyTimeRange: 'data-testid TimePicker submit button',\n    calendar: {\n      label: 'Time Range calendar',\n      openButton: 'Open time range calendar',\n      closeButton: 'Close time range Calendar',\n    },\n    absoluteTimeRangeTitle: 'data-testid-absolute-time-range-narrow',\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value',\n        drop: 'TestData drop values',\n      },\n    },\n    DataSourceHttpSettings: {\n      urlInput: 'Datasource HTTP settings url',\n    },\n    Jaeger: {\n      traceIDInput: 'Trace ID',\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: 'Add exemplar config button',\n        internalLinkSwitch: 'Internal link switch',\n      },\n      exemplarMarker: 'Exemplar marker',\n    },\n  },\n  Menu: {\n    MenuComponent: (title: string) => `${title} menu`,\n    MenuGroup: (title: string) => `${title} menu group`,\n    MenuItem: (title: string) => `${title} menu item`,\n    SubMenu: {\n      container: 'SubMenu container',\n      icon: 'SubMenu icon',\n    },\n  },\n  Panels: {\n    Panel: {\n      title: (title: string) => `data-testid Panel header ${title}`,\n      headerItems: (item: string) => `Panel header item ${item}`,\n      containerByTitle: (title: string) => `${title} panel`,\n      headerCornerInfo: (mode: string) => `Panel header ${mode}`,\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section',\n        },\n        Legend: {\n          legendItemAlias: (name: string) => `gpl alias ${name}`,\n          showLegendSwitch: 'gpl show legend',\n        },\n        xAxis: {\n          labels: () => 'div.flot-x-axis > div.flot-tick-label',\n        },\n      },\n      BarGauge: {\n        /**\n         * @deprecated use valueV2 from Grafana 8.3 instead\n         */\n        value: 'Bar gauge value',\n        valueV2: 'data-testid Bar gauge value',\n      },\n      PieChart: {\n        svgSlice: 'Pie Chart Slice',\n      },\n      Text: {\n        container: () => '.markdown-html',\n      },\n      Table: {\n        header: 'table header',\n        footer: 'table-footer',\n      },\n    },\n  },\n  VizLegend: {\n    seriesName: (name: string) => `VizLegend series ${name}`,\n  },\n  Drawer: {\n    General: {\n      title: (title: string) => `Drawer title ${title}`,\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: () => '.drawer-content-wrapper',\n    },\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content',\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      select: 'Panel editor option pane select',\n      fieldLabel: (type: string) => `${type} field property editor`,\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content',\n    },\n    applyButton: 'panel editor apply',\n    toggleVizPicker: 'toggle-viz-picker',\n    toggleVizOptions: 'toggle-viz-options',\n    toggleTableView: 'toggle-table-view',\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content',\n    },\n    Stats: {\n      content: 'Panel inspector Stats content',\n    },\n    Json: {\n      content: 'Panel inspector Json content',\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: () => '.json-formatter-key',\n    },\n  },\n  Tab: {\n    title: (title: string) => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]',\n  },\n  RefreshPicker: {\n    /**\n     * @deprecated use runButtonV2 from Grafana 8.3 instead\n     */\n    runButton: 'RefreshPicker run button',\n    /**\n     * @deprecated use intervalButtonV2 from Grafana 8.3 instead\n     */\n    intervalButton: 'RefreshPicker interval button',\n    runButtonV2: 'data-testid RefreshPicker run button',\n    intervalButtonV2: 'data-testid RefreshPicker interval button',\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    queryHistoryButton: 'Rich history button',\n    addQuery: 'Query editor add query button',\n  },\n  QueryHistory: {\n    queryText: 'Query text',\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row',\n  },\n  QueryEditorRow: {\n    actionButton: (title: string) => `${title} query operation action`,\n    title: (refId: string) => `Query editor row title ${refId}`,\n    container: (refId: string) => `Query editor row ${refId}`,\n  },\n  AlertTab: {\n    content: 'Alert editor tab content',\n  },\n  Alert: {\n    /**\n     * @deprecated use alertV2 from Grafana 8.3 instead\n     */\n    alert: (severity: string) => `Alert ${severity}`,\n    alertV2: (severity: string) => `data-testid Alert ${severity}`,\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: (name: string) => `New transform ${name}`,\n    transformationEditor: (name: string) => `Transformation editor ${name}`,\n    transformationEditorDebugger: (name: string) => `Transformation editor debugger ${name}`,\n  },\n  Transforms: {\n    card: (name: string) => `New transform ${name}`,\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label',\n    },\n    searchInput: 'search transformations',\n  },\n  PageToolbar: {\n    container: () => '.page-toolbar',\n    item: (tooltip: string) => `${tooltip}`,\n  },\n  QueryEditorToolbarItem: {\n    button: (title: string) => `QueryEditor toolbar item button ${title}`,\n  },\n  BackButton: {\n    backArrow: 'Go Back',\n  },\n  OptionsGroup: {\n    group: (title?: string) => (title ? `Options group ${title}` : 'Options group'),\n    toggle: (title?: string) => (title ? `Options group ${title} toggle` : 'Options group toggle'),\n  },\n  PluginVisualization: {\n    item: (title: string) => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]',\n  },\n  Select: {\n    option: 'Select option',\n    input: () => 'input[id*=\"time-options-input\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]',\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content',\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content',\n  },\n  FolderPicker: {\n    /**\n     * @deprecated use containerV2 from Grafana 8.3 instead\n     */\n    container: 'Folder picker select container',\n    containerV2: 'data-testid Folder picker select container',\n    input: 'Select a folder',\n  },\n  ReadonlyFolderPicker: {\n    container: 'data-testid Readonly folder picker select container',\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container',\n    /**\n     * @deprecated use inputV2 instead\n     */\n    input: () => 'input[id=\"data-source-picker\"]',\n    inputV2: 'Select a data source',\n  },\n  TimeZonePicker: {\n    /**\n     * @deprecated use TimeZonePicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Time zone picker select container',\n    containerV2: 'data-testid Time zone picker select container',\n  },\n  WeekStartPicker: {\n    /**\n     * @deprecated use WeekStartPicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Choose starting day of the week',\n    containerV2: 'data-testid Choose starting day of the week',\n    placeholder: 'Choose starting day of the week',\n  },\n  TraceViewer: {\n    spanBar: 'data-testid SpanBar--wrapper',\n  },\n  QueryField: { container: 'Query field' },\n  ValuePicker: {\n    button: (name: string) => `Value picker button ${name}`,\n    select: (name: string) => `Value picker select ${name}`,\n  },\n  Search: {\n    /**\n     * @deprecated use sectionV2 from Grafana 8.3 instead\n     */\n    section: 'Search section',\n    sectionV2: 'data-testid Search section',\n    /**\n     * @deprecated use itemsV2 from Grafana 8.3 instead\n     */\n    items: 'Search items',\n    itemsV2: 'data-testid Search items',\n    cards: 'data-testid Search cards',\n    collapseFolder: (sectionId: string) => `data-testid Collapse folder ${sectionId}`,\n    expandFolder: (sectionId: string) => `data-testid Expand folder ${sectionId}`,\n    dashboardItem: (item: string) => `${Components.Search.dashboardItems} ${item}`,\n    dashboardCard: (item: string) => `data-testid Search card ${item}`,\n    dashboardItems: 'data-testid Dashboard search item',\n  },\n  DashboardLinks: {\n    container: 'data-testid Dashboard link container',\n    dropDown: 'data-testid Dashboard link dropdown',\n    link: 'data-testid Dashboard link',\n  },\n  LoadingIndicator: {\n    icon: 'Loading indicator',\n  },\n  CallToActionCard: {\n    /**\n     * @deprecated use buttonV2 from Grafana 8.3 instead\n     */\n    button: (name: string) => `Call to action button ${name}`,\n    buttonV2: (name: string) => `data-testid Call to action button ${name}`,\n  },\n  DataLinksContextMenu: {\n    singleLink: 'Data link',\n  },\n  CodeEditor: {\n    container: 'Code editor container',\n  },\n  DashboardImportPage: {\n    textarea: 'data-testid-import-dashboard-textarea',\n    submit: 'data-testid-load-dashboard',\n  },\n  ImportDashboardForm: {\n    name: 'data-testid-import-dashboard-title',\n    submit: 'data-testid-import-dashboard-submit',\n  },\n  PanelAlertTabContent: {\n    content: 'Unified alert editor tab content',\n  },\n  VisualizationPreview: {\n    card: (name: string) => `data-testid suggestion-${name}`,\n  },\n  ColorSwatch: {\n    name: `data-testid-colorswatch`,\n  },\n  DashboardRow: {\n    title: (title: string) => `data-testid dashboard-row-title-${title}`,\n  },\n  UserProfile: {\n    profileSaveButton: 'data-testid-user-profile-save',\n    preferencesSaveButton: 'data-testid-shared-prefs-save',\n    orgsTable: 'data-testid-user-orgs-table',\n    sessionsTable: 'data-testid-user-sessions-table',\n  },\n  FileUpload: {\n    inputField: 'data-testid-file-upload-input-field',\n    fileNameSpan: 'data-testid-file-upload-file-name',\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}