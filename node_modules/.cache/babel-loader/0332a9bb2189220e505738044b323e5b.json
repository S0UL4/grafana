{"ast":null,"code":"import { toLower, isEmpty, isString } from 'lodash';\nimport React, { useMemo, useCallback } from 'react';\nimport { getTimeZoneInfo, getTimeZoneGroups, InternalTimeZones } from '@grafana/data';\nimport { Select } from '../Select/Select';\nimport { TimeZoneGroup } from './TimeZonePicker/TimeZoneGroup';\nimport { formatUtcOffset } from './TimeZonePicker/TimeZoneOffset';\nimport { CompactTimeZoneOption, WideTimeZoneOption } from './TimeZonePicker/TimeZoneOption';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const TimeZonePicker = props => {\n  const {\n    onChange,\n    width,\n    autoFocus = false,\n    onBlur,\n    value,\n    includeInternal = false,\n    disabled = false,\n    inputId\n  } = props;\n  const groupedTimeZones = useTimeZones(includeInternal);\n  const selected = useSelectedTimeZone(groupedTimeZones, value);\n  const filterBySearchIndex = useFilterBySearchIndex();\n  const TimeZoneOption = width && width <= 45 ? CompactTimeZoneOption : WideTimeZoneOption;\n  const onChangeTz = useCallback(selectable => {\n    if (!selectable || !isString(selectable.value)) {\n      return onChange(value);\n    }\n\n    onChange(selectable.value);\n  }, [onChange, value]);\n  return /*#__PURE__*/_jsx(Select, {\n    inputId: inputId,\n    value: selected,\n    placeholder: \"Type to search (country, city, abbreviation)\",\n    autoFocus: autoFocus,\n    menuShouldPortal: false,\n    openMenuOnFocus: true,\n    width: width,\n    filterOption: filterBySearchIndex,\n    options: groupedTimeZones,\n    onChange: onChangeTz,\n    onBlur: onBlur,\n    components: {\n      Option: TimeZoneOption,\n      Group: TimeZoneGroup\n    },\n    disabled: disabled,\n    \"aria-label\": 'Time zone picker'\n  });\n};\n\nconst useTimeZones = includeInternal => {\n  const now = Date.now();\n  const timeZoneGroups = getTimeZoneGroups(includeInternal).map(group => {\n    const options = group.zones.reduce((options, zone) => {\n      const info = getTimeZoneInfo(zone, now);\n\n      if (!info) {\n        return options;\n      }\n\n      options.push({\n        label: info.name,\n        value: info.zone,\n        searchIndex: getSearchIndex(info, now)\n      });\n      return options;\n    }, []);\n    return {\n      label: group.name,\n      options\n    };\n  });\n  return timeZoneGroups;\n};\n\nconst useSelectedTimeZone = (groups, timeZone) => {\n  return useMemo(() => {\n    if (timeZone === undefined) {\n      return undefined;\n    }\n\n    const tz = toLower(timeZone);\n    const group = groups.find(group => {\n      if (!group.label) {\n        return isInternal(tz);\n      }\n\n      return tz.startsWith(toLower(group.label));\n    });\n    return group === null || group === void 0 ? void 0 : group.options.find(option => {\n      if (isEmpty(tz)) {\n        return option.value === InternalTimeZones.default;\n      }\n\n      return toLower(option.value) === tz;\n    });\n  }, [groups, timeZone]);\n};\n\nconst isInternal = timeZone => {\n  switch (timeZone) {\n    case InternalTimeZones.default:\n    case InternalTimeZones.localBrowserTime:\n    case InternalTimeZones.utc:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst useFilterBySearchIndex = () => {\n  return useCallback((option, searchQuery) => {\n    if (!searchQuery || !option.data || !option.data.searchIndex) {\n      return true;\n    }\n\n    return option.data.searchIndex.indexOf(toLower(searchQuery)) > -1;\n  }, []);\n};\n\nconst getSearchIndex = (info, timestamp) => {\n  const parts = [toLower(info.name), toLower(info.abbreviation), toLower(formatUtcOffset(timestamp, info.zone))];\n\n  for (const country of info.countries) {\n    parts.push(toLower(country.name));\n    parts.push(toLower(country.code));\n  }\n\n  return parts.join('|');\n};","map":{"version":3,"names":["toLower","isEmpty","isString","React","useMemo","useCallback","getTimeZoneInfo","getTimeZoneGroups","InternalTimeZones","Select","TimeZoneGroup","formatUtcOffset","CompactTimeZoneOption","WideTimeZoneOption","TimeZonePicker","props","onChange","width","autoFocus","onBlur","value","includeInternal","disabled","inputId","groupedTimeZones","useTimeZones","selected","useSelectedTimeZone","filterBySearchIndex","useFilterBySearchIndex","TimeZoneOption","onChangeTz","selectable","Option","Group","now","Date","timeZoneGroups","map","group","options","zones","reduce","zone","info","push","label","name","searchIndex","getSearchIndex","groups","timeZone","undefined","tz","find","isInternal","startsWith","option","default","localBrowserTime","utc","searchQuery","data","indexOf","timestamp","parts","abbreviation","country","countries","code","join"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeZonePicker.tsx"],"sourcesContent":["import { toLower, isEmpty, isString } from 'lodash';\nimport React, { useMemo, useCallback } from 'react';\n\nimport {\n  SelectableValue,\n  getTimeZoneInfo,\n  TimeZoneInfo,\n  getTimeZoneGroups,\n  GroupedTimeZones,\n  TimeZone,\n  InternalTimeZones,\n} from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nimport { TimeZoneGroup } from './TimeZonePicker/TimeZoneGroup';\nimport { formatUtcOffset } from './TimeZonePicker/TimeZoneOffset';\nimport { CompactTimeZoneOption, WideTimeZoneOption, SelectableZone } from './TimeZonePicker/TimeZoneOption';\n\nexport interface Props {\n  onChange: (timeZone?: TimeZone) => void;\n  value?: TimeZone;\n  width?: number;\n  autoFocus?: boolean;\n  onBlur?: () => void;\n  includeInternal?: boolean | InternalTimeZones[];\n  disabled?: boolean;\n  inputId?: string;\n}\n\nexport const TimeZonePicker: React.FC<Props> = (props) => {\n  const {\n    onChange,\n    width,\n    autoFocus = false,\n    onBlur,\n    value,\n    includeInternal = false,\n    disabled = false,\n    inputId,\n  } = props;\n  const groupedTimeZones = useTimeZones(includeInternal);\n  const selected = useSelectedTimeZone(groupedTimeZones, value);\n  const filterBySearchIndex = useFilterBySearchIndex();\n  const TimeZoneOption = width && width <= 45 ? CompactTimeZoneOption : WideTimeZoneOption;\n\n  const onChangeTz = useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (!selectable || !isString(selectable.value)) {\n        return onChange(value);\n      }\n      onChange(selectable.value);\n    },\n    [onChange, value]\n  );\n\n  return (\n    <Select\n      inputId={inputId}\n      value={selected}\n      placeholder=\"Type to search (country, city, abbreviation)\"\n      autoFocus={autoFocus}\n      menuShouldPortal={false}\n      openMenuOnFocus={true}\n      width={width}\n      filterOption={filterBySearchIndex}\n      options={groupedTimeZones}\n      onChange={onChangeTz}\n      onBlur={onBlur}\n      components={{ Option: TimeZoneOption, Group: TimeZoneGroup }}\n      disabled={disabled}\n      aria-label={'Time zone picker'}\n    />\n  );\n};\n\ninterface SelectableZoneGroup extends SelectableValue<string> {\n  options: SelectableZone[];\n}\n\nconst useTimeZones = (includeInternal: boolean | InternalTimeZones[]): SelectableZoneGroup[] => {\n  const now = Date.now();\n\n  const timeZoneGroups = getTimeZoneGroups(includeInternal).map((group: GroupedTimeZones) => {\n    const options = group.zones.reduce((options: SelectableZone[], zone) => {\n      const info = getTimeZoneInfo(zone, now);\n\n      if (!info) {\n        return options;\n      }\n\n      options.push({\n        label: info.name,\n        value: info.zone,\n        searchIndex: getSearchIndex(info, now),\n      });\n\n      return options;\n    }, []);\n\n    return {\n      label: group.name,\n      options,\n    };\n  });\n  return timeZoneGroups;\n};\n\nconst useSelectedTimeZone = (\n  groups: SelectableZoneGroup[],\n  timeZone: TimeZone | undefined\n): SelectableZone | undefined => {\n  return useMemo(() => {\n    if (timeZone === undefined) {\n      return undefined;\n    }\n\n    const tz = toLower(timeZone);\n\n    const group = groups.find((group) => {\n      if (!group.label) {\n        return isInternal(tz);\n      }\n      return tz.startsWith(toLower(group.label));\n    });\n\n    return group?.options.find((option) => {\n      if (isEmpty(tz)) {\n        return option.value === InternalTimeZones.default;\n      }\n      return toLower(option.value) === tz;\n    });\n  }, [groups, timeZone]);\n};\n\nconst isInternal = (timeZone: TimeZone): boolean => {\n  switch (timeZone) {\n    case InternalTimeZones.default:\n    case InternalTimeZones.localBrowserTime:\n    case InternalTimeZones.utc:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst useFilterBySearchIndex = () => {\n  return useCallback((option: SelectableValue, searchQuery: string) => {\n    if (!searchQuery || !option.data || !option.data.searchIndex) {\n      return true;\n    }\n    return option.data.searchIndex.indexOf(toLower(searchQuery)) > -1;\n  }, []);\n};\n\nconst getSearchIndex = (info: TimeZoneInfo, timestamp: number): string => {\n  const parts: string[] = [\n    toLower(info.name),\n    toLower(info.abbreviation),\n    toLower(formatUtcOffset(timestamp, info.zone)),\n  ];\n\n  for (const country of info.countries) {\n    parts.push(toLower(country.name));\n    parts.push(toLower(country.code));\n  }\n\n  return parts.join('|');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}