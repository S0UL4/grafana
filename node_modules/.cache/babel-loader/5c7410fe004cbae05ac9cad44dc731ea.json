{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles } from '@grafana/ui';\nimport { isPanelModelLibraryPanel } from '../../guard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const LibraryPanelInformation = ({\n  panel,\n  formatDate\n}) => {\n  var _formatDate;\n\n  const styles = useStyles(getStyles);\n\n  if (!isPanelModelLibraryPanel(panel)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.info,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.libraryPanelInfo,\n      children: [`Used on ${panel.libraryPanel.meta.connectedDashboards} `, panel.libraryPanel.meta.connectedDashboards === 1 ? 'dashboard' : 'dashboards']\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.libraryPanelInfo,\n      children: [\"Last edited on \", (_formatDate = formatDate === null || formatDate === void 0 ? void 0 : formatDate(panel.libraryPanel.meta.updated, 'L')) !== null && _formatDate !== void 0 ? _formatDate : panel.libraryPanel.meta.updated, \" by\", panel.libraryPanel.meta.updatedBy.avatarUrl && /*#__PURE__*/_jsx(\"img\", {\n        width: \"22\",\n        height: \"22\",\n        className: styles.userAvatar,\n        src: panel.libraryPanel.meta.updatedBy.avatarUrl,\n        alt: `Avatar for ${panel.libraryPanel.meta.updatedBy.name}`\n      }), panel.libraryPanel.meta.updatedBy.name]\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    info: css`\n      line-height: 1;\n    `,\n    libraryPanelInfo: css`\n      color: ${theme.colors.textSemiWeak};\n      font-size: ${theme.typography.size.sm};\n    `,\n    userAvatar: css`\n      border-radius: 50%;\n      box-sizing: content-box;\n      width: 22px;\n      height: 22px;\n      padding-left: ${theme.spacing.sm};\n      padding-right: ${theme.spacing.sm};\n    `\n  };\n};","map":{"version":3,"names":["css","React","useStyles","isPanelModelLibraryPanel","LibraryPanelInformation","panel","formatDate","styles","getStyles","info","libraryPanelInfo","libraryPanel","meta","connectedDashboards","updated","updatedBy","avatarUrl","userAvatar","name","theme","colors","textSemiWeak","typography","size","sm","spacing"],"sources":["/home/soula/grafana/public/app/features/library-panels/components/LibraryPanelInfo/LibraryPanelInfo.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DateTimeInput, GrafanaTheme } from '@grafana/data';\nimport { useStyles } from '@grafana/ui';\n\nimport { isPanelModelLibraryPanel } from '../../guard';\nimport { PanelModelWithLibraryPanel } from '../../types';\n\ninterface Props {\n  panel: PanelModelWithLibraryPanel;\n  formatDate?: (dateString: DateTimeInput, format?: string) => string;\n}\n\nexport const LibraryPanelInformation: React.FC<Props> = ({ panel, formatDate }) => {\n  const styles = useStyles(getStyles);\n\n  if (!isPanelModelLibraryPanel(panel)) {\n    return null;\n  }\n\n  return (\n    <div className={styles.info}>\n      <div className={styles.libraryPanelInfo}>\n        {`Used on ${panel.libraryPanel.meta.connectedDashboards} `}\n        {panel.libraryPanel.meta.connectedDashboards === 1 ? 'dashboard' : 'dashboards'}\n      </div>\n      <div className={styles.libraryPanelInfo}>\n        Last edited on {formatDate?.(panel.libraryPanel.meta.updated, 'L') ?? panel.libraryPanel.meta.updated} by\n        {panel.libraryPanel.meta.updatedBy.avatarUrl && (\n          <img\n            width=\"22\"\n            height=\"22\"\n            className={styles.userAvatar}\n            src={panel.libraryPanel.meta.updatedBy.avatarUrl}\n            alt={`Avatar for ${panel.libraryPanel.meta.updatedBy.name}`}\n          />\n        )}\n        {panel.libraryPanel.meta.updatedBy.name}\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    info: css`\n      line-height: 1;\n    `,\n    libraryPanelInfo: css`\n      color: ${theme.colors.textSemiWeak};\n      font-size: ${theme.typography.size.sm};\n    `,\n    userAvatar: css`\n      border-radius: 50%;\n      box-sizing: content-box;\n      width: 22px;\n      height: 22px;\n      padding-left: ${theme.spacing.sm};\n      padding-right: ${theme.spacing.sm};\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,wBAAT,QAAyC,aAAzC;;;AAQA,OAAO,MAAMC,uBAAwC,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAA2B;EAAA;;EACjF,MAAMC,MAAM,GAAGL,SAAS,CAACM,SAAD,CAAxB;;EAEA,IAAI,CAACL,wBAAwB,CAACE,KAAD,CAA7B,EAAsC;IACpC,OAAO,IAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAEE,MAAM,CAACE,IAAvB;IAAA,wBACE;MAAK,SAAS,EAAEF,MAAM,CAACG,gBAAvB;MAAA,WACI,WAAUL,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBC,mBAAoB,GAD1D,EAEGR,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBC,mBAAxB,KAAgD,CAAhD,GAAoD,WAApD,GAAkE,YAFrE;IAAA,EADF,eAKE;MAAK,SAAS,EAAEN,MAAM,CAACG,gBAAvB;MAAA,6CACkBJ,UADlB,aACkBA,UADlB,uBACkBA,UAAU,CAAGD,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBE,OAA3B,EAAoC,GAApC,CAD5B,qDACwET,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBE,OADhG,SAEGT,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBG,SAAxB,CAAkCC,SAAlC,iBACC;QACE,KAAK,EAAC,IADR;QAEE,MAAM,EAAC,IAFT;QAGE,SAAS,EAAET,MAAM,CAACU,UAHpB;QAIE,GAAG,EAAEZ,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBG,SAAxB,CAAkCC,SAJzC;QAKE,GAAG,EAAG,cAAaX,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBG,SAAxB,CAAkCG,IAAK;MAL5D,EAHJ,EAWGb,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBG,SAAxB,CAAkCG,IAXrC;IAAA,EALF;EAAA,EADF;AAqBD,CA5BM;;AA8BP,MAAMV,SAAS,GAAIW,KAAD,IAAyB;EACzC,OAAO;IACLV,IAAI,EAAET,GAAI;AACd;AACA,KAHS;IAILU,gBAAgB,EAAEV,GAAI;AAC1B,eAAemB,KAAK,CAACC,MAAN,CAAaC,YAAa;AACzC,mBAAmBF,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,KAPS;IAQLP,UAAU,EAAEjB,GAAI;AACpB;AACA;AACA;AACA;AACA,sBAAsBmB,KAAK,CAACM,OAAN,CAAcD,EAAG;AACvC,uBAAuBL,KAAK,CAACM,OAAN,CAAcD,EAAG;AACxC;EAfS,CAAP;AAiBD,CAlBD"},"metadata":{},"sourceType":"module"}