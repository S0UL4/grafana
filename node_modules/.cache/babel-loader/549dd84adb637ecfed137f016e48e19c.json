{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ToolbarButton, ButtonGroup, useStyles } from '@grafana/ui';\nimport { getPanelPluginWithFallback } from '../../state/selectors';\nimport { setPanelEditorUIState, toggleVizPicker } from './state/reducers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VisualizationButton = ({\n  panel\n}) => {\n  const styles = useStyles(getStyles);\n  const dispatch = useDispatch();\n  const plugin = useSelector(getPanelPluginWithFallback(panel.type));\n  const isPanelOptionsVisible = useSelector(state => state.panelEditor.ui.isPanelOptionsVisible);\n  const isVizPickerOpen = useSelector(state => state.panelEditor.isVizPickerOpen);\n\n  const onToggleOpen = () => {\n    dispatch(toggleVizPicker(!isVizPickerOpen));\n  };\n\n  const onToggleOptionsPane = () => {\n    dispatch(setPanelEditorUIState({\n      isPanelOptionsVisible: !isPanelOptionsVisible\n    }));\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxs(ButtonGroup, {\n      children: [/*#__PURE__*/_jsx(ToolbarButton, {\n        className: styles.vizButton,\n        tooltip: \"Click to change visualization\",\n        imgSrc: plugin.meta.info.logos.small,\n        isOpen: isVizPickerOpen,\n        onClick: onToggleOpen,\n        \"aria-label\": selectors.components.PanelEditor.toggleVizPicker,\n        fullWidth: true,\n        children: plugin.meta.name\n      }), /*#__PURE__*/_jsx(ToolbarButton, {\n        tooltip: isPanelOptionsVisible ? 'Close options pane' : 'Show options pane',\n        icon: isPanelOptionsVisible ? 'angle-right' : 'angle-left',\n        onClick: onToggleOptionsPane,\n        \"aria-label\": selectors.components.PanelEditor.toggleVizOptions\n      })]\n    })\n  });\n};\nVisualizationButton.displayName = 'VisualizationTab';\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    vizButton: css`\n      text-align: left;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useDispatch","useSelector","selectors","ToolbarButton","ButtonGroup","useStyles","getPanelPluginWithFallback","setPanelEditorUIState","toggleVizPicker","VisualizationButton","panel","styles","getStyles","dispatch","plugin","type","isPanelOptionsVisible","state","panelEditor","ui","isVizPickerOpen","onToggleOpen","onToggleOptionsPane","wrapper","vizButton","meta","info","logos","small","components","PanelEditor","name","toggleVizOptions","displayName","theme"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/VisualizationButton.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ToolbarButton, ButtonGroup, useStyles } from '@grafana/ui';\nimport { StoreState } from 'app/types';\n\nimport { PanelModel } from '../../state';\nimport { getPanelPluginWithFallback } from '../../state/selectors';\n\nimport { setPanelEditorUIState, toggleVizPicker } from './state/reducers';\n\ntype Props = {\n  panel: PanelModel;\n};\n\nexport const VisualizationButton: FC<Props> = ({ panel }) => {\n  const styles = useStyles(getStyles);\n  const dispatch = useDispatch();\n  const plugin = useSelector(getPanelPluginWithFallback(panel.type));\n  const isPanelOptionsVisible = useSelector((state: StoreState) => state.panelEditor.ui.isPanelOptionsVisible);\n  const isVizPickerOpen = useSelector((state: StoreState) => state.panelEditor.isVizPickerOpen);\n\n  const onToggleOpen = () => {\n    dispatch(toggleVizPicker(!isVizPickerOpen));\n  };\n\n  const onToggleOptionsPane = () => {\n    dispatch(setPanelEditorUIState({ isPanelOptionsVisible: !isPanelOptionsVisible }));\n  };\n\n  if (!plugin) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <ButtonGroup>\n        <ToolbarButton\n          className={styles.vizButton}\n          tooltip=\"Click to change visualization\"\n          imgSrc={plugin.meta.info.logos.small}\n          isOpen={isVizPickerOpen}\n          onClick={onToggleOpen}\n          aria-label={selectors.components.PanelEditor.toggleVizPicker}\n          fullWidth\n        >\n          {plugin.meta.name}\n        </ToolbarButton>\n        <ToolbarButton\n          tooltip={isPanelOptionsVisible ? 'Close options pane' : 'Show options pane'}\n          icon={isPanelOptionsVisible ? 'angle-right' : 'angle-left'}\n          onClick={onToggleOptionsPane}\n          aria-label={selectors.components.PanelEditor.toggleVizOptions}\n        />\n      </ButtonGroup>\n    </div>\n  );\n};\n\nVisualizationButton.displayName = 'VisualizationTab';\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    vizButton: css`\n      text-align: left;\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,aAAtD;AAIA,SAASC,0BAAT,QAA2C,uBAA3C;AAEA,SAASC,qBAAT,EAAgCC,eAAhC,QAAuD,kBAAvD;;;AAMA,OAAO,MAAMC,mBAA8B,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAe;EAC3D,MAAMC,MAAM,GAAGN,SAAS,CAACO,SAAD,CAAxB;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,MAAM,GAAGb,WAAW,CAACK,0BAA0B,CAACI,KAAK,CAACK,IAAP,CAA3B,CAA1B;EACA,MAAMC,qBAAqB,GAAGf,WAAW,CAAEgB,KAAD,IAAuBA,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqBH,qBAA7C,CAAzC;EACA,MAAMI,eAAe,GAAGnB,WAAW,CAAEgB,KAAD,IAAuBA,KAAK,CAACC,WAAN,CAAkBE,eAA1C,CAAnC;;EAEA,MAAMC,YAAY,GAAG,MAAM;IACzBR,QAAQ,CAACL,eAAe,CAAC,CAACY,eAAF,CAAhB,CAAR;EACD,CAFD;;EAIA,MAAME,mBAAmB,GAAG,MAAM;IAChCT,QAAQ,CAACN,qBAAqB,CAAC;MAAES,qBAAqB,EAAE,CAACA;IAA1B,CAAD,CAAtB,CAAR;EACD,CAFD;;EAIA,IAAI,CAACF,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAEH,MAAM,CAACY,OAAvB;IAAA,uBACE,MAAC,WAAD;MAAA,wBACE,KAAC,aAAD;QACE,SAAS,EAAEZ,MAAM,CAACa,SADpB;QAEE,OAAO,EAAC,+BAFV;QAGE,MAAM,EAAEV,MAAM,CAACW,IAAP,CAAYC,IAAZ,CAAiBC,KAAjB,CAAuBC,KAHjC;QAIE,MAAM,EAAER,eAJV;QAKE,OAAO,EAAEC,YALX;QAME,cAAYnB,SAAS,CAAC2B,UAAV,CAAqBC,WAArB,CAAiCtB,eAN/C;QAOE,SAAS,MAPX;QAAA,UASGM,MAAM,CAACW,IAAP,CAAYM;MATf,EADF,eAYE,KAAC,aAAD;QACE,OAAO,EAAEf,qBAAqB,GAAG,oBAAH,GAA0B,mBAD1D;QAEE,IAAI,EAAEA,qBAAqB,GAAG,aAAH,GAAmB,YAFhD;QAGE,OAAO,EAAEM,mBAHX;QAIE,cAAYpB,SAAS,CAAC2B,UAAV,CAAqBC,WAArB,CAAiCE;MAJ/C,EAZF;IAAA;EADF,EADF;AAuBD,CA1CM;AA4CPvB,mBAAmB,CAACwB,WAApB,GAAkC,kBAAlC;;AAEA,MAAMrB,SAAS,GAAIsB,KAAD,IAAyB;EACzC,OAAO;IACLX,OAAO,EAAEzB,GAAI;AACjB;AACA;AACA,KAJS;IAKL0B,SAAS,EAAE1B,GAAI;AACnB;AACA;EAPS,CAAP;AASD,CAVD"},"metadata":{},"sourceType":"module"}