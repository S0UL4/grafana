{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { config } from '@grafana/runtime';\nimport { Icon, IconButton, stylesFactory } from '@grafana/ui';\nimport { LayerName } from './LayerName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const LayerDragDropList = ({\n  layers,\n  getLayerInfo,\n  onDragEnd,\n  onSelect,\n  onDelete,\n  onDuplicate,\n  showActions,\n  selection,\n  excludeBaseLayer,\n  onNameChange,\n  verifyLayerNameUniqueness\n}) => {\n  const style = styles(config.theme);\n\n  const getRowStyle = isSelected => {\n    return isSelected ? `${style.row} ${style.sel}` : style.row;\n  };\n\n  return /*#__PURE__*/_jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsx(Droppable, {\n      droppableId: \"droppable\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxs(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        children: [(() => {\n          // reverse order\n          const rows = [];\n          const lastLayerIndex = excludeBaseLayer ? 1 : 0;\n          const shouldRenderDragIconLengthThreshold = excludeBaseLayer ? 2 : 1;\n\n          for (let i = layers.length - 1; i >= lastLayerIndex; i--) {\n            const element = layers[i];\n            const uid = element.getName();\n            const isSelected = Boolean(selection === null || selection === void 0 ? void 0 : selection.includes(uid));\n            rows.push( /*#__PURE__*/_jsx(Draggable, {\n              draggableId: uid,\n              index: rows.length,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxs(\"div\", Object.assign({\n                className: getRowStyle(isSelected),\n                ref: provided.innerRef\n              }, provided.draggableProps, provided.dragHandleProps, {\n                onMouseDown: () => onSelect(element),\n                children: [/*#__PURE__*/_jsx(LayerName, {\n                  name: uid,\n                  onChange: v => onNameChange(element, v),\n                  verifyLayerNameUniqueness: verifyLayerNameUniqueness !== null && verifyLayerNameUniqueness !== void 0 ? verifyLayerNameUniqueness : undefined\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: style.textWrapper,\n                  children: [\"\\xA0 \", getLayerInfo(element)]\n                }), showActions(element) && /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [onDuplicate ? /*#__PURE__*/_jsx(IconButton, {\n                    name: \"copy\",\n                    title: 'Duplicate',\n                    className: style.actionIcon,\n                    onClick: () => onDuplicate(element)\n                  }) : null, /*#__PURE__*/_jsx(IconButton, {\n                    name: \"trash-alt\",\n                    title: 'remove',\n                    className: cx(style.actionIcon, style.dragIcon),\n                    onClick: () => onDelete(element)\n                  })]\n                }), layers.length > shouldRenderDragIconLengthThreshold && /*#__PURE__*/_jsx(Icon, {\n                  title: \"Drag and drop to reorder\",\n                  name: \"draggabledots\",\n                  size: \"lg\",\n                  className: style.dragIcon\n                })]\n              }))\n            }, uid));\n          }\n\n          return rows;\n        })(), provided.placeholder]\n      }))\n    })\n  });\n};\nLayerDragDropList.defaultProps = {\n  isGroup: () => false\n};\nconst styles = stylesFactory(theme => ({\n  wrapper: css`\n    margin-bottom: ${theme.spacing.md};\n  `,\n  row: css`\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    border-radius: ${theme.border.radius.sm};\n    background: ${theme.colors.bg2};\n    min-height: ${theme.spacing.formInputHeight}px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 3px;\n    cursor: pointer;\n\n    border: 1px solid ${theme.colors.formInputBorder};\n    &:hover {\n      border: 1px solid ${theme.colors.formInputBorderHover};\n    }\n  `,\n  sel: css`\n    border: 1px solid ${theme.colors.formInputBorderActive};\n    &:hover {\n      border: 1px solid ${theme.colors.formInputBorderActive};\n    }\n  `,\n  dragIcon: css`\n    cursor: drag;\n  `,\n  actionIcon: css`\n    color: ${theme.colors.textWeak};\n    &:hover {\n      color: ${theme.colors.text};\n    }\n  `,\n  typeWrapper: css`\n    color: ${theme.colors.textBlue};\n    margin-right: 5px;\n  `,\n  textWrapper: css`\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    overflow: hidden;\n    margin-right: ${theme.spacing.sm};\n  `\n}));","map":{"version":3,"names":["css","cx","React","DragDropContext","Draggable","Droppable","config","Icon","IconButton","stylesFactory","LayerName","LayerDragDropList","layers","getLayerInfo","onDragEnd","onSelect","onDelete","onDuplicate","showActions","selection","excludeBaseLayer","onNameChange","verifyLayerNameUniqueness","style","styles","theme","getRowStyle","isSelected","row","sel","provided","snapshot","droppableProps","innerRef","rows","lastLayerIndex","shouldRenderDragIconLengthThreshold","i","length","element","uid","getName","Boolean","includes","push","draggableProps","dragHandleProps","v","undefined","textWrapper","actionIcon","dragIcon","placeholder","defaultProps","isGroup","wrapper","spacing","md","xs","sm","border","radius","colors","bg2","formInputHeight","formInputBorder","formInputBorderHover","formInputBorderActive","textWeak","text","typeWrapper","textBlue"],"sources":["/home/soula/grafana/public/app/core/components/Layers/LayerDragDropList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable, DropResult } from 'react-beautiful-dnd';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Icon, IconButton, stylesFactory } from '@grafana/ui';\n\nimport { LayerName } from './LayerName';\nimport { LayerElement } from './types';\n\ntype LayerDragDropListProps<T extends LayerElement> = {\n  layers: T[];\n  getLayerInfo: (element: T) => string;\n  onDragEnd: (result: DropResult) => void;\n  onSelect: (element: T) => any;\n  onDelete: (element: T) => any;\n  onDuplicate?: (element: T) => any;\n  showActions: (element: T) => boolean;\n  selection?: string[]; // list of unique ids (names)\n  excludeBaseLayer?: boolean;\n  onNameChange: (element: T, newName: string) => any;\n  verifyLayerNameUniqueness?: (nameToCheck: string) => boolean;\n};\n\nexport const LayerDragDropList = <T extends LayerElement>({\n  layers,\n  getLayerInfo,\n  onDragEnd,\n  onSelect,\n  onDelete,\n  onDuplicate,\n  showActions,\n  selection,\n  excludeBaseLayer,\n  onNameChange,\n  verifyLayerNameUniqueness,\n}: LayerDragDropListProps<T>) => {\n  const style = styles(config.theme);\n\n  const getRowStyle = (isSelected: boolean) => {\n    return isSelected ? `${style.row} ${style.sel}` : style.row;\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(provided, snapshot) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {(() => {\n              // reverse order\n              const rows: any = [];\n              const lastLayerIndex = excludeBaseLayer ? 1 : 0;\n              const shouldRenderDragIconLengthThreshold = excludeBaseLayer ? 2 : 1;\n              for (let i = layers.length - 1; i >= lastLayerIndex; i--) {\n                const element = layers[i];\n                const uid = element.getName();\n\n                const isSelected = Boolean(selection?.includes(uid));\n                rows.push(\n                  <Draggable key={uid} draggableId={uid} index={rows.length}>\n                    {(provided, snapshot) => (\n                      <div\n                        className={getRowStyle(isSelected)}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        onMouseDown={() => onSelect(element)}\n                      >\n                        <LayerName\n                          name={uid}\n                          onChange={(v) => onNameChange(element, v)}\n                          verifyLayerNameUniqueness={verifyLayerNameUniqueness ?? undefined}\n                        />\n                        <div className={style.textWrapper}>&nbsp; {getLayerInfo(element)}</div>\n\n                        {showActions(element) && (\n                          <>\n                            {onDuplicate ? (\n                              <IconButton\n                                name=\"copy\"\n                                title={'Duplicate'}\n                                className={style.actionIcon}\n                                onClick={() => onDuplicate(element)}\n                              />\n                            ) : null}\n\n                            <IconButton\n                              name=\"trash-alt\"\n                              title={'remove'}\n                              className={cx(style.actionIcon, style.dragIcon)}\n                              onClick={() => onDelete(element)}\n                            />\n                          </>\n                        )}\n                        {layers.length > shouldRenderDragIconLengthThreshold && (\n                          <Icon\n                            title=\"Drag and drop to reorder\"\n                            name=\"draggabledots\"\n                            size=\"lg\"\n                            className={style.dragIcon}\n                          />\n                        )}\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              }\n\n              return rows;\n            })()}\n\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nLayerDragDropList.defaultProps = {\n  isGroup: () => false,\n};\n\nconst styles = stylesFactory((theme: GrafanaTheme) => ({\n  wrapper: css`\n    margin-bottom: ${theme.spacing.md};\n  `,\n  row: css`\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    border-radius: ${theme.border.radius.sm};\n    background: ${theme.colors.bg2};\n    min-height: ${theme.spacing.formInputHeight}px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 3px;\n    cursor: pointer;\n\n    border: 1px solid ${theme.colors.formInputBorder};\n    &:hover {\n      border: 1px solid ${theme.colors.formInputBorderHover};\n    }\n  `,\n  sel: css`\n    border: 1px solid ${theme.colors.formInputBorderActive};\n    &:hover {\n      border: 1px solid ${theme.colors.formInputBorderActive};\n    }\n  `,\n  dragIcon: css`\n    cursor: drag;\n  `,\n  actionIcon: css`\n    color: ${theme.colors.textWeak};\n    &:hover {\n      color: ${theme.colors.text};\n    }\n  `,\n  typeWrapper: css`\n    color: ${theme.colors.textBlue};\n    margin-right: 5px;\n  `,\n  textWrapper: css`\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    overflow: hidden;\n    margin-right: ${theme.spacing.sm};\n  `,\n}));\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAkE,qBAAlE;AAGA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,QAAgD,aAAhD;AAEA,SAASC,SAAT,QAA0B,aAA1B;;;;AAiBA,OAAO,MAAMC,iBAAiB,GAAG,CAAyB;EACxDC,MADwD;EAExDC,YAFwD;EAGxDC,SAHwD;EAIxDC,QAJwD;EAKxDC,QALwD;EAMxDC,WANwD;EAOxDC,WAPwD;EAQxDC,SARwD;EASxDC,gBATwD;EAUxDC,YAVwD;EAWxDC;AAXwD,CAAzB,KAYA;EAC/B,MAAMC,KAAK,GAAGC,MAAM,CAAClB,MAAM,CAACmB,KAAR,CAApB;;EAEA,MAAMC,WAAW,GAAIC,UAAD,IAAyB;IAC3C,OAAOA,UAAU,GAAI,GAAEJ,KAAK,CAACK,GAAI,IAAGL,KAAK,CAACM,GAAI,EAA7B,GAAiCN,KAAK,CAACK,GAAxD;EACD,CAFD;;EAIA,oBACE,KAAC,eAAD;IAAiB,SAAS,EAAEd,SAA5B;IAAA,uBACE,KAAC,SAAD;MAAW,WAAW,EAAC,WAAvB;MAAA,UACG,CAACgB,QAAD,EAAWC,QAAX,kBACC,+BAASD,QAAQ,CAACE,cAAlB;QAAkC,GAAG,EAAEF,QAAQ,CAACG,QAAhD;QAAA,WACG,CAAC,MAAM;UACN;UACA,MAAMC,IAAS,GAAG,EAAlB;UACA,MAAMC,cAAc,GAAGf,gBAAgB,GAAG,CAAH,GAAO,CAA9C;UACA,MAAMgB,mCAAmC,GAAGhB,gBAAgB,GAAG,CAAH,GAAO,CAAnE;;UACA,KAAK,IAAIiB,CAAC,GAAGzB,MAAM,CAAC0B,MAAP,GAAgB,CAA7B,EAAgCD,CAAC,IAAIF,cAArC,EAAqDE,CAAC,EAAtD,EAA0D;YACxD,MAAME,OAAO,GAAG3B,MAAM,CAACyB,CAAD,CAAtB;YACA,MAAMG,GAAG,GAAGD,OAAO,CAACE,OAAR,EAAZ;YAEA,MAAMd,UAAU,GAAGe,OAAO,CAACvB,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEwB,QAAX,CAAoBH,GAApB,CAAD,CAA1B;YACAN,IAAI,CAACU,IAAL,eACE,KAAC,SAAD;cAAqB,WAAW,EAAEJ,GAAlC;cAAuC,KAAK,EAAEN,IAAI,CAACI,MAAnD;cAAA,UACG,CAACR,QAAD,EAAWC,QAAX,kBACC;gBACE,SAAS,EAAEL,WAAW,CAACC,UAAD,CADxB;gBAEE,GAAG,EAAEG,QAAQ,CAACG;cAFhB,GAGMH,QAAQ,CAACe,cAHf,EAIMf,QAAQ,CAACgB,eAJf;gBAKE,WAAW,EAAE,MAAM/B,QAAQ,CAACwB,OAAD,CAL7B;gBAAA,wBAOE,KAAC,SAAD;kBACE,IAAI,EAAEC,GADR;kBAEE,QAAQ,EAAGO,CAAD,IAAO1B,YAAY,CAACkB,OAAD,EAAUQ,CAAV,CAF/B;kBAGE,yBAAyB,EAAEzB,yBAAF,aAAEA,yBAAF,cAAEA,yBAAF,GAA+B0B;gBAH1D,EAPF,eAYE;kBAAK,SAAS,EAAEzB,KAAK,CAAC0B,WAAtB;kBAAA,oBAA2CpC,YAAY,CAAC0B,OAAD,CAAvD;gBAAA,EAZF,EAcGrB,WAAW,CAACqB,OAAD,CAAX,iBACC;kBAAA,WACGtB,WAAW,gBACV,KAAC,UAAD;oBACE,IAAI,EAAC,MADP;oBAEE,KAAK,EAAE,WAFT;oBAGE,SAAS,EAAEM,KAAK,CAAC2B,UAHnB;oBAIE,OAAO,EAAE,MAAMjC,WAAW,CAACsB,OAAD;kBAJ5B,EADU,GAOR,IARN,eAUE,KAAC,UAAD;oBACE,IAAI,EAAC,WADP;oBAEE,KAAK,EAAE,QAFT;oBAGE,SAAS,EAAEtC,EAAE,CAACsB,KAAK,CAAC2B,UAAP,EAAmB3B,KAAK,CAAC4B,QAAzB,CAHf;oBAIE,OAAO,EAAE,MAAMnC,QAAQ,CAACuB,OAAD;kBAJzB,EAVF;gBAAA,EAfJ,EAiCG3B,MAAM,CAAC0B,MAAP,GAAgBF,mCAAhB,iBACC,KAAC,IAAD;kBACE,KAAK,EAAC,0BADR;kBAEE,IAAI,EAAC,eAFP;kBAGE,IAAI,EAAC,IAHP;kBAIE,SAAS,EAAEb,KAAK,CAAC4B;gBAJnB,EAlCJ;cAAA;YAFJ,GAAgBX,GAAhB,CADF;UAgDD;;UAED,OAAON,IAAP;QACD,CA7DA,GADH,EAgEGJ,QAAQ,CAACsB,WAhEZ;MAAA;IAFJ;EADF,EADF;AA0ED,CA7FM;AA+FPzC,iBAAiB,CAAC0C,YAAlB,GAAiC;EAC/BC,OAAO,EAAE,MAAM;AADgB,CAAjC;AAIA,MAAM9B,MAAM,GAAGf,aAAa,CAAEgB,KAAD,KAA0B;EACrD8B,OAAO,EAAEvD,GAAI;AACf,qBAAqByB,KAAK,CAAC+B,OAAN,CAAcC,EAAG;AACtC,GAHuD;EAIrD7B,GAAG,EAAE5B,GAAI;AACX,eAAeyB,KAAK,CAAC+B,OAAN,CAAcE,EAAG,IAAGjC,KAAK,CAAC+B,OAAN,CAAcG,EAAG;AACpD,qBAAqBlC,KAAK,CAACmC,MAAN,CAAaC,MAAb,CAAoBF,EAAG;AAC5C,kBAAkBlC,KAAK,CAACqC,MAAN,CAAaC,GAAI;AACnC,kBAAkBtC,KAAK,CAAC+B,OAAN,CAAcQ,eAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBvC,KAAK,CAACqC,MAAN,CAAaG,eAAgB;AACrD;AACA,0BAA0BxC,KAAK,CAACqC,MAAN,CAAaI,oBAAqB;AAC5D;AACA,GAnBuD;EAoBrDrC,GAAG,EAAE7B,GAAI;AACX,wBAAwByB,KAAK,CAACqC,MAAN,CAAaK,qBAAsB;AAC3D;AACA,0BAA0B1C,KAAK,CAACqC,MAAN,CAAaK,qBAAsB;AAC7D;AACA,GAzBuD;EA0BrDhB,QAAQ,EAAEnD,GAAI;AAChB;AACA,GA5BuD;EA6BrDkD,UAAU,EAAElD,GAAI;AAClB,aAAayB,KAAK,CAACqC,MAAN,CAAaM,QAAS;AACnC;AACA,eAAe3C,KAAK,CAACqC,MAAN,CAAaO,IAAK;AACjC;AACA,GAlCuD;EAmCrDC,WAAW,EAAEtE,GAAI;AACnB,aAAayB,KAAK,CAACqC,MAAN,CAAaS,QAAS;AACnC;AACA,GAtCuD;EAuCrDtB,WAAW,EAAEjD,GAAI;AACnB;AACA;AACA;AACA;AACA,oBAAoByB,KAAK,CAAC+B,OAAN,CAAcG,EAAG;AACrC;AA7CuD,CAA1B,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}