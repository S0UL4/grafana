{"ast":null,"code":"var _SharedPreferences;\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useMount } from 'react-use';\nimport { VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport SharedPreferences from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport UserOrganizations from './UserOrganizations';\nimport UserProfileEditForm from './UserProfileEditForm';\nimport UserSessions from './UserSessions';\nimport { UserTeams } from './UserTeams';\nimport { changeUserOrg, initUserProfilePage, revokeUserSession, updateUserProfile } from './state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state) {\n  const userState = state.user;\n  const {\n    user,\n    teams,\n    orgs,\n    sessions,\n    teamsAreLoading,\n    orgsAreLoading,\n    sessionsAreLoading,\n    isUpdating\n  } = userState;\n  return {\n    navModel: getNavModel(state.navIndex, 'profile-settings'),\n    orgsAreLoading,\n    sessionsAreLoading,\n    teamsAreLoading,\n    orgs,\n    sessions,\n    teams,\n    isUpdating,\n    user\n  };\n}\n\nconst mapDispatchToProps = {\n  initUserProfilePage,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport function UserProfileEditPage({\n  navModel,\n  orgsAreLoading,\n  sessionsAreLoading,\n  teamsAreLoading,\n  initUserProfilePage,\n  orgs,\n  sessions,\n  teams,\n  isUpdating,\n  user,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile\n}) {\n  useMount(() => initUserProfilePage());\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsx(Page.Contents, {\n      isLoading: !user,\n      children: /*#__PURE__*/_jsxs(VerticalGroup, {\n        spacing: \"md\",\n        children: [/*#__PURE__*/_jsx(UserProfileEditForm, {\n          updateProfile: updateUserProfile,\n          isSavingUser: isUpdating,\n          user: user\n        }), _SharedPreferences || (_SharedPreferences = /*#__PURE__*/_jsx(SharedPreferences, {\n          resourceUri: \"user\"\n        })), /*#__PURE__*/_jsx(UserTeams, {\n          isLoading: teamsAreLoading,\n          teams: teams\n        }), /*#__PURE__*/_jsx(UserOrganizations, {\n          isLoading: orgsAreLoading,\n          setUserOrg: changeUserOrg,\n          orgs: orgs,\n          user: user\n        }), /*#__PURE__*/_jsx(UserSessions, {\n          isLoading: sessionsAreLoading,\n          revokeUserSession: revokeUserSession,\n          sessions: sessions\n        })]\n      })\n    })\n  });\n}\nexport default connector(UserProfileEditPage);","map":{"version":3,"names":["React","connect","useMount","VerticalGroup","Page","SharedPreferences","getNavModel","UserOrganizations","UserProfileEditForm","UserSessions","UserTeams","changeUserOrg","initUserProfilePage","revokeUserSession","updateUserProfile","mapStateToProps","state","userState","user","teams","orgs","sessions","teamsAreLoading","orgsAreLoading","sessionsAreLoading","isUpdating","navModel","navIndex","mapDispatchToProps","connector","UserProfileEditPage"],"sources":["/home/soula/grafana/public/app/features/profile/UserProfileEditPage.tsx"],"sourcesContent":["import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useMount } from 'react-use';\n\nimport { NavModel } from '@grafana/data';\nimport { VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport SharedPreferences from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nimport UserOrganizations from './UserOrganizations';\nimport UserProfileEditForm from './UserProfileEditForm';\nimport UserSessions from './UserSessions';\nimport { UserTeams } from './UserTeams';\nimport { changeUserOrg, initUserProfilePage, revokeUserSession, updateUserProfile } from './state/actions';\n\nexport interface OwnProps {\n  navModel: NavModel;\n}\n\nfunction mapStateToProps(state: StoreState) {\n  const userState = state.user;\n  const { user, teams, orgs, sessions, teamsAreLoading, orgsAreLoading, sessionsAreLoading, isUpdating } = userState;\n  return {\n    navModel: getNavModel(state.navIndex, 'profile-settings'),\n    orgsAreLoading,\n    sessionsAreLoading,\n    teamsAreLoading,\n    orgs,\n    sessions,\n    teams,\n    isUpdating,\n    user,\n  };\n}\n\nconst mapDispatchToProps = {\n  initUserProfilePage,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport type Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UserProfileEditPage({\n  navModel,\n  orgsAreLoading,\n  sessionsAreLoading,\n  teamsAreLoading,\n  initUserProfilePage,\n  orgs,\n  sessions,\n  teams,\n  isUpdating,\n  user,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile,\n}: Props) {\n  useMount(() => initUserProfilePage());\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents isLoading={!user}>\n        <VerticalGroup spacing=\"md\">\n          <UserProfileEditForm updateProfile={updateUserProfile} isSavingUser={isUpdating} user={user} />\n          <SharedPreferences resourceUri=\"user\" />\n          <UserTeams isLoading={teamsAreLoading} teams={teams} />\n          <UserOrganizations isLoading={orgsAreLoading} setUserOrg={changeUserOrg} orgs={orgs} user={user} />\n          <UserSessions isLoading={sessionsAreLoading} revokeUserSession={revokeUserSession} sessions={sessions} />\n        </VerticalGroup>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nexport default connector(UserProfileEditPage);\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,iBAAP,MAA8B,yDAA9B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,iBAA7C,EAAgEC,iBAAhE,QAAyF,iBAAzF;;;;AAMA,SAASC,eAAT,CAAyBC,KAAzB,EAA4C;EAC1C,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;EACA,MAAM;IAAEA,IAAF;IAAQC,KAAR;IAAeC,IAAf;IAAqBC,QAArB;IAA+BC,eAA/B;IAAgDC,cAAhD;IAAgEC,kBAAhE;IAAoFC;EAApF,IAAmGR,SAAzG;EACA,OAAO;IACLS,QAAQ,EAAEpB,WAAW,CAACU,KAAK,CAACW,QAAP,EAAiB,kBAAjB,CADhB;IAELJ,cAFK;IAGLC,kBAHK;IAILF,eAJK;IAKLF,IALK;IAMLC,QANK;IAOLF,KAPK;IAQLM,UARK;IASLP;EATK,CAAP;AAWD;;AAED,MAAMU,kBAAkB,GAAG;EACzBhB,mBADyB;EAEzBC,iBAFyB;EAGzBF,aAHyB;EAIzBG;AAJyB,CAA3B;AAOA,MAAMe,SAAS,GAAG5B,OAAO,CAACc,eAAD,EAAkBa,kBAAlB,CAAzB;AAIA,OAAO,SAASE,mBAAT,CAA6B;EAClCJ,QADkC;EAElCH,cAFkC;EAGlCC,kBAHkC;EAIlCF,eAJkC;EAKlCV,mBALkC;EAMlCQ,IANkC;EAOlCC,QAPkC;EAQlCF,KARkC;EASlCM,UATkC;EAUlCP,IAVkC;EAWlCL,iBAXkC;EAYlCF,aAZkC;EAalCG;AAbkC,CAA7B,EAcG;EACRZ,QAAQ,CAAC,MAAMU,mBAAmB,EAA1B,CAAR;EAEA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEc,QAAhB;IAAA,uBACE,KAAC,IAAD,CAAM,QAAN;MAAe,SAAS,EAAE,CAACR,IAA3B;MAAA,uBACE,MAAC,aAAD;QAAe,OAAO,EAAC,IAAvB;QAAA,wBACE,KAAC,mBAAD;UAAqB,aAAa,EAAEJ,iBAApC;UAAuD,YAAY,EAAEW,UAArE;UAAiF,IAAI,EAAEP;QAAvF,EADF,2DAEE,KAAC,iBAAD;UAAmB,WAAW,EAAC;QAA/B,EAFF,gBAGE,KAAC,SAAD;UAAW,SAAS,EAAEI,eAAtB;UAAuC,KAAK,EAAEH;QAA9C,EAHF,eAIE,KAAC,iBAAD;UAAmB,SAAS,EAAEI,cAA9B;UAA8C,UAAU,EAAEZ,aAA1D;UAAyE,IAAI,EAAES,IAA/E;UAAqF,IAAI,EAAEF;QAA3F,EAJF,eAKE,KAAC,YAAD;UAAc,SAAS,EAAEM,kBAAzB;UAA6C,iBAAiB,EAAEX,iBAAhE;UAAmF,QAAQ,EAAEQ;QAA7F,EALF;MAAA;IADF;EADF,EADF;AAaD;AAED,eAAeQ,SAAS,CAACC,mBAAD,CAAxB"},"metadata":{},"sourceType":"module"}