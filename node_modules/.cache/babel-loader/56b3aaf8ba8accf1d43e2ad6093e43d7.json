{"ast":null,"code":"var _div;\n\nimport React, { useMemo } from 'react';\nimport { buildHistogram, getHistogramFields } from '@grafana/data';\nimport { histogramFieldsToFrame } from '@grafana/data/src/transformations/transformers/histogram';\nimport { useTheme2 } from '@grafana/ui';\nimport { Histogram, getBucketSize } from './Histogram';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const HistogramPanel = ({\n  data,\n  options,\n  width,\n  height\n}) => {\n  const theme = useTheme2();\n  const histogram = useMemo(() => {\n    var _data$series;\n\n    if (!(data !== null && data !== void 0 && (_data$series = data.series) !== null && _data$series !== void 0 && _data$series.length)) {\n      return undefined;\n    }\n\n    if (data.series.length === 1) {\n      const info = getHistogramFields(data.series[0]);\n\n      if (info) {\n        return histogramFieldsToFrame(info);\n      }\n    }\n\n    const hist = buildHistogram(data.series, options);\n\n    if (!hist) {\n      return undefined;\n    }\n\n    return histogramFieldsToFrame(hist, theme);\n  }, [data.series, options, theme]);\n\n  if (!histogram || !histogram.fields.length) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-empty\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: \"No histogram found in response\"\n      })\n    }));\n  }\n\n  const bucketSize = getBucketSize(histogram);\n  return /*#__PURE__*/_jsx(Histogram, {\n    options: options,\n    theme: theme,\n    legend: options.legend,\n    structureRev: data.structureRev,\n    width: width,\n    height: height,\n    alignedFrame: histogram,\n    bucketSize: bucketSize,\n    children: (config, alignedFrame) => {\n      return null; // <TooltipPlugin data={alignedFrame} config={config} mode={options.tooltip.mode} timeZone={timeZone} />;\n    }\n  });\n};","map":{"version":3,"names":["React","useMemo","buildHistogram","getHistogramFields","histogramFieldsToFrame","useTheme2","Histogram","getBucketSize","HistogramPanel","data","options","width","height","theme","histogram","series","length","undefined","info","hist","fields","bucketSize","legend","structureRev","config","alignedFrame"],"sources":["/home/soula/grafana/public/app/plugins/panel/histogram/HistogramPanel.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { PanelProps, buildHistogram, getHistogramFields } from '@grafana/data';\nimport { histogramFieldsToFrame } from '@grafana/data/src/transformations/transformers/histogram';\nimport { useTheme2 } from '@grafana/ui';\n\nimport { Histogram, getBucketSize } from './Histogram';\nimport { PanelOptions } from './models.gen';\n\ntype Props = PanelProps<PanelOptions>;\n\nexport const HistogramPanel: React.FC<Props> = ({ data, options, width, height }) => {\n  const theme = useTheme2();\n\n  const histogram = useMemo(() => {\n    if (!data?.series?.length) {\n      return undefined;\n    }\n    if (data.series.length === 1) {\n      const info = getHistogramFields(data.series[0]);\n      if (info) {\n        return histogramFieldsToFrame(info);\n      }\n    }\n    const hist = buildHistogram(data.series, options);\n    if (!hist) {\n      return undefined;\n    }\n\n    return histogramFieldsToFrame(hist, theme);\n  }, [data.series, options, theme]);\n\n  if (!histogram || !histogram.fields.length) {\n    return (\n      <div className=\"panel-empty\">\n        <p>No histogram found in response</p>\n      </div>\n    );\n  }\n\n  const bucketSize = getBucketSize(histogram);\n\n  return (\n    <Histogram\n      options={options}\n      theme={theme}\n      legend={options.legend}\n      structureRev={data.structureRev}\n      width={width}\n      height={height}\n      alignedFrame={histogram}\n      bucketSize={bucketSize}\n    >\n      {(config, alignedFrame) => {\n        return null; // <TooltipPlugin data={alignedFrame} config={config} mode={options.tooltip.mode} timeZone={timeZone} />;\n      }}\n    </Histogram>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAAqBC,cAArB,EAAqCC,kBAArC,QAA+D,eAA/D;AACA,SAASC,sBAAT,QAAuC,0DAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,aAAzC;;AAKA,OAAO,MAAMC,cAA+B,GAAG,CAAC;EAAEC,IAAF;EAAQC,OAAR;EAAiBC,KAAjB;EAAwBC;AAAxB,CAAD,KAAsC;EACnF,MAAMC,KAAK,GAAGR,SAAS,EAAvB;EAEA,MAAMS,SAAS,GAAGb,OAAO,CAAC,MAAM;IAAA;;IAC9B,IAAI,EAACQ,IAAD,aAACA,IAAD,+BAACA,IAAI,CAAEM,MAAP,yCAAC,aAAcC,MAAf,CAAJ,EAA2B;MACzB,OAAOC,SAAP;IACD;;IACD,IAAIR,IAAI,CAACM,MAAL,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;MAC5B,MAAME,IAAI,GAAGf,kBAAkB,CAACM,IAAI,CAACM,MAAL,CAAY,CAAZ,CAAD,CAA/B;;MACA,IAAIG,IAAJ,EAAU;QACR,OAAOd,sBAAsB,CAACc,IAAD,CAA7B;MACD;IACF;;IACD,MAAMC,IAAI,GAAGjB,cAAc,CAACO,IAAI,CAACM,MAAN,EAAcL,OAAd,CAA3B;;IACA,IAAI,CAACS,IAAL,EAAW;MACT,OAAOF,SAAP;IACD;;IAED,OAAOb,sBAAsB,CAACe,IAAD,EAAON,KAAP,CAA7B;EACD,CAhBwB,EAgBtB,CAACJ,IAAI,CAACM,MAAN,EAAcL,OAAd,EAAuBG,KAAvB,CAhBsB,CAAzB;;EAkBA,IAAI,CAACC,SAAD,IAAc,CAACA,SAAS,CAACM,MAAV,CAAiBJ,MAApC,EAA4C;IAC1C,oCACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA;MAAA;IADF,EADF;EAKD;;EAED,MAAMK,UAAU,GAAGd,aAAa,CAACO,SAAD,CAAhC;EAEA,oBACE,KAAC,SAAD;IACE,OAAO,EAAEJ,OADX;IAEE,KAAK,EAAEG,KAFT;IAGE,MAAM,EAAEH,OAAO,CAACY,MAHlB;IAIE,YAAY,EAAEb,IAAI,CAACc,YAJrB;IAKE,KAAK,EAAEZ,KALT;IAME,MAAM,EAAEC,MANV;IAOE,YAAY,EAAEE,SAPhB;IAQE,UAAU,EAAEO,UARd;IAAA,UAUG,CAACG,MAAD,EAASC,YAAT,KAA0B;MACzB,OAAO,IAAP,CADyB,CACZ;IACd;EAZH,EADF;AAgBD,CA/CM"},"metadata":{},"sourceType":"module"}