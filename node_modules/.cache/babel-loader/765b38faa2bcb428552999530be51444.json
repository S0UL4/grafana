{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CoreApp, VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { usePanelContext, useStyles2 } from '@grafana/ui';\nimport { CardButton } from 'app/core/components/CardButton';\nimport { LS_VISUALIZATION_SELECT_TAB_KEY } from 'app/core/constants';\nimport store from 'app/core/store';\nimport { toggleVizPicker } from 'app/features/dashboard/components/PanelEditor/state/reducers';\nimport { VisualizationSelectPaneTab } from 'app/features/dashboard/components/PanelEditor/types';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { changePanelPlugin } from '../state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function PanelDataErrorView(props) {\n  const styles = useStyles2(getStyles);\n  const context = usePanelContext();\n  const builder = new VisualizationSuggestionsBuilder(props.data);\n  const {\n    dataSummary\n  } = builder;\n  const message = getMessageFor(props, dataSummary);\n  const dispatch = useDispatch();\n\n  const openVizPicker = () => {\n    store.setObject(LS_VISUALIZATION_SELECT_TAB_KEY, VisualizationSelectPaneTab.Suggestions);\n    dispatch(toggleVizPicker(true));\n  };\n\n  const switchToTable = () => {\n    var _getDashboardSrv$getC;\n\n    const panel = (_getDashboardSrv$getC = getDashboardSrv().getCurrent()) === null || _getDashboardSrv$getC === void 0 ? void 0 : _getDashboardSrv$getC.getPanelById(props.panelId);\n\n    if (!panel) {\n      return;\n    }\n\n    dispatch(changePanelPlugin({\n      panel,\n      pluginId: 'table'\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.message,\n      children: message\n    }), context.app === CoreApp.PanelEditor && dataSummary.hasData && /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsx(CardButton, {\n        icon: \"table\",\n        onClick: switchToTable,\n        children: \"Switch to table\"\n      }), /*#__PURE__*/_jsx(CardButton, {\n        icon: \"chart-line\",\n        onClick: openVizPicker,\n        children: \"Open visualization suggestions\"\n      })]\n    })]\n  });\n}\n\nfunction getMessageFor({\n  data,\n  fieldConfig,\n  message,\n  needsNumberField,\n  needsTimeField,\n  needsStringField\n}, dataSummary) {\n  if (message) {\n    return message;\n  } // In some cases there is a data frame but with no fields\n\n\n  if (!data.series || data.series.length === 0 || data.series.length === 1 && data.series[0].length === 0) {\n    var _fieldConfig$defaults;\n\n    return (_fieldConfig$defaults = fieldConfig === null || fieldConfig === void 0 ? void 0 : fieldConfig.defaults.noValue) !== null && _fieldConfig$defaults !== void 0 ? _fieldConfig$defaults : 'No data';\n  }\n\n  if (needsStringField && !dataSummary.hasStringField) {\n    return 'Data is missing a string field';\n  }\n\n  if (needsNumberField && !dataSummary.hasNumberField) {\n    return 'Data is missing a number field';\n  }\n\n  if (needsTimeField && !dataSummary.hasTimeField) {\n    return 'Data is missing a time field';\n  }\n\n  return 'Cannot visualize data';\n}\n\nconst getStyles = theme => {\n  return {\n    wrapper: css({\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      width: '100%'\n    }),\n    message: css({\n      textAlign: 'center',\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.size.lg,\n      width: '100%'\n    }),\n    actions: css({\n      marginTop: theme.spacing(2),\n      display: 'flex',\n      height: '50%',\n      maxHeight: '150px',\n      columnGap: theme.spacing(1),\n      rowGap: theme.spacing(1),\n      width: '100%',\n      maxWidth: '600px'\n    })\n  };\n};","map":{"version":3,"names":["css","React","useDispatch","CoreApp","VisualizationSuggestionsBuilder","usePanelContext","useStyles2","CardButton","LS_VISUALIZATION_SELECT_TAB_KEY","store","toggleVizPicker","VisualizationSelectPaneTab","getDashboardSrv","changePanelPlugin","PanelDataErrorView","props","styles","getStyles","context","builder","data","dataSummary","message","getMessageFor","dispatch","openVizPicker","setObject","Suggestions","switchToTable","panel","getCurrent","getPanelById","panelId","pluginId","wrapper","app","PanelEditor","hasData","actions","fieldConfig","needsNumberField","needsTimeField","needsStringField","series","length","defaults","noValue","hasStringField","hasNumberField","hasTimeField","theme","display","flexDirection","justifyContent","alignItems","height","width","textAlign","color","colors","text","secondary","fontSize","typography","size","lg","marginTop","spacing","maxHeight","columnGap","rowGap","maxWidth"],"sources":["/home/soula/grafana/public/app/features/panel/components/PanelDataErrorView.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { CoreApp, GrafanaTheme2, PanelDataSummary, VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PanelDataErrorViewProps } from '@grafana/runtime';\nimport { usePanelContext, useStyles2 } from '@grafana/ui';\nimport { CardButton } from 'app/core/components/CardButton';\nimport { LS_VISUALIZATION_SELECT_TAB_KEY } from 'app/core/constants';\nimport store from 'app/core/store';\nimport { toggleVizPicker } from 'app/features/dashboard/components/PanelEditor/state/reducers';\nimport { VisualizationSelectPaneTab } from 'app/features/dashboard/components/PanelEditor/types';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nimport { changePanelPlugin } from '../state/actions';\n\nexport function PanelDataErrorView(props: PanelDataErrorViewProps) {\n  const styles = useStyles2(getStyles);\n  const context = usePanelContext();\n  const builder = new VisualizationSuggestionsBuilder(props.data);\n  const { dataSummary } = builder;\n  const message = getMessageFor(props, dataSummary);\n  const dispatch = useDispatch();\n\n  const openVizPicker = () => {\n    store.setObject(LS_VISUALIZATION_SELECT_TAB_KEY, VisualizationSelectPaneTab.Suggestions);\n    dispatch(toggleVizPicker(true));\n  };\n\n  const switchToTable = () => {\n    const panel = getDashboardSrv().getCurrent()?.getPanelById(props.panelId);\n    if (!panel) {\n      return;\n    }\n\n    dispatch(\n      changePanelPlugin({\n        panel,\n        pluginId: 'table',\n      })\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.message}>{message}</div>\n      {context.app === CoreApp.PanelEditor && dataSummary.hasData && (\n        <div className={styles.actions}>\n          <CardButton icon=\"table\" onClick={switchToTable}>\n            Switch to table\n          </CardButton>\n          <CardButton icon=\"chart-line\" onClick={openVizPicker}>\n            Open visualization suggestions\n          </CardButton>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction getMessageFor(\n  { data, fieldConfig, message, needsNumberField, needsTimeField, needsStringField }: PanelDataErrorViewProps,\n  dataSummary: PanelDataSummary\n): string {\n  if (message) {\n    return message;\n  }\n\n  // In some cases there is a data frame but with no fields\n  if (!data.series || data.series.length === 0 || (data.series.length === 1 && data.series[0].length === 0)) {\n    return fieldConfig?.defaults.noValue ?? 'No data';\n  }\n\n  if (needsStringField && !dataSummary.hasStringField) {\n    return 'Data is missing a string field';\n  }\n\n  if (needsNumberField && !dataSummary.hasNumberField) {\n    return 'Data is missing a number field';\n  }\n\n  if (needsTimeField && !dataSummary.hasTimeField) {\n    return 'Data is missing a time field';\n  }\n\n  return 'Cannot visualize data';\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      width: '100%',\n    }),\n    message: css({\n      textAlign: 'center',\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.size.lg,\n      width: '100%',\n    }),\n    actions: css({\n      marginTop: theme.spacing(2),\n      display: 'flex',\n      height: '50%',\n      maxHeight: '150px',\n      columnGap: theme.spacing(1),\n      rowGap: theme.spacing(1),\n      width: '100%',\n      maxWidth: '600px',\n    }),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}