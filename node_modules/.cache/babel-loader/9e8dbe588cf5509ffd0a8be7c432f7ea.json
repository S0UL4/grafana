{"ast":null,"code":"import { createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport { fetchInvitees, revokeInvite } from './actions';\nconst invitesAdapter = createEntityAdapter({\n  selectId: invite => invite.code\n});\nexport const selectors = invitesAdapter.getSelectors();\nexport const initialState = invitesAdapter.getInitialState({\n  status: 'idle'\n});\nconst invitesSlice = createSlice({\n  name: 'invites',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchInvitees.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchInvitees.fulfilled, (state, {\n      payload: invites\n    }) => {\n      invitesAdapter.setAll(state, invites);\n      state.status = 'succeeded';\n    }).addCase(fetchInvitees.rejected, state => {\n      state.status = 'failed';\n    }).addCase(revokeInvite.fulfilled, (state, {\n      payload: inviteCode\n    }) => {\n      invitesAdapter.removeOne(state, inviteCode);\n      state.status = 'succeeded';\n    });\n  }\n});\nexport const invitesReducer = invitesSlice.reducer;\nexport default {\n  invites: invitesReducer\n};","map":{"version":3,"names":["createEntityAdapter","createSlice","fetchInvitees","revokeInvite","invitesAdapter","selectId","invite","code","selectors","getSelectors","initialState","getInitialState","status","invitesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","invites","setAll","rejected","inviteCode","removeOne","invitesReducer","reducer"],"sources":["/home/soula/grafana/public/app/features/invites/state/reducers.ts"],"sourcesContent":["import { createEntityAdapter, createSlice } from '@reduxjs/toolkit';\n\nimport { Invitee } from 'app/types';\n\nimport { fetchInvitees, revokeInvite } from './actions';\n\nexport type Status = 'idle' | 'loading' | 'succeeded' | 'failed';\n\nconst invitesAdapter = createEntityAdapter({ selectId: (invite: Invitee) => invite.code });\nexport const selectors = invitesAdapter.getSelectors();\nexport const initialState = invitesAdapter.getInitialState<{ status: Status }>({ status: 'idle' });\n\nconst invitesSlice = createSlice({\n  name: 'invites',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchInvitees.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchInvitees.fulfilled, (state, { payload: invites }) => {\n        invitesAdapter.setAll(state, invites);\n        state.status = 'succeeded';\n      })\n      .addCase(fetchInvitees.rejected, (state) => {\n        state.status = 'failed';\n      })\n      .addCase(revokeInvite.fulfilled, (state, { payload: inviteCode }) => {\n        invitesAdapter.removeOne(state, inviteCode);\n        state.status = 'succeeded';\n      });\n  },\n});\n\nexport const invitesReducer = invitesSlice.reducer;\n\nexport default {\n  invites: invitesReducer,\n};\n"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,WAA9B,QAAiD,kBAAjD;AAIA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,WAA5C;AAIA,MAAMC,cAAc,GAAGJ,mBAAmB,CAAC;EAAEK,QAAQ,EAAGC,MAAD,IAAqBA,MAAM,CAACC;AAAxC,CAAD,CAA1C;AACA,OAAO,MAAMC,SAAS,GAAGJ,cAAc,CAACK,YAAf,EAAlB;AACP,OAAO,MAAMC,YAAY,GAAGN,cAAc,CAACO,eAAf,CAAmD;EAAEC,MAAM,EAAE;AAAV,CAAnD,CAArB;AAEP,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/Ba,IAAI,EAAE,SADyB;EAE/BJ,YAF+B;EAG/BK,QAAQ,EAAE,EAHqB;EAI/BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWhB,aAAa,CAACiB,OADzB,EACmCC,KAAD,IAAW;MACzCA,KAAK,CAACR,MAAN,GAAe,SAAf;IACD,CAHH,EAIGM,OAJH,CAIWhB,aAAa,CAACmB,SAJzB,EAIoC,CAACD,KAAD,EAAQ;MAAEE,OAAO,EAAEC;IAAX,CAAR,KAAiC;MACjEnB,cAAc,CAACoB,MAAf,CAAsBJ,KAAtB,EAA6BG,OAA7B;MACAH,KAAK,CAACR,MAAN,GAAe,WAAf;IACD,CAPH,EAQGM,OARH,CAQWhB,aAAa,CAACuB,QARzB,EAQoCL,KAAD,IAAW;MAC1CA,KAAK,CAACR,MAAN,GAAe,QAAf;IACD,CAVH,EAWGM,OAXH,CAWWf,YAAY,CAACkB,SAXxB,EAWmC,CAACD,KAAD,EAAQ;MAAEE,OAAO,EAAEI;IAAX,CAAR,KAAoC;MACnEtB,cAAc,CAACuB,SAAf,CAAyBP,KAAzB,EAAgCM,UAAhC;MACAN,KAAK,CAACR,MAAN,GAAe,WAAf;IACD,CAdH;EAeD;AApB8B,CAAD,CAAhC;AAuBA,OAAO,MAAMgB,cAAc,GAAGf,YAAY,CAACgB,OAApC;AAEP,eAAe;EACbN,OAAO,EAAEK;AADI,CAAf"},"metadata":{},"sourceType":"module"}