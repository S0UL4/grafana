{"ast":null,"code":"const _excluded = [\"value\", \"minDate\", \"onChange\", \"closeOnSelect\", \"placeholder\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { dateTime } from '@grafana/data';\nimport { useStyles } from '../../../themes';\nimport { Input } from '../../Input/Input';\nimport { DatePicker } from '../DatePicker/DatePicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const formatDate = date => dateTime(date).format('L');\n/** @public */\n\n/** @public */\nexport const DatePickerWithInput = _ref => {\n  let {\n    value,\n    minDate,\n    onChange,\n    closeOnSelect,\n    placeholder = 'Date'\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [open, setOpen] = React.useState(false);\n  const styles = useStyles(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsx(Input, Object.assign({\n      type: \"text\",\n      autoComplete: 'off',\n      placeholder: placeholder,\n      value: value ? formatDate(value) : value,\n      onClick: () => setOpen(true),\n      onChange: ev => {\n        // Allow resetting the date\n        if (ev.target.value === '') {\n          onChange('');\n        }\n      },\n      className: styles.input\n    }, rest)), /*#__PURE__*/_jsx(DatePicker, {\n      isOpen: open,\n      value: value && typeof value !== 'string' ? value : dateTime().toDate(),\n      minDate: minDate,\n      onChange: ev => {\n        onChange(ev);\n\n        if (closeOnSelect) {\n          setOpen(false);\n        }\n      },\n      onClose: () => setOpen(false)\n    })]\n  });\n};\n\nconst getStyles = () => {\n  return {\n    container: css`\n      position: relative;\n    `,\n    input: css`\n    /* hides the native Calendar picker icon given when using type=date */\n    input[type='date']::-webkit-inner-spin-button,\n    input[type='date']::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n    `\n  };\n};","map":{"version":3,"names":["css","React","dateTime","useStyles","Input","DatePicker","formatDate","date","format","DatePickerWithInput","value","minDate","onChange","closeOnSelect","placeholder","rest","open","setOpen","useState","styles","getStyles","container","ev","target","input","toDate"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/DatePickerWithInput/DatePickerWithInput.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ChangeEvent } from 'react';\n\nimport { dateTime } from '@grafana/data';\n\nimport { useStyles } from '../../../themes';\nimport { Props as InputProps, Input } from '../../Input/Input';\nimport { DatePicker } from '../DatePicker/DatePicker';\n\nexport const formatDate = (date: Date | string) => dateTime(date).format('L');\n\n/** @public */\nexport interface DatePickerWithInputProps extends Omit<InputProps, 'ref' | 'value' | 'onChange'> {\n  value?: Date | string;\n  minDate?: Date;\n  onChange: (value: Date | string) => void;\n  /** Hide the calendar when date is selected */\n  closeOnSelect?: boolean;\n  placeholder?: string;\n}\n\n/** @public */\nexport const DatePickerWithInput = ({\n  value,\n  minDate,\n  onChange,\n  closeOnSelect,\n  placeholder = 'Date',\n  ...rest\n}: DatePickerWithInputProps) => {\n  const [open, setOpen] = React.useState(false);\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <Input\n        type=\"text\"\n        autoComplete={'off'}\n        placeholder={placeholder}\n        value={value ? formatDate(value) : value}\n        onClick={() => setOpen(true)}\n        onChange={(ev: ChangeEvent<HTMLInputElement>) => {\n          // Allow resetting the date\n          if (ev.target.value === '') {\n            onChange('');\n          }\n        }}\n        className={styles.input}\n        {...rest}\n      />\n      <DatePicker\n        isOpen={open}\n        value={value && typeof value !== 'string' ? value : dateTime().toDate()}\n        minDate={minDate}\n        onChange={(ev) => {\n          onChange(ev);\n          if (closeOnSelect) {\n            setOpen(false);\n          }\n        }}\n        onClose={() => setOpen(false)}\n      />\n    </div>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    container: css`\n      position: relative;\n    `,\n    input: css`\n    /* hides the native Calendar picker icon given when using type=date */\n    input[type='date']::-webkit-inner-spin-button,\n    input[type='date']::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n    `,\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAmC,OAAnC;AAEA,SAASC,QAAT,QAAyB,eAAzB;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAA8BC,KAA9B,QAA2C,mBAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAyBL,QAAQ,CAACK,IAAD,CAAR,CAAeC,MAAf,CAAsB,GAAtB,CAA5C;AAEP;;AAUA;AACA,OAAO,MAAMC,mBAAmB,GAAG,QAOH;EAAA,IAPI;IAClCC,KADkC;IAElCC,OAFkC;IAGlCC,QAHkC;IAIlCC,aAJkC;IAKlCC,WAAW,GAAG;EALoB,CAOJ;EAAA,IAD3BC,IAC2B;;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAAxB;EACA,MAAMC,MAAM,GAAGhB,SAAS,CAACiB,SAAD,CAAxB;EAEA,oBACE;IAAK,SAAS,EAAED,MAAM,CAACE,SAAvB;IAAA,wBACE,KAAC,KAAD;MACE,IAAI,EAAC,MADP;MAEE,YAAY,EAAE,KAFhB;MAGE,WAAW,EAAEP,WAHf;MAIE,KAAK,EAAEJ,KAAK,GAAGJ,UAAU,CAACI,KAAD,CAAb,GAAuBA,KAJrC;MAKE,OAAO,EAAE,MAAMO,OAAO,CAAC,IAAD,CALxB;MAME,QAAQ,EAAGK,EAAD,IAAuC;QAC/C;QACA,IAAIA,EAAE,CAACC,MAAH,CAAUb,KAAV,KAAoB,EAAxB,EAA4B;UAC1BE,QAAQ,CAAC,EAAD,CAAR;QACD;MACF,CAXH;MAYE,SAAS,EAAEO,MAAM,CAACK;IAZpB,GAaMT,IAbN,EADF,eAgBE,KAAC,UAAD;MACE,MAAM,EAAEC,IADV;MAEE,KAAK,EAAEN,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GAAqCA,KAArC,GAA6CR,QAAQ,GAAGuB,MAAX,EAFtD;MAGE,OAAO,EAAEd,OAHX;MAIE,QAAQ,EAAGW,EAAD,IAAQ;QAChBV,QAAQ,CAACU,EAAD,CAAR;;QACA,IAAIT,aAAJ,EAAmB;UACjBI,OAAO,CAAC,KAAD,CAAP;QACD;MACF,CATH;MAUE,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD;IAVxB,EAhBF;EAAA,EADF;AA+BD,CA1CM;;AA4CP,MAAMG,SAAS,GAAG,MAAM;EACtB,OAAO;IACLC,SAAS,EAAErB,GAAI;AACnB;AACA,KAHS;IAILwB,KAAK,EAAExB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;EAVS,CAAP;AAYD,CAbD"},"metadata":{},"sourceType":"module"}