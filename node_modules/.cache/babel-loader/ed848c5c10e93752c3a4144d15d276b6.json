{"ast":null,"code":"var _th, _th2, _th3, _th4, _th5, _th6;\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ConfirmModal } from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { fetchBuiltinRoles, fetchRoleOptions } from 'app/core/components/RolePicker/api';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\nimport { OrgRolePicker } from '../admin/OrgRolePicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst UsersTable = props => {\n  const {\n    users,\n    orgId,\n    onRoleChange,\n    onRemoveUser\n  } = props;\n  const [userToRemove, setUserToRemove] = useState(null);\n  const [roleOptions, setRoleOptions] = useState([]);\n  const [builtinRoles, setBuiltinRoles] = useState({});\n  useEffect(() => {\n    async function fetchOptions() {\n      try {\n        if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n          let options = await fetchRoleOptions(orgId);\n          setRoleOptions(options);\n        }\n\n        if (contextSrv.accessControlBuiltInRoleAssignmentEnabled() && contextSrv.hasPermission(AccessControlAction.ActionBuiltinRolesList)) {\n          const builtInRoles = await fetchBuiltinRoles(orgId);\n          setBuiltinRoles(builtInRoles);\n        }\n      } catch (e) {\n        console.error('Error loading options');\n      }\n    }\n\n    if (contextSrv.licensedAccessControlEnabled()) {\n      fetchOptions();\n    }\n  }, [orgId]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"table\", {\n      className: \"filter-table form-inline\",\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {})), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Login\"\n          })), _th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Email\"\n          })), _th4 || (_th4 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Name\"\n          })), _th5 || (_th5 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Seen\"\n          })), _th6 || (_th6 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Role\"\n          })), /*#__PURE__*/_jsx(\"th\", {\n            style: {\n              width: '34px'\n            }\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: users.map((user, index) => {\n          return /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              className: \"width-2 text-center\",\n              children: /*#__PURE__*/_jsx(\"img\", {\n                className: \"filter-table__avatar\",\n                src: user.avatarUrl,\n                alt: \"User avatar\"\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"max-width-6\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"ellipsis\",\n                title: user.login,\n                children: user.login\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"max-width-5\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"ellipsis\",\n                title: user.email,\n                children: user.email\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"max-width-5\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"ellipsis\",\n                title: user.name,\n                children: user.name\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"width-1\",\n              children: user.lastSeenAtAge\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"width-8\",\n              children: contextSrv.licensedAccessControlEnabled() ? /*#__PURE__*/_jsx(UserRolePicker, {\n                userId: user.userId,\n                orgId: orgId,\n                builtInRole: user.role,\n                onBuiltinRoleChange: newRole => onRoleChange(newRole, user),\n                roleOptions: roleOptions,\n                builtInRoles: builtinRoles,\n                disabled: !contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersWrite, user)\n              }) : /*#__PURE__*/_jsx(OrgRolePicker, {\n                \"aria-label\": \"Role\",\n                value: user.role,\n                disabled: !contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersWrite, user),\n                onChange: newRole => onRoleChange(newRole, user)\n              })\n            }), contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersRemove, user) && /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(Button, {\n                size: \"sm\",\n                variant: \"destructive\",\n                onClick: () => {\n                  setUserToRemove(user);\n                },\n                icon: \"times\",\n                \"aria-label\": \"Delete user\"\n              })\n            })]\n          }, `${user.userId}-${index}`);\n        })\n      })]\n    }), Boolean(userToRemove) && /*#__PURE__*/_jsx(ConfirmModal, {\n      body: `Are you sure you want to delete user ${userToRemove === null || userToRemove === void 0 ? void 0 : userToRemove.login}?`,\n      confirmText: \"Delete\",\n      title: \"Delete\",\n      onDismiss: () => {\n        setUserToRemove(null);\n      },\n      isOpen: true,\n      onConfirm: () => {\n        if (!userToRemove) {\n          return;\n        }\n\n        onRemoveUser(userToRemove);\n        setUserToRemove(null);\n      }\n    })]\n  });\n};\n\nexport default UsersTable;","map":{"version":3,"names":["React","useEffect","useState","Button","ConfirmModal","UserRolePicker","fetchBuiltinRoles","fetchRoleOptions","contextSrv","AccessControlAction","OrgRolePicker","UsersTable","props","users","orgId","onRoleChange","onRemoveUser","userToRemove","setUserToRemove","roleOptions","setRoleOptions","builtinRoles","setBuiltinRoles","fetchOptions","hasPermission","ActionRolesList","options","accessControlBuiltInRoleAssignmentEnabled","ActionBuiltinRolesList","builtInRoles","e","console","error","licensedAccessControlEnabled","width","map","user","index","avatarUrl","login","email","name","lastSeenAtAge","userId","role","newRole","hasPermissionInMetadata","OrgUsersWrite","OrgUsersRemove","Boolean"],"sources":["/home/soula/grafana/public/app/features/users/UsersTable.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\n\nimport { OrgRole } from '@grafana/data';\nimport { Button, ConfirmModal } from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { fetchBuiltinRoles, fetchRoleOptions } from 'app/core/components/RolePicker/api';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, OrgUser, Role } from 'app/types';\n\nimport { OrgRolePicker } from '../admin/OrgRolePicker';\n\nexport interface Props {\n  users: OrgUser[];\n  orgId?: number;\n  onRoleChange: (role: OrgRole, user: OrgUser) => void;\n  onRemoveUser: (user: OrgUser) => void;\n}\n\nconst UsersTable: FC<Props> = (props) => {\n  const { users, orgId, onRoleChange, onRemoveUser } = props;\n  const [userToRemove, setUserToRemove] = useState<OrgUser | null>(null);\n  const [roleOptions, setRoleOptions] = useState<Role[]>([]);\n  const [builtinRoles, setBuiltinRoles] = useState<{ [key: string]: Role[] }>({});\n\n  useEffect(() => {\n    async function fetchOptions() {\n      try {\n        if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n          let options = await fetchRoleOptions(orgId);\n          setRoleOptions(options);\n        }\n\n        if (\n          contextSrv.accessControlBuiltInRoleAssignmentEnabled() &&\n          contextSrv.hasPermission(AccessControlAction.ActionBuiltinRolesList)\n        ) {\n          const builtInRoles = await fetchBuiltinRoles(orgId);\n          setBuiltinRoles(builtInRoles);\n        }\n      } catch (e) {\n        console.error('Error loading options');\n      }\n    }\n    if (contextSrv.licensedAccessControlEnabled()) {\n      fetchOptions();\n    }\n  }, [orgId]);\n\n  return (\n    <>\n      <table className=\"filter-table form-inline\">\n        <thead>\n          <tr>\n            <th />\n            <th>Login</th>\n            <th>Email</th>\n            <th>Name</th>\n            <th>Seen</th>\n            <th>Role</th>\n            <th style={{ width: '34px' }} />\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => {\n            return (\n              <tr key={`${user.userId}-${index}`}>\n                <td className=\"width-2 text-center\">\n                  <img className=\"filter-table__avatar\" src={user.avatarUrl} alt=\"User avatar\" />\n                </td>\n                <td className=\"max-width-6\">\n                  <span className=\"ellipsis\" title={user.login}>\n                    {user.login}\n                  </span>\n                </td>\n\n                <td className=\"max-width-5\">\n                  <span className=\"ellipsis\" title={user.email}>\n                    {user.email}\n                  </span>\n                </td>\n                <td className=\"max-width-5\">\n                  <span className=\"ellipsis\" title={user.name}>\n                    {user.name}\n                  </span>\n                </td>\n                <td className=\"width-1\">{user.lastSeenAtAge}</td>\n\n                <td className=\"width-8\">\n                  {contextSrv.licensedAccessControlEnabled() ? (\n                    <UserRolePicker\n                      userId={user.userId}\n                      orgId={orgId}\n                      builtInRole={user.role}\n                      onBuiltinRoleChange={(newRole) => onRoleChange(newRole, user)}\n                      roleOptions={roleOptions}\n                      builtInRoles={builtinRoles}\n                      disabled={!contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersWrite, user)}\n                    />\n                  ) : (\n                    <OrgRolePicker\n                      aria-label=\"Role\"\n                      value={user.role}\n                      disabled={!contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersWrite, user)}\n                      onChange={(newRole) => onRoleChange(newRole, user)}\n                    />\n                  )}\n                </td>\n\n                {contextSrv.hasPermissionInMetadata(AccessControlAction.OrgUsersRemove, user) && (\n                  <td>\n                    <Button\n                      size=\"sm\"\n                      variant=\"destructive\"\n                      onClick={() => {\n                        setUserToRemove(user);\n                      }}\n                      icon=\"times\"\n                      aria-label=\"Delete user\"\n                    />\n                  </td>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {Boolean(userToRemove) && (\n        <ConfirmModal\n          body={`Are you sure you want to delete user ${userToRemove?.login}?`}\n          confirmText=\"Delete\"\n          title=\"Delete\"\n          onDismiss={() => {\n            setUserToRemove(null);\n          }}\n          isOpen={true}\n          onConfirm={() => {\n            if (!userToRemove) {\n              return;\n            }\n            onRemoveUser(userToRemove);\n            setUserToRemove(null);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default UsersTable;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AAGA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,aAArC;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,oCAApD;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,mBAAT,QAAmD,WAAnD;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;;;;AASA,MAAMC,UAAqB,GAAIC,KAAD,IAAW;EACvC,MAAM;IAAEC,KAAF;IAASC,KAAT;IAAgBC,YAAhB;IAA8BC;EAA9B,IAA+CJ,KAArD;EACA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAiB,IAAjB,CAAhD;EACA,MAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAS,EAAT,CAA9C;EACA,MAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAA4B,EAA5B,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACd,eAAesB,YAAf,GAA8B;MAC5B,IAAI;QACF,IAAIf,UAAU,CAACgB,aAAX,CAAyBf,mBAAmB,CAACgB,eAA7C,CAAJ,EAAmE;UACjE,IAAIC,OAAO,GAAG,MAAMnB,gBAAgB,CAACO,KAAD,CAApC;UACAM,cAAc,CAACM,OAAD,CAAd;QACD;;QAED,IACElB,UAAU,CAACmB,yCAAX,MACAnB,UAAU,CAACgB,aAAX,CAAyBf,mBAAmB,CAACmB,sBAA7C,CAFF,EAGE;UACA,MAAMC,YAAY,GAAG,MAAMvB,iBAAiB,CAACQ,KAAD,CAA5C;UACAQ,eAAe,CAACO,YAAD,CAAf;QACD;MACF,CAbD,CAaE,OAAOC,CAAP,EAAU;QACVC,OAAO,CAACC,KAAR,CAAc,uBAAd;MACD;IACF;;IACD,IAAIxB,UAAU,CAACyB,4BAAX,EAAJ,EAA+C;MAC7CV,YAAY;IACb;EACF,CAtBQ,EAsBN,CAACT,KAAD,CAtBM,CAAT;EAwBA,oBACE;IAAA,wBACE;MAAO,SAAS,EAAC,0BAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,sCACE,cADF,gCAEE;YAAA;UAAA,EAFF,gCAGE;YAAA;UAAA,EAHF,gCAIE;YAAA;UAAA,EAJF,gCAKE;YAAA;UAAA,EALF,gCAME;YAAA;UAAA,EANF,gBAOE;YAAI,KAAK,EAAE;cAAEoB,KAAK,EAAE;YAAT;UAAX,EAPF;QAAA;MADF,EADF,eAYE;QAAA,UACGrB,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;UAC1B,oBACE;YAAA,wBACE;cAAI,SAAS,EAAC,qBAAd;cAAA,uBACE;gBAAK,SAAS,EAAC,sBAAf;gBAAsC,GAAG,EAAED,IAAI,CAACE,SAAhD;gBAA2D,GAAG,EAAC;cAA/D;YADF,EADF,eAIE;cAAI,SAAS,EAAC,aAAd;cAAA,uBACE;gBAAM,SAAS,EAAC,UAAhB;gBAA2B,KAAK,EAAEF,IAAI,CAACG,KAAvC;gBAAA,UACGH,IAAI,CAACG;cADR;YADF,EAJF,eAUE;cAAI,SAAS,EAAC,aAAd;cAAA,uBACE;gBAAM,SAAS,EAAC,UAAhB;gBAA2B,KAAK,EAAEH,IAAI,CAACI,KAAvC;gBAAA,UACGJ,IAAI,CAACI;cADR;YADF,EAVF,eAeE;cAAI,SAAS,EAAC,aAAd;cAAA,uBACE;gBAAM,SAAS,EAAC,UAAhB;gBAA2B,KAAK,EAAEJ,IAAI,CAACK,IAAvC;gBAAA,UACGL,IAAI,CAACK;cADR;YADF,EAfF,eAoBE;cAAI,SAAS,EAAC,SAAd;cAAA,UAAyBL,IAAI,CAACM;YAA9B,EApBF,eAsBE;cAAI,SAAS,EAAC,SAAd;cAAA,UACGlC,UAAU,CAACyB,4BAAX,kBACC,KAAC,cAAD;gBACE,MAAM,EAAEG,IAAI,CAACO,MADf;gBAEE,KAAK,EAAE7B,KAFT;gBAGE,WAAW,EAAEsB,IAAI,CAACQ,IAHpB;gBAIE,mBAAmB,EAAGC,OAAD,IAAa9B,YAAY,CAAC8B,OAAD,EAAUT,IAAV,CAJhD;gBAKE,WAAW,EAAEjB,WALf;gBAME,YAAY,EAAEE,YANhB;gBAOE,QAAQ,EAAE,CAACb,UAAU,CAACsC,uBAAX,CAAmCrC,mBAAmB,CAACsC,aAAvD,EAAsEX,IAAtE;cAPb,EADD,gBAWC,KAAC,aAAD;gBACE,cAAW,MADb;gBAEE,KAAK,EAAEA,IAAI,CAACQ,IAFd;gBAGE,QAAQ,EAAE,CAACpC,UAAU,CAACsC,uBAAX,CAAmCrC,mBAAmB,CAACsC,aAAvD,EAAsEX,IAAtE,CAHb;gBAIE,QAAQ,EAAGS,OAAD,IAAa9B,YAAY,CAAC8B,OAAD,EAAUT,IAAV;cAJrC;YAZJ,EAtBF,EA2CG5B,UAAU,CAACsC,uBAAX,CAAmCrC,mBAAmB,CAACuC,cAAvD,EAAuEZ,IAAvE,kBACC;cAAA,uBACE,KAAC,MAAD;gBACE,IAAI,EAAC,IADP;gBAEE,OAAO,EAAC,aAFV;gBAGE,OAAO,EAAE,MAAM;kBACblB,eAAe,CAACkB,IAAD,CAAf;gBACD,CALH;gBAME,IAAI,EAAC,OANP;gBAOE,cAAW;cAPb;YADF,EA5CJ;UAAA,GAAU,GAAEA,IAAI,CAACO,MAAO,IAAGN,KAAM,EAAjC,CADF;QA2DD,CA5DA;MADH,EAZF;IAAA,EADF,EA6EGY,OAAO,CAAChC,YAAD,CAAP,iBACC,KAAC,YAAD;MACE,IAAI,EAAG,wCAAuCA,YAAxC,aAAwCA,YAAxC,uBAAwCA,YAAY,CAAEsB,KAAM,GADpE;MAEE,WAAW,EAAC,QAFd;MAGE,KAAK,EAAC,QAHR;MAIE,SAAS,EAAE,MAAM;QACfrB,eAAe,CAAC,IAAD,CAAf;MACD,CANH;MAOE,MAAM,EAAE,IAPV;MAQE,SAAS,EAAE,MAAM;QACf,IAAI,CAACD,YAAL,EAAmB;UACjB;QACD;;QACDD,YAAY,CAACC,YAAD,CAAZ;QACAC,eAAe,CAAC,IAAD,CAAf;MACD;IAdH,EA9EJ;EAAA,EADF;AAkGD,CAhID;;AAkIA,eAAeP,UAAf"},"metadata":{},"sourceType":"module"}