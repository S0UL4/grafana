{"ast":null,"code":"import { createTheme } from '@grafana/data';\nlet themeMock;\n/** @public */\n\nexport const getTheme = (mode = 'dark') => {\n  if (themeMock) {\n    return themeMock(mode);\n  }\n\n  return createTheme({\n    colors: {\n      mode\n    }\n  }).v1;\n};\n/** @public */\n\nexport const mockTheme = mock => {\n  themeMock = mock;\n  return () => {\n    themeMock = null;\n  };\n};","map":{"version":3,"names":["createTheme","themeMock","getTheme","mode","colors","v1","mockTheme","mock"],"sources":["/home/soula/grafana/packages/grafana-ui/src/themes/getTheme.ts"],"sourcesContent":["import { createTheme, GrafanaTheme } from '@grafana/data';\n\nlet themeMock: ((name?: string) => GrafanaTheme) | null;\n\n/** @public */\nexport const getTheme = (mode: 'dark' | 'light' = 'dark') => {\n  if (themeMock) {\n    return themeMock(mode);\n  }\n\n  return createTheme({ colors: { mode } }).v1;\n};\n\n/** @public */\nexport const mockTheme = (mock: (name?: string) => GrafanaTheme) => {\n  themeMock = mock;\n  return () => {\n    themeMock = null;\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA0C,eAA1C;AAEA,IAAIC,SAAJ;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAsB,GAAG,MAA1B,KAAqC;EAC3D,IAAIF,SAAJ,EAAe;IACb,OAAOA,SAAS,CAACE,IAAD,CAAhB;EACD;;EAED,OAAOH,WAAW,CAAC;IAAEI,MAAM,EAAE;MAAED;IAAF;EAAV,CAAD,CAAX,CAAkCE,EAAzC;AACD,CANM;AAQP;;AACA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAA2C;EAClEN,SAAS,GAAGM,IAAZ;EACA,OAAO,MAAM;IACXN,SAAS,GAAG,IAAZ;EACD,CAFD;AAGD,CALM"},"metadata":{},"sourceType":"module"}