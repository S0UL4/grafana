{"ast":null,"code":"export { TableFieldOptions, TableCellDisplayMode, FieldTextAlignment } from '@grafana/schema';\nexport const FILTER_FOR_OPERATOR = '=';\nexport const FILTER_OUT_OPERATOR = '!=';","map":{"version":3,"names":["TableFieldOptions","TableCellDisplayMode","FieldTextAlignment","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/types.ts"],"sourcesContent":["import { Property } from 'csstype';\nimport { FC } from 'react';\nimport { CellProps, Column, Row } from 'react-table';\n\nimport { Field, KeyValue, SelectableValue } from '@grafana/data';\n\nimport { TableStyles } from './styles';\n\nexport { TableFieldOptions, TableCellDisplayMode, FieldTextAlignment } from '@grafana/schema';\n\nexport interface TableRow {\n  [x: string]: any;\n}\n\nexport const FILTER_FOR_OPERATOR = '=';\nexport const FILTER_OUT_OPERATOR = '!=';\nexport type FilterOperator = typeof FILTER_FOR_OPERATOR | typeof FILTER_OUT_OPERATOR;\nexport type FilterItem = { key: string; value: string; operator: FilterOperator };\nexport type TableFilterActionCallback = (item: FilterItem) => void;\nexport type TableColumnResizeActionCallback = (fieldDisplayName: string, width: number) => void;\nexport type TableSortByActionCallback = (state: TableSortByFieldState[]) => void;\n\nexport interface TableSortByFieldState {\n  displayName: string;\n  desc?: boolean;\n}\n\nexport interface TableCellProps extends CellProps<any> {\n  tableStyles: TableStyles;\n  cellProps: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  field: Field;\n  onCellFilterAdded: TableFilterActionCallback;\n  innerWidth: number;\n}\n\nexport type CellComponent = FC<TableCellProps>;\n\nexport type FooterItem = Array<KeyValue<string>> | string | undefined;\n\nexport type GrafanaTableColumn = Column & {\n  field: Field;\n  sortType: 'number' | 'basic' | 'alphanumeric-insensitive';\n  filter: (rows: Row[], id: string, filterValues?: SelectableValue[]) => SelectableValue[];\n  justifyContent: Property.JustifyContent;\n  minWidth: number;\n};\n"],"mappings":"AAQA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,kBAAlD,QAA4E,iBAA5E;AAMA,OAAO,MAAMC,mBAAmB,GAAG,GAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,IAA5B"},"metadata":{},"sourceType":"module"}