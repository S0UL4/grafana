{"ast":null,"code":"var _div, _div2, _div3;\n\nimport React, { useCallback } from 'react';\nimport { valueMatchers } from '@grafana/data';\nimport { Button, Select } from '@grafana/ui';\nimport { valueMatchersUI } from './ValueMatchers/valueMatchersUI';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const FilterByValueFilterEditor = props => {\n  var _getFieldName, _filter$config$option;\n\n  const {\n    onDelete,\n    onChange,\n    filter,\n    fieldsInfo\n  } = props;\n  const {\n    fieldsAsOptions,\n    fieldByDisplayName\n  } = fieldsInfo;\n  const fieldName = (_getFieldName = getFieldName(filter, fieldsAsOptions)) !== null && _getFieldName !== void 0 ? _getFieldName : '';\n  const field = fieldByDisplayName[fieldName];\n  const matcherOptions = field ? getMatcherOptions(field) : [];\n  const matcherId = getSelectedMatcherId(filter, matcherOptions);\n  const editor = valueMatchersUI.getIfExists(matcherId);\n  const onChangeField = useCallback(selectable => {\n    if (!(selectable !== null && selectable !== void 0 && selectable.value)) {\n      return;\n    }\n\n    onChange(Object.assign({}, filter, {\n      fieldName: selectable.value\n    }));\n  }, [onChange, filter]);\n  const onChangeMatcher = useCallback(selectable => {\n    if (!(selectable !== null && selectable !== void 0 && selectable.value)) {\n      return;\n    }\n\n    const id = selectable.value;\n    const options = valueMatchers.get(id).getDefaultOptions(field);\n    onChange(Object.assign({}, filter, {\n      config: {\n        id,\n        options\n      }\n    }));\n  }, [onChange, filter, field]);\n  const onChangeMatcherOptions = useCallback(options => {\n    onChange(Object.assign({}, filter, {\n      config: Object.assign({}, filter.config, {\n        options\n      })\n    }));\n  }, [onChange, filter]);\n\n  if (!field || !editor || !editor.component) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"gf-form-inline\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form-spacing\",\n      children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label width-7\",\n        children: \"Field\"\n      })), /*#__PURE__*/_jsx(Select, {\n        className: \"min-width-15 max-width-24\",\n        placeholder: \"Field Name\",\n        options: fieldsAsOptions,\n        value: filter.fieldName,\n        onChange: onChangeField\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form-spacing\",\n      children: [_div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label\",\n        children: \"Match\"\n      })), /*#__PURE__*/_jsx(Select, {\n        className: \"width-12\",\n        placeholder: \"Select test\",\n        options: matcherOptions,\n        value: matcherId,\n        onChange: onChangeMatcher\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form--grow gf-form-spacing\",\n      children: [_div3 || (_div3 = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label\",\n        children: \"Value\"\n      })), /*#__PURE__*/_jsx(editor.component, {\n        field: field,\n        options: (_filter$config$option = filter.config.options) !== null && _filter$config$option !== void 0 ? _filter$config$option : {},\n        onChange: onChangeMatcherOptions\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"gf-form\",\n      children: /*#__PURE__*/_jsx(Button, {\n        icon: \"times\",\n        onClick: onDelete,\n        variant: \"secondary\"\n      })\n    })]\n  });\n};\n\nconst getMatcherOptions = field => {\n  const options = [];\n\n  for (const matcher of valueMatchers.list()) {\n    if (!matcher.isApplicable(field)) {\n      continue;\n    }\n\n    const editor = valueMatchersUI.getIfExists(matcher.id);\n\n    if (!editor) {\n      continue;\n    }\n\n    options.push({\n      value: matcher.id,\n      label: matcher.name,\n      description: matcher.description\n    });\n  }\n\n  return options;\n};\n\nconst getSelectedMatcherId = (filter, matcherOptions) => {\n  var _matcherOptions$;\n\n  const matcher = matcherOptions.find(m => m.value === filter.config.id);\n\n  if (matcher && matcher.value) {\n    return matcher.value;\n  }\n\n  if ((_matcherOptions$ = matcherOptions[0]) !== null && _matcherOptions$ !== void 0 && _matcherOptions$.value) {\n    var _matcherOptions$2;\n\n    return (_matcherOptions$2 = matcherOptions[0]) === null || _matcherOptions$2 === void 0 ? void 0 : _matcherOptions$2.value;\n  }\n\n  return;\n};\n\nconst getFieldName = (filter, fieldOptions) => {\n  var _fieldOptions$;\n\n  const fieldName = fieldOptions.find(m => m.value === filter.fieldName);\n\n  if (fieldName && fieldName.value) {\n    return fieldName.value;\n  }\n\n  if ((_fieldOptions$ = fieldOptions[0]) !== null && _fieldOptions$ !== void 0 && _fieldOptions$.value) {\n    var _fieldOptions$2;\n\n    return (_fieldOptions$2 = fieldOptions[0]) === null || _fieldOptions$2 === void 0 ? void 0 : _fieldOptions$2.value;\n  }\n\n  return;\n};","map":{"version":3,"names":["React","useCallback","valueMatchers","Button","Select","valueMatchersUI","FilterByValueFilterEditor","props","onDelete","onChange","filter","fieldsInfo","fieldsAsOptions","fieldByDisplayName","fieldName","getFieldName","field","matcherOptions","getMatcherOptions","matcherId","getSelectedMatcherId","editor","getIfExists","onChangeField","selectable","value","onChangeMatcher","id","options","get","getDefaultOptions","config","onChangeMatcherOptions","component","matcher","list","isApplicable","push","label","name","description","find","m","fieldOptions"],"sources":["/home/soula/grafana/public/app/features/transformers/FilterByValueTransformer/FilterByValueFilterEditor.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { Field, SelectableValue, valueMatchers } from '@grafana/data';\nimport { FilterByValueFilter } from '@grafana/data/src/transformations/transformers/filterByValue';\nimport { Button, Select } from '@grafana/ui';\n\nimport { valueMatchersUI } from './ValueMatchers/valueMatchersUI';\n\ninterface Props {\n  onDelete: () => void;\n  onChange: (filter: FilterByValueFilter) => void;\n  filter: FilterByValueFilter;\n  fieldsInfo: DataFrameFieldsInfo;\n}\n\nexport interface DataFrameFieldsInfo {\n  fieldsAsOptions: Array<SelectableValue<string>>;\n  fieldByDisplayName: Record<string, Field>;\n}\n\nexport const FilterByValueFilterEditor: React.FC<Props> = (props) => {\n  const { onDelete, onChange, filter, fieldsInfo } = props;\n  const { fieldsAsOptions, fieldByDisplayName } = fieldsInfo;\n  const fieldName = getFieldName(filter, fieldsAsOptions) ?? '';\n  const field = fieldByDisplayName[fieldName];\n  const matcherOptions = field ? getMatcherOptions(field) : [];\n  const matcherId = getSelectedMatcherId(filter, matcherOptions);\n  const editor = valueMatchersUI.getIfExists(matcherId);\n\n  const onChangeField = useCallback(\n    (selectable?: SelectableValue<string>) => {\n      if (!selectable?.value) {\n        return;\n      }\n      onChange({\n        ...filter,\n        fieldName: selectable.value,\n      });\n    },\n    [onChange, filter]\n  );\n\n  const onChangeMatcher = useCallback(\n    (selectable?: SelectableValue<string>) => {\n      if (!selectable?.value) {\n        return;\n      }\n\n      const id = selectable.value;\n      const options = valueMatchers.get(id).getDefaultOptions(field);\n\n      onChange({\n        ...filter,\n        config: { id, options },\n      });\n    },\n    [onChange, filter, field]\n  );\n\n  const onChangeMatcherOptions = useCallback(\n    (options) => {\n      onChange({\n        ...filter,\n        config: {\n          ...filter.config,\n          options,\n        },\n      });\n    },\n    [onChange, filter]\n  );\n\n  if (!field || !editor || !editor.component) {\n    return null;\n  }\n\n  return (\n    <div className=\"gf-form-inline\">\n      <div className=\"gf-form gf-form-spacing\">\n        <div className=\"gf-form-label width-7\">Field</div>\n        <Select\n          className=\"min-width-15 max-width-24\"\n          placeholder=\"Field Name\"\n          options={fieldsAsOptions}\n          value={filter.fieldName}\n          onChange={onChangeField}\n        />\n      </div>\n      <div className=\"gf-form gf-form-spacing\">\n        <div className=\"gf-form-label\">Match</div>\n        <Select\n          className=\"width-12\"\n          placeholder=\"Select test\"\n          options={matcherOptions}\n          value={matcherId}\n          onChange={onChangeMatcher}\n        />\n      </div>\n      <div className=\"gf-form gf-form--grow gf-form-spacing\">\n        <div className=\"gf-form-label\">Value</div>\n        <editor.component field={field} options={filter.config.options ?? {}} onChange={onChangeMatcherOptions} />\n      </div>\n      <div className=\"gf-form\">\n        <Button icon=\"times\" onClick={onDelete} variant=\"secondary\" />\n      </div>\n    </div>\n  );\n};\n\nconst getMatcherOptions = (field: Field): Array<SelectableValue<string>> => {\n  const options = [];\n\n  for (const matcher of valueMatchers.list()) {\n    if (!matcher.isApplicable(field)) {\n      continue;\n    }\n\n    const editor = valueMatchersUI.getIfExists(matcher.id);\n\n    if (!editor) {\n      continue;\n    }\n\n    options.push({\n      value: matcher.id,\n      label: matcher.name,\n      description: matcher.description,\n    });\n  }\n\n  return options;\n};\n\nconst getSelectedMatcherId = (\n  filter: FilterByValueFilter,\n  matcherOptions: Array<SelectableValue<string>>\n): string | undefined => {\n  const matcher = matcherOptions.find((m) => m.value === filter.config.id);\n\n  if (matcher && matcher.value) {\n    return matcher.value;\n  }\n\n  if (matcherOptions[0]?.value) {\n    return matcherOptions[0]?.value;\n  }\n\n  return;\n};\n\nconst getFieldName = (\n  filter: FilterByValueFilter,\n  fieldOptions: Array<SelectableValue<string>>\n): string | undefined => {\n  const fieldName = fieldOptions.find((m) => m.value === filter.fieldName);\n\n  if (fieldName && fieldName.value) {\n    return fieldName.value;\n  }\n\n  if (fieldOptions[0]?.value) {\n    return fieldOptions[0]?.value;\n  }\n\n  return;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}