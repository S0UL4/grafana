{"ast":null,"code":"var _span, _span2;\n\nimport pluralize from 'pluralize';\nimport React, { Fragment, useMemo } from 'react';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\nimport { isAlertingRule, isRecordingRule, isRecordingRulerRule } from '../../utils/rules';\nimport { StateColoredText } from '../StateColoredText';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst emptyStats = {\n  total: 0,\n  recording: 0,\n  [PromAlertingRuleState.Firing]: 0,\n  [PromAlertingRuleState.Pending]: 0,\n  [PromAlertingRuleState.Inactive]: 0,\n  error: 0\n};\nexport const RuleStats = ({\n  showInactive,\n  showRecording,\n  group,\n  namespaces\n}) => {\n  const calculated = useMemo(() => {\n    const stats = Object.assign({}, emptyStats);\n\n    const calcRule = rule => {\n      var _rule$promRule, _rule$promRule2;\n\n      if (rule.promRule && isAlertingRule(rule.promRule)) {\n        stats[rule.promRule.state] += 1;\n      }\n\n      if (((_rule$promRule = rule.promRule) === null || _rule$promRule === void 0 ? void 0 : _rule$promRule.health) === 'err' || ((_rule$promRule2 = rule.promRule) === null || _rule$promRule2 === void 0 ? void 0 : _rule$promRule2.health) === 'error') {\n        stats.error += 1;\n      }\n\n      if (rule.promRule && isRecordingRule(rule.promRule) || rule.rulerRule && isRecordingRulerRule(rule.rulerRule)) {\n        stats.recording += 1;\n      }\n\n      stats.total += 1;\n    };\n\n    if (group) {\n      group.rules.forEach(calcRule);\n    }\n\n    if (namespaces) {\n      namespaces.forEach(namespace => namespace.groups.forEach(group => group.rules.forEach(calcRule)));\n    }\n\n    return stats;\n  }, [group, namespaces]);\n  const statsComponents = [];\n\n  if (calculated[PromAlertingRuleState.Firing]) {\n    statsComponents.push( /*#__PURE__*/_jsxs(StateColoredText, {\n      status: PromAlertingRuleState.Firing,\n      children: [calculated[PromAlertingRuleState.Firing], \" firing\"]\n    }, \"firing\"));\n  }\n\n  if (calculated.error) {\n    statsComponents.push( /*#__PURE__*/_jsxs(StateColoredText, {\n      status: PromAlertingRuleState.Firing,\n      children: [calculated.error, \" errors\"]\n    }, \"errors\"));\n  }\n\n  if (calculated[PromAlertingRuleState.Pending]) {\n    statsComponents.push( /*#__PURE__*/_jsxs(StateColoredText, {\n      status: PromAlertingRuleState.Pending,\n      children: [calculated[PromAlertingRuleState.Pending], \" pending\"]\n    }, \"pending\"));\n  }\n\n  if (showInactive && calculated[PromAlertingRuleState.Inactive]) {\n    statsComponents.push( /*#__PURE__*/_jsxs(StateColoredText, {\n      status: \"neutral\",\n      children: [calculated[PromAlertingRuleState.Inactive], \" normal\"]\n    }, \"inactive\"));\n  }\n\n  if (showRecording && calculated.recording) {\n    statsComponents.push( /*#__PURE__*/_jsxs(StateColoredText, {\n      status: \"neutral\",\n      children: [calculated.recording, \" recording\"]\n    }, \"recording\"));\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"span\", {\n      children: [calculated.total, \" \", pluralize('rule', calculated.total)]\n    }), !!statsComponents.length && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        children: \": \"\n      })), statsComponents.reduce((prev, curr, idx) => prev.length ? [prev, /*#__PURE__*/_jsx(Fragment, {\n        children: _span2 || (_span2 = /*#__PURE__*/_jsx(\"span\", {\n          children: \", \"\n        }))\n      }, idx), curr] : [curr], [])]\n    })]\n  });\n};","map":{"version":3,"names":["pluralize","React","Fragment","useMemo","PromAlertingRuleState","isAlertingRule","isRecordingRule","isRecordingRulerRule","StateColoredText","emptyStats","total","recording","Firing","Pending","Inactive","error","RuleStats","showInactive","showRecording","group","namespaces","calculated","stats","calcRule","rule","promRule","state","health","rulerRule","rules","forEach","namespace","groups","statsComponents","push","length","reduce","prev","curr","idx"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleStats.tsx"],"sourcesContent":["import pluralize from 'pluralize';\nimport React, { FC, Fragment, useMemo } from 'react';\n\nimport { CombinedRule, CombinedRuleGroup, CombinedRuleNamespace } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { isAlertingRule, isRecordingRule, isRecordingRulerRule } from '../../utils/rules';\nimport { StateColoredText } from '../StateColoredText';\n\ninterface Props {\n  showInactive?: boolean;\n  showRecording?: boolean;\n  group?: CombinedRuleGroup;\n  namespaces?: CombinedRuleNamespace[];\n}\n\nconst emptyStats = {\n  total: 0,\n  recording: 0,\n  [PromAlertingRuleState.Firing]: 0,\n  [PromAlertingRuleState.Pending]: 0,\n  [PromAlertingRuleState.Inactive]: 0,\n  error: 0,\n} as const;\n\nexport const RuleStats: FC<Props> = ({ showInactive, showRecording, group, namespaces }) => {\n  const calculated = useMemo(() => {\n    const stats = { ...emptyStats };\n    const calcRule = (rule: CombinedRule) => {\n      if (rule.promRule && isAlertingRule(rule.promRule)) {\n        stats[rule.promRule.state] += 1;\n      }\n      if (rule.promRule?.health === 'err' || rule.promRule?.health === 'error') {\n        stats.error += 1;\n      }\n      if (\n        (rule.promRule && isRecordingRule(rule.promRule)) ||\n        (rule.rulerRule && isRecordingRulerRule(rule.rulerRule))\n      ) {\n        stats.recording += 1;\n      }\n      stats.total += 1;\n    };\n    if (group) {\n      group.rules.forEach(calcRule);\n    }\n    if (namespaces) {\n      namespaces.forEach((namespace) => namespace.groups.forEach((group) => group.rules.forEach(calcRule)));\n    }\n    return stats;\n  }, [group, namespaces]);\n\n  const statsComponents: React.ReactNode[] = [];\n  if (calculated[PromAlertingRuleState.Firing]) {\n    statsComponents.push(\n      <StateColoredText key=\"firing\" status={PromAlertingRuleState.Firing}>\n        {calculated[PromAlertingRuleState.Firing]} firing\n      </StateColoredText>\n    );\n  }\n  if (calculated.error) {\n    statsComponents.push(\n      <StateColoredText key=\"errors\" status={PromAlertingRuleState.Firing}>\n        {calculated.error} errors\n      </StateColoredText>\n    );\n  }\n  if (calculated[PromAlertingRuleState.Pending]) {\n    statsComponents.push(\n      <StateColoredText key=\"pending\" status={PromAlertingRuleState.Pending}>\n        {calculated[PromAlertingRuleState.Pending]} pending\n      </StateColoredText>\n    );\n  }\n  if (showInactive && calculated[PromAlertingRuleState.Inactive]) {\n    statsComponents.push(\n      <StateColoredText key=\"inactive\" status=\"neutral\">\n        {calculated[PromAlertingRuleState.Inactive]} normal\n      </StateColoredText>\n    );\n  }\n  if (showRecording && calculated.recording) {\n    statsComponents.push(\n      <StateColoredText key=\"recording\" status=\"neutral\">\n        {calculated.recording} recording\n      </StateColoredText>\n    );\n  }\n\n  return (\n    <div>\n      <span>\n        {calculated.total} {pluralize('rule', calculated.total)}\n      </span>\n      {!!statsComponents.length && (\n        <>\n          <span>: </span>\n          {statsComponents.reduce<React.ReactNode[]>(\n            (prev, curr, idx) =>\n              prev.length\n                ? [\n                    prev,\n                    <Fragment key={idx}>\n                      <span>, </span>\n                    </Fragment>,\n                    curr,\n                  ]\n                : [curr],\n            []\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}