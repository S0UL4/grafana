{"ast":null,"code":"import { ShowOption, SortOrder } from './types';\nexport const alertListPanelMigrationHandler = panel => {\n  var _ref, _panel$options$showOp, _ref2, _panel$options$maxIte, _ref3, _panel$options$sortOr, _ref4, _panel$options$dashbo, _ref5, _panel$options$alertN, _ref6, _panel$options$dashbo2, _panel$options$folder, _ref7, _panel$options$tags, _ref8, _panel$options$stateF, _panel$stateFilter;\n\n  const newOptions = {\n    showOptions: (_ref = (_panel$options$showOp = panel.options.showOptions) !== null && _panel$options$showOp !== void 0 ? _panel$options$showOp : panel.show) !== null && _ref !== void 0 ? _ref : ShowOption.Current,\n    maxItems: (_ref2 = (_panel$options$maxIte = panel.options.maxItems) !== null && _panel$options$maxIte !== void 0 ? _panel$options$maxIte : panel.limit) !== null && _ref2 !== void 0 ? _ref2 : 10,\n    sortOrder: (_ref3 = (_panel$options$sortOr = panel.options.sortOrder) !== null && _panel$options$sortOr !== void 0 ? _panel$options$sortOr : panel.sortOrder) !== null && _ref3 !== void 0 ? _ref3 : SortOrder.AlphaAsc,\n    dashboardAlerts: (_ref4 = (_panel$options$dashbo = panel.options.dashboardAlerts) !== null && _panel$options$dashbo !== void 0 ? _panel$options$dashbo : panel.onlyAlertsOnDashboard) !== null && _ref4 !== void 0 ? _ref4 : false,\n    alertName: (_ref5 = (_panel$options$alertN = panel.options.alertName) !== null && _panel$options$alertN !== void 0 ? _panel$options$alertN : panel.nameFilter) !== null && _ref5 !== void 0 ? _ref5 : '',\n    dashboardTitle: (_ref6 = (_panel$options$dashbo2 = panel.options.dashboardTitle) !== null && _panel$options$dashbo2 !== void 0 ? _panel$options$dashbo2 : panel.dashboardFilter) !== null && _ref6 !== void 0 ? _ref6 : '',\n    folderId: (_panel$options$folder = panel.options.folderId) !== null && _panel$options$folder !== void 0 ? _panel$options$folder : panel.folderId,\n    tags: (_ref7 = (_panel$options$tags = panel.options.tags) !== null && _panel$options$tags !== void 0 ? _panel$options$tags : panel.dashboardTags) !== null && _ref7 !== void 0 ? _ref7 : [],\n    stateFilter: (_ref8 = (_panel$options$stateF = panel.options.stateFilter) !== null && _panel$options$stateF !== void 0 ? _panel$options$stateF : (_panel$stateFilter = panel.stateFilter) === null || _panel$stateFilter === void 0 ? void 0 : _panel$stateFilter.reduce((filterObj, curFilter) => Object.assign({}, filterObj, {\n      [curFilter]: true\n    }), {})) !== null && _ref8 !== void 0 ? _ref8 : {}\n  };\n  const previousVersion = parseFloat(panel.pluginVersion || '7.4');\n\n  if (previousVersion < 7.5) {\n    const oldProps = ['show', 'limit', 'sortOrder', 'onlyAlertsOnDashboard', 'nameFilter', 'dashboardFilter', 'folderId', 'dashboardTags', 'stateFilter'];\n    oldProps.forEach(prop => delete panel[prop]);\n  }\n\n  return newOptions;\n};","map":{"version":3,"names":["ShowOption","SortOrder","alertListPanelMigrationHandler","panel","newOptions","showOptions","options","show","Current","maxItems","limit","sortOrder","AlphaAsc","dashboardAlerts","onlyAlertsOnDashboard","alertName","nameFilter","dashboardTitle","dashboardFilter","folderId","tags","dashboardTags","stateFilter","reduce","filterObj","curFilter","previousVersion","parseFloat","pluginVersion","oldProps","forEach","prop"],"sources":["/home/soula/grafana/public/app/plugins/panel/alertlist/AlertListMigrationHandler.ts"],"sourcesContent":["import { PanelModel } from '@grafana/data';\n\nimport { AlertListOptions, ShowOption, SortOrder } from './types';\n\nexport const alertListPanelMigrationHandler = (\n  panel: PanelModel<AlertListOptions> & Record<string, any>\n): Partial<AlertListOptions> => {\n  const newOptions: AlertListOptions = {\n    showOptions: panel.options.showOptions ?? panel.show ?? ShowOption.Current,\n    maxItems: panel.options.maxItems ?? panel.limit ?? 10,\n    sortOrder: panel.options.sortOrder ?? panel.sortOrder ?? SortOrder.AlphaAsc,\n    dashboardAlerts: panel.options.dashboardAlerts ?? panel.onlyAlertsOnDashboard ?? false,\n    alertName: panel.options.alertName ?? panel.nameFilter ?? '',\n    dashboardTitle: panel.options.dashboardTitle ?? panel.dashboardFilter ?? '',\n    folderId: panel.options.folderId ?? panel.folderId,\n    tags: panel.options.tags ?? panel.dashboardTags ?? [],\n    stateFilter:\n      panel.options.stateFilter ??\n      panel.stateFilter?.reduce((filterObj: any, curFilter: any) => ({ ...filterObj, [curFilter]: true }), {}) ??\n      {},\n  };\n\n  const previousVersion = parseFloat(panel.pluginVersion || '7.4');\n  if (previousVersion < 7.5) {\n    const oldProps = [\n      'show',\n      'limit',\n      'sortOrder',\n      'onlyAlertsOnDashboard',\n      'nameFilter',\n      'dashboardFilter',\n      'folderId',\n      'dashboardTags',\n      'stateFilter',\n    ];\n    oldProps.forEach((prop) => delete panel[prop]);\n  }\n\n  return newOptions;\n};\n"],"mappings":"AAEA,SAA2BA,UAA3B,EAAuCC,SAAvC,QAAwD,SAAxD;AAEA,OAAO,MAAMC,8BAA8B,GACzCC,KAD4C,IAEd;EAAA;;EAC9B,MAAMC,UAA4B,GAAG;IACnCC,WAAW,mCAAEF,KAAK,CAACG,OAAN,CAAcD,WAAhB,yEAA+BF,KAAK,CAACI,IAArC,uCAA6CP,UAAU,CAACQ,OADhC;IAEnCC,QAAQ,oCAAEN,KAAK,CAACG,OAAN,CAAcG,QAAhB,yEAA4BN,KAAK,CAACO,KAAlC,yCAA2C,EAFhB;IAGnCC,SAAS,oCAAER,KAAK,CAACG,OAAN,CAAcK,SAAhB,yEAA6BR,KAAK,CAACQ,SAAnC,yCAAgDV,SAAS,CAACW,QAHhC;IAInCC,eAAe,oCAAEV,KAAK,CAACG,OAAN,CAAcO,eAAhB,yEAAmCV,KAAK,CAACW,qBAAzC,yCAAkE,KAJ9C;IAKnCC,SAAS,oCAAEZ,KAAK,CAACG,OAAN,CAAcS,SAAhB,yEAA6BZ,KAAK,CAACa,UAAnC,yCAAiD,EALvB;IAMnCC,cAAc,qCAAEd,KAAK,CAACG,OAAN,CAAcW,cAAhB,2EAAkCd,KAAK,CAACe,eAAxC,yCAA2D,EANtC;IAOnCC,QAAQ,2BAAEhB,KAAK,CAACG,OAAN,CAAca,QAAhB,yEAA4BhB,KAAK,CAACgB,QAPP;IAQnCC,IAAI,kCAAEjB,KAAK,CAACG,OAAN,CAAcc,IAAhB,qEAAwBjB,KAAK,CAACkB,aAA9B,yCAA+C,EARhB;IASnCC,WAAW,oCACTnB,KAAK,CAACG,OAAN,CAAcgB,WADL,+FAETnB,KAAK,CAACmB,WAFG,uDAET,mBAAmBC,MAAnB,CAA0B,CAACC,SAAD,EAAiBC,SAAjB,uBAA0CD,SAA1C;MAAqD,CAACC,SAAD,GAAa;IAAlE,EAA1B,EAAqG,EAArG,CAFS,yCAGT;EAZiC,CAArC;EAeA,MAAMC,eAAe,GAAGC,UAAU,CAACxB,KAAK,CAACyB,aAAN,IAAuB,KAAxB,CAAlC;;EACA,IAAIF,eAAe,GAAG,GAAtB,EAA2B;IACzB,MAAMG,QAAQ,GAAG,CACf,MADe,EAEf,OAFe,EAGf,WAHe,EAIf,uBAJe,EAKf,YALe,EAMf,iBANe,EAOf,UAPe,EAQf,eARe,EASf,aATe,CAAjB;IAWAA,QAAQ,CAACC,OAAT,CAAkBC,IAAD,IAAU,OAAO5B,KAAK,CAAC4B,IAAD,CAAvC;EACD;;EAED,OAAO3B,UAAP;AACD,CAnCM"},"metadata":{},"sourceType":"module"}