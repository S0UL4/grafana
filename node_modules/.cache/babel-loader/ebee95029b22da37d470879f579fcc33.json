{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { withTheme2 } from '../../themes/index';\nimport { DataLinkButton } from '../DataLinks/DataLinkButton';\nimport { IconButton } from '../IconButton/IconButton';\nimport { LogLabelStats } from './LogLabelStats';\nimport { getLogRowStyles } from './getLogRowStyles'; //Components\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    noHoverBackground: css`\n      label: noHoverBackground;\n      :hover {\n        background-color: transparent;\n      }\n    `,\n    hoverCursor: css`\n      label: hoverCursor;\n      cursor: pointer;\n    `,\n    wordBreakAll: css`\n      label: wordBreakAll;\n      word-break: break-all;\n    `,\n    showingField: css`\n      color: ${theme.colors.primary.text};\n    `,\n    wrapLine: css`\n      label: wrapLine;\n      white-space: pre-wrap;\n    `\n  };\n};\n\nclass UnThemedLogDetailsRow extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showFieldsStats: false,\n      fieldCount: 0,\n      fieldStats: null\n    });\n\n    _defineProperty(this, \"showField\", () => {\n      const {\n        onClickShowDetectedField,\n        parsedKey\n      } = this.props;\n\n      if (onClickShowDetectedField) {\n        onClickShowDetectedField(parsedKey);\n      }\n    });\n\n    _defineProperty(this, \"hideField\", () => {\n      const {\n        onClickHideDetectedField,\n        parsedKey\n      } = this.props;\n\n      if (onClickHideDetectedField) {\n        onClickHideDetectedField(parsedKey);\n      }\n    });\n\n    _defineProperty(this, \"filterLabel\", () => {\n      const {\n        onClickFilterLabel,\n        parsedKey,\n        parsedValue\n      } = this.props;\n\n      if (onClickFilterLabel) {\n        onClickFilterLabel(parsedKey, parsedValue);\n      }\n    });\n\n    _defineProperty(this, \"filterOutLabel\", () => {\n      const {\n        onClickFilterOutLabel,\n        parsedKey,\n        parsedValue\n      } = this.props;\n\n      if (onClickFilterOutLabel) {\n        onClickFilterOutLabel(parsedKey, parsedValue);\n      }\n    });\n\n    _defineProperty(this, \"showStats\", () => {\n      const {\n        showFieldsStats\n      } = this.state;\n\n      if (!showFieldsStats) {\n        const fieldStats = this.props.getStats();\n        const fieldCount = fieldStats ? fieldStats.reduce((sum, stat) => sum + stat.count, 0) : 0;\n        this.setState({\n          fieldStats,\n          fieldCount\n        });\n      }\n\n      this.toggleFieldsStats();\n    });\n  }\n\n  toggleFieldsStats() {\n    this.setState(state => {\n      return {\n        showFieldsStats: !state.showFieldsStats\n      };\n    });\n  }\n\n  render() {\n    const {\n      theme,\n      parsedKey,\n      parsedValue,\n      isLabel,\n      links,\n      showDetectedFields,\n      wrapLogMessage,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      onClickFilterLabel,\n      onClickFilterOutLabel\n    } = this.props;\n    const {\n      showFieldsStats,\n      fieldStats,\n      fieldCount\n    } = this.state;\n    const styles = getStyles(theme);\n    const style = getLogRowStyles(theme);\n    const hasDetectedFieldsFunctionality = onClickShowDetectedField && onClickHideDetectedField;\n    const hasFilteringFunctionality = onClickFilterLabel && onClickFilterOutLabel;\n    const toggleFieldButton = !isLabel && showDetectedFields && showDetectedFields.includes(parsedKey) ? /*#__PURE__*/_jsx(IconButton, {\n      name: \"eye\",\n      className: styles.showingField,\n      title: \"Hide this field\",\n      onClick: this.hideField\n    }) : /*#__PURE__*/_jsx(IconButton, {\n      name: \"eye\",\n      title: \"Show this field instead of the message\",\n      onClick: this.showField\n    });\n    return /*#__PURE__*/_jsxs(\"tr\", {\n      className: cx(style.logDetailsValue, {\n        [styles.noHoverBackground]: showFieldsStats\n      }),\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        className: style.logsDetailsIcon,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          name: \"signal\",\n          title: 'Ad-hoc statistics',\n          onClick: this.showStats\n        })\n      }), hasFilteringFunctionality && isLabel && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"td\", {\n          className: style.logsDetailsIcon,\n          children: /*#__PURE__*/_jsx(IconButton, {\n            name: \"search-plus\",\n            title: \"Filter for value\",\n            onClick: this.filterLabel\n          })\n        }), /*#__PURE__*/_jsx(\"td\", {\n          className: style.logsDetailsIcon,\n          children: /*#__PURE__*/_jsx(IconButton, {\n            name: \"search-minus\",\n            title: \"Filter out value\",\n            onClick: this.filterOutLabel\n          })\n        })]\n      }), hasDetectedFieldsFunctionality && !isLabel && /*#__PURE__*/_jsx(\"td\", {\n        className: style.logsDetailsIcon,\n        colSpan: 2,\n        children: toggleFieldButton\n      }), /*#__PURE__*/_jsx(\"td\", {\n        className: style.logDetailsLabel,\n        children: parsedKey\n      }), /*#__PURE__*/_jsxs(\"td\", {\n        className: cx(styles.wordBreakAll, wrapLogMessage && styles.wrapLine),\n        children: [parsedValue, links === null || links === void 0 ? void 0 : links.map(link => /*#__PURE__*/_jsxs(\"span\", {\n          children: [\"\\xA0\", /*#__PURE__*/_jsx(DataLinkButton, {\n            link: link\n          })]\n        }, link.title)), showFieldsStats && /*#__PURE__*/_jsx(LogLabelStats, {\n          stats: fieldStats,\n          label: parsedKey,\n          value: parsedValue,\n          rowCount: fieldCount,\n          isLabel: isLabel\n        })]\n      })]\n    });\n  }\n\n}\n\nexport const LogDetailsRow = withTheme2(UnThemedLogDetailsRow);\nLogDetailsRow.displayName = 'LogDetailsRow';","map":{"version":3,"names":["css","cx","React","PureComponent","withTheme2","DataLinkButton","IconButton","LogLabelStats","getLogRowStyles","getStyles","theme","noHoverBackground","hoverCursor","wordBreakAll","showingField","colors","primary","text","wrapLine","UnThemedLogDetailsRow","showFieldsStats","fieldCount","fieldStats","onClickShowDetectedField","parsedKey","props","onClickHideDetectedField","onClickFilterLabel","parsedValue","onClickFilterOutLabel","state","getStats","reduce","sum","stat","count","setState","toggleFieldsStats","render","isLabel","links","showDetectedFields","wrapLogMessage","styles","style","hasDetectedFieldsFunctionality","hasFilteringFunctionality","toggleFieldButton","includes","hideField","showField","logDetailsValue","logsDetailsIcon","showStats","filterLabel","filterOutLabel","logDetailsLabel","map","link","title","LogDetailsRow","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Logs/LogDetailsRow.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { Field, LinkModel, LogLabelStatsModel, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { DataLinkButton } from '../DataLinks/DataLinkButton';\nimport { IconButton } from '../IconButton/IconButton';\n\nimport { LogLabelStats } from './LogLabelStats';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n//Components\n\nexport interface Props extends Themeable2 {\n  parsedValue: string;\n  parsedKey: string;\n  wrapLogMessage?: boolean;\n  isLabel?: boolean;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  links?: Array<LinkModel<Field>>;\n  getStats: () => LogLabelStatsModel[] | null;\n  showDetectedFields?: string[];\n  onClickShowDetectedField?: (key: string) => void;\n  onClickHideDetectedField?: (key: string) => void;\n}\n\ninterface State {\n  showFieldsStats: boolean;\n  fieldCount: number;\n  fieldStats: LogLabelStatsModel[] | null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    noHoverBackground: css`\n      label: noHoverBackground;\n      :hover {\n        background-color: transparent;\n      }\n    `,\n    hoverCursor: css`\n      label: hoverCursor;\n      cursor: pointer;\n    `,\n    wordBreakAll: css`\n      label: wordBreakAll;\n      word-break: break-all;\n    `,\n    showingField: css`\n      color: ${theme.colors.primary.text};\n    `,\n    wrapLine: css`\n      label: wrapLine;\n      white-space: pre-wrap;\n    `,\n  };\n};\n\nclass UnThemedLogDetailsRow extends PureComponent<Props, State> {\n  state: State = {\n    showFieldsStats: false,\n    fieldCount: 0,\n    fieldStats: null,\n  };\n\n  showField = () => {\n    const { onClickShowDetectedField, parsedKey } = this.props;\n    if (onClickShowDetectedField) {\n      onClickShowDetectedField(parsedKey);\n    }\n  };\n\n  hideField = () => {\n    const { onClickHideDetectedField, parsedKey } = this.props;\n    if (onClickHideDetectedField) {\n      onClickHideDetectedField(parsedKey);\n    }\n  };\n\n  filterLabel = () => {\n    const { onClickFilterLabel, parsedKey, parsedValue } = this.props;\n    if (onClickFilterLabel) {\n      onClickFilterLabel(parsedKey, parsedValue);\n    }\n  };\n\n  filterOutLabel = () => {\n    const { onClickFilterOutLabel, parsedKey, parsedValue } = this.props;\n    if (onClickFilterOutLabel) {\n      onClickFilterOutLabel(parsedKey, parsedValue);\n    }\n  };\n\n  showStats = () => {\n    const { showFieldsStats } = this.state;\n    if (!showFieldsStats) {\n      const fieldStats = this.props.getStats();\n      const fieldCount = fieldStats ? fieldStats.reduce((sum, stat) => sum + stat.count, 0) : 0;\n      this.setState({ fieldStats, fieldCount });\n    }\n    this.toggleFieldsStats();\n  };\n\n  toggleFieldsStats() {\n    this.setState((state) => {\n      return {\n        showFieldsStats: !state.showFieldsStats,\n      };\n    });\n  }\n\n  render() {\n    const {\n      theme,\n      parsedKey,\n      parsedValue,\n      isLabel,\n      links,\n      showDetectedFields,\n      wrapLogMessage,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n    } = this.props;\n    const { showFieldsStats, fieldStats, fieldCount } = this.state;\n    const styles = getStyles(theme);\n    const style = getLogRowStyles(theme);\n\n    const hasDetectedFieldsFunctionality = onClickShowDetectedField && onClickHideDetectedField;\n    const hasFilteringFunctionality = onClickFilterLabel && onClickFilterOutLabel;\n\n    const toggleFieldButton =\n      !isLabel && showDetectedFields && showDetectedFields.includes(parsedKey) ? (\n        <IconButton name=\"eye\" className={styles.showingField} title=\"Hide this field\" onClick={this.hideField} />\n      ) : (\n        <IconButton name=\"eye\" title=\"Show this field instead of the message\" onClick={this.showField} />\n      );\n\n    return (\n      <tr className={cx(style.logDetailsValue, { [styles.noHoverBackground]: showFieldsStats })}>\n        {/* Action buttons - show stats/filter results */}\n        <td className={style.logsDetailsIcon}>\n          <IconButton name=\"signal\" title={'Ad-hoc statistics'} onClick={this.showStats} />\n        </td>\n\n        {hasFilteringFunctionality && isLabel && (\n          <>\n            <td className={style.logsDetailsIcon}>\n              <IconButton name=\"search-plus\" title=\"Filter for value\" onClick={this.filterLabel} />\n            </td>\n            <td className={style.logsDetailsIcon}>\n              <IconButton name=\"search-minus\" title=\"Filter out value\" onClick={this.filterOutLabel} />\n            </td>\n          </>\n        )}\n\n        {hasDetectedFieldsFunctionality && !isLabel && (\n          <td className={style.logsDetailsIcon} colSpan={2}>\n            {toggleFieldButton}\n          </td>\n        )}\n\n        {/* Key - value columns */}\n        <td className={style.logDetailsLabel}>{parsedKey}</td>\n        <td className={cx(styles.wordBreakAll, wrapLogMessage && styles.wrapLine)}>\n          {parsedValue}\n          {links?.map((link) => (\n            <span key={link.title}>\n              &nbsp;\n              <DataLinkButton link={link} />\n            </span>\n          ))}\n          {showFieldsStats && (\n            <LogLabelStats\n              stats={fieldStats!}\n              label={parsedKey}\n              value={parsedValue}\n              rowCount={fieldCount}\n              isLabel={isLabel}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport const LogDetailsRow = withTheme2(UnThemedLogDetailsRow);\nLogDetailsRow.displayName = 'LogDetailsRow';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}