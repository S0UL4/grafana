{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { clone, each, map } from 'lodash';\nexport class QueryPartDef {\n  constructor(options) {\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"defaultParams\", void 0);\n\n    _defineProperty(this, \"renderer\", void 0);\n\n    _defineProperty(this, \"category\", void 0);\n\n    _defineProperty(this, \"addStrategy\", void 0);\n\n    this.type = options.type;\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n    this.renderer = options.renderer;\n    this.category = options.category;\n    this.addStrategy = options.addStrategy;\n  }\n\n}\nexport class QueryPart {\n  constructor(part, def) {\n    _defineProperty(this, \"part\", void 0);\n\n    _defineProperty(this, \"def\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"text\", void 0);\n\n    this.part = part;\n    this.def = def;\n\n    if (!this.def) {\n      throw {\n        message: 'Could not find query part ' + part.type\n      };\n    }\n\n    part.params = part.params || clone(this.def.defaultParams);\n    this.params = part.params;\n    this.text = '';\n    this.updateText();\n  }\n\n  render(innerExpr) {\n    return this.def.renderer(this, innerExpr);\n  }\n\n  hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this.hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.type + '()';\n      return;\n    }\n\n    let text = this.def.type + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n\n}\nexport function functionRenderer(part, innerExpr) {\n  const str = part.def.type + '(';\n  const parameters = map(part.params, (value, index) => {\n    const paramType = part.def.params[index];\n\n    if (paramType.type === 'time') {\n      if (value === 'auto') {\n        value = '$__interval';\n      }\n    }\n\n    if (paramType.quote === 'single') {\n      return \"'\" + value + \"'\";\n    } else if (paramType.quote === 'double') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n\n  if (innerExpr) {\n    parameters.unshift(innerExpr);\n  }\n\n  return str + parameters.join(', ') + ')';\n}\nexport function suffixRenderer(part, innerExpr) {\n  return innerExpr + ' ' + part.params[0];\n}\nexport function identityRenderer(part, innerExpr) {\n  return part.params[0];\n}\nexport function quotedIdentityRenderer(part, innerExpr) {\n  return '\"' + part.params[0] + '\"';\n}","map":{"version":3,"names":["clone","each","map","QueryPartDef","constructor","options","type","params","defaultParams","renderer","category","addStrategy","QueryPart","part","def","message","text","updateText","render","innerExpr","hasMultipleParamsInString","strValue","index","indexOf","optional","updateParam","split","partVal","idx","trim","splice","length","join","functionRenderer","str","parameters","value","paramType","quote","unshift","suffixRenderer","identityRenderer","quotedIdentityRenderer"],"sources":["/home/soula/grafana/public/app/features/alerting/state/query_part.ts"],"sourcesContent":["import { clone, each, map } from 'lodash';\n\nexport class QueryPartDef {\n  type: string;\n  params: any[];\n  defaultParams: any[];\n  renderer: any;\n  category: any;\n  addStrategy: any;\n\n  constructor(options: any) {\n    this.type = options.type;\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n    this.renderer = options.renderer;\n    this.category = options.category;\n    this.addStrategy = options.addStrategy;\n  }\n}\n\nexport class QueryPart {\n  part: any;\n  def: QueryPartDef;\n  params: any[];\n  text: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find query part ' + part.type };\n    }\n\n    part.params = part.params || clone(this.def.defaultParams);\n    this.params = part.params;\n    this.text = '';\n    this.updateText();\n  }\n\n  render(innerExpr: string) {\n    return this.def.renderer(this, innerExpr);\n  }\n\n  hasMultipleParamsInString(strValue: string, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue: string, index: number) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this.hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.type + '()';\n      return;\n    }\n\n    let text = this.def.type + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function functionRenderer(part: any, innerExpr: string) {\n  const str = part.def.type + '(';\n  const parameters = map(part.params, (value, index) => {\n    const paramType = part.def.params[index];\n    if (paramType.type === 'time') {\n      if (value === 'auto') {\n        value = '$__interval';\n      }\n    }\n    if (paramType.quote === 'single') {\n      return \"'\" + value + \"'\";\n    } else if (paramType.quote === 'double') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n\n  if (innerExpr) {\n    parameters.unshift(innerExpr);\n  }\n  return str + parameters.join(', ') + ')';\n}\n\nexport function suffixRenderer(part: QueryPart, innerExpr: string) {\n  return innerExpr + ' ' + part.params[0];\n}\n\nexport function identityRenderer(part: QueryPart, innerExpr: string) {\n  return part.params[0];\n}\n\nexport function quotedIdentityRenderer(part: QueryPart, innerExpr: string) {\n  return '\"' + part.params[0] + '\"';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}