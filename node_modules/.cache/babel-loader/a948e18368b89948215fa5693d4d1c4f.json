{"ast":null,"code":"import { DataSourceApi } from '@grafana/data';\n\n/**\n * This should not really be called\n */\nexport class DashboardDatasource extends DataSourceApi {\n  constructor(instanceSettings) {\n    super(instanceSettings);\n  }\n\n  getCollapsedText(query) {\n    return `Dashboard Reference: ${query.panelId}`;\n  }\n\n  query(options) {\n    return Promise.reject('This should not be called directly');\n  }\n\n  testDatasource() {\n    return Promise.resolve({});\n  }\n\n}","map":{"version":3,"names":["DataSourceApi","DashboardDatasource","constructor","instanceSettings","getCollapsedText","query","panelId","options","Promise","reject","testDatasource","resolve"],"sources":["/home/soula/grafana/public/app/plugins/datasource/dashboard/datasource.ts"],"sourcesContent":["import { DataSourceApi, DataQueryRequest, DataQueryResponse, DataSourceInstanceSettings } from '@grafana/data';\n\nimport { DashboardQuery } from './types';\n\n/**\n * This should not really be called\n */\nexport class DashboardDatasource extends DataSourceApi<DashboardQuery> {\n  constructor(instanceSettings: DataSourceInstanceSettings) {\n    super(instanceSettings);\n  }\n\n  getCollapsedText(query: DashboardQuery) {\n    return `Dashboard Reference: ${query.panelId}`;\n  }\n\n  query(options: DataQueryRequest<DashboardQuery>): Promise<DataQueryResponse> {\n    return Promise.reject('This should not be called directly');\n  }\n\n  testDatasource() {\n    return Promise.resolve({});\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA+F,eAA/F;;AAIA;AACA;AACA;AACA,OAAO,MAAMC,mBAAN,SAAkCD,aAAlC,CAAgE;EACrEE,WAAW,CAACC,gBAAD,EAA+C;IACxD,MAAMA,gBAAN;EACD;;EAEDC,gBAAgB,CAACC,KAAD,EAAwB;IACtC,OAAQ,wBAAuBA,KAAK,CAACC,OAAQ,EAA7C;EACD;;EAEDD,KAAK,CAACE,OAAD,EAAwE;IAC3E,OAAOC,OAAO,CAACC,MAAR,CAAe,oCAAf,CAAP;EACD;;EAEDC,cAAc,GAAG;IACf,OAAOF,OAAO,CAACG,OAAR,CAAgB,EAAhB,CAAP;EACD;;AAfoE"},"metadata":{},"sourceType":"module"}