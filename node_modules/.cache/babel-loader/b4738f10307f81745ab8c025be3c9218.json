{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { IconButton, UnitPicker, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function UnitValueEditor({\n  value,\n  onChange,\n  item\n}) {\n  var _item$settings;\n\n  const styles = useStyles2(getStyles);\n\n  if (item !== null && item !== void 0 && (_item$settings = item.settings) !== null && _item$settings !== void 0 && _item$settings.isClearable && value != null) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: styles.first,\n        children: /*#__PURE__*/_jsx(UnitPicker, {\n          value: value,\n          onChange: onChange\n        })\n      }), /*#__PURE__*/_jsx(IconButton, {\n        ariaLabel: \"clear unit selection\",\n        name: \"times\",\n        onClick: () => onChange(undefined)\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsx(UnitPicker, {\n    value: value,\n    onChange: onChange\n  });\n}\n\nconst getStyles = theme => ({\n  wrapper: css`\n    width: 100%;\n    display: flex;\n    flex-direction: rows;\n    align-items: center;\n  `,\n  first: css`\n    margin-right: 8px;\n    flex-grow: 2;\n  `\n});","map":{"version":3,"names":["css","React","IconButton","UnitPicker","useStyles2","UnitValueEditor","value","onChange","item","styles","getStyles","settings","isClearable","wrapper","first","undefined","theme"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/units.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { FieldConfigEditorProps, GrafanaTheme2, UnitFieldConfigSettings } from '@grafana/data';\nimport { IconButton, UnitPicker, useStyles2 } from '@grafana/ui';\n\ntype Props = FieldConfigEditorProps<string, UnitFieldConfigSettings>;\n\nexport function UnitValueEditor({ value, onChange, item }: Props) {\n  const styles = useStyles2(getStyles);\n  if (item?.settings?.isClearable && value != null) {\n    return (\n      <div className={styles.wrapper}>\n        <span className={styles.first}>\n          <UnitPicker value={value} onChange={onChange} />\n        </span>\n        <IconButton ariaLabel=\"clear unit selection\" name=\"times\" onClick={() => onChange(undefined)} />\n      </div>\n    );\n  }\n  return <UnitPicker value={value} onChange={onChange} />;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    width: 100%;\n    display: flex;\n    flex-direction: rows;\n    align-items: center;\n  `,\n  first: css`\n    margin-right: 8px;\n    flex-grow: 2;\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,QAAmD,aAAnD;;;AAIA,OAAO,SAASC,eAAT,CAAyB;EAAEC,KAAF;EAASC,QAAT;EAAmBC;AAAnB,CAAzB,EAA2D;EAAA;;EAChE,MAAMC,MAAM,GAAGL,UAAU,CAACM,SAAD,CAAzB;;EACA,IAAIF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,sBAAAA,IAAI,CAAEG,QAAN,0DAAgBC,WAAhB,IAA+BN,KAAK,IAAI,IAA5C,EAAkD;IAChD,oBACE;MAAK,SAAS,EAAEG,MAAM,CAACI,OAAvB;MAAA,wBACE;QAAM,SAAS,EAAEJ,MAAM,CAACK,KAAxB;QAAA,uBACE,KAAC,UAAD;UAAY,KAAK,EAAER,KAAnB;UAA0B,QAAQ,EAAEC;QAApC;MADF,EADF,eAIE,KAAC,UAAD;QAAY,SAAS,EAAC,sBAAtB;QAA6C,IAAI,EAAC,OAAlD;QAA0D,OAAO,EAAE,MAAMA,QAAQ,CAACQ,SAAD;MAAjF,EAJF;IAAA,EADF;EAQD;;EACD,oBAAO,KAAC,UAAD;IAAY,KAAK,EAAET,KAAnB;IAA0B,QAAQ,EAAEC;EAApC,EAAP;AACD;;AAED,MAAMG,SAAS,GAAIM,KAAD,KAA2B;EAC3CH,OAAO,EAAEb,GAAI;AACf;AACA;AACA;AACA;AACA,GAN6C;EAO3Cc,KAAK,EAAEd,GAAI;AACb;AACA;AACA;AAV6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}