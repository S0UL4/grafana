{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React from 'react';\nimport { colorManipulator } from '@grafana/data';\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { NamedColorsPalette } from './NamedColorsPalette';\nimport SpectrumPalette from './SpectrumPalette';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nclass UnThemedColorPickerPopover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getTabClassName\", tabName => {\n      const {\n        activePicker\n      } = this.state;\n      return `ColorPickerPopover__tab ${activePicker === tabName && 'ColorPickerPopover__tab--active'}`;\n    });\n\n    _defineProperty(this, \"handleChange\", color => {\n      const {\n        onChange,\n        enableNamedColors,\n        theme\n      } = this.props;\n\n      if (enableNamedColors) {\n        return onChange(color);\n      }\n\n      onChange(colorManipulator.asHexString(theme.visualization.getColorByName(color)));\n    });\n\n    _defineProperty(this, \"onTabChange\", tab => {\n      return () => this.setState({\n        activePicker: tab\n      });\n    });\n\n    _defineProperty(this, \"renderPicker\", () => {\n      const {\n        activePicker\n      } = this.state;\n      const {\n        color\n      } = this.props;\n\n      switch (activePicker) {\n        case 'spectrum':\n          return /*#__PURE__*/_jsx(SpectrumPalette, {\n            color: color,\n            onChange: this.handleChange\n          });\n\n        case 'palette':\n          return /*#__PURE__*/_jsx(NamedColorsPalette, {\n            color: color,\n            onChange: this.handleChange\n          });\n\n        default:\n          return this.renderCustomPicker(activePicker);\n      }\n    });\n\n    _defineProperty(this, \"renderCustomPicker\", tabKey => {\n      const {\n        customPickers,\n        color,\n        theme\n      } = this.props;\n\n      if (!customPickers) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(customPickers[tabKey].tabComponent, {\n        color,\n        theme,\n        onChange: this.handleChange\n      });\n    });\n\n    _defineProperty(this, \"renderCustomPickerTabs\", () => {\n      const {\n        customPickers\n      } = this.props;\n\n      if (!customPickers) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: Object.keys(customPickers).map(key => {\n          return /*#__PURE__*/_jsx(\"button\", {\n            className: this.getTabClassName(key),\n            onClick: this.onTabChange(key),\n            children: customPickers[key].name\n          }, key);\n        })\n      });\n    });\n\n    this.state = {\n      activePicker: 'palette'\n    };\n  }\n\n  render() {\n    const {\n      theme\n    } = this.props;\n    const styles = getStyles(theme);\n    return /*#__PURE__*/_jsx(FocusScope, {\n      contain: true,\n      restoreFocus: true,\n      autoFocus: true,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        tabIndex: -1,\n        className: styles.colorPickerPopover,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.colorPickerPopoverTabs,\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            className: this.getTabClassName('palette'),\n            onClick: this.onTabChange('palette'),\n            children: \"Colors\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: this.getTabClassName('spectrum'),\n            onClick: this.onTabChange('spectrum'),\n            children: \"Custom\"\n          }), this.renderCustomPickerTabs()]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.colorPickerPopoverContent,\n          children: this.renderPicker()\n        })]\n      })\n    });\n  }\n\n}\n\nexport const ColorPickerPopover = withTheme2(UnThemedColorPickerPopover);\nColorPickerPopover.displayName = 'ColorPickerPopover';\nconst getStyles = stylesFactory(theme => {\n  return {\n    colorPickerPopover: css`\n      border-radius: ${theme.shape.borderRadius()};\n      box-shadow: ${theme.shadows.z3};\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.medium};\n\n      .ColorPickerPopover__tab {\n        width: 50%;\n        text-align: center;\n        padding: ${theme.spacing(1, 0)};\n        background: ${theme.colors.background.secondary};\n        color: ${theme.colors.text.secondary};\n        font-size: ${theme.typography.bodySmall.fontSize};\n        cursor: pointer;\n        border: none;\n\n        &:focus:not(:focus-visible) {\n          outline: none;\n          box-shadow: none;\n        }\n\n        :focus-visible {\n          position: relative;\n        }\n      }\n\n      .ColorPickerPopover__tab--active {\n        color: ${theme.colors.text.primary};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.background.primary};\n      }\n    `,\n    colorPickerPopoverContent: css`\n      width: 246px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      min-height: 184px;\n      padding: ${theme.spacing(1)};\n      display: flex;\n      flex-direction: column;\n    `,\n    colorPickerPopoverTabs: css`\n      display: flex;\n      width: 100%;\n      border-radius: ${theme.shape.borderRadius()} ${theme.shape.borderRadius()} 0 0;\n    `\n  };\n});","map":{"version":3,"names":["css","FocusScope","React","colorManipulator","stylesFactory","withTheme2","NamedColorsPalette","SpectrumPalette","UnThemedColorPickerPopover","Component","constructor","props","tabName","activePicker","state","color","onChange","enableNamedColors","theme","asHexString","visualization","getColorByName","tab","setState","handleChange","renderCustomPicker","tabKey","customPickers","createElement","tabComponent","Object","keys","map","key","getTabClassName","onTabChange","name","render","styles","getStyles","colorPickerPopover","colorPickerPopoverTabs","renderCustomPickerTabs","colorPickerPopoverContent","renderPicker","ColorPickerPopover","displayName","shape","borderRadius","shadows","z3","colors","background","primary","border","medium","spacing","secondary","text","typography","bodySmall","fontSize","fontWeightMedium"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ColorPicker/ColorPickerPopover.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React from 'react';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types/theme';\nimport { PopoverContentProps } from '../Tooltip';\n\nimport { NamedColorsPalette } from './NamedColorsPalette';\nimport SpectrumPalette from './SpectrumPalette';\n\nexport type ColorPickerChangeHandler = (color: string) => void;\n\nexport interface ColorPickerProps extends Themeable2 {\n  color: string;\n  onChange: ColorPickerChangeHandler;\n\n  enableNamedColors?: boolean;\n}\n\nexport interface Props<T> extends ColorPickerProps, PopoverContentProps {\n  customPickers?: T;\n}\n\ntype PickerType = 'palette' | 'spectrum';\n\nexport interface CustomPickersDescriptor {\n  [key: string]: {\n    tabComponent: React.ComponentType<ColorPickerProps>;\n    name: string;\n  };\n}\n\ninterface State<T> {\n  activePicker: PickerType | keyof T;\n}\n\nclass UnThemedColorPickerPopover<T extends CustomPickersDescriptor> extends React.Component<Props<T>, State<T>> {\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = {\n      activePicker: 'palette',\n    };\n  }\n\n  getTabClassName = (tabName: PickerType | keyof T) => {\n    const { activePicker } = this.state;\n    return `ColorPickerPopover__tab ${activePicker === tabName && 'ColorPickerPopover__tab--active'}`;\n  };\n\n  handleChange = (color: any) => {\n    const { onChange, enableNamedColors, theme } = this.props;\n    if (enableNamedColors) {\n      return onChange(color);\n    }\n    onChange(colorManipulator.asHexString(theme.visualization.getColorByName(color)));\n  };\n\n  onTabChange = (tab: PickerType | keyof T) => {\n    return () => this.setState({ activePicker: tab });\n  };\n\n  renderPicker = () => {\n    const { activePicker } = this.state;\n    const { color } = this.props;\n\n    switch (activePicker) {\n      case 'spectrum':\n        return <SpectrumPalette color={color} onChange={this.handleChange} />;\n      case 'palette':\n        return <NamedColorsPalette color={color} onChange={this.handleChange} />;\n      default:\n        return this.renderCustomPicker(activePicker);\n    }\n  };\n\n  renderCustomPicker = (tabKey: keyof T) => {\n    const { customPickers, color, theme } = this.props;\n    if (!customPickers) {\n      return null;\n    }\n\n    return React.createElement(customPickers[tabKey].tabComponent, {\n      color,\n      theme,\n      onChange: this.handleChange,\n    });\n  };\n\n  renderCustomPickerTabs = () => {\n    const { customPickers } = this.props;\n\n    if (!customPickers) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(customPickers).map((key) => {\n          return (\n            <button className={this.getTabClassName(key)} onClick={this.onTabChange(key)} key={key}>\n              {customPickers[key].name}\n            </button>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { theme } = this.props;\n    const styles = getStyles(theme);\n    return (\n      <FocusScope contain restoreFocus autoFocus>\n        {/*\n          tabIndex=-1 is needed here to support highlighting text within the picker when using FocusScope\n          see https://github.com/adobe/react-spectrum/issues/1604#issuecomment-781574668\n        */}\n        <div tabIndex={-1} className={styles.colorPickerPopover}>\n          <div className={styles.colorPickerPopoverTabs}>\n            <button className={this.getTabClassName('palette')} onClick={this.onTabChange('palette')}>\n              Colors\n            </button>\n            <button className={this.getTabClassName('spectrum')} onClick={this.onTabChange('spectrum')}>\n              Custom\n            </button>\n            {this.renderCustomPickerTabs()}\n          </div>\n          <div className={styles.colorPickerPopoverContent}>{this.renderPicker()}</div>\n        </div>\n      </FocusScope>\n    );\n  }\n}\n\nexport const ColorPickerPopover = withTheme2(UnThemedColorPickerPopover);\nColorPickerPopover.displayName = 'ColorPickerPopover';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    colorPickerPopover: css`\n      border-radius: ${theme.shape.borderRadius()};\n      box-shadow: ${theme.shadows.z3};\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.medium};\n\n      .ColorPickerPopover__tab {\n        width: 50%;\n        text-align: center;\n        padding: ${theme.spacing(1, 0)};\n        background: ${theme.colors.background.secondary};\n        color: ${theme.colors.text.secondary};\n        font-size: ${theme.typography.bodySmall.fontSize};\n        cursor: pointer;\n        border: none;\n\n        &:focus:not(:focus-visible) {\n          outline: none;\n          box-shadow: none;\n        }\n\n        :focus-visible {\n          position: relative;\n        }\n      }\n\n      .ColorPickerPopover__tab--active {\n        color: ${theme.colors.text.primary};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.background.primary};\n      }\n    `,\n    colorPickerPopoverContent: css`\n      width: 246px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      min-height: 184px;\n      padding: ${theme.spacing(1)};\n      display: flex;\n      flex-direction: column;\n    `,\n    colorPickerPopoverTabs: css`\n      display: flex;\n      width: 100%;\n      border-radius: ${theme.shape.borderRadius()} ${theme.shape.borderRadius()} 0 0;\n    `,\n  };\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAwBC,gBAAxB,QAAgD,eAAhD;AAEA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,cAA1C;AAIA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;;AA4BA,MAAMC,0BAAN,SAA4EN,KAAK,CAACO,SAAlF,CAAgH;EAC9GC,WAAW,CAACC,KAAD,EAAkB;IAC3B,MAAMA,KAAN;;IAD2B,yCAOVC,OAAD,IAAmC;MACnD,MAAM;QAAEC;MAAF,IAAmB,KAAKC,KAA9B;MACA,OAAQ,2BAA0BD,YAAY,KAAKD,OAAjB,IAA4B,iCAAkC,EAAhG;IACD,CAV4B;;IAAA,sCAYbG,KAAD,IAAgB;MAC7B,MAAM;QAAEC,QAAF;QAAYC,iBAAZ;QAA+BC;MAA/B,IAAyC,KAAKP,KAApD;;MACA,IAAIM,iBAAJ,EAAuB;QACrB,OAAOD,QAAQ,CAACD,KAAD,CAAf;MACD;;MACDC,QAAQ,CAACb,gBAAgB,CAACgB,WAAjB,CAA6BD,KAAK,CAACE,aAAN,CAAoBC,cAApB,CAAmCN,KAAnC,CAA7B,CAAD,CAAR;IACD,CAlB4B;;IAAA,qCAoBdO,GAAD,IAA+B;MAC3C,OAAO,MAAM,KAAKC,QAAL,CAAc;QAAEV,YAAY,EAAES;MAAhB,CAAd,CAAb;IACD,CAtB4B;;IAAA,sCAwBd,MAAM;MACnB,MAAM;QAAET;MAAF,IAAmB,KAAKC,KAA9B;MACA,MAAM;QAAEC;MAAF,IAAY,KAAKJ,KAAvB;;MAEA,QAAQE,YAAR;QACE,KAAK,UAAL;UACE,oBAAO,KAAC,eAAD;YAAiB,KAAK,EAAEE,KAAxB;YAA+B,QAAQ,EAAE,KAAKS;UAA9C,EAAP;;QACF,KAAK,SAAL;UACE,oBAAO,KAAC,kBAAD;YAAoB,KAAK,EAAET,KAA3B;YAAkC,QAAQ,EAAE,KAAKS;UAAjD,EAAP;;QACF;UACE,OAAO,KAAKC,kBAAL,CAAwBZ,YAAxB,CAAP;MANJ;IAQD,CApC4B;;IAAA,4CAsCPa,MAAD,IAAqB;MACxC,MAAM;QAAEC,aAAF;QAAiBZ,KAAjB;QAAwBG;MAAxB,IAAkC,KAAKP,KAA7C;;MACA,IAAI,CAACgB,aAAL,EAAoB;QAClB,OAAO,IAAP;MACD;;MAED,oBAAOzB,KAAK,CAAC0B,aAAN,CAAoBD,aAAa,CAACD,MAAD,CAAb,CAAsBG,YAA1C,EAAwD;QAC7Dd,KAD6D;QAE7DG,KAF6D;QAG7DF,QAAQ,EAAE,KAAKQ;MAH8C,CAAxD,CAAP;IAKD,CAjD4B;;IAAA,gDAmDJ,MAAM;MAC7B,MAAM;QAAEG;MAAF,IAAoB,KAAKhB,KAA/B;;MAEA,IAAI,CAACgB,aAAL,EAAoB;QAClB,OAAO,IAAP;MACD;;MAED,oBACE;QAAA,UACGG,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,GAA3B,CAAgCC,GAAD,IAAS;UACvC,oBACE;YAAQ,SAAS,EAAE,KAAKC,eAAL,CAAqBD,GAArB,CAAnB;YAA8C,OAAO,EAAE,KAAKE,WAAL,CAAiBF,GAAjB,CAAvD;YAAA,UACGN,aAAa,CAACM,GAAD,CAAb,CAAmBG;UADtB,GAAmFH,GAAnF,CADF;QAKD,CANA;MADH,EADF;IAWD,CArE4B;;IAE3B,KAAKnB,KAAL,GAAa;MACXD,YAAY,EAAE;IADH,CAAb;EAGD;;EAkEDwB,MAAM,GAAG;IACP,MAAM;MAAEnB;IAAF,IAAY,KAAKP,KAAvB;IACA,MAAM2B,MAAM,GAAGC,SAAS,CAACrB,KAAD,CAAxB;IACA,oBACE,KAAC,UAAD;MAAY,OAAO,MAAnB;MAAoB,YAAY,MAAhC;MAAiC,SAAS,MAA1C;MAAA,uBAKE;QAAK,QAAQ,EAAE,CAAC,CAAhB;QAAmB,SAAS,EAAEoB,MAAM,CAACE,kBAArC;QAAA,wBACE;UAAK,SAAS,EAAEF,MAAM,CAACG,sBAAvB;UAAA,wBACE;YAAQ,SAAS,EAAE,KAAKP,eAAL,CAAqB,SAArB,CAAnB;YAAoD,OAAO,EAAE,KAAKC,WAAL,CAAiB,SAAjB,CAA7D;YAAA;UAAA,EADF,eAIE;YAAQ,SAAS,EAAE,KAAKD,eAAL,CAAqB,UAArB,CAAnB;YAAqD,OAAO,EAAE,KAAKC,WAAL,CAAiB,UAAjB,CAA9D;YAAA;UAAA,EAJF,EAOG,KAAKO,sBAAL,EAPH;QAAA,EADF,eAUE;UAAK,SAAS,EAAEJ,MAAM,CAACK,yBAAvB;UAAA,UAAmD,KAAKC,YAAL;QAAnD,EAVF;MAAA;IALF,EADF;EAoBD;;AA/F6G;;AAkGhH,OAAO,MAAMC,kBAAkB,GAAGxC,UAAU,CAACG,0BAAD,CAArC;AACPqC,kBAAkB,CAACC,WAAnB,GAAiC,oBAAjC;AAEA,MAAMP,SAAS,GAAGnC,aAAa,CAAEc,KAAD,IAA0B;EACxD,OAAO;IACLsB,kBAAkB,EAAExC,GAAI;AAC5B,uBAAuBkB,KAAK,CAAC6B,KAAN,CAAYC,YAAZ,EAA2B;AAClD,oBAAoB9B,KAAK,CAAC+B,OAAN,CAAcC,EAAG;AACrC,oBAAoBhC,KAAK,CAACiC,MAAN,CAAaC,UAAb,CAAwBC,OAAQ;AACpD,0BAA0BnC,KAAK,CAACiC,MAAN,CAAaG,MAAb,CAAoBC,MAAO;AACrD;AACA;AACA;AACA;AACA,mBAAmBrC,KAAK,CAACsC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAoB;AACvC,sBAAsBtC,KAAK,CAACiC,MAAN,CAAaC,UAAb,CAAwBK,SAAU;AACxD,iBAAiBvC,KAAK,CAACiC,MAAN,CAAaO,IAAb,CAAkBD,SAAU;AAC7C,qBAAqBvC,KAAK,CAACyC,UAAN,CAAiBC,SAAjB,CAA2BC,QAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB3C,KAAK,CAACiC,MAAN,CAAaO,IAAb,CAAkBL,OAAQ;AAC3C,uBAAuBnC,KAAK,CAACyC,UAAN,CAAiBG,gBAAiB;AACzD,sBAAsB5C,KAAK,CAACiC,MAAN,CAAaC,UAAb,CAAwBC,OAAQ;AACtD;AACA,KAhCS;IAiCLV,yBAAyB,EAAE3C,GAAI;AACnC;AACA,mBAAmBkB,KAAK,CAACyC,UAAN,CAAiBC,SAAjB,CAA2BC,QAAS;AACvD;AACA,iBAAiB3C,KAAK,CAACsC,OAAN,CAAc,CAAd,CAAiB;AAClC;AACA;AACA,KAxCS;IAyCLf,sBAAsB,EAAEzC,GAAI;AAChC;AACA;AACA,uBAAuBkB,KAAK,CAAC6B,KAAN,CAAYC,YAAZ,EAA2B,IAAG9B,KAAK,CAAC6B,KAAN,CAAYC,YAAZ,EAA2B;AAChF;EA7CS,CAAP;AA+CD,CAhD8B,CAA/B"},"metadata":{},"sourceType":"module"}