{"ast":null,"code":"var _Icon;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, getTheme, Button, Icon, Input } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class StringArrayEditor extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showAdd: false\n    });\n\n    _defineProperty(this, \"onRemoveString\", index => {\n      const {\n        value,\n        onChange\n      } = this.props;\n      const copy = [...value];\n      copy.splice(index, 1);\n      onChange(copy);\n    });\n\n    _defineProperty(this, \"onValueChange\", (e, idx) => {\n      const evt = e;\n\n      if (e.hasOwnProperty('key')) {\n        if (evt.key !== 'Enter') {\n          return;\n        }\n      }\n\n      const {\n        value,\n        onChange\n      } = this.props; // Form event, or Enter\n\n      const v = evt.currentTarget.value.trim();\n\n      if (idx < 0) {\n        if (v) {\n          evt.currentTarget.value = ''; // reset last value\n\n          onChange([...value, v]);\n        }\n\n        this.setState({\n          showAdd: false\n        });\n        return;\n      }\n\n      if (!v) {\n        return this.onRemoveString(idx);\n      }\n\n      const copy = [...value];\n      copy[idx] = v;\n      onChange(copy);\n    });\n  }\n\n  render() {\n    var _item$settings;\n\n    const {\n      value,\n      item\n    } = this.props;\n    const {\n      showAdd\n    } = this.state;\n    const styles = getStyles(getTheme());\n    const placeholder = ((_item$settings = item.settings) === null || _item$settings === void 0 ? void 0 : _item$settings.placeholder) || 'Add text';\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [value.map((v, index) => {\n        return /*#__PURE__*/_jsx(Input, {\n          className: styles.textInput,\n          defaultValue: v || '',\n          onBlur: e => this.onValueChange(e, index),\n          onKeyDown: e => this.onValueChange(e, index),\n          suffix: /*#__PURE__*/_jsx(Icon, {\n            className: styles.trashIcon,\n            name: \"trash-alt\",\n            onClick: () => this.onRemoveString(index)\n          })\n        }, `${index}/${v}`);\n      }), showAdd ? /*#__PURE__*/_jsx(Input, {\n        autoFocus: true,\n        className: styles.textInput,\n        placeholder: placeholder,\n        defaultValue: '',\n        onBlur: e => this.onValueChange(e, -1),\n        onKeyDown: e => this.onValueChange(e, -1),\n        suffix: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n          name: \"plus-circle\"\n        }))\n      }) : /*#__PURE__*/_jsx(Button, {\n        icon: \"plus\",\n        size: \"sm\",\n        variant: \"secondary\",\n        onClick: () => this.setState({\n          showAdd: true\n        }),\n        children: placeholder\n      })]\n    });\n  }\n\n}\nconst getStyles = stylesFactory(theme => {\n  return {\n    textInput: css`\n      margin-bottom: 5px;\n      &:hover {\n        border: 1px solid ${theme.colors.formInputBorderHover};\n      }\n    `,\n    trashIcon: css`\n      color: ${theme.colors.textWeak};\n      cursor: pointer;\n\n      &:hover {\n        color: ${theme.colors.text};\n      }\n    `\n  };\n});","map":{"version":3,"names":["css","React","stylesFactory","getTheme","Button","Icon","Input","StringArrayEditor","PureComponent","showAdd","index","value","onChange","props","copy","splice","e","idx","evt","hasOwnProperty","key","v","currentTarget","trim","setState","onRemoveString","render","item","state","styles","getStyles","placeholder","settings","map","textInput","onValueChange","trashIcon","theme","colors","formInputBorderHover","textWeak","text"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/strings.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { FieldConfigEditorProps, StringFieldConfigSettings, GrafanaTheme } from '@grafana/data';\nimport { stylesFactory, getTheme, Button, Icon, Input } from '@grafana/ui';\n\ntype Props = FieldConfigEditorProps<string[], StringFieldConfigSettings>;\ninterface State {\n  showAdd: boolean;\n}\n\nexport class StringArrayEditor extends React.PureComponent<Props, State> {\n  state = {\n    showAdd: false,\n  };\n\n  onRemoveString = (index: number) => {\n    const { value, onChange } = this.props;\n    const copy = [...value];\n    copy.splice(index, 1);\n    onChange(copy);\n  };\n\n  onValueChange = (e: React.SyntheticEvent, idx: number) => {\n    const evt = e as React.KeyboardEvent<HTMLInputElement>;\n    if (e.hasOwnProperty('key')) {\n      if (evt.key !== 'Enter') {\n        return;\n      }\n    }\n    const { value, onChange } = this.props;\n\n    // Form event, or Enter\n    const v = evt.currentTarget.value.trim();\n    if (idx < 0) {\n      if (v) {\n        evt.currentTarget.value = ''; // reset last value\n        onChange([...value, v]);\n      }\n      this.setState({ showAdd: false });\n      return;\n    }\n\n    if (!v) {\n      return this.onRemoveString(idx);\n    }\n\n    const copy = [...value];\n    copy[idx] = v;\n    onChange(copy);\n  };\n\n  render() {\n    const { value, item } = this.props;\n    const { showAdd } = this.state;\n    const styles = getStyles(getTheme());\n    const placeholder = item.settings?.placeholder || 'Add text';\n    return (\n      <div>\n        {value.map((v, index) => {\n          return (\n            <Input\n              className={styles.textInput}\n              key={`${index}/${v}`}\n              defaultValue={v || ''}\n              onBlur={(e) => this.onValueChange(e, index)}\n              onKeyDown={(e) => this.onValueChange(e, index)}\n              suffix={<Icon className={styles.trashIcon} name=\"trash-alt\" onClick={() => this.onRemoveString(index)} />}\n            />\n          );\n        })}\n\n        {showAdd ? (\n          <Input\n            autoFocus\n            className={styles.textInput}\n            placeholder={placeholder}\n            defaultValue={''}\n            onBlur={(e) => this.onValueChange(e, -1)}\n            onKeyDown={(e) => this.onValueChange(e, -1)}\n            suffix={<Icon name=\"plus-circle\" />}\n          />\n        ) : (\n          <Button icon=\"plus\" size=\"sm\" variant=\"secondary\" onClick={() => this.setState({ showAdd: true })}>\n            {placeholder}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    textInput: css`\n      margin-bottom: 5px;\n      &:hover {\n        border: 1px solid ${theme.colors.formInputBorderHover};\n      }\n    `,\n    trashIcon: css`\n      color: ${theme.colors.textWeak};\n      cursor: pointer;\n\n      &:hover {\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}