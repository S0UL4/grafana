{"ast":null,"code":"var _Icon, _Icon2, _Icon3;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { SegmentInput, useStyles, InlineLabel, Icon } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst EQ_WIDTH = 3; // = 24px in inline label\n\nconst KeyValueInput = ({\n  values,\n  onChange,\n  id,\n  keyPlaceholder = 'Key',\n  valuePlaceholder = 'Value (optional)'\n}) => {\n  const styles = useStyles(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.wrapper,\n    children: values.length ? values.map((value, idx) => /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.pair,\n      children: [/*#__PURE__*/_jsx(SegmentInput, {\n        id: `${id}-key-${idx}`,\n        placeholder: keyPlaceholder,\n        value: value.key,\n        onChange: e => {\n          onChange(values.map((v, i) => {\n            if (i === idx) {\n              v.key = String(e);\n            }\n\n            return v;\n          }));\n        }\n      }), /*#__PURE__*/_jsx(InlineLabel, {\n        \"aria-label\": \"equals\",\n        className: styles.operator,\n        width: EQ_WIDTH,\n        children: \"=\"\n      }), /*#__PURE__*/_jsx(SegmentInput, {\n        id: `${id}-value-${idx}`,\n        placeholder: valuePlaceholder,\n        value: value.value,\n        onChange: e => {\n          onChange(values.map((v, i) => {\n            if (i === idx) {\n              v.value = String(e);\n            }\n\n            return v;\n          }));\n        }\n      }), /*#__PURE__*/_jsx(\"button\", {\n        onClick: () => onChange([...values.slice(0, idx), ...values.slice(idx + 1)]),\n        className: \"gf-form-label query-part\",\n        \"aria-label\": \"Remove tag\",\n        type: \"button\",\n        children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n          name: \"times\"\n        }))\n      }), idx === values.length - 1 ? /*#__PURE__*/_jsx(\"button\", {\n        onClick: () => onChange([...values, {\n          key: '',\n          value: ''\n        }]),\n        className: \"gf-form-label query-part\",\n        \"aria-label\": \"Add tag\",\n        type: \"button\",\n        children: _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n          name: \"plus\"\n        }))\n      }) : null]\n    }, idx)) : /*#__PURE__*/_jsx(\"button\", {\n      onClick: () => onChange([...values, {\n        key: '',\n        value: ''\n      }]),\n      className: \"gf-form-label query-part\",\n      \"aria-label\": \"Add tag\",\n      type: \"button\",\n      children: _Icon3 || (_Icon3 = /*#__PURE__*/_jsx(Icon, {\n        name: \"plus\"\n      }))\n    })\n  });\n};\n\nexport default KeyValueInput;\n\nconst getStyles = theme => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing.xs} 0;\n  `,\n  pair: css`\n    display: flex;\n    justify-content: start;\n    align-items: center;\n  `,\n  operator: css`\n    color: ${theme.palette.orange};\n  `\n});","map":{"version":3,"names":["css","React","SegmentInput","useStyles","InlineLabel","Icon","EQ_WIDTH","KeyValueInput","values","onChange","id","keyPlaceholder","valuePlaceholder","styles","getStyles","wrapper","length","map","value","idx","pair","key","e","v","i","String","operator","slice","theme","spacing","xs","palette","orange"],"sources":["/home/soula/grafana/public/app/core/components/TraceToLogs/KeyValueInput.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme, KeyValue } from '@grafana/data';\nimport { SegmentInput, useStyles, InlineLabel, Icon } from '@grafana/ui';\n\nconst EQ_WIDTH = 3; // = 24px in inline label\n\ninterface Props {\n  values: Array<KeyValue<string>>;\n  onChange: (values: Array<KeyValue<string>>) => void;\n  id?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n}\n\nconst KeyValueInput = ({\n  values,\n  onChange,\n  id,\n  keyPlaceholder = 'Key',\n  valuePlaceholder = 'Value (optional)',\n}: Props) => {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      {values.length ? (\n        values.map((value, idx) => (\n          <div className={styles.pair} key={idx}>\n            <SegmentInput\n              id={`${id}-key-${idx}`}\n              placeholder={keyPlaceholder}\n              value={value.key}\n              onChange={(e) => {\n                onChange(\n                  values.map((v, i) => {\n                    if (i === idx) {\n                      v.key = String(e);\n                    }\n                    return v;\n                  })\n                );\n              }}\n            />\n            <InlineLabel aria-label=\"equals\" className={styles.operator} width={EQ_WIDTH}>\n              =\n            </InlineLabel>\n            <SegmentInput\n              id={`${id}-value-${idx}`}\n              placeholder={valuePlaceholder}\n              value={value.value}\n              onChange={(e) => {\n                onChange(\n                  values.map((v, i) => {\n                    if (i === idx) {\n                      v.value = String(e);\n                    }\n                    return v;\n                  })\n                );\n              }}\n            />\n            <button\n              onClick={() => onChange([...values.slice(0, idx), ...values.slice(idx + 1)])}\n              className=\"gf-form-label query-part\"\n              aria-label=\"Remove tag\"\n              type=\"button\"\n            >\n              <Icon name=\"times\" />\n            </button>\n            {idx === values.length - 1 ? (\n              <button\n                onClick={() => onChange([...values, { key: '', value: '' }])}\n                className=\"gf-form-label query-part\"\n                aria-label=\"Add tag\"\n                type=\"button\"\n              >\n                <Icon name=\"plus\" />\n              </button>\n            ) : null}\n          </div>\n        ))\n      ) : (\n        <button\n          onClick={() => onChange([...values, { key: '', value: '' }])}\n          className=\"gf-form-label query-part\"\n          aria-label=\"Add tag\"\n          type=\"button\"\n        >\n          <Icon name=\"plus\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default KeyValueInput;\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing.xs} 0;\n  `,\n  pair: css`\n    display: flex;\n    justify-content: start;\n    align-items: center;\n  `,\n  operator: css`\n    color: ${theme.palette.orange};\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}