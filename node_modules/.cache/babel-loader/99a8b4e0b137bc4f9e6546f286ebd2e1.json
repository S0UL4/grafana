{"ast":null,"code":"import { sharedSingleStatPanelChangedHandler, sharedSingleStatMigrationHandler } from '@grafana/ui';\n// This is called when the panel first loads\nexport const gaugePanelMigrationHandler = panel => {\n  return sharedSingleStatMigrationHandler(panel);\n}; // This is called when the panel changes from another panel\n\nexport const gaugePanelChangedHandler = (panel, prevPluginId, prevOptions) => {\n  // This handles most config changes\n  const opts = sharedSingleStatPanelChangedHandler(panel, prevPluginId, prevOptions); // Changing from angular singlestat\n\n  if (prevPluginId === 'singlestat' && prevOptions.angular) {\n    const gauge = prevOptions.angular.gauge;\n\n    if (gauge) {\n      opts.showThresholdMarkers = gauge.thresholdMarkers;\n      opts.showThresholdLabels = gauge.thresholdLabels;\n    }\n  }\n\n  return opts;\n};","map":{"version":3,"names":["sharedSingleStatPanelChangedHandler","sharedSingleStatMigrationHandler","gaugePanelMigrationHandler","panel","gaugePanelChangedHandler","prevPluginId","prevOptions","opts","angular","gauge","showThresholdMarkers","thresholdMarkers","showThresholdLabels","thresholdLabels"],"sources":["/home/soula/grafana/public/app/plugins/panel/gauge/GaugeMigrations.ts"],"sourcesContent":["import { PanelModel } from '@grafana/data';\nimport { sharedSingleStatPanelChangedHandler, sharedSingleStatMigrationHandler } from '@grafana/ui';\n\nimport { PanelOptions } from './models.gen';\n\n// This is called when the panel first loads\nexport const gaugePanelMigrationHandler = (panel: PanelModel<PanelOptions>): Partial<PanelOptions> => {\n  return sharedSingleStatMigrationHandler(panel);\n};\n\n// This is called when the panel changes from another panel\nexport const gaugePanelChangedHandler = (\n  panel: PanelModel<Partial<PanelOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // This handles most config changes\n  const opts = sharedSingleStatPanelChangedHandler(panel, prevPluginId, prevOptions) as PanelOptions;\n\n  // Changing from angular singlestat\n  if (prevPluginId === 'singlestat' && prevOptions.angular) {\n    const gauge = prevOptions.angular.gauge;\n    if (gauge) {\n      opts.showThresholdMarkers = gauge.thresholdMarkers;\n      opts.showThresholdLabels = gauge.thresholdLabels;\n    }\n  }\n  return opts;\n};\n"],"mappings":"AACA,SAASA,mCAAT,EAA8CC,gCAA9C,QAAsF,aAAtF;AAIA;AACA,OAAO,MAAMC,0BAA0B,GAAIC,KAAD,IAA4D;EACpG,OAAOF,gCAAgC,CAACE,KAAD,CAAvC;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMC,wBAAwB,GAAG,CACtCD,KADsC,EAEtCE,YAFsC,EAGtCC,WAHsC,KAInC;EACH;EACA,MAAMC,IAAI,GAAGP,mCAAmC,CAACG,KAAD,EAAQE,YAAR,EAAsBC,WAAtB,CAAhD,CAFG,CAIH;;EACA,IAAID,YAAY,KAAK,YAAjB,IAAiCC,WAAW,CAACE,OAAjD,EAA0D;IACxD,MAAMC,KAAK,GAAGH,WAAW,CAACE,OAAZ,CAAoBC,KAAlC;;IACA,IAAIA,KAAJ,EAAW;MACTF,IAAI,CAACG,oBAAL,GAA4BD,KAAK,CAACE,gBAAlC;MACAJ,IAAI,CAACK,mBAAL,GAA2BH,KAAK,CAACI,eAAjC;IACD;EACF;;EACD,OAAON,IAAP;AACD,CAjBM"},"metadata":{},"sourceType":"module"}