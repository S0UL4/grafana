{"ast":null,"code":"import MonacoEditor, { loader as monacoEditorLoader, useMonaco } from '@monaco-editor/react';\nimport React, { useEffect } from 'react';\nimport { useTheme2 } from '../../themes';\nimport defineThemes from './theme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet initalized = false;\n\nfunction initMonaco() {\n  var _window$__grafana_pub;\n\n  if (initalized) {\n    return;\n  }\n\n  monacoEditorLoader.config({\n    paths: {\n      vs: ((_window$__grafana_pub = window.__grafana_public_path__) !== null && _window$__grafana_pub !== void 0 ? _window$__grafana_pub : 'public/') + 'lib/monaco/min/vs'\n    }\n  });\n  initalized = true;\n  monacoEditorLoader.init().then(monaco => {\n    // this call makes sure the themes exist.\n    // they will not have the correct colors,\n    // but we need them to exist since the beginning,\n    // because if we start a monaco instance with\n    // a theme that does not exist, it will not work well.\n    defineThemes(monaco);\n  });\n}\n\nexport const ReactMonacoEditor = props => {\n  const theme = useTheme2();\n  const monaco = useMonaco();\n  useEffect(() => {\n    // monaco can be null at the beginning, because it is loaded in asynchronously\n    if (monaco !== null) {\n      defineThemes(monaco, theme);\n    }\n  }, [monaco, theme]);\n  initMonaco();\n  const monacoTheme = theme.isDark ? 'grafana-dark' : 'grafana-light';\n  return /*#__PURE__*/_jsx(MonacoEditor, Object.assign({\n    theme: monacoTheme\n  }, props));\n};","map":{"version":3,"names":["MonacoEditor","loader","monacoEditorLoader","useMonaco","React","useEffect","useTheme2","defineThemes","initalized","initMonaco","config","paths","vs","window","__grafana_public_path__","init","then","monaco","ReactMonacoEditor","props","theme","monacoTheme","isDark"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Monaco/ReactMonacoEditor.tsx"],"sourcesContent":["import MonacoEditor, { loader as monacoEditorLoader, useMonaco } from '@monaco-editor/react';\nimport React, { useEffect } from 'react';\n\nimport { useTheme2 } from '../../themes';\n\nimport defineThemes from './theme';\nimport type { ReactMonacoEditorProps } from './types';\n\nlet initalized = false;\nfunction initMonaco() {\n  if (initalized) {\n    return;\n  }\n\n  monacoEditorLoader.config({\n    paths: {\n      vs: (window.__grafana_public_path__ ?? 'public/') + 'lib/monaco/min/vs',\n    },\n  });\n  initalized = true;\n  monacoEditorLoader.init().then((monaco) => {\n    // this call makes sure the themes exist.\n    // they will not have the correct colors,\n    // but we need them to exist since the beginning,\n    // because if we start a monaco instance with\n    // a theme that does not exist, it will not work well.\n    defineThemes(monaco);\n  });\n}\n\nexport const ReactMonacoEditor = (props: ReactMonacoEditorProps) => {\n  const theme = useTheme2();\n  const monaco = useMonaco();\n\n  useEffect(() => {\n    // monaco can be null at the beginning, because it is loaded in asynchronously\n    if (monaco !== null) {\n      defineThemes(monaco, theme);\n    }\n  }, [monaco, theme]);\n\n  initMonaco();\n\n  const monacoTheme = theme.isDark ? 'grafana-dark' : 'grafana-light';\n\n  return <MonacoEditor theme={monacoTheme} {...props} />;\n};\n"],"mappings":"AAAA,OAAOA,YAAP,IAAuBC,MAAM,IAAIC,kBAAjC,EAAqDC,SAArD,QAAsE,sBAAtE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,YAAP,MAAyB,SAAzB;;AAGA,IAAIC,UAAU,GAAG,KAAjB;;AACA,SAASC,UAAT,GAAsB;EAAA;;EACpB,IAAID,UAAJ,EAAgB;IACd;EACD;;EAEDN,kBAAkB,CAACQ,MAAnB,CAA0B;IACxBC,KAAK,EAAE;MACLC,EAAE,EAAE,0BAACC,MAAM,CAACC,uBAAR,yEAAmC,SAAnC,IAAgD;IAD/C;EADiB,CAA1B;EAKAN,UAAU,GAAG,IAAb;EACAN,kBAAkB,CAACa,IAAnB,GAA0BC,IAA1B,CAAgCC,MAAD,IAAY;IACzC;IACA;IACA;IACA;IACA;IACAV,YAAY,CAACU,MAAD,CAAZ;EACD,CAPD;AAQD;;AAED,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAmC;EAClE,MAAMC,KAAK,GAAGd,SAAS,EAAvB;EACA,MAAMW,MAAM,GAAGd,SAAS,EAAxB;EAEAE,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,MAAM,KAAK,IAAf,EAAqB;MACnBV,YAAY,CAACU,MAAD,EAASG,KAAT,CAAZ;IACD;EACF,CALQ,EAKN,CAACH,MAAD,EAASG,KAAT,CALM,CAAT;EAOAX,UAAU;EAEV,MAAMY,WAAW,GAAGD,KAAK,CAACE,MAAN,GAAe,cAAf,GAAgC,eAApD;EAEA,oBAAO,KAAC,YAAD;IAAc,KAAK,EAAED;EAArB,GAAsCF,KAAtC,EAAP;AACD,CAhBM"},"metadata":{},"sourceType":"module"}