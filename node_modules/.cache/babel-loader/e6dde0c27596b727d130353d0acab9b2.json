{"ast":null,"code":"var _div, _PageLoader;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Libraries\nimport React, { Component } from 'react';\nimport { createHtmlPortalNode, InPortal, OutPortal } from 'react-reverse-portal';\nimport { AppEvents, PluginType } from '@grafana/data';\nimport { getNotFoundNav, getWarningNav, getExceptionNav } from 'app/angular/services/nav_model_srv';\nimport Page from 'app/core/components/Page/Page';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\nimport { appEvents } from 'app/core/core';\nimport { getPluginSettings } from '../pluginSettings';\nimport { importAppPlugin } from '../plugin_loader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function getAppPluginPageError(meta) {\n  if (!meta) {\n    return 'Unknown Plugin';\n  }\n\n  if (meta.type !== PluginType.app) {\n    return 'Plugin must be an app';\n  }\n\n  if (!meta.enabled) {\n    return 'Application Not Enabled';\n  }\n\n  return null;\n}\n\nclass AppRootPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onNavChanged\", nav => {\n      this.setState({\n        nav\n      });\n    });\n\n    this.state = {\n      loading: true,\n      portalNode: createHtmlPortalNode()\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.location.pathname.startsWith('/a/');\n  }\n\n  async loadPluginSettings() {\n    const {\n      params\n    } = this.props.match;\n\n    try {\n      const app = await getPluginSettings(params.pluginId).then(info => {\n        const error = getAppPluginPageError(info);\n\n        if (error) {\n          appEvents.emit(AppEvents.alertError, [error]);\n          this.setState({\n            nav: getWarningNav(error)\n          });\n          return null;\n        }\n\n        return importAppPlugin(info);\n      });\n      this.setState({\n        plugin: app,\n        loading: false,\n        nav: undefined\n      });\n    } catch (err) {\n      this.setState({\n        plugin: null,\n        loading: false,\n        nav: process.env.NODE_ENV === 'development' ? getExceptionNav(err) : getNotFoundNav()\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.loadPluginSettings();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      params\n    } = this.props.match;\n\n    if (prevProps.match.params.pluginId !== params.pluginId) {\n      this.setState({\n        loading: true\n      });\n      this.loadPluginSettings();\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      plugin,\n      nav,\n      portalNode\n    } = this.state;\n\n    if (plugin && !plugin.root) {\n      // TODO? redirect to plugin page?\n      return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        children: \"No Root App\"\n      }));\n    }\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(InPortal, {\n        node: portalNode,\n        children: plugin && plugin.root && /*#__PURE__*/_jsx(plugin.root, {\n          meta: plugin.meta,\n          basename: this.props.match.url,\n          onNavChanged: this.onNavChanged,\n          query: this.props.queryParams,\n          path: this.props.location.pathname\n        })\n      }), nav ? /*#__PURE__*/_jsx(Page, {\n        navModel: nav,\n        children: /*#__PURE__*/_jsx(Page.Contents, {\n          isLoading: loading,\n          children: /*#__PURE__*/_jsx(OutPortal, {\n            node: portalNode\n          })\n        })\n      }) : /*#__PURE__*/_jsxs(Page, {\n        children: [/*#__PURE__*/_jsx(OutPortal, {\n          node: portalNode\n        }), loading && (_PageLoader || (_PageLoader = /*#__PURE__*/_jsx(PageLoader, {})))]\n      })]\n    });\n  }\n\n}\n\nexport default AppRootPage;","map":{"version":3,"names":["React","Component","createHtmlPortalNode","InPortal","OutPortal","AppEvents","PluginType","getNotFoundNav","getWarningNav","getExceptionNav","Page","PageLoader","appEvents","getPluginSettings","importAppPlugin","getAppPluginPageError","meta","type","app","enabled","AppRootPage","constructor","props","nav","setState","state","loading","portalNode","shouldComponentUpdate","nextProps","location","pathname","startsWith","loadPluginSettings","params","match","pluginId","then","info","error","emit","alertError","plugin","undefined","err","process","env","NODE_ENV","componentDidMount","componentDidUpdate","prevProps","render","root","url","onNavChanged","queryParams"],"sources":["/home/soula/grafana/public/app/features/plugins/components/AppRootPage.tsx"],"sourcesContent":["// Libraries\nimport React, { Component } from 'react';\nimport { createHtmlPortalNode, InPortal, OutPortal, HtmlPortalNode } from 'react-reverse-portal';\n\nimport { AppEvents, AppPlugin, AppPluginMeta, KeyValue, NavModel, PluginType } from '@grafana/data';\nimport { getNotFoundNav, getWarningNav, getExceptionNav } from 'app/angular/services/nav_model_srv';\nimport Page from 'app/core/components/Page/Page';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\nimport { appEvents } from 'app/core/core';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\n\nimport { getPluginSettings } from '../pluginSettings';\nimport { importAppPlugin } from '../plugin_loader';\ninterface RouteParams {\n  pluginId: string;\n}\n\ninterface Props extends GrafanaRouteComponentProps<RouteParams> {}\n\ninterface State {\n  loading: boolean;\n  portalNode: HtmlPortalNode;\n  plugin?: AppPlugin | null;\n  nav?: NavModel;\n}\n\nexport function getAppPluginPageError(meta: AppPluginMeta) {\n  if (!meta) {\n    return 'Unknown Plugin';\n  }\n  if (meta.type !== PluginType.app) {\n    return 'Plugin must be an app';\n  }\n  if (!meta.enabled) {\n    return 'Application Not Enabled';\n  }\n  return null;\n}\n\nclass AppRootPage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      portalNode: createHtmlPortalNode(),\n    };\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    return nextProps.location.pathname.startsWith('/a/');\n  }\n\n  async loadPluginSettings() {\n    const { params } = this.props.match;\n    try {\n      const app = await getPluginSettings(params.pluginId).then((info) => {\n        const error = getAppPluginPageError(info);\n        if (error) {\n          appEvents.emit(AppEvents.alertError, [error]);\n          this.setState({ nav: getWarningNav(error) });\n          return null;\n        }\n        return importAppPlugin(info);\n      });\n      this.setState({ plugin: app, loading: false, nav: undefined });\n    } catch (err) {\n      this.setState({\n        plugin: null,\n        loading: false,\n        nav: process.env.NODE_ENV === 'development' ? getExceptionNav(err) : getNotFoundNav(),\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.loadPluginSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { params } = this.props.match;\n\n    if (prevProps.match.params.pluginId !== params.pluginId) {\n      this.setState({\n        loading: true,\n      });\n      this.loadPluginSettings();\n    }\n  }\n\n  onNavChanged = (nav: NavModel) => {\n    this.setState({ nav });\n  };\n\n  render() {\n    const { loading, plugin, nav, portalNode } = this.state;\n\n    if (plugin && !plugin.root) {\n      // TODO? redirect to plugin page?\n      return <div>No Root App</div>;\n    }\n\n    return (\n      <>\n        <InPortal node={portalNode}>\n          {plugin && plugin.root && (\n            <plugin.root\n              meta={plugin.meta}\n              basename={this.props.match.url}\n              onNavChanged={this.onNavChanged}\n              query={this.props.queryParams as KeyValue}\n              path={this.props.location.pathname}\n            />\n          )}\n        </InPortal>\n        {nav ? (\n          <Page navModel={nav}>\n            <Page.Contents isLoading={loading}>\n              <OutPortal node={portalNode} />\n            </Page.Contents>\n          </Page>\n        ) : (\n          <Page>\n            <OutPortal node={portalNode} />\n            {loading && <PageLoader />}\n          </Page>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AppRootPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}