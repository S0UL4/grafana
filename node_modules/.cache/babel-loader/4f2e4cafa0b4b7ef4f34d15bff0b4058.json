{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2 } from '../../themes';\nimport { SeriesIcon } from '../VizLegend/SeriesIcon';\n/**\n * @public\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst getSeriesTableRowStyles = theme => {\n  return {\n    icon: css`\n      margin-right: ${theme.spacing(1)};\n      vertical-align: middle;\n    `,\n    seriesTable: css`\n      display: table;\n    `,\n    seriesTableRow: css`\n      display: table-row;\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    seriesTableCell: css`\n      display: table-cell;\n    `,\n    label: css`\n      word-break: break-all;\n    `,\n    value: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    activeSeries: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      color: ${theme.colors.text.maxContrast};\n    `,\n    timestamp: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `\n  };\n};\n/**\n * @public\n */\n\n\nexport const SeriesTableRow = ({\n  color,\n  label,\n  value,\n  isActive\n}) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.seriesTableRow, isActive && styles.activeSeries),\n    children: [color && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.seriesTableCell,\n      children: /*#__PURE__*/_jsx(SeriesIcon, {\n        color: color,\n        className: styles.icon\n      })\n    }), label && /*#__PURE__*/_jsx(\"div\", {\n      className: cx(styles.seriesTableCell, styles.label),\n      children: label\n    }), value && /*#__PURE__*/_jsx(\"div\", {\n      className: cx(styles.seriesTableCell, styles.value),\n      children: value\n    })]\n  });\n};\n/**\n * @public\n */\n\n/**\n * @public\n */\nexport const SeriesTable = ({\n  timestamp,\n  series\n}) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [timestamp && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.timestamp,\n      \"aria-label\": \"Timestamp\",\n      children: timestamp\n    }), series.map((s, i) => {\n      return /*#__PURE__*/_jsx(SeriesTableRow, {\n        isActive: s.isActive,\n        label: s.label,\n        color: s.color,\n        value: s.value\n      }, `${s.label}-${i}`);\n    })]\n  });\n};","map":{"version":3,"names":["css","cx","React","useStyles2","SeriesIcon","getSeriesTableRowStyles","theme","icon","spacing","seriesTable","seriesTableRow","typography","bodySmall","fontSize","seriesTableCell","label","value","activeSeries","fontWeightBold","colors","text","maxContrast","timestamp","SeriesTableRow","color","isActive","styles","SeriesTable","series","map","s","i"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/VizTooltip/SeriesTable.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, GraphSeriesValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { SeriesIcon } from '../VizLegend/SeriesIcon';\n\n/**\n * @public\n */\nexport interface SeriesTableRowProps {\n  color?: string;\n  label?: React.ReactNode;\n  value?: string | GraphSeriesValue;\n  isActive?: boolean;\n}\n\nconst getSeriesTableRowStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: css`\n      margin-right: ${theme.spacing(1)};\n      vertical-align: middle;\n    `,\n    seriesTable: css`\n      display: table;\n    `,\n    seriesTableRow: css`\n      display: table-row;\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    seriesTableCell: css`\n      display: table-cell;\n    `,\n    label: css`\n      word-break: break-all;\n    `,\n    value: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    activeSeries: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      color: ${theme.colors.text.maxContrast};\n    `,\n    timestamp: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n  };\n};\n\n/**\n * @public\n */\nexport const SeriesTableRow: React.FC<SeriesTableRowProps> = ({ color, label, value, isActive }) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n\n  return (\n    <div className={cx(styles.seriesTableRow, isActive && styles.activeSeries)}>\n      {color && (\n        <div className={styles.seriesTableCell}>\n          <SeriesIcon color={color} className={styles.icon} />\n        </div>\n      )}\n      {label && <div className={cx(styles.seriesTableCell, styles.label)}>{label}</div>}\n      {value && <div className={cx(styles.seriesTableCell, styles.value)}>{value}</div>}\n    </div>\n  );\n};\n\n/**\n * @public\n */\nexport interface SeriesTableProps {\n  timestamp?: string | GraphSeriesValue;\n  series: SeriesTableRowProps[];\n}\n\n/**\n * @public\n */\nexport const SeriesTable: React.FC<SeriesTableProps> = ({ timestamp, series }) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n\n  return (\n    <>\n      {timestamp && (\n        <div className={styles.timestamp} aria-label=\"Timestamp\">\n          {timestamp}\n        </div>\n      )}\n      {series.map((s, i) => {\n        return (\n          <SeriesTableRow\n            isActive={s.isActive}\n            label={s.label}\n            color={s.color}\n            value={s.value}\n            key={`${s.label}-${i}`}\n          />\n        );\n      })}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}