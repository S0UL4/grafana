{"ast":null,"code":"import { useLocation } from 'react-router-dom';\nimport { locationService } from '@grafana/runtime';\n\n/** @internal experimental */\nexport function useUrlParams() {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const updateUrlParams = (params, replace) => {\n    // Should find a way to use history directly here\n    locationService.partial(params, replace);\n  };\n\n  return [params, updateUrlParams];\n}","map":{"version":3,"names":["useLocation","locationService","useUrlParams","location","params","URLSearchParams","search","updateUrlParams","replace","partial"],"sources":["/home/soula/grafana/public/app/core/navigation/hooks.ts"],"sourcesContent":["import { useLocation } from 'react-router-dom';\n\nimport { locationService } from '@grafana/runtime';\n\nexport type UseUrlParamsResult = [URLSearchParams, (params: Record<string, any>, replace?: boolean) => void];\n\n/** @internal experimental */\nexport function useUrlParams(): UseUrlParamsResult {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const updateUrlParams = (params: Record<string, any>, replace?: boolean) => {\n    // Should find a way to use history directly here\n    locationService.partial(params, replace);\n  };\n\n  return [params, updateUrlParams];\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,eAAT,QAAgC,kBAAhC;;AAIA;AACA,OAAO,SAASC,YAAT,GAA4C;EACjD,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAf;;EAEA,MAAMC,eAAe,GAAG,CAACH,MAAD,EAA8BI,OAA9B,KAAoD;IAC1E;IACAP,eAAe,CAACQ,OAAhB,CAAwBL,MAAxB,EAAgCI,OAAhC;EACD,CAHD;;EAKA,OAAO,CAACJ,MAAD,EAASG,eAAT,CAAP;AACD"},"metadata":{},"sourceType":"module"}