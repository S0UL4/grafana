{"ast":null,"code":"import { defaultPipelineVariable, generatePipelineVariableName } from '../utils';\nimport { addPipelineVariable, changePipelineVariableMetric, removePipelineVariable, renamePipelineVariable } from './actions';\nexport const reducer = (state = [], action) => {\n  if (addPipelineVariable.match(action)) {\n    return [...state, defaultPipelineVariable(generatePipelineVariableName(state))];\n  }\n\n  if (removePipelineVariable.match(action)) {\n    return state.slice(0, action.payload).concat(state.slice(action.payload + 1));\n  }\n\n  if (renamePipelineVariable.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return Object.assign({}, pipelineVariable, {\n        name: action.payload.newName\n      });\n    });\n  }\n\n  if (changePipelineVariableMetric.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return Object.assign({}, pipelineVariable, {\n        pipelineAgg: action.payload.newMetric\n      });\n    });\n  }\n\n  return state;\n};","map":{"version":3,"names":["defaultPipelineVariable","generatePipelineVariableName","addPipelineVariable","changePipelineVariableMetric","removePipelineVariable","renamePipelineVariable","reducer","state","action","match","slice","payload","concat","map","pipelineVariable","index","name","newName","pipelineAgg","newMetric"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/state/reducer.ts"],"sourcesContent":["import { Action } from '@reduxjs/toolkit';\n\nimport { PipelineVariable } from '../../../aggregations';\nimport { defaultPipelineVariable, generatePipelineVariableName } from '../utils';\n\nimport {\n  addPipelineVariable,\n  changePipelineVariableMetric,\n  removePipelineVariable,\n  renamePipelineVariable,\n} from './actions';\n\nexport const reducer = (state: PipelineVariable[] = [], action: Action) => {\n  if (addPipelineVariable.match(action)) {\n    return [...state, defaultPipelineVariable(generatePipelineVariableName(state))];\n  }\n\n  if (removePipelineVariable.match(action)) {\n    return state.slice(0, action.payload).concat(state.slice(action.payload + 1));\n  }\n\n  if (renamePipelineVariable.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return {\n        ...pipelineVariable,\n        name: action.payload.newName,\n      };\n    });\n  }\n\n  if (changePipelineVariableMetric.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return {\n        ...pipelineVariable,\n        pipelineAgg: action.payload.newMetric,\n      };\n    });\n  }\n\n  return state;\n};\n"],"mappings":"AAGA,SAASA,uBAAT,EAAkCC,4BAAlC,QAAsE,UAAtE;AAEA,SACEC,mBADF,EAEEC,4BAFF,EAGEC,sBAHF,EAIEC,sBAJF,QAKO,WALP;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAyB,GAAG,EAA7B,EAAiCC,MAAjC,KAAoD;EACzE,IAAIN,mBAAmB,CAACO,KAApB,CAA0BD,MAA1B,CAAJ,EAAuC;IACrC,OAAO,CAAC,GAAGD,KAAJ,EAAWP,uBAAuB,CAACC,4BAA4B,CAACM,KAAD,CAA7B,CAAlC,CAAP;EACD;;EAED,IAAIH,sBAAsB,CAACK,KAAvB,CAA6BD,MAA7B,CAAJ,EAA0C;IACxC,OAAOD,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeF,MAAM,CAACG,OAAtB,EAA+BC,MAA/B,CAAsCL,KAAK,CAACG,KAAN,CAAYF,MAAM,CAACG,OAAP,GAAiB,CAA7B,CAAtC,CAAP;EACD;;EAED,IAAIN,sBAAsB,CAACI,KAAvB,CAA6BD,MAA7B,CAAJ,EAA0C;IACxC,OAAOD,KAAK,CAACM,GAAN,CAAU,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;MAC5C,IAAIA,KAAK,KAAKP,MAAM,CAACG,OAAP,CAAeI,KAA7B,EAAoC;QAClC,OAAOD,gBAAP;MACD;;MAED,yBACKA,gBADL;QAEEE,IAAI,EAAER,MAAM,CAACG,OAAP,CAAeM;MAFvB;IAID,CATM,CAAP;EAUD;;EAED,IAAId,4BAA4B,CAACM,KAA7B,CAAmCD,MAAnC,CAAJ,EAAgD;IAC9C,OAAOD,KAAK,CAACM,GAAN,CAAU,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;MAC5C,IAAIA,KAAK,KAAKP,MAAM,CAACG,OAAP,CAAeI,KAA7B,EAAoC;QAClC,OAAOD,gBAAP;MACD;;MAED,yBACKA,gBADL;QAEEI,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeQ;MAF9B;IAID,CATM,CAAP;EAUD;;EAED,OAAOZ,KAAP;AACD,CApCM"},"metadata":{},"sourceType":"module"}