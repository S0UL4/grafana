{"ast":null,"code":"import { i18n } from '@lingui/core';\nimport { I18nProvider as LinguiI18nProvider } from '@lingui/react';\nimport React, { useEffect } from 'react';\nimport config from 'app/core/config';\nimport { messages } from '../../locales/en/messages';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet i18nInstance;\nexport async function getI18n(locale = 'en') {\n  if (i18nInstance) {\n    return i18nInstance;\n  } // Dynamically load the messages for the user's locale\n\n\n  const imp = config.featureToggles.internationalization && (await import(`../../locales/${locale}/messages`).catch(err => {\n    // TODO: Properly return an error if we can't find the messages for a locale\n    return err;\n  }));\n  i18n.load(locale, (imp === null || imp === void 0 ? void 0 : imp.messages) || messages); // Browser support for Intl.PluralRules is good and covers what we support in .browserlistrc,\n  // but because this could potentially be in a the critical path of loading the frontend lets\n  // be extra careful\n  // If this isnt loaded, Lingui will log a warning and plurals will not be translated correctly.\n\n  const supportsPluralRules = 'Intl' in window && 'PluralRules' in Intl;\n\n  if (supportsPluralRules) {\n    const pluralsOrdinal = new Intl.PluralRules(locale, {\n      type: 'ordinal'\n    });\n    const pluralsCardinal = new Intl.PluralRules(locale, {\n      type: 'cardinal'\n    });\n    i18n.loadLocaleData(locale, {\n      plurals(count, ordinal) {\n        return (ordinal ? pluralsOrdinal : pluralsCardinal).select(count);\n      }\n\n    });\n  }\n\n  i18n.activate(locale);\n  i18nInstance = i18n;\n  return i18nInstance;\n}\nexport function I18nProvider({\n  children\n}) {\n  useEffect(() => {\n    let loc;\n\n    if (config.featureToggles.internationalization) {\n      // TODO: Use locale preference instead of weekStart\n      switch (config.bootData.user.weekStart) {\n        case 'saturday':\n          loc = 'es';\n          break;\n\n        case 'sunday':\n          loc = 'fr';\n          break;\n\n        default:\n          loc = 'en';\n          break;\n      }\n    }\n\n    getI18n(loc);\n  }, []);\n  return /*#__PURE__*/_jsx(LinguiI18nProvider, {\n    i18n: i18n,\n    forceRenderOnLocaleChange: false,\n    children: children\n  });\n}","map":{"version":3,"names":["i18n","I18nProvider","LinguiI18nProvider","React","useEffect","config","messages","i18nInstance","getI18n","locale","imp","featureToggles","internationalization","catch","err","load","supportsPluralRules","window","Intl","pluralsOrdinal","PluralRules","type","pluralsCardinal","loadLocaleData","plurals","count","ordinal","select","activate","children","loc","bootData","user","weekStart"],"sources":["/home/soula/grafana/public/app/core/localisation.tsx"],"sourcesContent":["import { I18n, i18n } from '@lingui/core';\nimport { I18nProvider as LinguiI18nProvider } from '@lingui/react';\nimport React, { useEffect } from 'react';\n\nimport config from 'app/core/config';\n\nimport { messages } from '../../locales/en/messages';\n\nlet i18nInstance: I18n;\n\nexport async function getI18n(locale = 'en') {\n  if (i18nInstance) {\n    return i18nInstance;\n  }\n  // Dynamically load the messages for the user's locale\n  const imp =\n    config.featureToggles.internationalization &&\n    (await import(`../../locales/${locale}/messages`).catch((err) => {\n      // TODO: Properly return an error if we can't find the messages for a locale\n      return err;\n    }));\n  i18n.load(locale, imp?.messages || messages);\n\n  // Browser support for Intl.PluralRules is good and covers what we support in .browserlistrc,\n  // but because this could potentially be in a the critical path of loading the frontend lets\n  // be extra careful\n  // If this isnt loaded, Lingui will log a warning and plurals will not be translated correctly.\n  const supportsPluralRules = 'Intl' in window && 'PluralRules' in Intl;\n  if (supportsPluralRules) {\n    const pluralsOrdinal = new Intl.PluralRules(locale, { type: 'ordinal' });\n    const pluralsCardinal = new Intl.PluralRules(locale, { type: 'cardinal' });\n    i18n.loadLocaleData(locale, {\n      plurals(count: number, ordinal: boolean) {\n        return (ordinal ? pluralsOrdinal : pluralsCardinal).select(count);\n      },\n    });\n  }\n\n  i18n.activate(locale);\n  i18nInstance = i18n;\n\n  return i18nInstance;\n}\n\ninterface I18nProviderProps {\n  children: React.ReactNode;\n}\nexport function I18nProvider({ children }: I18nProviderProps) {\n  useEffect(() => {\n    let loc;\n    if (config.featureToggles.internationalization) {\n      // TODO: Use locale preference instead of weekStart\n      switch (config.bootData.user.weekStart) {\n        case 'saturday':\n          loc = 'es';\n          break;\n        case 'sunday':\n          loc = 'fr';\n          break;\n        default:\n          loc = 'en';\n          break;\n      }\n    }\n\n    getI18n(loc);\n  }, []);\n\n  return (\n    <LinguiI18nProvider i18n={i18n} forceRenderOnLocaleChange={false}>\n      {children}\n    </LinguiI18nProvider>\n  );\n}\n"],"mappings":"AAAA,SAAeA,IAAf,QAA2B,cAA3B;AACA,SAASC,YAAY,IAAIC,kBAAzB,QAAmD,eAAnD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,IAAIC,YAAJ;AAEA,OAAO,eAAeC,OAAf,CAAuBC,MAAM,GAAG,IAAhC,EAAsC;EAC3C,IAAIF,YAAJ,EAAkB;IAChB,OAAOA,YAAP;EACD,CAH0C,CAI3C;;;EACA,MAAMG,GAAG,GACPL,MAAM,CAACM,cAAP,CAAsBC,oBAAtB,KACC,MAAM,OAAQ,iBAAgBH,MAAO,WAA/B,EAA2CI,KAA3C,CAAkDC,GAAD,IAAS;IAC/D;IACA,OAAOA,GAAP;EACD,CAHM,CADP,CADF;EAMAd,IAAI,CAACe,IAAL,CAAUN,MAAV,EAAkB,CAAAC,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEJ,QAAL,KAAiBA,QAAnC,EAX2C,CAa3C;EACA;EACA;EACA;;EACA,MAAMU,mBAAmB,GAAG,UAAUC,MAAV,IAAoB,iBAAiBC,IAAjE;;EACA,IAAIF,mBAAJ,EAAyB;IACvB,MAAMG,cAAc,GAAG,IAAID,IAAI,CAACE,WAAT,CAAqBX,MAArB,EAA6B;MAAEY,IAAI,EAAE;IAAR,CAA7B,CAAvB;IACA,MAAMC,eAAe,GAAG,IAAIJ,IAAI,CAACE,WAAT,CAAqBX,MAArB,EAA6B;MAAEY,IAAI,EAAE;IAAR,CAA7B,CAAxB;IACArB,IAAI,CAACuB,cAAL,CAAoBd,MAApB,EAA4B;MAC1Be,OAAO,CAACC,KAAD,EAAgBC,OAAhB,EAAkC;QACvC,OAAO,CAACA,OAAO,GAAGP,cAAH,GAAoBG,eAA5B,EAA6CK,MAA7C,CAAoDF,KAApD,CAAP;MACD;;IAHyB,CAA5B;EAKD;;EAEDzB,IAAI,CAAC4B,QAAL,CAAcnB,MAAd;EACAF,YAAY,GAAGP,IAAf;EAEA,OAAOO,YAAP;AACD;AAKD,OAAO,SAASN,YAAT,CAAsB;EAAE4B;AAAF,CAAtB,EAAuD;EAC5DzB,SAAS,CAAC,MAAM;IACd,IAAI0B,GAAJ;;IACA,IAAIzB,MAAM,CAACM,cAAP,CAAsBC,oBAA1B,EAAgD;MAC9C;MACA,QAAQP,MAAM,CAAC0B,QAAP,CAAgBC,IAAhB,CAAqBC,SAA7B;QACE,KAAK,UAAL;UACEH,GAAG,GAAG,IAAN;UACA;;QACF,KAAK,QAAL;UACEA,GAAG,GAAG,IAAN;UACA;;QACF;UACEA,GAAG,GAAG,IAAN;UACA;MATJ;IAWD;;IAEDtB,OAAO,CAACsB,GAAD,CAAP;EACD,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,oBACE,KAAC,kBAAD;IAAoB,IAAI,EAAE9B,IAA1B;IAAgC,yBAAyB,EAAE,KAA3D;IAAA,UACG6B;EADH,EADF;AAKD"},"metadata":{},"sourceType":"module"}