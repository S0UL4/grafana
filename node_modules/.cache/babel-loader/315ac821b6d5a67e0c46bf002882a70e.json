{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/public/app/types/appEvent.ts"],"sourcesContent":["import { IAngularEvent } from 'angular';\n\nimport { AppEvent } from '@grafana/data';\n\nexport interface AppEventEmitter {\n  /**\n   * DEPRECATED.\n   */\n  appEvent(name: string, data?: any): void;\n\n  appEvent<T extends undefined>(event: AppEvent<T>): void;\n  // This overload allows for omitting the appEvent payload if the payload's type only contains optional properties\n  appEvent<T extends (U extends any ? Partial<T> : unknown) extends T ? Partial<T> : never, U = any>(\n    event: AppEvent<T>\n  ): void;\n  appEvent<T>(event: AppEvent<T>, payload: T): void;\n}\n\nexport interface AppEventConsumer {\n  onAppEvent(name: string, callback: (event: IAngularEvent, ...args: any[]) => void, localScope?: any): void;\n  onAppEvent<T>(event: AppEvent<T>, callback: (event: IAngularEvent, ...args: any[]) => void, localScope?: any): void;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}