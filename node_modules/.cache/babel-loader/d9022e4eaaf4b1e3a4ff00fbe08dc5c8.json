{"ast":null,"code":"import React from 'react';\nimport { HorizontalGroup, Input, RadioButtonGroup, ScaleDistribution } from '@grafana/ui';\nimport { HeatmapCalculationMode } from '../models.gen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst modeOptions = [{\n  label: 'Size',\n  value: HeatmapCalculationMode.Size,\n  description: 'Split the buckets based on size'\n}, {\n  label: 'Count',\n  value: HeatmapCalculationMode.Count,\n  description: 'Split the buckets based on count'\n}];\nconst logModeOptions = [{\n  label: 'Split',\n  value: HeatmapCalculationMode.Size,\n  description: 'Split the buckets based on size'\n}];\nexport const AxisEditor = ({\n  value,\n  onChange,\n  item\n}) => {\n  var _value$scale, _value$value;\n\n  return /*#__PURE__*/_jsxs(HorizontalGroup, {\n    children: [/*#__PURE__*/_jsx(RadioButtonGroup, {\n      value: (value === null || value === void 0 ? void 0 : value.mode) || HeatmapCalculationMode.Size,\n      options: (value === null || value === void 0 ? void 0 : (_value$scale = value.scale) === null || _value$scale === void 0 ? void 0 : _value$scale.type) === ScaleDistribution.Log ? logModeOptions : modeOptions,\n      onChange: mode => {\n        onChange(Object.assign({}, value, {\n          mode\n        }));\n      }\n    }), /*#__PURE__*/_jsx(Input, {\n      value: (_value$value = value === null || value === void 0 ? void 0 : value.value) !== null && _value$value !== void 0 ? _value$value : '',\n      placeholder: \"Auto\",\n      onChange: v => {\n        onChange(Object.assign({}, value, {\n          value: v.currentTarget.value\n        }));\n      }\n    })]\n  });\n};","map":{"version":3,"names":["React","HorizontalGroup","Input","RadioButtonGroup","ScaleDistribution","HeatmapCalculationMode","modeOptions","label","value","Size","description","Count","logModeOptions","AxisEditor","onChange","item","mode","scale","type","Log","v","currentTarget"],"sources":["/home/soula/grafana/public/app/features/transformers/calculateHeatmap/editor/AxisEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { SelectableValue, StandardEditorProps } from '@grafana/data';\nimport { HorizontalGroup, Input, RadioButtonGroup, ScaleDistribution } from '@grafana/ui';\n\nimport { HeatmapCalculationBucketConfig, HeatmapCalculationMode } from '../models.gen';\n\nconst modeOptions: Array<SelectableValue<HeatmapCalculationMode>> = [\n  {\n    label: 'Size',\n    value: HeatmapCalculationMode.Size,\n    description: 'Split the buckets based on size',\n  },\n  {\n    label: 'Count',\n    value: HeatmapCalculationMode.Count,\n    description: 'Split the buckets based on count',\n  },\n];\n\nconst logModeOptions: Array<SelectableValue<HeatmapCalculationMode>> = [\n  {\n    label: 'Split',\n    value: HeatmapCalculationMode.Size,\n    description: 'Split the buckets based on size',\n  },\n];\n\nexport const AxisEditor: React.FC<StandardEditorProps<HeatmapCalculationBucketConfig, any>> = ({\n  value,\n  onChange,\n  item,\n}) => {\n  return (\n    <HorizontalGroup>\n      <RadioButtonGroup\n        value={value?.mode || HeatmapCalculationMode.Size}\n        options={value?.scale?.type === ScaleDistribution.Log ? logModeOptions : modeOptions}\n        onChange={(mode) => {\n          onChange({\n            ...value,\n            mode,\n          });\n        }}\n      />\n      <Input\n        value={value?.value ?? ''}\n        placeholder=\"Auto\"\n        onChange={(v) => {\n          onChange({\n            ...value,\n            value: v.currentTarget.value,\n          });\n        }}\n      />\n    </HorizontalGroup>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,eAAT,EAA0BC,KAA1B,EAAiCC,gBAAjC,EAAmDC,iBAAnD,QAA4E,aAA5E;AAEA,SAAyCC,sBAAzC,QAAuE,eAAvE;;;AAEA,MAAMC,WAA2D,GAAG,CAClE;EACEC,KAAK,EAAE,MADT;EAEEC,KAAK,EAAEH,sBAAsB,CAACI,IAFhC;EAGEC,WAAW,EAAE;AAHf,CADkE,EAMlE;EACEH,KAAK,EAAE,OADT;EAEEC,KAAK,EAAEH,sBAAsB,CAACM,KAFhC;EAGED,WAAW,EAAE;AAHf,CANkE,CAApE;AAaA,MAAME,cAA8D,GAAG,CACrE;EACEL,KAAK,EAAE,OADT;EAEEC,KAAK,EAAEH,sBAAsB,CAACI,IAFhC;EAGEC,WAAW,EAAE;AAHf,CADqE,CAAvE;AAQA,OAAO,MAAMG,UAA8E,GAAG,CAAC;EAC7FL,KAD6F;EAE7FM,QAF6F;EAG7FC;AAH6F,CAAD,KAIxF;EAAA;;EACJ,oBACE,MAAC,eAAD;IAAA,wBACE,KAAC,gBAAD;MACE,KAAK,EAAE,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,IAAP,KAAeX,sBAAsB,CAACI,IAD/C;MAEE,OAAO,EAAE,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAES,KAAP,8DAAcC,IAAd,MAAuBd,iBAAiB,CAACe,GAAzC,GAA+CP,cAA/C,GAAgEN,WAF3E;MAGE,QAAQ,EAAGU,IAAD,IAAU;QAClBF,QAAQ,mBACHN,KADG;UAENQ;QAFM,GAAR;MAID;IARH,EADF,eAWE,KAAC,KAAD;MACE,KAAK,kBAAER,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEA,KAAT,uDAAkB,EADzB;MAEE,WAAW,EAAC,MAFd;MAGE,QAAQ,EAAGY,CAAD,IAAO;QACfN,QAAQ,mBACHN,KADG;UAENA,KAAK,EAAEY,CAAC,CAACC,aAAF,CAAgBb;QAFjB,GAAR;MAID;IARH,EAXF;EAAA,EADF;AAwBD,CA7BM"},"metadata":{},"sourceType":"module"}