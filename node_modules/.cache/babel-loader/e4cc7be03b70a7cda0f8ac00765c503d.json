{"ast":null,"code":"// Libraries\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport { stylesFactory } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { Graph } from './Graph';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGraphWithLegendStyles = stylesFactory(({\n  placement\n}) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: ${placement === 'bottom' ? 'column' : 'row'};\n  `,\n  graphContainer: css`\n    min-height: 65%;\n    flex-grow: 1;\n  `,\n  legendContainer: css`\n    padding: 10px 0;\n    max-height: ${placement === 'bottom' ? '35%' : 'none'};\n  `\n}));\n\nconst shouldHideLegendItem = (data, hideEmpty = false, hideZero = false) => {\n  const isZeroOnlySeries = data.reduce((acc, current) => acc + (current[1] || 0), 0) === 0;\n  const isNullOnlySeries = !data.reduce((acc, current) => acc && current[1] !== null, true);\n  return hideEmpty && isNullOnlySeries || hideZero && isZeroOnlySeries;\n};\n\nexport const GraphWithLegend = props => {\n  const {\n    series,\n    timeRange,\n    width,\n    height,\n    showBars,\n    showLines,\n    showPoints,\n    sortLegendBy,\n    sortLegendDesc,\n    legendDisplayMode,\n    placement,\n    onSeriesToggle,\n    onToggleSort,\n    hideEmpty,\n    hideZero,\n    isStacked,\n    lineWidth,\n    onHorizontalRegionSelected,\n    timeZone,\n    children,\n    ariaLabel\n  } = props;\n  const {\n    graphContainer,\n    wrapper,\n    legendContainer\n  } = getGraphWithLegendStyles(props);\n  const legendItems = series.reduce((acc, s) => {\n    return shouldHideLegendItem(s.data, hideEmpty, hideZero) ? acc : acc.concat([{\n      label: s.label,\n      color: s.color || '',\n      disabled: !s.isVisible,\n      yAxis: s.yAxis.index,\n      getDisplayValues: () => s.info || []\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: wrapper,\n    \"aria-label\": ariaLabel,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: graphContainer,\n      children: /*#__PURE__*/_jsx(Graph, {\n        series: series,\n        timeRange: timeRange,\n        timeZone: timeZone,\n        showLines: showLines,\n        showPoints: showPoints,\n        showBars: showBars,\n        width: width,\n        height: height,\n        isStacked: isStacked,\n        lineWidth: lineWidth,\n        onHorizontalRegionSelected: onHorizontalRegionSelected,\n        children: children\n      })\n    }), legendDisplayMode !== LegendDisplayMode.Hidden && /*#__PURE__*/_jsx(\"div\", {\n      className: legendContainer,\n      children: /*#__PURE__*/_jsx(CustomScrollbar, {\n        hideHorizontalTrack: true,\n        children: /*#__PURE__*/_jsx(VizLegend, {\n          items: legendItems,\n          displayMode: legendDisplayMode,\n          placement: placement,\n          sortBy: sortLegendBy,\n          sortDesc: sortLegendDesc,\n          onLabelClick: (item, event) => {\n            if (onSeriesToggle) {\n              onSeriesToggle(item.label, event);\n            }\n          },\n          onToggleSort: onToggleSort\n        })\n      })\n    })]\n  });\n};","map":{"version":3,"names":["css","React","LegendDisplayMode","stylesFactory","CustomScrollbar","VizLegend","Graph","getGraphWithLegendStyles","placement","wrapper","graphContainer","legendContainer","shouldHideLegendItem","data","hideEmpty","hideZero","isZeroOnlySeries","reduce","acc","current","isNullOnlySeries","GraphWithLegend","props","series","timeRange","width","height","showBars","showLines","showPoints","sortLegendBy","sortLegendDesc","legendDisplayMode","onSeriesToggle","onToggleSort","isStacked","lineWidth","onHorizontalRegionSelected","timeZone","children","ariaLabel","legendItems","s","concat","label","color","disabled","isVisible","yAxis","index","getDisplayValues","info","Hidden","item","event"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Graph/GraphWithLegend.tsx"],"sourcesContent":["// Libraries\n\nimport { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GraphSeriesValue } from '@grafana/data';\nimport { LegendDisplayMode, LegendPlacement } from '@grafana/schema';\n\nimport { stylesFactory } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { VizLegendItem } from '../VizLegend/types';\n\nimport { Graph, GraphProps } from './Graph';\n\nexport interface GraphWithLegendProps extends GraphProps {\n  legendDisplayMode: LegendDisplayMode;\n  placement: LegendPlacement;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  sortLegendBy?: string;\n  sortLegendDesc?: boolean;\n  onSeriesToggle?: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  onToggleSort: (sortBy: string) => void;\n}\n\nconst getGraphWithLegendStyles = stylesFactory(({ placement }: GraphWithLegendProps) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: ${placement === 'bottom' ? 'column' : 'row'};\n  `,\n  graphContainer: css`\n    min-height: 65%;\n    flex-grow: 1;\n  `,\n  legendContainer: css`\n    padding: 10px 0;\n    max-height: ${placement === 'bottom' ? '35%' : 'none'};\n  `,\n}));\n\nconst shouldHideLegendItem = (data: GraphSeriesValue[][], hideEmpty = false, hideZero = false) => {\n  const isZeroOnlySeries = data.reduce((acc, current) => acc + (current[1] || 0), 0) === 0;\n  const isNullOnlySeries = !data.reduce((acc, current) => acc && current[1] !== null, true);\n\n  return (hideEmpty && isNullOnlySeries) || (hideZero && isZeroOnlySeries);\n};\n\nexport const GraphWithLegend: React.FunctionComponent<GraphWithLegendProps> = (props: GraphWithLegendProps) => {\n  const {\n    series,\n    timeRange,\n    width,\n    height,\n    showBars,\n    showLines,\n    showPoints,\n    sortLegendBy,\n    sortLegendDesc,\n    legendDisplayMode,\n    placement,\n    onSeriesToggle,\n    onToggleSort,\n    hideEmpty,\n    hideZero,\n    isStacked,\n    lineWidth,\n    onHorizontalRegionSelected,\n    timeZone,\n    children,\n    ariaLabel,\n  } = props;\n  const { graphContainer, wrapper, legendContainer } = getGraphWithLegendStyles(props);\n\n  const legendItems = series.reduce<VizLegendItem[]>((acc, s) => {\n    return shouldHideLegendItem(s.data, hideEmpty, hideZero)\n      ? acc\n      : acc.concat([\n          {\n            label: s.label,\n            color: s.color || '',\n            disabled: !s.isVisible,\n            yAxis: s.yAxis.index,\n            getDisplayValues: () => s.info || [],\n          },\n        ]);\n  }, []);\n\n  return (\n    <div className={wrapper} aria-label={ariaLabel}>\n      <div className={graphContainer}>\n        <Graph\n          series={series}\n          timeRange={timeRange}\n          timeZone={timeZone}\n          showLines={showLines}\n          showPoints={showPoints}\n          showBars={showBars}\n          width={width}\n          height={height}\n          isStacked={isStacked}\n          lineWidth={lineWidth}\n          onHorizontalRegionSelected={onHorizontalRegionSelected}\n        >\n          {children}\n        </Graph>\n      </div>\n\n      {legendDisplayMode !== LegendDisplayMode.Hidden && (\n        <div className={legendContainer}>\n          <CustomScrollbar hideHorizontalTrack>\n            <VizLegend\n              items={legendItems}\n              displayMode={legendDisplayMode}\n              placement={placement}\n              sortBy={sortLegendBy}\n              sortDesc={sortLegendDesc}\n              onLabelClick={(item, event) => {\n                if (onSeriesToggle) {\n                  onSeriesToggle(item.label, event);\n                }\n              }}\n              onToggleSort={onToggleSort}\n            />\n          </CustomScrollbar>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}