{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { Select } from '../Select/Select';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils'; // Pick a field name out of the fulds\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const FieldNamePicker = ({\n  value,\n  onChange,\n  context,\n  item\n}) => {\n  var _item$settings, _settings$placeholder;\n\n  const settings = (_item$settings = item.settings) !== null && _item$settings !== void 0 ? _item$settings : {};\n  const names = useFieldDisplayNames(context.data, settings === null || settings === void 0 ? void 0 : settings.filter);\n  const selectOptions = useSelectOptions(names, value);\n  const onSelectChange = useCallback(selection => {\n    if (selection && !frameHasName(selection.value, names)) {\n      return; // can not select name that does not exist?\n    }\n\n    return onChange(selection === null || selection === void 0 ? void 0 : selection.value);\n  }, [names, onChange]);\n  const selectedOption = selectOptions.find(v => v.value === value);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Select, {\n      value: selectedOption,\n      placeholder: (_settings$placeholder = settings.placeholderText) !== null && _settings$placeholder !== void 0 ? _settings$placeholder : 'Select field',\n      options: selectOptions,\n      onChange: onSelectChange,\n      noOptionsMessage: settings.noFieldsMessage,\n      width: settings.width,\n      isClearable: true\n    })\n  });\n};","map":{"version":3,"names":["React","useCallback","Select","useFieldDisplayNames","useSelectOptions","frameHasName","FieldNamePicker","value","onChange","context","item","settings","names","data","filter","selectOptions","onSelectChange","selection","selectedOption","find","v","placeholderText","noFieldsMessage","width"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/MatchersUI/FieldNamePicker.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { FieldNamePickerConfigSettings, SelectableValue, StandardEditorProps } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\n\n// Pick a field name out of the fulds\nexport const FieldNamePicker: React.FC<StandardEditorProps<string, FieldNamePickerConfigSettings>> = ({\n  value,\n  onChange,\n  context,\n  item,\n}) => {\n  const settings: FieldNamePickerConfigSettings = item.settings ?? {};\n  const names = useFieldDisplayNames(context.data, settings?.filter);\n  const selectOptions = useSelectOptions(names, value);\n\n  const onSelectChange = useCallback(\n    (selection?: SelectableValue<string>) => {\n      if (selection && !frameHasName(selection.value, names)) {\n        return; // can not select name that does not exist?\n      }\n      return onChange(selection?.value);\n    },\n    [names, onChange]\n  );\n\n  const selectedOption = selectOptions.find((v) => v.value === value);\n  return (\n    <>\n      <Select\n        value={selectedOption}\n        placeholder={settings.placeholderText ?? 'Select field'}\n        options={selectOptions}\n        onChange={onSelectChange}\n        noOptionsMessage={settings.noFieldsMessage}\n        width={settings.width}\n        isClearable={true}\n      />\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAIA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,YAAjD,QAAqE,SAArE,C,CAEA;;;;AACA,OAAO,MAAMC,eAAqF,GAAG,CAAC;EACpGC,KADoG;EAEpGC,QAFoG;EAGpGC,OAHoG;EAIpGC;AAJoG,CAAD,KAK/F;EAAA;;EACJ,MAAMC,QAAuC,qBAAGD,IAAI,CAACC,QAAR,2DAAoB,EAAjE;EACA,MAAMC,KAAK,GAAGT,oBAAoB,CAACM,OAAO,CAACI,IAAT,EAAeF,QAAf,aAAeA,QAAf,uBAAeA,QAAQ,CAAEG,MAAzB,CAAlC;EACA,MAAMC,aAAa,GAAGX,gBAAgB,CAACQ,KAAD,EAAQL,KAAR,CAAtC;EAEA,MAAMS,cAAc,GAAGf,WAAW,CAC/BgB,SAAD,IAAyC;IACvC,IAAIA,SAAS,IAAI,CAACZ,YAAY,CAACY,SAAS,CAACV,KAAX,EAAkBK,KAAlB,CAA9B,EAAwD;MACtD,OADsD,CAC9C;IACT;;IACD,OAAOJ,QAAQ,CAACS,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEV,KAAZ,CAAf;EACD,CAN+B,EAOhC,CAACK,KAAD,EAAQJ,QAAR,CAPgC,CAAlC;EAUA,MAAMU,cAAc,GAAGH,aAAa,CAACI,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACb,KAAF,KAAYA,KAAtC,CAAvB;EACA,oBACE;IAAA,uBACE,KAAC,MAAD;MACE,KAAK,EAAEW,cADT;MAEE,WAAW,2BAAEP,QAAQ,CAACU,eAAX,yEAA8B,cAF3C;MAGE,OAAO,EAAEN,aAHX;MAIE,QAAQ,EAAEC,cAJZ;MAKE,gBAAgB,EAAEL,QAAQ,CAACW,eAL7B;MAME,KAAK,EAAEX,QAAQ,CAACY,KANlB;MAOE,WAAW,EAAE;IAPf;EADF,EADF;AAaD,CAlCM"},"metadata":{},"sourceType":"module"}