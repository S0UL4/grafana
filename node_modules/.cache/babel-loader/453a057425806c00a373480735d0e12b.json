{"ast":null,"code":"import React from 'react';\nimport { ColorPicker, Field, HorizontalGroup, InlineField, InlineFieldRow, InlineLabel, RadioButtonGroup } from '@grafana/ui';\nimport { useObservable } from 'react-use';\nimport { capitalize } from 'lodash';\nimport { ColorDimensionEditor, ResourceDimensionEditor, ScaleDimensionEditor, ScalarDimensionEditor, TextDimensionEditor } from 'app/features/dimensions/editors';\nimport { ResourceFolderName, defaultTextConfig } from 'app/features/dimensions/types';\nimport { defaultStyleConfig, GeometryTypeId, TextAlignment, TextBaseline } from '../../style/types';\nimport { styleUsesText } from '../../style/utils';\nimport { NumberValueEditor } from 'app/core/components/OptionsUI/number';\nimport { SliderValueEditor } from 'app/core/components/OptionsUI/slider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const StyleEditor = ({\n  value,\n  context,\n  onChange,\n  item\n}) => {\n  var _value$size, _value$symbol2, _value$color2, _value$opacity2, _value$rotation2, _value$text, _value$textConfig$fon, _value$textConfig, _value$textConfig$off, _value$textConfig2, _value$textConfig$off2, _value$textConfig3, _value$textConfig$tex, _value$textConfig4, _value$textConfig$tex2, _value$textConfig5;\n\n  const settings = item.settings;\n\n  const onSizeChange = sizeValue => {\n    onChange(Object.assign({}, value, {\n      size: sizeValue\n    }));\n  };\n\n  const onSymbolChange = symbolValue => {\n    onChange(Object.assign({}, value, {\n      symbol: symbolValue\n    }));\n  };\n\n  const onColorChange = colorValue => {\n    onChange(Object.assign({}, value, {\n      color: colorValue\n    }));\n  };\n\n  const onOpacityChange = opacityValue => {\n    onChange(Object.assign({}, value, {\n      opacity: opacityValue\n    }));\n  };\n\n  const onRotationChange = rotationValue => {\n    onChange(Object.assign({}, value, {\n      rotation: rotationValue\n    }));\n  };\n\n  const onTextChange = textValue => {\n    onChange(Object.assign({}, value, {\n      text: textValue\n    }));\n  };\n\n  const onTextFontSizeChange = fontSize => {\n    onChange(Object.assign({}, value, {\n      textConfig: Object.assign({}, value.textConfig, {\n        fontSize\n      })\n    }));\n  };\n\n  const onTextOffsetXChange = offsetX => {\n    onChange(Object.assign({}, value, {\n      textConfig: Object.assign({}, value.textConfig, {\n        offsetX\n      })\n    }));\n  };\n\n  const onTextOffsetYChange = offsetY => {\n    onChange(Object.assign({}, value, {\n      textConfig: Object.assign({}, value.textConfig, {\n        offsetY\n      })\n    }));\n  };\n\n  const onTextAlignChange = textAlign => {\n    onChange(Object.assign({}, value, {\n      textConfig: Object.assign({}, value.textConfig, {\n        textAlign: textAlign\n      })\n    }));\n  };\n\n  const onTextBaselineChange = textBaseline => {\n    onChange(Object.assign({}, value, {\n      textConfig: Object.assign({}, value.textConfig, {\n        textBaseline: textBaseline\n      })\n    }));\n  };\n\n  let featuresHavePoints = false;\n\n  if (settings !== null && settings !== void 0 && settings.layerInfo) {\n    const propertyOptions = useObservable(settings === null || settings === void 0 ? void 0 : settings.layerInfo);\n    featuresHavePoints = (propertyOptions === null || propertyOptions === void 0 ? void 0 : propertyOptions.geometryType) === GeometryTypeId.Point;\n  }\n\n  const hasTextLabel = styleUsesText(value); // Simple fixed value display\n\n  if (settings !== null && settings !== void 0 && settings.simpleFixedValues) {\n    var _value$symbol, _value$rotation, _value$color$fixed, _value$color, _value$opacity;\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [featuresHavePoints && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n          children: /*#__PURE__*/_jsx(InlineField, {\n            label: 'Symbol',\n            children: /*#__PURE__*/_jsx(ResourceDimensionEditor, {\n              value: (_value$symbol = value === null || value === void 0 ? void 0 : value.symbol) !== null && _value$symbol !== void 0 ? _value$symbol : defaultStyleConfig.symbol,\n              context: context,\n              onChange: onSymbolChange,\n              item: {\n                settings: {\n                  resourceType: 'icon',\n                  folderName: ResourceFolderName.Marker,\n                  placeholderText: hasTextLabel ? 'Select a symbol' : 'Select a symbol or add a text label',\n                  placeholderValue: defaultStyleConfig.symbol.fixed,\n                  showSourceRadio: false\n                }\n              }\n            })\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: 'Rotation angle',\n          children: /*#__PURE__*/_jsx(ScalarDimensionEditor, {\n            value: (_value$rotation = value === null || value === void 0 ? void 0 : value.rotation) !== null && _value$rotation !== void 0 ? _value$rotation : defaultStyleConfig.rotation,\n            context: context,\n            onChange: onRotationChange,\n            item: {\n              settings: {\n                min: defaultStyleConfig.rotation.min,\n                max: defaultStyleConfig.rotation.max\n              }\n            }\n          })\n        })]\n      }), /*#__PURE__*/_jsx(InlineFieldRow, {\n        children: /*#__PURE__*/_jsx(InlineField, {\n          label: \"Color\",\n          labelWidth: 10,\n          children: /*#__PURE__*/_jsx(InlineLabel, {\n            width: 4,\n            children: /*#__PURE__*/_jsx(ColorPicker, {\n              color: (_value$color$fixed = value === null || value === void 0 ? void 0 : (_value$color = value.color) === null || _value$color === void 0 ? void 0 : _value$color.fixed) !== null && _value$color$fixed !== void 0 ? _value$color$fixed : defaultStyleConfig.color.fixed,\n              onChange: v => {\n                onColorChange({\n                  fixed: v\n                });\n              }\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsx(InlineFieldRow, {\n        children: /*#__PURE__*/_jsx(InlineField, {\n          label: \"Opacity\",\n          labelWidth: 10,\n          grow: true,\n          children: /*#__PURE__*/_jsx(SliderValueEditor, {\n            value: (_value$opacity = value === null || value === void 0 ? void 0 : value.opacity) !== null && _value$opacity !== void 0 ? _value$opacity : defaultStyleConfig.opacity,\n            context: context,\n            onChange: onOpacityChange,\n            item: {\n              settings: {\n                min: 0,\n                max: 1,\n                step: 0.1\n              }\n            }\n          })\n        })\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Field, {\n      label: 'Size',\n      children: /*#__PURE__*/_jsx(ScaleDimensionEditor, {\n        value: (_value$size = value === null || value === void 0 ? void 0 : value.size) !== null && _value$size !== void 0 ? _value$size : defaultStyleConfig.size,\n        context: context,\n        onChange: onSizeChange,\n        item: {\n          settings: {\n            min: 1,\n            max: 100\n          }\n        }\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: 'Symbol',\n      children: /*#__PURE__*/_jsx(ResourceDimensionEditor, {\n        value: (_value$symbol2 = value === null || value === void 0 ? void 0 : value.symbol) !== null && _value$symbol2 !== void 0 ? _value$symbol2 : defaultStyleConfig.symbol,\n        context: context,\n        onChange: onSymbolChange,\n        item: {\n          settings: {\n            resourceType: 'icon',\n            folderName: ResourceFolderName.Marker,\n            placeholderText: hasTextLabel ? 'Select a symbol' : 'Select a symbol or add a text label',\n            placeholderValue: defaultStyleConfig.symbol.fixed,\n            showSourceRadio: false\n          }\n        }\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: 'Color',\n      children: /*#__PURE__*/_jsx(ColorDimensionEditor, {\n        value: (_value$color2 = value === null || value === void 0 ? void 0 : value.color) !== null && _value$color2 !== void 0 ? _value$color2 : defaultStyleConfig.color,\n        context: context,\n        onChange: onColorChange,\n        item: {}\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: 'Fill opacity',\n      children: /*#__PURE__*/_jsx(SliderValueEditor, {\n        value: (_value$opacity2 = value === null || value === void 0 ? void 0 : value.opacity) !== null && _value$opacity2 !== void 0 ? _value$opacity2 : defaultStyleConfig.opacity,\n        context: context,\n        onChange: onOpacityChange,\n        item: {\n          settings: {\n            min: 0,\n            max: 1,\n            step: 0.1\n          }\n        }\n      })\n    }), (settings === null || settings === void 0 ? void 0 : settings.displayRotation) && /*#__PURE__*/_jsx(Field, {\n      label: 'Rotation angle',\n      children: /*#__PURE__*/_jsx(ScalarDimensionEditor, {\n        value: (_value$rotation2 = value === null || value === void 0 ? void 0 : value.rotation) !== null && _value$rotation2 !== void 0 ? _value$rotation2 : defaultStyleConfig.rotation,\n        context: context,\n        onChange: onRotationChange,\n        item: {\n          settings: {\n            min: defaultStyleConfig.rotation.min,\n            max: defaultStyleConfig.rotation.max\n          }\n        }\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: 'Text label',\n      children: /*#__PURE__*/_jsx(TextDimensionEditor, {\n        value: (_value$text = value === null || value === void 0 ? void 0 : value.text) !== null && _value$text !== void 0 ? _value$text : defaultTextConfig,\n        context: context,\n        onChange: onTextChange,\n        item: {}\n      })\n    }), hasTextLabel && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(HorizontalGroup, {\n        children: [/*#__PURE__*/_jsx(Field, {\n          label: 'Font size',\n          children: /*#__PURE__*/_jsx(NumberValueEditor, {\n            value: (_value$textConfig$fon = value === null || value === void 0 ? void 0 : (_value$textConfig = value.textConfig) === null || _value$textConfig === void 0 ? void 0 : _value$textConfig.fontSize) !== null && _value$textConfig$fon !== void 0 ? _value$textConfig$fon : defaultStyleConfig.textConfig.fontSize,\n            context: context,\n            onChange: onTextFontSizeChange,\n            item: {}\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: 'X offset',\n          children: /*#__PURE__*/_jsx(NumberValueEditor, {\n            value: (_value$textConfig$off = value === null || value === void 0 ? void 0 : (_value$textConfig2 = value.textConfig) === null || _value$textConfig2 === void 0 ? void 0 : _value$textConfig2.offsetX) !== null && _value$textConfig$off !== void 0 ? _value$textConfig$off : defaultStyleConfig.textConfig.offsetX,\n            context: context,\n            onChange: onTextOffsetXChange,\n            item: {}\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          label: 'Y offset',\n          children: /*#__PURE__*/_jsx(NumberValueEditor, {\n            value: (_value$textConfig$off2 = value === null || value === void 0 ? void 0 : (_value$textConfig3 = value.textConfig) === null || _value$textConfig3 === void 0 ? void 0 : _value$textConfig3.offsetY) !== null && _value$textConfig$off2 !== void 0 ? _value$textConfig$off2 : defaultStyleConfig.textConfig.offsetY,\n            context: context,\n            onChange: onTextOffsetYChange,\n            item: {}\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Field, {\n        label: 'Align',\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          value: (_value$textConfig$tex = value === null || value === void 0 ? void 0 : (_value$textConfig4 = value.textConfig) === null || _value$textConfig4 === void 0 ? void 0 : _value$textConfig4.textAlign) !== null && _value$textConfig$tex !== void 0 ? _value$textConfig$tex : defaultStyleConfig.textConfig.textAlign,\n          onChange: onTextAlignChange,\n          options: [{\n            value: TextAlignment.Left,\n            label: capitalize(TextAlignment.Left)\n          }, {\n            value: TextAlignment.Center,\n            label: capitalize(TextAlignment.Center)\n          }, {\n            value: TextAlignment.Right,\n            label: capitalize(TextAlignment.Right)\n          }]\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        label: 'Baseline',\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          value: (_value$textConfig$tex2 = value === null || value === void 0 ? void 0 : (_value$textConfig5 = value.textConfig) === null || _value$textConfig5 === void 0 ? void 0 : _value$textConfig5.textBaseline) !== null && _value$textConfig$tex2 !== void 0 ? _value$textConfig$tex2 : defaultStyleConfig.textConfig.textBaseline,\n          onChange: onTextBaselineChange,\n          options: [{\n            value: TextBaseline.Top,\n            label: capitalize(TextBaseline.Top)\n          }, {\n            value: TextBaseline.Middle,\n            label: capitalize(TextBaseline.Middle)\n          }, {\n            value: TextBaseline.Bottom,\n            label: capitalize(TextBaseline.Bottom)\n          }]\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","ColorPicker","Field","HorizontalGroup","InlineField","InlineFieldRow","InlineLabel","RadioButtonGroup","useObservable","capitalize","ColorDimensionEditor","ResourceDimensionEditor","ScaleDimensionEditor","ScalarDimensionEditor","TextDimensionEditor","ResourceFolderName","defaultTextConfig","defaultStyleConfig","GeometryTypeId","TextAlignment","TextBaseline","styleUsesText","NumberValueEditor","SliderValueEditor","StyleEditor","value","context","onChange","item","settings","onSizeChange","sizeValue","size","onSymbolChange","symbolValue","symbol","onColorChange","colorValue","color","onOpacityChange","opacityValue","opacity","onRotationChange","rotationValue","rotation","onTextChange","textValue","text","onTextFontSizeChange","fontSize","textConfig","onTextOffsetXChange","offsetX","onTextOffsetYChange","offsetY","onTextAlignChange","textAlign","onTextBaselineChange","textBaseline","featuresHavePoints","layerInfo","propertyOptions","geometryType","Point","hasTextLabel","simpleFixedValues","resourceType","folderName","Marker","placeholderText","placeholderValue","fixed","showSourceRadio","min","max","v","step","displayRotation","Left","label","Center","Right","Top","Middle","Bottom"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/layers/data/StyleEditor.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport {\n  ColorPicker,\n  Field,\n  HorizontalGroup,\n  InlineField,\n  InlineFieldRow,\n  InlineLabel,\n  RadioButtonGroup,\n} from '@grafana/ui';\nimport { Observable } from 'rxjs';\nimport { useObservable } from 'react-use';\nimport { capitalize } from 'lodash';\n\nimport {\n  ColorDimensionEditor,\n  ResourceDimensionEditor,\n  ScaleDimensionEditor,\n  ScalarDimensionEditor,\n  TextDimensionEditor,\n} from 'app/features/dimensions/editors';\nimport {\n  ScaleDimensionConfig,\n  ResourceDimensionConfig,\n  ColorDimensionConfig,\n  ResourceFolderName,\n  TextDimensionConfig,\n  defaultTextConfig,\n  ScalarDimensionConfig,\n} from 'app/features/dimensions/types';\nimport { defaultStyleConfig, GeometryTypeId, StyleConfig, TextAlignment, TextBaseline } from '../../style/types';\nimport { styleUsesText } from '../../style/utils';\nimport { LayerContentInfo } from '../../utils/getFeatures';\nimport { NumberValueEditor } from 'app/core/components/OptionsUI/number';\nimport { SliderValueEditor } from 'app/core/components/OptionsUI/slider';\n\nexport interface StyleEditorOptions {\n  layerInfo?: Observable<LayerContentInfo>;\n  simpleFixedValues?: boolean;\n  displayRotation?: boolean;\n}\n\nexport const StyleEditor: FC<StandardEditorProps<StyleConfig, StyleEditorOptions, any>> = ({\n  value,\n  context,\n  onChange,\n  item,\n}) => {\n  const settings = item.settings;\n\n  const onSizeChange = (sizeValue: ScaleDimensionConfig | undefined) => {\n    onChange({ ...value, size: sizeValue });\n  };\n\n  const onSymbolChange = (symbolValue: ResourceDimensionConfig | undefined) => {\n    onChange({ ...value, symbol: symbolValue });\n  };\n\n  const onColorChange = (colorValue: ColorDimensionConfig | undefined) => {\n    onChange({ ...value, color: colorValue });\n  };\n\n  const onOpacityChange = (opacityValue: number | undefined) => {\n    onChange({ ...value, opacity: opacityValue });\n  };\n\n  const onRotationChange = (rotationValue: ScalarDimensionConfig | undefined) => {\n    onChange({ ...value, rotation: rotationValue });\n  };\n\n  const onTextChange = (textValue: TextDimensionConfig | undefined) => {\n    onChange({ ...value, text: textValue });\n  };\n\n  const onTextFontSizeChange = (fontSize: number | undefined) => {\n    onChange({ ...value, textConfig: { ...value.textConfig, fontSize } });\n  };\n\n  const onTextOffsetXChange = (offsetX: number | undefined) => {\n    onChange({ ...value, textConfig: { ...value.textConfig, offsetX } });\n  };\n\n  const onTextOffsetYChange = (offsetY: number | undefined) => {\n    onChange({ ...value, textConfig: { ...value.textConfig, offsetY } });\n  };\n\n  const onTextAlignChange = (textAlign: unknown) => {\n    onChange({ ...value, textConfig: { ...value.textConfig, textAlign: textAlign as TextAlignment } });\n  };\n\n  const onTextBaselineChange = (textBaseline: unknown) => {\n    onChange({ ...value, textConfig: { ...value.textConfig, textBaseline: textBaseline as TextBaseline } });\n  };\n\n  let featuresHavePoints = false;\n  if (settings?.layerInfo) {\n    const propertyOptions = useObservable(settings?.layerInfo);\n    featuresHavePoints = propertyOptions?.geometryType === GeometryTypeId.Point;\n  }\n  const hasTextLabel = styleUsesText(value);\n\n  // Simple fixed value display\n  if (settings?.simpleFixedValues) {\n    return (\n      <>\n        {featuresHavePoints && (\n          <>\n            <InlineFieldRow>\n              <InlineField label={'Symbol'}>\n                <ResourceDimensionEditor\n                  value={value?.symbol ?? defaultStyleConfig.symbol}\n                  context={context}\n                  onChange={onSymbolChange}\n                  item={\n                    {\n                      settings: {\n                        resourceType: 'icon',\n                        folderName: ResourceFolderName.Marker,\n                        placeholderText: hasTextLabel ? 'Select a symbol' : 'Select a symbol or add a text label',\n                        placeholderValue: defaultStyleConfig.symbol.fixed,\n                        showSourceRadio: false,\n                      },\n                    } as any\n                  }\n                />\n              </InlineField>\n            </InlineFieldRow>\n            <Field label={'Rotation angle'}>\n              <ScalarDimensionEditor\n                value={value?.rotation ?? defaultStyleConfig.rotation}\n                context={context}\n                onChange={onRotationChange}\n                item={\n                  {\n                    settings: {\n                      min: defaultStyleConfig.rotation.min,\n                      max: defaultStyleConfig.rotation.max,\n                    },\n                  } as any\n                }\n              />\n            </Field>\n          </>\n        )}\n        <InlineFieldRow>\n          <InlineField label=\"Color\" labelWidth={10}>\n            <InlineLabel width={4}>\n              <ColorPicker\n                color={value?.color?.fixed ?? defaultStyleConfig.color.fixed}\n                onChange={(v) => {\n                  onColorChange({ fixed: v });\n                }}\n              />\n            </InlineLabel>\n          </InlineField>\n        </InlineFieldRow>\n        <InlineFieldRow>\n          <InlineField label=\"Opacity\" labelWidth={10} grow>\n            <SliderValueEditor\n              value={value?.opacity ?? defaultStyleConfig.opacity}\n              context={context}\n              onChange={onOpacityChange}\n              item={\n                {\n                  settings: {\n                    min: 0,\n                    max: 1,\n                    step: 0.1,\n                  },\n                } as any\n              }\n            />\n          </InlineField>\n        </InlineFieldRow>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Field label={'Size'}>\n        <ScaleDimensionEditor\n          value={value?.size ?? defaultStyleConfig.size}\n          context={context}\n          onChange={onSizeChange}\n          item={\n            {\n              settings: {\n                min: 1,\n                max: 100,\n              },\n            } as any\n          }\n        />\n      </Field>\n      <Field label={'Symbol'}>\n        <ResourceDimensionEditor\n          value={value?.symbol ?? defaultStyleConfig.symbol}\n          context={context}\n          onChange={onSymbolChange}\n          item={\n            {\n              settings: {\n                resourceType: 'icon',\n                folderName: ResourceFolderName.Marker,\n                placeholderText: hasTextLabel ? 'Select a symbol' : 'Select a symbol or add a text label',\n                placeholderValue: defaultStyleConfig.symbol.fixed,\n                showSourceRadio: false,\n              },\n            } as any\n          }\n        />\n      </Field>\n      <Field label={'Color'}>\n        <ColorDimensionEditor\n          value={value?.color ?? defaultStyleConfig.color}\n          context={context}\n          onChange={onColorChange}\n          item={{} as any}\n        />\n      </Field>\n      <Field label={'Fill opacity'}>\n        <SliderValueEditor\n          value={value?.opacity ?? defaultStyleConfig.opacity}\n          context={context}\n          onChange={onOpacityChange}\n          item={\n            {\n              settings: {\n                min: 0,\n                max: 1,\n                step: 0.1,\n              },\n            } as any\n          }\n        />\n      </Field>\n      {settings?.displayRotation && (\n        <Field label={'Rotation angle'}>\n          <ScalarDimensionEditor\n            value={value?.rotation ?? defaultStyleConfig.rotation}\n            context={context}\n            onChange={onRotationChange}\n            item={\n              {\n                settings: {\n                  min: defaultStyleConfig.rotation.min,\n                  max: defaultStyleConfig.rotation.max,\n                },\n              } as any\n            }\n          />\n        </Field>\n      )}\n      <Field label={'Text label'}>\n        <TextDimensionEditor\n          value={value?.text ?? defaultTextConfig}\n          context={context}\n          onChange={onTextChange}\n          item={{} as any}\n        />\n      </Field>\n\n      {hasTextLabel && (\n        <>\n          <HorizontalGroup>\n            <Field label={'Font size'}>\n              <NumberValueEditor\n                value={value?.textConfig?.fontSize ?? defaultStyleConfig.textConfig.fontSize}\n                context={context}\n                onChange={onTextFontSizeChange}\n                item={{} as any}\n              />\n            </Field>\n            <Field label={'X offset'}>\n              <NumberValueEditor\n                value={value?.textConfig?.offsetX ?? defaultStyleConfig.textConfig.offsetX}\n                context={context}\n                onChange={onTextOffsetXChange}\n                item={{} as any}\n              />\n            </Field>\n            <Field label={'Y offset'}>\n              <NumberValueEditor\n                value={value?.textConfig?.offsetY ?? defaultStyleConfig.textConfig.offsetY}\n                context={context}\n                onChange={onTextOffsetYChange}\n                item={{} as any}\n              />\n            </Field>\n          </HorizontalGroup>\n          <Field label={'Align'}>\n            <RadioButtonGroup\n              value={value?.textConfig?.textAlign ?? defaultStyleConfig.textConfig.textAlign}\n              onChange={onTextAlignChange}\n              options={[\n                { value: TextAlignment.Left, label: capitalize(TextAlignment.Left) },\n                { value: TextAlignment.Center, label: capitalize(TextAlignment.Center) },\n                { value: TextAlignment.Right, label: capitalize(TextAlignment.Right) },\n              ]}\n            />\n          </Field>\n          <Field label={'Baseline'}>\n            <RadioButtonGroup\n              value={value?.textConfig?.textBaseline ?? defaultStyleConfig.textConfig.textBaseline}\n              onChange={onTextBaselineChange}\n              options={[\n                { value: TextBaseline.Top, label: capitalize(TextBaseline.Top) },\n                { value: TextBaseline.Middle, label: capitalize(TextBaseline.Middle) },\n                { value: TextBaseline.Bottom, label: capitalize(TextBaseline.Bottom) },\n              ]}\n            />\n          </Field>\n        </>\n      )}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SACEC,WADF,EAEEC,KAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,gBAPF,QAQO,aARP;AAUA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,mBALF,QAMO,iCANP;AAOA,SAIEC,kBAJF,EAMEC,iBANF,QAQO,+BARP;AASA,SAASC,kBAAT,EAA6BC,cAA7B,EAA0DC,aAA1D,EAAyEC,YAAzE,QAA6F,mBAA7F;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;;;;AAQA,OAAO,MAAMC,WAA0E,GAAG,CAAC;EACzFC,KADyF;EAEzFC,OAFyF;EAGzFC,QAHyF;EAIzFC;AAJyF,CAAD,KAKpF;EAAA;;EACJ,MAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;;EAEA,MAAMC,YAAY,GAAIC,SAAD,IAAiD;IACpEJ,QAAQ,mBAAMF,KAAN;MAAaO,IAAI,EAAED;IAAnB,GAAR;EACD,CAFD;;EAIA,MAAME,cAAc,GAAIC,WAAD,IAAsD;IAC3EP,QAAQ,mBAAMF,KAAN;MAAaU,MAAM,EAAED;IAArB,GAAR;EACD,CAFD;;EAIA,MAAME,aAAa,GAAIC,UAAD,IAAkD;IACtEV,QAAQ,mBAAMF,KAAN;MAAaa,KAAK,EAAED;IAApB,GAAR;EACD,CAFD;;EAIA,MAAME,eAAe,GAAIC,YAAD,IAAsC;IAC5Db,QAAQ,mBAAMF,KAAN;MAAagB,OAAO,EAAED;IAAtB,GAAR;EACD,CAFD;;EAIA,MAAME,gBAAgB,GAAIC,aAAD,IAAsD;IAC7EhB,QAAQ,mBAAMF,KAAN;MAAamB,QAAQ,EAAED;IAAvB,GAAR;EACD,CAFD;;EAIA,MAAME,YAAY,GAAIC,SAAD,IAAgD;IACnEnB,QAAQ,mBAAMF,KAAN;MAAasB,IAAI,EAAED;IAAnB,GAAR;EACD,CAFD;;EAIA,MAAME,oBAAoB,GAAIC,QAAD,IAAkC;IAC7DtB,QAAQ,mBAAMF,KAAN;MAAayB,UAAU,oBAAOzB,KAAK,CAACyB,UAAb;QAAyBD;MAAzB;IAAvB,GAAR;EACD,CAFD;;EAIA,MAAME,mBAAmB,GAAIC,OAAD,IAAiC;IAC3DzB,QAAQ,mBAAMF,KAAN;MAAayB,UAAU,oBAAOzB,KAAK,CAACyB,UAAb;QAAyBE;MAAzB;IAAvB,GAAR;EACD,CAFD;;EAIA,MAAMC,mBAAmB,GAAIC,OAAD,IAAiC;IAC3D3B,QAAQ,mBAAMF,KAAN;MAAayB,UAAU,oBAAOzB,KAAK,CAACyB,UAAb;QAAyBI;MAAzB;IAAvB,GAAR;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAIC,SAAD,IAAwB;IAChD7B,QAAQ,mBAAMF,KAAN;MAAayB,UAAU,oBAAOzB,KAAK,CAACyB,UAAb;QAAyBM,SAAS,EAAEA;MAApC;IAAvB,GAAR;EACD,CAFD;;EAIA,MAAMC,oBAAoB,GAAIC,YAAD,IAA2B;IACtD/B,QAAQ,mBAAMF,KAAN;MAAayB,UAAU,oBAAOzB,KAAK,CAACyB,UAAb;QAAyBQ,YAAY,EAAEA;MAAvC;IAAvB,GAAR;EACD,CAFD;;EAIA,IAAIC,kBAAkB,GAAG,KAAzB;;EACA,IAAI9B,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAE+B,SAAd,EAAyB;IACvB,MAAMC,eAAe,GAAGrD,aAAa,CAACqB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAE+B,SAAX,CAArC;IACAD,kBAAkB,GAAG,CAAAE,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEC,YAAjB,MAAkC5C,cAAc,CAAC6C,KAAtE;EACD;;EACD,MAAMC,YAAY,GAAG3C,aAAa,CAACI,KAAD,CAAlC,CApDI,CAsDJ;;EACA,IAAII,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEoC,iBAAd,EAAiC;IAAA;;IAC/B,oBACE;MAAA,WACGN,kBAAkB,iBACjB;QAAA,wBACE,KAAC,cAAD;UAAA,uBACE,KAAC,WAAD;YAAa,KAAK,EAAE,QAApB;YAAA,uBACE,KAAC,uBAAD;cACE,KAAK,mBAAElC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEU,MAAT,yDAAmBlB,kBAAkB,CAACkB,MAD7C;cAEE,OAAO,EAAET,OAFX;cAGE,QAAQ,EAAEO,cAHZ;cAIE,IAAI,EACF;gBACEJ,QAAQ,EAAE;kBACRqC,YAAY,EAAE,MADN;kBAERC,UAAU,EAAEpD,kBAAkB,CAACqD,MAFvB;kBAGRC,eAAe,EAAEL,YAAY,GAAG,iBAAH,GAAuB,qCAH5C;kBAIRM,gBAAgB,EAAErD,kBAAkB,CAACkB,MAAnB,CAA0BoC,KAJpC;kBAKRC,eAAe,EAAE;gBALT;cADZ;YALJ;UADF;QADF,EADF,eAqBE,KAAC,KAAD;UAAO,KAAK,EAAE,gBAAd;UAAA,uBACE,KAAC,qBAAD;YACE,KAAK,qBAAE/C,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEmB,QAAT,6DAAqB3B,kBAAkB,CAAC2B,QAD/C;YAEE,OAAO,EAAElB,OAFX;YAGE,QAAQ,EAAEgB,gBAHZ;YAIE,IAAI,EACF;cACEb,QAAQ,EAAE;gBACR4C,GAAG,EAAExD,kBAAkB,CAAC2B,QAAnB,CAA4B6B,GADzB;gBAERC,GAAG,EAAEzD,kBAAkB,CAAC2B,QAAnB,CAA4B8B;cAFzB;YADZ;UALJ;QADF,EArBF;MAAA,EAFJ,eAwCE,KAAC,cAAD;QAAA,uBACE,KAAC,WAAD;UAAa,KAAK,EAAC,OAAnB;UAA2B,UAAU,EAAE,EAAvC;UAAA,uBACE,KAAC,WAAD;YAAa,KAAK,EAAE,CAApB;YAAA,uBACE,KAAC,WAAD;cACE,KAAK,wBAAEjD,KAAF,aAAEA,KAAF,uCAAEA,KAAK,CAAEa,KAAT,iDAAE,aAAciC,KAAhB,mEAAyBtD,kBAAkB,CAACqB,KAAnB,CAAyBiC,KADzD;cAEE,QAAQ,EAAGI,CAAD,IAAO;gBACfvC,aAAa,CAAC;kBAAEmC,KAAK,EAAEI;gBAAT,CAAD,CAAb;cACD;YAJH;UADF;QADF;MADF,EAxCF,eAoDE,KAAC,cAAD;QAAA,uBACE,KAAC,WAAD;UAAa,KAAK,EAAC,SAAnB;UAA6B,UAAU,EAAE,EAAzC;UAA6C,IAAI,MAAjD;UAAA,uBACE,KAAC,iBAAD;YACE,KAAK,oBAAElD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,OAAT,2DAAoBxB,kBAAkB,CAACwB,OAD9C;YAEE,OAAO,EAAEf,OAFX;YAGE,QAAQ,EAAEa,eAHZ;YAIE,IAAI,EACF;cACEV,QAAQ,EAAE;gBACR4C,GAAG,EAAE,CADG;gBAERC,GAAG,EAAE,CAFG;gBAGRE,IAAI,EAAE;cAHE;YADZ;UALJ;QADF;MADF,EApDF;IAAA,EADF;EAyED;;EAED,oBACE;IAAA,wBACE,KAAC,KAAD;MAAO,KAAK,EAAE,MAAd;MAAA,uBACE,KAAC,oBAAD;QACE,KAAK,iBAAEnD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEO,IAAT,qDAAiBf,kBAAkB,CAACe,IAD3C;QAEE,OAAO,EAAEN,OAFX;QAGE,QAAQ,EAAEI,YAHZ;QAIE,IAAI,EACF;UACED,QAAQ,EAAE;YACR4C,GAAG,EAAE,CADG;YAERC,GAAG,EAAE;UAFG;QADZ;MALJ;IADF,EADF,eAgBE,KAAC,KAAD;MAAO,KAAK,EAAE,QAAd;MAAA,uBACE,KAAC,uBAAD;QACE,KAAK,oBAAEjD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEU,MAAT,2DAAmBlB,kBAAkB,CAACkB,MAD7C;QAEE,OAAO,EAAET,OAFX;QAGE,QAAQ,EAAEO,cAHZ;QAIE,IAAI,EACF;UACEJ,QAAQ,EAAE;YACRqC,YAAY,EAAE,MADN;YAERC,UAAU,EAAEpD,kBAAkB,CAACqD,MAFvB;YAGRC,eAAe,EAAEL,YAAY,GAAG,iBAAH,GAAuB,qCAH5C;YAIRM,gBAAgB,EAAErD,kBAAkB,CAACkB,MAAnB,CAA0BoC,KAJpC;YAKRC,eAAe,EAAE;UALT;QADZ;MALJ;IADF,EAhBF,eAkCE,KAAC,KAAD;MAAO,KAAK,EAAE,OAAd;MAAA,uBACE,KAAC,oBAAD;QACE,KAAK,mBAAE/C,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEa,KAAT,yDAAkBrB,kBAAkB,CAACqB,KAD5C;QAEE,OAAO,EAAEZ,OAFX;QAGE,QAAQ,EAAEU,aAHZ;QAIE,IAAI,EAAE;MAJR;IADF,EAlCF,eA0CE,KAAC,KAAD;MAAO,KAAK,EAAE,cAAd;MAAA,uBACE,KAAC,iBAAD;QACE,KAAK,qBAAEX,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgB,OAAT,6DAAoBxB,kBAAkB,CAACwB,OAD9C;QAEE,OAAO,EAAEf,OAFX;QAGE,QAAQ,EAAEa,eAHZ;QAIE,IAAI,EACF;UACEV,QAAQ,EAAE;YACR4C,GAAG,EAAE,CADG;YAERC,GAAG,EAAE,CAFG;YAGRE,IAAI,EAAE;UAHE;QADZ;MALJ;IADF,EA1CF,EA0DG,CAAA/C,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEgD,eAAV,kBACC,KAAC,KAAD;MAAO,KAAK,EAAE,gBAAd;MAAA,uBACE,KAAC,qBAAD;QACE,KAAK,sBAAEpD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEmB,QAAT,+DAAqB3B,kBAAkB,CAAC2B,QAD/C;QAEE,OAAO,EAAElB,OAFX;QAGE,QAAQ,EAAEgB,gBAHZ;QAIE,IAAI,EACF;UACEb,QAAQ,EAAE;YACR4C,GAAG,EAAExD,kBAAkB,CAAC2B,QAAnB,CAA4B6B,GADzB;YAERC,GAAG,EAAEzD,kBAAkB,CAAC2B,QAAnB,CAA4B8B;UAFzB;QADZ;MALJ;IADF,EA3DJ,eA2EE,KAAC,KAAD;MAAO,KAAK,EAAE,YAAd;MAAA,uBACE,KAAC,mBAAD;QACE,KAAK,iBAAEjD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,IAAT,qDAAiB/B,iBADxB;QAEE,OAAO,EAAEU,OAFX;QAGE,QAAQ,EAAEmB,YAHZ;QAIE,IAAI,EAAE;MAJR;IADF,EA3EF,EAoFGmB,YAAY,iBACX;MAAA,wBACE,MAAC,eAAD;QAAA,wBACE,KAAC,KAAD;UAAO,KAAK,EAAE,WAAd;UAAA,uBACE,KAAC,iBAAD;YACE,KAAK,2BAAEvC,KAAF,aAAEA,KAAF,4CAAEA,KAAK,CAAEyB,UAAT,sDAAE,kBAAmBD,QAArB,yEAAiChC,kBAAkB,CAACiC,UAAnB,CAA8BD,QADtE;YAEE,OAAO,EAAEvB,OAFX;YAGE,QAAQ,EAAEsB,oBAHZ;YAIE,IAAI,EAAE;UAJR;QADF,EADF,eASE,KAAC,KAAD;UAAO,KAAK,EAAE,UAAd;UAAA,uBACE,KAAC,iBAAD;YACE,KAAK,2BAAEvB,KAAF,aAAEA,KAAF,6CAAEA,KAAK,CAAEyB,UAAT,uDAAE,mBAAmBE,OAArB,yEAAgCnC,kBAAkB,CAACiC,UAAnB,CAA8BE,OADrE;YAEE,OAAO,EAAE1B,OAFX;YAGE,QAAQ,EAAEyB,mBAHZ;YAIE,IAAI,EAAE;UAJR;QADF,EATF,eAiBE,KAAC,KAAD;UAAO,KAAK,EAAE,UAAd;UAAA,uBACE,KAAC,iBAAD;YACE,KAAK,4BAAE1B,KAAF,aAAEA,KAAF,6CAAEA,KAAK,CAAEyB,UAAT,uDAAE,mBAAmBI,OAArB,2EAAgCrC,kBAAkB,CAACiC,UAAnB,CAA8BI,OADrE;YAEE,OAAO,EAAE5B,OAFX;YAGE,QAAQ,EAAE2B,mBAHZ;YAIE,IAAI,EAAE;UAJR;QADF,EAjBF;MAAA,EADF,eA2BE,KAAC,KAAD;QAAO,KAAK,EAAE,OAAd;QAAA,uBACE,KAAC,gBAAD;UACE,KAAK,2BAAE5B,KAAF,aAAEA,KAAF,6CAAEA,KAAK,CAAEyB,UAAT,uDAAE,mBAAmBM,SAArB,yEAAkCvC,kBAAkB,CAACiC,UAAnB,CAA8BM,SADvE;UAEE,QAAQ,EAAED,iBAFZ;UAGE,OAAO,EAAE,CACP;YAAE9B,KAAK,EAAEN,aAAa,CAAC2D,IAAvB;YAA6BC,KAAK,EAAEtE,UAAU,CAACU,aAAa,CAAC2D,IAAf;UAA9C,CADO,EAEP;YAAErD,KAAK,EAAEN,aAAa,CAAC6D,MAAvB;YAA+BD,KAAK,EAAEtE,UAAU,CAACU,aAAa,CAAC6D,MAAf;UAAhD,CAFO,EAGP;YAAEvD,KAAK,EAAEN,aAAa,CAAC8D,KAAvB;YAA8BF,KAAK,EAAEtE,UAAU,CAACU,aAAa,CAAC8D,KAAf;UAA/C,CAHO;QAHX;MADF,EA3BF,eAsCE,KAAC,KAAD;QAAO,KAAK,EAAE,UAAd;QAAA,uBACE,KAAC,gBAAD;UACE,KAAK,4BAAExD,KAAF,aAAEA,KAAF,6CAAEA,KAAK,CAAEyB,UAAT,uDAAE,mBAAmBQ,YAArB,2EAAqCzC,kBAAkB,CAACiC,UAAnB,CAA8BQ,YAD1E;UAEE,QAAQ,EAAED,oBAFZ;UAGE,OAAO,EAAE,CACP;YAAEhC,KAAK,EAAEL,YAAY,CAAC8D,GAAtB;YAA2BH,KAAK,EAAEtE,UAAU,CAACW,YAAY,CAAC8D,GAAd;UAA5C,CADO,EAEP;YAAEzD,KAAK,EAAEL,YAAY,CAAC+D,MAAtB;YAA8BJ,KAAK,EAAEtE,UAAU,CAACW,YAAY,CAAC+D,MAAd;UAA/C,CAFO,EAGP;YAAE1D,KAAK,EAAEL,YAAY,CAACgE,MAAtB;YAA8BL,KAAK,EAAEtE,UAAU,CAACW,YAAY,CAACgE,MAAd;UAA/C,CAHO;QAHX;MADF,EAtCF;IAAA,EArFJ;EAAA,EADF;AA2ID,CAnRM"},"metadata":{},"sourceType":"module"}