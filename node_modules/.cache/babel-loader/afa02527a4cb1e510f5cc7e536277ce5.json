{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useStyles2 } from '@grafana/ui';\nimport { PluginListDisplayMode } from '../types';\nimport { PluginListItem } from './PluginListItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const PluginList = ({\n  plugins,\n  displayMode\n}) => {\n  const isList = displayMode === PluginListDisplayMode.List;\n  const styles = useStyles2(getStyles);\n  const location = useLocation();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: cx(styles.container, {\n      [styles.list]: isList\n    }),\n    \"data-testid\": \"plugin-list\",\n    children: plugins.map(plugin => /*#__PURE__*/_jsx(PluginListItem, {\n      plugin: plugin,\n      pathName: location.pathname,\n      displayMode: displayMode\n    }, plugin.id))\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(288px, 1fr));\n      gap: ${theme.spacing(3)};\n    `,\n    list: css`\n      grid-template-columns: 1fr;\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useLocation","useStyles2","PluginListDisplayMode","PluginListItem","PluginList","plugins","displayMode","isList","List","styles","getStyles","location","container","list","map","plugin","pathname","id","theme","spacing"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/PluginList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginListDisplayMode } from '../types';\n\nimport { PluginListItem } from './PluginListItem';\n\ninterface Props {\n  plugins: CatalogPlugin[];\n  displayMode: PluginListDisplayMode;\n}\n\nexport const PluginList = ({ plugins, displayMode }: Props) => {\n  const isList = displayMode === PluginListDisplayMode.List;\n  const styles = useStyles2(getStyles);\n  const location = useLocation();\n\n  return (\n    <div className={cx(styles.container, { [styles.list]: isList })} data-testid=\"plugin-list\">\n      {plugins.map((plugin) => (\n        <PluginListItem key={plugin.id} plugin={plugin} pathName={location.pathname} displayMode={displayMode} />\n      ))}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(288px, 1fr));\n      gap: ${theme.spacing(3)};\n    `,\n    list: css`\n      grid-template-columns: 1fr;\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAAwBC,qBAAxB,QAAqD,UAArD;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;AAOA,OAAO,MAAMC,UAAU,GAAG,CAAC;EAAEC,OAAF;EAAWC;AAAX,CAAD,KAAqC;EAC7D,MAAMC,MAAM,GAAGD,WAAW,KAAKJ,qBAAqB,CAACM,IAArD;EACA,MAAMC,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EAEA,oBACE;IAAK,SAAS,EAAEF,EAAE,CAACW,MAAM,CAACG,SAAR,EAAmB;MAAE,CAACH,MAAM,CAACI,IAAR,GAAeN;IAAjB,CAAnB,CAAlB;IAAiE,eAAY,aAA7E;IAAA,UACGF,OAAO,CAACS,GAAR,CAAaC,MAAD,iBACX,KAAC,cAAD;MAAgC,MAAM,EAAEA,MAAxC;MAAgD,QAAQ,EAAEJ,QAAQ,CAACK,QAAnE;MAA6E,WAAW,EAAEV;IAA1F,GAAqBS,MAAM,CAACE,EAA5B,CADD;EADH,EADF;AAOD,CAZM;;AAcP,MAAMP,SAAS,GAAIQ,KAAD,IAA0B;EAC1C,OAAO;IACLN,SAAS,EAAEf,GAAI;AACnB;AACA;AACA,aAAaqB,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AAC9B,KALS;IAMLN,IAAI,EAAEhB,GAAI;AACd;AACA;EARS,CAAP;AAUD,CAXD"},"metadata":{},"sourceType":"module"}