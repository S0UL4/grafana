{"ast":null,"code":"var _RuleViewerLayout, _br, _RuleViewerLayout2, _Alert, _Icon;\n\nimport { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useObservable } from 'react-use';\nimport { LoadingState } from '@grafana/data';\nimport { Alert, Button, Icon, LoadingPlaceholder, PanelChromeLoadingIndicator, useStyles2, VerticalGroup, withErrorBoundary } from '@grafana/ui';\nimport { DEFAULT_PER_PAGE_PAGINATION } from '../../../core/constants';\nimport { AlertLabels } from './components/AlertLabels';\nimport { DetailsField } from './components/DetailsField';\nimport { ProvisionedResource, ProvisioningAlert } from './components/Provisioning';\nimport { RuleViewerLayout, RuleViewerLayoutContent } from './components/rule-viewer/RuleViewerLayout';\nimport { RuleViewerVisualization } from './components/rule-viewer/RuleViewerVisualization';\nimport { RuleDetailsActionButtons } from './components/rules/RuleDetailsActionButtons';\nimport { RuleDetailsAnnotations } from './components/rules/RuleDetailsAnnotations';\nimport { RuleDetailsDataSources } from './components/rules/RuleDetailsDataSources';\nimport { RuleDetailsExpression } from './components/rules/RuleDetailsExpression';\nimport { RuleDetailsFederatedSources } from './components/rules/RuleDetailsFederatedSources';\nimport { RuleDetailsMatchingInstances } from './components/rules/RuleDetailsMatchingInstances';\nimport { RuleHealth } from './components/rules/RuleHealth';\nimport { RuleState } from './components/rules/RuleState';\nimport { useAlertQueriesStatus } from './hooks/useAlertQueriesStatus';\nimport { useCombinedRule } from './hooks/useCombinedRule';\nimport { AlertingQueryRunner } from './state/AlertingQueryRunner';\nimport { getRulesSourceByName } from './utils/datasource';\nimport { alertRuleToQueries } from './utils/query';\nimport * as ruleId from './utils/rule-id';\nimport { isFederatedRuleGroup, isGrafanaRulerRule } from './utils/rules';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst errorMessage = 'Could not find data source for rule';\nconst errorTitle = 'Could not view rule';\nconst pageTitle = 'Alerting / View rule';\nexport function RuleViewer({\n  match\n}) {\n  const styles = useStyles2(getStyles);\n  const {\n    id\n  } = match.params;\n  const identifier = ruleId.tryParse(id, true);\n  const {\n    loading,\n    error,\n    result: rule\n  } = useCombinedRule(identifier, identifier === null || identifier === void 0 ? void 0 : identifier.ruleSourceName);\n  const runner = useMemo(() => new AlertingQueryRunner(), []);\n  const data = useObservable(runner.get());\n  const queries2 = useMemo(() => alertRuleToQueries(rule), [rule]);\n  const [queries, setQueries] = useState([]);\n  const {\n    allDataSourcesAvailable\n  } = useAlertQueriesStatus(queries2);\n  const onRunQueries = useCallback(() => {\n    if (queries.length > 0 && allDataSourcesAvailable) {\n      runner.run(queries);\n    }\n  }, [queries, runner, allDataSourcesAvailable]);\n  useEffect(() => {\n    setQueries(queries2);\n  }, [queries2]);\n  useEffect(() => {\n    if (allDataSourcesAvailable) {\n      onRunQueries();\n    }\n  }, [onRunQueries, allDataSourcesAvailable]);\n  useEffect(() => {\n    return () => runner.destroy();\n  }, [runner]);\n  const onChangeQuery = useCallback(query => {\n    setQueries(queries => queries.map(q => {\n      if (q.refId === query.refId) {\n        return query;\n      }\n\n      return q;\n    }));\n  }, []);\n\n  if (!(identifier !== null && identifier !== void 0 && identifier.ruleSourceName)) {\n    return /*#__PURE__*/_jsx(RuleViewerLayout, {\n      title: pageTitle,\n      children: /*#__PURE__*/_jsx(Alert, {\n        title: errorTitle,\n        children: /*#__PURE__*/_jsx(\"details\", {\n          className: styles.errorMessage,\n          children: errorMessage\n        })\n      })\n    });\n  }\n\n  const rulesSource = getRulesSourceByName(identifier.ruleSourceName);\n\n  if (loading) {\n    return _RuleViewerLayout || (_RuleViewerLayout = /*#__PURE__*/_jsx(RuleViewerLayout, {\n      title: pageTitle,\n      children: /*#__PURE__*/_jsx(LoadingPlaceholder, {\n        text: \"Loading rule...\"\n      })\n    }));\n  }\n\n  if (error || !rulesSource) {\n    var _error$message;\n\n    return /*#__PURE__*/_jsx(RuleViewerLayout, {\n      title: pageTitle,\n      children: /*#__PURE__*/_jsx(Alert, {\n        title: errorTitle,\n        children: /*#__PURE__*/_jsxs(\"details\", {\n          className: styles.errorMessage,\n          children: [(_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : errorMessage, _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), !!(error !== null && error !== void 0 && error.stack) && error.stack]\n        })\n      })\n    });\n  }\n\n  if (!rule) {\n    return _RuleViewerLayout2 || (_RuleViewerLayout2 = /*#__PURE__*/_jsx(RuleViewerLayout, {\n      title: pageTitle,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        children: \"Rule could not be found.\"\n      })\n    }));\n  }\n\n  const annotations = Object.entries(rule.annotations).filter(([_, value]) => !!value.trim());\n  const isFederatedRule = isFederatedRuleGroup(rule.group);\n  const isProvisioned = isGrafanaRulerRule(rule.rulerRule) && Boolean(rule.rulerRule.grafana_alert.provenance);\n  return /*#__PURE__*/_jsxs(RuleViewerLayout, {\n    wrapInContent: false,\n    title: pageTitle,\n    children: [isFederatedRule && (_Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n      severity: \"info\",\n      title: \"This rule is part of a federated rule group.\",\n      children: /*#__PURE__*/_jsxs(VerticalGroup, {\n        children: [\"Federated rule groups are currently an experimental feature.\", /*#__PURE__*/_jsx(Button, {\n          fill: \"text\",\n          icon: \"book\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            href: \"https://grafana.com/docs/metrics-enterprise/latest/tenant-management/tenant-federation/#cross-tenant-alerting-and-recording-rule-federation\",\n            children: \"Read documentation\"\n          })\n        })]\n      })\n    }))), isProvisioned && /*#__PURE__*/_jsx(ProvisioningAlert, {\n      resource: ProvisionedResource.AlertRule\n    }), /*#__PURE__*/_jsxs(RuleViewerLayoutContent, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"h4\", {\n          children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n            name: \"bell\",\n            size: \"lg\"\n          })), \" \", rule.name]\n        }), /*#__PURE__*/_jsx(RuleState, {\n          rule: rule,\n          isCreating: false,\n          isDeleting: false\n        }), /*#__PURE__*/_jsx(RuleDetailsActionButtons, {\n          rule: rule,\n          rulesSource: rulesSource\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.details,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.leftSide,\n          children: [rule.promRule && /*#__PURE__*/_jsx(DetailsField, {\n            label: \"Health\",\n            horizontal: true,\n            children: /*#__PURE__*/_jsx(RuleHealth, {\n              rule: rule.promRule\n            })\n          }), !!rule.labels && !!Object.keys(rule.labels).length && /*#__PURE__*/_jsx(DetailsField, {\n            label: \"Labels\",\n            horizontal: true,\n            children: /*#__PURE__*/_jsx(AlertLabels, {\n              labels: rule.labels\n            })\n          }), /*#__PURE__*/_jsx(RuleDetailsExpression, {\n            rulesSource: rulesSource,\n            rule: rule,\n            annotations: annotations\n          }), /*#__PURE__*/_jsx(RuleDetailsAnnotations, {\n            annotations: annotations\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.rightSide,\n          children: [/*#__PURE__*/_jsx(RuleDetailsDataSources, {\n            rule: rule,\n            rulesSource: rulesSource\n          }), isFederatedRule && /*#__PURE__*/_jsx(RuleDetailsFederatedSources, {\n            group: rule.group\n          }), /*#__PURE__*/_jsx(DetailsField, {\n            label: \"Namespace / Group\",\n            children: `${rule.namespace.name} / ${rule.group.name}`\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(RuleDetailsMatchingInstances, {\n          rule: rule,\n          pagination: {\n            itemsPerPage: DEFAULT_PER_PAGE_PAGINATION\n          }\n        })\n      })]\n    }), !isFederatedRule && data && Object.keys(data).length > 0 && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.queriesTitle,\n        children: [\"Query results \", /*#__PURE__*/_jsx(PanelChromeLoadingIndicator, {\n          loading: isLoading(data),\n          onCancel: () => runner.cancel()\n        })]\n      }), /*#__PURE__*/_jsx(RuleViewerLayoutContent, {\n        padding: 0,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.queries,\n          children: queries.map(query => {\n            return /*#__PURE__*/_jsx(\"div\", {\n              className: styles.query,\n              children: /*#__PURE__*/_jsx(RuleViewerVisualization, {\n                query: query,\n                data: data && data[query.refId],\n                onChangeQuery: onChangeQuery\n              })\n            }, query.refId);\n          })\n        })\n      })]\n    }), !isFederatedRule && !allDataSourcesAvailable && /*#__PURE__*/_jsx(Alert, {\n      title: \"Query not available\",\n      severity: \"warning\",\n      className: styles.queryWarning,\n      children: \"Cannot display the query preview. Some of the data sources used in the queries are not available.\"\n    })]\n  });\n}\n\nfunction isLoading(data) {\n  return !!Object.values(data).find(d => d.state === LoadingState.Loading);\n}\n\nconst getStyles = theme => {\n  return {\n    errorMessage: css`\n      white-space: pre-wrap;\n    `,\n    queries: css`\n      height: 100%;\n      width: 100%;\n    `,\n    queriesTitle: css`\n      padding: ${theme.spacing(2, 0.5)};\n      font-size: ${theme.typography.h5.fontSize};\n      font-weight: ${theme.typography.fontWeightBold};\n      font-family: ${theme.typography.h5.fontFamily};\n    `,\n    query: css`\n      border-bottom: 1px solid ${theme.colors.border.medium};\n      padding: ${theme.spacing(2)};\n    `,\n    queryWarning: css`\n      margin: ${theme.spacing(4, 0)};\n    `,\n    details: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    leftSide: css`\n      flex: 1;\n    `,\n    rightSide: css`\n      padding-left: 90px;\n      width: 300px;\n    `\n  };\n};\n\nexport default withErrorBoundary(RuleViewer, {\n  style: 'page'\n});","map":{"version":3,"names":["css","React","useCallback","useEffect","useMemo","useState","useObservable","LoadingState","Alert","Button","Icon","LoadingPlaceholder","PanelChromeLoadingIndicator","useStyles2","VerticalGroup","withErrorBoundary","DEFAULT_PER_PAGE_PAGINATION","AlertLabels","DetailsField","ProvisionedResource","ProvisioningAlert","RuleViewerLayout","RuleViewerLayoutContent","RuleViewerVisualization","RuleDetailsActionButtons","RuleDetailsAnnotations","RuleDetailsDataSources","RuleDetailsExpression","RuleDetailsFederatedSources","RuleDetailsMatchingInstances","RuleHealth","RuleState","useAlertQueriesStatus","useCombinedRule","AlertingQueryRunner","getRulesSourceByName","alertRuleToQueries","ruleId","isFederatedRuleGroup","isGrafanaRulerRule","errorMessage","errorTitle","pageTitle","RuleViewer","match","styles","getStyles","id","params","identifier","tryParse","loading","error","result","rule","ruleSourceName","runner","data","get","queries2","queries","setQueries","allDataSourcesAvailable","onRunQueries","length","run","destroy","onChangeQuery","query","map","q","refId","rulesSource","message","stack","annotations","Object","entries","filter","_","value","trim","isFederatedRule","group","isProvisioned","rulerRule","Boolean","grafana_alert","provenance","AlertRule","name","details","leftSide","promRule","labels","keys","rightSide","namespace","itemsPerPage","queriesTitle","isLoading","cancel","queryWarning","values","find","d","state","Loading","theme","spacing","typography","h5","fontSize","fontWeightBold","fontFamily","colors","border","medium","style"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/RuleViewer.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useObservable } from 'react-use';\n\nimport { GrafanaTheme2, LoadingState, PanelData } from '@grafana/data';\nimport {\n  Alert,\n  Button,\n  Icon,\n  LoadingPlaceholder,\n  PanelChromeLoadingIndicator,\n  useStyles2,\n  VerticalGroup,\n  withErrorBoundary,\n} from '@grafana/ui';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\n\nimport { DEFAULT_PER_PAGE_PAGINATION } from '../../../core/constants';\nimport { AlertQuery } from '../../../types/unified-alerting-dto';\n\nimport { AlertLabels } from './components/AlertLabels';\nimport { DetailsField } from './components/DetailsField';\nimport { ProvisionedResource, ProvisioningAlert } from './components/Provisioning';\nimport { RuleViewerLayout, RuleViewerLayoutContent } from './components/rule-viewer/RuleViewerLayout';\nimport { RuleViewerVisualization } from './components/rule-viewer/RuleViewerVisualization';\nimport { RuleDetailsActionButtons } from './components/rules/RuleDetailsActionButtons';\nimport { RuleDetailsAnnotations } from './components/rules/RuleDetailsAnnotations';\nimport { RuleDetailsDataSources } from './components/rules/RuleDetailsDataSources';\nimport { RuleDetailsExpression } from './components/rules/RuleDetailsExpression';\nimport { RuleDetailsFederatedSources } from './components/rules/RuleDetailsFederatedSources';\nimport { RuleDetailsMatchingInstances } from './components/rules/RuleDetailsMatchingInstances';\nimport { RuleHealth } from './components/rules/RuleHealth';\nimport { RuleState } from './components/rules/RuleState';\nimport { useAlertQueriesStatus } from './hooks/useAlertQueriesStatus';\nimport { useCombinedRule } from './hooks/useCombinedRule';\nimport { AlertingQueryRunner } from './state/AlertingQueryRunner';\nimport { getRulesSourceByName } from './utils/datasource';\nimport { alertRuleToQueries } from './utils/query';\nimport * as ruleId from './utils/rule-id';\nimport { isFederatedRuleGroup, isGrafanaRulerRule } from './utils/rules';\n\ntype RuleViewerProps = GrafanaRouteComponentProps<{ id?: string; sourceName?: string }>;\n\nconst errorMessage = 'Could not find data source for rule';\nconst errorTitle = 'Could not view rule';\nconst pageTitle = 'Alerting / View rule';\n\nexport function RuleViewer({ match }: RuleViewerProps) {\n  const styles = useStyles2(getStyles);\n  const { id } = match.params;\n  const identifier = ruleId.tryParse(id, true);\n\n  const { loading, error, result: rule } = useCombinedRule(identifier, identifier?.ruleSourceName);\n  const runner = useMemo(() => new AlertingQueryRunner(), []);\n  const data = useObservable(runner.get());\n  const queries2 = useMemo(() => alertRuleToQueries(rule), [rule]);\n  const [queries, setQueries] = useState<AlertQuery[]>([]);\n\n  const { allDataSourcesAvailable } = useAlertQueriesStatus(queries2);\n\n  const onRunQueries = useCallback(() => {\n    if (queries.length > 0 && allDataSourcesAvailable) {\n      runner.run(queries);\n    }\n  }, [queries, runner, allDataSourcesAvailable]);\n\n  useEffect(() => {\n    setQueries(queries2);\n  }, [queries2]);\n\n  useEffect(() => {\n    if (allDataSourcesAvailable) {\n      onRunQueries();\n    }\n  }, [onRunQueries, allDataSourcesAvailable]);\n\n  useEffect(() => {\n    return () => runner.destroy();\n  }, [runner]);\n\n  const onChangeQuery = useCallback((query: AlertQuery) => {\n    setQueries((queries) =>\n      queries.map((q) => {\n        if (q.refId === query.refId) {\n          return query;\n        }\n        return q;\n      })\n    );\n  }, []);\n\n  if (!identifier?.ruleSourceName) {\n    return (\n      <RuleViewerLayout title={pageTitle}>\n        <Alert title={errorTitle}>\n          <details className={styles.errorMessage}>{errorMessage}</details>\n        </Alert>\n      </RuleViewerLayout>\n    );\n  }\n\n  const rulesSource = getRulesSourceByName(identifier.ruleSourceName);\n\n  if (loading) {\n    return (\n      <RuleViewerLayout title={pageTitle}>\n        <LoadingPlaceholder text=\"Loading rule...\" />\n      </RuleViewerLayout>\n    );\n  }\n\n  if (error || !rulesSource) {\n    return (\n      <RuleViewerLayout title={pageTitle}>\n        <Alert title={errorTitle}>\n          <details className={styles.errorMessage}>\n            {error?.message ?? errorMessage}\n            <br />\n            {!!error?.stack && error.stack}\n          </details>\n        </Alert>\n      </RuleViewerLayout>\n    );\n  }\n\n  if (!rule) {\n    return (\n      <RuleViewerLayout title={pageTitle}>\n        <span>Rule could not be found.</span>\n      </RuleViewerLayout>\n    );\n  }\n\n  const annotations = Object.entries(rule.annotations).filter(([_, value]) => !!value.trim());\n  const isFederatedRule = isFederatedRuleGroup(rule.group);\n  const isProvisioned = isGrafanaRulerRule(rule.rulerRule) && Boolean(rule.rulerRule.grafana_alert.provenance);\n\n  return (\n    <RuleViewerLayout wrapInContent={false} title={pageTitle}>\n      {isFederatedRule && (\n        <Alert severity=\"info\" title=\"This rule is part of a federated rule group.\">\n          <VerticalGroup>\n            Federated rule groups are currently an experimental feature.\n            <Button fill=\"text\" icon=\"book\">\n              <a href=\"https://grafana.com/docs/metrics-enterprise/latest/tenant-management/tenant-federation/#cross-tenant-alerting-and-recording-rule-federation\">\n                Read documentation\n              </a>\n            </Button>\n          </VerticalGroup>\n        </Alert>\n      )}\n      {isProvisioned && <ProvisioningAlert resource={ProvisionedResource.AlertRule} />}\n      <RuleViewerLayoutContent>\n        <div>\n          <h4>\n            <Icon name=\"bell\" size=\"lg\" /> {rule.name}\n          </h4>\n          <RuleState rule={rule} isCreating={false} isDeleting={false} />\n          <RuleDetailsActionButtons rule={rule} rulesSource={rulesSource} />\n        </div>\n        <div className={styles.details}>\n          <div className={styles.leftSide}>\n            {rule.promRule && (\n              <DetailsField label=\"Health\" horizontal={true}>\n                <RuleHealth rule={rule.promRule} />\n              </DetailsField>\n            )}\n            {!!rule.labels && !!Object.keys(rule.labels).length && (\n              <DetailsField label=\"Labels\" horizontal={true}>\n                <AlertLabels labels={rule.labels} />\n              </DetailsField>\n            )}\n            <RuleDetailsExpression rulesSource={rulesSource} rule={rule} annotations={annotations} />\n            <RuleDetailsAnnotations annotations={annotations} />\n          </div>\n          <div className={styles.rightSide}>\n            <RuleDetailsDataSources rule={rule} rulesSource={rulesSource} />\n            {isFederatedRule && <RuleDetailsFederatedSources group={rule.group} />}\n            <DetailsField label=\"Namespace / Group\">{`${rule.namespace.name} / ${rule.group.name}`}</DetailsField>\n          </div>\n        </div>\n        <div>\n          <RuleDetailsMatchingInstances rule={rule} pagination={{ itemsPerPage: DEFAULT_PER_PAGE_PAGINATION }} />\n        </div>\n      </RuleViewerLayoutContent>\n      {!isFederatedRule && data && Object.keys(data).length > 0 && (\n        <>\n          <div className={styles.queriesTitle}>\n            Query results <PanelChromeLoadingIndicator loading={isLoading(data)} onCancel={() => runner.cancel()} />\n          </div>\n          <RuleViewerLayoutContent padding={0}>\n            <div className={styles.queries}>\n              {queries.map((query) => {\n                return (\n                  <div key={query.refId} className={styles.query}>\n                    <RuleViewerVisualization\n                      query={query}\n                      data={data && data[query.refId]}\n                      onChangeQuery={onChangeQuery}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </RuleViewerLayoutContent>\n        </>\n      )}\n      {!isFederatedRule && !allDataSourcesAvailable && (\n        <Alert title=\"Query not available\" severity=\"warning\" className={styles.queryWarning}>\n          Cannot display the query preview. Some of the data sources used in the queries are not available.\n        </Alert>\n      )}\n    </RuleViewerLayout>\n  );\n}\n\nfunction isLoading(data: Record<string, PanelData>): boolean {\n  return !!Object.values(data).find((d) => d.state === LoadingState.Loading);\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    errorMessage: css`\n      white-space: pre-wrap;\n    `,\n    queries: css`\n      height: 100%;\n      width: 100%;\n    `,\n    queriesTitle: css`\n      padding: ${theme.spacing(2, 0.5)};\n      font-size: ${theme.typography.h5.fontSize};\n      font-weight: ${theme.typography.fontWeightBold};\n      font-family: ${theme.typography.h5.fontFamily};\n    `,\n    query: css`\n      border-bottom: 1px solid ${theme.colors.border.medium};\n      padding: ${theme.spacing(2)};\n    `,\n    queryWarning: css`\n      margin: ${theme.spacing(4, 0)};\n    `,\n    details: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    leftSide: css`\n      flex: 1;\n    `,\n    rightSide: css`\n      padding-left: 90px;\n      width: 300px;\n    `,\n  };\n};\n\nexport default withErrorBoundary(RuleViewer, { style: 'page' });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}