{"ast":null,"code":"const _excluded = [\"query\", \"onChange\", \"size\", \"clearable\", \"className\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getSearchFieldStyles = theme => ({\n  wrapper: css`\n    width: 100%;\n    display: flex;\n    position: relative;\n    align-items: center;\n  `,\n  input: css`\n    box-sizing: border-box;\n    outline: none;\n    background-color: transparent;\n    background: transparent;\n    border-bottom: 2px solid ${theme.colors.border1};\n    font-size: 20px;\n    line-height: 38px;\n    width: 100%;\n\n    &::placeholder {\n      color: ${theme.colors.textWeak};\n    }\n  `,\n  spacer: css`\n    flex-grow: 1;\n  `,\n  icon: cx(css`\n      color: ${theme.colors.textWeak};\n      padding: 0 ${theme.spacing.md};\n    `),\n  clearButton: css`\n    font-size: ${theme.typography.size.sm};\n    color: ${theme.colors.textWeak};\n    text-decoration: underline;\n\n    &:hover {\n      cursor: pointer;\n      color: ${theme.colors.textStrong};\n    }\n  `\n});\n\nexport const SearchField = _ref => {\n  let {\n    query,\n    onChange,\n    className\n  } = _ref,\n      inputProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles(getSearchFieldStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.wrapper, className),\n    children: [/*#__PURE__*/_jsx(\"input\", Object.assign({\n      type: \"text\",\n      placeholder: \"Search dashboards by name\",\n      value: query.query,\n      onChange: event => {\n        onChange(event.currentTarget.value);\n      },\n      tabIndex: 0,\n      spellCheck: false,\n      className: styles.input\n    }, inputProps)), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.spacer\n    })]\n  });\n};","map":{"version":3,"names":["css","cx","React","useStyles","getSearchFieldStyles","theme","wrapper","input","colors","border1","textWeak","spacer","icon","spacing","md","clearButton","typography","size","sm","textStrong","SearchField","query","onChange","className","inputProps","styles","event","currentTarget","value"],"sources":["/home/soula/grafana/public/app/features/search/components/SearchField.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { useStyles } from '@grafana/ui';\n\nimport { DashboardQuery } from '../types';\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\ninterface SearchFieldProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  query: DashboardQuery;\n  onChange: (query: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  clearable?: boolean;\n  width?: number;\n}\n\nconst getSearchFieldStyles = (theme: GrafanaTheme) => ({\n  wrapper: css`\n    width: 100%;\n    display: flex;\n    position: relative;\n    align-items: center;\n  `,\n  input: css`\n    box-sizing: border-box;\n    outline: none;\n    background-color: transparent;\n    background: transparent;\n    border-bottom: 2px solid ${theme.colors.border1};\n    font-size: 20px;\n    line-height: 38px;\n    width: 100%;\n\n    &::placeholder {\n      color: ${theme.colors.textWeak};\n    }\n  `,\n  spacer: css`\n    flex-grow: 1;\n  `,\n  icon: cx(\n    css`\n      color: ${theme.colors.textWeak};\n      padding: 0 ${theme.spacing.md};\n    `\n  ),\n  clearButton: css`\n    font-size: ${theme.typography.size.sm};\n    color: ${theme.colors.textWeak};\n    text-decoration: underline;\n\n    &:hover {\n      cursor: pointer;\n      color: ${theme.colors.textStrong};\n    }\n  `,\n});\n\nexport const SearchField: FC<SearchFieldProps> = ({ query, onChange, size, clearable, className, ...inputProps }) => {\n  const styles = useStyles(getSearchFieldStyles);\n\n  return (\n    <div className={cx(styles.wrapper, className)}>\n      <input\n        type=\"text\"\n        placeholder=\"Search dashboards by name\"\n        value={query.query}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          onChange(event.currentTarget.value);\n        }}\n        tabIndex={0}\n        spellCheck={false}\n        className={styles.input}\n        {...inputProps}\n      />\n\n      <div className={styles.spacer} />\n    </div>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,SAAT,QAA0B,aAA1B;;;;AAcA,MAAMC,oBAAoB,GAAIC,KAAD,KAA0B;EACrDC,OAAO,EAAEN,GAAI;AACf;AACA;AACA;AACA;AACA,GANuD;EAOrDO,KAAK,EAAEP,GAAI;AACb;AACA;AACA;AACA;AACA,+BAA+BK,KAAK,CAACG,MAAN,CAAaC,OAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,eAAeJ,KAAK,CAACG,MAAN,CAAaE,QAAS;AACrC;AACA,GApBuD;EAqBrDC,MAAM,EAAEX,GAAI;AACd;AACA,GAvBuD;EAwBrDY,IAAI,EAAEX,EAAE,CACND,GAAI;AACR,eAAeK,KAAK,CAACG,MAAN,CAAaE,QAAS;AACrC,mBAAmBL,KAAK,CAACQ,OAAN,CAAcC,EAAG;AACpC,KAJU,CAxB6C;EA8BrDC,WAAW,EAAEf,GAAI;AACnB,iBAAiBK,KAAK,CAACW,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC1C,aAAab,KAAK,CAACG,MAAN,CAAaE,QAAS;AACnC;AACA;AACA;AACA;AACA,eAAeL,KAAK,CAACG,MAAN,CAAaW,UAAW;AACvC;AACA;AAvCuD,CAA1B,CAA7B;;AA0CA,OAAO,MAAMC,WAAiC,GAAG,QAAoE;EAAA,IAAnE;IAAEC,KAAF;IAASC,QAAT;IAAoCC;EAApC,CAAmE;EAAA,IAAjBC,UAAiB;;EACnH,MAAMC,MAAM,GAAGtB,SAAS,CAACC,oBAAD,CAAxB;EAEA,oBACE;IAAK,SAAS,EAAEH,EAAE,CAACwB,MAAM,CAACnB,OAAR,EAAiBiB,SAAjB,CAAlB;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,2BAFd;MAGE,KAAK,EAAEF,KAAK,CAACA,KAHf;MAIE,QAAQ,EAAGK,KAAD,IAAgD;QACxDJ,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;MACD,CANH;MAOE,QAAQ,EAAE,CAPZ;MAQE,UAAU,EAAE,KARd;MASE,SAAS,EAAEH,MAAM,CAAClB;IATpB,GAUMiB,UAVN,EADF,eAcE;MAAK,SAAS,EAAEC,MAAM,CAACd;IAAvB,EAdF;EAAA,EADF;AAkBD,CArBM"},"metadata":{},"sourceType":"module"}