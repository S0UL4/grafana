{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { EditorHeader, InlineSelect } from '@grafana/experimental';\nimport { AzureQueryType } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const QueryHeader = ({\n  query,\n  onQueryChange\n}) => {\n  const queryTypes = [{\n    value: AzureQueryType.AzureMonitor,\n    label: 'Metrics'\n  }, {\n    value: AzureQueryType.LogAnalytics,\n    label: 'Logs'\n  }, {\n    value: AzureQueryType.AzureResourceGraph,\n    label: 'Azure Resource Graph'\n  }];\n  const handleChange = useCallback(change => {\n    change.value && onQueryChange(Object.assign({}, query, {\n      queryType: change.value\n    }));\n  }, [onQueryChange, query]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    \"data-testid\": \"azure-monitor-experimental-header\",\n    children: /*#__PURE__*/_jsx(EditorHeader, {\n      children: /*#__PURE__*/_jsx(InlineSelect, {\n        label: \"Service\",\n        value: query.queryType,\n        placeholder: \"Service...\",\n        allowCustomValue: true,\n        options: queryTypes,\n        onChange: handleChange\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","useCallback","EditorHeader","InlineSelect","AzureQueryType","QueryHeader","query","onQueryChange","queryTypes","value","AzureMonitor","label","LogAnalytics","AzureResourceGraph","handleChange","change","queryType"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/components/QueryHeader.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorHeader, InlineSelect } from '@grafana/experimental';\n\nimport { AzureMonitorQuery, AzureQueryType } from '../types';\n\ninterface QueryTypeFieldProps {\n  query: AzureMonitorQuery;\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n}\n\nexport const QueryHeader: React.FC<QueryTypeFieldProps> = ({ query, onQueryChange }) => {\n  const queryTypes: Array<{ value: AzureQueryType; label: string }> = [\n    { value: AzureQueryType.AzureMonitor, label: 'Metrics' },\n    { value: AzureQueryType.LogAnalytics, label: 'Logs' },\n    { value: AzureQueryType.AzureResourceGraph, label: 'Azure Resource Graph' },\n  ];\n\n  const handleChange = useCallback(\n    (change: SelectableValue<AzureQueryType>) => {\n      change.value &&\n        onQueryChange({\n          ...query,\n          queryType: change.value,\n        });\n    },\n    [onQueryChange, query]\n  );\n\n  return (\n    <span data-testid=\"azure-monitor-experimental-header\">\n      <EditorHeader>\n        <InlineSelect\n          label=\"Service\"\n          value={query.queryType}\n          placeholder=\"Service...\"\n          allowCustomValue\n          options={queryTypes}\n          onChange={handleChange}\n        />\n      </EditorHeader>\n    </span>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAGA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,uBAA3C;AAEA,SAA4BC,cAA5B,QAAkD,UAAlD;;AAOA,OAAO,MAAMC,WAA0C,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAA8B;EACtF,MAAMC,UAA2D,GAAG,CAClE;IAAEC,KAAK,EAAEL,cAAc,CAACM,YAAxB;IAAsCC,KAAK,EAAE;EAA7C,CADkE,EAElE;IAAEF,KAAK,EAAEL,cAAc,CAACQ,YAAxB;IAAsCD,KAAK,EAAE;EAA7C,CAFkE,EAGlE;IAAEF,KAAK,EAAEL,cAAc,CAACS,kBAAxB;IAA4CF,KAAK,EAAE;EAAnD,CAHkE,CAApE;EAMA,MAAMG,YAAY,GAAGb,WAAW,CAC7Bc,MAAD,IAA6C;IAC3CA,MAAM,CAACN,KAAP,IACEF,aAAa,mBACRD,KADQ;MAEXU,SAAS,EAAED,MAAM,CAACN;IAFP,GADf;EAKD,CAP6B,EAQ9B,CAACF,aAAD,EAAgBD,KAAhB,CAR8B,CAAhC;EAWA,oBACE;IAAM,eAAY,mCAAlB;IAAA,uBACE,KAAC,YAAD;MAAA,uBACE,KAAC,YAAD;QACE,KAAK,EAAC,SADR;QAEE,KAAK,EAAEA,KAAK,CAACU,SAFf;QAGE,WAAW,EAAC,YAHd;QAIE,gBAAgB,MAJlB;QAKE,OAAO,EAAER,UALX;QAME,QAAQ,EAAEM;MANZ;IADF;EADF,EADF;AAcD,CAhCM"},"metadata":{},"sourceType":"module"}