{"ast":null,"code":"import { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nexport function buildNavModel(folder) {\n  const model = {\n    icon: 'folder',\n    id: 'manage-folder',\n    subTitle: 'Manage folder dashboards and permissions',\n    url: '',\n    text: folder.title,\n    breadcrumbs: [{\n      title: 'Dashboards',\n      url: 'dashboards'\n    }],\n    children: [{\n      active: false,\n      icon: 'apps',\n      id: `folder-dashboards-${folder.uid}`,\n      text: 'Dashboards',\n      url: folder.url\n    }]\n  };\n  model.children.push({\n    active: false,\n    icon: 'library-panel',\n    id: `folder-library-panels-${folder.uid}`,\n    text: 'Panels',\n    url: `${folder.url}/library-panels`\n  });\n\n  if (contextSrv.hasPermission(AccessControlAction.AlertingRuleRead)) {\n    model.children.push({\n      active: false,\n      icon: 'bell',\n      id: `folder-alerting-${folder.uid}`,\n      text: 'Alert rules',\n      url: `${folder.url}/alerting`\n    });\n  }\n\n  if (folder.canAdmin) {\n    model.children.push({\n      active: false,\n      icon: 'lock',\n      id: `folder-permissions-${folder.uid}`,\n      text: 'Permissions',\n      url: `${folder.url}/permissions`\n    });\n  }\n\n  if (folder.canSave) {\n    model.children.push({\n      active: false,\n      icon: 'cog',\n      id: `folder-settings-${folder.uid}`,\n      text: 'Settings',\n      url: `${folder.url}/settings`\n    });\n  }\n\n  return model;\n}\nexport function getLoadingNav(tabIndex) {\n  const main = buildNavModel({\n    id: 1,\n    uid: 'loading',\n    title: 'Loading',\n    url: 'url',\n    canSave: true,\n    canEdit: true,\n    canAdmin: true,\n    canDelete: true,\n    version: 0\n  });\n  main.children[tabIndex].active = true;\n  return {\n    main: main,\n    node: main.children[tabIndex]\n  };\n}","map":{"version":3,"names":["contextSrv","AccessControlAction","buildNavModel","folder","model","icon","id","subTitle","url","text","title","breadcrumbs","children","active","uid","push","hasPermission","AlertingRuleRead","canAdmin","canSave","getLoadingNav","tabIndex","main","canEdit","canDelete","version","node"],"sources":["/home/soula/grafana/public/app/features/folders/state/navModel.ts"],"sourcesContent":["import { NavModel, NavModelItem } from '@grafana/data';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction, FolderDTO } from 'app/types';\n\nexport function buildNavModel(folder: FolderDTO): NavModelItem {\n  const model = {\n    icon: 'folder',\n    id: 'manage-folder',\n    subTitle: 'Manage folder dashboards and permissions',\n    url: '',\n    text: folder.title,\n    breadcrumbs: [{ title: 'Dashboards', url: 'dashboards' }],\n    children: [\n      {\n        active: false,\n        icon: 'apps',\n        id: `folder-dashboards-${folder.uid}`,\n        text: 'Dashboards',\n        url: folder.url,\n      },\n    ],\n  };\n\n  model.children.push({\n    active: false,\n    icon: 'library-panel',\n    id: `folder-library-panels-${folder.uid}`,\n    text: 'Panels',\n    url: `${folder.url}/library-panels`,\n  });\n\n  if (contextSrv.hasPermission(AccessControlAction.AlertingRuleRead)) {\n    model.children.push({\n      active: false,\n      icon: 'bell',\n      id: `folder-alerting-${folder.uid}`,\n      text: 'Alert rules',\n      url: `${folder.url}/alerting`,\n    });\n  }\n\n  if (folder.canAdmin) {\n    model.children.push({\n      active: false,\n      icon: 'lock',\n      id: `folder-permissions-${folder.uid}`,\n      text: 'Permissions',\n      url: `${folder.url}/permissions`,\n    });\n  }\n\n  if (folder.canSave) {\n    model.children.push({\n      active: false,\n      icon: 'cog',\n      id: `folder-settings-${folder.uid}`,\n      text: 'Settings',\n      url: `${folder.url}/settings`,\n    });\n  }\n\n  return model;\n}\n\nexport function getLoadingNav(tabIndex: number): NavModel {\n  const main = buildNavModel({\n    id: 1,\n    uid: 'loading',\n    title: 'Loading',\n    url: 'url',\n    canSave: true,\n    canEdit: true,\n    canAdmin: true,\n    canDelete: true,\n    version: 0,\n  });\n\n  main.children![tabIndex].active = true;\n\n  return {\n    main: main,\n    node: main.children![tabIndex],\n  };\n}\n"],"mappings":"AACA,SAASA,UAAT,QAA2B,+BAA3B;AACA,SAASC,mBAAT,QAA+C,WAA/C;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAAwD;EAC7D,MAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,QADM;IAEZC,EAAE,EAAE,eAFQ;IAGZC,QAAQ,EAAE,0CAHE;IAIZC,GAAG,EAAE,EAJO;IAKZC,IAAI,EAAEN,MAAM,CAACO,KALD;IAMZC,WAAW,EAAE,CAAC;MAAED,KAAK,EAAE,YAAT;MAAuBF,GAAG,EAAE;IAA5B,CAAD,CAND;IAOZI,QAAQ,EAAE,CACR;MACEC,MAAM,EAAE,KADV;MAEER,IAAI,EAAE,MAFR;MAGEC,EAAE,EAAG,qBAAoBH,MAAM,CAACW,GAAI,EAHtC;MAIEL,IAAI,EAAE,YAJR;MAKED,GAAG,EAAEL,MAAM,CAACK;IALd,CADQ;EAPE,CAAd;EAkBAJ,KAAK,CAACQ,QAAN,CAAeG,IAAf,CAAoB;IAClBF,MAAM,EAAE,KADU;IAElBR,IAAI,EAAE,eAFY;IAGlBC,EAAE,EAAG,yBAAwBH,MAAM,CAACW,GAAI,EAHtB;IAIlBL,IAAI,EAAE,QAJY;IAKlBD,GAAG,EAAG,GAAEL,MAAM,CAACK,GAAI;EALD,CAApB;;EAQA,IAAIR,UAAU,CAACgB,aAAX,CAAyBf,mBAAmB,CAACgB,gBAA7C,CAAJ,EAAoE;IAClEb,KAAK,CAACQ,QAAN,CAAeG,IAAf,CAAoB;MAClBF,MAAM,EAAE,KADU;MAElBR,IAAI,EAAE,MAFY;MAGlBC,EAAE,EAAG,mBAAkBH,MAAM,CAACW,GAAI,EAHhB;MAIlBL,IAAI,EAAE,aAJY;MAKlBD,GAAG,EAAG,GAAEL,MAAM,CAACK,GAAI;IALD,CAApB;EAOD;;EAED,IAAIL,MAAM,CAACe,QAAX,EAAqB;IACnBd,KAAK,CAACQ,QAAN,CAAeG,IAAf,CAAoB;MAClBF,MAAM,EAAE,KADU;MAElBR,IAAI,EAAE,MAFY;MAGlBC,EAAE,EAAG,sBAAqBH,MAAM,CAACW,GAAI,EAHnB;MAIlBL,IAAI,EAAE,aAJY;MAKlBD,GAAG,EAAG,GAAEL,MAAM,CAACK,GAAI;IALD,CAApB;EAOD;;EAED,IAAIL,MAAM,CAACgB,OAAX,EAAoB;IAClBf,KAAK,CAACQ,QAAN,CAAeG,IAAf,CAAoB;MAClBF,MAAM,EAAE,KADU;MAElBR,IAAI,EAAE,KAFY;MAGlBC,EAAE,EAAG,mBAAkBH,MAAM,CAACW,GAAI,EAHhB;MAIlBL,IAAI,EAAE,UAJY;MAKlBD,GAAG,EAAG,GAAEL,MAAM,CAACK,GAAI;IALD,CAApB;EAOD;;EAED,OAAOJ,KAAP;AACD;AAED,OAAO,SAASgB,aAAT,CAAuBC,QAAvB,EAAmD;EACxD,MAAMC,IAAI,GAAGpB,aAAa,CAAC;IACzBI,EAAE,EAAE,CADqB;IAEzBQ,GAAG,EAAE,SAFoB;IAGzBJ,KAAK,EAAE,SAHkB;IAIzBF,GAAG,EAAE,KAJoB;IAKzBW,OAAO,EAAE,IALgB;IAMzBI,OAAO,EAAE,IANgB;IAOzBL,QAAQ,EAAE,IAPe;IAQzBM,SAAS,EAAE,IARc;IASzBC,OAAO,EAAE;EATgB,CAAD,CAA1B;EAYAH,IAAI,CAACV,QAAL,CAAeS,QAAf,EAAyBR,MAAzB,GAAkC,IAAlC;EAEA,OAAO;IACLS,IAAI,EAAEA,IADD;IAELI,IAAI,EAAEJ,IAAI,CAACV,QAAL,CAAeS,QAAf;EAFD,CAAP;AAID"},"metadata":{},"sourceType":"module"}