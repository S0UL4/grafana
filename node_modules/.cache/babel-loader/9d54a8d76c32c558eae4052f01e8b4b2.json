{"ast":null,"code":"import React from 'react';\nimport { Stack } from '@grafana/experimental';\nimport promqlGrammar from '../../promql';\nimport { promQueryModeller } from '../PromQueryModeller';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { OperationExplainedBox } from '../shared/OperationExplainedBox';\nimport { OperationListExplained } from '../shared/OperationListExplained';\nimport { RawQuery } from '../shared/RawQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const PromQueryBuilderExplained = /*#__PURE__*/React.memo(({\n  query\n}) => {\n  const visQuery = buildVisualQueryFromString(query || '').query;\n  const lang = {\n    grammar: promqlGrammar,\n    name: 'promql'\n  };\n  return /*#__PURE__*/_jsxs(Stack, {\n    gap: 0.5,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsx(OperationExplainedBox, {\n      children: /*#__PURE__*/_jsx(RawQuery, {\n        query: query,\n        lang: lang\n      })\n    }), /*#__PURE__*/_jsx(OperationExplainedBox, {\n      stepNumber: 1,\n      title: /*#__PURE__*/_jsx(RawQuery, {\n        query: `${visQuery.metric} ${promQueryModeller.renderLabels(visQuery.labels)}`,\n        lang: lang\n      }),\n      children: \"Fetch all series matching metric name and label filters.\"\n    }), /*#__PURE__*/_jsx(OperationListExplained, {\n      stepNumber: 2,\n      queryModeller: promQueryModeller,\n      query: visQuery,\n      lang: lang\n    })]\n  });\n});\nPromQueryBuilderExplained.displayName = 'PromQueryBuilderExplained';","map":{"version":3,"names":["React","Stack","promqlGrammar","promQueryModeller","buildVisualQueryFromString","OperationExplainedBox","OperationListExplained","RawQuery","PromQueryBuilderExplained","memo","query","visQuery","lang","grammar","name","metric","renderLabels","labels","displayName"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/components/PromQueryBuilderExplained.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Stack } from '@grafana/experimental';\n\nimport promqlGrammar from '../../promql';\nimport { promQueryModeller } from '../PromQueryModeller';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { OperationExplainedBox } from '../shared/OperationExplainedBox';\nimport { OperationListExplained } from '../shared/OperationListExplained';\nimport { RawQuery } from '../shared/RawQuery';\nimport { PromVisualQuery } from '../types';\n\nexport interface Props {\n  query: string;\n}\n\nexport const PromQueryBuilderExplained = React.memo<Props>(({ query }) => {\n  const visQuery = buildVisualQueryFromString(query || '').query;\n  const lang = { grammar: promqlGrammar, name: 'promql' };\n\n  return (\n    <Stack gap={0.5} direction=\"column\">\n      <OperationExplainedBox>\n        <RawQuery query={query} lang={lang} />\n      </OperationExplainedBox>\n      <OperationExplainedBox\n        stepNumber={1}\n        title={<RawQuery query={`${visQuery.metric} ${promQueryModeller.renderLabels(visQuery.labels)}`} lang={lang} />}\n      >\n        Fetch all series matching metric name and label filters.\n      </OperationExplainedBox>\n      <OperationListExplained<PromVisualQuery>\n        stepNumber={2}\n        queryModeller={promQueryModeller}\n        query={visQuery}\n        lang={lang}\n      />\n    </Stack>\n  );\n});\n\nPromQueryBuilderExplained.displayName = 'PromQueryBuilderExplained';\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,OAAOC,aAAP,MAA0B,cAA1B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,0BAAT,QAA2C,YAA3C;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAOA,OAAO,MAAMC,yBAAyB,gBAAGR,KAAK,CAACS,IAAN,CAAkB,CAAC;EAAEC;AAAF,CAAD,KAAe;EACxE,MAAMC,QAAQ,GAAGP,0BAA0B,CAACM,KAAK,IAAI,EAAV,CAA1B,CAAwCA,KAAzD;EACA,MAAME,IAAI,GAAG;IAAEC,OAAO,EAAEX,aAAX;IAA0BY,IAAI,EAAE;EAAhC,CAAb;EAEA,oBACE,MAAC,KAAD;IAAO,GAAG,EAAE,GAAZ;IAAiB,SAAS,EAAC,QAA3B;IAAA,wBACE,KAAC,qBAAD;MAAA,uBACE,KAAC,QAAD;QAAU,KAAK,EAAEJ,KAAjB;QAAwB,IAAI,EAAEE;MAA9B;IADF,EADF,eAIE,KAAC,qBAAD;MACE,UAAU,EAAE,CADd;MAEE,KAAK,eAAE,KAAC,QAAD;QAAU,KAAK,EAAG,GAAED,QAAQ,CAACI,MAAO,IAAGZ,iBAAiB,CAACa,YAAlB,CAA+BL,QAAQ,CAACM,MAAxC,CAAgD,EAAvF;QAA0F,IAAI,EAAEL;MAAhG,EAFT;MAAA;IAAA,EAJF,eAUE,KAAC,sBAAD;MACE,UAAU,EAAE,CADd;MAEE,aAAa,EAAET,iBAFjB;MAGE,KAAK,EAAEQ,QAHT;MAIE,IAAI,EAAEC;IAJR,EAVF;EAAA,EADF;AAmBD,CAvBwC,CAAlC;AAyBPJ,yBAAyB,CAACU,WAA1B,GAAwC,2BAAxC"},"metadata":{},"sourceType":"module"}