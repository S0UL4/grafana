{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Field, Form, Button, FieldSet, VerticalGroup } from '@grafana/ui';\nimport { SharedPreferences } from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nimport { updateTeam } from './state/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst mapDispatchToProps = {\n  updateTeam\n};\nconst connector = connect(null, mapDispatchToProps);\nexport const TeamSettings = ({\n  team,\n  updateTeam\n}) => {\n  const canWriteTeamSettings = contextSrv.hasPermissionInMetadata(AccessControlAction.ActionTeamsWrite, team);\n  return /*#__PURE__*/_jsxs(VerticalGroup, {\n    children: [/*#__PURE__*/_jsx(FieldSet, {\n      label: \"Team settings\",\n      children: /*#__PURE__*/_jsx(Form, {\n        defaultValues: Object.assign({}, team),\n        onSubmit: formTeam => {\n          updateTeam(formTeam.name, formTeam.email);\n        },\n        disabled: !canWriteTeamSettings,\n        children: ({\n          register,\n          errors\n        }) => /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Field, {\n            label: \"Name\",\n            disabled: !canWriteTeamSettings,\n            required: true,\n            invalid: !!errors.name,\n            error: \"Name is required\",\n            children: /*#__PURE__*/_jsx(Input, Object.assign({}, register('name', {\n              required: true\n            }), {\n              id: \"name-input\"\n            }))\n          }), /*#__PURE__*/_jsx(Field, {\n            label: \"Email\",\n            description: \"This is optional and is primarily used to set the team profile avatar (via gravatar service).\",\n            disabled: !canWriteTeamSettings,\n            children: /*#__PURE__*/_jsx(Input, Object.assign({}, register('email'), {\n              placeholder: \"team@email.com\",\n              type: \"email\",\n              id: \"email-input\"\n            }))\n          }), /*#__PURE__*/_jsx(Button, {\n            type: \"submit\",\n            disabled: !canWriteTeamSettings,\n            children: \"Update\"\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(SharedPreferences, {\n      resourceUri: `teams/${team.id}`,\n      disabled: !canWriteTeamSettings\n    })]\n  });\n};\nexport default connector(TeamSettings);","map":{"version":3,"names":["React","connect","Input","Field","Form","Button","FieldSet","VerticalGroup","SharedPreferences","contextSrv","AccessControlAction","updateTeam","mapDispatchToProps","connector","TeamSettings","team","canWriteTeamSettings","hasPermissionInMetadata","ActionTeamsWrite","formTeam","name","email","register","errors","required","id"],"sources":["/home/soula/grafana/public/app/features/teams/TeamSettings.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Input, Field, Form, Button, FieldSet, VerticalGroup } from '@grafana/ui';\nimport { SharedPreferences } from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction, Team } from 'app/types';\n\nimport { updateTeam } from './state/actions';\n\nconst mapDispatchToProps = {\n  updateTeam,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\ninterface OwnProps {\n  team: Team;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport const TeamSettings: FC<Props> = ({ team, updateTeam }) => {\n  const canWriteTeamSettings = contextSrv.hasPermissionInMetadata(AccessControlAction.ActionTeamsWrite, team);\n\n  return (\n    <VerticalGroup>\n      <FieldSet label=\"Team settings\">\n        <Form\n          defaultValues={{ ...team }}\n          onSubmit={(formTeam: Team) => {\n            updateTeam(formTeam.name, formTeam.email);\n          }}\n          disabled={!canWriteTeamSettings}\n        >\n          {({ register, errors }) => (\n            <>\n              <Field\n                label=\"Name\"\n                disabled={!canWriteTeamSettings}\n                required\n                invalid={!!errors.name}\n                error=\"Name is required\"\n              >\n                <Input {...register('name', { required: true })} id=\"name-input\" />\n              </Field>\n\n              <Field\n                label=\"Email\"\n                description=\"This is optional and is primarily used to set the team profile avatar (via gravatar service).\"\n                disabled={!canWriteTeamSettings}\n              >\n                <Input {...register('email')} placeholder=\"team@email.com\" type=\"email\" id=\"email-input\" />\n              </Field>\n              <Button type=\"submit\" disabled={!canWriteTeamSettings}>\n                Update\n              </Button>\n            </>\n          )}\n        </Form>\n      </FieldSet>\n      <SharedPreferences resourceUri={`teams/${team.id}`} disabled={!canWriteTeamSettings} />\n    </VerticalGroup>\n  );\n};\n\nexport default connector(TeamSettings);\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+CC,aAA/C,QAAoE,aAApE;AACA,SAASC,iBAAT,QAAkC,yDAAlC;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,mBAAT,QAA0C,WAA1C;AAEA,SAASC,UAAT,QAA2B,iBAA3B;;;;AAEA,MAAMC,kBAAkB,GAAG;EACzBD;AADyB,CAA3B;AAIA,MAAME,SAAS,GAAGZ,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAzB;AAOA,OAAO,MAAME,YAAuB,GAAG,CAAC;EAAEC,IAAF;EAAQJ;AAAR,CAAD,KAA0B;EAC/D,MAAMK,oBAAoB,GAAGP,UAAU,CAACQ,uBAAX,CAAmCP,mBAAmB,CAACQ,gBAAvD,EAAyEH,IAAzE,CAA7B;EAEA,oBACE,MAAC,aAAD;IAAA,wBACE,KAAC,QAAD;MAAU,KAAK,EAAC,eAAhB;MAAA,uBACE,KAAC,IAAD;QACE,aAAa,oBAAOA,IAAP,CADf;QAEE,QAAQ,EAAGI,QAAD,IAAoB;UAC5BR,UAAU,CAACQ,QAAQ,CAACC,IAAV,EAAgBD,QAAQ,CAACE,KAAzB,CAAV;QACD,CAJH;QAKE,QAAQ,EAAE,CAACL,oBALb;QAAA,UAOG,CAAC;UAAEM,QAAF;UAAYC;QAAZ,CAAD,kBACC;UAAA,wBACE,KAAC,KAAD;YACE,KAAK,EAAC,MADR;YAEE,QAAQ,EAAE,CAACP,oBAFb;YAGE,QAAQ,MAHV;YAIE,OAAO,EAAE,CAAC,CAACO,MAAM,CAACH,IAJpB;YAKE,KAAK,EAAC,kBALR;YAAA,uBAOE,KAAC,KAAD,oBAAWE,QAAQ,CAAC,MAAD,EAAS;cAAEE,QAAQ,EAAE;YAAZ,CAAT,CAAnB;cAAiD,EAAE,EAAC;YAApD;UAPF,EADF,eAWE,KAAC,KAAD;YACE,KAAK,EAAC,OADR;YAEE,WAAW,EAAC,+FAFd;YAGE,QAAQ,EAAE,CAACR,oBAHb;YAAA,uBAKE,KAAC,KAAD,oBAAWM,QAAQ,CAAC,OAAD,CAAnB;cAA8B,WAAW,EAAC,gBAA1C;cAA2D,IAAI,EAAC,OAAhE;cAAwE,EAAE,EAAC;YAA3E;UALF,EAXF,eAkBE,KAAC,MAAD;YAAQ,IAAI,EAAC,QAAb;YAAsB,QAAQ,EAAE,CAACN,oBAAjC;YAAA;UAAA,EAlBF;QAAA;MARJ;IADF,EADF,eAmCE,KAAC,iBAAD;MAAmB,WAAW,EAAG,SAAQD,IAAI,CAACU,EAAG,EAAjD;MAAoD,QAAQ,EAAE,CAACT;IAA/D,EAnCF;EAAA,EADF;AAuCD,CA1CM;AA4CP,eAAeH,SAAS,CAACC,YAAD,CAAxB"},"metadata":{},"sourceType":"module"}