{"ast":null,"code":"export const getDefaultCondition = () => ({\n  type: 'query',\n  query: {\n    params: ['A', '5m', 'now']\n  },\n  reducer: {\n    type: 'avg',\n    params: []\n  },\n  evaluator: {\n    type: 'gt',\n    params: [null]\n  },\n  operator: {\n    type: 'and'\n  }\n});\nexport const getAlertingValidationMessage = async (transformations, targets, datasourceSrv, datasource) => {\n  if (targets.length === 0) {\n    return 'Could not find any metric queries';\n  }\n\n  if (transformations && transformations.length) {\n    return 'Transformations are not supported in alert queries';\n  }\n\n  let alertingNotSupported = 0;\n  let templateVariablesNotSupported = 0;\n\n  for (const target of targets) {\n    const dsRef = target.datasource || datasource;\n    const ds = await datasourceSrv.get(dsRef);\n\n    if (!ds.meta.alerting) {\n      alertingNotSupported++;\n    } else if (ds.targetContainsTemplate && ds.targetContainsTemplate(target)) {\n      templateVariablesNotSupported++;\n    }\n  }\n\n  if (alertingNotSupported === targets.length) {\n    return 'The datasource does not support alerting queries';\n  }\n\n  if (templateVariablesNotSupported === targets.length) {\n    return 'Template variables are not supported in alert queries';\n  }\n\n  return '';\n};","map":{"version":3,"names":["getDefaultCondition","type","query","params","reducer","evaluator","operator","getAlertingValidationMessage","transformations","targets","datasourceSrv","datasource","length","alertingNotSupported","templateVariablesNotSupported","target","dsRef","ds","get","meta","alerting","targetContainsTemplate"],"sources":["/home/soula/grafana/public/app/features/alerting/getAlertingValidationMessage.ts"],"sourcesContent":["import { DataQuery, DataSourceRef, DataTransformerConfig } from '@grafana/data';\nimport { DataSourceSrv } from '@grafana/runtime';\n\nexport const getDefaultCondition = () => ({\n  type: 'query',\n  query: { params: ['A', '5m', 'now'] },\n  reducer: { type: 'avg', params: [] as any[] },\n  evaluator: { type: 'gt', params: [null] as any[] },\n  operator: { type: 'and' },\n});\n\nexport const getAlertingValidationMessage = async (\n  transformations: DataTransformerConfig[] | undefined,\n  targets: DataQuery[],\n  datasourceSrv: DataSourceSrv,\n  datasource: DataSourceRef | null\n): Promise<string> => {\n  if (targets.length === 0) {\n    return 'Could not find any metric queries';\n  }\n\n  if (transformations && transformations.length) {\n    return 'Transformations are not supported in alert queries';\n  }\n\n  let alertingNotSupported = 0;\n  let templateVariablesNotSupported = 0;\n\n  for (const target of targets) {\n    const dsRef = target.datasource || datasource;\n    const ds = await datasourceSrv.get(dsRef);\n    if (!ds.meta.alerting) {\n      alertingNotSupported++;\n    } else if (ds.targetContainsTemplate && ds.targetContainsTemplate(target)) {\n      templateVariablesNotSupported++;\n    }\n  }\n\n  if (alertingNotSupported === targets.length) {\n    return 'The datasource does not support alerting queries';\n  }\n\n  if (templateVariablesNotSupported === targets.length) {\n    return 'Template variables are not supported in alert queries';\n  }\n\n  return '';\n};\n"],"mappings":"AAGA,OAAO,MAAMA,mBAAmB,GAAG,OAAO;EACxCC,IAAI,EAAE,OADkC;EAExCC,KAAK,EAAE;IAAEC,MAAM,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ;EAAV,CAFiC;EAGxCC,OAAO,EAAE;IAAEH,IAAI,EAAE,KAAR;IAAeE,MAAM,EAAE;EAAvB,CAH+B;EAIxCE,SAAS,EAAE;IAAEJ,IAAI,EAAE,IAAR;IAAcE,MAAM,EAAE,CAAC,IAAD;EAAtB,CAJ6B;EAKxCG,QAAQ,EAAE;IAAEL,IAAI,EAAE;EAAR;AAL8B,CAAP,CAA5B;AAQP,OAAO,MAAMM,4BAA4B,GAAG,OAC1CC,eAD0C,EAE1CC,OAF0C,EAG1CC,aAH0C,EAI1CC,UAJ0C,KAKtB;EACpB,IAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;IACxB,OAAO,mCAAP;EACD;;EAED,IAAIJ,eAAe,IAAIA,eAAe,CAACI,MAAvC,EAA+C;IAC7C,OAAO,oDAAP;EACD;;EAED,IAAIC,oBAAoB,GAAG,CAA3B;EACA,IAAIC,6BAA6B,GAAG,CAApC;;EAEA,KAAK,MAAMC,MAAX,IAAqBN,OAArB,EAA8B;IAC5B,MAAMO,KAAK,GAAGD,MAAM,CAACJ,UAAP,IAAqBA,UAAnC;IACA,MAAMM,EAAE,GAAG,MAAMP,aAAa,CAACQ,GAAd,CAAkBF,KAAlB,CAAjB;;IACA,IAAI,CAACC,EAAE,CAACE,IAAH,CAAQC,QAAb,EAAuB;MACrBP,oBAAoB;IACrB,CAFD,MAEO,IAAII,EAAE,CAACI,sBAAH,IAA6BJ,EAAE,CAACI,sBAAH,CAA0BN,MAA1B,CAAjC,EAAoE;MACzED,6BAA6B;IAC9B;EACF;;EAED,IAAID,oBAAoB,KAAKJ,OAAO,CAACG,MAArC,EAA6C;IAC3C,OAAO,kDAAP;EACD;;EAED,IAAIE,6BAA6B,KAAKL,OAAO,CAACG,MAA9C,EAAsD;IACpD,OAAO,uDAAP;EACD;;EAED,OAAO,EAAP;AACD,CApCM"},"metadata":{},"sourceType":"module"}