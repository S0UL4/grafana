{"ast":null,"code":"var _InlineLabel;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2 } from '../../themes';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { InlineLabel } from '../Forms/InlineLabel';\n/**\n * Horizontal section for editor components.\n *\n * @alpha\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const SegmentSection = ({\n  label,\n  htmlFor,\n  children,\n  fill\n}) => {\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(InlineFieldRow, {\n      children: [/*#__PURE__*/_jsx(InlineLabel, {\n        htmlFor: htmlFor,\n        width: 12,\n        className: styles.label,\n        children: label\n      }), children, fill && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.fill,\n        children: _InlineLabel || (_InlineLabel = /*#__PURE__*/_jsx(InlineLabel, {\n          children: ''\n        }))\n      })]\n    })\n  });\n};\n\nconst getStyles = theme => ({\n  label: css`\n    color: ${theme.colors.primary.text};\n  `,\n  fill: css`\n    flex-grow: 1;\n    margin-bottom: ${theme.spacing(0.5)};\n  `\n});","map":{"version":3,"names":["css","React","useStyles2","InlineFieldRow","InlineLabel","SegmentSection","label","htmlFor","children","fill","styles","getStyles","theme","colors","primary","text","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Segment/SegmentSection.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\n/**\n * Horizontal section for editor components.\n *\n * @alpha\n */\nexport const SegmentSection = ({\n  label,\n  htmlFor,\n  children,\n  fill,\n}: {\n  // Name of the section\n  label: string;\n  // htmlFor for the label\n  htmlFor?: string;\n  // List of components in the section\n  children: React.ReactNode;\n  // Fill the space at the end\n  fill?: boolean;\n}) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineLabel htmlFor={htmlFor} width={12} className={styles.label}>\n          {label}\n        </InlineLabel>\n        {children}\n        {fill && (\n          <div className={styles.fill}>\n            <InlineLabel>{''}</InlineLabel>\n          </div>\n        )}\n      </InlineFieldRow>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  label: css`\n    color: ${theme.colors.primary.text};\n  `,\n  fill: css`\n    flex-grow: 1;\n    margin-bottom: ${theme.spacing(0.5)};\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC;EAC7BC,KAD6B;EAE7BC,OAF6B;EAG7BC,QAH6B;EAI7BC;AAJ6B,CAAD,KAcxB;EACJ,MAAMC,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EACA,oBACE;IAAA,uBACE,MAAC,cAAD;MAAA,wBACE,KAAC,WAAD;QAAa,OAAO,EAAEJ,OAAtB;QAA+B,KAAK,EAAE,EAAtC;QAA0C,SAAS,EAAEG,MAAM,CAACJ,KAA5D;QAAA,UACGA;MADH,EADF,EAIGE,QAJH,EAKGC,IAAI,iBACH;QAAK,SAAS,EAAEC,MAAM,CAACD,IAAvB;QAAA,uDACE,KAAC,WAAD;UAAA,UAAc;QAAd,EADF;MAAA,EANJ;IAAA;EADF,EADF;AAeD,CA/BM;;AAiCP,MAAME,SAAS,GAAIC,KAAD,KAA2B;EAC3CN,KAAK,EAAEN,GAAI;AACb,aAAaY,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAAK;AACvC,GAH6C;EAI3CN,IAAI,EAAET,GAAI;AACZ;AACA,qBAAqBY,KAAK,CAACI,OAAN,CAAc,GAAd,CAAmB;AACxC;AAP6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}