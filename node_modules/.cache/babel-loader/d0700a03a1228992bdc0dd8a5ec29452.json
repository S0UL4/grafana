{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { locationService } from '@grafana/runtime';\nexport function useURLSearchParams() {\n  const {\n    search\n  } = useLocation();\n  const queryParams = useMemo(() => new URLSearchParams(search), [search]);\n  const update = useCallback((searchValues, replace) => {\n    locationService.partial(searchValues, replace);\n  }, []);\n  return [queryParams, update];\n}","map":{"version":3,"names":["useCallback","useMemo","useLocation","locationService","useURLSearchParams","search","queryParams","URLSearchParams","update","searchValues","replace","partial"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/hooks/useURLSearchParams.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { locationService } from '@grafana/runtime';\n\nexport function useURLSearchParams(): [\n  URLSearchParams,\n  (searchValues: Record<string, string | string[] | undefined>, replace?: boolean) => void\n] {\n  const { search } = useLocation();\n  const queryParams = useMemo(() => new URLSearchParams(search), [search]);\n\n  const update = useCallback((searchValues: Record<string, string | string[] | undefined>, replace?: boolean) => {\n    locationService.partial(searchValues, replace);\n  }, []);\n\n  return [queryParams, update];\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAO,SAASC,kBAAT,GAGL;EACA,MAAM;IAAEC;EAAF,IAAaH,WAAW,EAA9B;EACA,MAAMI,WAAW,GAAGL,OAAO,CAAC,MAAM,IAAIM,eAAJ,CAAoBF,MAApB,CAAP,EAAoC,CAACA,MAAD,CAApC,CAA3B;EAEA,MAAMG,MAAM,GAAGR,WAAW,CAAC,CAACS,YAAD,EAA8DC,OAA9D,KAAoF;IAC7GP,eAAe,CAACQ,OAAhB,CAAwBF,YAAxB,EAAsCC,OAAtC;EACD,CAFyB,EAEvB,EAFuB,CAA1B;EAIA,OAAO,CAACJ,WAAD,EAAcE,MAAd,CAAP;AACD"},"metadata":{},"sourceType":"module"}