{"ast":null,"code":"import { FieldColorModeId, FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { VisibilityMode } from '@grafana/schema';\nimport { commonOptionsBuilder } from '@grafana/ui';\nimport { StatusHistoryPanel } from './StatusHistoryPanel';\nimport { StatusHistorySuggestionsSupplier } from './suggestions';\nimport { defaultStatusFieldConfig } from './types';\nexport const plugin = new PanelPlugin(StatusHistoryPanel).useFieldConfig({\n  standardOptions: {\n    [FieldConfigProperty.Color]: {\n      settings: {\n        byValueSupport: true\n      },\n      defaultValue: {\n        mode: FieldColorModeId.Thresholds\n      }\n    }\n  },\n  useCustomConfig: builder => {\n    builder.addSliderInput({\n      path: 'lineWidth',\n      name: 'Line width',\n      defaultValue: defaultStatusFieldConfig.lineWidth,\n      settings: {\n        min: 0,\n        max: 10,\n        step: 1\n      }\n    }).addSliderInput({\n      path: 'fillOpacity',\n      name: 'Fill opacity',\n      defaultValue: defaultStatusFieldConfig.fillOpacity,\n      settings: {\n        min: 0,\n        max: 100,\n        step: 1\n      }\n    });\n  }\n}).setPanelOptions(builder => {\n  builder.addRadio({\n    path: 'showValue',\n    name: 'Show values',\n    settings: {\n      options: [{\n        value: VisibilityMode.Auto,\n        label: 'Auto'\n      }, {\n        value: VisibilityMode.Always,\n        label: 'Always'\n      }, {\n        value: VisibilityMode.Never,\n        label: 'Never'\n      }]\n    },\n    defaultValue: VisibilityMode.Auto\n  }).addSliderInput({\n    path: 'rowHeight',\n    name: 'Row height',\n    defaultValue: 0.9,\n    settings: {\n      min: 0,\n      max: 1,\n      step: 0.01\n    }\n  }).addSliderInput({\n    path: 'colWidth',\n    name: 'Column width',\n    defaultValue: 0.9,\n    settings: {\n      min: 0,\n      max: 1,\n      step: 0.01\n    }\n  });\n  commonOptionsBuilder.addLegendOptions(builder, false);\n  commonOptionsBuilder.addTooltipOptions(builder, true);\n}).setSuggestionsSupplier(new StatusHistorySuggestionsSupplier());","map":{"version":3,"names":["FieldColorModeId","FieldConfigProperty","PanelPlugin","VisibilityMode","commonOptionsBuilder","StatusHistoryPanel","StatusHistorySuggestionsSupplier","defaultStatusFieldConfig","plugin","useFieldConfig","standardOptions","Color","settings","byValueSupport","defaultValue","mode","Thresholds","useCustomConfig","builder","addSliderInput","path","name","lineWidth","min","max","step","fillOpacity","setPanelOptions","addRadio","options","value","Auto","label","Always","Never","addLegendOptions","addTooltipOptions","setSuggestionsSupplier"],"sources":["/home/soula/grafana/public/app/plugins/panel/status-history/module.tsx"],"sourcesContent":["import { FieldColorModeId, FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport { VisibilityMode } from '@grafana/schema';\nimport { commonOptionsBuilder } from '@grafana/ui';\n\nimport { StatusHistoryPanel } from './StatusHistoryPanel';\nimport { StatusHistorySuggestionsSupplier } from './suggestions';\nimport { StatusPanelOptions, StatusFieldConfig, defaultStatusFieldConfig } from './types';\n\nexport const plugin = new PanelPlugin<StatusPanelOptions, StatusFieldConfig>(StatusHistoryPanel)\n  .useFieldConfig({\n    standardOptions: {\n      [FieldConfigProperty.Color]: {\n        settings: {\n          byValueSupport: true,\n        },\n        defaultValue: {\n          mode: FieldColorModeId.Thresholds,\n        },\n      },\n    },\n    useCustomConfig: (builder) => {\n      builder\n        .addSliderInput({\n          path: 'lineWidth',\n          name: 'Line width',\n          defaultValue: defaultStatusFieldConfig.lineWidth,\n          settings: {\n            min: 0,\n            max: 10,\n            step: 1,\n          },\n        })\n        .addSliderInput({\n          path: 'fillOpacity',\n          name: 'Fill opacity',\n          defaultValue: defaultStatusFieldConfig.fillOpacity,\n          settings: {\n            min: 0,\n            max: 100,\n            step: 1,\n          },\n        });\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addRadio({\n        path: 'showValue',\n        name: 'Show values',\n        settings: {\n          options: [\n            { value: VisibilityMode.Auto, label: 'Auto' },\n            { value: VisibilityMode.Always, label: 'Always' },\n            { value: VisibilityMode.Never, label: 'Never' },\n          ],\n        },\n        defaultValue: VisibilityMode.Auto,\n      })\n      .addSliderInput({\n        path: 'rowHeight',\n        name: 'Row height',\n        defaultValue: 0.9,\n        settings: {\n          min: 0,\n          max: 1,\n          step: 0.01,\n        },\n      })\n      .addSliderInput({\n        path: 'colWidth',\n        name: 'Column width',\n        defaultValue: 0.9,\n        settings: {\n          min: 0,\n          max: 1,\n          step: 0.01,\n        },\n      });\n\n    commonOptionsBuilder.addLegendOptions(builder, false);\n    commonOptionsBuilder.addTooltipOptions(builder, true);\n  })\n  .setSuggestionsSupplier(new StatusHistorySuggestionsSupplier());\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,eAAnE;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,oBAAT,QAAqC,aAArC;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,gCAAT,QAAiD,eAAjD;AACA,SAAgDC,wBAAhD,QAAgF,SAAhF;AAEA,OAAO,MAAMC,MAAM,GAAG,IAAIN,WAAJ,CAAuDG,kBAAvD,EACnBI,cADmB,CACJ;EACdC,eAAe,EAAE;IACf,CAACT,mBAAmB,CAACU,KAArB,GAA6B;MAC3BC,QAAQ,EAAE;QACRC,cAAc,EAAE;MADR,CADiB;MAI3BC,YAAY,EAAE;QACZC,IAAI,EAAEf,gBAAgB,CAACgB;MADX;IAJa;EADd,CADH;EAWdC,eAAe,EAAGC,OAAD,IAAa;IAC5BA,OAAO,CACJC,cADH,CACkB;MACdC,IAAI,EAAE,WADQ;MAEdC,IAAI,EAAE,YAFQ;MAGdP,YAAY,EAAEP,wBAAwB,CAACe,SAHzB;MAIdV,QAAQ,EAAE;QACRW,GAAG,EAAE,CADG;QAERC,GAAG,EAAE,EAFG;QAGRC,IAAI,EAAE;MAHE;IAJI,CADlB,EAWGN,cAXH,CAWkB;MACdC,IAAI,EAAE,aADQ;MAEdC,IAAI,EAAE,cAFQ;MAGdP,YAAY,EAAEP,wBAAwB,CAACmB,WAHzB;MAIdd,QAAQ,EAAE;QACRW,GAAG,EAAE,CADG;QAERC,GAAG,EAAE,GAFG;QAGRC,IAAI,EAAE;MAHE;IAJI,CAXlB;EAqBD;AAjCa,CADI,EAoCnBE,eApCmB,CAoCFT,OAAD,IAAa;EAC5BA,OAAO,CACJU,QADH,CACY;IACRR,IAAI,EAAE,WADE;IAERC,IAAI,EAAE,aAFE;IAGRT,QAAQ,EAAE;MACRiB,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE3B,cAAc,CAAC4B,IAAxB;QAA8BC,KAAK,EAAE;MAArC,CADO,EAEP;QAAEF,KAAK,EAAE3B,cAAc,CAAC8B,MAAxB;QAAgCD,KAAK,EAAE;MAAvC,CAFO,EAGP;QAAEF,KAAK,EAAE3B,cAAc,CAAC+B,KAAxB;QAA+BF,KAAK,EAAE;MAAtC,CAHO;IADD,CAHF;IAURlB,YAAY,EAAEX,cAAc,CAAC4B;EAVrB,CADZ,EAaGZ,cAbH,CAakB;IACdC,IAAI,EAAE,WADQ;IAEdC,IAAI,EAAE,YAFQ;IAGdP,YAAY,EAAE,GAHA;IAIdF,QAAQ,EAAE;MACRW,GAAG,EAAE,CADG;MAERC,GAAG,EAAE,CAFG;MAGRC,IAAI,EAAE;IAHE;EAJI,CAblB,EAuBGN,cAvBH,CAuBkB;IACdC,IAAI,EAAE,UADQ;IAEdC,IAAI,EAAE,cAFQ;IAGdP,YAAY,EAAE,GAHA;IAIdF,QAAQ,EAAE;MACRW,GAAG,EAAE,CADG;MAERC,GAAG,EAAE,CAFG;MAGRC,IAAI,EAAE;IAHE;EAJI,CAvBlB;EAkCArB,oBAAoB,CAAC+B,gBAArB,CAAsCjB,OAAtC,EAA+C,KAA/C;EACAd,oBAAoB,CAACgC,iBAArB,CAAuClB,OAAvC,EAAgD,IAAhD;AACD,CAzEmB,EA0EnBmB,sBA1EmB,CA0EI,IAAI/B,gCAAJ,EA1EJ,CAAf"},"metadata":{},"sourceType":"module"}