{"ast":null,"code":"var _Alert;\n\nimport React from 'react';\nimport { Alert } from '@grafana/ui';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../utils/datasource';\nimport { CloudReceiverForm } from './form/CloudReceiverForm';\nimport { GrafanaReceiverForm } from './form/GrafanaReceiverForm';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const EditReceiverView = ({\n  config,\n  receiverName,\n  alertManagerSourceName\n}) => {\n  var _config$alertmanager_;\n\n  const receiver = (_config$alertmanager_ = config.alertmanager_config.receivers) === null || _config$alertmanager_ === void 0 ? void 0 : _config$alertmanager_.find(({\n    name\n  }) => name === receiverName);\n\n  if (!receiver) {\n    return _Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n      severity: \"error\",\n      title: \"Receiver not found\",\n      children: \"Sorry, this receiver does not seem to exist.\"\n    }));\n  }\n\n  if (alertManagerSourceName === GRAFANA_RULES_SOURCE_NAME) {\n    return /*#__PURE__*/_jsx(GrafanaReceiverForm, {\n      config: config,\n      alertManagerSourceName: alertManagerSourceName,\n      existing: receiver\n    });\n  } else {\n    return /*#__PURE__*/_jsx(CloudReceiverForm, {\n      config: config,\n      alertManagerSourceName: alertManagerSourceName,\n      existing: receiver\n    });\n  }\n};","map":{"version":3,"names":["React","Alert","GRAFANA_RULES_SOURCE_NAME","CloudReceiverForm","GrafanaReceiverForm","EditReceiverView","config","receiverName","alertManagerSourceName","receiver","alertmanager_config","receivers","find","name"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/receivers/EditReceiverView.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { Alert } from '@grafana/ui';\nimport { AlertManagerCortexConfig } from 'app/plugins/datasource/alertmanager/types';\n\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../utils/datasource';\n\nimport { CloudReceiverForm } from './form/CloudReceiverForm';\nimport { GrafanaReceiverForm } from './form/GrafanaReceiverForm';\n\ninterface Props {\n  receiverName: string;\n  config: AlertManagerCortexConfig;\n  alertManagerSourceName: string;\n}\n\nexport const EditReceiverView: FC<Props> = ({ config, receiverName, alertManagerSourceName }) => {\n  const receiver = config.alertmanager_config.receivers?.find(({ name }) => name === receiverName);\n  if (!receiver) {\n    return (\n      <Alert severity=\"error\" title=\"Receiver not found\">\n        Sorry, this receiver does not seem to exist.\n      </Alert>\n    );\n  }\n\n  if (alertManagerSourceName === GRAFANA_RULES_SOURCE_NAME) {\n    return <GrafanaReceiverForm config={config} alertManagerSourceName={alertManagerSourceName} existing={receiver} />;\n  } else {\n    return <CloudReceiverForm config={config} alertManagerSourceName={alertManagerSourceName} existing={receiver} />;\n  }\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAGA,SAASC,yBAAT,QAA0C,wBAA1C;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,mBAAT,QAAoC,4BAApC;;AAQA,OAAO,MAAMC,gBAA2B,GAAG,CAAC;EAAEC,MAAF;EAAUC,YAAV;EAAwBC;AAAxB,CAAD,KAAsD;EAAA;;EAC/F,MAAMC,QAAQ,4BAAGH,MAAM,CAACI,mBAAP,CAA2BC,SAA9B,0DAAG,sBAAsCC,IAAtC,CAA2C,CAAC;IAAEC;EAAF,CAAD,KAAcA,IAAI,KAAKN,YAAlE,CAAjB;;EACA,IAAI,CAACE,QAAL,EAAe;IACb,wCACE,KAAC,KAAD;MAAO,QAAQ,EAAC,OAAhB;MAAwB,KAAK,EAAC,oBAA9B;MAAA;IAAA,EADF;EAKD;;EAED,IAAID,sBAAsB,KAAKN,yBAA/B,EAA0D;IACxD,oBAAO,KAAC,mBAAD;MAAqB,MAAM,EAAEI,MAA7B;MAAqC,sBAAsB,EAAEE,sBAA7D;MAAqF,QAAQ,EAAEC;IAA/F,EAAP;EACD,CAFD,MAEO;IACL,oBAAO,KAAC,iBAAD;MAAmB,MAAM,EAAEH,MAA3B;MAAmC,sBAAsB,EAAEE,sBAA3D;MAAmF,QAAQ,EAAEC;IAA7F,EAAP;EACD;AACF,CAfM"},"metadata":{},"sourceType":"module"}