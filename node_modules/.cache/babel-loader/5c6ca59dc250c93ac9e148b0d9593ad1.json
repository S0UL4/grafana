{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../Theme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    Divider: css`\n      background: ${autoColor(theme, '#ddd')};\n    `,\n    DividerVertical: css`\n      label: DividerVertical;\n      display: inline-block;\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n    DividerHorizontal: css`\n      label: DividerHorizontal;\n      display: block;\n      height: 1px;\n      width: 100%;\n      margin: 24px 0;\n      clear: both;\n      vertical-align: middle;\n      position: relative;\n      top: -0.06em;\n    `\n  };\n};\n\nexport function Divider({\n  className,\n  style,\n  type\n}) {\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: style,\n    className: cx(styles.Divider, type === 'horizontal' ? styles.DividerHorizontal : styles.DividerVertical, className)\n  });\n}","map":{"version":3,"names":["css","cx","React","useStyles2","autoColor","getStyles","theme","Divider","DividerVertical","DividerHorizontal","className","style","type","styles"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/common/Divider.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    Divider: css`\n      background: ${autoColor(theme, '#ddd')};\n    `,\n\n    DividerVertical: css`\n      label: DividerVertical;\n      display: inline-block;\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n\n    DividerHorizontal: css`\n      label: DividerHorizontal;\n      display: block;\n      height: 1px;\n      width: 100%;\n      margin: 24px 0;\n      clear: both;\n      vertical-align: middle;\n      position: relative;\n      top: -0.06em;\n    `,\n  };\n};\n\ninterface Props {\n  className?: string;\n  style?: React.CSSProperties;\n  type?: 'vertical' | 'horizontal';\n}\nexport function Divider({ className, style, type }: Props) {\n  const styles = useStyles2(getStyles);\n  return (\n    <div\n      style={style}\n      className={cx(\n        styles.Divider,\n        type === 'horizontal' ? styles.DividerHorizontal : styles.DividerVertical,\n        className\n      )}\n    />\n  );\n}\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,OAAO,EAAEP,GAAI;AACjB,oBAAoBI,SAAS,CAACE,KAAD,EAAQ,MAAR,CAAgB;AAC7C,KAHS;IAKLE,eAAe,EAAER,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAZS;IAcLS,iBAAiB,EAAET,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAxBS,CAAP;AA0BD,CA3BD;;AAkCA,OAAO,SAASO,OAAT,CAAiB;EAAEG,SAAF;EAAaC,KAAb;EAAoBC;AAApB,CAAjB,EAAoD;EACzD,MAAMC,MAAM,GAAGV,UAAU,CAACE,SAAD,CAAzB;EACA,oBACE;IACE,KAAK,EAAEM,KADT;IAEE,SAAS,EAAEV,EAAE,CACXY,MAAM,CAACN,OADI,EAEXK,IAAI,KAAK,YAAT,GAAwBC,MAAM,CAACJ,iBAA/B,GAAmDI,MAAM,CAACL,eAF/C,EAGXE,SAHW;EAFf,EADF;AAUD"},"metadata":{},"sourceType":"module"}