{"ast":null,"code":"import { useMemo } from 'react';\nimport { timeIntervalToString } from '../utils/alertmanager';\nimport { initialAsyncRequestState } from '../utils/redux';\nimport { useAlertManagerSourceName } from './useAlertManagerSourceName';\nimport { useAlertManagersByPermission } from './useAlertManagerSources';\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\nexport function useMuteTimingOptions() {\n  const alertManagers = useAlertManagersByPermission('notification');\n  const [alertManagerSourceName] = useAlertManagerSourceName(alertManagers);\n  const amConfigs = useUnifiedAlertingSelector(state => state.amConfigs);\n  return useMemo(() => {\n    var _result$alertmanager_, _config$mute_time_int, _config$mute_time_int2;\n\n    const {\n      result\n    } = alertManagerSourceName && amConfigs[alertManagerSourceName] || initialAsyncRequestState;\n    const config = (_result$alertmanager_ = result === null || result === void 0 ? void 0 : result.alertmanager_config) !== null && _result$alertmanager_ !== void 0 ? _result$alertmanager_ : {};\n    const muteTimingsOptions = (_config$mute_time_int = config === null || config === void 0 ? void 0 : (_config$mute_time_int2 = config.mute_time_intervals) === null || _config$mute_time_int2 === void 0 ? void 0 : _config$mute_time_int2.map(value => ({\n      value: value.name,\n      label: value.name,\n      description: value.time_intervals.map(interval => timeIntervalToString(interval)).join(', AND ')\n    }))) !== null && _config$mute_time_int !== void 0 ? _config$mute_time_int : [];\n    return muteTimingsOptions;\n  }, [alertManagerSourceName, amConfigs]);\n}","map":{"version":3,"names":["useMemo","timeIntervalToString","initialAsyncRequestState","useAlertManagerSourceName","useAlertManagersByPermission","useUnifiedAlertingSelector","useMuteTimingOptions","alertManagers","alertManagerSourceName","amConfigs","state","result","config","alertmanager_config","muteTimingsOptions","mute_time_intervals","map","value","name","label","description","time_intervals","interval","join"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/hooks/useMuteTimingOptions.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { AlertmanagerConfig } from 'app/plugins/datasource/alertmanager/types';\n\nimport { timeIntervalToString } from '../utils/alertmanager';\nimport { initialAsyncRequestState } from '../utils/redux';\n\nimport { useAlertManagerSourceName } from './useAlertManagerSourceName';\nimport { useAlertManagersByPermission } from './useAlertManagerSources';\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\nexport function useMuteTimingOptions(): Array<SelectableValue<string>> {\n  const alertManagers = useAlertManagersByPermission('notification');\n  const [alertManagerSourceName] = useAlertManagerSourceName(alertManagers);\n  const amConfigs = useUnifiedAlertingSelector((state) => state.amConfigs);\n\n  return useMemo(() => {\n    const { result } = (alertManagerSourceName && amConfigs[alertManagerSourceName]) || initialAsyncRequestState;\n    const config: AlertmanagerConfig = result?.alertmanager_config ?? {};\n\n    const muteTimingsOptions: Array<SelectableValue<string>> =\n      config?.mute_time_intervals?.map((value) => ({\n        value: value.name,\n        label: value.name,\n        description: value.time_intervals.map((interval) => timeIntervalToString(interval)).join(', AND '),\n      })) ?? [];\n\n    return muteTimingsOptions;\n  }, [alertManagerSourceName, amConfigs]);\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAKA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,wBAAT,QAAyC,gBAAzC;AAEA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,4BAAT,QAA6C,0BAA7C;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,OAAO,SAASC,oBAAT,GAAgE;EACrE,MAAMC,aAAa,GAAGH,4BAA4B,CAAC,cAAD,CAAlD;EACA,MAAM,CAACI,sBAAD,IAA2BL,yBAAyB,CAACI,aAAD,CAA1D;EACA,MAAME,SAAS,GAAGJ,0BAA0B,CAAEK,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA5C;EAEA,OAAOT,OAAO,CAAC,MAAM;IAAA;;IACnB,MAAM;MAAEW;IAAF,IAAcH,sBAAsB,IAAIC,SAAS,CAACD,sBAAD,CAApC,IAAiEN,wBAApF;IACA,MAAMU,MAA0B,4BAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,mBAAX,yEAAkC,EAAlE;IAEA,MAAMC,kBAAkD,4BACtDF,MADsD,aACtDA,MADsD,iDACtDA,MAAM,CAAEG,mBAD8C,2DACtD,uBAA6BC,GAA7B,CAAkCC,KAAD,KAAY;MAC3CA,KAAK,EAAEA,KAAK,CAACC,IAD8B;MAE3CC,KAAK,EAAEF,KAAK,CAACC,IAF8B;MAG3CE,WAAW,EAAEH,KAAK,CAACI,cAAN,CAAqBL,GAArB,CAA0BM,QAAD,IAAcrB,oBAAoB,CAACqB,QAAD,CAA3D,EAAuEC,IAAvE,CAA4E,QAA5E;IAH8B,CAAZ,CAAjC,CADsD,yEAK/C,EALT;IAOA,OAAOT,kBAAP;EACD,CAZa,EAYX,CAACN,sBAAD,EAAyBC,SAAzB,CAZW,CAAd;AAaD"},"metadata":{},"sourceType":"module"}