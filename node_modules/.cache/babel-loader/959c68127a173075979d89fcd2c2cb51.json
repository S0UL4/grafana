{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\nimport { Subscription } from 'rxjs';\nimport { config } from '@grafana/runtime';\nimport { Tab, TabContent, TabsBar, useForceUpdate, useStyles2 } from '@grafana/ui';\nimport AlertTabIndex from 'app/features/alerting/AlertTabIndex';\nimport { PanelAlertTab } from 'app/features/alerting/unified/PanelAlertTab';\nimport { PanelQueriesChangedEvent, PanelTransformationsChangedEvent } from 'app/types/events';\nimport { TransformationsEditor } from '../TransformationsEditor/TransformationsEditor';\nimport { PanelEditorQueries } from './PanelEditorQueries';\nimport { PanelEditorTabId } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const PanelEditorTabs = /*#__PURE__*/React.memo(({\n  panel,\n  dashboard,\n  tabs,\n  onChangeTab\n}) => {\n  const forceUpdate = useForceUpdate();\n  const styles = useStyles2(getStyles);\n  useEffect(() => {\n    const eventSubs = new Subscription();\n    eventSubs.add(panel.events.subscribe(PanelQueriesChangedEvent, forceUpdate));\n    eventSubs.add(panel.events.subscribe(PanelTransformationsChangedEvent, forceUpdate));\n    return () => eventSubs.unsubscribe();\n  }, [panel, dashboard, forceUpdate]);\n  const activeTab = tabs.find(item => item.active);\n\n  if (tabs.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(TabsBar, {\n      className: styles.tabBar,\n      hideBorder: true,\n      children: tabs.map(tab => {\n        if (tab.id === PanelEditorTabId.Alert) {\n          return renderAlertTab(tab, panel, dashboard, onChangeTab);\n        }\n\n        return /*#__PURE__*/_jsx(Tab, {\n          label: tab.text,\n          active: tab.active,\n          onChangeTab: () => onChangeTab(tab),\n          icon: tab.icon,\n          counter: getCounter(panel, tab)\n        }, tab.id);\n      })\n    }), /*#__PURE__*/_jsxs(TabContent, {\n      className: styles.tabContent,\n      children: [activeTab.id === PanelEditorTabId.Query && /*#__PURE__*/_jsx(PanelEditorQueries, {\n        panel: panel,\n        queries: panel.targets\n      }), activeTab.id === PanelEditorTabId.Alert && /*#__PURE__*/_jsx(AlertTabIndex, {\n        panel: panel,\n        dashboard: dashboard\n      }), activeTab.id === PanelEditorTabId.Transform && /*#__PURE__*/_jsx(TransformationsEditor, {\n        panel: panel\n      })]\n    })]\n  });\n});\nPanelEditorTabs.displayName = 'PanelEditorTabs';\n\nfunction getCounter(panel, tab) {\n  var _panel$getTransformat;\n\n  switch (tab.id) {\n    case PanelEditorTabId.Query:\n      return panel.targets.length;\n\n    case PanelEditorTabId.Alert:\n      return panel.alert ? 1 : 0;\n\n    case PanelEditorTabId.Transform:\n      const transformations = (_panel$getTransformat = panel.getTransformations()) !== null && _panel$getTransformat !== void 0 ? _panel$getTransformat : [];\n      return transformations.length;\n  }\n\n  return null;\n}\n\nfunction renderAlertTab(tab, panel, dashboard, onChangeTab) {\n  const alertingDisabled = !config.alertingEnabled && !config.unifiedAlertingEnabled;\n\n  if (alertingDisabled) {\n    return null;\n  }\n\n  if (config.unifiedAlertingEnabled) {\n    return /*#__PURE__*/_jsx(PanelAlertTab, {\n      label: tab.text,\n      active: tab.active,\n      onChangeTab: () => onChangeTab(tab),\n      icon: tab.icon,\n      panel: panel,\n      dashboard: dashboard\n    }, tab.id);\n  }\n\n  if (config.alertingEnabled) {\n    return /*#__PURE__*/_jsx(Tab, {\n      label: tab.text,\n      active: tab.active,\n      onChangeTab: () => onChangeTab(tab),\n      icon: tab.icon,\n      counter: getCounter(panel, tab)\n    }, tab.id);\n  }\n\n  return null;\n}\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    `,\n    tabBar: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    tabContent: css`\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n      flex-grow: 1;\n      min-height: 0;\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.components.panel.borderColor};\n      border-left: none;\n      border-bottom: none;\n      border-top-right-radius: ${theme.shape.borderRadius(1.5)};\n    `\n  };\n};","map":{"version":3,"names":["css","React","useEffect","Subscription","config","Tab","TabContent","TabsBar","useForceUpdate","useStyles2","AlertTabIndex","PanelAlertTab","PanelQueriesChangedEvent","PanelTransformationsChangedEvent","TransformationsEditor","PanelEditorQueries","PanelEditorTabId","PanelEditorTabs","memo","panel","dashboard","tabs","onChangeTab","forceUpdate","styles","getStyles","eventSubs","add","events","subscribe","unsubscribe","activeTab","find","item","active","length","wrapper","tabBar","map","tab","id","Alert","renderAlertTab","text","icon","getCounter","tabContent","Query","targets","Transform","displayName","alert","transformations","getTransformations","alertingDisabled","alertingEnabled","unifiedAlertingEnabled","theme","spacing","colors","background","primary","components","borderColor","shape","borderRadius"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/PanelEditorTabs.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useEffect } from 'react';\nimport { Subscription } from 'rxjs';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { IconName, Tab, TabContent, TabsBar, useForceUpdate, useStyles2 } from '@grafana/ui';\nimport AlertTabIndex from 'app/features/alerting/AlertTabIndex';\nimport { PanelAlertTab } from 'app/features/alerting/unified/PanelAlertTab';\nimport { PanelQueriesChangedEvent, PanelTransformationsChangedEvent } from 'app/types/events';\n\nimport { DashboardModel, PanelModel } from '../../state';\nimport { TransformationsEditor } from '../TransformationsEditor/TransformationsEditor';\n\nimport { PanelEditorQueries } from './PanelEditorQueries';\nimport { PanelEditorTab, PanelEditorTabId } from './types';\n\ninterface PanelEditorTabsProps {\n  panel: PanelModel;\n  dashboard: DashboardModel;\n  tabs: PanelEditorTab[];\n  onChangeTab: (tab: PanelEditorTab) => void;\n}\n\nexport const PanelEditorTabs: FC<PanelEditorTabsProps> = React.memo(({ panel, dashboard, tabs, onChangeTab }) => {\n  const forceUpdate = useForceUpdate();\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    const eventSubs = new Subscription();\n    eventSubs.add(panel.events.subscribe(PanelQueriesChangedEvent, forceUpdate));\n    eventSubs.add(panel.events.subscribe(PanelTransformationsChangedEvent, forceUpdate));\n    return () => eventSubs.unsubscribe();\n  }, [panel, dashboard, forceUpdate]);\n\n  const activeTab = tabs.find((item) => item.active)!;\n\n  if (tabs.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <TabsBar className={styles.tabBar} hideBorder>\n        {tabs.map((tab) => {\n          if (tab.id === PanelEditorTabId.Alert) {\n            return renderAlertTab(tab, panel, dashboard, onChangeTab);\n          }\n          return (\n            <Tab\n              key={tab.id}\n              label={tab.text}\n              active={tab.active}\n              onChangeTab={() => onChangeTab(tab)}\n              icon={tab.icon as IconName}\n              counter={getCounter(panel, tab)}\n            />\n          );\n        })}\n      </TabsBar>\n      <TabContent className={styles.tabContent}>\n        {activeTab.id === PanelEditorTabId.Query && <PanelEditorQueries panel={panel} queries={panel.targets} />}\n        {activeTab.id === PanelEditorTabId.Alert && <AlertTabIndex panel={panel} dashboard={dashboard} />}\n        {activeTab.id === PanelEditorTabId.Transform && <TransformationsEditor panel={panel} />}\n      </TabContent>\n    </div>\n  );\n});\n\nPanelEditorTabs.displayName = 'PanelEditorTabs';\n\nfunction getCounter(panel: PanelModel, tab: PanelEditorTab) {\n  switch (tab.id) {\n    case PanelEditorTabId.Query:\n      return panel.targets.length;\n    case PanelEditorTabId.Alert:\n      return panel.alert ? 1 : 0;\n    case PanelEditorTabId.Transform:\n      const transformations = panel.getTransformations() ?? [];\n      return transformations.length;\n  }\n\n  return null;\n}\n\nfunction renderAlertTab(\n  tab: PanelEditorTab,\n  panel: PanelModel,\n  dashboard: DashboardModel,\n  onChangeTab: (tab: PanelEditorTab) => void\n) {\n  const alertingDisabled = !config.alertingEnabled && !config.unifiedAlertingEnabled;\n\n  if (alertingDisabled) {\n    return null;\n  }\n\n  if (config.unifiedAlertingEnabled) {\n    return (\n      <PanelAlertTab\n        key={tab.id}\n        label={tab.text}\n        active={tab.active}\n        onChangeTab={() => onChangeTab(tab)}\n        icon={tab.icon as IconName}\n        panel={panel}\n        dashboard={dashboard}\n      />\n    );\n  }\n\n  if (config.alertingEnabled) {\n    return (\n      <Tab\n        key={tab.id}\n        label={tab.text}\n        active={tab.active}\n        onChangeTab={() => onChangeTab(tab)}\n        icon={tab.icon as IconName}\n        counter={getCounter(panel, tab)}\n      />\n    );\n  }\n\n  return null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    `,\n    tabBar: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    tabContent: css`\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n      flex-grow: 1;\n      min-height: 0;\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.components.panel.borderColor};\n      border-left: none;\n      border-bottom: none;\n      border-top-right-radius: ${theme.shape.borderRadius(1.5)};\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}