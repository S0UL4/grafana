{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchGrafanaAnnotationsAction } from '../state/actions';\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\nexport function useManagedAlertStateHistory(alertId) {\n  const dispatch = useDispatch();\n  const history = useUnifiedAlertingSelector(state => state.managedAlertStateHistory);\n  useEffect(() => {\n    dispatch(fetchGrafanaAnnotationsAction(alertId));\n  }, [dispatch, alertId]);\n  return history;\n}","map":{"version":3,"names":["useEffect","useDispatch","fetchGrafanaAnnotationsAction","useUnifiedAlertingSelector","useManagedAlertStateHistory","alertId","dispatch","history","state","managedAlertStateHistory"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/hooks/useManagedAlertStateHistory.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { StateHistoryItem } from 'app/types/unified-alerting';\n\nimport { fetchGrafanaAnnotationsAction } from '../state/actions';\nimport { AsyncRequestState } from '../utils/redux';\n\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\nexport function useManagedAlertStateHistory(alertId: string) {\n  const dispatch = useDispatch();\n  const history = useUnifiedAlertingSelector<AsyncRequestState<StateHistoryItem[]>>(\n    (state) => state.managedAlertStateHistory\n  );\n\n  useEffect(() => {\n    dispatch(fetchGrafanaAnnotationsAction(alertId));\n  }, [dispatch, alertId]);\n\n  return history;\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,SAASC,6BAAT,QAA8C,kBAA9C;AAGA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,OAAO,SAASC,2BAAT,CAAqCC,OAArC,EAAsD;EAC3D,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,OAAO,GAAGJ,0BAA0B,CACvCK,KAAD,IAAWA,KAAK,CAACC,wBADuB,CAA1C;EAIAT,SAAS,CAAC,MAAM;IACdM,QAAQ,CAACJ,6BAA6B,CAACG,OAAD,CAA9B,CAAR;EACD,CAFQ,EAEN,CAACC,QAAD,EAAWD,OAAX,CAFM,CAAT;EAIA,OAAOE,OAAP;AACD"},"metadata":{},"sourceType":"module"}