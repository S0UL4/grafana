{"ast":null,"code":"const _excluded = [\"label\", \"description\", \"horizontal\", \"invalid\", \"loading\", \"disabled\", \"required\", \"error\", \"children\", \"className\", \"validationMessageHorizontalOverflow\", \"htmlFor\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { Label } from './Label';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const getFieldStyles = stylesFactory(theme => {\n  return {\n    field: css`\n      display: flex;\n      flex-direction: column;\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    fieldHorizontal: css`\n      flex-direction: row;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    fieldValidationWrapper: css`\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    fieldValidationWrapperHorizontal: css`\n      flex: 1 1 100%;\n    `,\n    validationMessageHorizontalOverflow: css`\n      width: 0;\n      overflow-x: visible;\n\n      & > * {\n        white-space: nowrap;\n      }\n    `\n  };\n});\nexport const Field = _ref => {\n  let {\n    label,\n    description,\n    horizontal,\n    invalid,\n    loading,\n    disabled,\n    required,\n    error,\n    children,\n    className,\n    validationMessageHorizontalOverflow,\n    htmlFor\n  } = _ref,\n      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme2();\n  const styles = getFieldStyles(theme);\n  const inputId = htmlFor !== null && htmlFor !== void 0 ? htmlFor : getChildId(children);\n  const labelElement = typeof label === 'string' ? /*#__PURE__*/_jsx(Label, {\n    htmlFor: inputId,\n    description: description,\n    children: `${label}${required ? ' *' : ''}`\n  }) : label;\n  const childProps = deleteUndefinedProps({\n    invalid,\n    disabled,\n    loading\n  });\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({\n    className: cx(styles.field, horizontal && styles.fieldHorizontal, className)\n  }, otherProps, {\n    children: [labelElement, /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/React.cloneElement(children, childProps), invalid && error && !horizontal && /*#__PURE__*/_jsx(\"div\", {\n        className: cx(styles.fieldValidationWrapper, {\n          [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow\n        }),\n        children: /*#__PURE__*/_jsx(FieldValidationMessage, {\n          children: error\n        })\n      })]\n    }), invalid && error && horizontal && /*#__PURE__*/_jsx(\"div\", {\n      className: cx(styles.fieldValidationWrapper, styles.fieldValidationWrapperHorizontal, {\n        [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow\n      }),\n      children: /*#__PURE__*/_jsx(FieldValidationMessage, {\n        children: error\n      })\n    })]\n  }));\n};\n\nfunction deleteUndefinedProps(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"names":["css","cx","React","stylesFactory","useTheme2","getChildId","FieldValidationMessage","Label","getFieldStyles","theme","field","spacing","fieldHorizontal","fieldValidationWrapper","fieldValidationWrapperHorizontal","validationMessageHorizontalOverflow","Field","label","description","horizontal","invalid","loading","disabled","required","error","children","className","htmlFor","otherProps","styles","inputId","labelElement","childProps","deleteUndefinedProps","cloneElement","obj","key","undefined"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/Field.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\n\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { Label } from './Label';\n\nexport interface FieldProps extends HTMLAttributes<HTMLDivElement> {\n  /** Form input element, i.e Input or Switch */\n  children: React.ReactElement;\n  /** Label for the field */\n  label?: React.ReactNode;\n  /** Description of the field */\n  description?: React.ReactNode;\n  /** Indicates if field is in invalid state */\n  invalid?: boolean;\n  /** Indicates if field is in loading state */\n  loading?: boolean;\n  /** Indicates if field is disabled */\n  disabled?: boolean;\n  /** Indicates if field is required */\n  required?: boolean;\n  /** Error message to display */\n  error?: React.ReactNode;\n  /** Indicates horizontal layout of the field */\n  horizontal?: boolean;\n  /** make validation message overflow horizontally. Prevents pushing out adjacent inline components */\n  validationMessageHorizontalOverflow?: boolean;\n\n  className?: string;\n  /**\n   *  A unique id that associates the label of the Field component with the control with the unique id.\n   *  If the `htmlFor` property is missing the `htmlFor` will be inferred from the `id` or `inputId` property of the first child.\n   *  https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#attr-for\n   */\n  htmlFor?: string;\n}\n\nexport const getFieldStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    field: css`\n      display: flex;\n      flex-direction: column;\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    fieldHorizontal: css`\n      flex-direction: row;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    fieldValidationWrapper: css`\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    fieldValidationWrapperHorizontal: css`\n      flex: 1 1 100%;\n    `,\n    validationMessageHorizontalOverflow: css`\n      width: 0;\n      overflow-x: visible;\n\n      & > * {\n        white-space: nowrap;\n      }\n    `,\n  };\n});\n\nexport const Field: React.FC<FieldProps> = ({\n  label,\n  description,\n  horizontal,\n  invalid,\n  loading,\n  disabled,\n  required,\n  error,\n  children,\n  className,\n  validationMessageHorizontalOverflow,\n  htmlFor,\n  ...otherProps\n}) => {\n  const theme = useTheme2();\n  const styles = getFieldStyles(theme);\n  const inputId = htmlFor ?? getChildId(children);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <Label htmlFor={inputId} description={description}>\n        {`${label}${required ? ' *' : ''}`}\n      </Label>\n    ) : (\n      label\n    );\n\n  const childProps = deleteUndefinedProps({ invalid, disabled, loading });\n  return (\n    <div className={cx(styles.field, horizontal && styles.fieldHorizontal, className)} {...otherProps}>\n      {labelElement}\n      <div>\n        {React.cloneElement(children, childProps)}\n        {invalid && error && !horizontal && (\n          <div\n            className={cx(styles.fieldValidationWrapper, {\n              [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow,\n            })}\n          >\n            <FieldValidationMessage>{error}</FieldValidationMessage>\n          </div>\n        )}\n      </div>\n\n      {invalid && error && horizontal && (\n        <div\n          className={cx(styles.fieldValidationWrapper, styles.fieldValidationWrapperHorizontal, {\n            [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow,\n          })}\n        >\n          <FieldValidationMessage>{error}</FieldValidationMessage>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction deleteUndefinedProps<T extends Object>(obj: T): Partial<T> {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}