{"ast":null,"code":"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Page from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AlertingPageWrapper = ({\n  children,\n  pageId,\n  isLoading\n}) => {\n  const navModel = getNavModel(useSelector(state => state.navIndex), pageId);\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsx(Page.Contents, {\n      isLoading: isLoading,\n      children: children\n    })\n  });\n};","map":{"version":3,"names":["React","useSelector","Page","getNavModel","AlertingPageWrapper","children","pageId","isLoading","navModel","state","navIndex"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/AlertingPageWrapper.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Page from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types/store';\n\ninterface Props {\n  pageId: string;\n  isLoading?: boolean;\n}\n\nexport const AlertingPageWrapper: FC<Props> = ({ children, pageId, isLoading }) => {\n  const navModel = getNavModel(\n    useSelector((state: StoreState) => state.navIndex),\n    pageId\n  );\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents isLoading={isLoading}>{children}</Page.Contents>\n    </Page>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAQA,OAAO,MAAMC,mBAA8B,GAAG,CAAC;EAAEC,QAAF;EAAYC,MAAZ;EAAoBC;AAApB,CAAD,KAAqC;EACjF,MAAMC,QAAQ,GAAGL,WAAW,CAC1BF,WAAW,CAAEQ,KAAD,IAAuBA,KAAK,CAACC,QAA9B,CADe,EAE1BJ,MAF0B,CAA5B;EAKA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEE,QAAhB;IAAA,uBACE,KAAC,IAAD,CAAM,QAAN;MAAe,SAAS,EAAED,SAA1B;MAAA,UAAsCF;IAAtC;EADF,EADF;AAKD,CAXM"},"metadata":{},"sourceType":"module"}