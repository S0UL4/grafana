{"ast":null,"code":"var _Icon, _Icon2;\n\nconst _excluded = [\"key\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles2 } from '../../themes';\nimport { getFieldTypeIcon } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { Filter } from './Filter';\nimport { getTableStyles } from './styles';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const HeaderRow = props => {\n  const {\n    headerGroups,\n    showTypeIcons\n  } = props;\n  const e2eSelectorsTable = selectors.components.Panels.Visualization.Table;\n  const tableStyles = useStyles2(getTableStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"rowgroup\",\n    children: headerGroups.map(headerGroup => {\n      const _headerGroup$getHeade = headerGroup.getHeaderGroupProps(),\n            {\n        key\n      } = _headerGroup$getHeade,\n            headerGroupProps = _objectWithoutPropertiesLoose(_headerGroup$getHeade, _excluded);\n\n      return /*#__PURE__*/_createElement(\"div\", Object.assign({\n        className: tableStyles.thead\n      }, headerGroupProps, {\n        key: key,\n        \"aria-label\": e2eSelectorsTable.header,\n        role: \"row\"\n      }), headerGroup.headers.map((column, index) => renderHeaderCell(column, tableStyles, showTypeIcons)));\n    })\n  });\n};\n\nfunction renderHeaderCell(column, tableStyles, showTypeIcons) {\n  var _column$field;\n\n  const headerProps = column.getHeaderProps();\n  const field = (_column$field = column.field) !== null && _column$field !== void 0 ? _column$field : null;\n\n  if (column.canResize) {\n    headerProps.style.userSelect = column.isResizing ? 'none' : 'auto'; // disables selecting text while resizing\n  }\n\n  headerProps.style.position = 'absolute';\n  headerProps.style.justifyContent = column.justifyContent;\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({\n    className: tableStyles.headerCell\n  }, headerProps, {\n    role: \"columnheader\",\n    children: [column.canSort && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"button\", Object.assign({}, column.getSortByToggleProps(), {\n        className: tableStyles.headerCellLabel,\n        children: [showTypeIcons && /*#__PURE__*/_jsx(Icon, {\n          name: getFieldTypeIcon(field),\n          title: field === null || field === void 0 ? void 0 : field.type,\n          size: \"sm\",\n          className: tableStyles.typeIcon\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: column.render('Header')\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: column.isSorted && (column.isSortedDesc ? _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n            name: \"arrow-down\"\n          })) : _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n            name: \"arrow-up\"\n          })))\n        })]\n      })), column.canFilter && /*#__PURE__*/_jsx(Filter, {\n        column: column,\n        tableStyles: tableStyles,\n        field: field\n      })]\n    }), !column.canSort && column.render('Header'), !column.canSort && column.canFilter && /*#__PURE__*/_jsx(Filter, {\n      column: column,\n      tableStyles: tableStyles,\n      field: field\n    }), column.canResize && /*#__PURE__*/_jsx(\"div\", Object.assign({}, column.getResizerProps(), {\n      className: tableStyles.resizeHandle\n    }))]\n  }));\n}","map":{"version":3,"names":["React","selectors","useStyles2","getFieldTypeIcon","Icon","Filter","getTableStyles","HeaderRow","props","headerGroups","showTypeIcons","e2eSelectorsTable","components","Panels","Visualization","Table","tableStyles","map","headerGroup","getHeaderGroupProps","key","headerGroupProps","thead","header","headers","column","index","renderHeaderCell","headerProps","getHeaderProps","field","canResize","style","userSelect","isResizing","position","justifyContent","headerCell","canSort","getSortByToggleProps","headerCellLabel","type","typeIcon","render","isSorted","isSortedDesc","canFilter","getResizerProps","resizeHandle"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/HeaderRow.tsx"],"sourcesContent":["import React from 'react';\nimport { HeaderGroup, Column } from 'react-table';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { getFieldTypeIcon } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { Filter } from './Filter';\nimport { getTableStyles, TableStyles } from './styles';\n\nexport interface HeaderRowProps {\n  headerGroups: HeaderGroup[];\n  showTypeIcons?: boolean;\n}\n\nexport const HeaderRow = (props: HeaderRowProps) => {\n  const { headerGroups, showTypeIcons } = props;\n  const e2eSelectorsTable = selectors.components.Panels.Visualization.Table;\n  const tableStyles = useStyles2(getTableStyles);\n\n  return (\n    <div role=\"rowgroup\">\n      {headerGroups.map((headerGroup: HeaderGroup) => {\n        const { key, ...headerGroupProps } = headerGroup.getHeaderGroupProps();\n        return (\n          <div\n            className={tableStyles.thead}\n            {...headerGroupProps}\n            key={key}\n            aria-label={e2eSelectorsTable.header}\n            role=\"row\"\n          >\n            {headerGroup.headers.map((column: Column, index: number) =>\n              renderHeaderCell(column, tableStyles, showTypeIcons)\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction renderHeaderCell(column: any, tableStyles: TableStyles, showTypeIcons?: boolean) {\n  const headerProps = column.getHeaderProps();\n  const field = column.field ?? null;\n\n  if (column.canResize) {\n    headerProps.style.userSelect = column.isResizing ? 'none' : 'auto'; // disables selecting text while resizing\n  }\n\n  headerProps.style.position = 'absolute';\n  headerProps.style.justifyContent = (column as any).justifyContent;\n\n  return (\n    <div className={tableStyles.headerCell} {...headerProps} role=\"columnheader\">\n      {column.canSort && (\n        <>\n          <button {...column.getSortByToggleProps()} className={tableStyles.headerCellLabel}>\n            {showTypeIcons && (\n              <Icon name={getFieldTypeIcon(field)} title={field?.type} size=\"sm\" className={tableStyles.typeIcon} />\n            )}\n            <div>{column.render('Header')}</div>\n            <div>\n              {column.isSorted && (column.isSortedDesc ? <Icon name=\"arrow-down\" /> : <Icon name=\"arrow-up\" />)}\n            </div>\n          </button>\n          {column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n        </>\n      )}\n      {!column.canSort && column.render('Header')}\n      {!column.canSort && column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n      {column.canResize && <div {...column.getResizerProps()} className={tableStyles.resizeHandle} />}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}