{"ast":null,"code":"import { map } from 'lodash';\nimport { rangeUtil } from '@grafana/data';\nimport TimegrainConverter from '../time_grain_converter';\nexport const hasOption = (options, value) => options.some(v => v.options ? hasOption(v.options, value) : v.value === value);\nexport const findOptions = (options, values = []) => {\n  if (values.length === 0) {\n    return [];\n  }\n\n  const set = values.reduce((accum, item) => {\n    accum.add(item);\n    return accum;\n  }, new Set());\n  return options.filter(option => set.has(option.value));\n};\nexport const toOption = v => ({\n  value: v.value,\n  label: v.text\n});\nexport function convertTimeGrainsToMs(timeGrains) {\n  const allowedTimeGrainsMs = [];\n  timeGrains.forEach(tg => {\n    if (tg.value !== 'auto') {\n      allowedTimeGrainsMs.push(rangeUtil.intervalToMs(TimegrainConverter.createKbnUnitFromISO8601Duration(tg.value)));\n    }\n  });\n  return allowedTimeGrainsMs;\n} // Route definitions shared with the backend.\n// Check: /pkg/tsdb/azuremonitor/azuremonitor-resource-handler.go <registerRoutes>\n\nexport const routeNames = {\n  azureMonitor: 'azuremonitor',\n  logAnalytics: 'loganalytics',\n  appInsights: 'appinsights',\n  resourceGraph: 'resourcegraph'\n};\nexport function interpolateVariable(value, variable) {\n  if (typeof value === 'string') {\n    // When enabling multiple responses, quote the value to mimic the array result below\n    // even if only one response is selected. This does not apply if only the \"include all\"\n    // option is enabled but with a custom value.\n    if (variable.multi || variable.includeAll && !variable.allValue) {\n      return \"'\" + value + \"'\";\n    } else {\n      return value;\n    }\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  const quotedValues = map(value, val => {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return \"'\" + val + \"'\";\n  });\n  return quotedValues.join(',');\n}","map":{"version":3,"names":["map","rangeUtil","TimegrainConverter","hasOption","options","value","some","v","findOptions","values","length","set","reduce","accum","item","add","Set","filter","option","has","toOption","label","text","convertTimeGrainsToMs","timeGrains","allowedTimeGrainsMs","forEach","tg","push","intervalToMs","createKbnUnitFromISO8601Duration","routeNames","azureMonitor","logAnalytics","appInsights","resourceGraph","interpolateVariable","variable","multi","includeAll","allValue","quotedValues","val","join"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/common.ts"],"sourcesContent":["import { map } from 'lodash';\n\nimport { rangeUtil } from '@grafana/data';\nimport { VariableWithMultiSupport } from 'app/features/variables/types';\n\nimport TimegrainConverter from '../time_grain_converter';\nimport { AzureMonitorOption } from '../types';\n\nexport const hasOption = (options: AzureMonitorOption[], value: string): boolean =>\n  options.some((v) => (v.options ? hasOption(v.options, value) : v.value === value));\n\nexport const findOptions = (options: AzureMonitorOption[], values: string[] = []) => {\n  if (values.length === 0) {\n    return [];\n  }\n  const set = values.reduce((accum, item) => {\n    accum.add(item);\n    return accum;\n  }, new Set());\n  return options.filter((option) => set.has(option.value));\n};\n\nexport const toOption = (v: { text: string; value: string }) => ({ value: v.value, label: v.text });\n\nexport function convertTimeGrainsToMs<T extends { value: string }>(timeGrains: T[]) {\n  const allowedTimeGrainsMs: number[] = [];\n  timeGrains.forEach((tg: any) => {\n    if (tg.value !== 'auto') {\n      allowedTimeGrainsMs.push(rangeUtil.intervalToMs(TimegrainConverter.createKbnUnitFromISO8601Duration(tg.value)));\n    }\n  });\n  return allowedTimeGrainsMs;\n}\n\n// Route definitions shared with the backend.\n// Check: /pkg/tsdb/azuremonitor/azuremonitor-resource-handler.go <registerRoutes>\nexport const routeNames = {\n  azureMonitor: 'azuremonitor',\n  logAnalytics: 'loganalytics',\n  appInsights: 'appinsights',\n  resourceGraph: 'resourcegraph',\n};\n\nexport function interpolateVariable(value: any, variable: VariableWithMultiSupport) {\n  if (typeof value === 'string') {\n    // When enabling multiple responses, quote the value to mimic the array result below\n    // even if only one response is selected. This does not apply if only the \"include all\"\n    // option is enabled but with a custom value.\n    if (variable.multi || (variable.includeAll && !variable.allValue)) {\n      return \"'\" + value + \"'\";\n    } else {\n      return value;\n    }\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  const quotedValues = map(value, (val) => {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return \"'\" + val + \"'\";\n  });\n  return quotedValues.join(',');\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AAEA,SAASC,SAAT,QAA0B,eAA1B;AAGA,OAAOC,kBAAP,MAA+B,yBAA/B;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,OAAD,EAAgCC,KAAhC,KACvBD,OAAO,CAACE,IAAR,CAAcC,CAAD,IAAQA,CAAC,CAACH,OAAF,GAAYD,SAAS,CAACI,CAAC,CAACH,OAAH,EAAYC,KAAZ,CAArB,GAA0CE,CAAC,CAACF,KAAF,KAAYA,KAA3E,CADK;AAGP,OAAO,MAAMG,WAAW,GAAG,CAACJ,OAAD,EAAgCK,MAAgB,GAAG,EAAnD,KAA0D;EACnF,IAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;IACvB,OAAO,EAAP;EACD;;EACD,MAAMC,GAAG,GAAGF,MAAM,CAACG,MAAP,CAAc,CAACC,KAAD,EAAQC,IAAR,KAAiB;IACzCD,KAAK,CAACE,GAAN,CAAUD,IAAV;IACA,OAAOD,KAAP;EACD,CAHW,EAGT,IAAIG,GAAJ,EAHS,CAAZ;EAIA,OAAOZ,OAAO,CAACa,MAAR,CAAgBC,MAAD,IAAYP,GAAG,CAACQ,GAAJ,CAAQD,MAAM,CAACb,KAAf,CAA3B,CAAP;AACD,CATM;AAWP,OAAO,MAAMe,QAAQ,GAAIb,CAAD,KAAyC;EAAEF,KAAK,EAAEE,CAAC,CAACF,KAAX;EAAkBgB,KAAK,EAAEd,CAAC,CAACe;AAA3B,CAAzC,CAAjB;AAEP,OAAO,SAASC,qBAAT,CAA4DC,UAA5D,EAA6E;EAClF,MAAMC,mBAA6B,GAAG,EAAtC;EACAD,UAAU,CAACE,OAAX,CAAoBC,EAAD,IAAa;IAC9B,IAAIA,EAAE,CAACtB,KAAH,KAAa,MAAjB,EAAyB;MACvBoB,mBAAmB,CAACG,IAApB,CAAyB3B,SAAS,CAAC4B,YAAV,CAAuB3B,kBAAkB,CAAC4B,gCAAnB,CAAoDH,EAAE,CAACtB,KAAvD,CAAvB,CAAzB;IACD;EACF,CAJD;EAKA,OAAOoB,mBAAP;AACD,C,CAED;AACA;;AACA,OAAO,MAAMM,UAAU,GAAG;EACxBC,YAAY,EAAE,cADU;EAExBC,YAAY,EAAE,cAFU;EAGxBC,WAAW,EAAE,aAHW;EAIxBC,aAAa,EAAE;AAJS,CAAnB;AAOP,OAAO,SAASC,mBAAT,CAA6B/B,KAA7B,EAAyCgC,QAAzC,EAA6E;EAClF,IAAI,OAAOhC,KAAP,KAAiB,QAArB,EAA+B;IAC7B;IACA;IACA;IACA,IAAIgC,QAAQ,CAACC,KAAT,IAAmBD,QAAQ,CAACE,UAAT,IAAuB,CAACF,QAAQ,CAACG,QAAxD,EAAmE;MACjE,OAAO,MAAMnC,KAAN,GAAc,GAArB;IACD,CAFD,MAEO;MACL,OAAOA,KAAP;IACD;EACF;;EAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOA,KAAP;EACD;;EAED,MAAMoC,YAAY,GAAGzC,GAAG,CAACK,KAAD,EAASqC,GAAD,IAAS;IACvC,IAAI,OAAOrC,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOA,KAAP;IACD;;IAED,OAAO,MAAMqC,GAAN,GAAY,GAAnB;EACD,CANuB,CAAxB;EAOA,OAAOD,YAAY,CAACE,IAAb,CAAkB,GAAlB,CAAP;AACD"},"metadata":{},"sourceType":"module"}