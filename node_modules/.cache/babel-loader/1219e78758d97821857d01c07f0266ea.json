{"ast":null,"code":"const _excluded = [\"title\", \"featureState\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { FeatureState } from '@grafana/data';\nimport { stylesFactory, useStyles } from '../../themes';\nimport { Badge } from '../Badge/Badge';\nimport { InfoBox } from './InfoBox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/** @deprecated use Alert with severity info */\nexport const FeatureInfoBox = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    title,\n    featureState\n  } = _ref,\n      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles(getFeatureInfoBoxStyles);\n  const titleEl = featureState ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.badge,\n      children: /*#__PURE__*/_jsx(FeatureBadge, {\n        featureState: featureState\n      })\n    }), /*#__PURE__*/_jsx(\"h3\", {\n      children: title\n    })]\n  }) : /*#__PURE__*/_jsx(\"h3\", {\n    children: title\n  });\n  return /*#__PURE__*/_jsx(InfoBox, Object.assign({\n    branded: true,\n    title: titleEl,\n    urlTitle: \"Read documentation\",\n    ref: ref\n  }, otherProps));\n}));\nFeatureInfoBox.displayName = 'FeatureInfoBox';\nconst getFeatureInfoBoxStyles = stylesFactory(theme => {\n  return {\n    badge: css`\n      margin-bottom: ${theme.spacing.sm};\n    `\n  };\n});\nexport const FeatureBadge = ({\n  featureState,\n  tooltip\n}) => {\n  const display = getPanelStateBadgeDisplayModel(featureState);\n  return /*#__PURE__*/_jsx(Badge, {\n    text: display.text,\n    color: display.color,\n    icon: display.icon,\n    tooltip: tooltip\n  });\n};\n\nfunction getPanelStateBadgeDisplayModel(featureState) {\n  switch (featureState) {\n    case FeatureState.alpha:\n      return {\n        text: 'Alpha',\n        icon: 'exclamation-triangle',\n        color: 'orange'\n      };\n  }\n\n  return {\n    text: 'Beta',\n    icon: 'rocket',\n    color: 'blue'\n  };\n}","map":{"version":3,"names":["css","React","FeatureState","stylesFactory","useStyles","Badge","InfoBox","FeatureInfoBox","memo","forwardRef","ref","title","featureState","otherProps","styles","getFeatureInfoBoxStyles","titleEl","badge","displayName","theme","spacing","sm","FeatureBadge","tooltip","display","getPanelStateBadgeDisplayModel","text","color","icon","alpha"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/InfoBox/FeatureInfoBox.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { FeatureState, GrafanaTheme } from '@grafana/data';\n\nimport { stylesFactory, useStyles } from '../../themes';\nimport { Badge, BadgeProps } from '../Badge/Badge';\n\nimport { InfoBox, InfoBoxProps } from './InfoBox';\n\nexport interface FeatureInfoBoxProps extends Omit<InfoBoxProps, 'title' | 'urlTitle'> {\n  title: string;\n  featureState?: FeatureState;\n}\n\n/** @deprecated use Alert with severity info */\nexport const FeatureInfoBox = React.memo(\n  React.forwardRef<HTMLDivElement, FeatureInfoBoxProps>(({ title, featureState, ...otherProps }, ref) => {\n    const styles = useStyles(getFeatureInfoBoxStyles);\n\n    const titleEl = featureState ? (\n      <>\n        <div className={styles.badge}>\n          <FeatureBadge featureState={featureState} />\n        </div>\n        <h3>{title}</h3>\n      </>\n    ) : (\n      <h3>{title}</h3>\n    );\n    return <InfoBox branded title={titleEl} urlTitle=\"Read documentation\" ref={ref} {...otherProps} />;\n  })\n);\n\nFeatureInfoBox.displayName = 'FeatureInfoBox';\n\nconst getFeatureInfoBoxStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    badge: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n  };\n});\n\ninterface FeatureBadgeProps {\n  featureState: FeatureState;\n  tooltip?: string;\n}\n\nexport const FeatureBadge: React.FC<FeatureBadgeProps> = ({ featureState, tooltip }) => {\n  const display = getPanelStateBadgeDisplayModel(featureState);\n  return <Badge text={display.text} color={display.color} icon={display.icon} tooltip={tooltip} />;\n};\n\nfunction getPanelStateBadgeDisplayModel(featureState: FeatureState): BadgeProps {\n  switch (featureState) {\n    case FeatureState.alpha:\n      return {\n        text: 'Alpha',\n        icon: 'exclamation-triangle',\n        color: 'orange',\n      };\n  }\n\n  return {\n    text: 'Beta',\n    icon: 'rocket',\n    color: 'blue',\n  };\n}\n"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA2C,eAA3C;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,cAAzC;AACA,SAASC,KAAT,QAAkC,gBAAlC;AAEA,SAASC,OAAT,QAAsC,WAAtC;;;;;AAOA;AACA,OAAO,MAAMC,cAAc,gBAAGN,KAAK,CAACO,IAAN,eAC5BP,KAAK,CAACQ,UAAN,CAAsD,OAAyCC,GAAzC,KAAiD;EAAA,IAAhD;IAAEC,KAAF;IAASC;EAAT,CAAgD;EAAA,IAAtBC,UAAsB;;EACrG,MAAMC,MAAM,GAAGV,SAAS,CAACW,uBAAD,CAAxB;EAEA,MAAMC,OAAO,GAAGJ,YAAY,gBAC1B;IAAA,wBACE;MAAK,SAAS,EAAEE,MAAM,CAACG,KAAvB;MAAA,uBACE,KAAC,YAAD;QAAc,YAAY,EAAEL;MAA5B;IADF,EADF,eAIE;MAAA,UAAKD;IAAL,EAJF;EAAA,EAD0B,gBAQ1B;IAAA,UAAKA;EAAL,EARF;EAUA,oBAAO,KAAC,OAAD;IAAS,OAAO,MAAhB;IAAiB,KAAK,EAAEK,OAAxB;IAAiC,QAAQ,EAAC,oBAA1C;IAA+D,GAAG,EAAEN;EAApE,GAA6EG,UAA7E,EAAP;AACD,CAdD,CAD4B,CAAvB;AAkBPN,cAAc,CAACW,WAAf,GAA6B,gBAA7B;AAEA,MAAMH,uBAAuB,GAAGZ,aAAa,CAAEgB,KAAD,IAAyB;EACrE,OAAO;IACLF,KAAK,EAAEjB,GAAI;AACf,uBAAuBmB,KAAK,CAACC,OAAN,CAAcC,EAAG;AACxC;EAHS,CAAP;AAKD,CAN4C,CAA7C;AAaA,OAAO,MAAMC,YAAyC,GAAG,CAAC;EAAEV,YAAF;EAAgBW;AAAhB,CAAD,KAA+B;EACtF,MAAMC,OAAO,GAAGC,8BAA8B,CAACb,YAAD,CAA9C;EACA,oBAAO,KAAC,KAAD;IAAO,IAAI,EAAEY,OAAO,CAACE,IAArB;IAA2B,KAAK,EAAEF,OAAO,CAACG,KAA1C;IAAiD,IAAI,EAAEH,OAAO,CAACI,IAA/D;IAAqE,OAAO,EAAEL;EAA9E,EAAP;AACD,CAHM;;AAKP,SAASE,8BAAT,CAAwCb,YAAxC,EAAgF;EAC9E,QAAQA,YAAR;IACE,KAAKV,YAAY,CAAC2B,KAAlB;MACE,OAAO;QACLH,IAAI,EAAE,OADD;QAELE,IAAI,EAAE,sBAFD;QAGLD,KAAK,EAAE;MAHF,CAAP;EAFJ;;EASA,OAAO;IACLD,IAAI,EAAE,MADD;IAELE,IAAI,EAAE,QAFD;IAGLD,KAAK,EAAE;EAHF,CAAP;AAKD"},"metadata":{},"sourceType":"module"}