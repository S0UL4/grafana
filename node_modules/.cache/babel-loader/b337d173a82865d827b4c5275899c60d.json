{"ast":null,"code":"import { useCallback, useState } from 'react';\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\n\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set());\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID) {\n    setHoverIndentGuideIds(prevState => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID) {\n    setHoverIndentGuideIds(prevState => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n  return {\n    hoverIndentGuideIds,\n    addHoverIndentGuideId,\n    removeHoverIndentGuideId\n  };\n}","map":{"version":3,"names":["useCallback","useState","useHoverIndentGuide","hoverIndentGuideIds","setHoverIndentGuideIds","Set","addHoverIndentGuideId","spanID","prevState","newHoverIndentGuideIds","add","removeHoverIndentGuideId","delete"],"sources":["/home/soula/grafana/public/app/features/explore/TraceView/useHoverIndentGuide.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,GAA+B;EACpC,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDH,QAAQ,CAAC,IAAII,GAAJ,EAAD,CAA9D;EAEA,MAAMC,qBAAqB,GAAGN,WAAW,CAAC,SAASM,qBAAT,CAA+BC,MAA/B,EAA+C;IACvFH,sBAAsB,CAAEI,SAAD,IAAe;MACpC,MAAMC,sBAAsB,GAAG,IAAIJ,GAAJ,CAAQG,SAAR,CAA/B;MACAC,sBAAsB,CAACC,GAAvB,CAA2BH,MAA3B;MACA,OAAOE,sBAAP;IACD,CAJqB,CAAtB;EAKD,CANwC,EAMtC,EANsC,CAAzC;EAQA,MAAME,wBAAwB,GAAGX,WAAW,CAAC,SAASW,wBAAT,CAAkCJ,MAAlC,EAAkD;IAC7FH,sBAAsB,CAAEI,SAAD,IAAe;MACpC,MAAMC,sBAAsB,GAAG,IAAIJ,GAAJ,CAAQG,SAAR,CAA/B;MACAC,sBAAsB,CAACG,MAAvB,CAA8BL,MAA9B;MACA,OAAOE,sBAAP;IACD,CAJqB,CAAtB;EAKD,CAN2C,EAMzC,EANyC,CAA5C;EAQA,OAAO;IAAEN,mBAAF;IAAuBG,qBAAvB;IAA8CK;EAA9C,CAAP;AACD"},"metadata":{},"sourceType":"module"}