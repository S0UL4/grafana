{"ast":null,"code":"import React from 'react';\nimport { FieldType, identityOverrideProcessor } from '@grafana/data';\nimport { AxisPlacement, ScaleDistribution } from '@grafana/schema';\nimport { graphFieldOptions, Select, HorizontalGroup, RadioButtonGroup } from '../../index';\n/**\n * @alpha\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function addAxisConfig(builder, defaultConfig, hideScale) {\n  const category = ['Axis'];\n  builder.addRadio({\n    path: 'axisPlacement',\n    name: 'Placement',\n    category,\n    defaultValue: graphFieldOptions.axisPlacement[0].value,\n    settings: {\n      options: graphFieldOptions.axisPlacement\n    }\n  }).addTextInput({\n    path: 'axisLabel',\n    name: 'Label',\n    category,\n    defaultValue: '',\n    settings: {\n      placeholder: 'Optional text'\n    },\n    showIf: c => c.axisPlacement !== AxisPlacement.Hidden,\n    // Do not apply default settings to time and string fields which are used as x-axis fields in Time series and Bar chart panels\n    shouldApply: f => f.type !== FieldType.time && f.type !== FieldType.string\n  }).addNumberInput({\n    path: 'axisWidth',\n    name: 'Width',\n    category,\n    settings: {\n      placeholder: 'Auto'\n    },\n    showIf: c => c.axisPlacement !== AxisPlacement.Hidden\n  }).addNumberInput({\n    path: 'axisSoftMin',\n    name: 'Soft min',\n    defaultValue: defaultConfig.axisSoftMin,\n    category,\n    settings: {\n      placeholder: 'See: Standard options > Min'\n    }\n  }).addNumberInput({\n    path: 'axisSoftMax',\n    name: 'Soft max',\n    defaultValue: defaultConfig.axisSoftMax,\n    category,\n    settings: {\n      placeholder: 'See: Standard options > Max'\n    }\n  }).addRadio({\n    path: 'axisGridShow',\n    name: 'Show grid lines',\n    category,\n    defaultValue: undefined,\n    settings: {\n      options: [{\n        value: undefined,\n        label: 'Auto'\n      }, {\n        value: true,\n        label: 'On'\n      }, {\n        value: false,\n        label: 'Off'\n      }]\n    }\n  });\n\n  if (!hideScale) {\n    builder.addCustomEditor({\n      id: 'scaleDistribution',\n      path: 'scaleDistribution',\n      name: 'Scale',\n      category,\n      editor: ScaleDistributionEditor,\n      override: ScaleDistributionEditor,\n      defaultValue: {\n        type: ScaleDistribution.Linear\n      },\n      shouldApply: f => f.type === FieldType.number,\n      process: identityOverrideProcessor\n    });\n  }\n}\nconst DISTRIBUTION_OPTIONS = [{\n  label: 'Linear',\n  value: ScaleDistribution.Linear\n}, {\n  label: 'Logarithmic',\n  value: ScaleDistribution.Log\n}];\nconst LOG_DISTRIBUTION_OPTIONS = [{\n  label: '2',\n  value: 2\n}, {\n  label: '10',\n  value: 10\n}];\n/**\n * @internal\n */\n\nexport const ScaleDistributionEditor = ({\n  value,\n  onChange\n}) => {\n  var _value$type;\n\n  const type = (_value$type = value === null || value === void 0 ? void 0 : value.type) !== null && _value$type !== void 0 ? _value$type : ScaleDistribution.Linear;\n  return /*#__PURE__*/_jsxs(HorizontalGroup, {\n    children: [/*#__PURE__*/_jsx(RadioButtonGroup, {\n      value: type,\n      options: DISTRIBUTION_OPTIONS,\n      onChange: v => {\n        onChange(Object.assign({}, value, {\n          type: v,\n          log: v === ScaleDistribution.Linear ? undefined : 2\n        }));\n      }\n    }), type === ScaleDistribution.Log && /*#__PURE__*/_jsx(Select, {\n      options: LOG_DISTRIBUTION_OPTIONS,\n      value: value.log || 2,\n      prefix: 'base',\n      width: 12,\n      onChange: v => {\n        onChange(Object.assign({}, value, {\n          log: v.value\n        }));\n      }\n    })]\n  });\n};","map":{"version":3,"names":["React","FieldType","identityOverrideProcessor","AxisPlacement","ScaleDistribution","graphFieldOptions","Select","HorizontalGroup","RadioButtonGroup","addAxisConfig","builder","defaultConfig","hideScale","category","addRadio","path","name","defaultValue","axisPlacement","value","settings","options","addTextInput","placeholder","showIf","c","Hidden","shouldApply","f","type","time","string","addNumberInput","axisSoftMin","axisSoftMax","undefined","label","addCustomEditor","id","editor","ScaleDistributionEditor","override","Linear","number","process","DISTRIBUTION_OPTIONS","Log","LOG_DISTRIBUTION_OPTIONS","onChange","v","log"],"sources":["/home/soula/grafana/packages/grafana-ui/src/options/builder/axis.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  FieldConfigEditorBuilder,\n  FieldType,\n  identityOverrideProcessor,\n  SelectableValue,\n  StandardEditorProps,\n} from '@grafana/data';\nimport { AxisConfig, AxisPlacement, ScaleDistribution, ScaleDistributionConfig } from '@grafana/schema';\n\nimport { graphFieldOptions, Select, HorizontalGroup, RadioButtonGroup } from '../../index';\n\n/**\n * @alpha\n */\nexport function addAxisConfig(\n  builder: FieldConfigEditorBuilder<AxisConfig>,\n  defaultConfig: AxisConfig,\n  hideScale?: boolean\n) {\n  const category = ['Axis'];\n  builder\n    .addRadio({\n      path: 'axisPlacement',\n      name: 'Placement',\n      category,\n      defaultValue: graphFieldOptions.axisPlacement[0].value,\n      settings: {\n        options: graphFieldOptions.axisPlacement,\n      },\n    })\n    .addTextInput({\n      path: 'axisLabel',\n      name: 'Label',\n      category,\n      defaultValue: '',\n      settings: {\n        placeholder: 'Optional text',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n      // Do not apply default settings to time and string fields which are used as x-axis fields in Time series and Bar chart panels\n      shouldApply: (f) => f.type !== FieldType.time && f.type !== FieldType.string,\n    })\n    .addNumberInput({\n      path: 'axisWidth',\n      name: 'Width',\n      category,\n      settings: {\n        placeholder: 'Auto',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n    })\n    .addNumberInput({\n      path: 'axisSoftMin',\n      name: 'Soft min',\n      defaultValue: defaultConfig.axisSoftMin,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Min',\n      },\n    })\n    .addNumberInput({\n      path: 'axisSoftMax',\n      name: 'Soft max',\n      defaultValue: defaultConfig.axisSoftMax,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Max',\n      },\n    })\n    .addRadio({\n      path: 'axisGridShow',\n      name: 'Show grid lines',\n      category,\n      defaultValue: undefined,\n      settings: {\n        options: [\n          { value: undefined, label: 'Auto' },\n          { value: true, label: 'On' },\n          { value: false, label: 'Off' },\n        ],\n      },\n    });\n\n  if (!hideScale) {\n    builder.addCustomEditor<void, ScaleDistributionConfig>({\n      id: 'scaleDistribution',\n      path: 'scaleDistribution',\n      name: 'Scale',\n      category,\n      editor: ScaleDistributionEditor as any,\n      override: ScaleDistributionEditor as any,\n      defaultValue: { type: ScaleDistribution.Linear },\n      shouldApply: (f) => f.type === FieldType.number,\n      process: identityOverrideProcessor,\n    });\n  }\n}\n\nconst DISTRIBUTION_OPTIONS: Array<SelectableValue<ScaleDistribution>> = [\n  {\n    label: 'Linear',\n    value: ScaleDistribution.Linear,\n  },\n  {\n    label: 'Logarithmic',\n    value: ScaleDistribution.Log,\n  },\n];\n\nconst LOG_DISTRIBUTION_OPTIONS: Array<SelectableValue<number>> = [\n  {\n    label: '2',\n    value: 2,\n  },\n  {\n    label: '10',\n    value: 10,\n  },\n];\n\n/**\n * @internal\n */\nexport const ScaleDistributionEditor = ({ value, onChange }: StandardEditorProps<ScaleDistributionConfig>) => {\n  const type = value?.type ?? ScaleDistribution.Linear;\n  return (\n    <HorizontalGroup>\n      <RadioButtonGroup\n        value={type}\n        options={DISTRIBUTION_OPTIONS}\n        onChange={(v) => {\n          onChange({\n            ...value,\n            type: v!,\n            log: v === ScaleDistribution.Linear ? undefined : 2,\n          });\n        }}\n      />\n      {type === ScaleDistribution.Log && (\n        <Select\n          options={LOG_DISTRIBUTION_OPTIONS}\n          value={value.log || 2}\n          prefix={'base'}\n          width={12}\n          onChange={(v) => {\n            onChange({\n              ...value,\n              log: v.value!,\n            });\n          }}\n        />\n      )}\n    </HorizontalGroup>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}