{"ast":null,"code":"var _div;\n\nimport React, { useMemo } from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { formattedValueToString, getFieldColorModeForField } from '@grafana/data';\nimport { css, cx } from '@emotion/css';\nimport { config } from 'app/core/config';\nimport { getThresholdItems } from 'app/plugins/panel/state-timeline/utils';\nimport { getMinMaxAndDelta } from '@grafana/data/src/field/scale';\nimport SVG from 'react-inlinesvg';\nimport { ColorScale } from 'app/core/components/ColorScale/ColorScale';\nimport { useObservable } from 'react-use';\nimport { of } from 'rxjs';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function MarkersLegend(props) {\n  var _mouseEvents, _state, _styleConfig$dims, _styleConfig$dims$col, _styleConfig$base, _styleConfig$config$s, _colorField$config;\n\n  const {\n    layerName,\n    styleConfig,\n    layer\n  } = props;\n  const style = useStyles2(getStyles);\n  const hoverEvent = useObservable((_mouseEvents = layer === null || layer === void 0 ? void 0 : (_state = layer.__state) === null || _state === void 0 ? void 0 : _state.mouseEvents) !== null && _mouseEvents !== void 0 ? _mouseEvents : of(undefined));\n  const colorField = styleConfig === null || styleConfig === void 0 ? void 0 : (_styleConfig$dims = styleConfig.dims) === null || _styleConfig$dims === void 0 ? void 0 : (_styleConfig$dims$col = _styleConfig$dims.color) === null || _styleConfig$dims$col === void 0 ? void 0 : _styleConfig$dims$col.field;\n  const hoverValue = useMemo(() => {\n    if (!colorField || !hoverEvent) {\n      return undefined;\n    }\n\n    const props = hoverEvent.getProperties();\n    const frame = props.frame;\n\n    if (!frame) {\n      return undefined;\n    }\n\n    const rowIndex = props.rowIndex;\n    return colorField.values.get(rowIndex);\n  }, [hoverEvent, colorField]);\n\n  if (!styleConfig) {\n    return /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  const {\n    color,\n    opacity\n  } = (_styleConfig$base = styleConfig === null || styleConfig === void 0 ? void 0 : styleConfig.base) !== null && _styleConfig$base !== void 0 ? _styleConfig$base : {};\n  const symbol = styleConfig === null || styleConfig === void 0 ? void 0 : (_styleConfig$config$s = styleConfig.config.symbol) === null || _styleConfig$config$s === void 0 ? void 0 : _styleConfig$config$s.fixed;\n\n  if (color && symbol && !colorField) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: style.infoWrap,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.layerName,\n        children: layerName\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: cx(style.layerBody, style.fixedColorContainer),\n        children: /*#__PURE__*/_jsx(SVG, {\n          src: `public/${symbol}`,\n          className: style.legendSymbol,\n          title: 'Symbol',\n          style: {\n            fill: color,\n            opacity: opacity\n          }\n        })\n      })]\n    });\n  }\n\n  if (!colorField) {\n    return /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  const colorMode = getFieldColorModeForField(colorField);\n\n  if (colorMode.isContinuous && colorMode.getColors) {\n    const colors = colorMode.getColors(config.theme2);\n    const colorRange = getMinMaxAndDelta(colorField); // TODO: explore showing mean on the gradiant scale\n    // const stats = reduceField({\n    //   field: color.field!,\n    //   reducers: [\n    //     ReducerID.min,\n    //     ReducerID.max,\n    //     ReducerID.mean,\n    //     // std dev?\n    //   ]\n    // })\n\n    const display = colorField.display ? v => formattedValueToString(colorField.display(v)) : v => `${v}`;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: style.infoWrap,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.layerName,\n        children: layerName\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: cx(style.layerBody, style.colorScaleWrapper),\n        children: /*#__PURE__*/_jsx(ColorScale, {\n          hoverValue: hoverValue,\n          colorPalette: colors,\n          min: colorRange.min,\n          max: colorRange.max,\n          display: display,\n          useStopsPercentage: false\n        })\n      })]\n    });\n  }\n\n  const thresholds = colorField === null || colorField === void 0 ? void 0 : (_colorField$config = colorField.config) === null || _colorField$config === void 0 ? void 0 : _colorField$config.thresholds;\n\n  if (!thresholds || thresholds.steps.length < 2) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {})); // don't show anything in the legend\n  }\n\n  const items = getThresholdItems(colorField.config, config.theme2);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style.infoWrap,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: style.layerName,\n      children: layerName\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: cx(style.layerBody, style.legend),\n      children: items.map((item, idx) => /*#__PURE__*/_jsxs(\"div\", {\n        className: style.legendItem,\n        children: [/*#__PURE__*/_jsx(\"i\", {\n          style: {\n            background: item.color\n          }\n        }), item.label]\n      }, `${idx}/${item.label}`))\n    })]\n  });\n}\n\nconst getStyles = theme => ({\n  infoWrap: css`\n    display: flex;\n    flex-direction: column;\n    background: ${theme.colors.background.secondary};\n    border-radius: 1px;\n    padding: ${theme.spacing(1)};\n    border-bottom: 2px solid ${theme.colors.border.strong};\n    min-width: 150px;\n  `,\n  layerName: css`\n    font-size: ${theme.typography.body.fontSize};\n  `,\n  layerBody: css`\n    padding-left: 10px;\n  `,\n  legend: css`\n    line-height: 18px;\n    display: flex;\n    flex-direction: column;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding: 5px 10px 0;\n\n    i {\n      width: 15px;\n      height: 15px;\n      float: left;\n      margin-right: 8px;\n      opacity: 0.7;\n      border-radius: 50%;\n    }\n  `,\n  legendItem: css`\n    white-space: nowrap;\n  `,\n  fixedColorContainer: css`\n    min-width: 80px;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding-top: 5px;\n  `,\n  legendSymbol: css`\n    height: 18px;\n    width: 18px;\n    margin: auto;\n  `,\n  colorScaleWrapper: css`\n    min-width: 200px;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding-top: 10px;\n  `\n});","map":{"version":3,"names":["React","useMemo","useStyles2","formattedValueToString","getFieldColorModeForField","css","cx","config","getThresholdItems","getMinMaxAndDelta","SVG","ColorScale","useObservable","of","MarkersLegend","props","layerName","styleConfig","layer","style","getStyles","hoverEvent","__state","mouseEvents","undefined","colorField","dims","color","field","hoverValue","getProperties","frame","rowIndex","values","get","opacity","base","symbol","fixed","infoWrap","layerBody","fixedColorContainer","legendSymbol","fill","colorMode","isContinuous","getColors","colors","theme2","colorRange","display","v","colorScaleWrapper","min","max","thresholds","steps","length","items","legend","map","item","idx","legendItem","background","label","theme","secondary","spacing","border","strong","typography","body","fontSize","bodySmall"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/layers/data/MarkersLegend.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useStyles2, VizLegendItem } from '@grafana/ui';\nimport { DataFrame, formattedValueToString, getFieldColorModeForField, GrafanaTheme2 } from '@grafana/data';\nimport { css, cx } from '@emotion/css';\nimport { config } from 'app/core/config';\nimport { DimensionSupplier } from 'app/features/dimensions';\nimport { getThresholdItems } from 'app/plugins/panel/state-timeline/utils';\nimport { getMinMaxAndDelta } from '@grafana/data/src/field/scale';\nimport SVG from 'react-inlinesvg';\nimport { StyleConfigState } from '../../style/types';\nimport { ColorScale } from 'app/core/components/ColorScale/ColorScale';\nimport { useObservable } from 'react-use';\nimport { of } from 'rxjs';\nimport BaseLayer from 'ol/layer/Base';\nimport { MapLayerState } from '../../types';\n\nexport interface MarkersLegendProps {\n  size?: DimensionSupplier<number>;\n  layerName?: string;\n  styleConfig?: StyleConfigState;\n  layer?: BaseLayer;\n}\n\nexport function MarkersLegend(props: MarkersLegendProps) {\n  const { layerName, styleConfig, layer } = props;\n  const style = useStyles2(getStyles);\n\n  const hoverEvent = useObservable(((layer as any)?.__state as MapLayerState)?.mouseEvents ?? of(undefined));\n\n  const colorField = styleConfig?.dims?.color?.field;\n  const hoverValue = useMemo(() => {\n    if (!colorField || !hoverEvent) {\n      return undefined;\n    }\n\n    const props = hoverEvent.getProperties();\n    const frame = props.frame as DataFrame;\n\n    if (!frame) {\n      return undefined;\n    }\n\n    const rowIndex = props.rowIndex as number;\n    return colorField.values.get(rowIndex);\n  }, [hoverEvent, colorField]);\n\n  if (!styleConfig) {\n    return <></>;\n  }\n\n  const { color, opacity} = styleConfig?.base ?? {};\n  const symbol = styleConfig?.config.symbol?.fixed;\n\n  if (color && symbol && !colorField) {\n    return (\n      <div className={style.infoWrap}>\n        <div className={style.layerName}>{layerName}</div>\n        <div className={cx(style.layerBody, style.fixedColorContainer)}>\n          <SVG\n            src={`public/${symbol}`}\n            className={style.legendSymbol}\n            title={'Symbol'}\n            style={{ fill: color, opacity: opacity }}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  if (!colorField) {\n    return <></>;\n  }\n\n  const colorMode = getFieldColorModeForField(colorField);\n\n  if (colorMode.isContinuous && colorMode.getColors) {\n    const colors = colorMode.getColors(config.theme2);\n    const colorRange = getMinMaxAndDelta(colorField);\n    // TODO: explore showing mean on the gradiant scale\n    // const stats = reduceField({\n    //   field: color.field!,\n    //   reducers: [\n    //     ReducerID.min,\n    //     ReducerID.max,\n    //     ReducerID.mean,\n    //     // std dev?\n    //   ]\n    // })\n\n    const display = colorField.display ? (v: number) => formattedValueToString(colorField.display!(v)) : (v: number) => `${v}`;\n    return (\n      <div className={style.infoWrap}>\n        <div className={style.layerName}>{layerName}</div>\n        <div className={cx(style.layerBody, style.colorScaleWrapper)}>\n          <ColorScale hoverValue={hoverValue} colorPalette={colors} min={colorRange.min as number} max={colorRange.max as number} display={display} useStopsPercentage={false}/>\n        </div>\n      </div>\n    );\n  }\n\n  const thresholds = colorField?.config?.thresholds;\n  if (!thresholds || thresholds.steps.length < 2) {\n    return <div></div>; // don't show anything in the legend\n  }\n\n  const items = getThresholdItems(colorField!.config, config.theme2);\n  return (\n    <div className={style.infoWrap}>\n      <div className={style.layerName}>{layerName}</div>\n      <div className={cx(style.layerBody, style.legend)}>\n        {items.map((item: VizLegendItem, idx: number) => (\n          <div key={`${idx}/${item.label}`} className={style.legendItem}>\n            <i style={{ background: item.color }}></i>\n            {item.label}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  infoWrap: css`\n    display: flex;\n    flex-direction: column;\n    background: ${theme.colors.background.secondary};\n    border-radius: 1px;\n    padding: ${theme.spacing(1)};\n    border-bottom: 2px solid ${theme.colors.border.strong};\n    min-width: 150px;\n  `,\n  layerName: css`\n    font-size: ${theme.typography.body.fontSize};\n  `,\n  layerBody: css`\n    padding-left: 10px;\n  `,\n  legend: css`\n    line-height: 18px;\n    display: flex;\n    flex-direction: column;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding: 5px 10px 0;\n\n    i {\n      width: 15px;\n      height: 15px;\n      float: left;\n      margin-right: 8px;\n      opacity: 0.7;\n      border-radius: 50%;\n    }\n  `,\n  legendItem: css`\n    white-space: nowrap;\n  `,\n  fixedColorContainer: css`\n    min-width: 80px;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding-top: 5px;\n  `,\n  legendSymbol: css`\n    height: 18px;\n    width: 18px;\n    margin: auto;\n  `,\n  colorScaleWrapper: css`\n    min-width: 200px;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    padding-top: 10px;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}