{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { initialVariableModelState } from 'app/features/variables/types';\nimport { getInstanceState } from '../state/selectors';\nimport { initialVariablesState } from '../state/types';\nexport const initialAdHocVariableModelState = Object.assign({}, initialVariableModelState, {\n  type: 'adhoc',\n  datasource: null,\n  filters: []\n});\nexport const adHocVariableSlice = createSlice({\n  name: 'templating/adhoc',\n  initialState: initialVariablesState,\n  reducers: {\n    filterAdded: (state, action) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      instanceState.filters.push(action.payload.data);\n    },\n    filterRemoved: (state, action) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      const index = action.payload.data;\n      instanceState.filters.splice(index, 1);\n    },\n    filterUpdated: (state, action) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      const {\n        filter,\n        index\n      } = action.payload.data;\n      instanceState.filters[index] = filter;\n    },\n    filtersRestored: (state, action) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      instanceState.filters = action.payload.data;\n    }\n  }\n});\nexport const {\n  filterAdded,\n  filterRemoved,\n  filterUpdated,\n  filtersRestored\n} = adHocVariableSlice.actions;\nexport const adHocVariableReducer = adHocVariableSlice.reducer;","map":{"version":3,"names":["createSlice","initialVariableModelState","getInstanceState","initialVariablesState","initialAdHocVariableModelState","type","datasource","filters","adHocVariableSlice","name","initialState","reducers","filterAdded","state","action","instanceState","payload","id","push","data","filterRemoved","index","splice","filterUpdated","filter","filtersRestored","actions","adHocVariableReducer","reducer"],"sources":["/home/soula/grafana/public/app/features/variables/adhoc/reducer.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AdHocVariableFilter, AdHocVariableModel, initialVariableModelState } from 'app/features/variables/types';\n\nimport { getInstanceState } from '../state/selectors';\nimport { initialVariablesState, VariablePayload, VariablesState } from '../state/types';\n\nexport interface AdHocVariabelFilterUpdate {\n  index: number;\n  filter: AdHocVariableFilter;\n}\n\nexport const initialAdHocVariableModelState: AdHocVariableModel = {\n  ...initialVariableModelState,\n  type: 'adhoc',\n  datasource: null,\n  filters: [],\n};\n\nexport const adHocVariableSlice = createSlice({\n  name: 'templating/adhoc',\n  initialState: initialVariablesState,\n  reducers: {\n    filterAdded: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariableFilter>>) => {\n      const instanceState = getInstanceState<AdHocVariableModel>(state, action.payload.id);\n      instanceState.filters.push(action.payload.data);\n    },\n    filterRemoved: (state: VariablesState, action: PayloadAction<VariablePayload<number>>) => {\n      const instanceState = getInstanceState<AdHocVariableModel>(state, action.payload.id);\n      const index = action.payload.data;\n\n      instanceState.filters.splice(index, 1);\n    },\n    filterUpdated: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariabelFilterUpdate>>) => {\n      const instanceState = getInstanceState<AdHocVariableModel>(state, action.payload.id);\n      const { filter, index } = action.payload.data;\n\n      instanceState.filters[index] = filter;\n    },\n    filtersRestored: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariableFilter[]>>) => {\n      const instanceState = getInstanceState<AdHocVariableModel>(state, action.payload.id);\n      instanceState.filters = action.payload.data;\n    },\n  },\n});\n\nexport const { filterAdded, filterRemoved, filterUpdated, filtersRestored } = adHocVariableSlice.actions;\nexport const adHocVariableReducer = adHocVariableSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAAkDC,yBAAlD,QAAmF,8BAAnF;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,qBAAT,QAAuE,gBAAvE;AAOA,OAAO,MAAMC,8BAAkD,qBAC1DH,yBAD0D;EAE7DI,IAAI,EAAE,OAFuD;EAG7DC,UAAU,EAAE,IAHiD;EAI7DC,OAAO,EAAE;AAJoD,EAAxD;AAOP,OAAO,MAAMC,kBAAkB,GAAGR,WAAW,CAAC;EAC5CS,IAAI,EAAE,kBADsC;EAE5CC,YAAY,EAAEP,qBAF8B;EAG5CQ,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAwBC,MAAxB,KAAwF;MACnG,MAAMC,aAAa,GAAGb,gBAAgB,CAAqBW,KAArB,EAA4BC,MAAM,CAACE,OAAP,CAAeC,EAA3C,CAAtC;MACAF,aAAa,CAACR,OAAd,CAAsBW,IAAtB,CAA2BJ,MAAM,CAACE,OAAP,CAAeG,IAA1C;IACD,CAJO;IAKRC,aAAa,EAAE,CAACP,KAAD,EAAwBC,MAAxB,KAA2E;MACxF,MAAMC,aAAa,GAAGb,gBAAgB,CAAqBW,KAArB,EAA4BC,MAAM,CAACE,OAAP,CAAeC,EAA3C,CAAtC;MACA,MAAMI,KAAK,GAAGP,MAAM,CAACE,OAAP,CAAeG,IAA7B;MAEAJ,aAAa,CAACR,OAAd,CAAsBe,MAAtB,CAA6BD,KAA7B,EAAoC,CAApC;IACD,CAVO;IAWRE,aAAa,EAAE,CAACV,KAAD,EAAwBC,MAAxB,KAA8F;MAC3G,MAAMC,aAAa,GAAGb,gBAAgB,CAAqBW,KAArB,EAA4BC,MAAM,CAACE,OAAP,CAAeC,EAA3C,CAAtC;MACA,MAAM;QAAEO,MAAF;QAAUH;MAAV,IAAoBP,MAAM,CAACE,OAAP,CAAeG,IAAzC;MAEAJ,aAAa,CAACR,OAAd,CAAsBc,KAAtB,IAA+BG,MAA/B;IACD,CAhBO;IAiBRC,eAAe,EAAE,CAACZ,KAAD,EAAwBC,MAAxB,KAA0F;MACzG,MAAMC,aAAa,GAAGb,gBAAgB,CAAqBW,KAArB,EAA4BC,MAAM,CAACE,OAAP,CAAeC,EAA3C,CAAtC;MACAF,aAAa,CAACR,OAAd,GAAwBO,MAAM,CAACE,OAAP,CAAeG,IAAvC;IACD;EApBO;AAHkC,CAAD,CAAtC;AA2BP,OAAO,MAAM;EAAEP,WAAF;EAAeQ,aAAf;EAA8BG,aAA9B;EAA6CE;AAA7C,IAAiEjB,kBAAkB,CAACkB,OAA1F;AACP,OAAO,MAAMC,oBAAoB,GAAGnB,kBAAkB,CAACoB,OAAhD"},"metadata":{},"sourceType":"module"}