{"ast":null,"code":"import { SuggestionName } from 'app/types/suggestions';\nexport class StatTimelineSuggestionsSupplier {\n  getSuggestionsForData(builder) {\n    const {\n      dataSummary: ds\n    } = builder;\n\n    if (!ds.hasData) {\n      return;\n    } // This panel needs a time field and a string or number field\n\n\n    if (!ds.hasTimeField || !ds.hasStringField && !ds.hasNumberField) {\n      return;\n    } // If there are many series then they won't fit on y-axis so this panel is not good fit\n\n\n    if (ds.numberFieldCount >= 30) {\n      return;\n    } // Probably better ways to filter out this by inspecting the types of string values so view this as temporary\n\n\n    if (ds.preferredVisualisationType === 'logs') {\n      return;\n    }\n\n    const list = builder.getListAppender({\n      name: '',\n      pluginId: 'state-timeline',\n      options: {},\n      fieldConfig: {\n        defaults: {\n          custom: {}\n        },\n        overrides: []\n      }\n    });\n    list.append({\n      name: SuggestionName.StateTimeline\n    });\n  }\n\n}","map":{"version":3,"names":["SuggestionName","StatTimelineSuggestionsSupplier","getSuggestionsForData","builder","dataSummary","ds","hasData","hasTimeField","hasStringField","hasNumberField","numberFieldCount","preferredVisualisationType","list","getListAppender","name","pluginId","options","fieldConfig","defaults","custom","overrides","append","StateTimeline"],"sources":["/home/soula/grafana/public/app/plugins/panel/state-timeline/suggestions.ts"],"sourcesContent":["import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { SuggestionName } from 'app/types/suggestions';\n\nimport { TimelineFieldConfig, TimelineOptions } from './types';\n\nexport class StatTimelineSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n\n    // This panel needs a time field and a string or number field\n    if (!ds.hasTimeField || (!ds.hasStringField && !ds.hasNumberField)) {\n      return;\n    }\n\n    // If there are many series then they won't fit on y-axis so this panel is not good fit\n    if (ds.numberFieldCount >= 30) {\n      return;\n    }\n\n    // Probably better ways to filter out this by inspecting the types of string values so view this as temporary\n    if (ds.preferredVisualisationType === 'logs') {\n      return;\n    }\n\n    const list = builder.getListAppender<TimelineOptions, TimelineFieldConfig>({\n      name: '',\n      pluginId: 'state-timeline',\n      options: {},\n      fieldConfig: {\n        defaults: {\n          custom: {},\n        },\n        overrides: [],\n      },\n    });\n\n    list.append({ name: SuggestionName.StateTimeline });\n  }\n}\n"],"mappings":"AACA,SAASA,cAAT,QAA+B,uBAA/B;AAIA,OAAO,MAAMC,+BAAN,CAAsC;EAC3CC,qBAAqB,CAACC,OAAD,EAA2C;IAC9D,MAAM;MAAEC,WAAW,EAAEC;IAAf,IAAsBF,OAA5B;;IAEA,IAAI,CAACE,EAAE,CAACC,OAAR,EAAiB;MACf;IACD,CAL6D,CAO9D;;;IACA,IAAI,CAACD,EAAE,CAACE,YAAJ,IAAqB,CAACF,EAAE,CAACG,cAAJ,IAAsB,CAACH,EAAE,CAACI,cAAnD,EAAoE;MAClE;IACD,CAV6D,CAY9D;;;IACA,IAAIJ,EAAE,CAACK,gBAAH,IAAuB,EAA3B,EAA+B;MAC7B;IACD,CAf6D,CAiB9D;;;IACA,IAAIL,EAAE,CAACM,0BAAH,KAAkC,MAAtC,EAA8C;MAC5C;IACD;;IAED,MAAMC,IAAI,GAAGT,OAAO,CAACU,eAAR,CAA8D;MACzEC,IAAI,EAAE,EADmE;MAEzEC,QAAQ,EAAE,gBAF+D;MAGzEC,OAAO,EAAE,EAHgE;MAIzEC,WAAW,EAAE;QACXC,QAAQ,EAAE;UACRC,MAAM,EAAE;QADA,CADC;QAIXC,SAAS,EAAE;MAJA;IAJ4D,CAA9D,CAAb;IAYAR,IAAI,CAACS,MAAL,CAAY;MAAEP,IAAI,EAAEd,cAAc,CAACsB;IAAvB,CAAZ;EACD;;AApC0C"},"metadata":{},"sourceType":"module"}