{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { Alert, Select, stylesFactory, useTheme2 } from '@grafana/ui';\nimport { COUNTRIES_GAZETTEER_PATH, getGazetteer } from '../gazetteer/gazetteer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst defaultPaths = [{\n  label: 'Countries',\n  description: 'Lookup countries by name, two letter code, or three letter code',\n  value: COUNTRIES_GAZETTEER_PATH\n}, {\n  label: 'USA States',\n  description: 'Lookup states by name or 2 ',\n  value: 'public/gazetteer/usa-states.json'\n}, {\n  label: 'Airports',\n  description: 'Lookup airports by id or code',\n  value: 'public/gazetteer/airports.geojson'\n}];\nexport const GazetteerPathEditor = ({\n  value,\n  onChange,\n  context,\n  item\n}) => {\n  const styles = getStyles(useTheme2());\n  const [gaz, setGaz] = useState();\n  const settings = item.settings;\n  useEffect(() => {\n    async function fetchData() {\n      const p = await getGazetteer(value);\n      setGaz(p);\n    }\n\n    fetchData();\n  }, [value, setGaz]);\n  const {\n    current,\n    options\n  } = useMemo(() => {\n    let options = settings !== null && settings !== void 0 && settings.options ? [...settings.options] : [...defaultPaths];\n    let current = options === null || options === void 0 ? void 0 : options.find(f => f.value === (gaz === null || gaz === void 0 ? void 0 : gaz.path));\n\n    if (!current && gaz) {\n      current = {\n        label: gaz.path,\n        value: gaz.path\n      };\n      options.push(current);\n    }\n\n    return {\n      options,\n      current\n    };\n  }, [gaz, settings === null || settings === void 0 ? void 0 : settings.options]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Select, {\n      value: current,\n      options: options,\n      onChange: v => onChange(v.value),\n      allowCustomValue: true,\n      formatCreateLabel: txt => `Load from URL: ${txt}`\n    }), gaz && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [gaz.error && /*#__PURE__*/_jsx(Alert, {\n        title: gaz.error,\n        severity: 'warning'\n      }), gaz.count && /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.keys,\n        children: [/*#__PURE__*/_jsxs(\"b\", {\n          children: [\"(\", gaz.count, \")\"]\n        }), gaz.examples(10).map(k => /*#__PURE__*/_jsxs(\"span\", {\n          children: [k, \",\"]\n        }, k)), gaz.count > 10 && ' ...']\n      })]\n    })]\n  });\n};\nconst getStyles = stylesFactory(theme => {\n  return {\n    keys: css`\n      margin-top: 4px;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n\n      > span {\n        margin-left: 4px;\n      }\n    `\n  };\n});","map":{"version":3,"names":["css","React","useMemo","useState","useEffect","Alert","Select","stylesFactory","useTheme2","COUNTRIES_GAZETTEER_PATH","getGazetteer","defaultPaths","label","description","value","GazetteerPathEditor","onChange","context","item","styles","getStyles","gaz","setGaz","settings","fetchData","p","current","options","find","f","path","push","v","txt","error","count","keys","examples","map","k","theme"],"sources":["/home/soula/grafana/public/app/features/geo/editor/GazetteerPathEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useMemo, useState, useEffect } from 'react';\n\nimport { StandardEditorProps, SelectableValue, GrafanaTheme2 } from '@grafana/data';\nimport { Alert, Select, stylesFactory, useTheme2 } from '@grafana/ui';\n\nimport { COUNTRIES_GAZETTEER_PATH, Gazetteer, getGazetteer } from '../gazetteer/gazetteer';\n\nconst defaultPaths: Array<SelectableValue<string>> = [\n  {\n    label: 'Countries',\n    description: 'Lookup countries by name, two letter code, or three letter code',\n    value: COUNTRIES_GAZETTEER_PATH,\n  },\n  {\n    label: 'USA States',\n    description: 'Lookup states by name or 2 ',\n    value: 'public/gazetteer/usa-states.json',\n  },\n  {\n    label: 'Airports',\n    description: 'Lookup airports by id or code',\n    value: 'public/gazetteer/airports.geojson',\n  },\n];\n\nexport interface GazetteerPathEditorConfigSettings {\n  options?: Array<SelectableValue<string>>;\n}\n\nexport const GazetteerPathEditor: FC<StandardEditorProps<string, any, any, GazetteerPathEditorConfigSettings>> = ({\n  value,\n  onChange,\n  context,\n  item,\n}) => {\n  const styles = getStyles(useTheme2());\n  const [gaz, setGaz] = useState<Gazetteer>();\n  const settings = item.settings as any;\n\n  useEffect(() => {\n    async function fetchData() {\n      const p = await getGazetteer(value);\n      setGaz(p);\n    }\n    fetchData();\n  }, [value, setGaz]);\n\n  const { current, options } = useMemo(() => {\n    let options = settings?.options ? [...settings.options] : [...defaultPaths];\n    let current = options?.find((f) => f.value === gaz?.path);\n    if (!current && gaz) {\n      current = {\n        label: gaz.path,\n        value: gaz.path,\n      };\n      options.push(current);\n    }\n    return { options, current };\n  }, [gaz, settings?.options]);\n\n  return (\n    <>\n      <Select\n        value={current}\n        options={options}\n        onChange={(v) => onChange(v.value)}\n        allowCustomValue={true}\n        formatCreateLabel={(txt) => `Load from URL: ${txt}`}\n      />\n      {gaz && (\n        <>\n          {gaz.error && <Alert title={gaz.error} severity={'warning'} />}\n          {gaz.count && (\n            <div className={styles.keys}>\n              <b>({gaz.count})</b>\n              {gaz.examples(10).map((k) => (\n                <span key={k}>{k},</span>\n              ))}\n              {gaz.count > 10 && ' ...'}\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    keys: css`\n      margin-top: 4px;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n\n      > span {\n        margin-left: 4px;\n      }\n    `,\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAGA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,EAAuCC,SAAvC,QAAwD,aAAxD;AAEA,SAASC,wBAAT,EAA8CC,YAA9C,QAAkE,wBAAlE;;;;AAEA,MAAMC,YAA4C,GAAG,CACnD;EACEC,KAAK,EAAE,WADT;EAEEC,WAAW,EAAE,iEAFf;EAGEC,KAAK,EAAEL;AAHT,CADmD,EAMnD;EACEG,KAAK,EAAE,YADT;EAEEC,WAAW,EAAE,6BAFf;EAGEC,KAAK,EAAE;AAHT,CANmD,EAWnD;EACEF,KAAK,EAAE,UADT;EAEEC,WAAW,EAAE,+BAFf;EAGEC,KAAK,EAAE;AAHT,CAXmD,CAArD;AAsBA,OAAO,MAAMC,mBAAiG,GAAG,CAAC;EAChHD,KADgH;EAEhHE,QAFgH;EAGhHC,OAHgH;EAIhHC;AAJgH,CAAD,KAK3G;EACJ,MAAMC,MAAM,GAAGC,SAAS,CAACZ,SAAS,EAAV,CAAxB;EACA,MAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,EAA9B;EACA,MAAMoB,QAAQ,GAAGL,IAAI,CAACK,QAAtB;EAEAnB,SAAS,CAAC,MAAM;IACd,eAAeoB,SAAf,GAA2B;MACzB,MAAMC,CAAC,GAAG,MAAMf,YAAY,CAACI,KAAD,CAA5B;MACAQ,MAAM,CAACG,CAAD,CAAN;IACD;;IACDD,SAAS;EACV,CANQ,EAMN,CAACV,KAAD,EAAQQ,MAAR,CANM,CAAT;EAQA,MAAM;IAAEI,OAAF;IAAWC;EAAX,IAAuBzB,OAAO,CAAC,MAAM;IACzC,IAAIyB,OAAO,GAAGJ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAEI,OAAV,GAAoB,CAAC,GAAGJ,QAAQ,CAACI,OAAb,CAApB,GAA4C,CAAC,GAAGhB,YAAJ,CAA1D;IACA,IAAIe,OAAO,GAAGC,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEC,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACf,KAAF,MAAYO,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAES,IAAjB,CAArB,CAAd;;IACA,IAAI,CAACJ,OAAD,IAAYL,GAAhB,EAAqB;MACnBK,OAAO,GAAG;QACRd,KAAK,EAAES,GAAG,CAACS,IADH;QAERhB,KAAK,EAAEO,GAAG,CAACS;MAFH,CAAV;MAIAH,OAAO,CAACI,IAAR,CAAaL,OAAb;IACD;;IACD,OAAO;MAAEC,OAAF;MAAWD;IAAX,CAAP;EACD,CAXmC,EAWjC,CAACL,GAAD,EAAME,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEI,OAAhB,CAXiC,CAApC;EAaA,oBACE;IAAA,wBACE,KAAC,MAAD;MACE,KAAK,EAAED,OADT;MAEE,OAAO,EAAEC,OAFX;MAGE,QAAQ,EAAGK,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAAClB,KAAH,CAH3B;MAIE,gBAAgB,EAAE,IAJpB;MAKE,iBAAiB,EAAGmB,GAAD,IAAU,kBAAiBA,GAAI;IALpD,EADF,EAQGZ,GAAG,iBACF;MAAA,WACGA,GAAG,CAACa,KAAJ,iBAAa,KAAC,KAAD;QAAO,KAAK,EAAEb,GAAG,CAACa,KAAlB;QAAyB,QAAQ,EAAE;MAAnC,EADhB,EAEGb,GAAG,CAACc,KAAJ,iBACC;QAAK,SAAS,EAAEhB,MAAM,CAACiB,IAAvB;QAAA,wBACE;UAAA,gBAAKf,GAAG,CAACc,KAAT;QAAA,EADF,EAEGd,GAAG,CAACgB,QAAJ,CAAa,EAAb,EAAiBC,GAAjB,CAAsBC,CAAD,iBACpB;UAAA,WAAeA,CAAf;QAAA,GAAWA,CAAX,CADD,CAFH,EAKGlB,GAAG,CAACc,KAAJ,GAAY,EAAZ,IAAkB,MALrB;MAAA,EAHJ;IAAA,EATJ;EAAA,EADF;AAyBD,CAxDM;AA0DP,MAAMf,SAAS,GAAGb,aAAa,CAAEiC,KAAD,IAA0B;EACxD,OAAO;IACLJ,IAAI,EAAEpC,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVS,CAAP;AAYD,CAb8B,CAA/B"},"metadata":{},"sourceType":"module"}