{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { groupBy as _groupBy } from 'lodash';\nimport React, { useState } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../Theme';\nimport { Popover } from '../common/Popover';\nimport AccordianLogs from './SpanDetail/AccordianLogs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      label: wrapper;\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      overflow: hidden;\n      z-index: 0;\n    `,\n    bar: css`\n      label: bar;\n      border-radius: 3px;\n      min-width: 2px;\n      position: absolute;\n      height: 36%;\n      top: 32%;\n    `,\n    rpc: css`\n      label: rpc;\n      position: absolute;\n      top: 35%;\n      bottom: 35%;\n      z-index: 1;\n    `,\n    label: css`\n      label: label;\n      color: #aaa;\n      font-size: 12px;\n      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      line-height: 1em;\n      white-space: nowrap;\n      padding: 0 0.5em;\n      position: absolute;\n    `,\n    logMarker: css`\n      label: logMarker;\n      background-color: ${autoColor(theme, '#2c3235')};\n      cursor: pointer;\n      height: 60%;\n      min-width: 1px;\n      position: absolute;\n      top: 20%;\n      &:hover {\n        background-color: ${autoColor(theme, '#464c54')};\n      }\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        border: 1px solid transparent;\n      }\n      &::after {\n        left: 0;\n      }\n    `\n  };\n};\n\nfunction toPercent(value) {\n  return `${(value * 100).toFixed(1)}%`;\n}\n\nfunction SpanBar({\n  viewEnd,\n  viewStart,\n  getViewedBounds,\n  color,\n  shortLabel,\n  longLabel,\n  onClick,\n  rpc,\n  traceStartTime,\n  span,\n  className,\n  labelClassName\n}) {\n  const [label, setLabel] = useState(shortLabel);\n\n  const setShortLabel = () => setLabel(shortLabel);\n\n  const setLongLabel = () => setLabel(longLabel); // group logs based on timestamps\n\n\n  const logGroups = _groupBy(span.logs, log => {\n    const posPercent = getViewedBounds(log.timestamp, log.timestamp).start; // round to the nearest 0.2%\n\n    return toPercent(Math.round(posPercent * 500) / 500);\n  });\n\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.wrapper, className),\n    onClick: onClick,\n    onMouseLeave: setShortLabel,\n    onMouseOver: setLongLabel,\n    \"aria-hidden\": true,\n    \"data-testid\": selectors.components.TraceViewer.spanBar,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      \"aria-label\": label,\n      className: styles.bar,\n      style: {\n        background: color,\n        left: toPercent(viewStart),\n        width: toPercent(viewEnd - viewStart)\n      },\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: cx(styles.label, labelClassName),\n        \"data-testid\": \"SpanBar--label\",\n        children: label\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: Object.keys(logGroups).map(positionKey => /*#__PURE__*/_jsx(Popover, {\n        content: /*#__PURE__*/_jsx(AccordianLogs, {\n          interactive: false,\n          isOpen: true,\n          logs: logGroups[positionKey],\n          timestamp: traceStartTime\n        }),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          \"data-testid\": \"SpanBar--logMarker\",\n          className: styles.logMarker,\n          style: {\n            left: positionKey\n          }\n        })\n      }, positionKey))\n    }), rpc && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.rpc,\n      style: {\n        background: rpc.color,\n        left: toPercent(rpc.viewStart),\n        width: toPercent(rpc.viewEnd - rpc.viewStart)\n      }\n    })]\n  });\n}\n\nexport default /*#__PURE__*/React.memo(SpanBar);","map":{"version":3,"names":["css","cx","groupBy","_groupBy","React","useState","selectors","useStyles2","autoColor","Popover","AccordianLogs","getStyles","theme","wrapper","bar","rpc","label","logMarker","toPercent","value","toFixed","SpanBar","viewEnd","viewStart","getViewedBounds","color","shortLabel","longLabel","onClick","traceStartTime","span","className","labelClassName","setLabel","setShortLabel","setLongLabel","logGroups","logs","log","posPercent","timestamp","start","Math","round","styles","components","TraceViewer","spanBar","background","left","width","Object","keys","map","positionKey","memo"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanBar.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { groupBy as _groupBy } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { Popover } from '../common/Popover';\nimport { TNil } from '../types';\nimport { TraceSpan } from '../types/trace';\n\nimport AccordianLogs from './SpanDetail/AccordianLogs';\nimport { ViewedBoundsFunctionType } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      label: wrapper;\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      overflow: hidden;\n      z-index: 0;\n    `,\n    bar: css`\n      label: bar;\n      border-radius: 3px;\n      min-width: 2px;\n      position: absolute;\n      height: 36%;\n      top: 32%;\n    `,\n    rpc: css`\n      label: rpc;\n      position: absolute;\n      top: 35%;\n      bottom: 35%;\n      z-index: 1;\n    `,\n    label: css`\n      label: label;\n      color: #aaa;\n      font-size: 12px;\n      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      line-height: 1em;\n      white-space: nowrap;\n      padding: 0 0.5em;\n      position: absolute;\n    `,\n    logMarker: css`\n      label: logMarker;\n      background-color: ${autoColor(theme, '#2c3235')};\n      cursor: pointer;\n      height: 60%;\n      min-width: 1px;\n      position: absolute;\n      top: 20%;\n      &:hover {\n        background-color: ${autoColor(theme, '#464c54')};\n      }\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        border: 1px solid transparent;\n      }\n      &::after {\n        left: 0;\n      }\n    `,\n  };\n};\n\ntype Props = {\n  color: string;\n  onClick?: (evt: React.MouseEvent<any>) => void;\n  viewEnd: number;\n  viewStart: number;\n  getViewedBounds: ViewedBoundsFunctionType;\n  rpc:\n    | {\n        viewStart: number;\n        viewEnd: number;\n        color: string;\n      }\n    | TNil;\n  traceStartTime: number;\n  span: TraceSpan;\n  className?: string;\n  labelClassName?: string;\n  longLabel: string;\n  shortLabel: string;\n};\n\nfunction toPercent(value: number) {\n  return `${(value * 100).toFixed(1)}%`;\n}\n\nfunction SpanBar({\n  viewEnd,\n  viewStart,\n  getViewedBounds,\n  color,\n  shortLabel,\n  longLabel,\n  onClick,\n  rpc,\n  traceStartTime,\n  span,\n  className,\n  labelClassName,\n}: Props) {\n  const [label, setLabel] = useState(shortLabel);\n  const setShortLabel = () => setLabel(shortLabel);\n  const setLongLabel = () => setLabel(longLabel);\n\n  // group logs based on timestamps\n  const logGroups = _groupBy(span.logs, (log) => {\n    const posPercent = getViewedBounds(log.timestamp, log.timestamp).start;\n    // round to the nearest 0.2%\n    return toPercent(Math.round(posPercent * 500) / 500);\n  });\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div\n      className={cx(styles.wrapper, className)}\n      onClick={onClick}\n      onMouseLeave={setShortLabel}\n      onMouseOver={setLongLabel}\n      aria-hidden\n      data-testid={selectors.components.TraceViewer.spanBar}\n    >\n      <div\n        aria-label={label}\n        className={styles.bar}\n        style={{\n          background: color,\n          left: toPercent(viewStart),\n          width: toPercent(viewEnd - viewStart),\n        }}\n      >\n        <div className={cx(styles.label, labelClassName)} data-testid=\"SpanBar--label\">\n          {label}\n        </div>\n      </div>\n      <div>\n        {Object.keys(logGroups).map((positionKey) => (\n          <Popover\n            key={positionKey}\n            content={\n              <AccordianLogs interactive={false} isOpen logs={logGroups[positionKey]} timestamp={traceStartTime} />\n            }\n          >\n            <div data-testid=\"SpanBar--logMarker\" className={styles.logMarker} style={{ left: positionKey }} />\n          </Popover>\n        ))}\n      </div>\n      {rpc && (\n        <div\n          className={styles.rpc}\n          style={{\n            background: rpc.color,\n            left: toPercent(rpc.viewStart),\n            width: toPercent(rpc.viewEnd - rpc.viewStart),\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(SpanBar);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,QAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAIA,OAAOC,aAAP,MAA0B,4BAA1B;;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,OAAO,EAAEb,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVS;IAWLc,GAAG,EAAEd,GAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAlBS;IAmBLe,GAAG,EAAEf,GAAI;AACb;AACA;AACA;AACA;AACA;AACA,KAzBS;IA0BLgB,KAAK,EAAEhB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnCS;IAoCLiB,SAAS,EAAEjB,GAAI;AACnB;AACA,0BAA0BQ,SAAS,CAACI,KAAD,EAAQ,SAAR,CAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4BJ,SAAS,CAACI,KAAD,EAAQ,SAAR,CAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA3DS,CAAP;AA6DD,CA9DD;;AAqFA,SAASM,SAAT,CAAmBC,KAAnB,EAAkC;EAChC,OAAQ,GAAE,CAACA,KAAK,GAAG,GAAT,EAAcC,OAAd,CAAsB,CAAtB,CAAyB,GAAnC;AACD;;AAED,SAASC,OAAT,CAAiB;EACfC,OADe;EAEfC,SAFe;EAGfC,eAHe;EAIfC,KAJe;EAKfC,UALe;EAMfC,SANe;EAOfC,OAPe;EAQfb,GARe;EASfc,cATe;EAUfC,IAVe;EAWfC,SAXe;EAYfC;AAZe,CAAjB,EAaU;EACR,MAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoB5B,QAAQ,CAACqB,UAAD,CAAlC;;EACA,MAAMQ,aAAa,GAAG,MAAMD,QAAQ,CAACP,UAAD,CAApC;;EACA,MAAMS,YAAY,GAAG,MAAMF,QAAQ,CAACN,SAAD,CAAnC,CAHQ,CAKR;;;EACA,MAAMS,SAAS,GAAGjC,QAAQ,CAAC2B,IAAI,CAACO,IAAN,EAAaC,GAAD,IAAS;IAC7C,MAAMC,UAAU,GAAGf,eAAe,CAACc,GAAG,CAACE,SAAL,EAAgBF,GAAG,CAACE,SAApB,CAAf,CAA8CC,KAAjE,CAD6C,CAE7C;;IACA,OAAOvB,SAAS,CAACwB,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAG,GAAxB,IAA+B,GAAhC,CAAhB;EACD,CAJyB,CAA1B;;EAKA,MAAMK,MAAM,GAAGrC,UAAU,CAACI,SAAD,CAAzB;EAEA,oBACE;IACE,SAAS,EAAEV,EAAE,CAAC2C,MAAM,CAAC/B,OAAR,EAAiBkB,SAAjB,CADf;IAEE,OAAO,EAAEH,OAFX;IAGE,YAAY,EAAEM,aAHhB;IAIE,WAAW,EAAEC,YAJf;IAKE,mBALF;IAME,eAAa7B,SAAS,CAACuC,UAAV,CAAqBC,WAArB,CAAiCC,OANhD;IAAA,wBAQE;MACE,cAAY/B,KADd;MAEE,SAAS,EAAE4B,MAAM,CAAC9B,GAFpB;MAGE,KAAK,EAAE;QACLkC,UAAU,EAAEvB,KADP;QAELwB,IAAI,EAAE/B,SAAS,CAACK,SAAD,CAFV;QAGL2B,KAAK,EAAEhC,SAAS,CAACI,OAAO,GAAGC,SAAX;MAHX,CAHT;MAAA,uBASE;QAAK,SAAS,EAAEtB,EAAE,CAAC2C,MAAM,CAAC5B,KAAR,EAAegB,cAAf,CAAlB;QAAkD,eAAY,gBAA9D;QAAA,UACGhB;MADH;IATF,EARF,eAqBE;MAAA,UACGmC,MAAM,CAACC,IAAP,CAAYhB,SAAZ,EAAuBiB,GAAvB,CAA4BC,WAAD,iBAC1B,KAAC,OAAD;QAEE,OAAO,eACL,KAAC,aAAD;UAAe,WAAW,EAAE,KAA5B;UAAmC,MAAM,MAAzC;UAA0C,IAAI,EAAElB,SAAS,CAACkB,WAAD,CAAzD;UAAwE,SAAS,EAAEzB;QAAnF,EAHJ;QAAA,uBAME;UAAK,eAAY,oBAAjB;UAAsC,SAAS,EAAEe,MAAM,CAAC3B,SAAxD;UAAmE,KAAK,EAAE;YAAEgC,IAAI,EAAEK;UAAR;QAA1E;MANF,GACOA,WADP,CADD;IADH,EArBF,EAiCGvC,GAAG,iBACF;MACE,SAAS,EAAE6B,MAAM,CAAC7B,GADpB;MAEE,KAAK,EAAE;QACLiC,UAAU,EAAEjC,GAAG,CAACU,KADX;QAELwB,IAAI,EAAE/B,SAAS,CAACH,GAAG,CAACQ,SAAL,CAFV;QAGL2B,KAAK,EAAEhC,SAAS,CAACH,GAAG,CAACO,OAAJ,GAAcP,GAAG,CAACQ,SAAnB;MAHX;IAFT,EAlCJ;EAAA,EADF;AA8CD;;AAED,4BAAenB,KAAK,CAACmD,IAAN,CAAWlC,OAAX,CAAf"},"metadata":{},"sourceType":"module"}