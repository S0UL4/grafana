{"ast":null,"code":"const _excluded = [\"color\", \"className\", \"gradient\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { fieldColorModeRegistry } from '@grafana/data';\nimport { useTheme2 } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SeriesIcon = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    color,\n    className,\n    gradient\n  } = _ref,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme2();\n  let cssColor;\n\n  if (gradient) {\n    var _fieldColorModeRegist, _fieldColorModeRegist2;\n\n    const colors = (_fieldColorModeRegist = (_fieldColorModeRegist2 = fieldColorModeRegistry.get(gradient)).getColors) === null || _fieldColorModeRegist === void 0 ? void 0 : _fieldColorModeRegist.call(_fieldColorModeRegist2, theme);\n\n    if (colors !== null && colors !== void 0 && colors.length) {\n      cssColor = `linear-gradient(90deg, ${colors.join(', ')})`;\n    } else {\n      // Not sure what to default to, this will return gray, this should not happen though.\n      cssColor = theme.visualization.getColorByName('');\n    }\n  } else {\n    cssColor = color;\n  }\n\n  const styles = {\n    background: cssColor,\n    width: '14px',\n    height: '4px',\n    borderRadius: '1px',\n    display: 'inline-block',\n    marginRight: '8px'\n  };\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    ref: ref,\n    className: className,\n    style: styles\n  }, restProps));\n});\nSeriesIcon.displayName = 'SeriesIcon';","map":{"version":3,"names":["React","fieldColorModeRegistry","useTheme2","SeriesIcon","forwardRef","ref","color","className","gradient","restProps","theme","cssColor","colors","get","getColors","length","join","visualization","getColorByName","styles","background","width","height","borderRadius","display","marginRight","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/VizLegend/SeriesIcon.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react';\n\nimport { fieldColorModeRegistry } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n  gradient?: string;\n}\n\nexport const SeriesIcon = React.forwardRef<HTMLDivElement, Props>(\n  ({ color, className, gradient, ...restProps }, ref) => {\n    const theme = useTheme2();\n    let cssColor: string;\n\n    if (gradient) {\n      const colors = fieldColorModeRegistry.get(gradient).getColors?.(theme);\n      if (colors?.length) {\n        cssColor = `linear-gradient(90deg, ${colors.join(', ')})`;\n      } else {\n        // Not sure what to default to, this will return gray, this should not happen though.\n        cssColor = theme.visualization.getColorByName('');\n      }\n    } else {\n      cssColor = color!;\n    }\n\n    const styles: CSSProperties = {\n      background: cssColor,\n      width: '14px',\n      height: '4px',\n      borderRadius: '1px',\n      display: 'inline-block',\n      marginRight: '8px',\n    };\n\n    return <div ref={ref} className={className} style={styles} {...restProps} />;\n  }\n);\n\nSeriesIcon.displayName = 'SeriesIcon';\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,SAASC,sBAAT,QAAuC,eAAvC;AAEA,SAASC,SAAT,QAA0B,cAA1B;;AAOA,OAAO,MAAMC,UAAU,gBAAGH,KAAK,CAACI,UAAN,CACxB,OAA+CC,GAA/C,KAAuD;EAAA,IAAtD;IAAEC,KAAF;IAASC,SAAT;IAAoBC;EAApB,CAAsD;EAAA,IAArBC,SAAqB;;EACrD,MAAMC,KAAK,GAAGR,SAAS,EAAvB;EACA,IAAIS,QAAJ;;EAEA,IAAIH,QAAJ,EAAc;IAAA;;IACZ,MAAMI,MAAM,4BAAG,0BAAAX,sBAAsB,CAACY,GAAvB,CAA2BL,QAA3B,GAAqCM,SAAxC,0DAAG,mDAAiDJ,KAAjD,CAAf;;IACA,IAAIE,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEG,MAAZ,EAAoB;MAClBJ,QAAQ,GAAI,0BAAyBC,MAAM,CAACI,IAAP,CAAY,IAAZ,CAAkB,GAAvD;IACD,CAFD,MAEO;MACL;MACAL,QAAQ,GAAGD,KAAK,CAACO,aAAN,CAAoBC,cAApB,CAAmC,EAAnC,CAAX;IACD;EACF,CARD,MAQO;IACLP,QAAQ,GAAGL,KAAX;EACD;;EAED,MAAMa,MAAqB,GAAG;IAC5BC,UAAU,EAAET,QADgB;IAE5BU,KAAK,EAAE,MAFqB;IAG5BC,MAAM,EAAE,KAHoB;IAI5BC,YAAY,EAAE,KAJc;IAK5BC,OAAO,EAAE,cALmB;IAM5BC,WAAW,EAAE;EANe,CAA9B;EASA,oBAAO;IAAK,GAAG,EAAEpB,GAAV;IAAe,SAAS,EAAEE,SAA1B;IAAqC,KAAK,EAAEY;EAA5C,GAAwDV,SAAxD,EAAP;AACD,CA3BuB,CAAnB;AA8BPN,UAAU,CAACuB,WAAX,GAAyB,YAAzB"},"metadata":{},"sourceType":"module"}