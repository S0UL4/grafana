{"ast":null,"code":"var _Icon;\n\nimport { css, cx } from '@emotion/css';\nimport { uniqueId, isString } from 'lodash';\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { FileListItem } from './FileListItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function FileDropzone({\n  options,\n  children,\n  readAs,\n  onLoad,\n  fileListRenderer,\n  onFileRemove\n}) {\n  const [files, setFiles] = useState([]);\n  const setFileProperty = useCallback((customFile, action) => {\n    setFiles(oldFiles => {\n      return oldFiles.map(oldFile => {\n        if (oldFile.id === customFile.id) {\n          action(oldFile);\n          return oldFile;\n        }\n\n        return oldFile;\n      });\n    });\n  }, []);\n  const onDrop = useCallback((acceptedFiles, rejectedFiles, event) => {\n    let customFiles = acceptedFiles.map(mapToCustomFile);\n\n    if ((options === null || options === void 0 ? void 0 : options.multiple) === false) {\n      setFiles(customFiles);\n    } else {\n      setFiles(oldFiles => [...oldFiles, ...customFiles]);\n    }\n\n    if (options !== null && options !== void 0 && options.onDrop) {\n      options.onDrop(acceptedFiles, rejectedFiles, event);\n    } else {\n      for (const customFile of customFiles) {\n        const reader = new FileReader();\n\n        const read = () => {\n          if (readAs) {\n            reader[readAs](customFile.file);\n          } else {\n            reader.readAsText(customFile.file);\n          }\n        }; // Set abort FileReader\n\n\n        setFileProperty(customFile, fileToModify => {\n          fileToModify.abortUpload = () => {\n            reader.abort();\n          };\n\n          fileToModify.retryUpload = () => {\n            setFileProperty(customFile, fileToModify => {\n              fileToModify.error = null;\n              fileToModify.progress = undefined;\n            });\n            read();\n          };\n        });\n\n        reader.onabort = () => {\n          setFileProperty(customFile, fileToModify => {\n            fileToModify.error = new DOMException('Aborted');\n          });\n        };\n\n        reader.onprogress = event => {\n          setFileProperty(customFile, fileToModify => {\n            fileToModify.progress = event.loaded;\n          });\n        };\n\n        reader.onload = () => {\n          onLoad === null || onLoad === void 0 ? void 0 : onLoad(reader.result);\n        };\n\n        reader.onerror = () => {\n          setFileProperty(customFile, fileToModify => {\n            fileToModify.error = reader.error;\n          });\n        };\n\n        read();\n      }\n    }\n  }, [onLoad, options, readAs, setFileProperty]);\n\n  const removeFile = file => {\n    const newFiles = files.filter(f => file.id !== f.id);\n    setFiles(newFiles);\n    onFileRemove === null || onFileRemove === void 0 ? void 0 : onFileRemove(file);\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone(Object.assign({}, options, {\n    useFsAccessApi: false,\n    onDrop,\n    accept: transformAcceptToNewFormat(options === null || options === void 0 ? void 0 : options.accept)\n  }));\n  const theme = useTheme2();\n  const styles = getStyles(theme, isDragActive);\n  const fileList = files.map(file => {\n    if (fileListRenderer) {\n      return fileListRenderer(file, removeFile);\n    }\n\n    return /*#__PURE__*/_jsx(FileListItem, {\n      file: file,\n      removeFile: removeFile\n    }, file.id);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(\"div\", Object.assign({\n      \"data-testid\": \"dropzone\"\n    }, getRootProps({\n      className: styles.dropzone\n    }), {\n      children: [/*#__PURE__*/_jsx(\"input\", Object.assign({}, getInputProps())), children !== null && children !== void 0 ? children : /*#__PURE__*/_jsx(FileDropzoneDefaultChildren, {\n        primaryText: getPrimaryText(files, options)\n      })]\n    })), (options === null || options === void 0 ? void 0 : options.accept) && /*#__PURE__*/_jsx(\"small\", {\n      className: cx(styles.small, styles.acceptMargin),\n      children: getAcceptedFileTypeText(options.accept)\n    }), fileList]\n  });\n}\nexport function getMimeTypeByExtension(ext) {\n  if (['txt', 'json', 'csv', 'xls', 'yml'].some(e => ext.match(e))) {\n    return 'text/plain';\n  }\n\n  return 'application/octet-stream';\n}\nexport function transformAcceptToNewFormat(accept) {\n  if (isString(accept)) {\n    return {\n      [getMimeTypeByExtension(accept)]: [accept]\n    };\n  }\n\n  if (Array.isArray(accept)) {\n    return accept.reduce((prev, current) => {\n      const mime = getMimeTypeByExtension(current);\n      prev[mime] = prev[mime] ? [...prev[mime], current] : [current];\n      return prev;\n    }, {});\n  }\n\n  return accept;\n}\nexport function FileDropzoneDefaultChildren({\n  primaryText = 'Upload file',\n  secondaryText = 'Drag and drop here or browse'\n}) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.iconWrapper,\n    children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: \"upload\",\n      size: \"xxl\"\n    })), /*#__PURE__*/_jsx(\"h3\", {\n      children: primaryText\n    }), /*#__PURE__*/_jsx(\"small\", {\n      className: styles.small,\n      children: secondaryText\n    })]\n  });\n}\n\nfunction getPrimaryText(files, options) {\n  if ((options === null || options === void 0 ? void 0 : options.multiple) === undefined || options !== null && options !== void 0 && options.multiple) {\n    return 'Upload file';\n  }\n\n  return files.length ? 'Replace file' : 'Upload file';\n}\n\nfunction getAcceptedFileTypeText(accept) {\n  if (isString(accept)) {\n    return `Accepted file type: ${accept}`;\n  }\n\n  if (Array.isArray(accept)) {\n    return `Accepted file types: ${accept.join(', ')}`;\n  } // react-dropzone has updated the type of the \"accept\" parameter since v13.0.0:\n  // https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js#L95\n\n\n  return `Accepted file types: ${Object.values(accept).flat().join(', ')}`;\n}\n\nfunction mapToCustomFile(file) {\n  return {\n    id: uniqueId('file'),\n    file,\n    error: null\n  };\n}\n\nfunction getStyles(theme, isDragActive) {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    dropzone: css`\n      display: flex;\n      flex: 1;\n      flex-direction: column;\n      align-items: center;\n      padding: ${theme.spacing(6)};\n      border-radius: 2px;\n      border: 2px dashed ${theme.colors.border.medium};\n      background-color: ${isDragActive ? theme.colors.background.secondary : theme.colors.background.primary};\n      cursor: pointer;\n    `,\n    iconWrapper: css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `,\n    acceptMargin: css`\n      margin: ${theme.spacing(2, 0, 1)};\n    `,\n    small: css`\n      color: ${theme.colors.text.secondary};\n    `\n  };\n}","map":{"version":3,"names":["css","cx","uniqueId","isString","React","useCallback","useState","useDropzone","useTheme2","Icon","FileListItem","FileDropzone","options","children","readAs","onLoad","fileListRenderer","onFileRemove","files","setFiles","setFileProperty","customFile","action","oldFiles","map","oldFile","id","onDrop","acceptedFiles","rejectedFiles","event","customFiles","mapToCustomFile","multiple","reader","FileReader","read","file","readAsText","fileToModify","abortUpload","abort","retryUpload","error","progress","undefined","onabort","DOMException","onprogress","loaded","onload","result","onerror","removeFile","newFiles","filter","f","getRootProps","getInputProps","isDragActive","useFsAccessApi","accept","transformAcceptToNewFormat","theme","styles","getStyles","fileList","container","className","dropzone","getPrimaryText","small","acceptMargin","getAcceptedFileTypeText","getMimeTypeByExtension","ext","some","e","match","Array","isArray","reduce","prev","current","mime","FileDropzoneDefaultChildren","primaryText","secondaryText","iconWrapper","length","join","Object","values","flat","spacing","colors","border","medium","background","secondary","primary","text"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/FileDropzone/FileDropzone.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { uniqueId, isString } from 'lodash';\nimport React, { ReactNode, useCallback, useState } from 'react';\nimport { DropEvent, DropzoneOptions, FileRejection, useDropzone, Accept } from 'react-dropzone';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { FileListItem } from './FileListItem';\n\ntype BackwardsCompatibleDropzoneOptions = Omit<DropzoneOptions, 'accept'> & {\n  // For backward compatibility we are still allowing the old `string | string[]` format for adding accepted file types (format changed in v13.0.0)\n  accept?: string | string[] | Accept;\n};\n\nexport interface FileDropzoneProps {\n  /**\n   * Use the children property to have custom dropzone view.\n   */\n  children?: ReactNode;\n  /**\n   * Use this property to override the default behaviour for the react-dropzone options.\n   * @default {\n   *  maxSize: Infinity,\n   *  minSize: 0,\n   *  multiple: true,\n   *  useFsAccessApi: false,\n   *  maxFiles: 0,\n   * }\n   */\n  options?: BackwardsCompatibleDropzoneOptions;\n  /**\n   * Use this to change the FileReader's read.\n   */\n  readAs?: 'readAsArrayBuffer' | 'readAsText' | 'readAsBinaryString' | 'readAsDataURL';\n  /**\n   * Use the onLoad function to get the result from FileReader.\n   */\n  onLoad?: (result: string | ArrayBuffer | null) => void;\n  /**\n   * The fileListRenderer property can be used to overwrite the list of files. To not to show\n   * any list return null in the function.\n   */\n  fileListRenderer?: (file: DropzoneFile, removeFile: (file: DropzoneFile) => void) => ReactNode;\n  onFileRemove?: (file: DropzoneFile) => void;\n}\n\nexport interface DropzoneFile {\n  file: File;\n  id: string;\n  error: DOMException | null;\n  progress?: number;\n  abortUpload?: () => void;\n  retryUpload?: () => void;\n}\n\nexport function FileDropzone({ options, children, readAs, onLoad, fileListRenderer, onFileRemove }: FileDropzoneProps) {\n  const [files, setFiles] = useState<DropzoneFile[]>([]);\n\n  const setFileProperty = useCallback(\n    (customFile: DropzoneFile, action: (customFileToModify: DropzoneFile) => void) => {\n      setFiles((oldFiles) => {\n        return oldFiles.map((oldFile) => {\n          if (oldFile.id === customFile.id) {\n            action(oldFile);\n            return oldFile;\n          }\n          return oldFile;\n        });\n      });\n    },\n    []\n  );\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[], rejectedFiles: FileRejection[], event: DropEvent) => {\n      let customFiles = acceptedFiles.map(mapToCustomFile);\n      if (options?.multiple === false) {\n        setFiles(customFiles);\n      } else {\n        setFiles((oldFiles) => [...oldFiles, ...customFiles]);\n      }\n\n      if (options?.onDrop) {\n        options.onDrop(acceptedFiles, rejectedFiles, event);\n      } else {\n        for (const customFile of customFiles) {\n          const reader = new FileReader();\n\n          const read = () => {\n            if (readAs) {\n              reader[readAs](customFile.file);\n            } else {\n              reader.readAsText(customFile.file);\n            }\n          };\n\n          // Set abort FileReader\n          setFileProperty(customFile, (fileToModify) => {\n            fileToModify.abortUpload = () => {\n              reader.abort();\n            };\n            fileToModify.retryUpload = () => {\n              setFileProperty(customFile, (fileToModify) => {\n                fileToModify.error = null;\n                fileToModify.progress = undefined;\n              });\n              read();\n            };\n          });\n\n          reader.onabort = () => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.error = new DOMException('Aborted');\n            });\n          };\n\n          reader.onprogress = (event) => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.progress = event.loaded;\n            });\n          };\n\n          reader.onload = () => {\n            onLoad?.(reader.result);\n          };\n\n          reader.onerror = () => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.error = reader.error;\n            });\n          };\n\n          read();\n        }\n      }\n    },\n    [onLoad, options, readAs, setFileProperty]\n  );\n\n  const removeFile = (file: DropzoneFile) => {\n    const newFiles = files.filter((f) => file.id !== f.id);\n    setFiles(newFiles);\n    onFileRemove?.(file);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    ...options,\n    useFsAccessApi: false,\n    onDrop,\n    accept: transformAcceptToNewFormat(options?.accept),\n  });\n  const theme = useTheme2();\n  const styles = getStyles(theme, isDragActive);\n  const fileList = files.map((file) => {\n    if (fileListRenderer) {\n      return fileListRenderer(file, removeFile);\n    }\n    return <FileListItem key={file.id} file={file} removeFile={removeFile} />;\n  });\n\n  return (\n    <div className={styles.container}>\n      <div data-testid=\"dropzone\" {...getRootProps({ className: styles.dropzone })}>\n        <input {...getInputProps()} />\n        {children ?? <FileDropzoneDefaultChildren primaryText={getPrimaryText(files, options)} />}\n      </div>\n      {options?.accept && (\n        <small className={cx(styles.small, styles.acceptMargin)}>{getAcceptedFileTypeText(options.accept)}</small>\n      )}\n      {fileList}\n    </div>\n  );\n}\n\nexport function getMimeTypeByExtension(ext: string) {\n  if (['txt', 'json', 'csv', 'xls', 'yml'].some((e) => ext.match(e))) {\n    return 'text/plain';\n  }\n\n  return 'application/octet-stream';\n}\n\nexport function transformAcceptToNewFormat(accept?: string | string[] | Accept): Accept | undefined {\n  if (isString(accept)) {\n    return {\n      [getMimeTypeByExtension(accept)]: [accept],\n    };\n  }\n\n  if (Array.isArray(accept)) {\n    return accept.reduce((prev: Record<string, string[]>, current) => {\n      const mime = getMimeTypeByExtension(current);\n\n      prev[mime] = prev[mime] ? [...prev[mime], current] : [current];\n\n      return prev;\n    }, {});\n  }\n\n  return accept;\n}\n\nexport function FileDropzoneDefaultChildren({\n  primaryText = 'Upload file',\n  secondaryText = 'Drag and drop here or browse',\n}) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.iconWrapper}>\n      <Icon name=\"upload\" size=\"xxl\" />\n      <h3>{primaryText}</h3>\n      <small className={styles.small}>{secondaryText}</small>\n    </div>\n  );\n}\nfunction getPrimaryText(files: DropzoneFile[], options?: BackwardsCompatibleDropzoneOptions) {\n  if (options?.multiple === undefined || options?.multiple) {\n    return 'Upload file';\n  }\n  return files.length ? 'Replace file' : 'Upload file';\n}\n\nfunction getAcceptedFileTypeText(accept: string | string[] | Accept) {\n  if (isString(accept)) {\n    return `Accepted file type: ${accept}`;\n  }\n\n  if (Array.isArray(accept)) {\n    return `Accepted file types: ${accept.join(', ')}`;\n  }\n\n  // react-dropzone has updated the type of the \"accept\" parameter since v13.0.0:\n  // https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js#L95\n  return `Accepted file types: ${Object.values(accept).flat().join(', ')}`;\n}\n\nfunction mapToCustomFile(file: File): DropzoneFile {\n  return {\n    id: uniqueId('file'),\n    file,\n    error: null,\n  };\n}\n\nfunction getStyles(theme: GrafanaTheme2, isDragActive?: boolean) {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    dropzone: css`\n      display: flex;\n      flex: 1;\n      flex-direction: column;\n      align-items: center;\n      padding: ${theme.spacing(6)};\n      border-radius: 2px;\n      border: 2px dashed ${theme.colors.border.medium};\n      background-color: ${isDragActive ? theme.colors.background.secondary : theme.colors.background.primary};\n      cursor: pointer;\n    `,\n    iconWrapper: css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `,\n    acceptMargin: css`\n      margin: ${theme.spacing(2, 0, 1)};\n    `,\n    small: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}