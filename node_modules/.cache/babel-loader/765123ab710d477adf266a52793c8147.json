{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-use';\nexport function useShadowedState(outsideVal) {\n  const [currentVal, setCurrentVal] = useState(outsideVal);\n  const prevOutsideVal = usePrevious(outsideVal);\n  useEffect(() => {\n    const isOutsideValChanged = prevOutsideVal !== outsideVal; // if the value changes from the outside, we accept it into the state\n    // (we only set it if it is different from the current value)\n\n    if (isOutsideValChanged && currentVal !== outsideVal) {\n      setCurrentVal(outsideVal);\n    }\n  }, [outsideVal, currentVal, prevOutsideVal]);\n  return [currentVal, setCurrentVal];\n}","map":{"version":3,"names":["useState","useEffect","usePrevious","useShadowedState","outsideVal","currentVal","setCurrentVal","prevOutsideVal","isOutsideValChanged"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/useShadowedState.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-use';\n\nexport function useShadowedState<T>(outsideVal: T): [T, (newVal: T) => void] {\n  const [currentVal, setCurrentVal] = useState(outsideVal);\n  const prevOutsideVal = usePrevious(outsideVal);\n\n  useEffect(() => {\n    const isOutsideValChanged = prevOutsideVal !== outsideVal;\n    // if the value changes from the outside, we accept it into the state\n    // (we only set it if it is different from the current value)\n    if (isOutsideValChanged && currentVal !== outsideVal) {\n      setCurrentVal(outsideVal);\n    }\n  }, [outsideVal, currentVal, prevOutsideVal]);\n\n  return [currentVal, setCurrentVal];\n}\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,SAASC,gBAAT,CAA6BC,UAA7B,EAAsE;EAC3E,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAACI,UAAD,CAA5C;EACA,MAAMG,cAAc,GAAGL,WAAW,CAACE,UAAD,CAAlC;EAEAH,SAAS,CAAC,MAAM;IACd,MAAMO,mBAAmB,GAAGD,cAAc,KAAKH,UAA/C,CADc,CAEd;IACA;;IACA,IAAII,mBAAmB,IAAIH,UAAU,KAAKD,UAA1C,EAAsD;MACpDE,aAAa,CAACF,UAAD,CAAb;IACD;EACF,CAPQ,EAON,CAACA,UAAD,EAAaC,UAAb,EAAyBE,cAAzB,CAPM,CAAT;EASA,OAAO,CAACF,UAAD,EAAaC,aAAb,CAAP;AACD"},"metadata":{},"sourceType":"module"}