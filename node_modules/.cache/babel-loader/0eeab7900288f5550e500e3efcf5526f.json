{"ast":null,"code":"import { getTemplateSrv } from '@grafana/runtime';\nimport { CompletionItemProvider } from '../../monarch/CompletionItemProvider';\nimport { TRIGGER_SUGGEST } from '../../monarch/commands';\nimport { SuggestionKind, CompletionItemPriority } from '../../monarch/types';\nimport { METRIC_MATH_FNS, METRIC_MATH_KEYWORDS, METRIC_MATH_OPERATORS, METRIC_MATH_PERIODS, METRIC_MATH_STATISTIC_KEYWORD_STRINGS } from '../language';\nimport { getStatementPosition } from './statementPosition';\nimport { getSuggestionKinds } from './suggestionKind';\nimport { MetricMathTokenTypes } from './types';\nexport class MetricMathCompletionItemProvider extends CompletionItemProvider {\n  constructor(datasource, templateSrv = getTemplateSrv()) {\n    super(datasource, templateSrv);\n    this.getStatementPosition = getStatementPosition;\n    this.getSuggestionKinds = getSuggestionKinds;\n    this.tokenTypes = MetricMathTokenTypes;\n  }\n\n  async getSuggestions(monaco, currentToken, suggestionKinds, statementPosition, position) {\n    let suggestions = [];\n    const invalidRangeToken = (currentToken === null || currentToken === void 0 ? void 0 : currentToken.isWhiteSpace()) || (currentToken === null || currentToken === void 0 ? void 0 : currentToken.isParenthesis());\n    const range = invalidRangeToken || !(currentToken !== null && currentToken !== void 0 && currentToken.range) ? monaco.Range.fromPositions(position) : currentToken === null || currentToken === void 0 ? void 0 : currentToken.range;\n\n    const toCompletionItem = (value, rest = {}) => {\n      const item = Object.assign({\n        label: value,\n        insertText: value,\n        kind: monaco.languages.CompletionItemKind.Field,\n        range,\n        sortText: CompletionItemPriority.Medium\n      }, rest);\n      return item;\n    };\n\n    function addSuggestion(value, rest = {}) {\n      suggestions = [...suggestions, toCompletionItem(value, rest)];\n    }\n\n    for (const suggestion of suggestionKinds) {\n      switch (suggestion) {\n        case SuggestionKind.FunctionsWithArguments:\n          METRIC_MATH_FNS.map(f => addSuggestion(f, {\n            insertText: f === 'SEARCH' ? `${f}('$0')` : `${f}($0)`,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            command: TRIGGER_SUGGEST,\n            kind: monaco.languages.CompletionItemKind.Function\n          }));\n          break;\n\n        case SuggestionKind.KeywordArguments:\n          METRIC_MATH_KEYWORDS.map(s => addSuggestion(s, {\n            insertText: s,\n            command: TRIGGER_SUGGEST,\n            kind: monaco.languages.CompletionItemKind.Keyword,\n            sortText: CompletionItemPriority.MediumHigh\n          }));\n          break;\n\n        case SuggestionKind.Statistic:\n          METRIC_MATH_STATISTIC_KEYWORD_STRINGS.map(s => addSuggestion(s, {\n            insertText: `'${s}', `,\n            command: TRIGGER_SUGGEST\n          }));\n          break;\n\n        case SuggestionKind.Operators:\n          METRIC_MATH_OPERATORS.map(s => addSuggestion(s, {\n            insertText: `${s} `,\n            command: TRIGGER_SUGGEST\n          }));\n          break;\n\n        case SuggestionKind.Period:\n          METRIC_MATH_PERIODS.map((s, idx) => addSuggestion(s.toString(), {\n            kind: monaco.languages.CompletionItemKind.Value,\n            sortText: String.fromCharCode(97 + idx) // converts index 0, 1 to \"a\", \"b\", etc needed to show the time periods in numerical order\n\n          }));\n          break;\n      }\n    } // always suggest template variables\n\n\n    this.templateVariables.map(v => {\n      addSuggestion(v, {\n        range,\n        label: v,\n        insertText: v,\n        kind: monaco.languages.CompletionItemKind.Variable,\n        sortText: CompletionItemPriority.Low\n      });\n    });\n    return suggestions;\n  }\n\n}","map":{"version":3,"names":["getTemplateSrv","CompletionItemProvider","TRIGGER_SUGGEST","SuggestionKind","CompletionItemPriority","METRIC_MATH_FNS","METRIC_MATH_KEYWORDS","METRIC_MATH_OPERATORS","METRIC_MATH_PERIODS","METRIC_MATH_STATISTIC_KEYWORD_STRINGS","getStatementPosition","getSuggestionKinds","MetricMathTokenTypes","MetricMathCompletionItemProvider","constructor","datasource","templateSrv","tokenTypes","getSuggestions","monaco","currentToken","suggestionKinds","statementPosition","position","suggestions","invalidRangeToken","isWhiteSpace","isParenthesis","range","Range","fromPositions","toCompletionItem","value","rest","item","label","insertText","kind","languages","CompletionItemKind","Field","sortText","Medium","addSuggestion","suggestion","FunctionsWithArguments","map","f","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","command","Function","KeywordArguments","s","Keyword","MediumHigh","Statistic","Operators","Period","idx","toString","Value","String","fromCharCode","templateVariables","v","Variable","Low"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/metric-math/completion/CompletionItemProvider.ts"],"sourcesContent":["import { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport type { Monaco, monacoTypes } from '@grafana/ui';\n\nimport { CloudWatchDatasource } from '../../datasource';\nimport { CompletionItemProvider } from '../../monarch/CompletionItemProvider';\nimport { LinkedToken } from '../../monarch/LinkedToken';\nimport { TRIGGER_SUGGEST } from '../../monarch/commands';\nimport { SuggestionKind, CompletionItemPriority, StatementPosition } from '../../monarch/types';\nimport {\n  METRIC_MATH_FNS,\n  METRIC_MATH_KEYWORDS,\n  METRIC_MATH_OPERATORS,\n  METRIC_MATH_PERIODS,\n  METRIC_MATH_STATISTIC_KEYWORD_STRINGS,\n} from '../language';\n\nimport { getStatementPosition } from './statementPosition';\nimport { getSuggestionKinds } from './suggestionKind';\nimport { MetricMathTokenTypes } from './types';\n\ntype CompletionItem = monacoTypes.languages.CompletionItem;\n\nexport class MetricMathCompletionItemProvider extends CompletionItemProvider {\n  constructor(datasource: CloudWatchDatasource, templateSrv: TemplateSrv = getTemplateSrv()) {\n    super(datasource, templateSrv);\n    this.getStatementPosition = getStatementPosition;\n    this.getSuggestionKinds = getSuggestionKinds;\n    this.tokenTypes = MetricMathTokenTypes;\n  }\n\n  async getSuggestions(\n    monaco: Monaco,\n    currentToken: LinkedToken | null,\n    suggestionKinds: SuggestionKind[],\n    statementPosition: StatementPosition,\n    position: monacoTypes.IPosition\n  ): Promise<CompletionItem[]> {\n    let suggestions: CompletionItem[] = [];\n    const invalidRangeToken = currentToken?.isWhiteSpace() || currentToken?.isParenthesis();\n    const range =\n      invalidRangeToken || !currentToken?.range ? monaco.Range.fromPositions(position) : currentToken?.range;\n\n    const toCompletionItem = (value: string, rest: Partial<CompletionItem> = {}) => {\n      const item: CompletionItem = {\n        label: value,\n        insertText: value,\n        kind: monaco.languages.CompletionItemKind.Field,\n        range,\n        sortText: CompletionItemPriority.Medium,\n        ...rest,\n      };\n      return item;\n    };\n\n    function addSuggestion(value: string, rest: Partial<CompletionItem> = {}) {\n      suggestions = [...suggestions, toCompletionItem(value, rest)];\n    }\n\n    for (const suggestion of suggestionKinds) {\n      switch (suggestion) {\n        case SuggestionKind.FunctionsWithArguments:\n          METRIC_MATH_FNS.map((f) =>\n            addSuggestion(f, {\n              insertText: f === 'SEARCH' ? `${f}('$0')` : `${f}($0)`,\n              insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n              command: TRIGGER_SUGGEST,\n              kind: monaco.languages.CompletionItemKind.Function,\n            })\n          );\n          break;\n\n        case SuggestionKind.KeywordArguments:\n          METRIC_MATH_KEYWORDS.map((s) =>\n            addSuggestion(s, {\n              insertText: s,\n              command: TRIGGER_SUGGEST,\n              kind: monaco.languages.CompletionItemKind.Keyword,\n              sortText: CompletionItemPriority.MediumHigh,\n            })\n          );\n          break;\n\n        case SuggestionKind.Statistic:\n          METRIC_MATH_STATISTIC_KEYWORD_STRINGS.map((s) =>\n            addSuggestion(s, {\n              insertText: `'${s}', `,\n              command: TRIGGER_SUGGEST,\n            })\n          );\n          break;\n\n        case SuggestionKind.Operators:\n          METRIC_MATH_OPERATORS.map((s) =>\n            addSuggestion(s, {\n              insertText: `${s} `,\n              command: TRIGGER_SUGGEST,\n            })\n          );\n          break;\n\n        case SuggestionKind.Period:\n          METRIC_MATH_PERIODS.map((s, idx) =>\n            addSuggestion(s.toString(), {\n              kind: monaco.languages.CompletionItemKind.Value,\n              sortText: String.fromCharCode(97 + idx), // converts index 0, 1 to \"a\", \"b\", etc needed to show the time periods in numerical order\n            })\n          );\n          break;\n      }\n    }\n\n    // always suggest template variables\n    this.templateVariables.map((v) => {\n      addSuggestion(v, {\n        range,\n        label: v,\n        insertText: v,\n        kind: monaco.languages.CompletionItemKind.Variable,\n        sortText: CompletionItemPriority.Low,\n      });\n    });\n\n    return suggestions;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}