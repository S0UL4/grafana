{"ast":null,"code":"var _td;\n\nimport React from 'react';\nimport { Label } from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { contextSrv } from 'app/core/core';\nimport { OrgRolePicker } from 'app/features/admin/OrgRolePicker';\nimport { AccessControlAction } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ServiceAccountRoleRow = ({\n  label,\n  serviceAccount,\n  roleOptions,\n  builtInRoles,\n  onRoleChange\n}) => {\n  const inputId = `${label}-input`;\n  const canUpdateRole = contextSrv.hasPermissionInMetadata(AccessControlAction.ServiceAccountsWrite, serviceAccount);\n  const rolePickerDisabled = !canUpdateRole || serviceAccount.isDisabled;\n  return /*#__PURE__*/_jsxs(\"tr\", {\n    children: [/*#__PURE__*/_jsx(\"td\", {\n      children: /*#__PURE__*/_jsx(Label, {\n        htmlFor: inputId,\n        children: label\n      })\n    }), contextSrv.licensedAccessControlEnabled() ? /*#__PURE__*/_jsx(\"td\", {\n      className: \"width-25\",\n      colSpan: 3,\n      children: /*#__PURE__*/_jsx(UserRolePicker, {\n        userId: serviceAccount.id,\n        orgId: serviceAccount.orgId,\n        builtInRole: serviceAccount.role,\n        onBuiltinRoleChange: onRoleChange,\n        roleOptions: roleOptions,\n        builtInRoles: builtInRoles,\n        disabled: rolePickerDisabled\n      })\n    }) : /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        children: /*#__PURE__*/_jsx(OrgRolePicker, {\n          width: 24,\n          inputId: inputId,\n          \"aria-label\": \"Role\",\n          value: serviceAccount.role,\n          disabled: rolePickerDisabled,\n          onChange: onRoleChange\n        })\n      }), _td || (_td = /*#__PURE__*/_jsx(\"td\", {\n        colSpan: 2\n      }))]\n    })]\n  });\n};","map":{"version":3,"names":["React","Label","UserRolePicker","contextSrv","OrgRolePicker","AccessControlAction","ServiceAccountRoleRow","label","serviceAccount","roleOptions","builtInRoles","onRoleChange","inputId","canUpdateRole","hasPermissionInMetadata","ServiceAccountsWrite","rolePickerDisabled","isDisabled","licensedAccessControlEnabled","id","orgId","role"],"sources":["/home/soula/grafana/public/app/features/serviceaccounts/components/ServiceAccountRoleRow.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Label } from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { contextSrv } from 'app/core/core';\nimport { OrgRolePicker } from 'app/features/admin/OrgRolePicker';\nimport { AccessControlAction, OrgRole, Role, ServiceAccountDTO } from 'app/types';\n\ninterface Props {\n  label: string;\n  serviceAccount: ServiceAccountDTO;\n  onRoleChange: (role: OrgRole) => void;\n  roleOptions: Role[];\n  builtInRoles: Record<string, Role[]>;\n}\n\nexport const ServiceAccountRoleRow = ({\n  label,\n  serviceAccount,\n  roleOptions,\n  builtInRoles,\n  onRoleChange,\n}: Props): JSX.Element => {\n  const inputId = `${label}-input`;\n  const canUpdateRole = contextSrv.hasPermissionInMetadata(AccessControlAction.ServiceAccountsWrite, serviceAccount);\n  const rolePickerDisabled = !canUpdateRole || serviceAccount.isDisabled;\n\n  return (\n    <tr>\n      <td>\n        <Label htmlFor={inputId}>{label}</Label>\n      </td>\n      {contextSrv.licensedAccessControlEnabled() ? (\n        <td className=\"width-25\" colSpan={3}>\n          <UserRolePicker\n            userId={serviceAccount.id}\n            orgId={serviceAccount.orgId}\n            builtInRole={serviceAccount.role}\n            onBuiltinRoleChange={onRoleChange}\n            roleOptions={roleOptions}\n            builtInRoles={builtInRoles}\n            disabled={rolePickerDisabled}\n          />\n        </td>\n      ) : (\n        <>\n          <td>\n            <OrgRolePicker\n              width={24}\n              inputId={inputId}\n              aria-label=\"Role\"\n              value={serviceAccount.role}\n              disabled={rolePickerDisabled}\n              onChange={onRoleChange}\n            />\n          </td>\n          <td colSpan={2}></td>\n        </>\n      )}\n    </tr>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,mBAAT,QAAsE,WAAtE;;;;AAUA,OAAO,MAAMC,qBAAqB,GAAG,CAAC;EACpCC,KADoC;EAEpCC,cAFoC;EAGpCC,WAHoC;EAIpCC,YAJoC;EAKpCC;AALoC,CAAD,KAMX;EACxB,MAAMC,OAAO,GAAI,GAAEL,KAAM,QAAzB;EACA,MAAMM,aAAa,GAAGV,UAAU,CAACW,uBAAX,CAAmCT,mBAAmB,CAACU,oBAAvD,EAA6EP,cAA7E,CAAtB;EACA,MAAMQ,kBAAkB,GAAG,CAACH,aAAD,IAAkBL,cAAc,CAACS,UAA5D;EAEA,oBACE;IAAA,wBACE;MAAA,uBACE,KAAC,KAAD;QAAO,OAAO,EAAEL,OAAhB;QAAA,UAA0BL;MAA1B;IADF,EADF,EAIGJ,UAAU,CAACe,4BAAX,kBACC;MAAI,SAAS,EAAC,UAAd;MAAyB,OAAO,EAAE,CAAlC;MAAA,uBACE,KAAC,cAAD;QACE,MAAM,EAAEV,cAAc,CAACW,EADzB;QAEE,KAAK,EAAEX,cAAc,CAACY,KAFxB;QAGE,WAAW,EAAEZ,cAAc,CAACa,IAH9B;QAIE,mBAAmB,EAAEV,YAJvB;QAKE,WAAW,EAAEF,WALf;QAME,YAAY,EAAEC,YANhB;QAOE,QAAQ,EAAEM;MAPZ;IADF,EADD,gBAaC;MAAA,wBACE;QAAA,uBACE,KAAC,aAAD;UACE,KAAK,EAAE,EADT;UAEE,OAAO,EAAEJ,OAFX;UAGE,cAAW,MAHb;UAIE,KAAK,EAAEJ,cAAc,CAACa,IAJxB;UAKE,QAAQ,EAAEL,kBALZ;UAME,QAAQ,EAAEL;QANZ;MADF,EADF,6BAWE;QAAI,OAAO,EAAE;MAAb,EAXF;IAAA,EAjBJ;EAAA,EADF;AAkCD,CA7CM"},"metadata":{},"sourceType":"module"}