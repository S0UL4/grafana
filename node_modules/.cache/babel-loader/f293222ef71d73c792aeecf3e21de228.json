{"ast":null,"code":"var _code;\n\nimport React from 'react';\nimport { Switch } from '@grafana/ui';\nimport { GRAPH_PERIODS, SELECT_WIDTH } from '../constants';\nimport { PeriodSelect, QueryEditorRow } from '.';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GraphPeriod = ({\n  refId,\n  onChange,\n  graphPeriod,\n  variableOptionGroup\n}) => {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(QueryEditorRow, {\n      label: \"Graph period\",\n      htmlFor: `${refId}-graph-period`,\n      tooltip: /*#__PURE__*/_jsxs(_Fragment, {\n        children: [\"Set \", _code || (_code = /*#__PURE__*/_jsx(\"code\", {\n          children: \"graph_period\"\n        })), \" which forces a preferred period between points. Automatically set to the current interval if left blank.\"]\n      }),\n      children: [/*#__PURE__*/_jsx(Switch, {\n        \"data-testid\": `${refId}-switch-graph-period`,\n        value: graphPeriod !== 'disabled',\n        onChange: e => onChange(e.currentTarget.checked ? '' : 'disabled')\n      }), /*#__PURE__*/_jsx(PeriodSelect, {\n        inputId: `${refId}-graph-period`,\n        templateVariableOptions: variableOptionGroup.options,\n        current: graphPeriod,\n        onChange: onChange,\n        selectWidth: SELECT_WIDTH,\n        disabled: graphPeriod === 'disabled',\n        aligmentPeriods: GRAPH_PERIODS\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","Switch","GRAPH_PERIODS","SELECT_WIDTH","PeriodSelect","QueryEditorRow","GraphPeriod","refId","onChange","graphPeriod","variableOptionGroup","e","currentTarget","checked","options"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloud-monitoring/components/GraphPeriod.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Switch } from '@grafana/ui';\n\nimport { GRAPH_PERIODS, SELECT_WIDTH } from '../constants';\n\nimport { PeriodSelect, QueryEditorRow } from '.';\n\nexport interface Props {\n  refId: string;\n  onChange: (period: string) => void;\n  variableOptionGroup: SelectableValue<string>;\n  graphPeriod?: string;\n}\n\nexport const GraphPeriod: FunctionComponent<Props> = ({ refId, onChange, graphPeriod, variableOptionGroup }) => {\n  return (\n    <>\n      <QueryEditorRow\n        label=\"Graph period\"\n        htmlFor={`${refId}-graph-period`}\n        tooltip={\n          <>\n            Set <code>graph_period</code> which forces a preferred period between points. Automatically set to the\n            current interval if left blank.\n          </>\n        }\n      >\n        <Switch\n          data-testid={`${refId}-switch-graph-period`}\n          value={graphPeriod !== 'disabled'}\n          onChange={(e) => onChange(e.currentTarget.checked ? '' : 'disabled')}\n        />\n        <PeriodSelect\n          inputId={`${refId}-graph-period`}\n          templateVariableOptions={variableOptionGroup.options}\n          current={graphPeriod}\n          onChange={onChange}\n          selectWidth={SELECT_WIDTH}\n          disabled={graphPeriod === 'disabled'}\n          aligmentPeriods={GRAPH_PERIODS}\n        />\n      </QueryEditorRow>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAGA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,GAA7C;;;;AASA,OAAO,MAAMC,WAAqC,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBC,WAAnB;EAAgCC;AAAhC,CAAD,KAA2D;EAC9G,oBACE;IAAA,uBACE,MAAC,cAAD;MACE,KAAK,EAAC,cADR;MAEE,OAAO,EAAG,GAAEH,KAAM,eAFpB;MAGE,OAAO,eACL;QAAA,kDACM;UAAA;QAAA,EADN;MAAA,EAJJ;MAAA,wBAUE,KAAC,MAAD;QACE,eAAc,GAAEA,KAAM,sBADxB;QAEE,KAAK,EAAEE,WAAW,KAAK,UAFzB;QAGE,QAAQ,EAAGE,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,aAAF,CAAgBC,OAAhB,GAA0B,EAA1B,GAA+B,UAAhC;MAH3B,EAVF,eAeE,KAAC,YAAD;QACE,OAAO,EAAG,GAAEN,KAAM,eADpB;QAEE,uBAAuB,EAAEG,mBAAmB,CAACI,OAF/C;QAGE,OAAO,EAAEL,WAHX;QAIE,QAAQ,EAAED,QAJZ;QAKE,WAAW,EAAEL,YALf;QAME,QAAQ,EAAEM,WAAW,KAAK,UAN5B;QAOE,eAAe,EAAEP;MAPnB,EAfF;IAAA;EADF,EADF;AA6BD,CA9BM"},"metadata":{},"sourceType":"module"}