{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/types.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TNil } from '../types';\n\ninterface TimeCursorUpdate {\n  cursor: number | TNil;\n}\n\ninterface TimeReframeUpdate {\n  reframe: {\n    anchor: number;\n    shift: number;\n  };\n}\n\ninterface TimeShiftEndUpdate {\n  shiftEnd: number;\n}\n\ninterface TimeShiftStartUpdate {\n  shiftStart: number;\n}\n\nexport type TUpdateViewRangeTimeFunction = (start: number, end: number, trackSrc?: string) => void;\n\nexport type ViewRangeTimeUpdate = TimeCursorUpdate | TimeReframeUpdate | TimeShiftEndUpdate | TimeShiftStartUpdate;\n\nexport interface ViewRangeTime {\n  current: [number, number];\n  cursor?: number | TNil;\n  reframe?: {\n    anchor: number;\n    shift: number;\n  };\n  shiftEnd?: number;\n  shiftStart?: number;\n}\n\nexport interface ViewRange {\n  time: ViewRangeTime;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}