{"ast":null,"code":"import React, { memo, useCallback, useEffect, useMemo } from 'react';\nimport { useAbsoluteLayout, useFilters, usePagination, useResizeColumns, useSortBy, useTable } from 'react-table';\nimport { FixedSizeList } from 'react-window';\nimport { getFieldDisplayName } from '@grafana/data';\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Pagination } from '../Pagination/Pagination';\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { TableCell } from './TableCell';\nimport { getTableStyles } from './styles';\nimport { getColumns, sortCaseInsensitive, sortNumber } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst COLUMN_MIN_WIDTH = 150;\n\nfunction useTableStateReducer({\n  onColumnResize,\n  onSortByChange,\n  data\n}) {\n  return useCallback((newState, action) => {\n    switch (action.type) {\n      case 'columnDoneResizing':\n        if (onColumnResize) {\n          const info = newState.columnResizing.headerIdWidths[0];\n          const columnIdString = info[0];\n          const fieldIndex = parseInt(columnIdString, 10);\n          const width = Math.round(newState.columnResizing.columnWidths[columnIdString]);\n          const field = data.fields[fieldIndex];\n\n          if (!field) {\n            return newState;\n          }\n\n          const fieldDisplayName = getFieldDisplayName(field, data);\n          onColumnResize(fieldDisplayName, width);\n        }\n\n      case 'toggleSortBy':\n        if (onSortByChange) {\n          const sortByFields = [];\n\n          for (const sortItem of newState.sortBy) {\n            const field = data.fields[parseInt(sortItem.id, 10)];\n\n            if (!field) {\n              continue;\n            }\n\n            sortByFields.push({\n              displayName: getFieldDisplayName(field, data),\n              desc: sortItem.desc\n            });\n          }\n\n          onSortByChange(sortByFields);\n        }\n\n        break;\n    }\n\n    return newState;\n  }, [data, onColumnResize, onSortByChange]);\n}\n\nfunction getInitialState(initialSortBy, columns) {\n  const state = {};\n\n  if (initialSortBy) {\n    state.sortBy = [];\n\n    for (const sortBy of initialSortBy) {\n      for (const col of columns) {\n        if (col.Header === sortBy.displayName) {\n          state.sortBy.push({\n            id: col.id,\n            desc: sortBy.desc\n          });\n        }\n      }\n    }\n  }\n\n  return state;\n}\n\nexport const Table = /*#__PURE__*/memo(props => {\n  const {\n    ariaLabel,\n    data,\n    height,\n    onCellFilterAdded,\n    width,\n    columnMinWidth = COLUMN_MIN_WIDTH,\n    noHeader,\n    resizable = true,\n    initialSortBy,\n    footerValues,\n    showTypeIcons,\n    enablePagination\n  } = props;\n  const tableStyles = useStyles2(getTableStyles);\n  const headerHeight = noHeader ? 0 : tableStyles.cellHeight;\n  const footerHeight = useMemo(() => {\n    const EXTENDED_ROW_HEIGHT = 33;\n    let length = 0;\n\n    if (!footerValues) {\n      return 0;\n    }\n\n    for (const fv of footerValues) {\n      if (Array.isArray(fv) && fv.length > length) {\n        length = fv.length;\n      }\n    }\n\n    if (length > 1) {\n      return EXTENDED_ROW_HEIGHT * length;\n    }\n\n    return EXTENDED_ROW_HEIGHT;\n  }, [footerValues]); // React table data array. This data acts just like a dummy array to let react-table know how many rows exist\n  // The cells use the field to look up values\n\n  const memoizedData = useMemo(() => {\n    if (!data.fields.length) {\n      return [];\n    } // as we only use this to fake the length of our data set for react-table we need to make sure we always return an array\n    // filled with values at each index otherwise we'll end up trying to call accessRow for null|undefined value in\n    // https://github.com/tannerlinsley/react-table/blob/7be2fc9d8b5e223fc998af88865ae86a88792fdb/src/hooks/useTable.js#L585\n\n\n    return Array(data.length).fill(0);\n  }, [data]); // React-table column definitions\n\n  const memoizedColumns = useMemo(() => getColumns(data, width, columnMinWidth, footerValues), [data, width, columnMinWidth, footerValues]); // Internal react table state reducer\n\n  const stateReducer = useTableStateReducer(props);\n  const options = useMemo(() => ({\n    columns: memoizedColumns,\n    data: memoizedData,\n    disableResizing: !resizable,\n    stateReducer: stateReducer,\n    initialState: getInitialState(initialSortBy, memoizedColumns),\n    autoResetFilters: false,\n    sortTypes: {\n      number: sortNumber,\n      // the builtin number type on react-table does not handle NaN values\n      'alphanumeric-insensitive': sortCaseInsensitive // should be replace with the builtin string when react-table is upgraded, see https://github.com/tannerlinsley/react-table/pull/3235\n\n    }\n  }), [initialSortBy, memoizedColumns, memoizedData, resizable, stateReducer]);\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    totalColumnsWidth,\n    footerGroups,\n    page,\n    state,\n    gotoPage,\n    setPageSize,\n    pageOptions\n  } = useTable(options, useFilters, useSortBy, usePagination, useAbsoluteLayout, useResizeColumns);\n  let listHeight = height - (headerHeight + footerHeight);\n\n  if (enablePagination) {\n    listHeight -= tableStyles.cellHeight;\n  }\n\n  const pageSize = Math.round(listHeight / tableStyles.cellHeight) - 1;\n  useEffect(() => {\n    // Don't update the page size if it is less than 1\n    if (pageSize <= 0) {\n      return;\n    }\n\n    setPageSize(pageSize);\n  }, [pageSize, setPageSize]);\n  const RenderRow = React.useCallback(({\n    index: rowIndex,\n    style\n  }) => {\n    let row = rows[rowIndex];\n\n    if (enablePagination) {\n      row = page[rowIndex];\n    }\n\n    prepareRow(row);\n    return /*#__PURE__*/_jsx(\"div\", Object.assign({}, row.getRowProps({\n      style\n    }), {\n      className: tableStyles.row,\n      children: row.cells.map((cell, index) => /*#__PURE__*/_jsx(TableCell, {\n        tableStyles: tableStyles,\n        cell: cell,\n        onCellFilterAdded: onCellFilterAdded,\n        columnIndex: index,\n        columnCount: row.cells.length\n      }, index))\n    }));\n  }, [onCellFilterAdded, page, enablePagination, prepareRow, rows, tableStyles]);\n  const onNavigate = useCallback(toPage => {\n    gotoPage(toPage - 1);\n  }, [gotoPage]);\n  const itemCount = enablePagination ? page.length : rows.length;\n  let paginationEl = null;\n\n  if (enablePagination) {\n    const itemsRangeStart = state.pageIndex * state.pageSize + 1;\n    let itemsRangeEnd = itemsRangeStart + state.pageSize - 1;\n    const isSmall = width < 500;\n\n    if (itemsRangeEnd > data.length) {\n      itemsRangeEnd = data.length;\n    }\n\n    paginationEl = /*#__PURE__*/_jsxs(\"div\", {\n      className: tableStyles.paginationWrapper,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Pagination, {\n          currentPage: state.pageIndex + 1,\n          numberOfPages: pageOptions.length,\n          showSmallVersion: isSmall,\n          onNavigate: onNavigate\n        })\n      }), isSmall ? null : /*#__PURE__*/_jsxs(\"div\", {\n        className: tableStyles.paginationSummary,\n        children: [itemsRangeStart, \" - \", itemsRangeEnd, \" of \", data.length, \" rows\"]\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({}, getTableProps(), {\n    className: tableStyles.table,\n    \"aria-label\": ariaLabel,\n    role: \"table\",\n    children: [/*#__PURE__*/_jsx(CustomScrollbar, {\n      hideVerticalTrack: true,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: tableStyles.tableContentWrapper(totalColumnsWidth),\n        children: [!noHeader && /*#__PURE__*/_jsx(HeaderRow, {\n          headerGroups: headerGroups,\n          showTypeIcons: showTypeIcons\n        }), itemCount > 0 ? /*#__PURE__*/_jsx(FixedSizeList, {\n          height: listHeight,\n          itemCount: itemCount,\n          itemSize: tableStyles.rowHeight,\n          width: '100%',\n          style: {\n            overflow: 'hidden auto'\n          },\n          children: RenderRow\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: height - headerHeight\n          },\n          className: tableStyles.noData,\n          children: \"No data\"\n        }), footerValues && /*#__PURE__*/_jsx(FooterRow, {\n          height: footerHeight,\n          isPaginationVisible: Boolean(enablePagination),\n          footerValues: footerValues,\n          footerGroups: footerGroups,\n          totalColumnsWidth: totalColumnsWidth\n        })]\n      })\n    }), paginationEl]\n  }));\n});\nTable.displayName = 'Table';","map":{"version":3,"names":["React","memo","useCallback","useEffect","useMemo","useAbsoluteLayout","useFilters","usePagination","useResizeColumns","useSortBy","useTable","FixedSizeList","getFieldDisplayName","useStyles2","CustomScrollbar","Pagination","FooterRow","HeaderRow","TableCell","getTableStyles","getColumns","sortCaseInsensitive","sortNumber","COLUMN_MIN_WIDTH","useTableStateReducer","onColumnResize","onSortByChange","data","newState","action","type","info","columnResizing","headerIdWidths","columnIdString","fieldIndex","parseInt","width","Math","round","columnWidths","field","fields","fieldDisplayName","sortByFields","sortItem","sortBy","id","push","displayName","desc","getInitialState","initialSortBy","columns","state","col","Header","Table","props","ariaLabel","height","onCellFilterAdded","columnMinWidth","noHeader","resizable","footerValues","showTypeIcons","enablePagination","tableStyles","headerHeight","cellHeight","footerHeight","EXTENDED_ROW_HEIGHT","length","fv","Array","isArray","memoizedData","fill","memoizedColumns","stateReducer","options","disableResizing","initialState","autoResetFilters","sortTypes","number","getTableProps","headerGroups","rows","prepareRow","totalColumnsWidth","footerGroups","page","gotoPage","setPageSize","pageOptions","listHeight","pageSize","RenderRow","index","rowIndex","style","row","getRowProps","cells","map","cell","onNavigate","toPage","itemCount","paginationEl","itemsRangeStart","pageIndex","itemsRangeEnd","isSmall","paginationWrapper","paginationSummary","table","tableContentWrapper","rowHeight","overflow","noData","Boolean"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/Table.tsx"],"sourcesContent":["import React, { FC, memo, useCallback, useEffect, useMemo } from 'react';\nimport {\n  Cell,\n  Column,\n  TableState,\n  useAbsoluteLayout,\n  useFilters,\n  usePagination,\n  useResizeColumns,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport { FixedSizeList } from 'react-window';\n\nimport { DataFrame, getFieldDisplayName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Pagination } from '../Pagination/Pagination';\n\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { TableCell } from './TableCell';\nimport { getTableStyles } from './styles';\nimport {\n  TableColumnResizeActionCallback,\n  TableFilterActionCallback,\n  FooterItem,\n  TableSortByActionCallback,\n  TableSortByFieldState,\n} from './types';\nimport { getColumns, sortCaseInsensitive, sortNumber } from './utils';\n\nconst COLUMN_MIN_WIDTH = 150;\n\nexport interface Props {\n  ariaLabel?: string;\n  data: DataFrame;\n  width: number;\n  height: number;\n  /** Minimal column width specified in pixels */\n  columnMinWidth?: number;\n  noHeader?: boolean;\n  showTypeIcons?: boolean;\n  resizable?: boolean;\n  initialSortBy?: TableSortByFieldState[];\n  onColumnResize?: TableColumnResizeActionCallback;\n  onSortByChange?: TableSortByActionCallback;\n  onCellFilterAdded?: TableFilterActionCallback;\n  footerValues?: FooterItem[];\n  enablePagination?: boolean;\n}\n\nfunction useTableStateReducer({ onColumnResize, onSortByChange, data }: Props) {\n  return useCallback(\n    (newState: TableState, action: any) => {\n      switch (action.type) {\n        case 'columnDoneResizing':\n          if (onColumnResize) {\n            const info = (newState.columnResizing.headerIdWidths as any)[0];\n            const columnIdString = info[0];\n            const fieldIndex = parseInt(columnIdString, 10);\n            const width = Math.round(newState.columnResizing.columnWidths[columnIdString] as number);\n\n            const field = data.fields[fieldIndex];\n            if (!field) {\n              return newState;\n            }\n\n            const fieldDisplayName = getFieldDisplayName(field, data);\n            onColumnResize(fieldDisplayName, width);\n          }\n        case 'toggleSortBy':\n          if (onSortByChange) {\n            const sortByFields: TableSortByFieldState[] = [];\n\n            for (const sortItem of newState.sortBy) {\n              const field = data.fields[parseInt(sortItem.id, 10)];\n              if (!field) {\n                continue;\n              }\n\n              sortByFields.push({\n                displayName: getFieldDisplayName(field, data),\n                desc: sortItem.desc,\n              });\n            }\n\n            onSortByChange(sortByFields);\n          }\n          break;\n      }\n\n      return newState;\n    },\n    [data, onColumnResize, onSortByChange]\n  );\n}\n\nfunction getInitialState(initialSortBy: Props['initialSortBy'], columns: Column[]): Partial<TableState> {\n  const state: Partial<TableState> = {};\n\n  if (initialSortBy) {\n    state.sortBy = [];\n\n    for (const sortBy of initialSortBy) {\n      for (const col of columns) {\n        if (col.Header === sortBy.displayName) {\n          state.sortBy.push({ id: col.id as string, desc: sortBy.desc });\n        }\n      }\n    }\n  }\n\n  return state;\n}\n\nexport const Table: FC<Props> = memo((props: Props) => {\n  const {\n    ariaLabel,\n    data,\n    height,\n    onCellFilterAdded,\n    width,\n    columnMinWidth = COLUMN_MIN_WIDTH,\n    noHeader,\n    resizable = true,\n    initialSortBy,\n    footerValues,\n    showTypeIcons,\n    enablePagination,\n  } = props;\n\n  const tableStyles = useStyles2(getTableStyles);\n  const headerHeight = noHeader ? 0 : tableStyles.cellHeight;\n\n  const footerHeight = useMemo(() => {\n    const EXTENDED_ROW_HEIGHT = 33;\n    let length = 0;\n\n    if (!footerValues) {\n      return 0;\n    }\n\n    for (const fv of footerValues) {\n      if (Array.isArray(fv) && fv.length > length) {\n        length = fv.length;\n      }\n    }\n\n    if (length > 1) {\n      return EXTENDED_ROW_HEIGHT * length;\n    }\n\n    return EXTENDED_ROW_HEIGHT;\n  }, [footerValues]);\n\n  // React table data array. This data acts just like a dummy array to let react-table know how many rows exist\n  // The cells use the field to look up values\n  const memoizedData = useMemo(() => {\n    if (!data.fields.length) {\n      return [];\n    }\n    // as we only use this to fake the length of our data set for react-table we need to make sure we always return an array\n    // filled with values at each index otherwise we'll end up trying to call accessRow for null|undefined value in\n    // https://github.com/tannerlinsley/react-table/blob/7be2fc9d8b5e223fc998af88865ae86a88792fdb/src/hooks/useTable.js#L585\n    return Array(data.length).fill(0);\n  }, [data]);\n\n  // React-table column definitions\n  const memoizedColumns = useMemo(\n    () => getColumns(data, width, columnMinWidth, footerValues),\n    [data, width, columnMinWidth, footerValues]\n  );\n\n  // Internal react table state reducer\n  const stateReducer = useTableStateReducer(props);\n\n  const options: any = useMemo(\n    () => ({\n      columns: memoizedColumns,\n      data: memoizedData,\n      disableResizing: !resizable,\n      stateReducer: stateReducer,\n      initialState: getInitialState(initialSortBy, memoizedColumns),\n      autoResetFilters: false,\n      sortTypes: {\n        number: sortNumber, // the builtin number type on react-table does not handle NaN values\n        'alphanumeric-insensitive': sortCaseInsensitive, // should be replace with the builtin string when react-table is upgraded, see https://github.com/tannerlinsley/react-table/pull/3235\n      },\n    }),\n    [initialSortBy, memoizedColumns, memoizedData, resizable, stateReducer]\n  );\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    totalColumnsWidth,\n    footerGroups,\n    page,\n    state,\n    gotoPage,\n    setPageSize,\n    pageOptions,\n  } = useTable(options, useFilters, useSortBy, usePagination, useAbsoluteLayout, useResizeColumns);\n\n  let listHeight = height - (headerHeight + footerHeight);\n  if (enablePagination) {\n    listHeight -= tableStyles.cellHeight;\n  }\n  const pageSize = Math.round(listHeight / tableStyles.cellHeight) - 1;\n\n  useEffect(() => {\n    // Don't update the page size if it is less than 1\n    if (pageSize <= 0) {\n      return;\n    }\n    setPageSize(pageSize);\n  }, [pageSize, setPageSize]);\n\n  const RenderRow = React.useCallback(\n    ({ index: rowIndex, style }) => {\n      let row = rows[rowIndex];\n      if (enablePagination) {\n        row = page[rowIndex];\n      }\n      prepareRow(row);\n      return (\n        <div {...row.getRowProps({ style })} className={tableStyles.row}>\n          {row.cells.map((cell: Cell, index: number) => (\n            <TableCell\n              key={index}\n              tableStyles={tableStyles}\n              cell={cell}\n              onCellFilterAdded={onCellFilterAdded}\n              columnIndex={index}\n              columnCount={row.cells.length}\n            />\n          ))}\n        </div>\n      );\n    },\n    [onCellFilterAdded, page, enablePagination, prepareRow, rows, tableStyles]\n  );\n\n  const onNavigate = useCallback(\n    (toPage: number) => {\n      gotoPage(toPage - 1);\n    },\n    [gotoPage]\n  );\n\n  const itemCount = enablePagination ? page.length : rows.length;\n  let paginationEl = null;\n  if (enablePagination) {\n    const itemsRangeStart = state.pageIndex * state.pageSize + 1;\n    let itemsRangeEnd = itemsRangeStart + state.pageSize - 1;\n    const isSmall = width < 500;\n    if (itemsRangeEnd > data.length) {\n      itemsRangeEnd = data.length;\n    }\n    paginationEl = (\n      <div className={tableStyles.paginationWrapper}>\n        <div>\n          <Pagination\n            currentPage={state.pageIndex + 1}\n            numberOfPages={pageOptions.length}\n            showSmallVersion={isSmall}\n            onNavigate={onNavigate}\n          />\n        </div>\n        {isSmall ? null : (\n          <div className={tableStyles.paginationSummary}>\n            {itemsRangeStart} - {itemsRangeEnd} of {data.length} rows\n          </div>\n        )}\n      </div>\n    );\n  }\n  return (\n    <div {...getTableProps()} className={tableStyles.table} aria-label={ariaLabel} role=\"table\">\n      <CustomScrollbar hideVerticalTrack={true}>\n        <div className={tableStyles.tableContentWrapper(totalColumnsWidth)}>\n          {!noHeader && <HeaderRow headerGroups={headerGroups} showTypeIcons={showTypeIcons} />}\n          {itemCount > 0 ? (\n            <FixedSizeList\n              height={listHeight}\n              itemCount={itemCount}\n              itemSize={tableStyles.rowHeight}\n              width={'100%'}\n              style={{ overflow: 'hidden auto' }}\n            >\n              {RenderRow}\n            </FixedSizeList>\n          ) : (\n            <div style={{ height: height - headerHeight }} className={tableStyles.noData}>\n              No data\n            </div>\n          )}\n          {footerValues && (\n            <FooterRow\n              height={footerHeight}\n              isPaginationVisible={Boolean(enablePagination)}\n              footerValues={footerValues}\n              footerGroups={footerGroups}\n              totalColumnsWidth={totalColumnsWidth}\n            />\n          )}\n        </div>\n      </CustomScrollbar>\n      {paginationEl}\n    </div>\n  );\n});\n\nTable.displayName = 'Table';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}