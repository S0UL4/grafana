{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DataSourcePlugin } from '@grafana/data';\nimport { createChangeHandler, createResetHandler, PasswordFieldEnum } from '../../../features/datasources/utils/passwordHandlers';\nimport { MysqlDatasource } from './datasource';\nimport { MysqlQueryCtrl } from './query_ctrl';\n\nclass MysqlConfigCtrl {\n  constructor() {\n    _defineProperty(this, \"current\", void 0);\n\n    _defineProperty(this, \"onPasswordReset\", void 0);\n\n    _defineProperty(this, \"onPasswordChange\", void 0);\n\n    this.onPasswordReset = createResetHandler(this, PasswordFieldEnum.Password);\n    this.onPasswordChange = createChangeHandler(this, PasswordFieldEnum.Password);\n  }\n\n}\n\n_defineProperty(MysqlConfigCtrl, \"templateUrl\", 'partials/config.html');\n\nconst defaultQuery = `SELECT\n    UNIX_TIMESTAMP(<time_column>) as time_sec,\n    <text_column> as text,\n    <tags_column> as tags\n  FROM <table name>\n  WHERE $__timeFilter(time_column)\n  ORDER BY <time_column> ASC\n  LIMIT 100\n  `;\n\nclass MysqlAnnotationsQueryCtrl {\n  /** @ngInject */\n  constructor($scope) {\n    this.annotation = $scope.ctrl.annotation;\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n\n}\n\nMysqlAnnotationsQueryCtrl.$inject = [\"$scope\"];\n\n_defineProperty(MysqlAnnotationsQueryCtrl, \"templateUrl\", 'partials/annotations.editor.html');\n\nexport { MysqlDatasource, MysqlDatasource as Datasource, MysqlQueryCtrl as QueryCtrl, MysqlConfigCtrl as ConfigCtrl, MysqlAnnotationsQueryCtrl as AnnotationsQueryCtrl };\nexport const plugin = new DataSourcePlugin(MysqlDatasource).setQueryCtrl(MysqlQueryCtrl).setConfigCtrl(MysqlConfigCtrl).setAnnotationQueryCtrl(MysqlAnnotationsQueryCtrl);","map":{"version":3,"names":["DataSourcePlugin","createChangeHandler","createResetHandler","PasswordFieldEnum","MysqlDatasource","MysqlQueryCtrl","MysqlConfigCtrl","constructor","onPasswordReset","Password","onPasswordChange","defaultQuery","MysqlAnnotationsQueryCtrl","$scope","annotation","ctrl","rawQuery","Datasource","QueryCtrl","ConfigCtrl","AnnotationsQueryCtrl","plugin","setQueryCtrl","setConfigCtrl","setAnnotationQueryCtrl"],"sources":["/home/soula/grafana/public/app/plugins/datasource/mysql/module.ts"],"sourcesContent":["import { DataSourcePlugin } from '@grafana/data';\n\nimport {\n  createChangeHandler,\n  createResetHandler,\n  PasswordFieldEnum,\n} from '../../../features/datasources/utils/passwordHandlers';\n\nimport { MysqlDatasource } from './datasource';\nimport { MysqlQueryCtrl } from './query_ctrl';\nimport { MySQLQuery } from './types';\n\nclass MysqlConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  current: any;\n  onPasswordReset: ReturnType<typeof createResetHandler>;\n  onPasswordChange: ReturnType<typeof createChangeHandler>;\n\n  constructor() {\n    this.onPasswordReset = createResetHandler(this, PasswordFieldEnum.Password);\n    this.onPasswordChange = createChangeHandler(this, PasswordFieldEnum.Password);\n  }\n}\n\nconst defaultQuery = `SELECT\n    UNIX_TIMESTAMP(<time_column>) as time_sec,\n    <text_column> as text,\n    <tags_column> as tags\n  FROM <table name>\n  WHERE $__timeFilter(time_column)\n  ORDER BY <time_column> ASC\n  LIMIT 100\n  `;\n\nclass MysqlAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  declare annotation: any;\n\n  /** @ngInject */\n  constructor($scope: any) {\n    this.annotation = $scope.ctrl.annotation;\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  MysqlDatasource,\n  MysqlDatasource as Datasource,\n  MysqlQueryCtrl as QueryCtrl,\n  MysqlConfigCtrl as ConfigCtrl,\n  MysqlAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n\nexport const plugin = new DataSourcePlugin<MysqlDatasource, MySQLQuery>(MysqlDatasource)\n  .setQueryCtrl(MysqlQueryCtrl)\n  .setConfigCtrl(MysqlConfigCtrl)\n  .setAnnotationQueryCtrl(MysqlAnnotationsQueryCtrl);\n"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,eAAjC;AAEA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,sDAJP;AAMA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAGA,MAAMC,eAAN,CAAsB;EAMpBC,WAAW,GAAG;IAAA;;IAAA;;IAAA;;IACZ,KAAKC,eAAL,GAAuBN,kBAAkB,CAAC,IAAD,EAAOC,iBAAiB,CAACM,QAAzB,CAAzC;IACA,KAAKC,gBAAL,GAAwBT,mBAAmB,CAAC,IAAD,EAAOE,iBAAiB,CAACM,QAAzB,CAA3C;EACD;;AATmB;;gBAAhBH,e,iBACiB,sB;;AAWvB,MAAMK,YAAY,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA;;AAUA,MAAMC,yBAAN,CAAgC;EAK9B;EACAL,WAAW,CAACM,MAAD,EAAc;IACvB,KAAKC,UAAL,GAAkBD,MAAM,CAACE,IAAP,CAAYD,UAA9B;IACA,KAAKA,UAAL,CAAgBE,QAAhB,GAA2B,KAAKF,UAAL,CAAgBE,QAAhB,IAA4BL,YAAvD;EACD;;AAT6B;;;;gBAA1BC,yB,iBACiB,kC;;AAWvB,SACER,eADF,EAEEA,eAAe,IAAIa,UAFrB,EAGEZ,cAAc,IAAIa,SAHpB,EAIEZ,eAAe,IAAIa,UAJrB,EAKEP,yBAAyB,IAAIQ,oBAL/B;AAQA,OAAO,MAAMC,MAAM,GAAG,IAAIrB,gBAAJ,CAAkDI,eAAlD,EACnBkB,YADmB,CACNjB,cADM,EAEnBkB,aAFmB,CAELjB,eAFK,EAGnBkB,sBAHmB,CAGIZ,yBAHJ,CAAf"},"metadata":{},"sourceType":"module"}