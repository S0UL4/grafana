{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { config } from '@grafana/runtime';\nimport { RadioButtonGroup } from '@grafana/ui';\nimport { STAT, TABLE, TIMESERIES } from '../utils/constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function PanelPluginsButtonGroup(props) {\n  const {\n    value,\n    onChange,\n    size = 'md'\n  } = props;\n  const panels = useMemo(() => getSupportedPanels(), []);\n  return /*#__PURE__*/_jsx(RadioButtonGroup, {\n    options: panels,\n    value: value,\n    onChange: onChange,\n    size: size\n  });\n}\n\nfunction getSupportedPanels() {\n  return Object.values(config.panels).reduce((panels, panel) => {\n    if (isSupportedPanelPlugin(panel.id)) {\n      panels.push({\n        value: panel.id,\n        label: panel.name,\n        imgUrl: panel.info.logos.small\n      });\n    }\n\n    return panels;\n  }, []);\n}\n\nfunction isSupportedPanelPlugin(id) {\n  switch (id) {\n    case TIMESERIES:\n    case TABLE:\n    case STAT:\n      return true;\n\n    default:\n      return false;\n  }\n}","map":{"version":3,"names":["React","useMemo","config","RadioButtonGroup","STAT","TABLE","TIMESERIES","PanelPluginsButtonGroup","props","value","onChange","size","panels","getSupportedPanels","Object","values","reduce","panel","isSupportedPanelPlugin","id","push","label","name","imgUrl","info","logos","small"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/PanelPluginsButtonGroup.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { STAT, TABLE, TIMESERIES } from '../utils/constants';\n\nexport type SupportedPanelPlugins = 'timeseries' | 'table' | 'stat';\n\ntype Props = {\n  value: SupportedPanelPlugins;\n  onChange: (value: SupportedPanelPlugins) => void;\n  size?: 'sm' | 'md';\n};\n\nexport function PanelPluginsButtonGroup(props: Props): JSX.Element | null {\n  const { value, onChange, size = 'md' } = props;\n  const panels = useMemo(() => getSupportedPanels(), []);\n\n  return <RadioButtonGroup options={panels} value={value} onChange={onChange} size={size} />;\n}\n\nfunction getSupportedPanels(): Array<SelectableValue<SupportedPanelPlugins>> {\n  return Object.values(config.panels).reduce((panels: Array<SelectableValue<SupportedPanelPlugins>>, panel) => {\n    if (isSupportedPanelPlugin(panel.id)) {\n      panels.push({\n        value: panel.id,\n        label: panel.name,\n        imgUrl: panel.info.logos.small,\n      });\n    }\n    return panels;\n  }, []);\n}\n\nfunction isSupportedPanelPlugin(id: string): id is SupportedPanelPlugins {\n  switch (id) {\n    case TIMESERIES:\n    case TABLE:\n    case STAT:\n      return true;\n    default:\n      return false;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,oBAAxC;;AAUA,OAAO,SAASC,uBAAT,CAAiCC,KAAjC,EAAmE;EACxE,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC,IAAI,GAAG;EAA1B,IAAmCH,KAAzC;EACA,MAAMI,MAAM,GAAGX,OAAO,CAAC,MAAMY,kBAAkB,EAAzB,EAA6B,EAA7B,CAAtB;EAEA,oBAAO,KAAC,gBAAD;IAAkB,OAAO,EAAED,MAA3B;IAAmC,KAAK,EAAEH,KAA1C;IAAiD,QAAQ,EAAEC,QAA3D;IAAqE,IAAI,EAAEC;EAA3E,EAAP;AACD;;AAED,SAASE,kBAAT,GAA6E;EAC3E,OAAOC,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACU,MAArB,EAA6BI,MAA7B,CAAoC,CAACJ,MAAD,EAAwDK,KAAxD,KAAkE;IAC3G,IAAIC,sBAAsB,CAACD,KAAK,CAACE,EAAP,CAA1B,EAAsC;MACpCP,MAAM,CAACQ,IAAP,CAAY;QACVX,KAAK,EAAEQ,KAAK,CAACE,EADH;QAEVE,KAAK,EAAEJ,KAAK,CAACK,IAFH;QAGVC,MAAM,EAAEN,KAAK,CAACO,IAAN,CAAWC,KAAX,CAAiBC;MAHf,CAAZ;IAKD;;IACD,OAAOd,MAAP;EACD,CATM,EASJ,EATI,CAAP;AAUD;;AAED,SAASM,sBAAT,CAAgCC,EAAhC,EAAyE;EACvE,QAAQA,EAAR;IACE,KAAKb,UAAL;IACA,KAAKD,KAAL;IACA,KAAKD,IAAL;MACE,OAAO,IAAP;;IACF;MACE,OAAO,KAAP;EANJ;AAQD"},"metadata":{},"sourceType":"module"}