{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'vendor/flot/jquery.flot';\nimport { map } from 'lodash';\nimport { dateTime } from '@grafana/data';\nimport { config } from 'app/core/config';\nexport const colorModes = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: {\n      fill: 'rgba(255, 255, 255, 0.09)',\n      line: 'rgba(255, 255, 255, 0.2)'\n    },\n    lightColor: {\n      fill: 'rgba(0, 0, 0, 0.09)',\n      line: 'rgba(0, 0, 0, 0.2)'\n    }\n  },\n  red: {\n    title: 'Red',\n    color: {\n      fill: 'rgba(234, 112, 112, 0.12)',\n      line: 'rgba(237, 46, 24, 0.60)'\n    }\n  },\n  green: {\n    title: 'Green',\n    color: {\n      fill: 'rgba(11, 237, 50, 0.090)',\n      line: 'rgba(6,163,69, 0.60)'\n    }\n  },\n  blue: {\n    title: 'Blue',\n    color: {\n      fill: 'rgba(11, 125, 238, 0.12)',\n      line: 'rgba(11, 125, 238, 0.60)'\n    }\n  },\n  yellow: {\n    title: 'Yellow',\n    color: {\n      fill: 'rgba(235, 138, 14, 0.12)',\n      line: 'rgba(247, 149, 32, 0.60)'\n    }\n  },\n  custom: {\n    title: 'Custom'\n  }\n};\nexport function getColorModes() {\n  return map(Object.keys(colorModes), key => {\n    return {\n      key,\n      value: colorModes[key].title\n    };\n  });\n}\n\nfunction getColor(timeRegion, theme) {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? theme.visualization.getColorByName(timeRegion.fillColor) : null,\n      line: timeRegion.line && timeRegion.lineColor ? theme.visualization.getColorByName(timeRegion.lineColor) : null\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme.isLight ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.fill) : null,\n    line: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.line) : null\n  };\n}\n\nexport class TimeRegionManager {\n  constructor(panelCtrl) {\n    _defineProperty(this, \"plot\", void 0);\n\n    _defineProperty(this, \"timeRegions\", void 0);\n\n    this.panelCtrl = panelCtrl;\n  }\n\n  draw(plot) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options, panel) {\n    if (!panel.timeRegions || panel.timeRegions.length === 0) {\n      return;\n    }\n\n    const tRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc()\n    };\n    let i, hRange, timeRegion, regions, fromStart, fromEnd, timeRegionColor;\n    const timeRegionsCopy = panel.timeRegions.map(a => Object.assign({}, a));\n\n    for (i = 0; i < timeRegionsCopy.length; i++) {\n      timeRegion = timeRegionsCopy[i];\n\n      if (!(timeRegion.fromDayOfWeek || timeRegion.from) && !(timeRegion.toDayOfWeek || timeRegion.to)) {\n        continue;\n      }\n\n      if (timeRegion.from && !timeRegion.to) {\n        timeRegion.to = timeRegion.from;\n      }\n\n      if (!timeRegion.from && timeRegion.to) {\n        timeRegion.from = timeRegion.to;\n      }\n\n      hRange = {\n        from: this.parseTimeRange(timeRegion.from),\n        to: this.parseTimeRange(timeRegion.to)\n      };\n\n      if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n        timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n      }\n\n      if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n        timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n      }\n\n      if (timeRegion.fromDayOfWeek) {\n        hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n      }\n\n      if (timeRegion.toDayOfWeek) {\n        hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n      }\n\n      if (hRange.from.dayOfWeek && hRange.from.h === null && hRange.from.m === null) {\n        hRange.from.h = 0;\n        hRange.from.m = 0;\n        hRange.from.s = 0;\n      }\n\n      if (hRange.to.dayOfWeek && hRange.to.h === null && hRange.to.m === null) {\n        hRange.to.h = 23;\n        hRange.to.m = 59;\n        hRange.to.s = 59;\n      }\n\n      if (!hRange.from || !hRange.to) {\n        continue;\n      }\n\n      regions = [];\n      fromStart = dateTime(tRange.from);\n      fromStart.set('hour', 0);\n      fromStart.set('minute', 0);\n      fromStart.set('second', 0);\n      fromStart.add(hRange.from.h, 'hours');\n      fromStart.add(hRange.from.m, 'minutes');\n      fromStart.add(hRange.from.s, 'seconds');\n\n      while (fromStart.unix() <= tRange.to.unix()) {\n        while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n          fromStart.add(24, 'hours');\n        }\n\n        if (fromStart.unix() > tRange.to.unix()) {\n          break;\n        }\n\n        fromEnd = dateTime(fromStart);\n\n        if (fromEnd.hour) {\n          if (hRange.from.h <= hRange.to.h) {\n            fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n          } else if (hRange.from.h > hRange.to.h) {\n            while (fromEnd.hour() !== hRange.to.h) {\n              fromEnd.add(1, 'hours');\n            }\n          } else {\n            fromEnd.add(24 - hRange.from.h, 'hours');\n\n            while (fromEnd.hour() !== hRange.to.h) {\n              fromEnd.add(1, 'hours');\n            }\n          }\n        }\n\n        fromEnd.set('minute', hRange.to.m);\n        fromEnd.set('second', hRange.to.s);\n\n        while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n          fromEnd.add(24, 'hours');\n        }\n\n        const outsideRange = fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix() || fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix();\n\n        if (!outsideRange) {\n          regions.push({\n            from: fromStart.valueOf(),\n            to: fromEnd.valueOf()\n          });\n        }\n\n        fromStart.add(24, 'hours');\n      }\n\n      timeRegionColor = getColor(timeRegion, config.theme);\n\n      for (let j = 0; j < regions.length; j++) {\n        const r = regions[j];\n\n        if (timeRegion.fill) {\n          options.grid.markings.push({\n            xaxis: {\n              from: r.from,\n              to: r.to\n            },\n            color: timeRegionColor.fill\n          });\n        }\n\n        if (timeRegion.line) {\n          options.grid.markings.push({\n            xaxis: {\n              from: r.from,\n              to: r.from\n            },\n            color: timeRegionColor.line\n          });\n          options.grid.markings.push({\n            xaxis: {\n              from: r.to,\n              to: r.to\n            },\n            color: timeRegionColor.line\n          });\n        }\n      }\n    }\n  }\n\n  parseTimeRange(str) {\n    const timeRegex = /^([\\d]+):?(\\d{2})?/;\n    const result = {\n      h: null,\n      m: null\n    };\n    const match = timeRegex.exec(str);\n\n    if (!match) {\n      return result;\n    }\n\n    if (match.length > 1) {\n      result.h = Number(match[1]);\n      result.m = 0;\n\n      if (match.length > 2 && match[2] !== undefined) {\n        result.m = Number(match[2]);\n      }\n\n      if (result.h > 23) {\n        result.h = 23;\n      }\n\n      if (result.m > 59) {\n        result.m = 59;\n      }\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"names":["map","dateTime","config","colorModes","gray","themeDependent","title","darkColor","fill","line","lightColor","red","color","green","blue","yellow","custom","getColorModes","Object","keys","key","value","getColor","timeRegion","theme","indexOf","colorMode","fillColor","visualization","getColorByName","lineColor","isLight","TimeRegionManager","constructor","panelCtrl","draw","plot","timeRegions","panel","addFlotOptions","options","length","tRange","from","range","utc","to","i","hRange","regions","fromStart","fromEnd","timeRegionColor","timeRegionsCopy","a","fromDayOfWeek","toDayOfWeek","parseTimeRange","dayOfWeek","Number","h","m","s","set","add","unix","isoWeekday","hour","outsideRange","push","valueOf","j","r","grid","markings","xaxis","str","timeRegex","result","match","exec","undefined"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/time_region_manager.ts"],"sourcesContent":["import 'vendor/flot/jquery.flot';\nimport { map } from 'lodash';\n\nimport { dateTime, DateTime, AbsoluteTimeRange, GrafanaTheme } from '@grafana/data';\nimport { config } from 'app/core/config';\n\ntype TimeRegionColorDefinition = {\n  fill: string | null;\n  line: string | null;\n};\n\nexport const colorModes: any = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: { fill: 'rgba(255, 255, 255, 0.09)', line: 'rgba(255, 255, 255, 0.2)' },\n    lightColor: { fill: 'rgba(0, 0, 0, 0.09)', line: 'rgba(0, 0, 0, 0.2)' },\n  },\n  red: {\n    title: 'Red',\n    color: { fill: 'rgba(234, 112, 112, 0.12)', line: 'rgba(237, 46, 24, 0.60)' },\n  },\n  green: {\n    title: 'Green',\n    color: { fill: 'rgba(11, 237, 50, 0.090)', line: 'rgba(6,163,69, 0.60)' },\n  },\n  blue: {\n    title: 'Blue',\n    color: { fill: 'rgba(11, 125, 238, 0.12)', line: 'rgba(11, 125, 238, 0.60)' },\n  },\n  yellow: {\n    title: 'Yellow',\n    color: { fill: 'rgba(235, 138, 14, 0.12)', line: 'rgba(247, 149, 32, 0.60)' },\n  },\n  custom: { title: 'Custom' },\n};\n\nexport function getColorModes() {\n  return map(Object.keys(colorModes), (key) => {\n    return {\n      key,\n      value: colorModes[key].title,\n    };\n  });\n}\n\nfunction getColor(timeRegion: any, theme: GrafanaTheme): TimeRegionColorDefinition {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? theme.visualization.getColorByName(timeRegion.fillColor) : null,\n      line: timeRegion.line && timeRegion.lineColor ? theme.visualization.getColorByName(timeRegion.lineColor) : null,\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme.isLight ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.fill) : null,\n    line: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.line) : null,\n  };\n}\n\nexport class TimeRegionManager {\n  plot: any;\n  timeRegions: any;\n\n  constructor(private panelCtrl: any) {}\n\n  draw(plot: any) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.timeRegions || panel.timeRegions.length === 0) {\n      return;\n    }\n\n    const tRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc(),\n    };\n\n    let i: number,\n      hRange: { from: any; to: any },\n      timeRegion: any,\n      regions: AbsoluteTimeRange[],\n      fromStart: DateTime,\n      fromEnd: DateTime,\n      timeRegionColor: TimeRegionColorDefinition;\n\n    const timeRegionsCopy = panel.timeRegions.map((a: any) => ({ ...a }));\n\n    for (i = 0; i < timeRegionsCopy.length; i++) {\n      timeRegion = timeRegionsCopy[i];\n\n      if (!(timeRegion.fromDayOfWeek || timeRegion.from) && !(timeRegion.toDayOfWeek || timeRegion.to)) {\n        continue;\n      }\n\n      if (timeRegion.from && !timeRegion.to) {\n        timeRegion.to = timeRegion.from;\n      }\n\n      if (!timeRegion.from && timeRegion.to) {\n        timeRegion.from = timeRegion.to;\n      }\n\n      hRange = {\n        from: this.parseTimeRange(timeRegion.from),\n        to: this.parseTimeRange(timeRegion.to),\n      };\n\n      if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n        timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n      }\n\n      if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n        timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n      }\n\n      if (timeRegion.fromDayOfWeek) {\n        hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n      }\n\n      if (timeRegion.toDayOfWeek) {\n        hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n      }\n\n      if (hRange.from.dayOfWeek && hRange.from.h === null && hRange.from.m === null) {\n        hRange.from.h = 0;\n        hRange.from.m = 0;\n        hRange.from.s = 0;\n      }\n\n      if (hRange.to.dayOfWeek && hRange.to.h === null && hRange.to.m === null) {\n        hRange.to.h = 23;\n        hRange.to.m = 59;\n        hRange.to.s = 59;\n      }\n\n      if (!hRange.from || !hRange.to) {\n        continue;\n      }\n\n      regions = [];\n\n      fromStart = dateTime(tRange.from);\n      fromStart.set('hour', 0);\n      fromStart.set('minute', 0);\n      fromStart.set('second', 0);\n      fromStart.add(hRange.from.h, 'hours');\n      fromStart.add(hRange.from.m, 'minutes');\n      fromStart.add(hRange.from.s, 'seconds');\n\n      while (fromStart.unix() <= tRange.to.unix()) {\n        while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n          fromStart.add(24, 'hours');\n        }\n\n        if (fromStart.unix() > tRange.to.unix()) {\n          break;\n        }\n\n        fromEnd = dateTime(fromStart);\n\n        if (fromEnd.hour) {\n          if (hRange.from.h <= hRange.to.h) {\n            fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n          } else if (hRange.from.h > hRange.to.h) {\n            while (fromEnd.hour() !== hRange.to.h) {\n              fromEnd.add(1, 'hours');\n            }\n          } else {\n            fromEnd.add(24 - hRange.from.h, 'hours');\n\n            while (fromEnd.hour() !== hRange.to.h) {\n              fromEnd.add(1, 'hours');\n            }\n          }\n        }\n\n        fromEnd.set('minute', hRange.to.m);\n        fromEnd.set('second', hRange.to.s);\n\n        while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n          fromEnd.add(24, 'hours');\n        }\n\n        const outsideRange =\n          (fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix()) ||\n          (fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix());\n\n        if (!outsideRange) {\n          regions.push({ from: fromStart.valueOf(), to: fromEnd.valueOf() });\n        }\n\n        fromStart.add(24, 'hours');\n      }\n\n      timeRegionColor = getColor(timeRegion, config.theme);\n\n      for (let j = 0; j < regions.length; j++) {\n        const r = regions[j];\n        if (timeRegion.fill) {\n          options.grid.markings.push({\n            xaxis: { from: r.from, to: r.to },\n            color: timeRegionColor.fill,\n          });\n        }\n\n        if (timeRegion.line) {\n          options.grid.markings.push({\n            xaxis: { from: r.from, to: r.from },\n            color: timeRegionColor.line,\n          });\n          options.grid.markings.push({\n            xaxis: { from: r.to, to: r.to },\n            color: timeRegionColor.line,\n          });\n        }\n      }\n    }\n  }\n\n  parseTimeRange(str: string) {\n    const timeRegex = /^([\\d]+):?(\\d{2})?/;\n    const result: any = { h: null, m: null };\n    const match = timeRegex.exec(str);\n\n    if (!match) {\n      return result;\n    }\n\n    if (match.length > 1) {\n      result.h = Number(match[1]);\n      result.m = 0;\n\n      if (match.length > 2 && match[2] !== undefined) {\n        result.m = Number(match[2]);\n      }\n\n      if (result.h > 23) {\n        result.h = 23;\n      }\n\n      if (result.m > 59) {\n        result.m = 59;\n      }\n    }\n\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}