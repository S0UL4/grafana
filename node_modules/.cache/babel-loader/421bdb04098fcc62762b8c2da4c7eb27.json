{"ast":null,"code":"export const formatVariableLabel = variable => {\n  if (!isVariableWithOptions(variable)) {\n    return variable.name;\n  }\n\n  const {\n    current\n  } = variable;\n\n  if (Array.isArray(current.text)) {\n    return current.text.join(' + ');\n  }\n\n  return current.text;\n};\n\nconst isVariableWithOptions = variable => {\n  return Array.isArray(variable === null || variable === void 0 ? void 0 : variable.options) || typeof (variable === null || variable === void 0 ? void 0 : variable.current) === 'object';\n};","map":{"version":3,"names":["formatVariableLabel","variable","isVariableWithOptions","name","current","Array","isArray","text","join","options"],"sources":["/home/soula/grafana/public/app/features/variables/shared/formatVariable.ts"],"sourcesContent":["import { VariableModel } from '@grafana/data';\n\nimport { VariableWithOptions } from '../types';\n\nexport const formatVariableLabel = (variable: VariableModel) => {\n  if (!isVariableWithOptions(variable)) {\n    return variable.name;\n  }\n\n  const { current } = variable;\n\n  if (Array.isArray(current.text)) {\n    return current.text.join(' + ');\n  }\n\n  return current.text;\n};\n\nconst isVariableWithOptions = (variable: VariableModel): variable is VariableWithOptions => {\n  return (\n    Array.isArray((variable as VariableWithOptions)?.options) ||\n    typeof (variable as VariableWithOptions)?.current === 'object'\n  );\n};\n"],"mappings":"AAIA,OAAO,MAAMA,mBAAmB,GAAIC,QAAD,IAA6B;EAC9D,IAAI,CAACC,qBAAqB,CAACD,QAAD,CAA1B,EAAsC;IACpC,OAAOA,QAAQ,CAACE,IAAhB;EACD;;EAED,MAAM;IAAEC;EAAF,IAAcH,QAApB;;EAEA,IAAII,KAAK,CAACC,OAAN,CAAcF,OAAO,CAACG,IAAtB,CAAJ,EAAiC;IAC/B,OAAOH,OAAO,CAACG,IAAR,CAAaC,IAAb,CAAkB,KAAlB,CAAP;EACD;;EAED,OAAOJ,OAAO,CAACG,IAAf;AACD,CAZM;;AAcP,MAAML,qBAAqB,GAAID,QAAD,IAA8D;EAC1F,OACEI,KAAK,CAACC,OAAN,CAAeL,QAAf,aAAeA,QAAf,uBAAeA,QAAD,CAAmCQ,OAAjD,KACA,QAAQR,QAAR,aAAQA,QAAR,uBAAQA,QAAD,CAAmCG,OAA1C,MAAsD,QAFxD;AAID,CALD"},"metadata":{},"sourceType":"module"}