{"ast":null,"code":"/**\n * Function that decodes input geohash into latitude and longitude\n */\nexport function decodeGeohash(geohash) {\n  if (!(geohash !== null && geohash !== void 0 && geohash.length)) {\n    return undefined;\n  }\n\n  const BITS = [16, 8, 4, 2, 1];\n  const BASE32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n  let isEven = true;\n  const lat = [];\n  const lon = [];\n  lat[0] = -90.0;\n  lat[1] = 90.0;\n  lon[0] = -180.0;\n  lon[1] = 180.0;\n  let base32Decoded;\n  geohash.split('').forEach(item => {\n    base32Decoded = BASE32.indexOf(item);\n    BITS.forEach(mask => {\n      if (isEven) {\n        refineInterval(lon, base32Decoded, mask);\n      } else {\n        refineInterval(lat, base32Decoded, mask);\n      }\n\n      isEven = !isEven;\n    });\n  });\n  const latCenter = (lat[0] + lat[1]) / 2;\n  const lonCenter = (lon[0] + lon[1]) / 2;\n  return [lonCenter, latCenter];\n}\n\nfunction refineInterval(interval, base32Decoded, mask) {\n  /* tslint:disable no-bitwise*/\n  if (base32Decoded & mask) {\n    interval[0] = (interval[0] + interval[1]) / 2;\n  } else {\n    interval[1] = (interval[0] + interval[1]) / 2;\n  }\n}","map":{"version":3,"names":["decodeGeohash","geohash","length","undefined","BITS","BASE32","isEven","lat","lon","base32Decoded","split","forEach","item","indexOf","mask","refineInterval","latCenter","lonCenter","interval"],"sources":["/home/soula/grafana/public/app/features/geo/format/geohash.ts"],"sourcesContent":["/**\n * Function that decodes input geohash into latitude and longitude\n */\nexport function decodeGeohash(geohash: string): [number, number] | undefined {\n  if (!geohash?.length) {\n    return undefined;\n  }\n  const BITS = [16, 8, 4, 2, 1];\n  const BASE32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n  let isEven = true;\n  const lat: number[] = [];\n  const lon: number[] = [];\n  lat[0] = -90.0;\n  lat[1] = 90.0;\n  lon[0] = -180.0;\n  lon[1] = 180.0;\n  let base32Decoded: number;\n\n  geohash.split('').forEach((item: string) => {\n    base32Decoded = BASE32.indexOf(item);\n    BITS.forEach((mask) => {\n      if (isEven) {\n        refineInterval(lon, base32Decoded, mask);\n      } else {\n        refineInterval(lat, base32Decoded, mask);\n      }\n      isEven = !isEven;\n    });\n  });\n  const latCenter = (lat[0] + lat[1]) / 2;\n  const lonCenter = (lon[0] + lon[1]) / 2;\n\n  return [lonCenter, latCenter];\n}\n\nfunction refineInterval(interval: any[], base32Decoded: number, mask: number) {\n  /* tslint:disable no-bitwise*/\n  if (base32Decoded & mask) {\n    interval[0] = (interval[0] + interval[1]) / 2;\n  } else {\n    interval[1] = (interval[0] + interval[1]) / 2;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,OAAvB,EAAsE;EAC3E,IAAI,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEC,MAAV,CAAJ,EAAsB;IACpB,OAAOC,SAAP;EACD;;EACD,MAAMC,IAAI,GAAG,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAAb;EACA,MAAMC,MAAM,GAAG,kCAAf;EACA,IAAIC,MAAM,GAAG,IAAb;EACA,MAAMC,GAAa,GAAG,EAAtB;EACA,MAAMC,GAAa,GAAG,EAAtB;EACAD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,IAAV;EACAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT;EACAC,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,KAAV;EACAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAT;EACA,IAAIC,aAAJ;EAEAR,OAAO,CAACS,KAAR,CAAc,EAAd,EAAkBC,OAAlB,CAA2BC,IAAD,IAAkB;IAC1CH,aAAa,GAAGJ,MAAM,CAACQ,OAAP,CAAeD,IAAf,CAAhB;IACAR,IAAI,CAACO,OAAL,CAAcG,IAAD,IAAU;MACrB,IAAIR,MAAJ,EAAY;QACVS,cAAc,CAACP,GAAD,EAAMC,aAAN,EAAqBK,IAArB,CAAd;MACD,CAFD,MAEO;QACLC,cAAc,CAACR,GAAD,EAAME,aAAN,EAAqBK,IAArB,CAAd;MACD;;MACDR,MAAM,GAAG,CAACA,MAAV;IACD,CAPD;EAQD,CAVD;EAWA,MAAMU,SAAS,GAAG,CAACT,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB,CAAtC;EACA,MAAMU,SAAS,GAAG,CAACT,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB,CAAtC;EAEA,OAAO,CAACS,SAAD,EAAYD,SAAZ,CAAP;AACD;;AAED,SAASD,cAAT,CAAwBG,QAAxB,EAAyCT,aAAzC,EAAgEK,IAAhE,EAA8E;EAC5E;EACA,IAAIL,aAAa,GAAGK,IAApB,EAA0B;IACxBI,QAAQ,CAAC,CAAD,CAAR,GAAc,CAACA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAvB,IAA8B,CAA5C;EACD,CAFD,MAEO;IACLA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAACA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAvB,IAA8B,CAA5C;EACD;AACF"},"metadata":{},"sourceType":"module"}