{"ast":null,"code":"import { deprecationWarning, formattedValueToString, getValueFormat, getValueFormats, getValueFormatterIndex, stringToJsRegex, rangeUtil } from '@grafana/data';\nconst kbn = {\n  valueFormats: {},\n  intervalRegex: /(\\d+(?:\\.\\d+)?)(ms|[Mwdhmsy])/,\n  intervalsInSeconds: {\n    y: 31536000,\n    M: 2592000,\n    w: 604800,\n    d: 86400,\n    h: 3600,\n    m: 60,\n    s: 1,\n    ms: 0.001\n  },\n  regexEscape: value => value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&'),\n\n  /** @deprecated since 7.2, use grafana/data */\n  roundInterval: interval => {\n    deprecationWarning('kbn.ts', 'kbn.roundInterval()', '@grafana/data');\n    return rangeUtil.roundInterval(interval);\n  },\n\n  /** @deprecated since 7.2, use grafana/data */\n  secondsToHms: s => {\n    deprecationWarning('kbn.ts', 'kbn.secondsToHms()', '@grafana/data');\n    return rangeUtil.secondsToHms(s);\n  },\n  secondsToHhmmss: seconds => {\n    const strings = [];\n    const numHours = Math.floor(seconds / 3600);\n    const numMinutes = Math.floor(seconds % 3600 / 60);\n    const numSeconds = Math.floor(seconds % 3600 % 60);\n    numHours > 9 ? strings.push('' + numHours) : strings.push('0' + numHours);\n    numMinutes > 9 ? strings.push('' + numMinutes) : strings.push('0' + numMinutes);\n    numSeconds > 9 ? strings.push('' + numSeconds) : strings.push('0' + numSeconds);\n    return strings.join(':');\n  },\n  toPercent: (nr, outOf) => Math.floor(nr / outOf * 10000) / 100 + '%',\n  addSlashes: str => str.replace(/[\\'\\\"\\\\0]/g, '\\\\$&'),\n\n  /** @deprecated since 7.2, use grafana/data */\n  describeInterval: str => {\n    deprecationWarning('kbn.ts', 'kbn.describeInterval()', '@grafana/data');\n    return rangeUtil.describeInterval(str);\n  },\n\n  /** @deprecated since 7.2, use grafana/data */\n  intervalToSeconds: str => {\n    deprecationWarning('kbn.ts', 'rangeUtil.intervalToSeconds()', '@grafana/data');\n    return rangeUtil.intervalToSeconds(str);\n  },\n\n  /** @deprecated since 7.2, use grafana/data */\n  intervalToMs: str => {\n    deprecationWarning('kbn.ts', 'rangeUtil.intervalToMs()', '@grafana/data');\n    return rangeUtil.intervalToMs(str);\n  },\n\n  /** @deprecated since 7.2, use grafana/data */\n  calculateInterval: (range, resolution, lowLimitInterval) => {\n    deprecationWarning('kbn.ts', 'kbn.calculateInterval()', '@grafana/data');\n    return rangeUtil.calculateInterval(range, resolution, lowLimitInterval);\n  },\n  queryColorDot: (color, diameter) => {\n    return '<div class=\"icon-circle\" style=\"' + ['display:inline-block', 'color:' + color, 'font-size:' + diameter + 'px'].join(';') + '\"></div>';\n  },\n  slugifyForUrl: str => {\n    return str.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n  },\n\n  /** @deprecated since 6.1, use grafana/data */\n  stringToJsRegex: str => {\n    deprecationWarning('kbn.ts', 'kbn.stringToJsRegex()', '@grafana/data');\n    return stringToJsRegex(str);\n  },\n  toFixed: (value, decimals) => {\n    if (value === null) {\n      return '';\n    }\n\n    const factor = decimals ? Math.pow(10, Math.max(0, decimals)) : 1;\n    const formatted = String(Math.round(value * factor) / factor); // if exponent return directly\n\n    if (formatted.indexOf('e') !== -1 || value === 0) {\n      return formatted;\n    } // If tickDecimals was specified, ensure that we have exactly that\n    // much precision; otherwise default to the value's own precision.\n\n\n    if (decimals != null) {\n      const decimalPos = formatted.indexOf('.');\n      const precision = decimalPos === -1 ? 0 : formatted.length - decimalPos - 1;\n\n      if (precision < decimals) {\n        return (precision ? formatted : formatted + '.') + String(factor).slice(1, decimals - precision + 1);\n      }\n    }\n\n    return formatted;\n  },\n  toFixedScaled: (value, decimals, scaledDecimals, additionalDecimals, ext) => {\n    if (scaledDecimals === null) {\n      return kbn.toFixed(value, decimals) + ext;\n    } else {\n      return kbn.toFixed(value, scaledDecimals + additionalDecimals) + ext;\n    }\n  },\n  roundValue: (num, decimals) => {\n    if (num === null) {\n      return null;\n    }\n\n    const n = Math.pow(10, decimals);\n    const formatted = (n * num).toFixed(decimals);\n    return Math.round(parseFloat(formatted)) / n;\n  },\n  // FORMAT MENU\n  getUnitFormats: getValueFormats\n};\n/**\n * Backward compatible layer for value formats to support old plugins\n */\n\nif (typeof Proxy !== 'undefined') {\n  kbn.valueFormats = new Proxy(kbn.valueFormats, {\n    get(target, name, receiver) {\n      if (typeof name !== 'string') {\n        throw {\n          message: `Value format ${String(name)} is not a string`\n        };\n      }\n\n      const formatter = getValueFormat(name);\n\n      if (formatter) {\n        // Return the results as a simple string\n        return (value, decimals, scaledDecimals, isUtc) => {\n          return formattedValueToString(formatter(value, decimals, scaledDecimals, isUtc ? 'utc' : 'browser'));\n        };\n      } // default to look here\n\n\n      return Reflect.get(target, name, receiver);\n    }\n\n  });\n} else {\n  kbn.valueFormats = getValueFormatterIndex();\n}\n\nexport default kbn;","map":{"version":3,"names":["deprecationWarning","formattedValueToString","getValueFormat","getValueFormats","getValueFormatterIndex","stringToJsRegex","rangeUtil","kbn","valueFormats","intervalRegex","intervalsInSeconds","y","M","w","d","h","m","s","ms","regexEscape","value","replace","roundInterval","interval","secondsToHms","secondsToHhmmss","seconds","strings","numHours","Math","floor","numMinutes","numSeconds","push","join","toPercent","nr","outOf","addSlashes","str","describeInterval","intervalToSeconds","intervalToMs","calculateInterval","range","resolution","lowLimitInterval","queryColorDot","color","diameter","slugifyForUrl","toLowerCase","toFixed","decimals","factor","pow","max","formatted","String","round","indexOf","decimalPos","precision","length","slice","toFixedScaled","scaledDecimals","additionalDecimals","ext","roundValue","num","n","parseFloat","getUnitFormats","Proxy","get","target","name","receiver","message","formatter","isUtc","Reflect"],"sources":["/home/soula/grafana/public/app/core/utils/kbn.ts"],"sourcesContent":["import {\n  DecimalCount,\n  deprecationWarning,\n  formattedValueToString,\n  getValueFormat,\n  getValueFormats,\n  getValueFormatterIndex,\n  stringToJsRegex,\n  TimeRange,\n  ValueFormatterIndex,\n  rangeUtil,\n} from '@grafana/data';\n\nconst kbn = {\n  valueFormats: {} as ValueFormatterIndex,\n  intervalRegex: /(\\d+(?:\\.\\d+)?)(ms|[Mwdhmsy])/,\n  intervalsInSeconds: {\n    y: 31536000,\n    M: 2592000,\n    w: 604800,\n    d: 86400,\n    h: 3600,\n    m: 60,\n    s: 1,\n    ms: 0.001,\n  } as { [index: string]: number },\n  regexEscape: (value: string) => value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&'),\n\n  /** @deprecated since 7.2, use grafana/data */\n  roundInterval: (interval: number) => {\n    deprecationWarning('kbn.ts', 'kbn.roundInterval()', '@grafana/data');\n    return rangeUtil.roundInterval(interval);\n  },\n  /** @deprecated since 7.2, use grafana/data */\n  secondsToHms: (s: number) => {\n    deprecationWarning('kbn.ts', 'kbn.secondsToHms()', '@grafana/data');\n    return rangeUtil.secondsToHms(s);\n  },\n  secondsToHhmmss: (seconds: number) => {\n    const strings: string[] = [];\n    const numHours = Math.floor(seconds / 3600);\n    const numMinutes = Math.floor((seconds % 3600) / 60);\n    const numSeconds = Math.floor((seconds % 3600) % 60);\n    numHours > 9 ? strings.push('' + numHours) : strings.push('0' + numHours);\n    numMinutes > 9 ? strings.push('' + numMinutes) : strings.push('0' + numMinutes);\n    numSeconds > 9 ? strings.push('' + numSeconds) : strings.push('0' + numSeconds);\n    return strings.join(':');\n  },\n  toPercent: (nr: number, outOf: number) => Math.floor((nr / outOf) * 10000) / 100 + '%',\n  addSlashes: (str: string) => str.replace(/[\\'\\\"\\\\0]/g, '\\\\$&'),\n  /** @deprecated since 7.2, use grafana/data */\n  describeInterval: (str: string) => {\n    deprecationWarning('kbn.ts', 'kbn.describeInterval()', '@grafana/data');\n    return rangeUtil.describeInterval(str);\n  },\n  /** @deprecated since 7.2, use grafana/data */\n  intervalToSeconds: (str: string) => {\n    deprecationWarning('kbn.ts', 'rangeUtil.intervalToSeconds()', '@grafana/data');\n    return rangeUtil.intervalToSeconds(str);\n  },\n  /** @deprecated since 7.2, use grafana/data */\n  intervalToMs: (str: string) => {\n    deprecationWarning('kbn.ts', 'rangeUtil.intervalToMs()', '@grafana/data');\n    return rangeUtil.intervalToMs(str);\n  },\n  /** @deprecated since 7.2, use grafana/data */\n  calculateInterval: (range: TimeRange, resolution: number, lowLimitInterval?: string) => {\n    deprecationWarning('kbn.ts', 'kbn.calculateInterval()', '@grafana/data');\n    return rangeUtil.calculateInterval(range, resolution, lowLimitInterval);\n  },\n  queryColorDot: (color: string, diameter: string) => {\n    return (\n      '<div class=\"icon-circle\" style=\"' +\n      ['display:inline-block', 'color:' + color, 'font-size:' + diameter + 'px'].join(';') +\n      '\"></div>'\n    );\n  },\n  slugifyForUrl: (str: string) => {\n    return str\n      .toLowerCase()\n      .replace(/[^\\w ]+/g, '')\n      .replace(/ +/g, '-');\n  },\n  /** @deprecated since 6.1, use grafana/data */\n  stringToJsRegex: (str: string) => {\n    deprecationWarning('kbn.ts', 'kbn.stringToJsRegex()', '@grafana/data');\n    return stringToJsRegex(str);\n  },\n  toFixed: (value: number | null, decimals: number) => {\n    if (value === null) {\n      return '';\n    }\n\n    const factor = decimals ? Math.pow(10, Math.max(0, decimals)) : 1;\n    const formatted = String(Math.round(value * factor) / factor);\n\n    // if exponent return directly\n    if (formatted.indexOf('e') !== -1 || value === 0) {\n      return formatted;\n    }\n\n    // If tickDecimals was specified, ensure that we have exactly that\n    // much precision; otherwise default to the value's own precision.\n    if (decimals != null) {\n      const decimalPos = formatted.indexOf('.');\n      const precision = decimalPos === -1 ? 0 : formatted.length - decimalPos - 1;\n      if (precision < decimals) {\n        return (precision ? formatted : formatted + '.') + String(factor).slice(1, decimals - precision + 1);\n      }\n    }\n\n    return formatted;\n  },\n  toFixedScaled: (\n    value: number,\n    decimals: number,\n    scaledDecimals: number | null,\n    additionalDecimals: number,\n    ext: number\n  ) => {\n    if (scaledDecimals === null) {\n      return kbn.toFixed(value, decimals) + ext;\n    } else {\n      return kbn.toFixed(value, scaledDecimals + additionalDecimals) + ext;\n    }\n  },\n  roundValue: (num: number, decimals: number) => {\n    if (num === null) {\n      return null;\n    }\n    const n = Math.pow(10, decimals);\n    const formatted = (n * num).toFixed(decimals);\n    return Math.round(parseFloat(formatted)) / n;\n  },\n  // FORMAT MENU\n  getUnitFormats: getValueFormats,\n};\n\n/**\n * Backward compatible layer for value formats to support old plugins\n */\nif (typeof Proxy !== 'undefined') {\n  kbn.valueFormats = new Proxy(kbn.valueFormats, {\n    get(target, name, receiver) {\n      if (typeof name !== 'string') {\n        throw { message: `Value format ${String(name)} is not a string` };\n      }\n\n      const formatter = getValueFormat(name);\n      if (formatter) {\n        // Return the results as a simple string\n        return (value: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount, isUtc?: boolean) => {\n          return formattedValueToString(formatter(value, decimals, scaledDecimals, isUtc ? 'utc' : 'browser'));\n        };\n      }\n\n      // default to look here\n      return Reflect.get(target, name, receiver);\n    },\n  });\n} else {\n  kbn.valueFormats = getValueFormatterIndex();\n}\n\nexport default kbn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}