{"ast":null,"code":"import React from 'react';\nimport { Alert, CollapsableSection } from '@grafana/ui';\nimport { NotificationChannelOptions } from './NotificationChannelOptions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const ChannelSettings = ({\n  control,\n  currentFormValues,\n  errors,\n  selectedChannel,\n  secureFields,\n  register,\n  resetSecureField\n}) => {\n  var _selectedChannel$info;\n\n  return /*#__PURE__*/_jsxs(CollapsableSection, {\n    label: `Optional ${selectedChannel.heading}`,\n    isOpen: false,\n    children: [selectedChannel.info !== '' && /*#__PURE__*/_jsx(Alert, {\n      severity: \"info\",\n      title: (_selectedChannel$info = selectedChannel.info) !== null && _selectedChannel$info !== void 0 ? _selectedChannel$info : ''\n    }), /*#__PURE__*/_jsx(NotificationChannelOptions, {\n      selectedChannelOptions: selectedChannel.options.filter(o => !o.required),\n      currentFormValues: currentFormValues,\n      register: register,\n      errors: errors,\n      control: control,\n      onResetSecureField: resetSecureField,\n      secureFields: secureFields\n    })]\n  });\n};","map":{"version":3,"names":["React","Alert","CollapsableSection","NotificationChannelOptions","ChannelSettings","control","currentFormValues","errors","selectedChannel","secureFields","register","resetSecureField","heading","info","options","filter","o","required"],"sources":["/home/soula/grafana/public/app/features/alerting/components/ChannelSettings.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { Alert, CollapsableSection } from '@grafana/ui';\n\nimport { NotificationChannelSecureFields, NotificationChannelType } from '../../../types';\n\nimport { NotificationSettingsProps } from './NotificationChannelForm';\nimport { NotificationChannelOptions } from './NotificationChannelOptions';\n\ninterface Props extends NotificationSettingsProps {\n  selectedChannel: NotificationChannelType;\n  secureFields: NotificationChannelSecureFields;\n  resetSecureField: (key: string) => void;\n}\n\nexport const ChannelSettings: FC<Props> = ({\n  control,\n  currentFormValues,\n  errors,\n  selectedChannel,\n  secureFields,\n  register,\n  resetSecureField,\n}) => {\n  return (\n    <CollapsableSection label={`Optional ${selectedChannel.heading}`} isOpen={false}>\n      {selectedChannel.info !== '' && <Alert severity=\"info\" title={selectedChannel.info ?? ''} />}\n      <NotificationChannelOptions\n        selectedChannelOptions={selectedChannel.options.filter((o) => !o.required)}\n        currentFormValues={currentFormValues}\n        register={register}\n        errors={errors}\n        control={control}\n        onResetSecureField={resetSecureField}\n        secureFields={secureFields}\n      />\n    </CollapsableSection>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,KAAT,EAAgBC,kBAAhB,QAA0C,aAA1C;AAKA,SAASC,0BAAT,QAA2C,8BAA3C;;;AAQA,OAAO,MAAMC,eAA0B,GAAG,CAAC;EACzCC,OADyC;EAEzCC,iBAFyC;EAGzCC,MAHyC;EAIzCC,eAJyC;EAKzCC,YALyC;EAMzCC,QANyC;EAOzCC;AAPyC,CAAD,KAQpC;EAAA;;EACJ,oBACE,MAAC,kBAAD;IAAoB,KAAK,EAAG,YAAWH,eAAe,CAACI,OAAQ,EAA/D;IAAkE,MAAM,EAAE,KAA1E;IAAA,WACGJ,eAAe,CAACK,IAAhB,KAAyB,EAAzB,iBAA+B,KAAC,KAAD;MAAO,QAAQ,EAAC,MAAhB;MAAuB,KAAK,2BAAEL,eAAe,CAACK,IAAlB,yEAA0B;IAAtD,EADlC,eAEE,KAAC,0BAAD;MACE,sBAAsB,EAAEL,eAAe,CAACM,OAAhB,CAAwBC,MAAxB,CAAgCC,CAAD,IAAO,CAACA,CAAC,CAACC,QAAzC,CAD1B;MAEE,iBAAiB,EAAEX,iBAFrB;MAGE,QAAQ,EAAEI,QAHZ;MAIE,MAAM,EAAEH,MAJV;MAKE,OAAO,EAAEF,OALX;MAME,kBAAkB,EAAEM,gBANtB;MAOE,YAAY,EAAEF;IAPhB,EAFF;EAAA,EADF;AAcD,CAvBM"},"metadata":{},"sourceType":"module"}