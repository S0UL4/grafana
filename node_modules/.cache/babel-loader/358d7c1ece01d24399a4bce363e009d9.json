{"ast":null,"code":"import { css } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport RcDrawer from 'rc-drawer';\nimport React, { useState, useEffect } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { IconButton } from '../IconButton/IconButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Drawer({\n  children,\n  inline = false,\n  onClose,\n  closeOnMaskClick = true,\n  scrollableContent = false,\n  title,\n  subtitle,\n  width = '40%',\n  expandable = false,\n  tabs\n}) {\n  const drawerStyles = useStyles2(getStyles);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const currentWidth = isExpanded ? '100%' : width;\n  const overlayRef = React.useRef(null);\n  const {\n    dialogProps,\n    titleProps\n  } = useDialog({}, overlayRef);\n  const {\n    overlayProps\n  } = useOverlay({\n    isDismissable: false,\n    isOpen,\n    onClose\n  }, overlayRef); // RcDrawer v4.x needs to be mounted in advance for animations to play.\n\n  useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  const content = /*#__PURE__*/_jsx(\"div\", {\n    className: drawerStyles.content,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(RcDrawer, {\n    level: null,\n    handler: false,\n    open: isOpen,\n    onClose: onClose,\n    maskClosable: closeOnMaskClick,\n    placement: \"right\",\n    width: currentWidth,\n    getContainer: inline ? undefined : 'body',\n    style: {\n      position: `${inline && 'absolute'}`\n    },\n    className: drawerStyles.drawer,\n    \"aria-label\": typeof title === 'string' ? selectors.components.Drawer.General.title(title) : selectors.components.Drawer.General.title('no title'),\n    children: /*#__PURE__*/_jsx(FocusScope, {\n      restoreFocus: true,\n      contain: true,\n      autoFocus: true,\n      children: /*#__PURE__*/_jsxs(\"div\", Object.assign({\n        className: drawerStyles.container\n      }, overlayProps, dialogProps, {\n        ref: overlayRef,\n        children: [typeof title === 'string' && /*#__PURE__*/_jsxs(\"div\", {\n          className: drawerStyles.header,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: drawerStyles.actions,\n            children: [expandable && !isExpanded && /*#__PURE__*/_jsx(IconButton, {\n              name: \"angle-left\",\n              size: \"xl\",\n              onClick: () => setIsExpanded(true),\n              \"aria-label\": selectors.components.Drawer.General.expand\n            }), expandable && isExpanded && /*#__PURE__*/_jsx(IconButton, {\n              name: \"angle-right\",\n              size: \"xl\",\n              onClick: () => setIsExpanded(false),\n              \"aria-label\": selectors.components.Drawer.General.contract\n            }), /*#__PURE__*/_jsx(IconButton, {\n              name: \"times\",\n              size: \"xl\",\n              onClick: onClose,\n              \"aria-label\": selectors.components.Drawer.General.close\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: drawerStyles.titleWrapper,\n            children: [/*#__PURE__*/_jsx(\"h3\", Object.assign({}, titleProps, {\n              children: title\n            })), typeof subtitle === 'string' && /*#__PURE__*/_jsx(\"div\", {\n              className: \"muted\",\n              children: subtitle\n            }), typeof subtitle !== 'string' && subtitle, tabs && /*#__PURE__*/_jsx(\"div\", {\n              className: drawerStyles.tabsWrapper,\n              children: tabs\n            })]\n          })]\n        }), typeof title !== 'string' && title, /*#__PURE__*/_jsx(\"div\", {\n          className: drawerStyles.contentScroll,\n          children: !scrollableContent ? content : /*#__PURE__*/_jsx(CustomScrollbar, {\n            autoHeightMin: \"100%\",\n            children: content\n          })\n        })]\n      }))\n    })\n  });\n}\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      flex: 1 1 0;\n    `,\n    drawer: css`\n      .drawer-content {\n        background-color: ${theme.colors.background.primary};\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n      }\n      &.drawer-open .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n        opacity: 1;\n      }\n      .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n      }\n      .drawer-open .drawer-content-wrapper {\n        box-shadow: ${theme.shadows.z3};\n      }\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    header: css`\n      background-color: ${theme.colors.background.canvas};\n      flex-grow: 0;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    actions: css`\n      display: flex;\n      align-items: baseline;\n      justify-content: flex-end;\n    `,\n    titleWrapper: css`\n      margin-bottom: ${theme.spacing(3)};\n      padding: ${theme.spacing(0, 1, 0, 3)};\n      overflow-wrap: break-word;\n    `,\n    content: css({\n      padding: theme.spacing(2),\n      height: '100%',\n      flexGrow: 1\n    }),\n    contentScroll: css({\n      minHeight: 0,\n      flex: 1\n    }),\n    tabsWrapper: css({\n      paddingLeft: theme.spacing(2),\n      margin: theme.spacing(3, -1, -3, -3)\n    })\n  };\n};","map":{"version":3,"names":["css","useDialog","FocusScope","useOverlay","RcDrawer","React","useState","useEffect","selectors","useStyles2","CustomScrollbar","IconButton","Drawer","children","inline","onClose","closeOnMaskClick","scrollableContent","title","subtitle","width","expandable","tabs","drawerStyles","getStyles","isExpanded","setIsExpanded","isOpen","setIsOpen","currentWidth","overlayRef","useRef","dialogProps","titleProps","overlayProps","isDismissable","content","undefined","position","drawer","components","General","container","header","actions","expand","contract","close","titleWrapper","tabsWrapper","contentScroll","theme","colors","background","primary","overlay","shadows","z3","zIndex","dropdown","canvas","spacing","padding","height","flexGrow","minHeight","flex","paddingLeft","margin"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Drawer/Drawer.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport RcDrawer from 'rc-drawer';\nimport React, { CSSProperties, ReactNode, useState, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { IconButton } from '../IconButton/IconButton';\n\nexport interface Props {\n  children: ReactNode;\n  /** Title shown at the top of the drawer */\n  title?: ReactNode;\n  /** Subtitle shown below the title */\n  subtitle?: ReactNode;\n  /** Should the Drawer be closable by clicking on the mask, defaults to true */\n  closeOnMaskClick?: boolean;\n  /** Render the drawer inside a container on the page */\n  inline?: boolean;\n  /** Either a number in px or a string with unit postfix */\n  width?: number | string;\n  /** Should the Drawer be expandable to full width */\n  expandable?: boolean;\n  /** Tabs */\n  tabs?: React.ReactNode;\n  /** Set to true if the component rendered within in drawer content has its own scroll */\n  scrollableContent?: boolean;\n  /** Callback for closing the drawer */\n  onClose: () => void;\n}\n\nexport function Drawer({\n  children,\n  inline = false,\n  onClose,\n  closeOnMaskClick = true,\n  scrollableContent = false,\n  title,\n  subtitle,\n  width = '40%',\n  expandable = false,\n  tabs,\n}: Props) {\n  const drawerStyles = useStyles2(getStyles);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const currentWidth = isExpanded ? '100%' : width;\n  const overlayRef = React.useRef(null);\n  const { dialogProps, titleProps } = useDialog({}, overlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      isDismissable: false,\n      isOpen,\n      onClose,\n    },\n    overlayRef\n  );\n\n  // RcDrawer v4.x needs to be mounted in advance for animations to play.\n  useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  const content = <div className={drawerStyles.content}>{children}</div>;\n\n  return (\n    <RcDrawer\n      level={null}\n      handler={false}\n      open={isOpen}\n      onClose={onClose}\n      maskClosable={closeOnMaskClick}\n      placement=\"right\"\n      width={currentWidth}\n      getContainer={inline ? undefined : 'body'}\n      style={{ position: `${inline && 'absolute'}` } as CSSProperties}\n      className={drawerStyles.drawer}\n      aria-label={\n        typeof title === 'string'\n          ? selectors.components.Drawer.General.title(title)\n          : selectors.components.Drawer.General.title('no title')\n      }\n    >\n      <FocusScope restoreFocus contain autoFocus>\n        <div className={drawerStyles.container} {...overlayProps} {...dialogProps} ref={overlayRef}>\n          {typeof title === 'string' && (\n            <div className={drawerStyles.header}>\n              <div className={drawerStyles.actions}>\n                {expandable && !isExpanded && (\n                  <IconButton\n                    name=\"angle-left\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(true)}\n                    aria-label={selectors.components.Drawer.General.expand}\n                  />\n                )}\n                {expandable && isExpanded && (\n                  <IconButton\n                    name=\"angle-right\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(false)}\n                    aria-label={selectors.components.Drawer.General.contract}\n                  />\n                )}\n                <IconButton\n                  name=\"times\"\n                  size=\"xl\"\n                  onClick={onClose}\n                  aria-label={selectors.components.Drawer.General.close}\n                />\n              </div>\n              <div className={drawerStyles.titleWrapper}>\n                <h3 {...titleProps}>{title}</h3>\n                {typeof subtitle === 'string' && <div className=\"muted\">{subtitle}</div>}\n                {typeof subtitle !== 'string' && subtitle}\n                {tabs && <div className={drawerStyles.tabsWrapper}>{tabs}</div>}\n              </div>\n            </div>\n          )}\n          {typeof title !== 'string' && title}\n          <div className={drawerStyles.contentScroll}>\n            {!scrollableContent ? content : <CustomScrollbar autoHeightMin=\"100%\">{content}</CustomScrollbar>}\n          </div>\n        </div>\n      </FocusScope>\n    </RcDrawer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      flex: 1 1 0;\n    `,\n    drawer: css`\n      .drawer-content {\n        background-color: ${theme.colors.background.primary};\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n      }\n      &.drawer-open .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n        opacity: 1;\n      }\n      .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n      }\n      .drawer-open .drawer-content-wrapper {\n        box-shadow: ${theme.shadows.z3};\n      }\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    header: css`\n      background-color: ${theme.colors.background.canvas};\n      flex-grow: 0;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    actions: css`\n      display: flex;\n      align-items: baseline;\n      justify-content: flex-end;\n    `,\n    titleWrapper: css`\n      margin-bottom: ${theme.spacing(3)};\n      padding: ${theme.spacing(0, 1, 0, 3)};\n      overflow-wrap: break-word;\n    `,\n    content: css({\n      padding: theme.spacing(2),\n      height: '100%',\n      flexGrow: 1,\n    }),\n    contentScroll: css({\n      minHeight: 0,\n      flex: 1,\n    }),\n    tabsWrapper: css({\n      paddingLeft: theme.spacing(2),\n      margin: theme.spacing(3, -1, -3, -3),\n    }),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}