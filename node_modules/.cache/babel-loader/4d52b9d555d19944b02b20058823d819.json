{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { PluginIconName, PluginListDisplayMode } from '../types';\nimport { PluginListItemBadges } from './PluginListItemBadges';\nimport { PluginLogo } from './PluginLogo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const LOGO_SIZE = '48px';\nexport function PluginListItem({\n  plugin,\n  pathName,\n  displayMode = PluginListDisplayMode.Grid\n}) {\n  const styles = useStyles2(getStyles);\n  const isList = displayMode === PluginListDisplayMode.List;\n  return /*#__PURE__*/_jsxs(\"a\", {\n    href: `${pathName}/${plugin.id}`,\n    className: cx(styles.container, {\n      [styles.list]: isList\n    }),\n    children: [/*#__PURE__*/_jsx(PluginLogo, {\n      src: plugin.info.logos.small,\n      className: styles.pluginLogo,\n      height: LOGO_SIZE,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(\"h2\", {\n      className: cx(styles.name, 'plugin-name'),\n      children: plugin.name\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.content, 'plugin-content'),\n      children: [/*#__PURE__*/_jsxs(\"p\", {\n        children: [\"By \", plugin.orgName]\n      }), /*#__PURE__*/_jsx(PluginListItemBadges, {\n        plugin: plugin\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.pluginType,\n      children: plugin.type && /*#__PURE__*/_jsx(Icon, {\n        name: PluginIconName[plugin.type],\n        title: `${plugin.type} plugin`\n      })\n    })]\n  });\n} // Styles shared between the different type of list items\n\nexport const getStyles = theme => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: ${LOGO_SIZE} 1fr ${theme.spacing(3)};\n      grid-template-rows: auto;\n      gap: ${theme.spacing(2)};\n      grid-auto-flow: row;\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      padding: ${theme.spacing(3)};\n      transition: ${theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    })};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary, 0.03)};\n      }\n    `,\n    list: css`\n      row-gap: 0px;\n\n      > img {\n        align-self: start;\n      }\n\n      > .plugin-content {\n        min-height: 0px;\n        grid-area: 2 / 2 / 4 / 3;\n\n        > p {\n          margin: ${theme.spacing(0, 0, 0.5, 0)};\n        }\n      }\n\n      > .plugin-name {\n        align-self: center;\n        grid-area: 1 / 2 / 2 / 3;\n      }\n    `,\n    pluginType: css`\n      grid-area: 1 / 3 / 2 / 4;\n      color: ${theme.colors.text.secondary};\n    `,\n    pluginLogo: css`\n      grid-area: 1 / 1 / 3 / 2;\n      max-width: 100%;\n      align-self: center;\n      object-fit: contain;\n    `,\n    content: css`\n      grid-area: 3 / 1 / 4 / 3;\n      color: ${theme.colors.text.secondary};\n    `,\n    name: css`\n      grid-area: 1 / 2 / 3 / 3;\n      align-self: center;\n      font-size: ${theme.typography.h4.fontSize};\n      color: ${theme.colors.text.primary};\n      margin: 0;\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","Icon","useStyles2","PluginIconName","PluginListDisplayMode","PluginListItemBadges","PluginLogo","LOGO_SIZE","PluginListItem","plugin","pathName","displayMode","Grid","styles","getStyles","isList","List","id","container","list","info","logos","small","pluginLogo","name","content","orgName","pluginType","type","theme","spacing","colors","background","secondary","shape","borderRadius","transitions","create","duration","short","emphasize","text","typography","h4","fontSize","primary"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/PluginListItem.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginIconName, PluginListDisplayMode } from '../types';\n\nimport { PluginListItemBadges } from './PluginListItemBadges';\nimport { PluginLogo } from './PluginLogo';\n\nexport const LOGO_SIZE = '48px';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  pathName: string;\n  displayMode?: PluginListDisplayMode;\n};\n\nexport function PluginListItem({ plugin, pathName, displayMode = PluginListDisplayMode.Grid }: Props) {\n  const styles = useStyles2(getStyles);\n  const isList = displayMode === PluginListDisplayMode.List;\n\n  return (\n    <a href={`${pathName}/${plugin.id}`} className={cx(styles.container, { [styles.list]: isList })}>\n      <PluginLogo src={plugin.info.logos.small} className={styles.pluginLogo} height={LOGO_SIZE} alt=\"\" />\n      <h2 className={cx(styles.name, 'plugin-name')}>{plugin.name}</h2>\n      <div className={cx(styles.content, 'plugin-content')}>\n        <p>By {plugin.orgName}</p>\n        <PluginListItemBadges plugin={plugin} />\n      </div>\n      <div className={styles.pluginType}>\n        {plugin.type && <Icon name={PluginIconName[plugin.type]} title={`${plugin.type} plugin`} />}\n      </div>\n    </a>\n  );\n}\n\n// Styles shared between the different type of list items\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: ${LOGO_SIZE} 1fr ${theme.spacing(3)};\n      grid-template-rows: auto;\n      gap: ${theme.spacing(2)};\n      grid-auto-flow: row;\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      padding: ${theme.spacing(3)};\n      transition: ${theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      })};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary, 0.03)};\n      }\n    `,\n    list: css`\n      row-gap: 0px;\n\n      > img {\n        align-self: start;\n      }\n\n      > .plugin-content {\n        min-height: 0px;\n        grid-area: 2 / 2 / 4 / 3;\n\n        > p {\n          margin: ${theme.spacing(0, 0, 0.5, 0)};\n        }\n      }\n\n      > .plugin-name {\n        align-self: center;\n        grid-area: 1 / 2 / 2 / 3;\n      }\n    `,\n    pluginType: css`\n      grid-area: 1 / 3 / 2 / 4;\n      color: ${theme.colors.text.secondary};\n    `,\n    pluginLogo: css`\n      grid-area: 1 / 1 / 3 / 2;\n      max-width: 100%;\n      align-self: center;\n      object-fit: contain;\n    `,\n    content: css`\n      grid-area: 3 / 1 / 4 / 3;\n      color: ${theme.colors.text.secondary};\n    `,\n    name: css`\n      grid-area: 1 / 2 / 3 / 3;\n      align-self: center;\n      font-size: ${theme.typography.h4.fontSize};\n      color: ${theme.colors.text.primary};\n      margin: 0;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}