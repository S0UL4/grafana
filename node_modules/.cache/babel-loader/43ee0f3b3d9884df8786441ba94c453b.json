{"ast":null,"code":"import React from 'react';\nimport { Input } from '@grafana/ui';\nimport { LibraryPanelInformation } from 'app/features/library-panels/components/LibraryPanelInfo/LibraryPanelInfo';\nimport { isPanelModelLibraryPanel } from '../../../library-panels/guard';\nimport { OptionsPaneCategoryDescriptor } from './OptionsPaneCategoryDescriptor';\nimport { OptionsPaneItemDescriptor } from './OptionsPaneItemDescriptor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getLibraryPanelOptionsCategory(props) {\n  const {\n    panel,\n    onPanelConfigChange,\n    dashboard\n  } = props;\n  const descriptor = new OptionsPaneCategoryDescriptor({\n    title: 'Library panel options',\n    id: 'Library panel options',\n    isOpenDefault: true\n  });\n\n  if (isPanelModelLibraryPanel(panel)) {\n    descriptor.addItem(new OptionsPaneItemDescriptor({\n      title: 'Name',\n      value: panel.libraryPanel.name,\n      popularRank: 1,\n      render: function renderName() {\n        return /*#__PURE__*/_jsx(Input, {\n          id: \"LibraryPanelFrameName\",\n          defaultValue: panel.libraryPanel.name,\n          onBlur: e => onPanelConfigChange('libraryPanel', Object.assign({}, panel.libraryPanel, {\n            name: e.currentTarget.value\n          }))\n        });\n      }\n    })).addItem(new OptionsPaneItemDescriptor({\n      title: 'Information',\n      render: function renderLibraryPanelInformation() {\n        return /*#__PURE__*/_jsx(LibraryPanelInformation, {\n          panel: panel,\n          formatDate: dashboard.formatDate\n        });\n      }\n    }));\n  }\n\n  return descriptor;\n}","map":{"version":3,"names":["React","Input","LibraryPanelInformation","isPanelModelLibraryPanel","OptionsPaneCategoryDescriptor","OptionsPaneItemDescriptor","getLibraryPanelOptionsCategory","props","panel","onPanelConfigChange","dashboard","descriptor","title","id","isOpenDefault","addItem","value","libraryPanel","name","popularRank","render","renderName","e","currentTarget","renderLibraryPanelInformation","formatDate"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/getLibraryPanelOptions.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Input } from '@grafana/ui';\nimport { LibraryPanelInformation } from 'app/features/library-panels/components/LibraryPanelInfo/LibraryPanelInfo';\n\nimport { isPanelModelLibraryPanel } from '../../../library-panels/guard';\n\nimport { OptionsPaneCategoryDescriptor } from './OptionsPaneCategoryDescriptor';\nimport { OptionsPaneItemDescriptor } from './OptionsPaneItemDescriptor';\nimport { OptionPaneRenderProps } from './types';\n\nexport function getLibraryPanelOptionsCategory(props: OptionPaneRenderProps): OptionsPaneCategoryDescriptor {\n  const { panel, onPanelConfigChange, dashboard } = props;\n  const descriptor = new OptionsPaneCategoryDescriptor({\n    title: 'Library panel options',\n    id: 'Library panel options',\n    isOpenDefault: true,\n  });\n\n  if (isPanelModelLibraryPanel(panel)) {\n    descriptor\n      .addItem(\n        new OptionsPaneItemDescriptor({\n          title: 'Name',\n          value: panel.libraryPanel.name,\n          popularRank: 1,\n          render: function renderName() {\n            return (\n              <Input\n                id=\"LibraryPanelFrameName\"\n                defaultValue={panel.libraryPanel.name}\n                onBlur={(e) =>\n                  onPanelConfigChange('libraryPanel', { ...panel.libraryPanel, name: e.currentTarget.value })\n                }\n              />\n            );\n          },\n        })\n      )\n      .addItem(\n        new OptionsPaneItemDescriptor({\n          title: 'Information',\n          render: function renderLibraryPanelInformation() {\n            return <LibraryPanelInformation panel={panel} formatDate={dashboard.formatDate} />;\n          },\n        })\n      );\n  }\n\n  return descriptor;\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,uBAAT,QAAwC,0EAAxC;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,6BAAT,QAA8C,iCAA9C;AACA,SAASC,yBAAT,QAA0C,6BAA1C;;AAGA,OAAO,SAASC,8BAAT,CAAwCC,KAAxC,EAAqG;EAC1G,MAAM;IAAEC,KAAF;IAASC,mBAAT;IAA8BC;EAA9B,IAA4CH,KAAlD;EACA,MAAMI,UAAU,GAAG,IAAIP,6BAAJ,CAAkC;IACnDQ,KAAK,EAAE,uBAD4C;IAEnDC,EAAE,EAAE,uBAF+C;IAGnDC,aAAa,EAAE;EAHoC,CAAlC,CAAnB;;EAMA,IAAIX,wBAAwB,CAACK,KAAD,CAA5B,EAAqC;IACnCG,UAAU,CACPI,OADH,CAEI,IAAIV,yBAAJ,CAA8B;MAC5BO,KAAK,EAAE,MADqB;MAE5BI,KAAK,EAAER,KAAK,CAACS,YAAN,CAAmBC,IAFE;MAG5BC,WAAW,EAAE,CAHe;MAI5BC,MAAM,EAAE,SAASC,UAAT,GAAsB;QAC5B,oBACE,KAAC,KAAD;UACE,EAAE,EAAC,uBADL;UAEE,YAAY,EAAEb,KAAK,CAACS,YAAN,CAAmBC,IAFnC;UAGE,MAAM,EAAGI,CAAD,IACNb,mBAAmB,CAAC,cAAD,oBAAsBD,KAAK,CAACS,YAA5B;YAA0CC,IAAI,EAAEI,CAAC,CAACC,aAAF,CAAgBP;UAAhE;QAJvB,EADF;MASD;IAd2B,CAA9B,CAFJ,EAmBGD,OAnBH,CAoBI,IAAIV,yBAAJ,CAA8B;MAC5BO,KAAK,EAAE,aADqB;MAE5BQ,MAAM,EAAE,SAASI,6BAAT,GAAyC;QAC/C,oBAAO,KAAC,uBAAD;UAAyB,KAAK,EAAEhB,KAAhC;UAAuC,UAAU,EAAEE,SAAS,CAACe;QAA7D,EAAP;MACD;IAJ2B,CAA9B,CApBJ;EA2BD;;EAED,OAAOd,UAAP;AACD"},"metadata":{},"sourceType":"module"}