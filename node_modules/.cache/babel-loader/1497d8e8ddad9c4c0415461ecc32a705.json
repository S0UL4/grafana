{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { isEmpty, isString, set } from 'lodash';\nimport { dateTimeFormatTimeAgo, setWeekStart } from '@grafana/data';\nimport config from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nexport const initialUserState = {\n  orgId: config.bootData.user.orgId,\n  timeZone: config.bootData.user.timezone,\n  weekStart: config.bootData.user.weekStart,\n  fiscalYearStartMonth: 0,\n  orgsAreLoading: false,\n  sessionsAreLoading: false,\n  teamsAreLoading: false,\n  isUpdating: false,\n  orgs: [],\n  sessions: [],\n  teams: [],\n  user: null\n};\nexport const slice = createSlice({\n  name: 'user/profile',\n  initialState: initialUserState,\n  reducers: {\n    updateTimeZone: (state, action) => {\n      state.timeZone = action.payload.timeZone;\n    },\n    updateWeekStart: (state, action) => {\n      state.weekStart = action.payload.weekStart;\n    },\n    updateFiscalYearStartMonth: (state, action) => {\n      state.fiscalYearStartMonth = action.payload.fiscalYearStartMonth;\n    },\n    setUpdating: (state, action) => {\n      state.isUpdating = action.payload.updating;\n    },\n    userLoaded: (state, action) => {\n      state.user = action.payload.user;\n    },\n    initLoadTeams: (state, action) => {\n      state.teamsAreLoading = true;\n    },\n    teamsLoaded: (state, action) => {\n      state.teams = action.payload.teams;\n      state.teamsAreLoading = false;\n    },\n    initLoadOrgs: (state, action) => {\n      state.orgsAreLoading = true;\n    },\n    orgsLoaded: (state, action) => {\n      state.orgs = action.payload.orgs;\n      state.orgsAreLoading = false;\n    },\n    initLoadSessions: (state, action) => {\n      state.sessionsAreLoading = true;\n    },\n    sessionsLoaded: (state, action) => {\n      const sorted = action.payload.sessions.sort((a, b) => Number(b.isActive) - Number(a.isActive)); // Show active sessions first\n\n      state.sessions = sorted.map(session => ({\n        id: session.id,\n        isActive: session.isActive,\n        seenAt: dateTimeFormatTimeAgo(session.seenAt),\n        createdAt: session.createdAt,\n        clientIp: session.clientIp,\n        browser: session.browser,\n        browserVersion: session.browserVersion,\n        os: session.os,\n        osVersion: session.osVersion,\n        device: session.device\n      }));\n      state.sessionsAreLoading = false;\n    },\n    userSessionRevoked: (state, action) => {\n      state.sessions = state.sessions.filter(session => {\n        return session.id !== action.payload.tokenId;\n      });\n      state.isUpdating = false;\n    }\n  }\n});\nexport const updateFiscalYearStartMonthForSession = fiscalYearStartMonth => {\n  return async dispatch => {\n    set(contextSrv, 'user.fiscalYearStartMonth', fiscalYearStartMonth);\n    dispatch(updateFiscalYearStartMonth({\n      fiscalYearStartMonth\n    }));\n  };\n};\nexport const updateTimeZoneForSession = timeZone => {\n  return async dispatch => {\n    if (!isString(timeZone) || isEmpty(timeZone)) {\n      var _config$bootData, _config$bootData$user;\n\n      timeZone = config === null || config === void 0 ? void 0 : (_config$bootData = config.bootData) === null || _config$bootData === void 0 ? void 0 : (_config$bootData$user = _config$bootData.user) === null || _config$bootData$user === void 0 ? void 0 : _config$bootData$user.timezone;\n    }\n\n    set(contextSrv, 'user.timezone', timeZone);\n    dispatch(updateTimeZone({\n      timeZone\n    }));\n  };\n};\nexport const updateWeekStartForSession = weekStart => {\n  return async dispatch => {\n    if (!isString(weekStart) || isEmpty(weekStart)) {\n      var _config$bootData2, _config$bootData2$use;\n\n      weekStart = config === null || config === void 0 ? void 0 : (_config$bootData2 = config.bootData) === null || _config$bootData2 === void 0 ? void 0 : (_config$bootData2$use = _config$bootData2.user) === null || _config$bootData2$use === void 0 ? void 0 : _config$bootData2$use.weekStart;\n    }\n\n    set(contextSrv, 'user.weekStart', weekStart);\n    dispatch(updateWeekStart({\n      weekStart\n    }));\n    setWeekStart(weekStart);\n  };\n};\nexport const {\n  setUpdating,\n  initLoadOrgs,\n  orgsLoaded,\n  initLoadTeams,\n  teamsLoaded,\n  userLoaded,\n  userSessionRevoked,\n  initLoadSessions,\n  sessionsLoaded,\n  updateTimeZone,\n  updateWeekStart,\n  updateFiscalYearStartMonth\n} = slice.actions;\nexport const userReducer = slice.reducer;\nexport default {\n  user: slice.reducer\n};","map":{"version":3,"names":["createSlice","isEmpty","isString","set","dateTimeFormatTimeAgo","setWeekStart","config","contextSrv","initialUserState","orgId","bootData","user","timeZone","timezone","weekStart","fiscalYearStartMonth","orgsAreLoading","sessionsAreLoading","teamsAreLoading","isUpdating","orgs","sessions","teams","slice","name","initialState","reducers","updateTimeZone","state","action","payload","updateWeekStart","updateFiscalYearStartMonth","setUpdating","updating","userLoaded","initLoadTeams","teamsLoaded","initLoadOrgs","orgsLoaded","initLoadSessions","sessionsLoaded","sorted","sort","a","b","Number","isActive","map","session","id","seenAt","createdAt","clientIp","browser","browserVersion","os","osVersion","device","userSessionRevoked","filter","tokenId","updateFiscalYearStartMonthForSession","dispatch","updateTimeZoneForSession","updateWeekStartForSession","actions","userReducer","reducer"],"sources":["/home/soula/grafana/public/app/features/profile/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { isEmpty, isString, set } from 'lodash';\n\nimport { dateTimeFormatTimeAgo, setWeekStart, TimeZone } from '@grafana/data';\nimport config from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { Team, ThunkResult, UserDTO, UserOrg, UserSession } from 'app/types';\n\nexport interface UserState {\n  orgId: number;\n  timeZone: TimeZone;\n  weekStart: string;\n  fiscalYearStartMonth: number;\n  user: UserDTO | null;\n  teams: Team[];\n  orgs: UserOrg[];\n  sessions: UserSession[];\n  teamsAreLoading: boolean;\n  orgsAreLoading: boolean;\n  sessionsAreLoading: boolean;\n  isUpdating: boolean;\n}\n\nexport const initialUserState: UserState = {\n  orgId: config.bootData.user.orgId,\n  timeZone: config.bootData.user.timezone,\n  weekStart: config.bootData.user.weekStart,\n  fiscalYearStartMonth: 0,\n  orgsAreLoading: false,\n  sessionsAreLoading: false,\n  teamsAreLoading: false,\n  isUpdating: false,\n  orgs: [],\n  sessions: [],\n  teams: [],\n  user: null,\n};\n\nexport const slice = createSlice({\n  name: 'user/profile',\n  initialState: initialUserState,\n  reducers: {\n    updateTimeZone: (state, action: PayloadAction<{ timeZone: TimeZone }>) => {\n      state.timeZone = action.payload.timeZone;\n    },\n    updateWeekStart: (state, action: PayloadAction<{ weekStart: string }>) => {\n      state.weekStart = action.payload.weekStart;\n    },\n    updateFiscalYearStartMonth: (state, action: PayloadAction<{ fiscalYearStartMonth: number }>) => {\n      state.fiscalYearStartMonth = action.payload.fiscalYearStartMonth;\n    },\n    setUpdating: (state, action: PayloadAction<{ updating: boolean }>) => {\n      state.isUpdating = action.payload.updating;\n    },\n    userLoaded: (state, action: PayloadAction<{ user: UserDTO }>) => {\n      state.user = action.payload.user;\n    },\n    initLoadTeams: (state, action: PayloadAction<undefined>) => {\n      state.teamsAreLoading = true;\n    },\n    teamsLoaded: (state, action: PayloadAction<{ teams: Team[] }>) => {\n      state.teams = action.payload.teams;\n      state.teamsAreLoading = false;\n    },\n    initLoadOrgs: (state, action: PayloadAction<undefined>) => {\n      state.orgsAreLoading = true;\n    },\n    orgsLoaded: (state, action: PayloadAction<{ orgs: UserOrg[] }>) => {\n      state.orgs = action.payload.orgs;\n      state.orgsAreLoading = false;\n    },\n    initLoadSessions: (state, action: PayloadAction<undefined>) => {\n      state.sessionsAreLoading = true;\n    },\n    sessionsLoaded: (state, action: PayloadAction<{ sessions: UserSession[] }>) => {\n      const sorted = action.payload.sessions.sort((a, b) => Number(b.isActive) - Number(a.isActive)); // Show active sessions first\n      state.sessions = sorted.map((session) => ({\n        id: session.id,\n        isActive: session.isActive,\n        seenAt: dateTimeFormatTimeAgo(session.seenAt),\n        createdAt: session.createdAt,\n        clientIp: session.clientIp,\n        browser: session.browser,\n        browserVersion: session.browserVersion,\n        os: session.os,\n        osVersion: session.osVersion,\n        device: session.device,\n      }));\n      state.sessionsAreLoading = false;\n    },\n    userSessionRevoked: (state, action: PayloadAction<{ tokenId: number }>) => {\n      state.sessions = state.sessions.filter((session: UserSession) => {\n        return session.id !== action.payload.tokenId;\n      });\n      state.isUpdating = false;\n    },\n  },\n});\n\nexport const updateFiscalYearStartMonthForSession = (fiscalYearStartMonth: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    set(contextSrv, 'user.fiscalYearStartMonth', fiscalYearStartMonth);\n    dispatch(updateFiscalYearStartMonth({ fiscalYearStartMonth }));\n  };\n};\n\nexport const updateTimeZoneForSession = (timeZone: TimeZone): ThunkResult<void> => {\n  return async (dispatch) => {\n    if (!isString(timeZone) || isEmpty(timeZone)) {\n      timeZone = config?.bootData?.user?.timezone;\n    }\n\n    set(contextSrv, 'user.timezone', timeZone);\n    dispatch(updateTimeZone({ timeZone }));\n  };\n};\n\nexport const updateWeekStartForSession = (weekStart: string): ThunkResult<void> => {\n  return async (dispatch) => {\n    if (!isString(weekStart) || isEmpty(weekStart)) {\n      weekStart = config?.bootData?.user?.weekStart;\n    }\n\n    set(contextSrv, 'user.weekStart', weekStart);\n    dispatch(updateWeekStart({ weekStart }));\n    setWeekStart(weekStart);\n  };\n};\n\nexport const {\n  setUpdating,\n  initLoadOrgs,\n  orgsLoaded,\n  initLoadTeams,\n  teamsLoaded,\n  userLoaded,\n  userSessionRevoked,\n  initLoadSessions,\n  sessionsLoaded,\n  updateTimeZone,\n  updateWeekStart,\n  updateFiscalYearStartMonth,\n} = slice.actions;\n\nexport const userReducer = slice.reducer;\nexport default { user: slice.reducer };\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,GAA5B,QAAuC,QAAvC;AAEA,SAASC,qBAAT,EAAgCC,YAAhC,QAA8D,eAA9D;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAkBA,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,KAAK,EAAEH,MAAM,CAACI,QAAP,CAAgBC,IAAhB,CAAqBF,KADa;EAEzCG,QAAQ,EAAEN,MAAM,CAACI,QAAP,CAAgBC,IAAhB,CAAqBE,QAFU;EAGzCC,SAAS,EAAER,MAAM,CAACI,QAAP,CAAgBC,IAAhB,CAAqBG,SAHS;EAIzCC,oBAAoB,EAAE,CAJmB;EAKzCC,cAAc,EAAE,KALyB;EAMzCC,kBAAkB,EAAE,KANqB;EAOzCC,eAAe,EAAE,KAPwB;EAQzCC,UAAU,EAAE,KAR6B;EASzCC,IAAI,EAAE,EATmC;EAUzCC,QAAQ,EAAE,EAV+B;EAWzCC,KAAK,EAAE,EAXkC;EAYzCX,IAAI,EAAE;AAZmC,CAApC;AAeP,OAAO,MAAMY,KAAK,GAAGvB,WAAW,CAAC;EAC/BwB,IAAI,EAAE,cADyB;EAE/BC,YAAY,EAAEjB,gBAFiB;EAG/BkB,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0D;MACxED,KAAK,CAAChB,QAAN,GAAiBiB,MAAM,CAACC,OAAP,CAAelB,QAAhC;IACD,CAHO;IAIRmB,eAAe,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAyD;MACxED,KAAK,CAACd,SAAN,GAAkBe,MAAM,CAACC,OAAP,CAAehB,SAAjC;IACD,CANO;IAORkB,0BAA0B,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAoE;MAC9FD,KAAK,CAACb,oBAAN,GAA6Bc,MAAM,CAACC,OAAP,CAAef,oBAA5C;IACD,CATO;IAURkB,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAyD;MACpED,KAAK,CAACT,UAAN,GAAmBU,MAAM,CAACC,OAAP,CAAeI,QAAlC;IACD,CAZO;IAaRC,UAAU,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAqD;MAC/DD,KAAK,CAACjB,IAAN,GAAakB,MAAM,CAACC,OAAP,CAAenB,IAA5B;IACD,CAfO;IAgBRyB,aAAa,EAAE,CAACR,KAAD,EAAQC,MAAR,KAA6C;MAC1DD,KAAK,CAACV,eAAN,GAAwB,IAAxB;IACD,CAlBO;IAmBRmB,WAAW,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAqD;MAChED,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAP,CAAeR,KAA7B;MACAM,KAAK,CAACV,eAAN,GAAwB,KAAxB;IACD,CAtBO;IAuBRoB,YAAY,EAAE,CAACV,KAAD,EAAQC,MAAR,KAA6C;MACzDD,KAAK,CAACZ,cAAN,GAAuB,IAAvB;IACD,CAzBO;IA0BRuB,UAAU,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAuD;MACjED,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAAP,CAAeV,IAA5B;MACAQ,KAAK,CAACZ,cAAN,GAAuB,KAAvB;IACD,CA7BO;IA8BRwB,gBAAgB,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAA6C;MAC7DD,KAAK,CAACX,kBAAN,GAA2B,IAA3B;IACD,CAhCO;IAiCRwB,cAAc,EAAE,CAACb,KAAD,EAAQC,MAAR,KAA+D;MAC7E,MAAMa,MAAM,GAAGb,MAAM,CAACC,OAAP,CAAeT,QAAf,CAAwBsB,IAAxB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAUC,MAAM,CAACD,CAAC,CAACE,QAAH,CAAN,GAAqBD,MAAM,CAACF,CAAC,CAACG,QAAH,CAAlE,CAAf,CAD6E,CACmB;;MAChGnB,KAAK,CAACP,QAAN,GAAiBqB,MAAM,CAACM,GAAP,CAAYC,OAAD,KAAc;QACxCC,EAAE,EAAED,OAAO,CAACC,EAD4B;QAExCH,QAAQ,EAAEE,OAAO,CAACF,QAFsB;QAGxCI,MAAM,EAAE/C,qBAAqB,CAAC6C,OAAO,CAACE,MAAT,CAHW;QAIxCC,SAAS,EAAEH,OAAO,CAACG,SAJqB;QAKxCC,QAAQ,EAAEJ,OAAO,CAACI,QALsB;QAMxCC,OAAO,EAAEL,OAAO,CAACK,OANuB;QAOxCC,cAAc,EAAEN,OAAO,CAACM,cAPgB;QAQxCC,EAAE,EAAEP,OAAO,CAACO,EAR4B;QASxCC,SAAS,EAAER,OAAO,CAACQ,SATqB;QAUxCC,MAAM,EAAET,OAAO,CAACS;MAVwB,CAAd,CAAX,CAAjB;MAYA9B,KAAK,CAACX,kBAAN,GAA2B,KAA3B;IACD,CAhDO;IAiDR0C,kBAAkB,EAAE,CAAC/B,KAAD,EAAQC,MAAR,KAAuD;MACzED,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACP,QAAN,CAAeuC,MAAf,CAAuBX,OAAD,IAA0B;QAC/D,OAAOA,OAAO,CAACC,EAAR,KAAerB,MAAM,CAACC,OAAP,CAAe+B,OAArC;MACD,CAFgB,CAAjB;MAGAjC,KAAK,CAACT,UAAN,GAAmB,KAAnB;IACD;EAtDO;AAHqB,CAAD,CAAzB;AA6DP,OAAO,MAAM2C,oCAAoC,GAAI/C,oBAAD,IAAqD;EACvG,OAAO,MAAOgD,QAAP,IAAoB;IACzB5D,GAAG,CAACI,UAAD,EAAa,2BAAb,EAA0CQ,oBAA1C,CAAH;IACAgD,QAAQ,CAAC/B,0BAA0B,CAAC;MAAEjB;IAAF,CAAD,CAA3B,CAAR;EACD,CAHD;AAID,CALM;AAOP,OAAO,MAAMiD,wBAAwB,GAAIpD,QAAD,IAA2C;EACjF,OAAO,MAAOmD,QAAP,IAAoB;IACzB,IAAI,CAAC7D,QAAQ,CAACU,QAAD,CAAT,IAAuBX,OAAO,CAACW,QAAD,CAAlC,EAA8C;MAAA;;MAC5CA,QAAQ,GAAGN,MAAH,aAAGA,MAAH,2CAAGA,MAAM,CAAEI,QAAX,8EAAG,iBAAkBC,IAArB,0DAAG,sBAAwBE,QAAnC;IACD;;IAEDV,GAAG,CAACI,UAAD,EAAa,eAAb,EAA8BK,QAA9B,CAAH;IACAmD,QAAQ,CAACpC,cAAc,CAAC;MAAEf;IAAF,CAAD,CAAf,CAAR;EACD,CAPD;AAQD,CATM;AAWP,OAAO,MAAMqD,yBAAyB,GAAInD,SAAD,IAA0C;EACjF,OAAO,MAAOiD,QAAP,IAAoB;IACzB,IAAI,CAAC7D,QAAQ,CAACY,SAAD,CAAT,IAAwBb,OAAO,CAACa,SAAD,CAAnC,EAAgD;MAAA;;MAC9CA,SAAS,GAAGR,MAAH,aAAGA,MAAH,4CAAGA,MAAM,CAAEI,QAAX,+EAAG,kBAAkBC,IAArB,0DAAG,sBAAwBG,SAApC;IACD;;IAEDX,GAAG,CAACI,UAAD,EAAa,gBAAb,EAA+BO,SAA/B,CAAH;IACAiD,QAAQ,CAAChC,eAAe,CAAC;MAAEjB;IAAF,CAAD,CAAhB,CAAR;IACAT,YAAY,CAACS,SAAD,CAAZ;EACD,CARD;AASD,CAVM;AAYP,OAAO,MAAM;EACXmB,WADW;EAEXK,YAFW;EAGXC,UAHW;EAIXH,aAJW;EAKXC,WALW;EAMXF,UANW;EAOXwB,kBAPW;EAQXnB,gBARW;EASXC,cATW;EAUXd,cAVW;EAWXI,eAXW;EAYXC;AAZW,IAaTT,KAAK,CAAC2C,OAbH;AAeP,OAAO,MAAMC,WAAW,GAAG5C,KAAK,CAAC6C,OAA1B;AACP,eAAe;EAAEzD,IAAI,EAAEY,KAAK,CAAC6C;AAAd,CAAf"},"metadata":{},"sourceType":"module"}