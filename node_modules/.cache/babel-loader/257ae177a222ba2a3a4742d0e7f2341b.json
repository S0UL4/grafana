{"ast":null,"code":"import React, { useCallback, useEffect } from 'react';\nimport { CodeEditor } from '@grafana/ui';\nimport language from '../cloudwatch-sql/definition';\nimport { TRIGGER_SUGGEST } from '../monarch/commands';\nimport { registerLanguage } from '../monarch/register';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SQLCodeEditor = ({\n  region,\n  sql,\n  onChange,\n  onRunQuery,\n  datasource\n}) => {\n  useEffect(() => {\n    datasource.sqlCompletionItemProvider.setRegion(region);\n  }, [region, datasource]);\n  const onEditorMount = useCallback((editor, monaco) => {\n    editor.onDidFocusEditorText(() => editor.trigger(TRIGGER_SUGGEST.id, TRIGGER_SUGGEST.id, {}));\n    editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n      const text = editor.getValue();\n      onChange(text);\n      onRunQuery();\n    });\n  }, [onChange, onRunQuery]);\n  return /*#__PURE__*/_jsx(CodeEditor, {\n    height: '150px',\n    language: language.id,\n    value: sql,\n    onBlur: value => {\n      if (value !== sql) {\n        onChange(value);\n      }\n    },\n    showMiniMap: false,\n    showLineNumbers: true,\n    onBeforeEditorMount: monaco => registerLanguage(monaco, language, datasource.sqlCompletionItemProvider),\n    onEditorDidMount: onEditorMount\n  });\n};","map":{"version":3,"names":["React","useCallback","useEffect","CodeEditor","language","TRIGGER_SUGGEST","registerLanguage","SQLCodeEditor","region","sql","onChange","onRunQuery","datasource","sqlCompletionItemProvider","setRegion","onEditorMount","editor","monaco","onDidFocusEditorText","trigger","id","addCommand","KeyMod","Shift","KeyCode","Enter","text","getValue","value"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloudwatch/components/SQLCodeEditor.tsx"],"sourcesContent":["import type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { FunctionComponent, useCallback, useEffect } from 'react';\n\nimport { CodeEditor, Monaco } from '@grafana/ui';\n\nimport language from '../cloudwatch-sql/definition';\nimport { CloudWatchDatasource } from '../datasource';\nimport { TRIGGER_SUGGEST } from '../monarch/commands';\nimport { registerLanguage } from '../monarch/register';\n\nexport interface Props {\n  region: string;\n  sql: string;\n  onChange: (sql: string) => void;\n  onRunQuery: () => void;\n  datasource: CloudWatchDatasource;\n}\n\nexport const SQLCodeEditor: FunctionComponent<Props> = ({ region, sql, onChange, onRunQuery, datasource }) => {\n  useEffect(() => {\n    datasource.sqlCompletionItemProvider.setRegion(region);\n  }, [region, datasource]);\n\n  const onEditorMount = useCallback(\n    (editor: monacoType.editor.IStandaloneCodeEditor, monaco: Monaco) => {\n      editor.onDidFocusEditorText(() => editor.trigger(TRIGGER_SUGGEST.id, TRIGGER_SUGGEST.id, {}));\n      editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n        const text = editor.getValue();\n        onChange(text);\n        onRunQuery();\n      });\n    },\n    [onChange, onRunQuery]\n  );\n\n  return (\n    <CodeEditor\n      height={'150px'}\n      language={language.id}\n      value={sql}\n      onBlur={(value) => {\n        if (value !== sql) {\n          onChange(value);\n        }\n      }}\n      showMiniMap={false}\n      showLineNumbers={true}\n      onBeforeEditorMount={(monaco: Monaco) => registerLanguage(monaco, language, datasource.sqlCompletionItemProvider)}\n      onEditorDidMount={onEditorMount}\n    />\n  );\n};\n"],"mappings":"AACA,OAAOA,KAAP,IAAmCC,WAAnC,EAAgDC,SAAhD,QAAiE,OAAjE;AAEA,SAASC,UAAT,QAAmC,aAAnC;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAUA,OAAO,MAAMC,aAAuC,GAAG,CAAC;EAAEC,MAAF;EAAUC,GAAV;EAAeC,QAAf;EAAyBC,UAAzB;EAAqCC;AAArC,CAAD,KAAuD;EAC5GV,SAAS,CAAC,MAAM;IACdU,UAAU,CAACC,yBAAX,CAAqCC,SAArC,CAA+CN,MAA/C;EACD,CAFQ,EAEN,CAACA,MAAD,EAASI,UAAT,CAFM,CAAT;EAIA,MAAMG,aAAa,GAAGd,WAAW,CAC/B,CAACe,MAAD,EAAkDC,MAAlD,KAAqE;IACnED,MAAM,CAACE,oBAAP,CAA4B,MAAMF,MAAM,CAACG,OAAP,CAAed,eAAe,CAACe,EAA/B,EAAmCf,eAAe,CAACe,EAAnD,EAAuD,EAAvD,CAAlC;IACAJ,MAAM,CAACK,UAAP,CAAkBJ,MAAM,CAACK,MAAP,CAAcC,KAAd,GAAsBN,MAAM,CAACO,OAAP,CAAeC,KAAvD,EAA8D,MAAM;MAClE,MAAMC,IAAI,GAAGV,MAAM,CAACW,QAAP,EAAb;MACAjB,QAAQ,CAACgB,IAAD,CAAR;MACAf,UAAU;IACX,CAJD;EAKD,CAR8B,EAS/B,CAACD,QAAD,EAAWC,UAAX,CAT+B,CAAjC;EAYA,oBACE,KAAC,UAAD;IACE,MAAM,EAAE,OADV;IAEE,QAAQ,EAAEP,QAAQ,CAACgB,EAFrB;IAGE,KAAK,EAAEX,GAHT;IAIE,MAAM,EAAGmB,KAAD,IAAW;MACjB,IAAIA,KAAK,KAAKnB,GAAd,EAAmB;QACjBC,QAAQ,CAACkB,KAAD,CAAR;MACD;IACF,CARH;IASE,WAAW,EAAE,KATf;IAUE,eAAe,EAAE,IAVnB;IAWE,mBAAmB,EAAGX,MAAD,IAAoBX,gBAAgB,CAACW,MAAD,EAASb,QAAT,EAAmBQ,UAAU,CAACC,yBAA9B,CAX3D;IAYE,gBAAgB,EAAEE;EAZpB,EADF;AAgBD,CAjCM"},"metadata":{},"sourceType":"module"}