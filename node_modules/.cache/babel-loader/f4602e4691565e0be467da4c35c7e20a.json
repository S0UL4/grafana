{"ast":null,"code":"import { merge, timer } from 'rxjs';\nimport { mapTo, takeUntil } from 'rxjs/operators';\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nexport function withLoadingIndicator({\n  whileLoading,\n  source\n}) {\n  return merge(timer(200).pipe(mapTo(whileLoading), takeUntil(source)), source);\n}","map":{"version":3,"names":["merge","timer","mapTo","takeUntil","withLoadingIndicator","whileLoading","source","pipe"],"sources":["/home/soula/grafana/packages/grafana-data/src/utils/withLoadingIndicator.ts"],"sourcesContent":["import { merge, Observable, timer } from 'rxjs';\nimport { mapTo, takeUntil } from 'rxjs/operators';\n\n/**\n * @internal\n */\nexport type WithLoadingIndicatorOptions<T> = {\n  whileLoading: T;\n  source: Observable<T>;\n};\n\n/**\n * @internal\n */\nexport function withLoadingIndicator<T>({ whileLoading, source }: WithLoadingIndicatorOptions<T>): Observable<T> {\n  return merge(timer(200).pipe(mapTo(whileLoading), takeUntil(source)), source);\n}\n"],"mappings":"AAAA,SAASA,KAAT,EAA4BC,KAA5B,QAAyC,MAAzC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,gBAAjC;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA,OAAO,SAASC,oBAAT,CAAiC;EAAEC,YAAF;EAAgBC;AAAhB,CAAjC,EAA0G;EAC/G,OAAON,KAAK,CAACC,KAAK,CAAC,GAAD,CAAL,CAAWM,IAAX,CAAgBL,KAAK,CAACG,YAAD,CAArB,EAAqCF,SAAS,CAACG,MAAD,CAA9C,CAAD,EAA0DA,MAA1D,CAAZ;AACD"},"metadata":{},"sourceType":"module"}