{"ast":null,"code":"var _GraphiteQueryEditorC;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { Button, useStyles2 } from '@grafana/ui';\nimport { actions } from '../state/actions';\nimport { GraphiteQueryEditorContext, useDispatch, useGraphiteState } from '../state/context';\nimport { FunctionsSection } from './FunctionsSection';\nimport { GraphiteTextEditor } from './GraphiteTextEditor';\nimport { SeriesSection } from './SeriesSection';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GraphiteQueryEditor({\n  datasource,\n  onRunQuery,\n  onChange,\n  query,\n  range,\n  queries\n}) {\n  return /*#__PURE__*/_jsx(GraphiteQueryEditorContext, {\n    datasource: datasource,\n    onRunQuery: onRunQuery,\n    onChange: onChange,\n    query: query,\n    queries: queries,\n    range: range,\n    children: _GraphiteQueryEditorC || (_GraphiteQueryEditorC = /*#__PURE__*/_jsx(GraphiteQueryEditorContent, {}))\n  });\n}\n\nfunction GraphiteQueryEditorContent() {\n  var _state$target, _state$target2, _state$queryModel;\n\n  const dispatch = useDispatch();\n  const state = useGraphiteState();\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.visualEditor,\n      children: [((_state$target = state.target) === null || _state$target === void 0 ? void 0 : _state$target.textEditor) && /*#__PURE__*/_jsx(GraphiteTextEditor, {\n        rawQuery: state.target.target\n      }), !((_state$target2 = state.target) !== null && _state$target2 !== void 0 && _state$target2.textEditor) && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(SeriesSection, {\n          state: state\n        }), /*#__PURE__*/_jsx(FunctionsSection, {\n          functions: (_state$queryModel = state.queryModel) === null || _state$queryModel === void 0 ? void 0 : _state$queryModel.functions,\n          funcDefs: state.funcDefs\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Button, {\n      className: styles.toggleButton,\n      icon: \"pen\",\n      variant: \"secondary\",\n      \"aria-label\": \"Toggle editor mode\",\n      onClick: () => {\n        dispatch(actions.toggleEditorMode());\n      }\n    })]\n  });\n}\n\nfunction getStyles(theme) {\n  return {\n    container: css`\n      display: flex;\n    `,\n    visualEditor: css`\n      flex-grow: 1;\n    `,\n    toggleButton: css`\n      margin-left: ${theme.spacing(0.5)};\n    `\n  };\n}","map":{"version":3,"names":["css","React","Button","useStyles2","actions","GraphiteQueryEditorContext","useDispatch","useGraphiteState","FunctionsSection","GraphiteTextEditor","SeriesSection","GraphiteQueryEditor","datasource","onRunQuery","onChange","query","range","queries","GraphiteQueryEditorContent","dispatch","state","styles","getStyles","container","visualEditor","target","textEditor","queryModel","functions","funcDefs","toggleButton","toggleEditorMode","theme","spacing"],"sources":["/home/soula/grafana/public/app/plugins/datasource/graphite/components/GraphiteQueryEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport { actions } from '../state/actions';\nimport { GraphiteQueryEditorContext, GraphiteQueryEditorProps, useDispatch, useGraphiteState } from '../state/context';\n\nimport { FunctionsSection } from './FunctionsSection';\nimport { GraphiteTextEditor } from './GraphiteTextEditor';\nimport { SeriesSection } from './SeriesSection';\n\nexport function GraphiteQueryEditor({\n  datasource,\n  onRunQuery,\n  onChange,\n  query,\n  range,\n  queries,\n}: GraphiteQueryEditorProps) {\n  return (\n    <GraphiteQueryEditorContext\n      datasource={datasource}\n      onRunQuery={onRunQuery}\n      onChange={onChange}\n      query={query}\n      queries={queries}\n      range={range}\n    >\n      <GraphiteQueryEditorContent />\n    </GraphiteQueryEditorContext>\n  );\n}\n\nfunction GraphiteQueryEditorContent() {\n  const dispatch = useDispatch();\n  const state = useGraphiteState();\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.visualEditor}>\n        {state.target?.textEditor && <GraphiteTextEditor rawQuery={state.target.target} />}\n        {!state.target?.textEditor && (\n          <>\n            <SeriesSection state={state} />\n            <FunctionsSection functions={state.queryModel?.functions} funcDefs={state.funcDefs!} />\n          </>\n        )}\n      </div>\n      <Button\n        className={styles.toggleButton}\n        icon=\"pen\"\n        variant=\"secondary\"\n        aria-label=\"Toggle editor mode\"\n        onClick={() => {\n          dispatch(actions.toggleEditorMode());\n        }}\n      />\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      display: flex;\n    `,\n    visualEditor: css`\n      flex-grow: 1;\n    `,\n    toggleButton: css`\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n}\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,0BAAT,EAA+DC,WAA/D,EAA4EC,gBAA5E,QAAoG,kBAApG;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;;AAEA,OAAO,SAASC,mBAAT,CAA6B;EAClCC,UADkC;EAElCC,UAFkC;EAGlCC,QAHkC;EAIlCC,KAJkC;EAKlCC,KALkC;EAMlCC;AANkC,CAA7B,EAOsB;EAC3B,oBACE,KAAC,0BAAD;IACE,UAAU,EAAEL,UADd;IAEE,UAAU,EAAEC,UAFd;IAGE,QAAQ,EAAEC,QAHZ;IAIE,KAAK,EAAEC,KAJT;IAKE,OAAO,EAAEE,OALX;IAME,KAAK,EAAED,KANT;IAAA,yEAQE,KAAC,0BAAD,KARF;EAAA,EADF;AAYD;;AAED,SAASE,0BAAT,GAAsC;EAAA;;EACpC,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,KAAK,GAAGb,gBAAgB,EAA9B;EACA,MAAMc,MAAM,GAAGlB,UAAU,CAACmB,SAAD,CAAzB;EAEA,oBACE;IAAK,SAAS,EAAED,MAAM,CAACE,SAAvB;IAAA,wBACE;MAAK,SAAS,EAAEF,MAAM,CAACG,YAAvB;MAAA,WACG,kBAAAJ,KAAK,CAACK,MAAN,gEAAcC,UAAd,kBAA4B,KAAC,kBAAD;QAAoB,QAAQ,EAAEN,KAAK,CAACK,MAAN,CAAaA;MAA3C,EAD/B,EAEG,oBAACL,KAAK,CAACK,MAAP,2CAAC,eAAcC,UAAf,kBACC;QAAA,wBACE,KAAC,aAAD;UAAe,KAAK,EAAEN;QAAtB,EADF,eAEE,KAAC,gBAAD;UAAkB,SAAS,uBAAEA,KAAK,CAACO,UAAR,sDAAE,kBAAkBC,SAA/C;UAA0D,QAAQ,EAAER,KAAK,CAACS;QAA1E,EAFF;MAAA,EAHJ;IAAA,EADF,eAUE,KAAC,MAAD;MACE,SAAS,EAAER,MAAM,CAACS,YADpB;MAEE,IAAI,EAAC,KAFP;MAGE,OAAO,EAAC,WAHV;MAIE,cAAW,oBAJb;MAKE,OAAO,EAAE,MAAM;QACbX,QAAQ,CAACf,OAAO,CAAC2B,gBAAR,EAAD,CAAR;MACD;IAPH,EAVF;EAAA,EADF;AAsBD;;AAED,SAAST,SAAT,CAAmBU,KAAnB,EAAyC;EACvC,OAAO;IACLT,SAAS,EAAEvB,GAAI;AACnB;AACA,KAHS;IAILwB,YAAY,EAAExB,GAAI;AACtB;AACA,KANS;IAOL8B,YAAY,EAAE9B,GAAI;AACtB,qBAAqBgC,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACxC;EATS,CAAP;AAWD"},"metadata":{},"sourceType":"module"}