{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { variableAdapters } from '../adapters';\nimport { sharedReducer } from './sharedReducer';\nimport { initialVariablesState } from './types';\nexport const cleanVariables = createAction('templating/cleanVariables');\nexport const variablesReducer = (state = initialVariablesState, action) => {\n  var _action$payload, _action$payload2;\n\n  if (cleanVariables.match(action)) {\n    const globalVariables = Object.values(state).filter(v => v.global);\n\n    if (!globalVariables) {\n      return initialVariablesState;\n    }\n\n    const variables = globalVariables.reduce((allVariables, state) => {\n      allVariables[state.id] = state;\n      return allVariables;\n    }, {});\n    return variables;\n  }\n\n  if (action !== null && action !== void 0 && (_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.type && variableAdapters.getIfExists(action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.type)) {\n    // Now that we know we are dealing with a payload that is addressed for an adapted variable let's reduce state:\n    // Firstly call the sharedTemplatingReducer that handles all shared actions between variable types\n    // Secondly call the specific variable type's reducer\n    return variableAdapters.get(action.payload.type).reducer(sharedReducer(state, action), action);\n  }\n\n  return state;\n};","map":{"version":3,"names":["createAction","variableAdapters","sharedReducer","initialVariablesState","cleanVariables","variablesReducer","state","action","match","globalVariables","Object","values","filter","v","global","variables","reduce","allVariables","id","payload","type","getIfExists","get","reducer"],"sources":["/home/soula/grafana/public/app/features/variables/state/variablesReducer.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\n\nimport { variableAdapters } from '../adapters';\nimport { VariableModel } from '../types';\n\nimport { sharedReducer } from './sharedReducer';\nimport { initialVariablesState, VariablesState } from './types';\n\nexport const cleanVariables = createAction<undefined>('templating/cleanVariables');\n\nexport const variablesReducer = (state: VariablesState = initialVariablesState, action: AnyAction): VariablesState => {\n  if (cleanVariables.match(action)) {\n    const globalVariables = Object.values(state).filter((v) => v.global);\n    if (!globalVariables) {\n      return initialVariablesState;\n    }\n\n    const variables = globalVariables.reduce((allVariables, state) => {\n      allVariables[state.id] = state;\n      return allVariables;\n    }, {} as Record<string, VariableModel>);\n\n    return variables;\n  }\n\n  if (action?.payload?.type && variableAdapters.getIfExists(action?.payload?.type)) {\n    // Now that we know we are dealing with a payload that is addressed for an adapted variable let's reduce state:\n    // Firstly call the sharedTemplatingReducer that handles all shared actions between variable types\n    // Secondly call the specific variable type's reducer\n    return variableAdapters.get(action.payload.type).reducer(sharedReducer(state, action), action);\n  }\n\n  return state;\n};\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAGA,SAASC,gBAAT,QAAiC,aAAjC;AAGA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,qBAAT,QAAsD,SAAtD;AAEA,OAAO,MAAMC,cAAc,GAAGJ,YAAY,CAAY,2BAAZ,CAAnC;AAEP,OAAO,MAAMK,gBAAgB,GAAG,CAACC,KAAqB,GAAGH,qBAAzB,EAAgDI,MAAhD,KAAsF;EAAA;;EACpH,IAAIH,cAAc,CAACI,KAAf,CAAqBD,MAArB,CAAJ,EAAkC;IAChC,MAAME,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,EAAqBM,MAArB,CAA6BC,CAAD,IAAOA,CAAC,CAACC,MAArC,CAAxB;;IACA,IAAI,CAACL,eAAL,EAAsB;MACpB,OAAON,qBAAP;IACD;;IAED,MAAMY,SAAS,GAAGN,eAAe,CAACO,MAAhB,CAAuB,CAACC,YAAD,EAAeX,KAAf,KAAyB;MAChEW,YAAY,CAACX,KAAK,CAACY,EAAP,CAAZ,GAAyBZ,KAAzB;MACA,OAAOW,YAAP;IACD,CAHiB,EAGf,EAHe,CAAlB;IAKA,OAAOF,SAAP;EACD;;EAED,IAAIR,MAAM,SAAN,IAAAA,MAAM,WAAN,uBAAAA,MAAM,CAAEY,OAAR,4DAAiBC,IAAjB,IAAyBnB,gBAAgB,CAACoB,WAAjB,CAA6Bd,MAA7B,aAA6BA,MAA7B,2CAA6BA,MAAM,CAAEY,OAArC,qDAA6B,iBAAiBC,IAA9C,CAA7B,EAAkF;IAChF;IACA;IACA;IACA,OAAOnB,gBAAgB,CAACqB,GAAjB,CAAqBf,MAAM,CAACY,OAAP,CAAeC,IAApC,EAA0CG,OAA1C,CAAkDrB,aAAa,CAACI,KAAD,EAAQC,MAAR,CAA/D,EAAgFA,MAAhF,CAAP;EACD;;EAED,OAAOD,KAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}