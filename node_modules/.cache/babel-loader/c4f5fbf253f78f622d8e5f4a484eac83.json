{"ast":null,"code":"export let DashboardRoutes;\n\n(function (DashboardRoutes) {\n  DashboardRoutes[\"Home\"] = \"home-dashboard\";\n  DashboardRoutes[\"New\"] = \"new-dashboard\";\n  DashboardRoutes[\"Normal\"] = \"normal-dashboard\";\n  DashboardRoutes[\"Scripted\"] = \"scripted-dashboard\";\n  DashboardRoutes[\"Public\"] = \"public-dashboard\";\n})(DashboardRoutes || (DashboardRoutes = {}));\n\nexport let DashboardInitPhase;\n\n(function (DashboardInitPhase) {\n  DashboardInitPhase[\"NotStarted\"] = \"Not started\";\n  DashboardInitPhase[\"Fetching\"] = \"Fetching\";\n  DashboardInitPhase[\"Services\"] = \"Services\";\n  DashboardInitPhase[\"Failed\"] = \"Failed\";\n  DashboardInitPhase[\"Completed\"] = \"Completed\";\n})(DashboardInitPhase || (DashboardInitPhase = {}));\n\nexport let KioskMode;\n\n(function (KioskMode) {\n  KioskMode[\"Off\"] = \"off\";\n  KioskMode[\"TV\"] = \"tv\";\n  KioskMode[\"Full\"] = \"full\";\n})(KioskMode || (KioskMode = {}));","map":{"version":3,"names":["DashboardRoutes","DashboardInitPhase","KioskMode"],"sources":["/home/soula/grafana/public/app/types/dashboard.ts"],"sourcesContent":["import { DataQuery } from '@grafana/data';\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\nimport { VariableModel } from 'app/features/variables/types';\n\nimport { DashboardAcl } from './acl';\n\nexport interface DashboardDTO {\n  redirectUri?: string;\n  dashboard: DashboardDataDTO;\n  meta: DashboardMeta;\n}\n\nexport interface DashboardMeta {\n  canSave?: boolean;\n  canEdit?: boolean;\n  canDelete?: boolean;\n  canShare?: boolean;\n  canStar?: boolean;\n  canAdmin?: boolean;\n  url?: string;\n  folderId?: number;\n  folderUid?: string;\n  canMakeEditable?: boolean;\n  submenuEnabled?: boolean;\n  provisioned?: boolean;\n  provisionedExternalId?: string;\n  isStarred?: boolean;\n  showSettings?: boolean;\n  expires?: string;\n  isSnapshot?: boolean;\n  folderTitle?: string;\n  folderUrl?: string;\n  created?: string;\n  createdBy?: string;\n  updated?: string;\n  updatedBy?: string;\n  fromScript?: boolean;\n  fromFile?: boolean;\n  hasUnsavedFolderChange?: boolean;\n  annotationsPermissions?: AnnotationsPermissions;\n  publicDashboardAccessToken?: string;\n}\n\nexport interface AnnotationActions {\n  canAdd: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n}\n\nexport interface AnnotationsPermissions {\n  dashboard: AnnotationActions;\n  organization: AnnotationActions;\n}\n\nexport interface DashboardDataDTO {\n  title: string;\n  uid: string;\n  templating: {\n    list: VariableModel[];\n  };\n  panels?: any[];\n}\n\nexport enum DashboardRoutes {\n  Home = 'home-dashboard',\n  New = 'new-dashboard',\n  Normal = 'normal-dashboard',\n  Scripted = 'scripted-dashboard',\n  Public = 'public-dashboard',\n}\n\nexport enum DashboardInitPhase {\n  NotStarted = 'Not started',\n  Fetching = 'Fetching',\n  Services = 'Services',\n  Failed = 'Failed',\n  Completed = 'Completed',\n}\n\nexport interface DashboardInitError {\n  message: string;\n  error: any;\n}\n\nexport enum KioskMode {\n  Off = 'off',\n  TV = 'tv',\n  Full = 'full',\n}\n\nexport type GetMutableDashboardModelFn = () => DashboardModel | null;\n\nexport interface QueriesToUpdateOnDashboardLoad {\n  panelId: number;\n  queries: DataQuery[];\n}\n\nexport interface DashboardState {\n  getModel: GetMutableDashboardModelFn;\n  initPhase: DashboardInitPhase;\n  initError: DashboardInitError | null;\n  permissions: DashboardAcl[];\n}\n"],"mappings":"AA+DA,WAAYA,eAAZ;;WAAYA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;GAAAA,e,KAAAA,e;;AAQZ,WAAYC,kBAAZ;;WAAYA,kB;EAAAA,kB;EAAAA,kB;EAAAA,kB;EAAAA,kB;EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAaZ,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S"},"metadata":{},"sourceType":"module"}