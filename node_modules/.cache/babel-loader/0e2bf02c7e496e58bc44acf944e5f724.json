{"ast":null,"code":"const _excluded = [\"label\", \"active\", \"icon\", \"onChangeTab\", \"counter\", \"suffix\", \"className\", \"href\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { Icon } from '../Icon/Icon';\nimport { Counter } from './Counter';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Tab = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  var _Icon, _Counter;\n\n  let {\n    label,\n    active,\n    icon,\n    onChangeTab,\n    counter,\n    suffix: Suffix,\n    href\n  } = _ref,\n      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme2();\n  const tabsStyles = getTabStyles(theme);\n\n  const content = () => /*#__PURE__*/_jsxs(_Fragment, {\n    children: [icon && (_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: icon\n    }))), label, typeof counter === 'number' && (_Counter || (_Counter = /*#__PURE__*/_jsx(Counter, {\n      value: counter\n    }))), Suffix && /*#__PURE__*/_jsx(Suffix, {\n      className: tabsStyles.suffix\n    })]\n  });\n\n  const linkClass = cx(tabsStyles.link, active ? tabsStyles.activeStyle : tabsStyles.notActive);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: tabsStyles.item,\n    children: /*#__PURE__*/_jsx(\"a\", Object.assign({\n      href: href,\n      className: linkClass\n    }, otherProps, {\n      onClick: onChangeTab,\n      \"aria-label\": otherProps['aria-label'] || selectors.components.Tab.title(label),\n      role: \"tab\",\n      \"aria-selected\": active,\n      ref: ref,\n      children: content()\n    }))\n  });\n});\nTab.displayName = 'Tab';\nconst getTabStyles = stylesFactory(theme => {\n  return {\n    item: css`\n      list-style: none;\n      position: relative;\n      display: flex;\n    `,\n    link: css`\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(1.5, 2, 1)};\n      display: block;\n      height: 100%;\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:focus-visible {\n+        ${getFocusStyles(theme)}\n      }\n    `,\n    notActive: css`\n      a:hover,\n      &:hover,\n      &:focus {\n        color: ${theme.colors.text.primary};\n\n        &::before {\n          display: block;\n          content: ' ';\n          position: absolute;\n          left: 0;\n          right: 0;\n          height: 4px;\n          border-radius: 2px;\n          bottom: 0px;\n          background: ${theme.colors.action.hover};\n        }\n      }\n    `,\n    activeStyle: css`\n      label: activeTabStyle;\n      color: ${theme.colors.text.primary};\n      overflow: hidden;\n      font-weight: ${theme.typography.fontWeightMedium};\n\n      a {\n        color: ${theme.colors.text.primary};\n      }\n\n      &::before {\n        display: block;\n        content: ' ';\n        position: absolute;\n        left: 0;\n        right: 0;\n        height: 4px;\n        border-radius: 2px;\n        bottom: 0px;\n        background-image: ${theme.colors.gradients.brandHorizontal} !important;\n      }\n    `,\n    suffix: css`\n      margin-left: ${theme.spacing(1)};\n    `\n  };\n});","map":{"version":3,"names":["css","cx","React","selectors","stylesFactory","useTheme2","getFocusStyles","Icon","Counter","Tab","forwardRef","ref","label","active","icon","onChangeTab","counter","suffix","Suffix","href","otherProps","theme","tabsStyles","getTabStyles","content","linkClass","link","activeStyle","notActive","item","components","title","displayName","colors","text","secondary","spacing","primary","action","hover","typography","fontWeightMedium","gradients","brandHorizontal"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Tabs/Tab.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { Counter } from './Counter';\n\nexport interface TabProps extends HTMLProps<HTMLAnchorElement> {\n  label: string;\n  active?: boolean;\n  /** When provided, it is possible to use the tab as a hyperlink. Use in cases where the tabs update location. */\n  href?: string;\n  icon?: IconName;\n  onChangeTab?: (event?: React.MouseEvent<HTMLAnchorElement>) => void;\n  /** A number rendered next to the text. Usually used to display the number of items in a tab's view. */\n  counter?: number | null;\n  /** Extra content, displayed after the tab label and counter */\n  suffix?: NavModelItem['tabSuffix'];\n}\n\nexport const Tab = React.forwardRef<HTMLAnchorElement, TabProps>(\n  ({ label, active, icon, onChangeTab, counter, suffix: Suffix, className, href, ...otherProps }, ref) => {\n    const theme = useTheme2();\n    const tabsStyles = getTabStyles(theme);\n    const content = () => (\n      <>\n        {icon && <Icon name={icon} />}\n        {label}\n        {typeof counter === 'number' && <Counter value={counter} />}\n        {Suffix && <Suffix className={tabsStyles.suffix} />}\n      </>\n    );\n\n    const linkClass = cx(tabsStyles.link, active ? tabsStyles.activeStyle : tabsStyles.notActive);\n\n    return (\n      <div className={tabsStyles.item}>\n        <a\n          href={href}\n          className={linkClass}\n          {...otherProps}\n          onClick={onChangeTab}\n          aria-label={otherProps['aria-label'] || selectors.components.Tab.title(label)}\n          role=\"tab\"\n          aria-selected={active}\n          ref={ref}\n        >\n          {content()}\n        </a>\n      </div>\n    );\n  }\n);\n\nTab.displayName = 'Tab';\n\nconst getTabStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    item: css`\n      list-style: none;\n      position: relative;\n      display: flex;\n    `,\n    link: css`\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(1.5, 2, 1)};\n      display: block;\n      height: 100%;\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:focus-visible {\n+        ${getFocusStyles(theme)}\n      }\n    `,\n    notActive: css`\n      a:hover,\n      &:hover,\n      &:focus {\n        color: ${theme.colors.text.primary};\n\n        &::before {\n          display: block;\n          content: ' ';\n          position: absolute;\n          left: 0;\n          right: 0;\n          height: 4px;\n          border-radius: 2px;\n          bottom: 0px;\n          background: ${theme.colors.action.hover};\n        }\n      }\n    `,\n    activeStyle: css`\n      label: activeTabStyle;\n      color: ${theme.colors.text.primary};\n      overflow: hidden;\n      font-weight: ${theme.typography.fontWeightMedium};\n\n      a {\n        color: ${theme.colors.text.primary};\n      }\n\n      &::before {\n        display: block;\n        content: ' ';\n        position: absolute;\n        left: 0;\n        right: 0;\n        height: 4px;\n        border-radius: 2px;\n        bottom: 0px;\n        background-image: ${theme.colors.gradients.brandHorizontal} !important;\n      }\n    `,\n    suffix: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}