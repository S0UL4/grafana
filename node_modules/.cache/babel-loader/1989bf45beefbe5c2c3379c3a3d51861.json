{"ast":null,"code":"var _h, _tr, _td, _td2, _td3;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { dateTimeFormat } from '@grafana/data';\nimport { Button, LinkButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst format = 'dddd YYYY-MM-DD HH:mm zz';\nconst debugLDAPMappingBaseURL = '/admin/ldap';\nexport class UserLdapSyncInfo extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onUserSync\", () => {\n      this.props.onUserSync();\n    });\n  }\n\n  render() {\n    const {\n      ldapSyncInfo,\n      user\n    } = this.props;\n    const nextSyncSuccessful = ldapSyncInfo && ldapSyncInfo.nextSync;\n    const nextSyncTime = nextSyncSuccessful ? dateTimeFormat(ldapSyncInfo.nextSync, {\n      format\n    }) : '';\n    const debugLDAPMappingURL = `${debugLDAPMappingBaseURL}?user=${user && user.login}`;\n    const canReadLDAPUser = contextSrv.hasPermission(AccessControlAction.LDAPUsersRead);\n    const canSyncLDAPUser = contextSrv.hasPermission(AccessControlAction.LDAPUsersSync);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-heading\",\n        children: \"LDAP Synchronisation\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsx(\"table\", {\n            className: \"filter-table form-inline\",\n            children: /*#__PURE__*/_jsxs(\"tbody\", {\n              children: [_tr || (_tr = /*#__PURE__*/_jsxs(\"tr\", {\n                children: [/*#__PURE__*/_jsx(\"td\", {\n                  children: \"External sync\"\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: \"User synced via LDAP. Some changes must be done in LDAP or mappings.\"\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    className: \"label label-tag\",\n                    children: \"LDAP\"\n                  })\n                })]\n              })), /*#__PURE__*/_jsx(\"tr\", {\n                children: ldapSyncInfo.enabled ? /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [_td || (_td = /*#__PURE__*/_jsx(\"td\", {\n                    children: \"Next scheduled synchronization\"\n                  })), /*#__PURE__*/_jsx(\"td\", {\n                    colSpan: 2,\n                    children: nextSyncTime\n                  })]\n                }) : /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [_td2 || (_td2 = /*#__PURE__*/_jsx(\"td\", {\n                    children: \"Next scheduled synchronization\"\n                  })), _td3 || (_td3 = /*#__PURE__*/_jsx(\"td\", {\n                    colSpan: 2,\n                    children: \"Not enabled\"\n                  }))]\n                })\n              })]\n            })\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"gf-form-button-row\",\n          children: [canSyncLDAPUser && /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: this.onUserSync,\n            children: \"Sync user\"\n          }), canReadLDAPUser && /*#__PURE__*/_jsx(LinkButton, {\n            variant: \"secondary\",\n            href: debugLDAPMappingURL,\n            children: \"Debug LDAP Mapping\"\n          })]\n        })]\n      })]\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","dateTimeFormat","Button","LinkButton","contextSrv","AccessControlAction","format","debugLDAPMappingBaseURL","UserLdapSyncInfo","props","onUserSync","render","ldapSyncInfo","user","nextSyncSuccessful","nextSync","nextSyncTime","debugLDAPMappingURL","login","canReadLDAPUser","hasPermission","LDAPUsersRead","canSyncLDAPUser","LDAPUsersSync","enabled"],"sources":["/home/soula/grafana/public/app/features/admin/UserLdapSyncInfo.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { dateTimeFormat } from '@grafana/data';\nimport { Button, LinkButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, SyncInfo, UserDTO } from 'app/types';\n\ninterface Props {\n  ldapSyncInfo: SyncInfo;\n  user: UserDTO;\n  onUserSync: () => void;\n}\n\ninterface State {}\n\nconst format = 'dddd YYYY-MM-DD HH:mm zz';\nconst debugLDAPMappingBaseURL = '/admin/ldap';\n\nexport class UserLdapSyncInfo extends PureComponent<Props, State> {\n  onUserSync = () => {\n    this.props.onUserSync();\n  };\n\n  render() {\n    const { ldapSyncInfo, user } = this.props;\n    const nextSyncSuccessful = ldapSyncInfo && ldapSyncInfo.nextSync;\n    const nextSyncTime = nextSyncSuccessful ? dateTimeFormat(ldapSyncInfo.nextSync, { format }) : '';\n    const debugLDAPMappingURL = `${debugLDAPMappingBaseURL}?user=${user && user.login}`;\n    const canReadLDAPUser = contextSrv.hasPermission(AccessControlAction.LDAPUsersRead);\n    const canSyncLDAPUser = contextSrv.hasPermission(AccessControlAction.LDAPUsersSync);\n\n    return (\n      <>\n        <h3 className=\"page-heading\">LDAP Synchronisation</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <tbody>\n                <tr>\n                  <td>External sync</td>\n                  <td>User synced via LDAP. Some changes must be done in LDAP or mappings.</td>\n                  <td>\n                    <span className=\"label label-tag\">LDAP</span>\n                  </td>\n                </tr>\n                <tr>\n                  {ldapSyncInfo.enabled ? (\n                    <>\n                      <td>Next scheduled synchronization</td>\n                      <td colSpan={2}>{nextSyncTime}</td>\n                    </>\n                  ) : (\n                    <>\n                      <td>Next scheduled synchronization</td>\n                      <td colSpan={2}>Not enabled</td>\n                    </>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"gf-form-button-row\">\n            {canSyncLDAPUser && (\n              <Button variant=\"secondary\" onClick={this.onUserSync}>\n                Sync user\n              </Button>\n            )}\n            {canReadLDAPUser && (\n              <LinkButton variant=\"secondary\" href={debugLDAPMappingURL}>\n                Debug LDAP Mapping\n              </LinkButton>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,mBAAT,QAAuD,WAAvD;;;;AAUA,MAAMC,MAAM,GAAG,0BAAf;AACA,MAAMC,uBAAuB,GAAG,aAAhC;AAEA,OAAO,MAAMC,gBAAN,SAA+BR,aAA/B,CAA2D;EAAA;IAAA;;IAAA,oCACnD,MAAM;MACjB,KAAKS,KAAL,CAAWC,UAAX;IACD,CAH+D;EAAA;;EAKhEC,MAAM,GAAG;IACP,MAAM;MAAEC,YAAF;MAAgBC;IAAhB,IAAyB,KAAKJ,KAApC;IACA,MAAMK,kBAAkB,GAAGF,YAAY,IAAIA,YAAY,CAACG,QAAxD;IACA,MAAMC,YAAY,GAAGF,kBAAkB,GAAGb,cAAc,CAACW,YAAY,CAACG,QAAd,EAAwB;MAAET;IAAF,CAAxB,CAAjB,GAAuD,EAA9F;IACA,MAAMW,mBAAmB,GAAI,GAAEV,uBAAwB,SAAQM,IAAI,IAAIA,IAAI,CAACK,KAAM,EAAlF;IACA,MAAMC,eAAe,GAAGf,UAAU,CAACgB,aAAX,CAAyBf,mBAAmB,CAACgB,aAA7C,CAAxB;IACA,MAAMC,eAAe,GAAGlB,UAAU,CAACgB,aAAX,CAAyBf,mBAAmB,CAACkB,aAA7C,CAAxB;IAEA,oBACE;MAAA,oCACE;QAAI,SAAS,EAAC,cAAd;QAAA;MAAA,EADF,gBAEE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UAAK,SAAS,EAAC,SAAf;UAAA,uBACE;YAAO,SAAS,EAAC,0BAAjB;YAAA,uBACE;cAAA,sCACE;gBAAA,wBACE;kBAAA;gBAAA,EADF,eAEE;kBAAA;gBAAA,EAFF,eAGE;kBAAA,uBACE;oBAAM,SAAS,EAAC,iBAAhB;oBAAA;kBAAA;gBADF,EAHF;cAAA,EADF,gBAQE;gBAAA,UACGX,YAAY,CAACY,OAAb,gBACC;kBAAA,sCACE;oBAAA;kBAAA,EADF,gBAEE;oBAAI,OAAO,EAAE,CAAb;oBAAA,UAAiBR;kBAAjB,EAFF;gBAAA,EADD,gBAMC;kBAAA,wCACE;oBAAA;kBAAA,EADF,gCAEE;oBAAI,OAAO,EAAE,CAAb;oBAAA;kBAAA,EAFF;gBAAA;cAPJ,EARF;YAAA;UADF;QADF,EADF,eA2BE;UAAK,SAAS,EAAC,oBAAf;UAAA,WACGM,eAAe,iBACd,KAAC,MAAD;YAAQ,OAAO,EAAC,WAAhB;YAA4B,OAAO,EAAE,KAAKZ,UAA1C;YAAA;UAAA,EAFJ,EAMGS,eAAe,iBACd,KAAC,UAAD;YAAY,OAAO,EAAC,WAApB;YAAgC,IAAI,EAAEF,mBAAtC;YAAA;UAAA,EAPJ;QAAA,EA3BF;MAAA,EAFF;IAAA,EADF;EA6CD;;AA1D+D"},"metadata":{},"sourceType":"module"}