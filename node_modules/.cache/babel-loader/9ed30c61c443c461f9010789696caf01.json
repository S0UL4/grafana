{"ast":null,"code":"export function withFocusedPanel(fn) {\n  return () => {\n    const elements = document.querySelectorAll(':hover');\n\n    for (let i = elements.length - 1; i > 0; i--) {\n      var _element$dataset;\n\n      const element = elements[i];\n\n      if ((_element$dataset = element.dataset) !== null && _element$dataset !== void 0 && _element$dataset.panelid) {\n        var _element$dataset2;\n\n        fn(parseInt((_element$dataset2 = element.dataset) === null || _element$dataset2 === void 0 ? void 0 : _element$dataset2.panelid, 10));\n      }\n    }\n  };\n}","map":{"version":3,"names":["withFocusedPanel","fn","elements","document","querySelectorAll","i","length","element","dataset","panelid","parseInt"],"sources":["/home/soula/grafana/public/app/core/services/withFocusedPanelId.ts"],"sourcesContent":["export function withFocusedPanel(fn: (panelId: number) => void) {\n  return () => {\n    const elements = document.querySelectorAll(':hover');\n\n    for (let i = elements.length - 1; i > 0; i--) {\n      const element = elements[i] as unknown as HTMLElement;\n      if (element.dataset?.panelid) {\n        fn(parseInt(element.dataset?.panelid, 10));\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,EAA1B,EAAyD;EAC9D,OAAO,MAAM;IACX,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAjB;;IAEA,KAAK,IAAIC,CAAC,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,GAAG,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;MAAA;;MAC5C,MAAME,OAAO,GAAGL,QAAQ,CAACG,CAAD,CAAxB;;MACA,wBAAIE,OAAO,CAACC,OAAZ,6CAAI,iBAAiBC,OAArB,EAA8B;QAAA;;QAC5BR,EAAE,CAACS,QAAQ,sBAACH,OAAO,CAACC,OAAT,sDAAC,kBAAiBC,OAAlB,EAA2B,EAA3B,CAAT,CAAF;MACD;IACF;EACF,CATD;AAUD"},"metadata":{},"sourceType":"module"}