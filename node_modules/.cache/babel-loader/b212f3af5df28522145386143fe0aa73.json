{"ast":null,"code":"import { concat, every, find, groupBy, head, map, partition } from 'lodash';\nexport function dedupAnnotations(annotations) {\n  let dedup = []; // Split events by annotationId property existence\n\n  const events = partition(annotations, 'id');\n  const eventsById = groupBy(events[0], 'id');\n  dedup = map(eventsById, eventGroup => {\n    if (eventGroup.length > 1 && !every(eventGroup, isPanelAlert)) {\n      // Get first non-panel alert\n      return find(eventGroup, event => {\n        return event.eventType !== 'panel-alert';\n      });\n    } else {\n      return head(eventGroup);\n    }\n  });\n  dedup = concat(dedup, events[1]);\n  return dedup;\n}\n\nfunction isPanelAlert(event) {\n  return event.eventType === 'panel-alert';\n}","map":{"version":3,"names":["concat","every","find","groupBy","head","map","partition","dedupAnnotations","annotations","dedup","events","eventsById","eventGroup","length","isPanelAlert","event","eventType"],"sources":["/home/soula/grafana/public/app/features/annotations/events_processing.ts"],"sourcesContent":["import { concat, every, find, groupBy, head, map, partition } from 'lodash';\n\nexport function dedupAnnotations(annotations: any) {\n  let dedup = [];\n\n  // Split events by annotationId property existence\n  const events = partition(annotations, 'id');\n\n  const eventsById = groupBy(events[0], 'id');\n  dedup = map(eventsById, (eventGroup) => {\n    if (eventGroup.length > 1 && !every(eventGroup, isPanelAlert)) {\n      // Get first non-panel alert\n      return find(eventGroup, (event) => {\n        return event.eventType !== 'panel-alert';\n      });\n    } else {\n      return head(eventGroup);\n    }\n  });\n\n  dedup = concat(dedup, events[1]);\n  return dedup;\n}\n\nfunction isPanelAlert(event: { eventType: string }) {\n  return event.eventType === 'panel-alert';\n}\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,GAA7C,EAAkDC,SAAlD,QAAmE,QAAnE;AAEA,OAAO,SAASC,gBAAT,CAA0BC,WAA1B,EAA4C;EACjD,IAAIC,KAAK,GAAG,EAAZ,CADiD,CAGjD;;EACA,MAAMC,MAAM,GAAGJ,SAAS,CAACE,WAAD,EAAc,IAAd,CAAxB;EAEA,MAAMG,UAAU,GAAGR,OAAO,CAACO,MAAM,CAAC,CAAD,CAAP,EAAY,IAAZ,CAA1B;EACAD,KAAK,GAAGJ,GAAG,CAACM,UAAD,EAAcC,UAAD,IAAgB;IACtC,IAAIA,UAAU,CAACC,MAAX,GAAoB,CAApB,IAAyB,CAACZ,KAAK,CAACW,UAAD,EAAaE,YAAb,CAAnC,EAA+D;MAC7D;MACA,OAAOZ,IAAI,CAACU,UAAD,EAAcG,KAAD,IAAW;QACjC,OAAOA,KAAK,CAACC,SAAN,KAAoB,aAA3B;MACD,CAFU,CAAX;IAGD,CALD,MAKO;MACL,OAAOZ,IAAI,CAACQ,UAAD,CAAX;IACD;EACF,CATU,CAAX;EAWAH,KAAK,GAAGT,MAAM,CAACS,KAAD,EAAQC,MAAM,CAAC,CAAD,CAAd,CAAd;EACA,OAAOD,KAAP;AACD;;AAED,SAASK,YAAT,CAAsBC,KAAtB,EAAoD;EAClD,OAAOA,KAAK,CAACC,SAAN,KAAoB,aAA3B;AACD"},"metadata":{},"sourceType":"module"}