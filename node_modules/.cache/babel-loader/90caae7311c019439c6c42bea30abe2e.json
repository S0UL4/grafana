{"ast":null,"code":"import { getBackendSrv } from '@grafana/runtime';\nimport { notifyApp } from '../../core/actions';\nimport { createErrorNotification, createSuccessNotification } from '../../core/copy/appNotification';\nimport { dispatch } from '../../store/store';\nexport async function createPlaylist(playlist) {\n  await withErrorHandling(() => getBackendSrv().post('/api/playlists', playlist));\n}\nexport async function updatePlaylist(uid, playlist) {\n  await withErrorHandling(() => getBackendSrv().put(`/api/playlists/${uid}`, playlist));\n}\nexport async function deletePlaylist(uid) {\n  await withErrorHandling(() => getBackendSrv().delete(`/api/playlists/${uid}`), 'Playlist deleted');\n}\nexport async function getPlaylist(uid) {\n  const result = await getBackendSrv().get(`/api/playlists/${uid}`);\n  return result;\n}\nexport async function getAllPlaylist(query) {\n  const result = await getBackendSrv().get('/api/playlists/', {\n    query\n  });\n  return result;\n}\n\nasync function withErrorHandling(apiCall, message = 'Playlist saved') {\n  try {\n    await apiCall();\n    dispatch(notifyApp(createSuccessNotification(message)));\n  } catch (e) {\n    if (e instanceof Error) {\n      dispatch(notifyApp(createErrorNotification('Unable to save playlist', e)));\n    }\n  }\n}","map":{"version":3,"names":["getBackendSrv","notifyApp","createErrorNotification","createSuccessNotification","dispatch","createPlaylist","playlist","withErrorHandling","post","updatePlaylist","uid","put","deletePlaylist","delete","getPlaylist","result","get","getAllPlaylist","query","apiCall","message","e","Error"],"sources":["/home/soula/grafana/public/app/features/playlist/api.ts"],"sourcesContent":["import { getBackendSrv } from '@grafana/runtime';\n\nimport { notifyApp } from '../../core/actions';\nimport { createErrorNotification, createSuccessNotification } from '../../core/copy/appNotification';\nimport { dispatch } from '../../store/store';\n\nimport { Playlist, PlaylistDTO } from './types';\n\nexport async function createPlaylist(playlist: Playlist) {\n  await withErrorHandling(() => getBackendSrv().post('/api/playlists', playlist));\n}\n\nexport async function updatePlaylist(uid: string, playlist: Playlist) {\n  await withErrorHandling(() => getBackendSrv().put(`/api/playlists/${uid}`, playlist));\n}\n\nexport async function deletePlaylist(uid: string) {\n  await withErrorHandling(() => getBackendSrv().delete(`/api/playlists/${uid}`), 'Playlist deleted');\n}\n\nexport async function getPlaylist(uid: string): Promise<Playlist> {\n  const result: Playlist = await getBackendSrv().get(`/api/playlists/${uid}`);\n  return result;\n}\n\nexport async function getAllPlaylist(query: string): Promise<PlaylistDTO[]> {\n  const result: PlaylistDTO[] = await getBackendSrv().get('/api/playlists/', { query });\n  return result;\n}\n\nasync function withErrorHandling(apiCall: () => Promise<void>, message = 'Playlist saved') {\n  try {\n    await apiCall();\n    dispatch(notifyApp(createSuccessNotification(message)));\n  } catch (e) {\n    if (e instanceof Error) {\n      dispatch(notifyApp(createErrorNotification('Unable to save playlist', e)));\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,uBAAT,EAAkCC,yBAAlC,QAAmE,iCAAnE;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAIA,OAAO,eAAeC,cAAf,CAA8BC,QAA9B,EAAkD;EACvD,MAAMC,iBAAiB,CAAC,MAAMP,aAAa,GAAGQ,IAAhB,CAAqB,gBAArB,EAAuCF,QAAvC,CAAP,CAAvB;AACD;AAED,OAAO,eAAeG,cAAf,CAA8BC,GAA9B,EAA2CJ,QAA3C,EAA+D;EACpE,MAAMC,iBAAiB,CAAC,MAAMP,aAAa,GAAGW,GAAhB,CAAqB,kBAAiBD,GAAI,EAA1C,EAA6CJ,QAA7C,CAAP,CAAvB;AACD;AAED,OAAO,eAAeM,cAAf,CAA8BF,GAA9B,EAA2C;EAChD,MAAMH,iBAAiB,CAAC,MAAMP,aAAa,GAAGa,MAAhB,CAAwB,kBAAiBH,GAAI,EAA7C,CAAP,EAAwD,kBAAxD,CAAvB;AACD;AAED,OAAO,eAAeI,WAAf,CAA2BJ,GAA3B,EAA2D;EAChE,MAAMK,MAAgB,GAAG,MAAMf,aAAa,GAAGgB,GAAhB,CAAqB,kBAAiBN,GAAI,EAA1C,CAA/B;EACA,OAAOK,MAAP;AACD;AAED,OAAO,eAAeE,cAAf,CAA8BC,KAA9B,EAAqE;EAC1E,MAAMH,MAAqB,GAAG,MAAMf,aAAa,GAAGgB,GAAhB,CAAoB,iBAApB,EAAuC;IAAEE;EAAF,CAAvC,CAApC;EACA,OAAOH,MAAP;AACD;;AAED,eAAeR,iBAAf,CAAiCY,OAAjC,EAA+DC,OAAO,GAAG,gBAAzE,EAA2F;EACzF,IAAI;IACF,MAAMD,OAAO,EAAb;IACAf,QAAQ,CAACH,SAAS,CAACE,yBAAyB,CAACiB,OAAD,CAA1B,CAAV,CAAR;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACV,IAAIA,CAAC,YAAYC,KAAjB,EAAwB;MACtBlB,QAAQ,CAACH,SAAS,CAACC,uBAAuB,CAAC,yBAAD,EAA4BmB,CAA5B,CAAxB,CAAV,CAAR;IACD;EACF;AACF"},"metadata":{},"sourceType":"module"}