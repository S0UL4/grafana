{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Counter, useStyles2 } from '@grafana/ui';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { CollapseToggle } from 'app/features/alerting/unified/components/CollapseToggle';\nimport { PANEL_EDITOR_UI_STATE_STORAGE_KEY } from './state/reducers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst CATEGORY_PARAM_NAME = 'showCategory';\nexport const OptionsPaneCategory = /*#__PURE__*/React.memo(({\n  id,\n  title,\n  children,\n  forceOpen,\n  isOpenDefault,\n  renderTitle,\n  className,\n  itemsCount,\n  isNested = false\n}) => {\n  var _savedState$isExpande, _span;\n\n  const initialIsExpanded = isOpenDefault !== false;\n  const [savedState, setSavedState] = useLocalStorage(getOptionGroupStorageKey(id), {\n    isExpanded: initialIsExpanded\n  });\n  const styles = useStyles2(getStyles);\n  const [queryParams, updateQueryParams] = useQueryParams();\n  const [isExpanded, setIsExpanded] = useState((_savedState$isExpande = savedState === null || savedState === void 0 ? void 0 : savedState.isExpanded) !== null && _savedState$isExpande !== void 0 ? _savedState$isExpande : initialIsExpanded);\n  const manualClickTime = useRef(0);\n  const ref = useRef(null);\n  const isOpenFromUrl = queryParams[CATEGORY_PARAM_NAME] === id;\n  useEffect(() => {\n    if (manualClickTime.current) {\n      // ignore changes since the click handled the expected behavior\n      if (Date.now() - manualClickTime.current < 200) {\n        return;\n      }\n    }\n\n    if (isOpenFromUrl || forceOpen) {\n      if (!isExpanded) {\n        setIsExpanded(true);\n      }\n\n      if (isOpenFromUrl) {\n        var _ref$current;\n\n        (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView();\n      }\n    }\n  }, [forceOpen, isExpanded, isOpenFromUrl]);\n  const onToggle = useCallback(() => {\n    manualClickTime.current = Date.now();\n    updateQueryParams({\n      [CATEGORY_PARAM_NAME]: isExpanded ? undefined : id\n    });\n    setSavedState({\n      isExpanded: !isExpanded\n    });\n    setIsExpanded(!isExpanded);\n  }, [setSavedState, setIsExpanded, updateQueryParams, isExpanded, id]);\n\n  if (!renderTitle) {\n    renderTitle = function defaultTitle(isExpanded) {\n      if (isExpanded || itemsCount === undefined || itemsCount === 0) {\n        return title;\n      }\n\n      return _span || (_span = /*#__PURE__*/_jsxs(\"span\", {\n        children: [title, \" \", /*#__PURE__*/_jsx(Counter, {\n          value: itemsCount\n        })]\n      }));\n    };\n  }\n\n  const boxStyles = cx({\n    [styles.box]: true,\n    [styles.boxNestedExpanded]: isNested && isExpanded\n  }, className, 'options-group');\n  const headerStyles = cx(styles.header, {\n    [styles.headerExpanded]: isExpanded,\n    [styles.headerNested]: isNested\n  });\n  const bodyStyles = cx(styles.body, {\n    [styles.bodyNested]: isNested\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: boxStyles,\n    \"data-testid\": \"options-category\",\n    \"aria-label\": selectors.components.OptionsGroup.group(id),\n    ref: ref,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: headerStyles,\n      onClick: onToggle,\n      \"aria-label\": selectors.components.OptionsGroup.toggle(id),\n      children: [/*#__PURE__*/_jsx(CollapseToggle, {\n        isCollapsed: !isExpanded,\n        idControlled: id,\n        onToggle: onToggle\n      }), /*#__PURE__*/_jsx(\"h6\", {\n        id: `button-${id}`,\n        className: styles.title,\n        children: renderTitle(isExpanded)\n      })]\n    }), isExpanded && /*#__PURE__*/_jsx(\"div\", {\n      className: bodyStyles,\n      id: id,\n      \"aria-labelledby\": `button-${id}`,\n      children: children\n    })]\n  });\n});\nOptionsPaneCategory.displayName = 'OptionsPaneCategory';\n\nconst getStyles = theme => {\n  return {\n    box: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n    `,\n    boxNestedExpanded: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    title: css`\n      flex-grow: 1;\n      overflow: hidden;\n      line-height: 1.5;\n      font-size: 1rem;\n      font-weight: ${theme.typography.fontWeightMedium};\n      margin: 0;\n    `,\n    header: css`\n      display: flex;\n      cursor: pointer;\n      align-items: baseline;\n      padding: ${theme.spacing(0.5)};\n      color: ${theme.colors.text.primary};\n      font-weight: ${theme.typography.fontWeightMedium};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.primary, 0.03)};\n      }\n    `,\n    headerExpanded: css`\n      color: ${theme.colors.text.primary};\n    `,\n    headerNested: css`\n      padding: ${theme.spacing(0.5, 0, 0.5, 0)};\n    `,\n    body: css`\n      padding: ${theme.spacing(1, 2, 1, 4)};\n    `,\n    bodyNested: css`\n      position: relative;\n      padding-right: 0;\n      &:before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 8px;\n        width: 1px;\n        height: 100%;\n        background: ${theme.colors.border.weak};\n      }\n    `\n  };\n};\n\nconst getOptionGroupStorageKey = id => `${PANEL_EDITOR_UI_STATE_STORAGE_KEY}.optionGroup[${id}]`;","map":{"version":3,"names":["css","cx","React","useCallback","useEffect","useState","useRef","useLocalStorage","selectors","Counter","useStyles2","useQueryParams","CollapseToggle","PANEL_EDITOR_UI_STATE_STORAGE_KEY","CATEGORY_PARAM_NAME","OptionsPaneCategory","memo","id","title","children","forceOpen","isOpenDefault","renderTitle","className","itemsCount","isNested","initialIsExpanded","savedState","setSavedState","getOptionGroupStorageKey","isExpanded","styles","getStyles","queryParams","updateQueryParams","setIsExpanded","manualClickTime","ref","isOpenFromUrl","current","Date","now","scrollIntoView","onToggle","undefined","defaultTitle","boxStyles","box","boxNestedExpanded","headerStyles","header","headerExpanded","headerNested","bodyStyles","body","bodyNested","components","OptionsGroup","group","toggle","displayName","theme","colors","border","weak","spacing","typography","fontWeightMedium","text","primary","emphasize","background"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/OptionsPaneCategory.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, ReactNode, useCallback, useEffect, useState, useRef } from 'react';\nimport { useLocalStorage } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Counter, useStyles2 } from '@grafana/ui';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { CollapseToggle } from 'app/features/alerting/unified/components/CollapseToggle';\n\nimport { PANEL_EDITOR_UI_STATE_STORAGE_KEY } from './state/reducers';\n\nexport interface OptionsPaneCategoryProps {\n  id: string;\n  title?: string;\n  renderTitle?: (isExpanded: boolean) => React.ReactNode;\n  isOpenDefault?: boolean;\n  itemsCount?: number;\n  forceOpen?: number;\n  className?: string;\n  isNested?: boolean;\n  children: ReactNode;\n}\n\nconst CATEGORY_PARAM_NAME = 'showCategory';\n\nexport const OptionsPaneCategory: FC<OptionsPaneCategoryProps> = React.memo(\n  ({ id, title, children, forceOpen, isOpenDefault, renderTitle, className, itemsCount, isNested = false }) => {\n    const initialIsExpanded = isOpenDefault !== false;\n    const [savedState, setSavedState] = useLocalStorage(getOptionGroupStorageKey(id), {\n      isExpanded: initialIsExpanded,\n    });\n\n    const styles = useStyles2(getStyles);\n    const [queryParams, updateQueryParams] = useQueryParams();\n    const [isExpanded, setIsExpanded] = useState(savedState?.isExpanded ?? initialIsExpanded);\n    const manualClickTime = useRef(0);\n    const ref = useRef<HTMLDivElement>(null);\n    const isOpenFromUrl = queryParams[CATEGORY_PARAM_NAME] === id;\n\n    useEffect(() => {\n      if (manualClickTime.current) {\n        // ignore changes since the click handled the expected behavior\n        if (Date.now() - manualClickTime.current < 200) {\n          return;\n        }\n      }\n      if (isOpenFromUrl || forceOpen) {\n        if (!isExpanded) {\n          setIsExpanded(true);\n        }\n        if (isOpenFromUrl) {\n          ref.current?.scrollIntoView();\n        }\n      }\n    }, [forceOpen, isExpanded, isOpenFromUrl]);\n\n    const onToggle = useCallback(() => {\n      manualClickTime.current = Date.now();\n      updateQueryParams({\n        [CATEGORY_PARAM_NAME]: isExpanded ? undefined : id,\n      });\n      setSavedState({ isExpanded: !isExpanded });\n      setIsExpanded(!isExpanded);\n    }, [setSavedState, setIsExpanded, updateQueryParams, isExpanded, id]);\n\n    if (!renderTitle) {\n      renderTitle = function defaultTitle(isExpanded: boolean) {\n        if (isExpanded || itemsCount === undefined || itemsCount === 0) {\n          return title;\n        }\n\n        return (\n          <span>\n            {title} <Counter value={itemsCount} />\n          </span>\n        );\n      };\n    }\n\n    const boxStyles = cx(\n      {\n        [styles.box]: true,\n        [styles.boxNestedExpanded]: isNested && isExpanded,\n      },\n      className,\n      'options-group'\n    );\n\n    const headerStyles = cx(styles.header, {\n      [styles.headerExpanded]: isExpanded,\n      [styles.headerNested]: isNested,\n    });\n\n    const bodyStyles = cx(styles.body, {\n      [styles.bodyNested]: isNested,\n    });\n\n    return (\n      <div\n        className={boxStyles}\n        data-testid=\"options-category\"\n        aria-label={selectors.components.OptionsGroup.group(id)}\n        ref={ref}\n      >\n        <div className={headerStyles} onClick={onToggle} aria-label={selectors.components.OptionsGroup.toggle(id)}>\n          <CollapseToggle isCollapsed={!isExpanded} idControlled={id} onToggle={onToggle} />\n          <h6 id={`button-${id}`} className={styles.title}>\n            {renderTitle(isExpanded)}\n          </h6>\n        </div>\n        {isExpanded && (\n          <div className={bodyStyles} id={id} aria-labelledby={`button-${id}`}>\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nOptionsPaneCategory.displayName = 'OptionsPaneCategory';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    box: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n    `,\n    boxNestedExpanded: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    title: css`\n      flex-grow: 1;\n      overflow: hidden;\n      line-height: 1.5;\n      font-size: 1rem;\n      font-weight: ${theme.typography.fontWeightMedium};\n      margin: 0;\n    `,\n    header: css`\n      display: flex;\n      cursor: pointer;\n      align-items: baseline;\n      padding: ${theme.spacing(0.5)};\n      color: ${theme.colors.text.primary};\n      font-weight: ${theme.typography.fontWeightMedium};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.primary, 0.03)};\n      }\n    `,\n    headerExpanded: css`\n      color: ${theme.colors.text.primary};\n    `,\n    headerNested: css`\n      padding: ${theme.spacing(0.5, 0, 0.5, 0)};\n    `,\n    body: css`\n      padding: ${theme.spacing(1, 2, 1, 4)};\n    `,\n    bodyNested: css`\n      position: relative;\n      padding-right: 0;\n      &:before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 8px;\n        width: 1px;\n        height: 100%;\n        background: ${theme.colors.border.weak};\n      }\n    `,\n  };\n};\n\nconst getOptionGroupStorageKey = (id: string): string => `${PANEL_EDITOR_UI_STATE_STORAGE_KEY}.optionGroup[${id}]`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}