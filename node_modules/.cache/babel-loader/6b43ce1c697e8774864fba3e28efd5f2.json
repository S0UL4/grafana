{"ast":null,"code":"import { defaultPipelineVariable, generatePipelineVariableName } from './SettingsEditor/BucketScriptSettingsEditor/utils';\nimport { isMetricAggregationWithField, isPipelineAggregationWithMultipleBucketPaths } from './aggregations';\nexport const metricAggregationConfig = {\n  count: {\n    label: 'Count',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: false,\n    hasMeta: false,\n    supportsInlineScript: false,\n    defaults: {}\n  },\n  avg: {\n    label: 'Average',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {}\n  },\n  sum: {\n    label: 'Sum',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {}\n  },\n  max: {\n    label: 'Max',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {}\n  },\n  min: {\n    label: 'Min',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {}\n  },\n  extended_stats: {\n    label: 'Extended Stats',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: true,\n    defaults: {\n      meta: {\n        std_deviation_bounds_lower: true,\n        std_deviation_bounds_upper: true\n      }\n    }\n  },\n  percentiles: {\n    label: 'Percentiles',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        percents: ['25', '50', '75', '95', '99']\n      }\n    }\n  },\n  cardinality: {\n    label: 'Unique Count',\n    requiresField: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {}\n  },\n  moving_avg: {\n    label: 'Moving Average',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0 <8.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        model: 'simple',\n        window: '5'\n      }\n    }\n  },\n  moving_fn: {\n    // TODO: Check this\n    label: 'Moving Function',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMultipleBucketPaths: false,\n    supportsInlineScript: false,\n    supportsMissing: false,\n    hasMeta: false,\n    hasSettings: true,\n    versionRange: '>=7.0.0',\n    defaults: {}\n  },\n  derivative: {\n    label: 'Derivative',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {}\n  },\n  serial_diff: {\n    label: 'Serial Difference',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        lag: '1'\n      }\n    }\n  },\n  cumulative_sum: {\n    label: 'Cumulative Sum',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {}\n  },\n  bucket_script: {\n    label: 'Bucket Script',\n    requiresField: false,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: true,\n    versionRange: '>=2.0.0',\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      pipelineVariables: [defaultPipelineVariable(generatePipelineVariableName([]))]\n    }\n  },\n  raw_document: {\n    label: 'Raw Document (legacy)',\n    requiresField: false,\n    isSingleMetric: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500'\n      }\n    }\n  },\n  raw_data: {\n    label: 'Raw Data',\n    requiresField: false,\n    isSingleMetric: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500'\n      }\n    }\n  },\n  logs: {\n    label: 'Logs',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    isSingleMetric: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        limit: '500'\n      }\n    }\n  },\n  top_metrics: {\n    label: 'Top Metrics',\n    xpack: true,\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    versionRange: '>=7.7.0',\n    hasMeta: false,\n    defaults: {\n      settings: {\n        order: 'desc'\n      }\n    }\n  },\n  rate: {\n    label: 'Rate',\n    xpack: true,\n    versionRange: '>=7.10.0',\n    requiresField: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: true,\n    hasMeta: false,\n    defaults: {}\n  }\n};\nexport const pipelineOptions = {\n  moving_avg: [{\n    label: 'window',\n    default: 5\n  }, {\n    label: 'model',\n    default: 'simple'\n  }, {\n    label: 'predict'\n  }, {\n    label: 'minimize',\n    default: false\n  }],\n  moving_fn: [{\n    label: 'window',\n    default: 5\n  }, {\n    label: 'script'\n  }],\n  derivative: [{\n    label: 'unit'\n  }],\n  serial_diff: [{\n    label: 'lag'\n  }],\n  cumulative_sum: [{\n    label: 'format'\n  }],\n  bucket_script: []\n};\n/**\n * Given a metric `MetricA` and an array of metrics, returns all children of `MetricA`.\n * `MetricB` is considered a child of `MetricA` if `MetricA` is referenced by `MetricB` in it's `field` attribute\n * (`MetricA.id === MetricB.field`) or in it's pipeline aggregation variables (for bucket_scripts).\n * @param metric\n * @param metrics\n */\n\nexport const getChildren = (metric, metrics) => {\n  const children = metrics.filter(m => {\n    // TODO: Check this.\n    if (isPipelineAggregationWithMultipleBucketPaths(m)) {\n      var _m$pipelineVariables;\n\n      return (_m$pipelineVariables = m.pipelineVariables) === null || _m$pipelineVariables === void 0 ? void 0 : _m$pipelineVariables.some(pv => pv.pipelineAgg === metric.id);\n    }\n\n    return isMetricAggregationWithField(m) && metric.id === m.field;\n  });\n  return [...children, ...children.flatMap(child => getChildren(child, metrics))];\n};","map":{"version":3,"names":["defaultPipelineVariable","generatePipelineVariableName","isMetricAggregationWithField","isPipelineAggregationWithMultipleBucketPaths","metricAggregationConfig","count","label","requiresField","isPipelineAgg","supportsMissing","supportsMultipleBucketPaths","hasSettings","hasMeta","supportsInlineScript","defaults","avg","sum","max","min","extended_stats","meta","std_deviation_bounds_lower","std_deviation_bounds_upper","percentiles","settings","percents","cardinality","moving_avg","versionRange","model","window","moving_fn","derivative","serial_diff","lag","cumulative_sum","bucket_script","pipelineVariables","raw_document","isSingleMetric","size","raw_data","logs","limit","top_metrics","xpack","order","rate","pipelineOptions","default","getChildren","metric","metrics","children","filter","m","some","pv","pipelineAgg","id","field","flatMap","child"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/utils.ts"],"sourcesContent":["import { MetricsConfiguration } from '../../../types';\n\nimport {\n  defaultPipelineVariable,\n  generatePipelineVariableName,\n} from './SettingsEditor/BucketScriptSettingsEditor/utils';\nimport {\n  isMetricAggregationWithField,\n  isPipelineAggregationWithMultipleBucketPaths,\n  MetricAggregation,\n  PipelineMetricAggregationType,\n} from './aggregations';\n\nexport const metricAggregationConfig: MetricsConfiguration = {\n  count: {\n    label: 'Count',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: false,\n    hasMeta: false,\n    supportsInlineScript: false,\n    defaults: {},\n  },\n  avg: {\n    label: 'Average',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  sum: {\n    label: 'Sum',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  max: {\n    label: 'Max',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  min: {\n    label: 'Min',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  extended_stats: {\n    label: 'Extended Stats',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: true,\n    defaults: {\n      meta: {\n        std_deviation_bounds_lower: true,\n        std_deviation_bounds_upper: true,\n      },\n    },\n  },\n  percentiles: {\n    label: 'Percentiles',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        percents: ['25', '50', '75', '95', '99'],\n      },\n    },\n  },\n  cardinality: {\n    label: 'Unique Count',\n    requiresField: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  moving_avg: {\n    label: 'Moving Average',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0 <8.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        model: 'simple',\n        window: '5',\n      },\n    },\n  },\n  moving_fn: {\n    // TODO: Check this\n    label: 'Moving Function',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMultipleBucketPaths: false,\n    supportsInlineScript: false,\n    supportsMissing: false,\n    hasMeta: false,\n    hasSettings: true,\n    versionRange: '>=7.0.0',\n    defaults: {},\n  },\n  derivative: {\n    label: 'Derivative',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  serial_diff: {\n    label: 'Serial Difference',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        lag: '1',\n      },\n    },\n  },\n  cumulative_sum: {\n    label: 'Cumulative Sum',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '>=2.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  bucket_script: {\n    label: 'Bucket Script',\n    requiresField: false,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: true,\n    versionRange: '>=2.0.0',\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      pipelineVariables: [defaultPipelineVariable(generatePipelineVariableName([]))],\n    },\n  },\n  raw_document: {\n    label: 'Raw Document (legacy)',\n    requiresField: false,\n    isSingleMetric: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500',\n      },\n    },\n  },\n  raw_data: {\n    label: 'Raw Data',\n    requiresField: false,\n    isSingleMetric: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500',\n      },\n    },\n  },\n  logs: {\n    label: 'Logs',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    isSingleMetric: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        limit: '500',\n      },\n    },\n  },\n  top_metrics: {\n    label: 'Top Metrics',\n    xpack: true,\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    versionRange: '>=7.7.0',\n    hasMeta: false,\n    defaults: {\n      settings: {\n        order: 'desc',\n      },\n    },\n  },\n  rate: {\n    label: 'Rate',\n    xpack: true,\n    versionRange: '>=7.10.0',\n    requiresField: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: true,\n    hasMeta: false,\n    defaults: {},\n  },\n};\n\ninterface PipelineOption {\n  label: string;\n  default?: string | number | boolean;\n}\n\ntype PipelineOptions = {\n  [K in PipelineMetricAggregationType]: PipelineOption[];\n};\n\nexport const pipelineOptions: PipelineOptions = {\n  moving_avg: [\n    { label: 'window', default: 5 },\n    { label: 'model', default: 'simple' },\n    { label: 'predict' },\n    { label: 'minimize', default: false },\n  ],\n  moving_fn: [{ label: 'window', default: 5 }, { label: 'script' }],\n  derivative: [{ label: 'unit' }],\n  serial_diff: [{ label: 'lag' }],\n  cumulative_sum: [{ label: 'format' }],\n  bucket_script: [],\n};\n\n/**\n * Given a metric `MetricA` and an array of metrics, returns all children of `MetricA`.\n * `MetricB` is considered a child of `MetricA` if `MetricA` is referenced by `MetricB` in it's `field` attribute\n * (`MetricA.id === MetricB.field`) or in it's pipeline aggregation variables (for bucket_scripts).\n * @param metric\n * @param metrics\n */\nexport const getChildren = (metric: MetricAggregation, metrics: MetricAggregation[]): MetricAggregation[] => {\n  const children = metrics.filter((m) => {\n    // TODO: Check this.\n    if (isPipelineAggregationWithMultipleBucketPaths(m)) {\n      return m.pipelineVariables?.some((pv) => pv.pipelineAgg === metric.id);\n    }\n\n    return isMetricAggregationWithField(m) && metric.id === m.field;\n  });\n\n  return [...children, ...children.flatMap((child) => getChildren(child, metrics))];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}