{"ast":null,"code":"import { useMemo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getMessageFromError } from 'app/core/utils/errors';\nimport { AppNotificationSeverity, useDispatch } from 'app/types';\nimport { notifyApp } from '../actions';\nconst defaultSuccessNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Success,\n  icon: 'check'\n};\nconst defaultWarningNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Warning,\n  icon: 'exclamation-triangle'\n};\nconst defaultErrorNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Error,\n  icon: 'exclamation-triangle'\n};\nexport const createSuccessNotification = (title, text = '', traceId) => Object.assign({}, defaultSuccessNotification, {\n  title,\n  text,\n  id: uuidv4(),\n  timestamp: Date.now(),\n  showing: true\n});\nexport const createErrorNotification = (title, text = '', traceId, component) => {\n  return Object.assign({}, defaultErrorNotification, {\n    text: getMessageFromError(text),\n    title,\n    id: uuidv4(),\n    traceId,\n    component,\n    timestamp: Date.now(),\n    showing: true\n  });\n};\nexport const createWarningNotification = (title, text = '', traceId) => Object.assign({}, defaultWarningNotification, {\n  title,\n  text,\n  traceId,\n  id: uuidv4(),\n  timestamp: Date.now(),\n  showing: true\n});\n/** Hook for showing toast notifications with varying severity (success, warning error).\n * @example\n * const notifyApp = useAppNotification();\n * notifyApp.success('Success!', 'Some additional text');\n * notifyApp.warning('Warning!');\n * notifyApp.error('Error!');\n */\n\nexport function useAppNotification() {\n  const dispatch = useDispatch();\n  return useMemo(() => ({\n    success: (title, text = '') => {\n      dispatch(notifyApp(createSuccessNotification(title, text)));\n    },\n    warning: (title, text = '', traceId) => {\n      dispatch(notifyApp(createWarningNotification(title, text, traceId)));\n    },\n    error: (title, text = '', traceId) => {\n      dispatch(notifyApp(createErrorNotification(title, text, traceId)));\n    }\n  }), [dispatch]);\n}","map":{"version":3,"names":["useMemo","v4","uuidv4","getMessageFromError","AppNotificationSeverity","useDispatch","notifyApp","defaultSuccessNotification","title","text","severity","Success","icon","defaultWarningNotification","Warning","defaultErrorNotification","Error","createSuccessNotification","traceId","id","timestamp","Date","now","showing","createErrorNotification","component","createWarningNotification","useAppNotification","dispatch","success","warning","error"],"sources":["/home/soula/grafana/public/app/core/copy/appNotification.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { getMessageFromError } from 'app/core/utils/errors';\nimport { AppNotification, AppNotificationSeverity, useDispatch } from 'app/types';\n\nimport { notifyApp } from '../actions';\n\nconst defaultSuccessNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Success,\n  icon: 'check',\n};\n\nconst defaultWarningNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Warning,\n  icon: 'exclamation-triangle',\n};\n\nconst defaultErrorNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Error,\n  icon: 'exclamation-triangle',\n};\n\nexport const createSuccessNotification = (title: string, text = '', traceId?: string): AppNotification => ({\n  ...defaultSuccessNotification,\n  title,\n  text,\n  id: uuidv4(),\n  timestamp: Date.now(),\n  showing: true,\n});\n\nexport const createErrorNotification = (\n  title: string,\n  text: string | Error = '',\n  traceId?: string,\n  component?: React.ReactElement\n): AppNotification => {\n  return {\n    ...defaultErrorNotification,\n    text: getMessageFromError(text),\n    title,\n    id: uuidv4(),\n    traceId,\n    component,\n    timestamp: Date.now(),\n    showing: true,\n  };\n};\n\nexport const createWarningNotification = (title: string, text = '', traceId?: string): AppNotification => ({\n  ...defaultWarningNotification,\n  title,\n  text,\n  traceId,\n  id: uuidv4(),\n  timestamp: Date.now(),\n  showing: true,\n});\n\n/** Hook for showing toast notifications with varying severity (success, warning error).\n * @example\n * const notifyApp = useAppNotification();\n * notifyApp.success('Success!', 'Some additional text');\n * notifyApp.warning('Warning!');\n * notifyApp.error('Error!');\n */\nexport function useAppNotification() {\n  const dispatch = useDispatch();\n  return useMemo(\n    () => ({\n      success: (title: string, text = '') => {\n        dispatch(notifyApp(createSuccessNotification(title, text)));\n      },\n      warning: (title: string, text = '', traceId?: string) => {\n        dispatch(notifyApp(createWarningNotification(title, text, traceId)));\n      },\n      error: (title: string, text = '', traceId?: string) => {\n        dispatch(notifyApp(createErrorNotification(title, text, traceId)));\n      },\n    }),\n    [dispatch]\n  );\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAA0BC,uBAA1B,EAAmDC,WAAnD,QAAsE,WAAtE;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,0BAA0B,GAAG;EACjCC,KAAK,EAAE,EAD0B;EAEjCC,IAAI,EAAE,EAF2B;EAGjCC,QAAQ,EAAEN,uBAAuB,CAACO,OAHD;EAIjCC,IAAI,EAAE;AAJ2B,CAAnC;AAOA,MAAMC,0BAA0B,GAAG;EACjCL,KAAK,EAAE,EAD0B;EAEjCC,IAAI,EAAE,EAF2B;EAGjCC,QAAQ,EAAEN,uBAAuB,CAACU,OAHD;EAIjCF,IAAI,EAAE;AAJ2B,CAAnC;AAOA,MAAMG,wBAAwB,GAAG;EAC/BP,KAAK,EAAE,EADwB;EAE/BC,IAAI,EAAE,EAFyB;EAG/BC,QAAQ,EAAEN,uBAAuB,CAACY,KAHH;EAI/BJ,IAAI,EAAE;AAJyB,CAAjC;AAOA,OAAO,MAAMK,yBAAyB,GAAG,CAACT,KAAD,EAAgBC,IAAI,GAAG,EAAvB,EAA2BS,OAA3B,uBACpCX,0BADoC;EAEvCC,KAFuC;EAGvCC,IAHuC;EAIvCU,EAAE,EAAEjB,MAAM,EAJ6B;EAKvCkB,SAAS,EAAEC,IAAI,CAACC,GAAL,EAL4B;EAMvCC,OAAO,EAAE;AAN8B,EAAlC;AASP,OAAO,MAAMC,uBAAuB,GAAG,CACrChB,KADqC,EAErCC,IAAoB,GAAG,EAFc,EAGrCS,OAHqC,EAIrCO,SAJqC,KAKjB;EACpB,yBACKV,wBADL;IAEEN,IAAI,EAAEN,mBAAmB,CAACM,IAAD,CAF3B;IAGED,KAHF;IAIEW,EAAE,EAAEjB,MAAM,EAJZ;IAKEgB,OALF;IAMEO,SANF;IAOEL,SAAS,EAAEC,IAAI,CAACC,GAAL,EAPb;IAQEC,OAAO,EAAE;EARX;AAUD,CAhBM;AAkBP,OAAO,MAAMG,yBAAyB,GAAG,CAAClB,KAAD,EAAgBC,IAAI,GAAG,EAAvB,EAA2BS,OAA3B,uBACpCL,0BADoC;EAEvCL,KAFuC;EAGvCC,IAHuC;EAIvCS,OAJuC;EAKvCC,EAAE,EAAEjB,MAAM,EAL6B;EAMvCkB,SAAS,EAAEC,IAAI,CAACC,GAAL,EAN4B;EAOvCC,OAAO,EAAE;AAP8B,EAAlC;AAUP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,kBAAT,GAA8B;EACnC,MAAMC,QAAQ,GAAGvB,WAAW,EAA5B;EACA,OAAOL,OAAO,CACZ,OAAO;IACL6B,OAAO,EAAE,CAACrB,KAAD,EAAgBC,IAAI,GAAG,EAAvB,KAA8B;MACrCmB,QAAQ,CAACtB,SAAS,CAACW,yBAAyB,CAACT,KAAD,EAAQC,IAAR,CAA1B,CAAV,CAAR;IACD,CAHI;IAILqB,OAAO,EAAE,CAACtB,KAAD,EAAgBC,IAAI,GAAG,EAAvB,EAA2BS,OAA3B,KAAgD;MACvDU,QAAQ,CAACtB,SAAS,CAACoB,yBAAyB,CAAClB,KAAD,EAAQC,IAAR,EAAcS,OAAd,CAA1B,CAAV,CAAR;IACD,CANI;IAOLa,KAAK,EAAE,CAACvB,KAAD,EAAgBC,IAAI,GAAG,EAAvB,EAA2BS,OAA3B,KAAgD;MACrDU,QAAQ,CAACtB,SAAS,CAACkB,uBAAuB,CAAChB,KAAD,EAAQC,IAAR,EAAcS,OAAd,CAAxB,CAAV,CAAR;IACD;EATI,CAAP,CADY,EAYZ,CAACU,QAAD,CAZY,CAAd;AAcD"},"metadata":{},"sourceType":"module"}