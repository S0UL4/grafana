{"ast":null,"code":"var _h, _span;\n\nimport React, { useEffect, useState } from 'react';\nimport { rangeUtil } from '@grafana/data';\nimport { EventsWithValidation, LegacyForms, Button, Select, InlineField } from '@grafana/ui';\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\nimport { SlideDown } from '../../core/components/Animations/SlideDown';\nimport { OrgRole } from '../../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst {\n  Input\n} = LegacyForms;\nconst ROLE_OPTIONS = Object.keys(OrgRole).map(role => ({\n  label: role,\n  value: role\n}));\n\nfunction isValidInterval(value) {\n  if (!value) {\n    return true;\n  }\n\n  try {\n    rangeUtil.intervalToSeconds(value);\n    return true;\n  } catch {}\n\n  return false;\n}\n\nconst timeRangeValidationEvents = {\n  [EventsWithValidation.onBlur]: [{\n    rule: isValidInterval,\n    errorMessage: 'Not a valid duration'\n  }]\n};\nconst tooltipText = 'The API key life duration. For example, 1d if your key is going to last for one day. Supported units are: s,m,h,d,w,M,y';\nexport const ApiKeysForm = ({\n  show,\n  onClose,\n  onKeyAdded,\n  disabled\n}) => {\n  const [name, setName] = useState('');\n  const [role, setRole] = useState(OrgRole.Viewer);\n  const [secondsToLive, setSecondsToLive] = useState('');\n  useEffect(() => {\n    setName('');\n    setRole(OrgRole.Viewer);\n    setSecondsToLive('');\n  }, [show]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (isValidInterval(secondsToLive)) {\n      onKeyAdded({\n        name,\n        role,\n        secondsToLive\n      });\n      onClose();\n    }\n  };\n\n  const onNameChange = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const onRoleChange = role => {\n    setRole(role.value);\n  };\n\n  const onSecondsToLiveChange = event => {\n    setSecondsToLive(event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsx(SlideDown, {\n    in: show,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form-inline cta-form\",\n      children: [/*#__PURE__*/_jsx(CloseButton, {\n        onClick: onClose\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        className: \"gf-form-group\",\n        onSubmit: onSubmit,\n        children: [_h || (_h = /*#__PURE__*/_jsx(\"h5\", {\n          children: \"Add API Key\"\n        })), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"gf-form-inline\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"gf-form max-width-21\",\n            children: [_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n              className: \"gf-form-label\",\n              children: \"Key name\"\n            })), /*#__PURE__*/_jsx(Input, {\n              type: \"text\",\n              className: \"gf-form-input\",\n              value: name,\n              placeholder: \"Name\",\n              onChange: onNameChange\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"gf-form\",\n            children: /*#__PURE__*/_jsx(InlineField, {\n              label: \"Role\",\n              children: /*#__PURE__*/_jsx(Select, {\n                inputId: \"role-select\",\n                value: role,\n                onChange: onRoleChange,\n                options: ROLE_OPTIONS\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"gf-form max-width-21\",\n            children: /*#__PURE__*/_jsx(InlineField, {\n              tooltip: tooltipText,\n              label: \"Time to live\",\n              children: /*#__PURE__*/_jsx(Input, {\n                id: \"time-to-live-input\",\n                type: \"text\",\n                placeholder: \"1d\",\n                validationEvents: timeRangeValidationEvents,\n                value: secondsToLive,\n                onChange: onSecondsToLiveChange\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"gf-form\",\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              disabled: disabled,\n              children: \"Add\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","rangeUtil","EventsWithValidation","LegacyForms","Button","Select","InlineField","CloseButton","SlideDown","OrgRole","Input","ROLE_OPTIONS","Object","keys","map","role","label","value","isValidInterval","intervalToSeconds","timeRangeValidationEvents","onBlur","rule","errorMessage","tooltipText","ApiKeysForm","show","onClose","onKeyAdded","disabled","name","setName","setRole","Viewer","secondsToLive","setSecondsToLive","onSubmit","event","preventDefault","onNameChange","currentTarget","onRoleChange","onSecondsToLiveChange"],"sources":["/home/soula/grafana/public/app/features/api-keys/ApiKeysForm.tsx"],"sourcesContent":["import React, { ChangeEvent, FC, FormEvent, useEffect, useState } from 'react';\n\nimport { rangeUtil, SelectableValue } from '@grafana/data';\nimport { EventsWithValidation, LegacyForms, ValidationEvents, Button, Select, InlineField } from '@grafana/ui';\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\n\nimport { SlideDown } from '../../core/components/Animations/SlideDown';\nimport { NewApiKey, OrgRole } from '../../types';\n\nconst { Input } = LegacyForms;\nconst ROLE_OPTIONS: Array<SelectableValue<OrgRole>> = Object.keys(OrgRole).map((role) => ({\n  label: role,\n  value: role as OrgRole,\n}));\n\ninterface Props {\n  show: boolean;\n  onClose: () => void;\n  onKeyAdded: (apiKey: NewApiKey) => void;\n  disabled: boolean;\n}\n\nfunction isValidInterval(value: string): boolean {\n  if (!value) {\n    return true;\n  }\n  try {\n    rangeUtil.intervalToSeconds(value);\n    return true;\n  } catch {}\n  return false;\n}\n\nconst timeRangeValidationEvents: ValidationEvents = {\n  [EventsWithValidation.onBlur]: [\n    {\n      rule: isValidInterval,\n      errorMessage: 'Not a valid duration',\n    },\n  ],\n};\n\nconst tooltipText =\n  'The API key life duration. For example, 1d if your key is going to last for one day. Supported units are: s,m,h,d,w,M,y';\n\nexport const ApiKeysForm: FC<Props> = ({ show, onClose, onKeyAdded, disabled }) => {\n  const [name, setName] = useState<string>('');\n  const [role, setRole] = useState<OrgRole>(OrgRole.Viewer);\n  const [secondsToLive, setSecondsToLive] = useState<string>('');\n  useEffect(() => {\n    setName('');\n    setRole(OrgRole.Viewer);\n    setSecondsToLive('');\n  }, [show]);\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    if (isValidInterval(secondsToLive)) {\n      onKeyAdded({ name, role, secondsToLive });\n      onClose();\n    }\n  };\n  const onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setName(event.currentTarget.value);\n  };\n  const onRoleChange = (role: SelectableValue<OrgRole>) => {\n    setRole(role.value!);\n  };\n  const onSecondsToLiveChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSecondsToLive(event.currentTarget.value);\n  };\n\n  return (\n    <SlideDown in={show}>\n      <div className=\"gf-form-inline cta-form\">\n        <CloseButton onClick={onClose} />\n        <form className=\"gf-form-group\" onSubmit={onSubmit}>\n          <h5>Add API Key</h5>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-21\">\n              <span className=\"gf-form-label\">Key name</span>\n              <Input type=\"text\" className=\"gf-form-input\" value={name} placeholder=\"Name\" onChange={onNameChange} />\n            </div>\n            <div className=\"gf-form\">\n              <InlineField label=\"Role\">\n                <Select inputId=\"role-select\" value={role} onChange={onRoleChange} options={ROLE_OPTIONS} />\n              </InlineField>\n            </div>\n            <div className=\"gf-form max-width-21\">\n              <InlineField tooltip={tooltipText} label=\"Time to live\">\n                <Input\n                  id=\"time-to-live-input\"\n                  type=\"text\"\n                  placeholder=\"1d\"\n                  validationEvents={timeRangeValidationEvents}\n                  value={secondsToLive}\n                  onChange={onSecondsToLiveChange}\n                />\n              </InlineField>\n            </div>\n            <div className=\"gf-form\">\n              <Button type=\"submit\" disabled={disabled}>\n                Add\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </SlideDown>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}