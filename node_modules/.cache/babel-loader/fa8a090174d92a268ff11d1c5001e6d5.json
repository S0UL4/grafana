{"ast":null,"code":"import { locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { getGrafanaSearcher } from 'app/features/search/service';\n\nasync function getDashboardNav(parentId) {\n  const data = await getGrafanaSearcher().search({\n    kind: ['dashboard'],\n    query: '*',\n    limit: 500\n  });\n  const goToDashboardActions = data.view.map(item => {\n    const {\n      url,\n      name\n    } = item; // items are backed by DataFrameView, so must hold the url in a closure\n\n    return {\n      parent: parentId,\n      id: `go/dashboard/${url}`,\n      name: `${name}`,\n      perform: () => {\n        locationService.push(locationUtil.stripBaseFromUrl(url));\n      }\n    };\n  });\n  return goToDashboardActions;\n}\n\nexport default (async parentId => {\n  const dashboardNav = await getDashboardNav(parentId);\n  return dashboardNav;\n});","map":{"version":3,"names":["locationUtil","locationService","getGrafanaSearcher","getDashboardNav","parentId","data","search","kind","query","limit","goToDashboardActions","view","map","item","url","name","parent","id","perform","push","stripBaseFromUrl","dashboardNav"],"sources":["/home/soula/grafana/public/app/features/commandPalette/actions/dashboard.nav.actions.ts"],"sourcesContent":["import { Action } from 'kbar';\n\nimport { locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { getGrafanaSearcher } from 'app/features/search/service';\n\nasync function getDashboardNav(parentId: string): Promise<Action[]> {\n  const data = await getGrafanaSearcher().search({\n    kind: ['dashboard'],\n    query: '*',\n    limit: 500,\n  });\n\n  const goToDashboardActions: Action[] = data.view.map((item) => {\n    const { url, name } = item; // items are backed by DataFrameView, so must hold the url in a closure\n    return {\n      parent: parentId,\n      id: `go/dashboard/${url}`,\n      name: `${name}`,\n      perform: () => {\n        locationService.push(locationUtil.stripBaseFromUrl(url));\n      },\n    };\n  });\n\n  return goToDashboardActions;\n}\n\nexport default async (parentId: string) => {\n  const dashboardNav = await getDashboardNav(parentId);\n  return dashboardNav;\n};\n"],"mappings":"AAEA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,eAAeC,eAAf,CAA+BC,QAA/B,EAAoE;EAClE,MAAMC,IAAI,GAAG,MAAMH,kBAAkB,GAAGI,MAArB,CAA4B;IAC7CC,IAAI,EAAE,CAAC,WAAD,CADuC;IAE7CC,KAAK,EAAE,GAFsC;IAG7CC,KAAK,EAAE;EAHsC,CAA5B,CAAnB;EAMA,MAAMC,oBAA8B,GAAGL,IAAI,CAACM,IAAL,CAAUC,GAAV,CAAeC,IAAD,IAAU;IAC7D,MAAM;MAAEC,GAAF;MAAOC;IAAP,IAAgBF,IAAtB,CAD6D,CACjC;;IAC5B,OAAO;MACLG,MAAM,EAAEZ,QADH;MAELa,EAAE,EAAG,gBAAeH,GAAI,EAFnB;MAGLC,IAAI,EAAG,GAAEA,IAAK,EAHT;MAILG,OAAO,EAAE,MAAM;QACbjB,eAAe,CAACkB,IAAhB,CAAqBnB,YAAY,CAACoB,gBAAb,CAA8BN,GAA9B,CAArB;MACD;IANI,CAAP;EAQD,CAVsC,CAAvC;EAYA,OAAOJ,oBAAP;AACD;;AAED,gBAAe,MAAON,QAAP,IAA4B;EACzC,MAAMiB,YAAY,GAAG,MAAMlB,eAAe,CAACC,QAAD,CAA1C;EACA,OAAOiB,YAAP;AACD,CAHD"},"metadata":{},"sourceType":"module"}