{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Modal, ModalTabsHeader, TabContent } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { isPanelModelLibraryPanel } from 'app/features/library-panels/guard';\nimport { ShareEmbed } from './ShareEmbed';\nimport { ShareExport } from './ShareExport';\nimport { ShareLibraryPanel } from './ShareLibraryPanel';\nimport { ShareLink } from './ShareLink';\nimport { SharePublicDashboard } from './SharePublicDashboard';\nimport { ShareSnapshot } from './ShareSnapshot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst customDashboardTabs = [];\nconst customPanelTabs = [];\nexport function addDashboardShareTab(tab) {\n  customDashboardTabs.push(tab);\n}\nexport function addPanelShareTab(tab) {\n  customPanelTabs.push(tab);\n}\n\nfunction getInitialState(props) {\n  const tabs = getTabs(props);\n  return {\n    tabs,\n    activeTab: tabs[0].value\n  };\n}\n\nfunction getTabs(props) {\n  const {\n    panel\n  } = props;\n  const tabs = [{\n    label: 'Link',\n    value: 'link',\n    component: ShareLink\n  }];\n\n  if (contextSrv.isSignedIn) {\n    tabs.push({\n      label: 'Snapshot',\n      value: 'snapshot',\n      component: ShareSnapshot\n    });\n  }\n\n  if (panel) {\n    tabs.push({\n      label: 'Embed',\n      value: 'embed',\n      component: ShareEmbed\n    });\n\n    if (!isPanelModelLibraryPanel(panel)) {\n      tabs.push({\n        label: 'Library panel',\n        value: 'library_panel',\n        component: ShareLibraryPanel\n      });\n    }\n\n    tabs.push(...customPanelTabs);\n  } else {\n    tabs.push({\n      label: 'Export',\n      value: 'export',\n      component: ShareExport\n    });\n    tabs.push(...customDashboardTabs);\n  }\n\n  if (Boolean(config.featureToggles['publicDashboards'])) {\n    tabs.push({\n      label: 'Public Dashboard',\n      value: 'share',\n      component: SharePublicDashboard\n    });\n  }\n\n  return tabs;\n}\n\nexport class ShareModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSelectTab\", t => {\n      this.setState({\n        activeTab: t.value\n      });\n    });\n\n    this.state = getInitialState(props);\n  } // onDismiss = () => {\n  //   //this.setState(getInitialState(this.props));\n  //   this.props.onDismiss();\n  // };\n\n\n  getTabs() {\n    return getTabs(this.props);\n  }\n\n  getActiveTab() {\n    const {\n      tabs,\n      activeTab\n    } = this.state;\n    return tabs.find(t => t.value === activeTab);\n  }\n\n  renderTitle() {\n    const {\n      panel\n    } = this.props;\n    const {\n      activeTab\n    } = this.state;\n    const title = panel ? 'Share Panel' : 'Share';\n    const tabs = this.getTabs();\n    return /*#__PURE__*/_jsx(ModalTabsHeader, {\n      title: title,\n      icon: \"share-alt\",\n      tabs: tabs,\n      activeTab: activeTab,\n      onChangeTab: this.onSelectTab\n    });\n  }\n\n  render() {\n    const {\n      dashboard,\n      panel\n    } = this.props;\n    const activeTabModel = this.getActiveTab();\n    const ActiveTab = activeTabModel.component;\n    return /*#__PURE__*/_jsx(Modal, {\n      isOpen: true,\n      title: this.renderTitle(),\n      onDismiss: this.props.onDismiss,\n      children: /*#__PURE__*/_jsx(TabContent, {\n        children: /*#__PURE__*/_jsx(ActiveTab, {\n          dashboard: dashboard,\n          panel: panel,\n          onDismiss: this.props.onDismiss\n        })\n      })\n    });\n  }\n\n}","map":{"version":3,"names":["React","Modal","ModalTabsHeader","TabContent","config","contextSrv","isPanelModelLibraryPanel","ShareEmbed","ShareExport","ShareLibraryPanel","ShareLink","SharePublicDashboard","ShareSnapshot","customDashboardTabs","customPanelTabs","addDashboardShareTab","tab","push","addPanelShareTab","getInitialState","props","tabs","getTabs","activeTab","value","panel","label","component","isSignedIn","Boolean","featureToggles","ShareModal","Component","constructor","t","setState","state","getActiveTab","find","renderTitle","title","onSelectTab","render","dashboard","activeTabModel","ActiveTab","onDismiss"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/ShareModal/ShareModal.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Modal, ModalTabsHeader, TabContent } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { DashboardModel, PanelModel } from 'app/features/dashboard/state';\nimport { isPanelModelLibraryPanel } from 'app/features/library-panels/guard';\n\nimport { ShareEmbed } from './ShareEmbed';\nimport { ShareExport } from './ShareExport';\nimport { ShareLibraryPanel } from './ShareLibraryPanel';\nimport { ShareLink } from './ShareLink';\nimport { SharePublicDashboard } from './SharePublicDashboard';\nimport { ShareSnapshot } from './ShareSnapshot';\nimport { ShareModalTabModel } from './types';\n\nconst customDashboardTabs: ShareModalTabModel[] = [];\nconst customPanelTabs: ShareModalTabModel[] = [];\n\nexport function addDashboardShareTab(tab: ShareModalTabModel) {\n  customDashboardTabs.push(tab);\n}\n\nexport function addPanelShareTab(tab: ShareModalTabModel) {\n  customPanelTabs.push(tab);\n}\n\nfunction getInitialState(props: Props): State {\n  const tabs = getTabs(props);\n  return {\n    tabs,\n    activeTab: tabs[0].value,\n  };\n}\n\nfunction getTabs(props: Props) {\n  const { panel } = props;\n\n  const tabs: ShareModalTabModel[] = [{ label: 'Link', value: 'link', component: ShareLink }];\n\n  if (contextSrv.isSignedIn) {\n    tabs.push({ label: 'Snapshot', value: 'snapshot', component: ShareSnapshot });\n  }\n\n  if (panel) {\n    tabs.push({ label: 'Embed', value: 'embed', component: ShareEmbed });\n\n    if (!isPanelModelLibraryPanel(panel)) {\n      tabs.push({ label: 'Library panel', value: 'library_panel', component: ShareLibraryPanel });\n    }\n    tabs.push(...customPanelTabs);\n  } else {\n    tabs.push({ label: 'Export', value: 'export', component: ShareExport });\n    tabs.push(...customDashboardTabs);\n  }\n\n  if (Boolean(config.featureToggles['publicDashboards'])) {\n    tabs.push({ label: 'Public Dashboard', value: 'share', component: SharePublicDashboard });\n  }\n\n  return tabs;\n}\n\ninterface Props {\n  dashboard: DashboardModel;\n  panel?: PanelModel;\n\n  onDismiss(): void;\n}\n\ninterface State {\n  tabs: ShareModalTabModel[];\n  activeTab: string;\n}\n\nexport class ShareModal extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = getInitialState(props);\n  }\n\n  // onDismiss = () => {\n  //   //this.setState(getInitialState(this.props));\n  //   this.props.onDismiss();\n  // };\n\n  onSelectTab = (t: any) => {\n    this.setState({ activeTab: t.value });\n  };\n\n  getTabs() {\n    return getTabs(this.props);\n  }\n\n  getActiveTab() {\n    const { tabs, activeTab } = this.state;\n    return tabs.find((t) => t.value === activeTab)!;\n  }\n\n  renderTitle() {\n    const { panel } = this.props;\n    const { activeTab } = this.state;\n    const title = panel ? 'Share Panel' : 'Share';\n    const tabs = this.getTabs();\n\n    return (\n      <ModalTabsHeader\n        title={title}\n        icon=\"share-alt\"\n        tabs={tabs}\n        activeTab={activeTab}\n        onChangeTab={this.onSelectTab}\n      />\n    );\n  }\n\n  render() {\n    const { dashboard, panel } = this.props;\n    const activeTabModel = this.getActiveTab();\n    const ActiveTab = activeTabModel.component;\n\n    return (\n      <Modal isOpen={true} title={this.renderTitle()} onDismiss={this.props.onDismiss}>\n        <TabContent>\n          <ActiveTab dashboard={dashboard} panel={panel} onDismiss={this.props.onDismiss} />\n        </TabContent>\n      </Modal>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}