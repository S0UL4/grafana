{"ast":null,"code":"const _excluded = [\"value\", \"id\", \"onNavigate\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { NavigationKey } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class VariableInput extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onKeyDown\", event => {\n      if (NavigationKey[event.keyCode]) {\n        const clearOthers = event.ctrlKey || event.metaKey || event.shiftKey;\n        this.props.onNavigate(event.keyCode, clearOthers);\n        event.preventDefault();\n      }\n    });\n\n    _defineProperty(this, \"onChange\", event => {\n      this.props.onChange(event.target.value);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      value\n    } = _this$props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/_jsx(\"input\", Object.assign({}, restProps, {\n      ref: instance => {\n        if (instance) {\n          instance.focus();\n          instance.setAttribute('style', `width:${Math.max(instance.width, 150)}px`);\n        }\n      },\n      type: \"text\",\n      className: \"gf-form-input\",\n      value: value !== null && value !== void 0 ? value : '',\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      placeholder: \"Enter variable value\"\n    }));\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","NavigationKey","VariableInput","event","keyCode","clearOthers","ctrlKey","metaKey","shiftKey","props","onNavigate","preventDefault","onChange","target","value","render","restProps","instance","focus","setAttribute","Math","max","width","onKeyDown"],"sources":["/home/soula/grafana/public/app/features/variables/pickers/shared/VariableInput.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { NavigationKey } from '../types';\n\nexport interface Props extends Omit<React.HTMLProps<HTMLInputElement>, 'onChange' | 'value'> {\n  onChange: (value: string) => void;\n  onNavigate: (key: NavigationKey, clearOthers: boolean) => void;\n  value: string | null;\n}\n\nexport class VariableInput extends PureComponent<Props> {\n  onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (NavigationKey[event.keyCode]) {\n      const clearOthers = event.ctrlKey || event.metaKey || event.shiftKey;\n      this.props.onNavigate(event.keyCode as NavigationKey, clearOthers);\n      event.preventDefault();\n    }\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    const { value, id, onNavigate, ...restProps } = this.props;\n    return (\n      <input\n        {...restProps}\n        ref={(instance) => {\n          if (instance) {\n            instance.focus();\n            instance.setAttribute('style', `width:${Math.max(instance.width, 150)}px`);\n          }\n        }}\n        type=\"text\"\n        className=\"gf-form-input\"\n        value={value ?? ''}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        placeholder=\"Enter variable value\"\n      />\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,aAAT,QAA8B,UAA9B;;AAQA,OAAO,MAAMC,aAAN,SAA4BF,aAA5B,CAAiD;EAAA;IAAA;;IAAA,mCACzCG,KAAD,IAAkD;MAC5D,IAAIF,aAAa,CAACE,KAAK,CAACC,OAAP,CAAjB,EAAkC;QAChC,MAAMC,WAAW,GAAGF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,OAAvB,IAAkCJ,KAAK,CAACK,QAA5D;QACA,KAAKC,KAAL,CAAWC,UAAX,CAAsBP,KAAK,CAACC,OAA5B,EAAsDC,WAAtD;QACAF,KAAK,CAACQ,cAAN;MACD;IACF,CAPqD;;IAAA,kCAS1CR,KAAD,IAAgD;MACzD,KAAKM,KAAL,CAAWG,QAAX,CAAoBT,KAAK,CAACU,MAAN,CAAaC,KAAjC;IACD,CAXqD;EAAA;;EAatDC,MAAM,GAAG;IACP,oBAAgD,KAAKN,KAArD;IAAA,MAAM;MAAEK;IAAF,CAAN;IAAA,MAAkCE,SAAlC;;IACA,oBACE,gCACMA,SADN;MAEE,GAAG,EAAGC,QAAD,IAAc;QACjB,IAAIA,QAAJ,EAAc;UACZA,QAAQ,CAACC,KAAT;UACAD,QAAQ,CAACE,YAAT,CAAsB,OAAtB,EAAgC,SAAQC,IAAI,CAACC,GAAL,CAASJ,QAAQ,CAACK,KAAlB,EAAyB,GAAzB,CAA8B,IAAtE;QACD;MACF,CAPH;MAQE,IAAI,EAAC,MARP;MASE,SAAS,EAAC,eATZ;MAUE,KAAK,EAAER,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,EAVlB;MAWE,QAAQ,EAAE,KAAKF,QAXjB;MAYE,SAAS,EAAE,KAAKW,SAZlB;MAaE,WAAW,EAAC;IAbd,GADF;EAiBD;;AAhCqD"},"metadata":{},"sourceType":"module"}