{"ast":null,"code":"export const defaultPipelineVariable = name => ({\n  name,\n  pipelineAgg: ''\n});\n/**\n * Given an array of pipeline variables generates a new unique pipeline variable name in the form of `var{n}`.\n * The value for `n` is calculated based on the variables names in pipelineVars matching `var{n}`.\n */\n\nexport const generatePipelineVariableName = pipelineVars => `var${Math.max(0, ...pipelineVars.map(v => {\n  var _v$name$match;\n\n  return parseInt(((_v$name$match = v.name.match('^var(\\\\d+)$')) === null || _v$name$match === void 0 ? void 0 : _v$name$match[1]) || '0', 10);\n})) + 1}`;","map":{"version":3,"names":["defaultPipelineVariable","name","pipelineAgg","generatePipelineVariableName","pipelineVars","Math","max","map","v","parseInt","match"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/utils.ts"],"sourcesContent":["import { PipelineVariable } from '../../aggregations';\n\nexport const defaultPipelineVariable = (name: string): PipelineVariable => ({ name, pipelineAgg: '' });\n\n/**\n * Given an array of pipeline variables generates a new unique pipeline variable name in the form of `var{n}`.\n * The value for `n` is calculated based on the variables names in pipelineVars matching `var{n}`.\n */\nexport const generatePipelineVariableName = (pipelineVars: PipelineVariable[]): string =>\n  `var${Math.max(0, ...pipelineVars.map((v) => parseInt(v.name.match('^var(\\\\d+)$')?.[1] || '0', 10))) + 1}`;\n"],"mappings":"AAEA,OAAO,MAAMA,uBAAuB,GAAIC,IAAD,KAAqC;EAAEA,IAAF;EAAQC,WAAW,EAAE;AAArB,CAArC,CAAhC;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,4BAA4B,GAAIC,YAAD,IACzC,MAAKC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,GAAGF,YAAY,CAACG,GAAb,CAAkBC,CAAD;EAAA;;EAAA,OAAOC,QAAQ,CAAC,kBAAAD,CAAC,CAACP,IAAF,CAAOS,KAAP,CAAa,aAAb,iEAA8B,CAA9B,MAAoC,GAArC,EAA0C,EAA1C,CAAf;AAAA,CAAjB,CAAf,IAAiG,CAAE,EADpG"},"metadata":{},"sourceType":"module"}