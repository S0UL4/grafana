{"ast":null,"code":"import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React, { useCallback } from 'react';\nimport { FieldColorModeId } from '@grafana/data';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport { Icon, useStyles, useTheme, VizLegend, VizLegendListItem } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getStyles() {\n  return {\n    item: css`\n      label: LegendItem;\n      flex-grow: 0;\n    `,\n    legend: css`\n      label: Legend;\n      pointer-events: all;\n    `\n  };\n}\n\nexport const Legend = function Legend(props) {\n  const {\n    nodes,\n    onSort,\n    sort,\n    sortable\n  } = props;\n  const theme = useTheme();\n  const styles = useStyles(getStyles);\n  const colorItems = getColorLegendItems(nodes, theme);\n  const onClick = useCallback(item => {\n    onSort({\n      field: item.data.field,\n      ascending: item.data.field === (sort === null || sort === void 0 ? void 0 : sort.field) ? !(sort !== null && sort !== void 0 && sort.ascending) : false\n    });\n  }, [sort, onSort]);\n  return /*#__PURE__*/_jsx(VizLegend, {\n    className: styles.legend,\n    displayMode: LegendDisplayMode.List,\n    placement: 'bottom',\n    items: colorItems,\n    itemRenderer: item => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(VizLegendListItem, {\n          item: item,\n          className: styles.item,\n          onLabelClick: sortable ? onClick : undefined\n        }), sortable && ((sort === null || sort === void 0 ? void 0 : sort.field) === item.data.field ? /*#__PURE__*/_jsx(Icon, {\n          name: sort.ascending ? 'arrow-up' : 'arrow-down'\n        }) : '')]\n      });\n    }\n  });\n};\n\nfunction getColorLegendItems(nodes, theme) {\n  if (!nodes.length) {\n    return [];\n  }\n\n  const fields = [nodes[0].mainStat, nodes[0].secondaryStat].filter(identity);\n  const node = nodes.find(n => n.arcSections.length > 0);\n\n  if (node) {\n    var _config, _config$color;\n\n    if (((_config = node.arcSections[0].config) === null || _config === void 0 ? void 0 : (_config$color = _config.color) === null || _config$color === void 0 ? void 0 : _config$color.mode) === FieldColorModeId.Fixed) {\n      // We assume in this case we have a set of fixed colors which map neatly into a basic legend.\n      // Lets collect and deduplicate as there isn't a requirement for 0 size arc section to be defined\n      fields.push(...new Set(nodes.map(n => n.arcSections).flat()));\n    }\n  }\n\n  if (nodes[0].color) {\n    fields.push(nodes[0].color);\n  }\n\n  return fields.map(f => {\n    var _f$config$color, _f$config$color2, _f$config$color4;\n\n    const item = {\n      label: f.config.displayName || f.name,\n      yAxis: 0,\n      data: {\n        field: f\n      }\n    };\n\n    if (((_f$config$color = f.config.color) === null || _f$config$color === void 0 ? void 0 : _f$config$color.mode) === FieldColorModeId.Fixed && (_f$config$color2 = f.config.color) !== null && _f$config$color2 !== void 0 && _f$config$color2.fixedColor) {\n      var _f$config$color3;\n\n      item.color = theme.visualization.getColorByName(((_f$config$color3 = f.config.color) === null || _f$config$color3 === void 0 ? void 0 : _f$config$color3.fixedColor) || '');\n    } else if ((_f$config$color4 = f.config.color) !== null && _f$config$color4 !== void 0 && _f$config$color4.mode) {\n      var _f$config$color5;\n\n      item.gradient = (_f$config$color5 = f.config.color) === null || _f$config$color5 === void 0 ? void 0 : _f$config$color5.mode;\n    }\n\n    if (!(item.color || item.gradient)) {\n      // Defaults to gray color\n      item.color = theme.visualization.getColorByName('');\n    }\n\n    return item;\n  });\n}","map":{"version":3,"names":["css","identity","React","useCallback","FieldColorModeId","LegendDisplayMode","Icon","useStyles","useTheme","VizLegend","VizLegendListItem","getStyles","item","legend","Legend","props","nodes","onSort","sort","sortable","theme","styles","colorItems","getColorLegendItems","onClick","field","data","ascending","List","undefined","length","fields","mainStat","secondaryStat","filter","node","find","n","arcSections","config","color","mode","Fixed","push","Set","map","flat","f","label","displayName","name","yAxis","fixedColor","visualization","getColorByName","gradient"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/Legend.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React, { useCallback } from 'react';\n\nimport { Field, FieldColorModeId, GrafanaTheme } from '@grafana/data';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport { Icon, useStyles, useTheme, VizLegend, VizLegendItem, VizLegendListItem } from '@grafana/ui';\n\nimport { Config } from './layout';\nimport { NodeDatum } from './types';\n\nfunction getStyles() {\n  return {\n    item: css`\n      label: LegendItem;\n      flex-grow: 0;\n    `,\n\n    legend: css`\n      label: Legend;\n      pointer-events: all;\n    `,\n  };\n}\n\ninterface Props {\n  nodes: NodeDatum[];\n  onSort: (sort: Config['sort']) => void;\n  sort?: Config['sort'];\n  sortable: boolean;\n}\n\nexport const Legend = function Legend(props: Props) {\n  const { nodes, onSort, sort, sortable } = props;\n\n  const theme = useTheme();\n  const styles = useStyles(getStyles);\n  const colorItems = getColorLegendItems(nodes, theme);\n\n  const onClick = useCallback(\n    (item) => {\n      onSort({\n        field: item.data!.field,\n        ascending: item.data!.field === sort?.field ? !sort?.ascending : false,\n      });\n    },\n    [sort, onSort]\n  );\n\n  return (\n    <VizLegend<ItemData>\n      className={styles.legend}\n      displayMode={LegendDisplayMode.List}\n      placement={'bottom'}\n      items={colorItems}\n      itemRenderer={(item) => {\n        return (\n          <>\n            <VizLegendListItem item={item} className={styles.item} onLabelClick={sortable ? onClick : undefined} />\n            {sortable &&\n              (sort?.field === item.data!.field ? <Icon name={sort!.ascending ? 'arrow-up' : 'arrow-down'} /> : '')}\n          </>\n        );\n      }}\n    />\n  );\n};\n\ninterface ItemData {\n  field: Field;\n}\n\nfunction getColorLegendItems(nodes: NodeDatum[], theme: GrafanaTheme): Array<VizLegendItem<ItemData>> {\n  if (!nodes.length) {\n    return [];\n  }\n  const fields = [nodes[0].mainStat, nodes[0].secondaryStat].filter(identity) as Field[];\n\n  const node = nodes.find((n) => n.arcSections.length > 0);\n  if (node) {\n    if (node.arcSections[0]!.config?.color?.mode === FieldColorModeId.Fixed) {\n      // We assume in this case we have a set of fixed colors which map neatly into a basic legend.\n\n      // Lets collect and deduplicate as there isn't a requirement for 0 size arc section to be defined\n      fields.push(...new Set(nodes.map((n) => n.arcSections).flat()));\n    }\n  }\n\n  if (nodes[0].color) {\n    fields.push(nodes[0].color);\n  }\n\n  return fields.map((f) => {\n    const item: VizLegendItem = {\n      label: f.config.displayName || f.name,\n      yAxis: 0,\n      data: { field: f },\n    };\n    if (f.config.color?.mode === FieldColorModeId.Fixed && f.config.color?.fixedColor) {\n      item.color = theme.visualization.getColorByName(f.config.color?.fixedColor || '');\n    } else if (f.config.color?.mode) {\n      item.gradient = f.config.color?.mode;\n    }\n\n    if (!(item.color || item.gradient)) {\n      // Defaults to gray color\n      item.color = theme.visualization.getColorByName('');\n    }\n\n    return item;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}