{"ast":null,"code":"var _Button;\n\nimport React from 'react';\nimport { Input, Field, FieldSet, Button, Form } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst OrgProfile = ({\n  onSubmit,\n  orgName\n}) => {\n  const canWriteOrg = contextSrv.hasPermission(AccessControlAction.OrgsWrite);\n  return /*#__PURE__*/_jsx(Form, {\n    defaultValues: {\n      orgName\n    },\n    onSubmit: ({\n      orgName\n    }) => onSubmit(orgName),\n    children: ({\n      register\n    }) => /*#__PURE__*/_jsxs(FieldSet, {\n      label: \"Organization profile\",\n      disabled: !canWriteOrg,\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"Organization name\",\n        children: /*#__PURE__*/_jsx(Input, Object.assign({\n          id: \"org-name-input\",\n          type: \"text\"\n        }, register('orgName', {\n          required: true\n        })))\n      }), _Button || (_Button = /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        children: \"Update organization name\"\n      }))]\n    })\n  });\n};\n\nexport default OrgProfile;","map":{"version":3,"names":["React","Input","Field","FieldSet","Button","Form","contextSrv","AccessControlAction","OrgProfile","onSubmit","orgName","canWriteOrg","hasPermission","OrgsWrite","register","required"],"sources":["/home/soula/grafana/public/app/features/org/OrgProfile.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { Input, Field, FieldSet, Button, Form } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport interface Props {\n  orgName: string;\n  onSubmit: (orgName: string) => void;\n}\n\ninterface FormDTO {\n  orgName: string;\n}\n\nconst OrgProfile: FC<Props> = ({ onSubmit, orgName }) => {\n  const canWriteOrg = contextSrv.hasPermission(AccessControlAction.OrgsWrite);\n\n  return (\n    <Form defaultValues={{ orgName }} onSubmit={({ orgName }: FormDTO) => onSubmit(orgName)}>\n      {({ register }) => (\n        <FieldSet label=\"Organization profile\" disabled={!canWriteOrg}>\n          <Field label=\"Organization name\">\n            <Input id=\"org-name-input\" type=\"text\" {...register('orgName', { required: true })} />\n          </Field>\n\n          <Button type=\"submit\">Update organization name</Button>\n        </FieldSet>\n      )}\n    </Form>\n  );\n};\n\nexport default OrgProfile;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,MAAjC,EAAyCC,IAAzC,QAAqD,aAArD;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,mBAAT,QAAoC,WAApC;;;;AAWA,MAAMC,UAAqB,GAAG,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KAA2B;EACvD,MAAMC,WAAW,GAAGL,UAAU,CAACM,aAAX,CAAyBL,mBAAmB,CAACM,SAA7C,CAApB;EAEA,oBACE,KAAC,IAAD;IAAM,aAAa,EAAE;MAAEH;IAAF,CAArB;IAAkC,QAAQ,EAAE,CAAC;MAAEA;IAAF,CAAD,KAA0BD,QAAQ,CAACC,OAAD,CAA9E;IAAA,UACG,CAAC;MAAEI;IAAF,CAAD,kBACC,MAAC,QAAD;MAAU,KAAK,EAAC,sBAAhB;MAAuC,QAAQ,EAAE,CAACH,WAAlD;MAAA,wBACE,KAAC,KAAD;QAAO,KAAK,EAAC,mBAAb;QAAA,uBACE,KAAC,KAAD;UAAO,EAAE,EAAC,gBAAV;UAA2B,IAAI,EAAC;QAAhC,GAA2CG,QAAQ,CAAC,SAAD,EAAY;UAAEC,QAAQ,EAAE;QAAZ,CAAZ,CAAnD;MADF,EADF,qCAKE,KAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA,EALF;IAAA;EAFJ,EADF;AAaD,CAhBD;;AAkBA,eAAeP,UAAf"},"metadata":{},"sourceType":"module"}