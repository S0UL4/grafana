{"ast":null,"code":"import angular from 'angular';\nimport $ from 'jquery';\nimport coreModule from './core_module';\ncoreModule.directive('bsTooltip', ['$parse', '$compile', function ($parse, $compile) {\n  return {\n    restrict: 'A',\n    scope: true,\n    link: function postLink(scope, element, attrs) {\n      var getter = $parse(attrs.bsTooltip),\n          value = getter(scope);\n      scope.$watch(attrs.bsTooltip, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          value = newValue;\n        }\n      }); // Grafana change, always hide other tooltips\n\n      if (true) {\n        element.on('show', function (ev) {\n          $('.tooltip.in').each(function () {\n            var $this = $(this),\n                tooltip = $this.data('tooltip');\n\n            if (tooltip && !tooltip.$element.is(element)) {\n              $this.tooltip('hide');\n            }\n          });\n        });\n      }\n\n      element.tooltip({\n        title: function () {\n          return angular.isFunction(value) ? value.apply(null, arguments) : value;\n        },\n        html: true,\n        container: 'body' // Grafana change\n\n      });\n      var tooltip = element.data('tooltip');\n\n      tooltip.show = function () {\n        var r = $.fn.tooltip.Constructor.prototype.show.apply(this, arguments);\n        this.tip().data('tooltip', this);\n        return r;\n      };\n\n      scope._tooltip = function (event) {\n        element.tooltip(event);\n      };\n\n      scope.hide = function () {\n        element.tooltip('hide');\n      };\n\n      scope.show = function () {\n        element.tooltip('show');\n      };\n\n      scope.dismiss = scope.hide;\n    }\n  };\n}]);","map":{"version":3,"names":["angular","$","coreModule","directive","$parse","$compile","restrict","scope","link","postLink","element","attrs","getter","bsTooltip","value","$watch","newValue","oldValue","on","ev","each","$this","tooltip","data","$element","is","title","isFunction","apply","arguments","html","container","show","r","fn","Constructor","prototype","tip","_tooltip","event","hide","dismiss"],"sources":["/home/soula/grafana/public/app/angular/bsTooltip.ts"],"sourcesContent":["import angular from 'angular';\nimport $ from 'jquery';\n\nimport coreModule from './core_module';\n\ncoreModule.directive('bsTooltip', [\n  '$parse',\n  '$compile',\n  function ($parse: any, $compile: any) {\n    return {\n      restrict: 'A',\n      scope: true,\n      link: function postLink(scope: any, element: any, attrs: any) {\n        var getter = $parse(attrs.bsTooltip),\n          value = getter(scope);\n        scope.$watch(attrs.bsTooltip, function (newValue: any, oldValue: any) {\n          if (newValue !== oldValue) {\n            value = newValue;\n          }\n        });\n        // Grafana change, always hide other tooltips\n        if (true) {\n          element.on('show', function (ev: any) {\n            $('.tooltip.in').each(function () {\n              var $this = $(this),\n                tooltip = $this.data('tooltip');\n              if (tooltip && !tooltip.$element.is(element)) {\n                $this.tooltip('hide');\n              }\n            });\n          });\n        }\n        element.tooltip({\n          title: function () {\n            return angular.isFunction(value) ? value.apply(null, arguments) : value;\n          },\n          html: true,\n          container: 'body', // Grafana change\n        });\n        var tooltip = element.data('tooltip');\n        tooltip.show = function () {\n          var r = $.fn.tooltip.Constructor.prototype.show.apply(this, arguments);\n          this.tip().data('tooltip', this);\n          return r;\n        };\n        scope._tooltip = function (event: any) {\n          element.tooltip(event);\n        };\n        scope.hide = function () {\n          element.tooltip('hide');\n        };\n        scope.show = function () {\n          element.tooltip('show');\n        };\n        scope.dismiss = scope.hide;\n      },\n    };\n  },\n]);\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAEAA,UAAU,CAACC,SAAX,CAAqB,WAArB,EAAkC,CAChC,QADgC,EAEhC,UAFgC,EAGhC,UAAUC,MAAV,EAAuBC,QAAvB,EAAsC;EACpC,OAAO;IACLC,QAAQ,EAAE,GADL;IAELC,KAAK,EAAE,IAFF;IAGLC,IAAI,EAAE,SAASC,QAAT,CAAkBF,KAAlB,EAA8BG,OAA9B,EAA4CC,KAA5C,EAAwD;MAC5D,IAAIC,MAAM,GAAGR,MAAM,CAACO,KAAK,CAACE,SAAP,CAAnB;MAAA,IACEC,KAAK,GAAGF,MAAM,CAACL,KAAD,CADhB;MAEAA,KAAK,CAACQ,MAAN,CAAaJ,KAAK,CAACE,SAAnB,EAA8B,UAAUG,QAAV,EAAyBC,QAAzB,EAAwC;QACpE,IAAID,QAAQ,KAAKC,QAAjB,EAA2B;UACzBH,KAAK,GAAGE,QAAR;QACD;MACF,CAJD,EAH4D,CAQ5D;;MACA,IAAI,IAAJ,EAAU;QACRN,OAAO,CAACQ,EAAR,CAAW,MAAX,EAAmB,UAAUC,EAAV,EAAmB;UACpClB,CAAC,CAAC,aAAD,CAAD,CAAiBmB,IAAjB,CAAsB,YAAY;YAChC,IAAIC,KAAK,GAAGpB,CAAC,CAAC,IAAD,CAAb;YAAA,IACEqB,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAW,SAAX,CADZ;;YAEA,IAAID,OAAO,IAAI,CAACA,OAAO,CAACE,QAAR,CAAiBC,EAAjB,CAAoBf,OAApB,CAAhB,EAA8C;cAC5CW,KAAK,CAACC,OAAN,CAAc,MAAd;YACD;UACF,CAND;QAOD,CARD;MASD;;MACDZ,OAAO,CAACY,OAAR,CAAgB;QACdI,KAAK,EAAE,YAAY;UACjB,OAAO1B,OAAO,CAAC2B,UAAR,CAAmBb,KAAnB,IAA4BA,KAAK,CAACc,KAAN,CAAY,IAAZ,EAAkBC,SAAlB,CAA5B,GAA2Df,KAAlE;QACD,CAHa;QAIdgB,IAAI,EAAE,IAJQ;QAKdC,SAAS,EAAE,MALG,CAKK;;MALL,CAAhB;MAOA,IAAIT,OAAO,GAAGZ,OAAO,CAACa,IAAR,CAAa,SAAb,CAAd;;MACAD,OAAO,CAACU,IAAR,GAAe,YAAY;QACzB,IAAIC,CAAC,GAAGhC,CAAC,CAACiC,EAAF,CAAKZ,OAAL,CAAaa,WAAb,CAAyBC,SAAzB,CAAmCJ,IAAnC,CAAwCJ,KAAxC,CAA8C,IAA9C,EAAoDC,SAApD,CAAR;QACA,KAAKQ,GAAL,GAAWd,IAAX,CAAgB,SAAhB,EAA2B,IAA3B;QACA,OAAOU,CAAP;MACD,CAJD;;MAKA1B,KAAK,CAAC+B,QAAN,GAAiB,UAAUC,KAAV,EAAsB;QACrC7B,OAAO,CAACY,OAAR,CAAgBiB,KAAhB;MACD,CAFD;;MAGAhC,KAAK,CAACiC,IAAN,GAAa,YAAY;QACvB9B,OAAO,CAACY,OAAR,CAAgB,MAAhB;MACD,CAFD;;MAGAf,KAAK,CAACyB,IAAN,GAAa,YAAY;QACvBtB,OAAO,CAACY,OAAR,CAAgB,MAAhB;MACD,CAFD;;MAGAf,KAAK,CAACkC,OAAN,GAAgBlC,KAAK,CAACiC,IAAtB;IACD;EA9CI,CAAP;AAgDD,CApD+B,CAAlC"},"metadata":{},"sourceType":"module"}