{"ast":null,"code":"import { getFieldDisplayName, ReducerID } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { getColorDimension, getScaledDimension, getTextDimension, getResourceDimension } from 'app/features/dimensions';\nimport { getScalarDimension } from './scalar';\nexport function getColorDimensionFromData(data, cfg) {\n  if (data !== null && data !== void 0 && data.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getColorDimension(frame, cfg, config.theme2);\n\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n\n  return getColorDimension(undefined, cfg, config.theme2);\n}\nexport function getScaleDimensionFromData(data, cfg) {\n  if (data !== null && data !== void 0 && data.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getScaledDimension(frame, cfg);\n\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n\n  return getScaledDimension(undefined, cfg);\n}\nexport function getScalarDimensionFromData(data, cfg) {\n  if (data !== null && data !== void 0 && data.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getScalarDimension(frame, cfg);\n\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n\n  return getScalarDimension(undefined, cfg);\n}\nexport function getResourceDimensionFromData(data, cfg) {\n  if (data !== null && data !== void 0 && data.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getResourceDimension(frame, cfg);\n\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n\n  return getResourceDimension(undefined, cfg);\n}\nexport function getTextDimensionFromData(data, cfg) {\n  if (data !== null && data !== void 0 && data.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getTextDimension(frame, cfg);\n\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n\n  return getTextDimension(undefined, cfg);\n}\nexport function findField(frame, name) {\n  if (!frame || !(name !== null && name !== void 0 && name.length)) {\n    return undefined;\n  }\n\n  for (const field of frame.fields) {\n    if (name === field.name) {\n      return field;\n    }\n\n    const disp = getFieldDisplayName(field, frame);\n\n    if (name === disp) {\n      return field;\n    }\n  }\n\n  return undefined;\n}\nexport function findFieldIndex(frame, name) {\n  if (!frame || !(name !== null && name !== void 0 && name.length)) {\n    return undefined;\n  }\n\n  for (let i = 0; i < frame.fields.length; i++) {\n    const field = frame.fields[i];\n\n    if (name === field.name) {\n      return i;\n    }\n\n    const disp = getFieldDisplayName(field, frame);\n\n    if (name === disp) {\n      return i;\n    }\n  }\n\n  return undefined;\n}\nexport function getLastNotNullFieldValue(field) {\n  var _field$state;\n\n  const calcs = (_field$state = field.state) === null || _field$state === void 0 ? void 0 : _field$state.calcs;\n\n  if (calcs) {\n    const v = calcs[ReducerID.lastNotNull];\n\n    if (v != null) {\n      return v;\n    }\n  }\n\n  const data = field.values;\n  let idx = data.length - 1;\n\n  while (idx >= 0) {\n    const v = data.get(idx--);\n\n    if (v != null) {\n      return v;\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"names":["getFieldDisplayName","ReducerID","config","getColorDimension","getScaledDimension","getTextDimension","getResourceDimension","getScalarDimension","getColorDimensionFromData","data","cfg","series","field","frame","d","theme2","isAssumed","length","undefined","getScaleDimensionFromData","getScalarDimensionFromData","getResourceDimensionFromData","getTextDimensionFromData","findField","name","fields","disp","findFieldIndex","i","getLastNotNullFieldValue","calcs","state","v","lastNotNull","values","idx","get"],"sources":["/home/soula/grafana/public/app/features/dimensions/utils.ts"],"sourcesContent":["import { DataFrame, PanelData, Field, getFieldDisplayName, ReducerID } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport {\n  getColorDimension,\n  getScaledDimension,\n  getTextDimension,\n  getResourceDimension,\n  ColorDimensionConfig,\n  DimensionSupplier,\n  ResourceDimensionConfig,\n  ScaleDimensionConfig,\n  TextDimensionConfig,\n  ScalarDimensionConfig,\n} from 'app/features/dimensions';\n\nimport { getScalarDimension } from './scalar';\n\nexport function getColorDimensionFromData(\n  data: PanelData | undefined,\n  cfg: ColorDimensionConfig\n): DimensionSupplier<string> {\n  if (data?.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getColorDimension(frame, cfg, config.theme2);\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n  return getColorDimension(undefined, cfg, config.theme2);\n}\n\nexport function getScaleDimensionFromData(\n  data: PanelData | undefined,\n  cfg: ScaleDimensionConfig\n): DimensionSupplier<number> {\n  if (data?.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getScaledDimension(frame, cfg);\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n  return getScaledDimension(undefined, cfg);\n}\n\nexport function getScalarDimensionFromData(\n  data: PanelData | undefined,\n  cfg: ScalarDimensionConfig\n): DimensionSupplier<number> {\n  if (data?.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getScalarDimension(frame, cfg);\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n  return getScalarDimension(undefined, cfg);\n}\n\nexport function getResourceDimensionFromData(\n  data: PanelData | undefined,\n  cfg: ResourceDimensionConfig\n): DimensionSupplier<string> {\n  if (data?.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getResourceDimension(frame, cfg);\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n  return getResourceDimension(undefined, cfg);\n}\n\nexport function getTextDimensionFromData(\n  data: PanelData | undefined,\n  cfg: TextDimensionConfig\n): DimensionSupplier<string> {\n  if (data?.series && cfg.field) {\n    for (const frame of data.series) {\n      const d = getTextDimension(frame, cfg);\n      if (!d.isAssumed || data.series.length === 1) {\n        return d;\n      }\n    }\n  }\n  return getTextDimension(undefined, cfg);\n}\n\nexport function findField(frame?: DataFrame, name?: string): Field | undefined {\n  if (!frame || !name?.length) {\n    return undefined;\n  }\n\n  for (const field of frame.fields) {\n    if (name === field.name) {\n      return field;\n    }\n    const disp = getFieldDisplayName(field, frame);\n    if (name === disp) {\n      return field;\n    }\n  }\n  return undefined;\n}\n\nexport function findFieldIndex(frame?: DataFrame, name?: string): number | undefined {\n  if (!frame || !name?.length) {\n    return undefined;\n  }\n\n  for (let i = 0; i < frame.fields.length; i++) {\n    const field = frame.fields[i];\n    if (name === field.name) {\n      return i;\n    }\n    const disp = getFieldDisplayName(field, frame);\n    if (name === disp) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\nexport function getLastNotNullFieldValue<T>(field: Field): T {\n  const calcs = field.state?.calcs;\n  if (calcs) {\n    const v = calcs[ReducerID.lastNotNull];\n    if (v != null) {\n      return v as T;\n    }\n  }\n\n  const data = field.values;\n  let idx = data.length - 1;\n  while (idx >= 0) {\n    const v = data.get(idx--);\n    if (v != null) {\n      return v;\n    }\n  }\n  return undefined as any;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}