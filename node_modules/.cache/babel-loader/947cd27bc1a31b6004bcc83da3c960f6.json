{"ast":null,"code":"var _LinkButton;\n\nimport { css } from '@emotion/css';\nimport React, { createRef } from 'react';\nimport SVG from 'react-inlinesvg';\nimport { Button, InlineField, InlineFieldRow, Input, LinkButton, Popover, PopoverController, useStyles2, useTheme2 } from '@grafana/ui';\nimport { closePopover } from '@grafana/ui/src/utils/closePopover';\nimport { getPublicOrAbsoluteUrl } from '../resource';\nimport { ResourcePickerSize } from '../types';\nimport { ResourcePickerPopover } from './ResourcePickerPopover';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const ResourcePicker = props => {\n  var _Button;\n\n  const {\n    value,\n    src,\n    name,\n    placeholder,\n    onChange,\n    onClear,\n    mediaType,\n    folderName,\n    size,\n    color\n  } = props;\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  const pickerTriggerRef = /*#__PURE__*/createRef();\n\n  const popoverElement = /*#__PURE__*/_jsx(ResourcePickerPopover, {\n    onChange: onChange,\n    value: value,\n    mediaType: mediaType,\n    folderName: folderName\n  });\n\n  let sanitizedSrc = src;\n\n  if (!sanitizedSrc && value) {\n    sanitizedSrc = getPublicOrAbsoluteUrl(value);\n  }\n\n  const colorStyle = color && {\n    fill: theme.visualization.getColorByName(color)\n  };\n\n  const renderSmallResourcePicker = () => {\n    if (value && sanitizedSrc) {\n      return /*#__PURE__*/_jsx(SVG, {\n        src: sanitizedSrc,\n        className: styles.icon,\n        style: Object.assign({}, colorStyle)\n      });\n    } else {\n      return _LinkButton || (_LinkButton = /*#__PURE__*/_jsx(LinkButton, {\n        variant: \"primary\",\n        fill: \"text\",\n        size: \"sm\",\n        children: \"Set icon\"\n      }));\n    }\n  };\n\n  const renderNormalResourcePicker = () => /*#__PURE__*/_jsx(InlineFieldRow, {\n    children: /*#__PURE__*/_jsx(InlineField, {\n      label: null,\n      grow: true,\n      children: /*#__PURE__*/_jsx(Input, {\n        value: name,\n        placeholder: placeholder,\n        readOnly: true,\n        prefix: sanitizedSrc && /*#__PURE__*/_jsx(SVG, {\n          src: sanitizedSrc,\n          className: styles.icon,\n          style: Object.assign({}, colorStyle)\n        }),\n        suffix: _Button || (_Button = /*#__PURE__*/_jsx(Button, {\n          icon: \"times\",\n          variant: \"secondary\",\n          fill: \"text\",\n          size: \"sm\",\n          onClick: onClear\n        }))\n      })\n    })\n  });\n\n  return /*#__PURE__*/_jsx(PopoverController, {\n    content: popoverElement,\n    children: (showPopper, hidePopper, popperProps) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [pickerTriggerRef.current && /*#__PURE__*/_jsx(Popover, Object.assign({}, popperProps, {\n          referenceElement: pickerTriggerRef.current,\n          onMouseEnter: showPopper,\n          onKeyDown: event => {\n            closePopover(event, hidePopper);\n          }\n        })), /*#__PURE__*/_jsxs(\"div\", {\n          ref: pickerTriggerRef,\n          onClick: showPopper,\n          className: styles.pointer,\n          children: [size === ResourcePickerSize.SMALL && renderSmallResourcePicker(), size === ResourcePickerSize.NORMAL && renderNormalResourcePicker()]\n        })]\n      });\n    }\n  });\n};\n\nconst getStyles = theme => ({\n  pointer: css`\n    cursor: pointer;\n    input[readonly] {\n      cursor: pointer;\n    }\n  `,\n  icon: css`\n    vertical-align: middle;\n    display: inline-block;\n    fill: currentColor;\n    width: 25px;\n  `\n});","map":{"version":3,"names":["css","React","createRef","SVG","Button","InlineField","InlineFieldRow","Input","LinkButton","Popover","PopoverController","useStyles2","useTheme2","closePopover","getPublicOrAbsoluteUrl","ResourcePickerSize","ResourcePickerPopover","ResourcePicker","props","value","src","name","placeholder","onChange","onClear","mediaType","folderName","size","color","styles","getStyles","theme","pickerTriggerRef","popoverElement","sanitizedSrc","colorStyle","fill","visualization","getColorByName","renderSmallResourcePicker","icon","renderNormalResourcePicker","showPopper","hidePopper","popperProps","current","event","pointer","SMALL","NORMAL"],"sources":["/home/soula/grafana/public/app/features/dimensions/editors/ResourcePicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { createRef } from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport {\n  Button,\n  InlineField,\n  InlineFieldRow,\n  Input,\n  LinkButton,\n  Popover,\n  PopoverController,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport { closePopover } from '@grafana/ui/src/utils/closePopover';\n\nimport { getPublicOrAbsoluteUrl } from '../resource';\nimport { MediaType, ResourceFolderName, ResourcePickerSize } from '../types';\n\nimport { ResourcePickerPopover } from './ResourcePickerPopover';\n\ninterface Props {\n  onChange: (value?: string) => void;\n  mediaType: MediaType;\n  folderName: ResourceFolderName;\n  size: ResourcePickerSize;\n  onClear?: (event: React.MouseEvent) => void;\n  value?: string; //img/icons/unicons/0-plus.svg\n  src?: string;\n  name?: string;\n  placeholder?: string;\n  color?: string;\n}\n\nexport const ResourcePicker = (props: Props) => {\n  const { value, src, name, placeholder, onChange, onClear, mediaType, folderName, size, color } = props;\n\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const pickerTriggerRef = createRef<any>();\n  const popoverElement = (\n    <ResourcePickerPopover onChange={onChange} value={value} mediaType={mediaType} folderName={folderName} />\n  );\n\n  let sanitizedSrc = src;\n  if (!sanitizedSrc && value) {\n    sanitizedSrc = getPublicOrAbsoluteUrl(value);\n  }\n\n  const colorStyle = color && {\n    fill: theme.visualization.getColorByName(color),\n  };\n\n  const renderSmallResourcePicker = () => {\n    if (value && sanitizedSrc) {\n      return <SVG src={sanitizedSrc} className={styles.icon} style={{ ...colorStyle }} />;\n    } else {\n      return (\n        <LinkButton variant=\"primary\" fill=\"text\" size=\"sm\">\n          Set icon\n        </LinkButton>\n      );\n    }\n  };\n\n  const renderNormalResourcePicker = () => (\n    <InlineFieldRow>\n      <InlineField label={null} grow>\n        <Input\n          value={name}\n          placeholder={placeholder}\n          readOnly={true}\n          prefix={sanitizedSrc && <SVG src={sanitizedSrc} className={styles.icon} style={{ ...colorStyle }} />}\n          suffix={<Button icon=\"times\" variant=\"secondary\" fill=\"text\" size=\"sm\" onClick={onClear} />}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n\n  return (\n    <PopoverController content={popoverElement}>\n      {(showPopper, hidePopper, popperProps) => {\n        return (\n          <>\n            {pickerTriggerRef.current && (\n              <Popover\n                {...popperProps}\n                referenceElement={pickerTriggerRef.current}\n                onMouseEnter={showPopper}\n                onKeyDown={(event: any) => {\n                  closePopover(event, hidePopper);\n                }}\n              />\n            )}\n\n            <div ref={pickerTriggerRef} onClick={showPopper} className={styles.pointer}>\n              {size === ResourcePickerSize.SMALL && renderSmallResourcePicker()}\n              {size === ResourcePickerSize.NORMAL && renderNormalResourcePicker()}\n            </div>\n          </>\n        );\n      }}\n    </PopoverController>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  pointer: css`\n    cursor: pointer;\n    input[readonly] {\n      cursor: pointer;\n    }\n  `,\n  icon: css`\n    vertical-align: middle;\n    display: inline-block;\n    fill: currentColor;\n    width: 25px;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}