{"ast":null,"code":"const _excluded = [\"index\", \"id\", \"state\", \"global\", \"current\", \"options\", \"rootStateKey\"],\n      _excluded2 = [\"current\", \"options\", \"query\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { cloneDeep } from 'lodash';\nimport { dispatch } from '../../../store/store';\nimport { optionPickerFactory } from '../pickers';\nimport { setOptionAsCurrent, setOptionFromUrl } from '../state/actions';\nimport { toKeyedVariableIdentifier } from '../utils';\nimport { ConstantVariableEditor } from './ConstantVariableEditor';\nimport { updateConstantVariableOptions } from './actions';\nimport { constantVariableReducer, initialConstantVariableModelState } from './reducer';\nexport const createConstantVariableAdapter = () => {\n  return {\n    id: 'constant',\n    description: 'Define a hidden constant variable, useful for metric prefixes in dashboards you want to share.',\n    name: 'Constant',\n    initialState: initialConstantVariableModelState,\n    reducer: constantVariableReducer,\n    picker: optionPickerFactory(),\n    editor: ConstantVariableEditor,\n    dependsOn: () => {\n      return false;\n    },\n    setValue: async (variable, option, emitChanges = false) => {\n      await dispatch(setOptionAsCurrent(toKeyedVariableIdentifier(variable), option, emitChanges));\n    },\n    setValueFromUrl: async (variable, urlValue) => {\n      await dispatch(setOptionFromUrl(toKeyedVariableIdentifier(variable), urlValue));\n    },\n    updateOptions: async variable => {\n      await dispatch(updateConstantVariableOptions(toKeyedVariableIdentifier(variable)));\n    },\n    getSaveModel: variable => {\n      const _cloneDeep = cloneDeep(variable),\n            rest = _objectWithoutPropertiesLoose(_cloneDeep, _excluded);\n\n      return rest;\n    },\n    getValueForUrl: variable => {\n      return variable.current.value;\n    },\n    beforeAdding: model => {\n      const _cloneDeep2 = cloneDeep(model),\n            {\n        query\n      } = _cloneDeep2,\n            rest = _objectWithoutPropertiesLoose(_cloneDeep2, _excluded2);\n\n      const option = {\n        selected: true,\n        text: query,\n        value: query\n      };\n      return Object.assign({}, rest, {\n        current: option,\n        options: [option],\n        query\n      });\n    }\n  };\n};","map":{"version":3,"names":["cloneDeep","dispatch","optionPickerFactory","setOptionAsCurrent","setOptionFromUrl","toKeyedVariableIdentifier","ConstantVariableEditor","updateConstantVariableOptions","constantVariableReducer","initialConstantVariableModelState","createConstantVariableAdapter","id","description","name","initialState","reducer","picker","editor","dependsOn","setValue","variable","option","emitChanges","setValueFromUrl","urlValue","updateOptions","getSaveModel","rest","getValueForUrl","current","value","beforeAdding","model","query","selected","text","options"],"sources":["/home/soula/grafana/public/app/features/variables/constant/adapter.ts"],"sourcesContent":["import { cloneDeep } from 'lodash';\n\nimport { dispatch } from '../../../store/store';\nimport { VariableAdapter } from '../adapters';\nimport { optionPickerFactory } from '../pickers';\nimport { setOptionAsCurrent, setOptionFromUrl } from '../state/actions';\nimport { ConstantVariableModel } from '../types';\nimport { toKeyedVariableIdentifier } from '../utils';\n\nimport { ConstantVariableEditor } from './ConstantVariableEditor';\nimport { updateConstantVariableOptions } from './actions';\nimport { constantVariableReducer, initialConstantVariableModelState } from './reducer';\n\nexport const createConstantVariableAdapter = (): VariableAdapter<ConstantVariableModel> => {\n  return {\n    id: 'constant',\n    description: 'Define a hidden constant variable, useful for metric prefixes in dashboards you want to share.',\n    name: 'Constant',\n    initialState: initialConstantVariableModelState,\n    reducer: constantVariableReducer,\n    picker: optionPickerFactory<ConstantVariableModel>(),\n    editor: ConstantVariableEditor,\n    dependsOn: () => {\n      return false;\n    },\n    setValue: async (variable, option, emitChanges = false) => {\n      await dispatch(setOptionAsCurrent(toKeyedVariableIdentifier(variable), option, emitChanges));\n    },\n    setValueFromUrl: async (variable, urlValue) => {\n      await dispatch(setOptionFromUrl(toKeyedVariableIdentifier(variable), urlValue));\n    },\n    updateOptions: async (variable) => {\n      await dispatch(updateConstantVariableOptions(toKeyedVariableIdentifier(variable)));\n    },\n    getSaveModel: (variable) => {\n      const { index, id, state, global, current, options, rootStateKey, ...rest } = cloneDeep(variable);\n      return rest;\n    },\n    getValueForUrl: (variable) => {\n      return variable.current.value;\n    },\n    beforeAdding: (model) => {\n      const { current, options, query, ...rest } = cloneDeep(model);\n      const option = { selected: true, text: query, value: query };\n\n      return { ...rest, current: option, options: [option], query };\n    },\n  };\n};\n"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,SAASC,mBAAT,QAAoC,YAApC;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,kBAArD;AAEA,SAASC,yBAAT,QAA0C,UAA1C;AAEA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,6BAAT,QAA8C,WAA9C;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,WAA3E;AAEA,OAAO,MAAMC,6BAA6B,GAAG,MAA8C;EACzF,OAAO;IACLC,EAAE,EAAE,UADC;IAELC,WAAW,EAAE,gGAFR;IAGLC,IAAI,EAAE,UAHD;IAILC,YAAY,EAAEL,iCAJT;IAKLM,OAAO,EAAEP,uBALJ;IAMLQ,MAAM,EAAEd,mBAAmB,EANtB;IAOLe,MAAM,EAAEX,sBAPH;IAQLY,SAAS,EAAE,MAAM;MACf,OAAO,KAAP;IACD,CAVI;IAWLC,QAAQ,EAAE,OAAOC,QAAP,EAAiBC,MAAjB,EAAyBC,WAAW,GAAG,KAAvC,KAAiD;MACzD,MAAMrB,QAAQ,CAACE,kBAAkB,CAACE,yBAAyB,CAACe,QAAD,CAA1B,EAAsCC,MAAtC,EAA8CC,WAA9C,CAAnB,CAAd;IACD,CAbI;IAcLC,eAAe,EAAE,OAAOH,QAAP,EAAiBI,QAAjB,KAA8B;MAC7C,MAAMvB,QAAQ,CAACG,gBAAgB,CAACC,yBAAyB,CAACe,QAAD,CAA1B,EAAsCI,QAAtC,CAAjB,CAAd;IACD,CAhBI;IAiBLC,aAAa,EAAE,MAAOL,QAAP,IAAoB;MACjC,MAAMnB,QAAQ,CAACM,6BAA6B,CAACF,yBAAyB,CAACe,QAAD,CAA1B,CAA9B,CAAd;IACD,CAnBI;IAoBLM,YAAY,EAAGN,QAAD,IAAc;MAC1B,mBAA8EpB,SAAS,CAACoB,QAAD,CAAvF;MAAA,MAAqEO,IAArE;;MACA,OAAOA,IAAP;IACD,CAvBI;IAwBLC,cAAc,EAAGR,QAAD,IAAc;MAC5B,OAAOA,QAAQ,CAACS,OAAT,CAAiBC,KAAxB;IACD,CA1BI;IA2BLC,YAAY,EAAGC,KAAD,IAAW;MACvB,oBAA6ChC,SAAS,CAACgC,KAAD,CAAtD;MAAA,MAAM;QAAoBC;MAApB,CAAN;MAAA,MAAoCN,IAApC;;MACA,MAAMN,MAAM,GAAG;QAAEa,QAAQ,EAAE,IAAZ;QAAkBC,IAAI,EAAEF,KAAxB;QAA+BH,KAAK,EAAEG;MAAtC,CAAf;MAEA,yBAAYN,IAAZ;QAAkBE,OAAO,EAAER,MAA3B;QAAmCe,OAAO,EAAE,CAACf,MAAD,CAA5C;QAAsDY;MAAtD;IACD;EAhCI,CAAP;AAkCD,CAnCM"},"metadata":{},"sourceType":"module"}