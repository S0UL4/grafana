{"ast":null,"code":"import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\nimport { useStyles2 } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/** @internal */\nexport const MenuGroup = ({\n  label,\n  ariaLabel,\n  children\n}) => {\n  const styles = useStyles2(getStyles);\n  const labelID = `group-label-${uniqueId()}`;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    role: \"group\",\n    \"aria-labelledby\": !ariaLabel && label ? labelID : undefined,\n    \"aria-label\": ariaLabel,\n    children: [label && /*#__PURE__*/_jsx(\"label\", {\n      id: labelID,\n      className: styles.groupLabel,\n      \"aria-hidden\": true,\n      children: label\n    }), children]\n  });\n};\nMenuGroup.displayName = 'MenuGroup';\n/** @internal */\n\nconst getStyles = theme => {\n  return {\n    groupLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n      padding: ${theme.spacing(0.5, 1)};\n    `\n  };\n};","map":{"version":3,"names":["css","uniqueId","React","useStyles2","MenuGroup","label","ariaLabel","children","styles","getStyles","labelID","undefined","groupLabel","displayName","theme","colors","text","secondary","typography","size","sm","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Menu/MenuGroup.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { MenuItemProps } from './MenuItem';\n\n/** @internal */\nexport interface MenuItemsGroup<T = any> {\n  /** Label for the menu items group */\n  label?: string;\n  /** Aria label for accessibility support */\n  ariaLabel?: string;\n  /** Items of the group */\n  items: Array<MenuItemProps<T>>;\n}\n\n/** @internal */\nexport interface MenuGroupProps extends Partial<MenuItemsGroup> {\n  /** special children prop to pass children elements */\n  children: React.ReactNode;\n}\n\n/** @internal */\nexport const MenuGroup: React.FC<MenuGroupProps> = ({ label, ariaLabel, children }) => {\n  const styles = useStyles2(getStyles);\n  const labelID = `group-label-${uniqueId()}`;\n\n  return (\n    <div role=\"group\" aria-labelledby={!ariaLabel && label ? labelID : undefined} aria-label={ariaLabel}>\n      {label && (\n        <label id={labelID} className={styles.groupLabel} aria-hidden>\n          {label}\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\nMenuGroup.displayName = 'MenuGroup';\n\n/** @internal */\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    groupLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n      padding: ${theme.spacing(0.5, 1)};\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,SAASC,UAAT,QAA2B,cAA3B;;;;AAoBA;AACA,OAAO,MAAMC,SAAmC,GAAG,CAAC;EAAEC,KAAF;EAASC,SAAT;EAAoBC;AAApB,CAAD,KAAoC;EACrF,MAAMC,MAAM,GAAGL,UAAU,CAACM,SAAD,CAAzB;EACA,MAAMC,OAAO,GAAI,eAAcT,QAAQ,EAAG,EAA1C;EAEA,oBACE;IAAK,IAAI,EAAC,OAAV;IAAkB,mBAAiB,CAACK,SAAD,IAAcD,KAAd,GAAsBK,OAAtB,GAAgCC,SAAnE;IAA8E,cAAYL,SAA1F;IAAA,WACGD,KAAK,iBACJ;MAAO,EAAE,EAAEK,OAAX;MAAoB,SAAS,EAAEF,MAAM,CAACI,UAAtC;MAAkD,mBAAlD;MAAA,UACGP;IADH,EAFJ,EAMGE,QANH;EAAA,EADF;AAUD,CAdM;AAePH,SAAS,CAACS,WAAV,GAAwB,WAAxB;AAEA;;AACA,MAAMJ,SAAS,GAAIK,KAAD,IAA0B;EAC1C,OAAO;IACLF,UAAU,EAAEZ,GAAI;AACpB,eAAec,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AAC3C,mBAAmBH,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,iBAAiBN,KAAK,CAACO,OAAN,CAAc,GAAd,EAAmB,CAAnB,CAAsB;AACvC;EALS,CAAP;AAOD,CARD"},"metadata":{},"sourceType":"module"}