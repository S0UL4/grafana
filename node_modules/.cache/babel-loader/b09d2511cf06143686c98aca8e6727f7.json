{"ast":null,"code":"var _h, _UserInviteForm;\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport UserInviteForm from './UserInviteForm';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const UserInvitePage = ({\n  navModel\n}) => {\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsxs(Page.Contents, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-sub-heading\",\n        children: \"Invite user\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"p-b-2\",\n        children: [\"Send invitation or add existing Grafana user to the organization.\", /*#__PURE__*/_jsxs(\"span\", {\n          className: \"highlight-word\",\n          children: [\" \", contextSrv.user.orgName]\n        })]\n      }), _UserInviteForm || (_UserInviteForm = /*#__PURE__*/_jsx(UserInviteForm, {}))]\n    })\n  });\n};\n\nconst mapStateToProps = state => ({\n  navModel: getNavModel(state.navIndex, 'users')\n});\n\nexport default connect(mapStateToProps)(UserInvitePage);","map":{"version":3,"names":["React","connect","Page","contextSrv","getNavModel","UserInviteForm","UserInvitePage","navModel","user","orgName","mapStateToProps","state","navIndex"],"sources":["/home/soula/grafana/public/app/features/org/UserInvitePage.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { NavModel } from '@grafana/data';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types/store';\n\nimport UserInviteForm from './UserInviteForm';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport const UserInvitePage: FC<Props> = ({ navModel }) => {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <h3 className=\"page-sub-heading\">Invite user</h3>\n        <div className=\"p-b-2\">\n          Send invitation or add existing Grafana user to the organization.\n          <span className=\"highlight-word\"> {contextSrv.user.orgName}</span>\n        </div>\n        <UserInviteForm />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'users'),\n});\n\nexport default connect(mapStateToProps)(UserInvitePage);\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAMA,OAAO,MAAMC,cAAyB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAkB;EACzD,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEA,QAAhB;IAAA,uBACE,MAAC,IAAD,CAAM,QAAN;MAAA,oCACE;QAAI,SAAS,EAAC,kBAAd;QAAA;MAAA,EADF,gBAEE;QAAK,SAAS,EAAC,OAAf;QAAA,6FAEE;UAAM,SAAS,EAAC,gBAAhB;UAAA,gBAAmCJ,UAAU,CAACK,IAAX,CAAgBC,OAAnD;QAAA,EAFF;MAAA,EAFF,qDAME,KAAC,cAAD,KANF;IAAA;EADF,EADF;AAYD,CAbM;;AAeP,MAAMC,eAAe,GAAIC,KAAD,KAAwB;EAC9CJ,QAAQ,EAAEH,WAAW,CAACO,KAAK,CAACC,QAAP,EAAiB,OAAjB;AADyB,CAAxB,CAAxB;;AAIA,eAAeX,OAAO,CAACS,eAAD,CAAP,CAAyBJ,cAAzB,CAAf"},"metadata":{},"sourceType":"module"}