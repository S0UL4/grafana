{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useUpdateEffect } from 'react-use';\nimport { reportInteraction } from '@grafana/runtime';\nimport { ReactUtils, stylesFactory, useTheme } from '@grafana/ui';\nimport { QueryOperationRowHeader } from './QueryOperationRowHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const QueryOperationRow = ({\n  children,\n  actions,\n  title,\n  headerElement,\n  onClose,\n  onOpen,\n  isOpen,\n  disabled,\n  draggable,\n  index,\n  id\n}) => {\n  const [isContentVisible, setIsContentVisible] = useState(isOpen !== undefined ? isOpen : true);\n  const theme = useTheme();\n  const styles = getQueryOperationRowStyles(theme);\n  const onRowToggle = useCallback(() => {\n    setIsContentVisible(!isContentVisible);\n  }, [isContentVisible, setIsContentVisible]);\n  const reportDragMousePosition = useCallback(e => {\n    // When drag detected react-beautiful-dnd will preventDefault the event\n    // Ref: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-use-dom-events.md#a-mouse-drag-has-started-and-the-user-is-now-dragging\n    if (e.defaultPrevented) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      var y = e.clientY - rect.top; // report relative mouse position within the header element\n\n      reportInteraction('query_row_reorder_drag_position', {\n        x: x / rect.width,\n        y: y / rect.height,\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }, []);\n  useUpdateEffect(() => {\n    if (isContentVisible) {\n      if (onOpen) {\n        onOpen();\n      }\n    } else {\n      if (onClose) {\n        onClose();\n      }\n    }\n  }, [isContentVisible]);\n  const renderPropArgs = {\n    isOpen: isContentVisible,\n    onOpen: () => {\n      setIsContentVisible(true);\n    },\n    onClose: () => {\n      setIsContentVisible(false);\n    }\n  };\n  const titleElement = title && ReactUtils.renderOrCallToRender(title, renderPropArgs);\n  const actionsElement = actions && ReactUtils.renderOrCallToRender(actions, renderPropArgs);\n  const headerElementRendered = headerElement && ReactUtils.renderOrCallToRender(headerElement, renderPropArgs);\n\n  if (draggable) {\n    return /*#__PURE__*/_jsx(Draggable, {\n      draggableId: id,\n      index: index,\n      children: provided => {\n        return /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", Object.assign({\n            ref: provided.innerRef,\n            className: styles.wrapper\n          }, provided.draggableProps, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(QueryOperationRowHeader, {\n                actionsElement: actionsElement,\n                disabled: disabled,\n                draggable: true,\n                dragHandleProps: provided.dragHandleProps,\n                headerElement: headerElementRendered,\n                isContentVisible: isContentVisible,\n                onRowToggle: onRowToggle,\n                reportDragMousePosition: reportDragMousePosition,\n                titleElement: titleElement\n              })\n            }), isContentVisible && /*#__PURE__*/_jsx(\"div\", {\n              className: styles.content,\n              children: children\n            })]\n          }))\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(QueryOperationRowHeader, {\n      actionsElement: actionsElement,\n      disabled: disabled,\n      draggable: false,\n      headerElement: headerElementRendered,\n      isContentVisible: isContentVisible,\n      onRowToggle: onRowToggle,\n      reportDragMousePosition: reportDragMousePosition,\n      titleElement: titleElement\n    }), isContentVisible && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.content,\n      children: children\n    })]\n  });\n};\nconst getQueryOperationRowStyles = stylesFactory(theme => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    content: css`\n      margin-top: ${theme.spacing.inlineFormMargin};\n      margin-left: ${theme.spacing.lg};\n    `\n  };\n});\nQueryOperationRow.displayName = 'QueryOperationRow';","map":{"version":3,"names":["css","React","useCallback","useState","Draggable","useUpdateEffect","reportInteraction","ReactUtils","stylesFactory","useTheme","QueryOperationRowHeader","QueryOperationRow","children","actions","title","headerElement","onClose","onOpen","isOpen","disabled","draggable","index","id","isContentVisible","setIsContentVisible","undefined","theme","styles","getQueryOperationRowStyles","onRowToggle","reportDragMousePosition","e","defaultPrevented","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","width","height","renderPropArgs","titleElement","renderOrCallToRender","actionsElement","headerElementRendered","provided","innerRef","wrapper","draggableProps","dragHandleProps","content","spacing","md","inlineFormMargin","lg","displayName"],"sources":["/home/soula/grafana/public/app/core/components/QueryOperationRow/QueryOperationRow.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useUpdateEffect } from 'react-use';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { ReactUtils, stylesFactory, useTheme } from '@grafana/ui';\n\nimport { QueryOperationRowHeader } from './QueryOperationRowHeader';\n\ninterface QueryOperationRowProps {\n  index: number;\n  id: string;\n  title?: string;\n  headerElement?: QueryOperationRowRenderProp;\n  actions?: QueryOperationRowRenderProp;\n  onOpen?: () => void;\n  onClose?: () => void;\n  children: React.ReactNode;\n  isOpen?: boolean;\n  draggable?: boolean;\n  disabled?: boolean;\n}\n\nexport type QueryOperationRowRenderProp = ((props: QueryOperationRowRenderProps) => React.ReactNode) | React.ReactNode;\n\nexport interface QueryOperationRowRenderProps {\n  isOpen: boolean;\n  onOpen: () => void;\n  onClose: () => void;\n}\n\nexport const QueryOperationRow: React.FC<QueryOperationRowProps> = ({\n  children,\n  actions,\n  title,\n  headerElement,\n  onClose,\n  onOpen,\n  isOpen,\n  disabled,\n  draggable,\n  index,\n  id,\n}: QueryOperationRowProps) => {\n  const [isContentVisible, setIsContentVisible] = useState(isOpen !== undefined ? isOpen : true);\n  const theme = useTheme();\n  const styles = getQueryOperationRowStyles(theme);\n  const onRowToggle = useCallback(() => {\n    setIsContentVisible(!isContentVisible);\n  }, [isContentVisible, setIsContentVisible]);\n\n  const reportDragMousePosition = useCallback((e) => {\n    // When drag detected react-beautiful-dnd will preventDefault the event\n    // Ref: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-use-dom-events.md#a-mouse-drag-has-started-and-the-user-is-now-dragging\n    if (e.defaultPrevented) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      var y = e.clientY - rect.top;\n\n      // report relative mouse position within the header element\n      reportInteraction('query_row_reorder_drag_position', {\n        x: x / rect.width,\n        y: y / rect.height,\n        width: rect.width,\n        height: rect.height,\n      });\n    }\n  }, []);\n\n  useUpdateEffect(() => {\n    if (isContentVisible) {\n      if (onOpen) {\n        onOpen();\n      }\n    } else {\n      if (onClose) {\n        onClose();\n      }\n    }\n  }, [isContentVisible]);\n\n  const renderPropArgs: QueryOperationRowRenderProps = {\n    isOpen: isContentVisible,\n    onOpen: () => {\n      setIsContentVisible(true);\n    },\n    onClose: () => {\n      setIsContentVisible(false);\n    },\n  };\n\n  const titleElement = title && ReactUtils.renderOrCallToRender(title, renderPropArgs);\n  const actionsElement = actions && ReactUtils.renderOrCallToRender(actions, renderPropArgs);\n  const headerElementRendered = headerElement && ReactUtils.renderOrCallToRender(headerElement, renderPropArgs);\n\n  if (draggable) {\n    return (\n      <Draggable draggableId={id} index={index}>\n        {(provided) => {\n          return (\n            <>\n              <div ref={provided.innerRef} className={styles.wrapper} {...provided.draggableProps}>\n                <div>\n                  <QueryOperationRowHeader\n                    actionsElement={actionsElement}\n                    disabled={disabled}\n                    draggable\n                    dragHandleProps={provided.dragHandleProps}\n                    headerElement={headerElementRendered}\n                    isContentVisible={isContentVisible}\n                    onRowToggle={onRowToggle}\n                    reportDragMousePosition={reportDragMousePosition}\n                    titleElement={titleElement}\n                  />\n                </div>\n                {isContentVisible && <div className={styles.content}>{children}</div>}\n              </div>\n            </>\n          );\n        }}\n      </Draggable>\n    );\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <QueryOperationRowHeader\n        actionsElement={actionsElement}\n        disabled={disabled}\n        draggable={false}\n        headerElement={headerElementRendered}\n        isContentVisible={isContentVisible}\n        onRowToggle={onRowToggle}\n        reportDragMousePosition={reportDragMousePosition}\n        titleElement={titleElement}\n      />\n      {isContentVisible && <div className={styles.content}>{children}</div>}\n    </div>\n  );\n};\n\nconst getQueryOperationRowStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    content: css`\n      margin-top: ${theme.spacing.inlineFormMargin};\n      margin-left: ${theme.spacing.lg};\n    `,\n  };\n});\n\nQueryOperationRow.displayName = 'QueryOperationRow';\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,eAAT,QAAgC,WAAhC;AAGA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,QAApC,QAAoD,aAApD;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;;;;AAwBA,OAAO,MAAMC,iBAAmD,GAAG,CAAC;EAClEC,QADkE;EAElEC,OAFkE;EAGlEC,KAHkE;EAIlEC,aAJkE;EAKlEC,OALkE;EAMlEC,MANkE;EAOlEC,MAPkE;EAQlEC,QARkE;EASlEC,SATkE;EAUlEC,KAVkE;EAWlEC;AAXkE,CAAD,KAYrC;EAC5B,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAACe,MAAM,KAAKO,SAAX,GAAuBP,MAAvB,GAAgC,IAAjC,CAAxD;EACA,MAAMQ,KAAK,GAAGjB,QAAQ,EAAtB;EACA,MAAMkB,MAAM,GAAGC,0BAA0B,CAACF,KAAD,CAAzC;EACA,MAAMG,WAAW,GAAG3B,WAAW,CAAC,MAAM;IACpCsB,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;EACD,CAF8B,EAE5B,CAACA,gBAAD,EAAmBC,mBAAnB,CAF4B,CAA/B;EAIA,MAAMM,uBAAuB,GAAG5B,WAAW,CAAE6B,CAAD,IAAO;IACjD;IACA;IACA,IAAIA,CAAC,CAACC,gBAAN,EAAwB;MACtB,MAAMC,IAAI,GAAGF,CAAC,CAACG,aAAF,CAAgBC,qBAAhB,EAAb;MACA,IAAIC,CAAC,GAAGL,CAAC,CAACM,OAAF,GAAYJ,IAAI,CAACK,IAAzB;MACA,IAAIC,CAAC,GAAGR,CAAC,CAACS,OAAF,GAAYP,IAAI,CAACQ,GAAzB,CAHsB,CAKtB;;MACAnC,iBAAiB,CAAC,iCAAD,EAAoC;QACnD8B,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACS,KADuC;QAEnDH,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACU,MAFuC;QAGnDD,KAAK,EAAET,IAAI,CAACS,KAHuC;QAInDC,MAAM,EAAEV,IAAI,CAACU;MAJsC,CAApC,CAAjB;IAMD;EACF,CAhB0C,EAgBxC,EAhBwC,CAA3C;EAkBAtC,eAAe,CAAC,MAAM;IACpB,IAAIkB,gBAAJ,EAAsB;MACpB,IAAIN,MAAJ,EAAY;QACVA,MAAM;MACP;IACF,CAJD,MAIO;MACL,IAAID,OAAJ,EAAa;QACXA,OAAO;MACR;IACF;EACF,CAVc,EAUZ,CAACO,gBAAD,CAVY,CAAf;EAYA,MAAMqB,cAA4C,GAAG;IACnD1B,MAAM,EAAEK,gBAD2C;IAEnDN,MAAM,EAAE,MAAM;MACZO,mBAAmB,CAAC,IAAD,CAAnB;IACD,CAJkD;IAKnDR,OAAO,EAAE,MAAM;MACbQ,mBAAmB,CAAC,KAAD,CAAnB;IACD;EAPkD,CAArD;EAUA,MAAMqB,YAAY,GAAG/B,KAAK,IAAIP,UAAU,CAACuC,oBAAX,CAAgChC,KAAhC,EAAuC8B,cAAvC,CAA9B;EACA,MAAMG,cAAc,GAAGlC,OAAO,IAAIN,UAAU,CAACuC,oBAAX,CAAgCjC,OAAhC,EAAyC+B,cAAzC,CAAlC;EACA,MAAMI,qBAAqB,GAAGjC,aAAa,IAAIR,UAAU,CAACuC,oBAAX,CAAgC/B,aAAhC,EAA+C6B,cAA/C,CAA/C;;EAEA,IAAIxB,SAAJ,EAAe;IACb,oBACE,KAAC,SAAD;MAAW,WAAW,EAAEE,EAAxB;MAA4B,KAAK,EAAED,KAAnC;MAAA,UACI4B,QAAD,IAAc;QACb,oBACE;UAAA,uBACE;YAAK,GAAG,EAAEA,QAAQ,CAACC,QAAnB;YAA6B,SAAS,EAAEvB,MAAM,CAACwB;UAA/C,GAA4DF,QAAQ,CAACG,cAArE;YAAA,wBACE;cAAA,uBACE,KAAC,uBAAD;gBACE,cAAc,EAAEL,cADlB;gBAEE,QAAQ,EAAE5B,QAFZ;gBAGE,SAAS,MAHX;gBAIE,eAAe,EAAE8B,QAAQ,CAACI,eAJ5B;gBAKE,aAAa,EAAEL,qBALjB;gBAME,gBAAgB,EAAEzB,gBANpB;gBAOE,WAAW,EAAEM,WAPf;gBAQE,uBAAuB,EAAEC,uBAR3B;gBASE,YAAY,EAAEe;cAThB;YADF,EADF,EAcGtB,gBAAgB,iBAAI;cAAK,SAAS,EAAEI,MAAM,CAAC2B,OAAvB;cAAA,UAAiC1C;YAAjC,EAdvB;UAAA;QADF,EADF;MAoBD;IAtBH,EADF;EA0BD;;EAED,oBACE;IAAK,SAAS,EAAEe,MAAM,CAACwB,OAAvB;IAAA,wBACE,KAAC,uBAAD;MACE,cAAc,EAAEJ,cADlB;MAEE,QAAQ,EAAE5B,QAFZ;MAGE,SAAS,EAAE,KAHb;MAIE,aAAa,EAAE6B,qBAJjB;MAKE,gBAAgB,EAAEzB,gBALpB;MAME,WAAW,EAAEM,WANf;MAOE,uBAAuB,EAAEC,uBAP3B;MAQE,YAAY,EAAEe;IARhB,EADF,EAWGtB,gBAAgB,iBAAI;MAAK,SAAS,EAAEI,MAAM,CAAC2B,OAAvB;MAAA,UAAiC1C;IAAjC,EAXvB;EAAA,EADF;AAeD,CA5GM;AA8GP,MAAMgB,0BAA0B,GAAGpB,aAAa,CAAEkB,KAAD,IAAyB;EACxE,OAAO;IACLyB,OAAO,EAAEnD,GAAI;AACjB,uBAAuB0B,KAAK,CAAC6B,OAAN,CAAcC,EAAG;AACxC,KAHS;IAILF,OAAO,EAAEtD,GAAI;AACjB,oBAAoB0B,KAAK,CAAC6B,OAAN,CAAcE,gBAAiB;AACnD,qBAAqB/B,KAAK,CAAC6B,OAAN,CAAcG,EAAG;AACtC;EAPS,CAAP;AASD,CAV+C,CAAhD;AAYA/C,iBAAiB,CAACgD,WAAlB,GAAgC,mBAAhC"},"metadata":{},"sourceType":"module"}