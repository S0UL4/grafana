{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { reportInteraction } from '@grafana/runtime';\nimport { IconButton } from '@grafana/ui';\nimport { NetworkGraphModal } from './NetworkGraphModal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const VariableUsagesButton = ({\n  id,\n  usages,\n  isAdhoc\n}) => {\n  const network = useMemo(() => usages.find(n => n.variable.id === id), [usages, id]);\n\n  if (usages.length === 0 || isAdhoc || !network) {\n    return null;\n  }\n\n  const nodes = network.nodes.map(n => {\n    if (n.label.includes(`$${id}`)) {\n      return Object.assign({}, n, {\n        color: '#FB7E81'\n      });\n    }\n\n    return n;\n  });\n  return /*#__PURE__*/_jsx(NetworkGraphModal, {\n    show: false,\n    title: `Showing usages for: $${id}`,\n    nodes: nodes,\n    edges: network.edges,\n    children: ({\n      showModal\n    }) => {\n      return /*#__PURE__*/_jsx(IconButton, {\n        onClick: () => {\n          reportInteraction('Show variable usages');\n          showModal();\n        },\n        name: \"code-branch\",\n        title: \"Show usages\"\n      });\n    }\n  });\n};","map":{"version":3,"names":["React","useMemo","reportInteraction","IconButton","NetworkGraphModal","VariableUsagesButton","id","usages","isAdhoc","network","find","n","variable","length","nodes","map","label","includes","color","edges","showModal"],"sources":["/home/soula/grafana/public/app/features/variables/inspect/VariableUsagesButton.tsx"],"sourcesContent":["import React, { FC, useMemo } from 'react';\n\nimport { reportInteraction } from '@grafana/runtime';\nimport { IconButton } from '@grafana/ui';\n\nimport { NetworkGraphModal } from './NetworkGraphModal';\nimport { UsagesToNetwork } from './utils';\n\ninterface Props {\n  id: string;\n  usages: UsagesToNetwork[];\n  isAdhoc: boolean;\n}\n\nexport const VariableUsagesButton: FC<Props> = ({ id, usages, isAdhoc }) => {\n  const network = useMemo(() => usages.find((n) => n.variable.id === id), [usages, id]);\n  if (usages.length === 0 || isAdhoc || !network) {\n    return null;\n  }\n\n  const nodes = network.nodes.map((n) => {\n    if (n.label.includes(`$${id}`)) {\n      return { ...n, color: '#FB7E81' };\n    }\n    return n;\n  });\n\n  return (\n    <NetworkGraphModal show={false} title={`Showing usages for: $${id}`} nodes={nodes} edges={network.edges}>\n      {({ showModal }) => {\n        return (\n          <IconButton\n            onClick={() => {\n              reportInteraction('Show variable usages');\n              showModal();\n            }}\n            name=\"code-branch\"\n            title=\"Show usages\"\n          />\n        );\n      }}\n    </NetworkGraphModal>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;;AASA,OAAO,MAAMC,oBAA+B,GAAG,CAAC;EAAEC,EAAF;EAAMC,MAAN;EAAcC;AAAd,CAAD,KAA6B;EAC1E,MAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMM,MAAM,CAACG,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWN,EAAX,KAAkBA,EAArC,CAAP,EAAiD,CAACC,MAAD,EAASD,EAAT,CAAjD,CAAvB;;EACA,IAAIC,MAAM,CAACM,MAAP,KAAkB,CAAlB,IAAuBL,OAAvB,IAAkC,CAACC,OAAvC,EAAgD;IAC9C,OAAO,IAAP;EACD;;EAED,MAAMK,KAAK,GAAGL,OAAO,CAACK,KAAR,CAAcC,GAAd,CAAmBJ,CAAD,IAAO;IACrC,IAAIA,CAAC,CAACK,KAAF,CAAQC,QAAR,CAAkB,IAAGX,EAAG,EAAxB,CAAJ,EAAgC;MAC9B,yBAAYK,CAAZ;QAAeO,KAAK,EAAE;MAAtB;IACD;;IACD,OAAOP,CAAP;EACD,CALa,CAAd;EAOA,oBACE,KAAC,iBAAD;IAAmB,IAAI,EAAE,KAAzB;IAAgC,KAAK,EAAG,wBAAuBL,EAAG,EAAlE;IAAqE,KAAK,EAAEQ,KAA5E;IAAmF,KAAK,EAAEL,OAAO,CAACU,KAAlG;IAAA,UACG,CAAC;MAAEC;IAAF,CAAD,KAAmB;MAClB,oBACE,KAAC,UAAD;QACE,OAAO,EAAE,MAAM;UACblB,iBAAiB,CAAC,sBAAD,CAAjB;UACAkB,SAAS;QACV,CAJH;QAKE,IAAI,EAAC,aALP;QAME,KAAK,EAAC;MANR,EADF;IAUD;EAZH,EADF;AAgBD,CA7BM"},"metadata":{},"sourceType":"module"}