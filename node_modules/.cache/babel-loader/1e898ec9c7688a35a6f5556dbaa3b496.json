{"ast":null,"code":"var _label, _div, _LinkButton, _DeprecationNotice;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { config, locationService } from '@grafana/runtime';\nimport { Button, FilterInput, LinkButton, Select, VerticalGroup } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport Page from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { ShowModalReactEvent } from '../../types/events';\nimport { AlertHowToModal } from './AlertHowToModal';\nimport AlertRuleItem from './AlertRuleItem';\nimport { DeprecationNotice } from './components/DeprecationNotice';\nimport { getAlertRulesAsync, togglePauseAlertRule } from './state/actions';\nimport { setSearchQuery } from './state/reducers';\nimport { getAlertRuleItems, getSearchQuery } from './state/selectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state) {\n  return {\n    navModel: getNavModel(state.navIndex, 'alert-list'),\n    alertRules: getAlertRuleItems(state),\n    search: getSearchQuery(state.alertRules),\n    isLoading: state.alertRules.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  getAlertRulesAsync,\n  setSearchQuery,\n  togglePauseAlertRule\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport class AlertRuleListUnconnected extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"stateFilters\", [{\n      label: 'All',\n      value: 'all'\n    }, {\n      label: 'OK',\n      value: 'ok'\n    }, {\n      label: 'Not OK',\n      value: 'not_ok'\n    }, {\n      label: 'Alerting',\n      value: 'alerting'\n    }, {\n      label: 'No data',\n      value: 'no_data'\n    }, {\n      label: 'Paused',\n      value: 'paused'\n    }, {\n      label: 'Pending',\n      value: 'pending'\n    }]);\n\n    _defineProperty(this, \"onStateFilterChanged\", option => {\n      locationService.partial({\n        state: option.value\n      });\n    });\n\n    _defineProperty(this, \"onOpenHowTo\", () => {\n      appEvents.publish(new ShowModalReactEvent({\n        component: AlertHowToModal\n      }));\n    });\n\n    _defineProperty(this, \"onSearchQueryChange\", value => {\n      this.props.setSearchQuery(value);\n    });\n\n    _defineProperty(this, \"onTogglePause\", rule => {\n      this.props.togglePauseAlertRule(rule.id, {\n        paused: rule.state !== 'paused'\n      });\n    });\n\n    _defineProperty(this, \"alertStateFilterOption\", ({\n      text,\n      value\n    }) => {\n      return /*#__PURE__*/_jsx(\"option\", {\n        value: value,\n        children: text\n      }, value);\n    });\n  }\n\n  componentDidMount() {\n    this.fetchRules();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.queryParams.state !== this.props.queryParams.state) {\n      this.fetchRules();\n    }\n  }\n\n  async fetchRules() {\n    await this.props.getAlertRulesAsync({\n      state: this.getStateFilter()\n    });\n  }\n\n  getStateFilter() {\n    var _this$props$queryPara;\n\n    return (_this$props$queryPara = this.props.queryParams.state) !== null && _this$props$queryPara !== void 0 ? _this$props$queryPara : 'all';\n  }\n\n  render() {\n    const {\n      navModel,\n      alertRules,\n      search,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/_jsx(Page, {\n      navModel: navModel,\n      children: /*#__PURE__*/_jsxs(Page.Contents, {\n        isLoading: isLoading,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"page-action-bar\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"gf-form gf-form--grow\",\n            children: /*#__PURE__*/_jsx(FilterInput, {\n              placeholder: \"Search alerts\",\n              value: search,\n              onChange: this.onSearchQueryChange\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"gf-form\",\n            children: [_label || (_label = /*#__PURE__*/_jsx(\"label\", {\n              className: \"gf-form-label\",\n              htmlFor: \"alert-state-filter\",\n              children: \"States\"\n            })), /*#__PURE__*/_jsx(\"div\", {\n              className: \"width-13\",\n              children: /*#__PURE__*/_jsx(Select, {\n                inputId: 'alert-state-filter',\n                options: this.stateFilters,\n                onChange: this.onStateFilterChanged,\n                value: this.getStateFilter()\n              })\n            })]\n          }), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n            className: \"page-action-bar__spacer\"\n          })), config.unifiedAlertingEnabled && (_LinkButton || (_LinkButton = /*#__PURE__*/_jsx(LinkButton, {\n            variant: \"primary\",\n            href: \"alerting/ng/new\",\n            children: \"Add NG Alert\"\n          }))), /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: this.onOpenHowTo,\n            children: \"How to add an alert\"\n          })]\n        }), _DeprecationNotice || (_DeprecationNotice = /*#__PURE__*/_jsx(DeprecationNotice, {})), /*#__PURE__*/_jsx(VerticalGroup, {\n          spacing: \"none\",\n          children: alertRules.map(rule => {\n            return /*#__PURE__*/_jsx(AlertRuleItem, {\n              rule: rule,\n              search: search,\n              onTogglePause: () => this.onTogglePause(rule)\n            }, rule.id);\n          })\n        })]\n      })\n    });\n  }\n\n}\nexport default connector(AlertRuleListUnconnected);","map":{"version":3,"names":["React","PureComponent","connect","config","locationService","Button","FilterInput","LinkButton","Select","VerticalGroup","appEvents","Page","getNavModel","ShowModalReactEvent","AlertHowToModal","AlertRuleItem","DeprecationNotice","getAlertRulesAsync","togglePauseAlertRule","setSearchQuery","getAlertRuleItems","getSearchQuery","mapStateToProps","state","navModel","navIndex","alertRules","search","isLoading","mapDispatchToProps","connector","AlertRuleListUnconnected","label","value","option","partial","publish","component","props","rule","id","paused","text","componentDidMount","fetchRules","componentDidUpdate","prevProps","queryParams","getStateFilter","render","onSearchQueryChange","stateFilters","onStateFilterChanged","unifiedAlertingEnabled","onOpenHowTo","map","onTogglePause"],"sources":["/home/soula/grafana/public/app/features/alerting/AlertRuleList.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { SelectableValue } from '@grafana/data';\nimport { config, locationService } from '@grafana/runtime';\nimport { Button, FilterInput, LinkButton, Select, VerticalGroup } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport Page from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AlertRule, StoreState } from 'app/types';\n\nimport { ShowModalReactEvent } from '../../types/events';\n\nimport { AlertHowToModal } from './AlertHowToModal';\nimport AlertRuleItem from './AlertRuleItem';\nimport { DeprecationNotice } from './components/DeprecationNotice';\nimport { getAlertRulesAsync, togglePauseAlertRule } from './state/actions';\nimport { setSearchQuery } from './state/reducers';\nimport { getAlertRuleItems, getSearchQuery } from './state/selectors';\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'alert-list'),\n    alertRules: getAlertRuleItems(state),\n    search: getSearchQuery(state.alertRules),\n    isLoading: state.alertRules.isLoading,\n  };\n}\n\nconst mapDispatchToProps = {\n  getAlertRulesAsync,\n  setSearchQuery,\n  togglePauseAlertRule,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps extends GrafanaRouteComponentProps<{}, { state: string }> {}\n\nexport type Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport class AlertRuleListUnconnected extends PureComponent<Props> {\n  stateFilters = [\n    { label: 'All', value: 'all' },\n    { label: 'OK', value: 'ok' },\n    { label: 'Not OK', value: 'not_ok' },\n    { label: 'Alerting', value: 'alerting' },\n    { label: 'No data', value: 'no_data' },\n    { label: 'Paused', value: 'paused' },\n    { label: 'Pending', value: 'pending' },\n  ];\n\n  componentDidMount() {\n    this.fetchRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.queryParams.state !== this.props.queryParams.state) {\n      this.fetchRules();\n    }\n  }\n\n  async fetchRules() {\n    await this.props.getAlertRulesAsync({ state: this.getStateFilter() });\n  }\n\n  getStateFilter(): string {\n    return this.props.queryParams.state ?? 'all';\n  }\n\n  onStateFilterChanged = (option: SelectableValue) => {\n    locationService.partial({ state: option.value });\n  };\n\n  onOpenHowTo = () => {\n    appEvents.publish(new ShowModalReactEvent({ component: AlertHowToModal }));\n  };\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchQuery(value);\n  };\n\n  onTogglePause = (rule: AlertRule) => {\n    this.props.togglePauseAlertRule(rule.id, { paused: rule.state !== 'paused' });\n  };\n\n  alertStateFilterOption = ({ text, value }: { text: string; value: string }) => {\n    return (\n      <option key={value} value={value}>\n        {text}\n      </option>\n    );\n  };\n\n  render() {\n    const { navModel, alertRules, search, isLoading } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          <div className=\"page-action-bar\">\n            <div className=\"gf-form gf-form--grow\">\n              <FilterInput placeholder=\"Search alerts\" value={search} onChange={this.onSearchQueryChange} />\n            </div>\n            <div className=\"gf-form\">\n              <label className=\"gf-form-label\" htmlFor=\"alert-state-filter\">\n                States\n              </label>\n\n              <div className=\"width-13\">\n                <Select\n                  inputId={'alert-state-filter'}\n                  options={this.stateFilters}\n                  onChange={this.onStateFilterChanged}\n                  value={this.getStateFilter()}\n                />\n              </div>\n            </div>\n            <div className=\"page-action-bar__spacer\" />\n            {config.unifiedAlertingEnabled && (\n              <LinkButton variant=\"primary\" href=\"alerting/ng/new\">\n                Add NG Alert\n              </LinkButton>\n            )}\n            <Button variant=\"secondary\" onClick={this.onOpenHowTo}>\n              How to add an alert\n            </Button>\n          </div>\n          <DeprecationNotice />\n          <VerticalGroup spacing=\"none\">\n            {alertRules.map((rule) => {\n              return (\n                <AlertRuleItem\n                  rule={rule as AlertRule}\n                  key={rule.id}\n                  search={search}\n                  onTogglePause={() => this.onTogglePause(rule as AlertRule)}\n                />\n              );\n            })}\n          </VerticalGroup>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nexport default connector(AlertRuleListUnconnected);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}