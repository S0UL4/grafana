{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CustomScrollbar, Icon, useTheme2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const NavBarScrollContainer = ({\n  children\n}) => {\n  const [showScrollTopIndicator, setShowTopScrollIndicator] = useState(false);\n  const [showScrollBottomIndicator, setShowBottomScrollIndicator] = useState(false);\n  const scrollTopMarker = useRef(null);\n  const scrollBottomMarker = useRef(null);\n  const theme = useTheme2();\n  const styles = getStyles(theme); // Here we observe the top and bottom markers to determine if we should show the scroll indicators\n\n  useEffect(() => {\n    const intersectionObserver = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.target === scrollTopMarker.current) {\n          setShowTopScrollIndicator(!entry.isIntersecting);\n        } else if (entry.target === scrollBottomMarker.current) {\n          setShowBottomScrollIndicator(!entry.isIntersecting);\n        }\n      });\n    });\n    [scrollTopMarker, scrollBottomMarker].forEach(ref => {\n      if (ref.current) {\n        intersectionObserver.observe(ref.current);\n      }\n    });\n    return () => intersectionObserver.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxs(CustomScrollbar, {\n    className: styles.scrollContainer,\n    hideVerticalTrack: true,\n    hideHorizontalTrack: true,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: cx(styles.scrollTopIndicator, {\n        [styles.scrollIndicatorVisible]: showScrollTopIndicator\n      }),\n      children: /*#__PURE__*/_jsx(Icon, {\n        className: styles.scrollTopIcon,\n        name: \"angle-up\"\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.scrollContent,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.scrollTopMarker,\n        ref: scrollTopMarker\n      }), children, /*#__PURE__*/_jsx(\"div\", {\n        className: styles.scrollBottomMarker,\n        ref: scrollBottomMarker\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: cx(styles.scrollBottomIndicator, {\n        [styles.scrollIndicatorVisible]: showScrollBottomIndicator\n      }),\n      children: /*#__PURE__*/_jsx(Icon, {\n        className: styles.scrollBottomIcon,\n        name: \"angle-down\"\n      })\n    })]\n  });\n};\nNavBarScrollContainer.displayName = 'NavBarScrollContainer';\n\nconst getStyles = theme => ({\n  'scrollTopMarker, scrollBottomMarker': css({\n    height: theme.spacing(1),\n    left: 0,\n    position: 'absolute',\n    pointerEvents: 'none',\n    right: 0\n  }),\n  scrollTopMarker: css({\n    top: 0\n  }),\n  scrollBottomMarker: css({\n    bottom: 0\n  }),\n  scrollContent: css({\n    flex: 1,\n    position: 'relative'\n  }),\n  // override the scroll container position so that the scroll indicators\n  // are positioned at the top and bottom correctly.\n  // react-custom-scrollbars doesn't provide any way for us to hook in nicely,\n  // so we have to override with !important. feelsbad.\n  scrollContainer: css`\n    .scrollbar-view {\n      position: static !important;\n    }\n  `,\n  scrollTopIndicator: css({\n    background: `linear-gradient(0deg, transparent, ${theme.colors.background.canvas})`,\n    height: theme.spacing(6),\n    left: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    transition: theme.transitions.create('opacity'),\n    zIndex: theme.zIndex.sidemenu\n  }),\n  scrollBottomIndicator: css({\n    background: `linear-gradient(0deg, ${theme.colors.background.canvas}, transparent)`,\n    bottom: 0,\n    height: theme.spacing(6),\n    left: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: 0,\n    transition: theme.transitions.create('opacity'),\n    zIndex: theme.zIndex.sidemenu\n  }),\n  scrollIndicatorVisible: css({\n    opacity: 1\n  }),\n  scrollTopIcon: css({\n    left: '50%',\n    position: 'absolute',\n    top: 0,\n    transform: 'translateX(-50%)'\n  }),\n  scrollBottomIcon: css({\n    bottom: 0,\n    left: '50%',\n    position: 'absolute',\n    transform: 'translateX(-50%)'\n  })\n});","map":{"version":3,"names":["css","cx","React","useEffect","useRef","useState","CustomScrollbar","Icon","useTheme2","NavBarScrollContainer","children","showScrollTopIndicator","setShowTopScrollIndicator","showScrollBottomIndicator","setShowBottomScrollIndicator","scrollTopMarker","scrollBottomMarker","theme","styles","getStyles","intersectionObserver","IntersectionObserver","entries","forEach","entry","target","current","isIntersecting","ref","observe","disconnect","scrollContainer","scrollTopIndicator","scrollIndicatorVisible","scrollTopIcon","scrollContent","scrollBottomIndicator","scrollBottomIcon","displayName","height","spacing","left","position","pointerEvents","right","top","bottom","flex","background","colors","canvas","opacity","transition","transitions","create","zIndex","sidemenu","transform"],"sources":["/home/soula/grafana/public/app/core/components/NavBar/NavBarScrollContainer.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { CustomScrollbar, Icon, useTheme2 } from '@grafana/ui';\n\nexport interface Props {\n  children: React.ReactNode;\n}\n\nexport const NavBarScrollContainer = ({ children }: Props) => {\n  const [showScrollTopIndicator, setShowTopScrollIndicator] = useState(false);\n  const [showScrollBottomIndicator, setShowBottomScrollIndicator] = useState(false);\n  const scrollTopMarker = useRef<HTMLDivElement>(null);\n  const scrollBottomMarker = useRef<HTMLDivElement>(null);\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  // Here we observe the top and bottom markers to determine if we should show the scroll indicators\n  useEffect(() => {\n    const intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === scrollTopMarker.current) {\n          setShowTopScrollIndicator(!entry.isIntersecting);\n        } else if (entry.target === scrollBottomMarker.current) {\n          setShowBottomScrollIndicator(!entry.isIntersecting);\n        }\n      });\n    });\n    [scrollTopMarker, scrollBottomMarker].forEach((ref) => {\n      if (ref.current) {\n        intersectionObserver.observe(ref.current);\n      }\n    });\n    return () => intersectionObserver.disconnect();\n  }, []);\n\n  return (\n    <CustomScrollbar className={styles.scrollContainer} hideVerticalTrack hideHorizontalTrack>\n      <div\n        className={cx(styles.scrollTopIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollTopIndicator,\n        })}\n      >\n        <Icon className={styles.scrollTopIcon} name=\"angle-up\" />\n      </div>\n      <div className={styles.scrollContent}>\n        <div className={styles.scrollTopMarker} ref={scrollTopMarker}></div>\n        {children}\n        <div className={styles.scrollBottomMarker} ref={scrollBottomMarker}></div>\n      </div>\n      <div\n        className={cx(styles.scrollBottomIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollBottomIndicator,\n        })}\n      >\n        <Icon className={styles.scrollBottomIcon} name=\"angle-down\" />\n      </div>\n    </CustomScrollbar>\n  );\n};\n\nNavBarScrollContainer.displayName = 'NavBarScrollContainer';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  'scrollTopMarker, scrollBottomMarker': css({\n    height: theme.spacing(1),\n    left: 0,\n    position: 'absolute',\n    pointerEvents: 'none',\n    right: 0,\n  }),\n  scrollTopMarker: css({\n    top: 0,\n  }),\n  scrollBottomMarker: css({\n    bottom: 0,\n  }),\n  scrollContent: css({\n    flex: 1,\n    position: 'relative',\n  }),\n  // override the scroll container position so that the scroll indicators\n  // are positioned at the top and bottom correctly.\n  // react-custom-scrollbars doesn't provide any way for us to hook in nicely,\n  // so we have to override with !important. feelsbad.\n  scrollContainer: css`\n    .scrollbar-view {\n      position: static !important;\n    }\n  `,\n  scrollTopIndicator: css({\n    background: `linear-gradient(0deg, transparent, ${theme.colors.background.canvas})`,\n    height: theme.spacing(6),\n    left: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    transition: theme.transitions.create('opacity'),\n    zIndex: theme.zIndex.sidemenu,\n  }),\n  scrollBottomIndicator: css({\n    background: `linear-gradient(0deg, ${theme.colors.background.canvas}, transparent)`,\n    bottom: 0,\n    height: theme.spacing(6),\n    left: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: 0,\n    transition: theme.transitions.create('opacity'),\n    zIndex: theme.zIndex.sidemenu,\n  }),\n  scrollIndicatorVisible: css({\n    opacity: 1,\n  }),\n  scrollTopIcon: css({\n    left: '50%',\n    position: 'absolute',\n    top: 0,\n    transform: 'translateX(-50%)',\n  }),\n  scrollBottomIcon: css({\n    bottom: 0,\n    left: '50%',\n    position: 'absolute',\n    transform: 'translateX(-50%)',\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}