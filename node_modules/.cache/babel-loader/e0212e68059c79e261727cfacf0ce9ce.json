{"ast":null,"code":"// @ts-ignore\nimport baron from 'baron';\nimport { Subscription } from 'rxjs';\nimport { PanelEvents } from '@grafana/data';\nimport { RefreshEvent } from '@grafana/runtime';\nimport { coreModule } from 'app/angular/core_module';\nimport { PanelDirectiveReadyEvent, RenderEvent } from 'app/types/events';\nconst panelTemplate = `\n  <ng-transclude class=\"panel-height-helper\"></ng-transclude>\n`;\ncoreModule.directive('grafanaPanel', [\"$rootScope\", \"$document\", \"$timeout\", ($rootScope, $document, $timeout) => {\n  return {\n    restrict: 'E',\n    template: panelTemplate,\n    transclude: true,\n    scope: {\n      ctrl: '='\n    },\n    link: (scope, elem) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n      const subs = new Subscription();\n      let panelScrollbar;\n\n      function resizeScrollableContent() {\n        if (panelScrollbar) {\n          panelScrollbar.update();\n        }\n      }\n\n      ctrl.events.on(PanelEvents.componentDidMount, () => {\n        if (ctrl.__proto__.constructor.scrollable) {\n          const scrollRootClass = 'baron baron__root baron__clipper panel-content--scrollable';\n          const scrollerClass = 'baron__scroller';\n          const scrollBarHTML = `\n            <div class=\"baron__track\">\n              <div class=\"baron__bar\"></div>\n            </div>\n          `;\n          const scrollRoot = elem;\n          const scroller = elem.find(':first').find(':first');\n          scrollRoot.addClass(scrollRootClass);\n          $(scrollBarHTML).appendTo(scrollRoot);\n          scroller.addClass(scrollerClass);\n          panelScrollbar = baron({\n            root: scrollRoot[0],\n            scroller: scroller[0],\n            bar: '.baron__bar',\n            barOnCls: '_scrollbar',\n            scrollingCls: '_scrolling'\n          });\n          panelScrollbar.scroll();\n        }\n      });\n\n      function updateDimensionsFromParentScope() {\n        ctrl.height = scope.$parent.$parent.size.height;\n        ctrl.width = scope.$parent.$parent.size.width;\n      }\n\n      updateDimensionsFromParentScope(); // Pass PanelModel events down to angular controller event emitter\n\n      subs.add(panel.events.subscribe(RefreshEvent, () => {\n        updateDimensionsFromParentScope();\n        ctrl.events.emit('refresh');\n      }));\n      subs.add(panel.events.subscribe(RenderEvent, event => {\n        var _event$payload;\n\n        // this event originated from angular so no need to bubble it back\n        if ((_event$payload = event.payload) !== null && _event$payload !== void 0 && _event$payload.fromAngular) {\n          return;\n        }\n\n        updateDimensionsFromParentScope();\n        $timeout(() => {\n          resizeScrollableContent();\n          ctrl.events.emit('render');\n        });\n      }));\n      subs.add(ctrl.events.subscribe(RenderEvent, event => {\n        // this event originated from angular so bubble it to react so the PanelChromeAngular can update the panel header alert state\n        if (event.payload) {\n          event.payload.fromAngular = true;\n          panel.events.publish(event);\n        }\n      }));\n      scope.$on('$destroy', () => {\n        elem.off(); // Remove PanelModel.event subs\n\n        subs.unsubscribe(); // Remove Angular controller event subs\n\n        ctrl.events.emit(PanelEvents.panelTeardown);\n        ctrl.events.removeAllListeners();\n\n        if (panelScrollbar) {\n          panelScrollbar.dispose();\n        }\n      });\n      panel.events.publish(PanelDirectiveReadyEvent);\n    }\n  };\n}]);","map":{"version":3,"names":["baron","Subscription","PanelEvents","RefreshEvent","coreModule","PanelDirectiveReadyEvent","RenderEvent","panelTemplate","directive","$rootScope","$document","$timeout","restrict","template","transclude","scope","ctrl","link","elem","panel","subs","panelScrollbar","resizeScrollableContent","update","events","on","componentDidMount","__proto__","constructor","scrollable","scrollRootClass","scrollerClass","scrollBarHTML","scrollRoot","scroller","find","addClass","$","appendTo","root","bar","barOnCls","scrollingCls","scroll","updateDimensionsFromParentScope","height","$parent","size","width","add","subscribe","emit","event","payload","fromAngular","publish","$on","off","unsubscribe","panelTeardown","removeAllListeners","dispose"],"sources":["/home/soula/grafana/public/app/angular/panel/panel_directive.ts"],"sourcesContent":["// @ts-ignore\nimport baron from 'baron';\nimport { Subscription } from 'rxjs';\n\nimport { PanelEvents } from '@grafana/data';\nimport { RefreshEvent } from '@grafana/runtime';\nimport { coreModule } from 'app/angular/core_module';\nimport { PanelDirectiveReadyEvent, RenderEvent } from 'app/types/events';\n\nimport { PanelModel } from '../../features/dashboard/state';\n\nimport { PanelCtrl } from './panel_ctrl';\n\nconst panelTemplate = `\n  <ng-transclude class=\"panel-height-helper\"></ng-transclude>\n`;\n\ncoreModule.directive('grafanaPanel', ($rootScope, $document, $timeout) => {\n  return {\n    restrict: 'E',\n    template: panelTemplate,\n    transclude: true,\n    scope: { ctrl: '=' },\n    link: (scope: any, elem) => {\n      const ctrl: PanelCtrl = scope.ctrl;\n      const panel: PanelModel = scope.ctrl.panel;\n      const subs = new Subscription();\n\n      let panelScrollbar: any;\n\n      function resizeScrollableContent() {\n        if (panelScrollbar) {\n          panelScrollbar.update();\n        }\n      }\n\n      ctrl.events.on(PanelEvents.componentDidMount, () => {\n        if ((ctrl as any).__proto__.constructor.scrollable) {\n          const scrollRootClass = 'baron baron__root baron__clipper panel-content--scrollable';\n          const scrollerClass = 'baron__scroller';\n          const scrollBarHTML = `\n            <div class=\"baron__track\">\n              <div class=\"baron__bar\"></div>\n            </div>\n          `;\n\n          const scrollRoot = elem;\n          const scroller = elem.find(':first').find(':first');\n\n          scrollRoot.addClass(scrollRootClass);\n          $(scrollBarHTML).appendTo(scrollRoot);\n          scroller.addClass(scrollerClass);\n\n          panelScrollbar = baron({\n            root: scrollRoot[0],\n            scroller: scroller[0],\n            bar: '.baron__bar',\n            barOnCls: '_scrollbar',\n            scrollingCls: '_scrolling',\n          });\n\n          panelScrollbar.scroll();\n        }\n      });\n\n      function updateDimensionsFromParentScope() {\n        ctrl.height = scope.$parent.$parent.size.height;\n        ctrl.width = scope.$parent.$parent.size.width;\n      }\n\n      updateDimensionsFromParentScope();\n\n      // Pass PanelModel events down to angular controller event emitter\n      subs.add(\n        panel.events.subscribe(RefreshEvent, () => {\n          updateDimensionsFromParentScope();\n          ctrl.events.emit('refresh');\n        })\n      );\n\n      subs.add(\n        panel.events.subscribe(RenderEvent, (event) => {\n          // this event originated from angular so no need to bubble it back\n          if (event.payload?.fromAngular) {\n            return;\n          }\n\n          updateDimensionsFromParentScope();\n\n          $timeout(() => {\n            resizeScrollableContent();\n            ctrl.events.emit('render');\n          });\n        })\n      );\n\n      subs.add(\n        ctrl.events.subscribe(RenderEvent, (event) => {\n          // this event originated from angular so bubble it to react so the PanelChromeAngular can update the panel header alert state\n          if (event.payload) {\n            event.payload.fromAngular = true;\n            panel.events.publish(event);\n          }\n        })\n      );\n\n      scope.$on('$destroy', () => {\n        elem.off();\n\n        // Remove PanelModel.event subs\n        subs.unsubscribe();\n        // Remove Angular controller event subs\n        ctrl.events.emit(PanelEvents.panelTeardown);\n        ctrl.events.removeAllListeners();\n\n        if (panelScrollbar) {\n          panelScrollbar.dispose();\n        }\n      });\n\n      panel.events.publish(PanelDirectiveReadyEvent);\n    },\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}