{"ast":null,"code":"var _GrafanaEvaluationBeh, _CloudEvaluationBehav, _NotificationsStep;\n\nimport { css } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, ConfirmModal, CustomScrollbar, PageToolbar, Spinner, useStyles2 } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { deleteRuleAction, saveRuleFormAction } from '../../state/actions';\nimport { RuleFormType } from '../../types/rule-form';\nimport { initialAsyncRequestState } from '../../utils/redux';\nimport { getDefaultFormValues, getDefaultQueries, rulerRuleToFormValues } from '../../utils/rule-form';\nimport * as ruleId from '../../utils/rule-id';\nimport { CloudEvaluationBehavior } from './CloudEvaluationBehavior';\nimport { DetailsStep } from './DetailsStep';\nimport { GrafanaEvaluationBehavior } from './GrafanaEvaluationBehavior';\nimport { NotificationsStep } from './NotificationsStep';\nimport { RuleInspector } from './RuleInspector';\nimport { QueryAndAlertConditionStep } from './query-and-alert-condition/QueryAndAlertConditionStep';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const AlertRuleForm = ({\n  existing\n}) => {\n  var _ref;\n\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n  const notifyApp = useAppNotification();\n  const [queryParams] = useQueryParams();\n  const [showEditYaml, setShowEditYaml] = useState(false);\n  const returnTo = (_ref = queryParams['returnTo']) !== null && _ref !== void 0 ? _ref : '/alerting/list';\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const defaultValues = useMemo(() => {\n    if (existing) {\n      return rulerRuleToFormValues(existing);\n    }\n\n    return Object.assign({}, getDefaultFormValues(), {\n      queries: getDefaultQueries()\n    }, queryParams['defaults'] ? JSON.parse(queryParams['defaults']) : {}, {\n      type: RuleFormType.grafana\n    });\n  }, [existing, queryParams]);\n  const formAPI = useForm({\n    mode: 'onSubmit',\n    defaultValues,\n    shouldFocusError: true\n  });\n  const {\n    handleSubmit,\n    watch\n  } = formAPI;\n  const type = watch('type');\n  const dataSourceName = watch('dataSourceName');\n  const showStep2 = Boolean(type && (type === RuleFormType.grafana || !!dataSourceName));\n  const submitState = useUnifiedAlertingSelector(state => state.ruleForm.saveRule) || initialAsyncRequestState;\n  useCleanup(state => state.unifiedAlerting.ruleForm.saveRule);\n\n  const submit = (values, exitOnSave) => {\n    var _values$annotations$m, _values$annotations, _values$labels$map$fi, _values$labels;\n\n    dispatch(saveRuleFormAction({\n      values: Object.assign({}, defaultValues, values, {\n        annotations: (_values$annotations$m = (_values$annotations = values.annotations) === null || _values$annotations === void 0 ? void 0 : _values$annotations.map(({\n          key,\n          value\n        }) => ({\n          key: key.trim(),\n          value: value.trim()\n        })).filter(({\n          key,\n          value\n        }) => !!key && !!value)) !== null && _values$annotations$m !== void 0 ? _values$annotations$m : [],\n        labels: (_values$labels$map$fi = (_values$labels = values.labels) === null || _values$labels === void 0 ? void 0 : _values$labels.map(({\n          key,\n          value\n        }) => ({\n          key: key.trim(),\n          value: value.trim()\n        })).filter(({\n          key\n        }) => !!key)) !== null && _values$labels$map$fi !== void 0 ? _values$labels$map$fi : []\n      }),\n      existing,\n      redirectOnSave: exitOnSave ? returnTo : undefined\n    }));\n  };\n\n  const deleteRule = () => {\n    if (existing) {\n      const identifier = ruleId.fromRulerRule(existing.ruleSourceName, existing.namespace, existing.group.name, existing.rule);\n      dispatch(deleteRuleAction(identifier, {\n        navigateTo: '/alerting/list'\n      }));\n    }\n  };\n\n  const onInvalid = () => {\n    notifyApp.error('There are errors in the form. Please correct them and try again!');\n  };\n\n  return /*#__PURE__*/_jsxs(FormProvider, Object.assign({}, formAPI, {\n    children: [/*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxs(PageToolbar, {\n        title: `${existing ? 'Edit' : 'Create'} alert rule`,\n        pageIcon: \"bell\",\n        children: [/*#__PURE__*/_jsx(Link, {\n          to: returnTo,\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            disabled: submitState.loading,\n            type: \"button\",\n            fill: \"outline\",\n            children: \"Cancel\"\n          })\n        }), existing ? /*#__PURE__*/_jsx(Button, {\n          variant: \"destructive\",\n          type: \"button\",\n          onClick: () => setShowDeleteModal(true),\n          children: \"Delete\"\n        }) : null, isCortexLokiOrRecordingRule(watch) && /*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          type: \"button\",\n          onClick: () => setShowEditYaml(true),\n          disabled: submitState.loading,\n          children: \"Edit yaml\"\n        }), /*#__PURE__*/_jsxs(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          onClick: handleSubmit(values => submit(values, false), onInvalid),\n          disabled: submitState.loading,\n          children: [submitState.loading && /*#__PURE__*/_jsx(Spinner, {\n            className: styles.buttonSpinner,\n            inline: true\n          }), \"Save\"]\n        }), /*#__PURE__*/_jsxs(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          onClick: handleSubmit(values => submit(values, true), onInvalid),\n          disabled: submitState.loading,\n          children: [submitState.loading && /*#__PURE__*/_jsx(Spinner, {\n            className: styles.buttonSpinner,\n            inline: true\n          }), \"Save and exit\"]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.contentOuter,\n        children: /*#__PURE__*/_jsx(CustomScrollbar, {\n          autoHeightMin: \"100%\",\n          hideHorizontalTrack: true,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.contentInner,\n            children: [/*#__PURE__*/_jsx(QueryAndAlertConditionStep, {\n              editingExistingRule: !!existing\n            }), showStep2 && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [type === RuleFormType.grafana ? _GrafanaEvaluationBeh || (_GrafanaEvaluationBeh = /*#__PURE__*/_jsx(GrafanaEvaluationBehavior, {})) : _CloudEvaluationBehav || (_CloudEvaluationBehav = /*#__PURE__*/_jsx(CloudEvaluationBehavior, {})), /*#__PURE__*/_jsx(DetailsStep, {\n                initialFolder: defaultValues.folder\n              }), _NotificationsStep || (_NotificationsStep = /*#__PURE__*/_jsx(NotificationsStep, {}))]\n            })]\n          })\n        })\n      })]\n    }), showDeleteModal ? /*#__PURE__*/_jsx(ConfirmModal, {\n      isOpen: true,\n      title: \"Delete rule\",\n      body: \"Deleting this rule will permanently remove it. Are you sure you want to delete this rule?\",\n      confirmText: \"Yes, delete\",\n      icon: \"exclamation-triangle\",\n      onConfirm: deleteRule,\n      onDismiss: () => setShowDeleteModal(false)\n    }) : null, showEditYaml ? /*#__PURE__*/_jsx(RuleInspector, {\n      onClose: () => setShowEditYaml(false)\n    }) : null]\n  }));\n};\n\nconst isCortexLokiOrRecordingRule = watch => {\n  const [ruleType, dataSourceName] = watch(['type', 'dataSourceName']);\n  return (ruleType === RuleFormType.cloudAlerting || ruleType === RuleFormType.cloudRecording) && dataSourceName !== '';\n};\n\nconst getStyles = theme => {\n  return {\n    buttonSpinner: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    form: css`\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    `,\n    contentInner: css`\n      flex: 1;\n      padding: ${theme.spacing(2)};\n    `,\n    contentOuter: css`\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(0, 2, 2)};\n      overflow: hidden;\n      flex: 1;\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useMemo","useState","FormProvider","useForm","useDispatch","Link","Button","ConfirmModal","CustomScrollbar","PageToolbar","Spinner","useStyles2","useAppNotification","useCleanup","useQueryParams","useUnifiedAlertingSelector","deleteRuleAction","saveRuleFormAction","RuleFormType","initialAsyncRequestState","getDefaultFormValues","getDefaultQueries","rulerRuleToFormValues","ruleId","CloudEvaluationBehavior","DetailsStep","GrafanaEvaluationBehavior","NotificationsStep","RuleInspector","QueryAndAlertConditionStep","AlertRuleForm","existing","styles","getStyles","dispatch","notifyApp","queryParams","showEditYaml","setShowEditYaml","returnTo","showDeleteModal","setShowDeleteModal","defaultValues","queries","JSON","parse","type","grafana","formAPI","mode","shouldFocusError","handleSubmit","watch","dataSourceName","showStep2","Boolean","submitState","state","ruleForm","saveRule","unifiedAlerting","submit","values","exitOnSave","annotations","map","key","value","trim","filter","labels","redirectOnSave","undefined","deleteRule","identifier","fromRulerRule","ruleSourceName","namespace","group","name","rule","navigateTo","onInvalid","error","e","preventDefault","form","loading","isCortexLokiOrRecordingRule","buttonSpinner","contentOuter","contentInner","folder","ruleType","cloudAlerting","cloudRecording","theme","spacing","colors","background","primary","border","weak","shape","borderRadius","flexRow"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-editor/AlertRuleForm.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useMemo, useState } from 'react';\nimport { FormProvider, useForm, UseFormWatch } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, ConfirmModal, CustomScrollbar, PageToolbar, Spinner, useStyles2 } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { RuleWithLocation } from 'app/types/unified-alerting';\n\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { deleteRuleAction, saveRuleFormAction } from '../../state/actions';\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\nimport { initialAsyncRequestState } from '../../utils/redux';\nimport { getDefaultFormValues, getDefaultQueries, rulerRuleToFormValues } from '../../utils/rule-form';\nimport * as ruleId from '../../utils/rule-id';\n\nimport { CloudEvaluationBehavior } from './CloudEvaluationBehavior';\nimport { DetailsStep } from './DetailsStep';\nimport { GrafanaEvaluationBehavior } from './GrafanaEvaluationBehavior';\nimport { NotificationsStep } from './NotificationsStep';\nimport { RuleInspector } from './RuleInspector';\nimport { QueryAndAlertConditionStep } from './query-and-alert-condition/QueryAndAlertConditionStep';\n\ntype Props = {\n  existing?: RuleWithLocation;\n};\n\nexport const AlertRuleForm: FC<Props> = ({ existing }) => {\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n  const notifyApp = useAppNotification();\n  const [queryParams] = useQueryParams();\n  const [showEditYaml, setShowEditYaml] = useState(false);\n\n  const returnTo: string = (queryParams['returnTo'] as string | undefined) ?? '/alerting/list';\n  const [showDeleteModal, setShowDeleteModal] = useState<boolean>(false);\n\n  const defaultValues: RuleFormValues = useMemo(() => {\n    if (existing) {\n      return rulerRuleToFormValues(existing);\n    }\n    return {\n      ...getDefaultFormValues(),\n      queries: getDefaultQueries(),\n      ...(queryParams['defaults'] ? JSON.parse(queryParams['defaults'] as string) : {}),\n      type: RuleFormType.grafana,\n    };\n  }, [existing, queryParams]);\n\n  const formAPI = useForm<RuleFormValues>({\n    mode: 'onSubmit',\n    defaultValues,\n    shouldFocusError: true,\n  });\n\n  const { handleSubmit, watch } = formAPI;\n\n  const type = watch('type');\n  const dataSourceName = watch('dataSourceName');\n\n  const showStep2 = Boolean(type && (type === RuleFormType.grafana || !!dataSourceName));\n\n  const submitState = useUnifiedAlertingSelector((state) => state.ruleForm.saveRule) || initialAsyncRequestState;\n  useCleanup((state) => state.unifiedAlerting.ruleForm.saveRule);\n\n  const submit = (values: RuleFormValues, exitOnSave: boolean) => {\n    dispatch(\n      saveRuleFormAction({\n        values: {\n          ...defaultValues,\n          ...values,\n          annotations:\n            values.annotations\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key, value }) => !!key && !!value) ?? [],\n          labels:\n            values.labels\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key }) => !!key) ?? [],\n        },\n        existing,\n        redirectOnSave: exitOnSave ? returnTo : undefined,\n      })\n    );\n  };\n\n  const deleteRule = () => {\n    if (existing) {\n      const identifier = ruleId.fromRulerRule(\n        existing.ruleSourceName,\n        existing.namespace,\n        existing.group.name,\n        existing.rule\n      );\n\n      dispatch(deleteRuleAction(identifier, { navigateTo: '/alerting/list' }));\n    }\n  };\n\n  const onInvalid = () => {\n    notifyApp.error('There are errors in the form. Please correct them and try again!');\n  };\n\n  return (\n    <FormProvider {...formAPI}>\n      <form onSubmit={(e) => e.preventDefault()} className={styles.form}>\n        <PageToolbar title={`${existing ? 'Edit' : 'Create'} alert rule`} pageIcon=\"bell\">\n          <Link to={returnTo}>\n            <Button variant=\"secondary\" disabled={submitState.loading} type=\"button\" fill=\"outline\">\n              Cancel\n            </Button>\n          </Link>\n          {existing ? (\n            <Button variant=\"destructive\" type=\"button\" onClick={() => setShowDeleteModal(true)}>\n              Delete\n            </Button>\n          ) : null}\n          {isCortexLokiOrRecordingRule(watch) && (\n            <Button\n              variant=\"secondary\"\n              type=\"button\"\n              onClick={() => setShowEditYaml(true)}\n              disabled={submitState.loading}\n            >\n              Edit yaml\n            </Button>\n          )}\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, false), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, true), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save and exit\n          </Button>\n        </PageToolbar>\n        <div className={styles.contentOuter}>\n          <CustomScrollbar autoHeightMin=\"100%\" hideHorizontalTrack={true}>\n            <div className={styles.contentInner}>\n              <QueryAndAlertConditionStep editingExistingRule={!!existing} />\n              {showStep2 && (\n                <>\n                  {type === RuleFormType.grafana ? <GrafanaEvaluationBehavior /> : <CloudEvaluationBehavior />}\n                  <DetailsStep initialFolder={defaultValues.folder} />\n                  <NotificationsStep />\n                </>\n              )}\n            </div>\n          </CustomScrollbar>\n        </div>\n      </form>\n      {showDeleteModal ? (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Delete rule\"\n          body=\"Deleting this rule will permanently remove it. Are you sure you want to delete this rule?\"\n          confirmText=\"Yes, delete\"\n          icon=\"exclamation-triangle\"\n          onConfirm={deleteRule}\n          onDismiss={() => setShowDeleteModal(false)}\n        />\n      ) : null}\n      {showEditYaml ? <RuleInspector onClose={() => setShowEditYaml(false)} /> : null}\n    </FormProvider>\n  );\n};\n\nconst isCortexLokiOrRecordingRule = (watch: UseFormWatch<RuleFormValues>) => {\n  const [ruleType, dataSourceName] = watch(['type', 'dataSourceName']);\n\n  return (ruleType === RuleFormType.cloudAlerting || ruleType === RuleFormType.cloudRecording) && dataSourceName !== '';\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    buttonSpinner: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    form: css`\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    `,\n    contentInner: css`\n      flex: 1;\n      padding: ${theme.spacing(2)};\n    `,\n    contentOuter: css`\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(0, 2, 2)};\n      overflow: hidden;\n      flex: 1;\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}