{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { CircularVector, DataHoverEvent, DataHoverClearEvent, DataSelectEvent } from '@grafana/data';\nimport { CustomScrollbar } from '@grafana/ui';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet counter = 100;\nexport class EventBusLoggerPanel extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"history\", new CircularVector({\n      capacity: 40,\n      append: 'head'\n    }));\n\n    _defineProperty(this, \"subs\", void 0);\n\n    _defineProperty(this, \"eventObserver\", {\n      next: event => {\n        const origin = event.origin;\n        this.history.add({\n          key: counter++,\n          type: event.type,\n          path: origin === null || origin === void 0 ? void 0 : origin.path,\n          payload: event.payload\n        });\n        this.setState({\n          counter\n        });\n      }\n    });\n\n    this.state = {\n      counter\n    };\n    const subs = [];\n    subs.push(props.eventBus.getStream(DataHoverEvent).subscribe(this.eventObserver));\n    subs.push(props.eventBus.getStream(DataHoverClearEvent).subscribe(this.eventObserver));\n    subs.push(props.eventBus.getStream(DataSelectEvent).subscribe(this.eventObserver));\n    this.subs = subs;\n  }\n\n  componentWillUnmount() {\n    for (const sub of this.subs) {\n      sub.unsubscribe();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(CustomScrollbar, {\n      autoHeightMin: \"100%\",\n      autoHeightMax: \"100%\",\n      children: this.history.map((v, idx) => /*#__PURE__*/_jsxs(\"div\", {\n        children: [JSON.stringify(v.path), \" \", v.type, \" / X:\", JSON.stringify(v.payload.x), \" / Y:\", JSON.stringify(v.payload.y)]\n      }, v.key))\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","CircularVector","DataHoverEvent","DataHoverClearEvent","DataSelectEvent","CustomScrollbar","counter","EventBusLoggerPanel","constructor","props","capacity","append","next","event","origin","history","add","key","type","path","payload","setState","state","subs","push","eventBus","getStream","subscribe","eventObserver","componentWillUnmount","sub","unsubscribe","render","map","v","idx","JSON","stringify","x","y"],"sources":["/home/soula/grafana/public/app/plugins/panel/debug/EventBusLogger.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { PartialObserver, Unsubscribable } from 'rxjs';\n\nimport {\n  BusEvent,\n  CircularVector,\n  DataHoverEvent,\n  DataHoverClearEvent,\n  DataSelectEvent,\n  EventBus,\n} from '@grafana/data';\nimport { CustomScrollbar } from '@grafana/ui';\n\ninterface Props {\n  eventBus: EventBus;\n}\n\ninterface State {\n  isError?: boolean;\n  counter: number;\n}\n\ninterface BusEventEx {\n  key: number;\n  type: string;\n  path: string;\n  payload: any;\n}\nlet counter = 100;\n\nexport class EventBusLoggerPanel extends PureComponent<Props, State> {\n  history = new CircularVector<BusEventEx>({ capacity: 40, append: 'head' });\n  subs: Unsubscribable[];\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { counter };\n\n    const subs: Unsubscribable[] = [];\n    subs.push(props.eventBus.getStream(DataHoverEvent).subscribe(this.eventObserver));\n    subs.push(props.eventBus.getStream(DataHoverClearEvent).subscribe(this.eventObserver));\n    subs.push(props.eventBus.getStream(DataSelectEvent).subscribe(this.eventObserver));\n    this.subs = subs;\n  }\n\n  componentWillUnmount() {\n    for (const sub of this.subs) {\n      sub.unsubscribe();\n    }\n  }\n\n  eventObserver: PartialObserver<BusEvent> = {\n    next: (event: BusEvent) => {\n      const origin = event.origin as any;\n      this.history.add({\n        key: counter++,\n        type: event.type,\n        path: origin?.path,\n        payload: event.payload,\n      });\n      this.setState({ counter });\n    },\n  };\n\n  render() {\n    return (\n      <CustomScrollbar autoHeightMin=\"100%\" autoHeightMax=\"100%\">\n        {this.history.map((v, idx) => (\n          <div key={v.key}>\n            {JSON.stringify(v.path)} {v.type} / X:{JSON.stringify(v.payload.x)} / Y:{JSON.stringify(v.payload.y)}\n          </div>\n        ))}\n      </CustomScrollbar>\n    );\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAGA,SAEEC,cAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,eALF,QAOO,eAPP;AAQA,SAASC,eAAT,QAAgC,aAAhC;;;AAiBA,IAAIC,OAAO,GAAG,GAAd;AAEA,OAAO,MAAMC,mBAAN,SAAkCP,aAAlC,CAA8D;EAInEQ,WAAW,CAACC,KAAD,EAAe;IACxB,MAAMA,KAAN;;IADwB,iCAHhB,IAAIR,cAAJ,CAA+B;MAAES,QAAQ,EAAE,EAAZ;MAAgBC,MAAM,EAAE;IAAxB,CAA/B,CAGgB;;IAAA;;IAAA,uCAkBiB;MACzCC,IAAI,EAAGC,KAAD,IAAqB;QACzB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;QACA,KAAKC,OAAL,CAAaC,GAAb,CAAiB;UACfC,GAAG,EAAEX,OAAO,EADG;UAEfY,IAAI,EAAEL,KAAK,CAACK,IAFG;UAGfC,IAAI,EAAEL,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEK,IAHC;UAIfC,OAAO,EAAEP,KAAK,CAACO;QAJA,CAAjB;QAMA,KAAKC,QAAL,CAAc;UAAEf;QAAF,CAAd;MACD;IAVwC,CAlBjB;;IAGxB,KAAKgB,KAAL,GAAa;MAAEhB;IAAF,CAAb;IAEA,MAAMiB,IAAsB,GAAG,EAA/B;IACAA,IAAI,CAACC,IAAL,CAAUf,KAAK,CAACgB,QAAN,CAAeC,SAAf,CAAyBxB,cAAzB,EAAyCyB,SAAzC,CAAmD,KAAKC,aAAxD,CAAV;IACAL,IAAI,CAACC,IAAL,CAAUf,KAAK,CAACgB,QAAN,CAAeC,SAAf,CAAyBvB,mBAAzB,EAA8CwB,SAA9C,CAAwD,KAAKC,aAA7D,CAAV;IACAL,IAAI,CAACC,IAAL,CAAUf,KAAK,CAACgB,QAAN,CAAeC,SAAf,CAAyBtB,eAAzB,EAA0CuB,SAA1C,CAAoD,KAAKC,aAAzD,CAAV;IACA,KAAKL,IAAL,GAAYA,IAAZ;EACD;;EAEDM,oBAAoB,GAAG;IACrB,KAAK,MAAMC,GAAX,IAAkB,KAAKP,IAAvB,EAA6B;MAC3BO,GAAG,CAACC,WAAJ;IACD;EACF;;EAeDC,MAAM,GAAG;IACP,oBACE,KAAC,eAAD;MAAiB,aAAa,EAAC,MAA/B;MAAsC,aAAa,EAAC,MAApD;MAAA,UACG,KAAKjB,OAAL,CAAakB,GAAb,CAAiB,CAACC,CAAD,EAAIC,GAAJ,kBAChB;QAAA,WACGC,IAAI,CAACC,SAAL,CAAeH,CAAC,CAACf,IAAjB,CADH,OAC4Be,CAAC,CAAChB,IAD9B,WACyCkB,IAAI,CAACC,SAAL,CAAeH,CAAC,CAACd,OAAF,CAAUkB,CAAzB,CADzC,WAC2EF,IAAI,CAACC,SAAL,CAAeH,CAAC,CAACd,OAAF,CAAUmB,CAAzB,CAD3E;MAAA,GAAUL,CAAC,CAACjB,GAAZ,CADD;IADH,EADF;EASD;;AA7CkE"},"metadata":{},"sourceType":"module"}