{"ast":null,"code":"import { MatcherOperator } from 'app/plugins/datasource/alertmanager/types';\nimport { getAllDataSources } from './config';\nimport { DataSourceType } from './datasource';\nexport function addDefaultsToAlertmanagerConfig(config) {\n  // add default receiver if it does not exist\n  if (!config.alertmanager_config.receivers) {\n    config.alertmanager_config.receivers = [{\n      name: 'default '\n    }];\n  } // add default route if it does not exists\n\n\n  if (!config.alertmanager_config.route) {\n    config.alertmanager_config.route = {\n      receiver: config.alertmanager_config.receivers[0].name\n    };\n  }\n\n  if (!config.template_files) {\n    config.template_files = {};\n  }\n\n  return config;\n}\nexport function removeMuteTimingFromRoute(muteTiming, route) {\n  var _route$mute_time_inte, _route$mute_time_inte2, _route$routes;\n\n  const newRoute = Object.assign({}, route, {\n    mute_time_intervals: (_route$mute_time_inte = (_route$mute_time_inte2 = route.mute_time_intervals) === null || _route$mute_time_inte2 === void 0 ? void 0 : _route$mute_time_inte2.filter(muteName => muteName !== muteTiming)) !== null && _route$mute_time_inte !== void 0 ? _route$mute_time_inte : [],\n    routes: (_route$routes = route.routes) === null || _route$routes === void 0 ? void 0 : _route$routes.map(subRoute => removeMuteTimingFromRoute(muteTiming, subRoute))\n  });\n  return newRoute;\n}\nexport function renameMuteTimings(newMuteTimingName, oldMuteTimingName, route) {\n  var _route$mute_time_inte3, _route$routes2;\n\n  return Object.assign({}, route, {\n    mute_time_intervals: (_route$mute_time_inte3 = route.mute_time_intervals) === null || _route$mute_time_inte3 === void 0 ? void 0 : _route$mute_time_inte3.map(name => name === oldMuteTimingName ? newMuteTimingName : name),\n    routes: (_route$routes2 = route.routes) === null || _route$routes2 === void 0 ? void 0 : _route$routes2.map(subRoute => renameMuteTimings(newMuteTimingName, oldMuteTimingName, subRoute))\n  });\n}\n\nfunction isReceiverUsedInRoute(receiver, route) {\n  var _ref, _route$routes3;\n\n  return (_ref = route.receiver === receiver || ((_route$routes3 = route.routes) === null || _route$routes3 === void 0 ? void 0 : _route$routes3.some(route => isReceiverUsedInRoute(receiver, route)))) !== null && _ref !== void 0 ? _ref : false;\n}\n\nexport function isReceiverUsed(receiver, config) {\n  var _ref2;\n\n  return (_ref2 = config.alertmanager_config.route && isReceiverUsedInRoute(receiver, config.alertmanager_config.route)) !== null && _ref2 !== void 0 ? _ref2 : false;\n}\nexport function matcherToOperator(matcher) {\n  if (matcher.isEqual) {\n    if (matcher.isRegex) {\n      return MatcherOperator.regex;\n    } else {\n      return MatcherOperator.equal;\n    }\n  } else if (matcher.isRegex) {\n    return MatcherOperator.notRegex;\n  } else {\n    return MatcherOperator.notEqual;\n  }\n}\nexport function matcherOperatorToValue(operator) {\n  switch (operator) {\n    case MatcherOperator.equal:\n      return {\n        isEqual: true,\n        isRegex: false\n      };\n\n    case MatcherOperator.notEqual:\n      return {\n        isEqual: false,\n        isRegex: false\n      };\n\n    case MatcherOperator.regex:\n      return {\n        isEqual: true,\n        isRegex: true\n      };\n\n    case MatcherOperator.notRegex:\n      return {\n        isEqual: false,\n        isRegex: true\n      };\n  }\n}\nexport function matcherToMatcherField(matcher) {\n  return {\n    name: matcher.name,\n    value: matcher.value,\n    operator: matcherToOperator(matcher)\n  };\n}\nexport function matcherFieldToMatcher(field) {\n  return Object.assign({\n    name: field.name,\n    value: field.value\n  }, matcherOperatorToValue(field.operator));\n}\nexport function matchersToString(matchers) {\n  const matcherFields = matchers.map(matcherToMatcherField);\n  const combinedMatchers = matcherFields.reduce((acc, current) => {\n    const currentMatcherString = `${current.name}${current.operator}\"${current.value}\"`;\n    return acc ? `${acc},${currentMatcherString}` : currentMatcherString;\n  }, '');\n  return `{${combinedMatchers}}`;\n}\nexport const matcherFieldOptions = [{\n  label: MatcherOperator.equal,\n  description: 'Equals',\n  value: MatcherOperator.equal\n}, {\n  label: MatcherOperator.notEqual,\n  description: 'Does not equal',\n  value: MatcherOperator.notEqual\n}, {\n  label: MatcherOperator.regex,\n  description: 'Matches regex',\n  value: MatcherOperator.regex\n}, {\n  label: MatcherOperator.notRegex,\n  description: 'Does not match regex',\n  value: MatcherOperator.notRegex\n}];\nconst matcherOperators = [MatcherOperator.regex, MatcherOperator.notRegex, MatcherOperator.notEqual, MatcherOperator.equal];\nexport function parseMatcher(matcher) {\n  const trimmed = matcher.trim();\n\n  if (trimmed.startsWith('{') && trimmed.endsWith('}')) {\n    throw new Error(`PromQL matchers not supported yet, sorry! PromQL matcher found: ${trimmed}`);\n  }\n\n  const operatorsFound = matcherOperators.map(op => [op, trimmed.indexOf(op)]).filter(([_, idx]) => idx > -1).sort((a, b) => a[1] - b[1]);\n\n  if (!operatorsFound.length) {\n    throw new Error(`Invalid matcher: ${trimmed}`);\n  }\n\n  const [operator, idx] = operatorsFound[0];\n  const name = trimmed.slice(0, idx).trim();\n  const value = trimmed.slice(idx + operator.length).trim();\n\n  if (!name) {\n    throw new Error(`Invalid matcher: ${trimmed}`);\n  }\n\n  return {\n    name,\n    value,\n    isRegex: operator === MatcherOperator.regex || operator === MatcherOperator.notRegex,\n    isEqual: operator === MatcherOperator.equal || operator === MatcherOperator.regex\n  };\n}\nexport function parseMatchers(matcherQueryString) {\n  const matcherRegExp = /\\b([\\w.-]+)(=~|!=|!~|=(?=\"?\\w))\"?([^\"\\n,]*)\"?/g;\n  const matchers = [];\n  matcherQueryString.replace(matcherRegExp, (_, key, operator, value) => {\n    const isEqual = operator === MatcherOperator.equal || operator === MatcherOperator.regex;\n    const isRegex = operator === MatcherOperator.regex || operator === MatcherOperator.notRegex;\n    matchers.push({\n      name: key,\n      value,\n      isEqual,\n      isRegex\n    });\n    return '';\n  });\n  return matchers;\n}\nexport function labelsMatchMatchers(labels, matchers) {\n  return matchers.every(({\n    name,\n    value,\n    isRegex,\n    isEqual\n  }) => {\n    return Object.entries(labels).some(([labelKey, labelValue]) => {\n      const nameMatches = name === labelKey;\n      let valueMatches;\n\n      if (isEqual && !isRegex) {\n        valueMatches = value === labelValue;\n      }\n\n      if (!isEqual && !isRegex) {\n        valueMatches = value !== labelValue;\n      }\n\n      if (isEqual && isRegex) {\n        valueMatches = new RegExp(value).test(labelValue);\n      }\n\n      if (!isEqual && isRegex) {\n        valueMatches = !new RegExp(value).test(labelValue);\n      }\n\n      return nameMatches && valueMatches;\n    });\n  });\n}\nexport function getAllAlertmanagerDataSources() {\n  return getAllDataSources().filter(ds => ds.type === DataSourceType.Alertmanager);\n}\nexport function getAlertmanagerByUid(uid) {\n  return getAllAlertmanagerDataSources().find(ds => uid === ds.uid);\n}\nexport function timeIntervalToString(timeInterval) {\n  const {\n    times,\n    weekdays,\n    days_of_month,\n    months,\n    years\n  } = timeInterval;\n  const timeString = getTimeString(times);\n  const weekdayString = getWeekdayString(weekdays);\n  const daysString = getDaysOfMonthString(days_of_month);\n  const monthsString = getMonthsString(months);\n  const yearsString = getYearsString(years);\n  return [timeString, weekdayString, daysString, monthsString, yearsString].join(', ');\n}\nexport function getTimeString(times) {\n  return 'Times: ' + (times ? times === null || times === void 0 ? void 0 : times.map(({\n    start_time,\n    end_time\n  }) => `${start_time} - ${end_time} UTC`).join(' and ') : 'All');\n}\nexport function getWeekdayString(weekdays) {\n  var _weekdays$map$join;\n\n  return 'Weekdays: ' + ((_weekdays$map$join = weekdays === null || weekdays === void 0 ? void 0 : weekdays.map(day => {\n    if (day.includes(':')) {\n      return day.split(':').map(d => {\n        const abbreviated = d.slice(0, 3);\n        return abbreviated[0].toLocaleUpperCase() + abbreviated.slice(1);\n      }).join('-');\n    } else {\n      const abbreviated = day.slice(0, 3);\n      return abbreviated[0].toLocaleUpperCase() + abbreviated.slice(1);\n    }\n  }).join(', ')) !== null && _weekdays$map$join !== void 0 ? _weekdays$map$join : 'All');\n}\nexport function getDaysOfMonthString(daysOfMonth) {\n  var _daysOfMonth$join;\n\n  return 'Days of the month: ' + ((_daysOfMonth$join = daysOfMonth === null || daysOfMonth === void 0 ? void 0 : daysOfMonth.join(', ')) !== null && _daysOfMonth$join !== void 0 ? _daysOfMonth$join : 'All');\n}\nexport function getMonthsString(months) {\n  var _months$join;\n\n  return 'Months: ' + ((_months$join = months === null || months === void 0 ? void 0 : months.join(', ')) !== null && _months$join !== void 0 ? _months$join : 'All');\n}\nexport function getYearsString(years) {\n  var _years$join;\n\n  return 'Years: ' + ((_years$join = years === null || years === void 0 ? void 0 : years.join(', ')) !== null && _years$join !== void 0 ? _years$join : 'All');\n}","map":{"version":3,"names":["MatcherOperator","getAllDataSources","DataSourceType","addDefaultsToAlertmanagerConfig","config","alertmanager_config","receivers","name","route","receiver","template_files","removeMuteTimingFromRoute","muteTiming","newRoute","mute_time_intervals","filter","muteName","routes","map","subRoute","renameMuteTimings","newMuteTimingName","oldMuteTimingName","isReceiverUsedInRoute","some","isReceiverUsed","matcherToOperator","matcher","isEqual","isRegex","regex","equal","notRegex","notEqual","matcherOperatorToValue","operator","matcherToMatcherField","value","matcherFieldToMatcher","field","matchersToString","matchers","matcherFields","combinedMatchers","reduce","acc","current","currentMatcherString","matcherFieldOptions","label","description","matcherOperators","parseMatcher","trimmed","trim","startsWith","endsWith","Error","operatorsFound","op","indexOf","_","idx","sort","a","b","length","slice","parseMatchers","matcherQueryString","matcherRegExp","replace","key","push","labelsMatchMatchers","labels","every","Object","entries","labelKey","labelValue","nameMatches","valueMatches","RegExp","test","getAllAlertmanagerDataSources","ds","type","Alertmanager","getAlertmanagerByUid","uid","find","timeIntervalToString","timeInterval","times","weekdays","days_of_month","months","years","timeString","getTimeString","weekdayString","getWeekdayString","daysString","getDaysOfMonthString","monthsString","getMonthsString","yearsString","getYearsString","join","start_time","end_time","day","includes","split","d","abbreviated","toLocaleUpperCase","daysOfMonth"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/utils/alertmanager.ts"],"sourcesContent":["import { SelectableValue } from '@grafana/data';\nimport {\n  AlertManagerCortexConfig,\n  MatcherOperator,\n  Route,\n  Matcher,\n  TimeInterval,\n  TimeRange,\n} from 'app/plugins/datasource/alertmanager/types';\nimport { Labels } from 'app/types/unified-alerting-dto';\n\nimport { MatcherFieldValue } from '../types/silence-form';\n\nimport { getAllDataSources } from './config';\nimport { DataSourceType } from './datasource';\n\nexport function addDefaultsToAlertmanagerConfig(config: AlertManagerCortexConfig): AlertManagerCortexConfig {\n  // add default receiver if it does not exist\n  if (!config.alertmanager_config.receivers) {\n    config.alertmanager_config.receivers = [{ name: 'default ' }];\n  }\n  // add default route if it does not exists\n  if (!config.alertmanager_config.route) {\n    config.alertmanager_config.route = {\n      receiver: config.alertmanager_config.receivers![0].name,\n    };\n  }\n  if (!config.template_files) {\n    config.template_files = {};\n  }\n  return config;\n}\n\nexport function removeMuteTimingFromRoute(muteTiming: string, route: Route): Route {\n  const newRoute: Route = {\n    ...route,\n    mute_time_intervals: route.mute_time_intervals?.filter((muteName) => muteName !== muteTiming) ?? [],\n    routes: route.routes?.map((subRoute) => removeMuteTimingFromRoute(muteTiming, subRoute)),\n  };\n  return newRoute;\n}\n\nexport function renameMuteTimings(newMuteTimingName: string, oldMuteTimingName: string, route: Route): Route {\n  return {\n    ...route,\n    mute_time_intervals: route.mute_time_intervals?.map((name) =>\n      name === oldMuteTimingName ? newMuteTimingName : name\n    ),\n    routes: route.routes?.map((subRoute) => renameMuteTimings(newMuteTimingName, oldMuteTimingName, subRoute)),\n  };\n}\n\nfunction isReceiverUsedInRoute(receiver: string, route: Route): boolean {\n  return (\n    (route.receiver === receiver || route.routes?.some((route) => isReceiverUsedInRoute(receiver, route))) ?? false\n  );\n}\n\nexport function isReceiverUsed(receiver: string, config: AlertManagerCortexConfig): boolean {\n  return (\n    (config.alertmanager_config.route && isReceiverUsedInRoute(receiver, config.alertmanager_config.route)) ?? false\n  );\n}\n\nexport function matcherToOperator(matcher: Matcher): MatcherOperator {\n  if (matcher.isEqual) {\n    if (matcher.isRegex) {\n      return MatcherOperator.regex;\n    } else {\n      return MatcherOperator.equal;\n    }\n  } else if (matcher.isRegex) {\n    return MatcherOperator.notRegex;\n  } else {\n    return MatcherOperator.notEqual;\n  }\n}\n\nexport function matcherOperatorToValue(operator: MatcherOperator) {\n  switch (operator) {\n    case MatcherOperator.equal:\n      return { isEqual: true, isRegex: false };\n    case MatcherOperator.notEqual:\n      return { isEqual: false, isRegex: false };\n    case MatcherOperator.regex:\n      return { isEqual: true, isRegex: true };\n    case MatcherOperator.notRegex:\n      return { isEqual: false, isRegex: true };\n  }\n}\n\nexport function matcherToMatcherField(matcher: Matcher): MatcherFieldValue {\n  return {\n    name: matcher.name,\n    value: matcher.value,\n    operator: matcherToOperator(matcher),\n  };\n}\n\nexport function matcherFieldToMatcher(field: MatcherFieldValue): Matcher {\n  return {\n    name: field.name,\n    value: field.value,\n    ...matcherOperatorToValue(field.operator),\n  };\n}\n\nexport function matchersToString(matchers: Matcher[]) {\n  const matcherFields = matchers.map(matcherToMatcherField);\n\n  const combinedMatchers = matcherFields.reduce((acc, current) => {\n    const currentMatcherString = `${current.name}${current.operator}\"${current.value}\"`;\n    return acc ? `${acc},${currentMatcherString}` : currentMatcherString;\n  }, '');\n\n  return `{${combinedMatchers}}`;\n}\n\nexport const matcherFieldOptions: SelectableValue[] = [\n  { label: MatcherOperator.equal, description: 'Equals', value: MatcherOperator.equal },\n  { label: MatcherOperator.notEqual, description: 'Does not equal', value: MatcherOperator.notEqual },\n  { label: MatcherOperator.regex, description: 'Matches regex', value: MatcherOperator.regex },\n  { label: MatcherOperator.notRegex, description: 'Does not match regex', value: MatcherOperator.notRegex },\n];\n\nconst matcherOperators = [\n  MatcherOperator.regex,\n  MatcherOperator.notRegex,\n  MatcherOperator.notEqual,\n  MatcherOperator.equal,\n];\n\nexport function parseMatcher(matcher: string): Matcher {\n  const trimmed = matcher.trim();\n  if (trimmed.startsWith('{') && trimmed.endsWith('}')) {\n    throw new Error(`PromQL matchers not supported yet, sorry! PromQL matcher found: ${trimmed}`);\n  }\n  const operatorsFound = matcherOperators\n    .map((op): [MatcherOperator, number] => [op, trimmed.indexOf(op)])\n    .filter(([_, idx]) => idx > -1)\n    .sort((a, b) => a[1] - b[1]);\n\n  if (!operatorsFound.length) {\n    throw new Error(`Invalid matcher: ${trimmed}`);\n  }\n  const [operator, idx] = operatorsFound[0];\n  const name = trimmed.slice(0, idx).trim();\n  const value = trimmed.slice(idx + operator.length).trim();\n  if (!name) {\n    throw new Error(`Invalid matcher: ${trimmed}`);\n  }\n\n  return {\n    name,\n    value,\n    isRegex: operator === MatcherOperator.regex || operator === MatcherOperator.notRegex,\n    isEqual: operator === MatcherOperator.equal || operator === MatcherOperator.regex,\n  };\n}\n\nexport function parseMatchers(matcherQueryString: string): Matcher[] {\n  const matcherRegExp = /\\b([\\w.-]+)(=~|!=|!~|=(?=\"?\\w))\"?([^\"\\n,]*)\"?/g;\n  const matchers: Matcher[] = [];\n\n  matcherQueryString.replace(matcherRegExp, (_, key, operator, value) => {\n    const isEqual = operator === MatcherOperator.equal || operator === MatcherOperator.regex;\n    const isRegex = operator === MatcherOperator.regex || operator === MatcherOperator.notRegex;\n    matchers.push({\n      name: key,\n      value,\n      isEqual,\n      isRegex,\n    });\n    return '';\n  });\n\n  return matchers;\n}\n\nexport function labelsMatchMatchers(labels: Labels, matchers: Matcher[]): boolean {\n  return matchers.every(({ name, value, isRegex, isEqual }) => {\n    return Object.entries(labels).some(([labelKey, labelValue]) => {\n      const nameMatches = name === labelKey;\n      let valueMatches;\n      if (isEqual && !isRegex) {\n        valueMatches = value === labelValue;\n      }\n      if (!isEqual && !isRegex) {\n        valueMatches = value !== labelValue;\n      }\n      if (isEqual && isRegex) {\n        valueMatches = new RegExp(value).test(labelValue);\n      }\n      if (!isEqual && isRegex) {\n        valueMatches = !new RegExp(value).test(labelValue);\n      }\n\n      return nameMatches && valueMatches;\n    });\n  });\n}\n\nexport function getAllAlertmanagerDataSources() {\n  return getAllDataSources().filter((ds) => ds.type === DataSourceType.Alertmanager);\n}\n\nexport function getAlertmanagerByUid(uid?: string) {\n  return getAllAlertmanagerDataSources().find((ds) => uid === ds.uid);\n}\n\nexport function timeIntervalToString(timeInterval: TimeInterval): string {\n  const { times, weekdays, days_of_month, months, years } = timeInterval;\n  const timeString = getTimeString(times);\n  const weekdayString = getWeekdayString(weekdays);\n  const daysString = getDaysOfMonthString(days_of_month);\n  const monthsString = getMonthsString(months);\n  const yearsString = getYearsString(years);\n\n  return [timeString, weekdayString, daysString, monthsString, yearsString].join(', ');\n}\n\nexport function getTimeString(times?: TimeRange[]): string {\n  return (\n    'Times: ' +\n    (times ? times?.map(({ start_time, end_time }) => `${start_time} - ${end_time} UTC`).join(' and ') : 'All')\n  );\n}\n\nexport function getWeekdayString(weekdays?: string[]): string {\n  return (\n    'Weekdays: ' +\n    (weekdays\n      ?.map((day) => {\n        if (day.includes(':')) {\n          return day\n            .split(':')\n            .map((d) => {\n              const abbreviated = d.slice(0, 3);\n              return abbreviated[0].toLocaleUpperCase() + abbreviated.slice(1);\n            })\n            .join('-');\n        } else {\n          const abbreviated = day.slice(0, 3);\n          return abbreviated[0].toLocaleUpperCase() + abbreviated.slice(1);\n        }\n      })\n      .join(', ') ?? 'All')\n  );\n}\n\nexport function getDaysOfMonthString(daysOfMonth?: string[]): string {\n  return 'Days of the month: ' + (daysOfMonth?.join(', ') ?? 'All');\n}\n\nexport function getMonthsString(months?: string[]): string {\n  return 'Months: ' + (months?.join(', ') ?? 'All');\n}\n\nexport function getYearsString(years?: string[]): string {\n  return 'Years: ' + (years?.join(', ') ?? 'All');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}