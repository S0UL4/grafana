{"ast":null,"code":"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAsync } from 'react-use';\nimport Page from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AlertsFolderView } from '../alerting/unified/AlertsFolderView';\nimport { getFolderByUid } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst FolderAlerting = ({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const navIndex = useSelector(state => state.navIndex);\n  const folder = useSelector(state => state.folder);\n  const uid = match.params.uid;\n  const navModel = getNavModel(navIndex, `folder-alerting-${uid}`, getLoadingNav(1));\n  const {\n    loading\n  } = useAsync(async () => dispatch(getFolderByUid(uid)), [getFolderByUid, uid]);\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsx(Page.Contents, {\n      isLoading: loading,\n      children: /*#__PURE__*/_jsx(AlertsFolderView, {\n        folder: folder\n      })\n    })\n  });\n};\n\nexport default FolderAlerting;","map":{"version":3,"names":["React","useDispatch","useSelector","useAsync","Page","getNavModel","AlertsFolderView","getFolderByUid","getLoadingNav","FolderAlerting","match","dispatch","navIndex","state","folder","uid","params","navModel","loading"],"sources":["/home/soula/grafana/public/app/features/folders/FolderAlerting.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAsync } from 'react-use';\n\nimport Page from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nimport { AlertsFolderView } from '../alerting/unified/AlertsFolderView';\n\nimport { getFolderByUid } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\n\nexport interface OwnProps extends GrafanaRouteComponentProps<{ uid: string }> {}\n\nconst FolderAlerting = ({ match }: OwnProps) => {\n  const dispatch = useDispatch();\n  const navIndex = useSelector((state: StoreState) => state.navIndex);\n  const folder = useSelector((state: StoreState) => state.folder);\n\n  const uid = match.params.uid;\n  const navModel = getNavModel(navIndex, `folder-alerting-${uid}`, getLoadingNav(1));\n\n  const { loading } = useAsync(async () => dispatch(getFolderByUid(uid)), [getFolderByUid, uid]);\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents isLoading={loading}>\n        <AlertsFolderView folder={folder} />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default FolderAlerting;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,SAASC,gBAAT,QAAiC,sCAAjC;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAIA,MAAMC,cAAc,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAyB;EAC9C,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAuBA,KAAK,CAACD,QAA9B,CAA5B;EACA,MAAME,MAAM,GAAGZ,WAAW,CAAEW,KAAD,IAAuBA,KAAK,CAACC,MAA9B,CAA1B;EAEA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAaD,GAAzB;EACA,MAAME,QAAQ,GAAGZ,WAAW,CAACO,QAAD,EAAY,mBAAkBG,GAAI,EAAlC,EAAqCP,aAAa,CAAC,CAAD,CAAlD,CAA5B;EAEA,MAAM;IAAEU;EAAF,IAAcf,QAAQ,CAAC,YAAYQ,QAAQ,CAACJ,cAAc,CAACQ,GAAD,CAAf,CAArB,EAA4C,CAACR,cAAD,EAAiBQ,GAAjB,CAA5C,CAA5B;EAEA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEE,QAAhB;IAAA,uBACE,KAAC,IAAD,CAAM,QAAN;MAAe,SAAS,EAAEC,OAA1B;MAAA,uBACE,KAAC,gBAAD;QAAkB,MAAM,EAAEJ;MAA1B;IADF;EADF,EADF;AAOD,CAjBD;;AAmBA,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}