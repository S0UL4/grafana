{"ast":null,"code":"var _span, _Spinner, _td, _td2, _td3;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { dateTimeFormat } from '@grafana/data';\nimport { Button, Spinner } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst format = 'dddd YYYY-MM-DD HH:mm zz';\nexport class LdapSyncInfo extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isSyncing: false\n    });\n\n    _defineProperty(this, \"handleSyncClick\", () => {\n      this.setState({\n        isSyncing: !this.state.isSyncing\n      });\n    });\n  }\n\n  render() {\n    const {\n      ldapSyncInfo\n    } = this.props;\n    const {\n      isSyncing\n    } = this.state;\n    const nextSyncTime = dateTimeFormat(ldapSyncInfo.nextSync, {\n      format\n    });\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"h3\", {\n        className: \"page-heading\",\n        children: [\"LDAP Synchronisation\", /*#__PURE__*/_jsxs(Button, {\n          className: \"pull-right\",\n          onClick: this.handleSyncClick,\n          hidden: true,\n          children: [_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n            className: \"btn-title\",\n            children: \"Bulk-sync now\"\n          })), isSyncing && (_Spinner || (_Spinner = /*#__PURE__*/_jsx(Spinner, {\n            inline: true\n          })))]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-group\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsx(\"table\", {\n            className: \"filter-table form-inline\",\n            children: /*#__PURE__*/_jsxs(\"tbody\", {\n              children: [/*#__PURE__*/_jsxs(\"tr\", {\n                children: [_td || (_td = /*#__PURE__*/_jsx(\"td\", {\n                  children: \"Active synchronisation\"\n                })), /*#__PURE__*/_jsx(\"td\", {\n                  colSpan: 2,\n                  children: ldapSyncInfo.enabled ? 'Enabled' : 'Disabled'\n                })]\n              }), /*#__PURE__*/_jsxs(\"tr\", {\n                children: [_td2 || (_td2 = /*#__PURE__*/_jsx(\"td\", {\n                  children: \"Scheduled\"\n                })), /*#__PURE__*/_jsx(\"td\", {\n                  children: ldapSyncInfo.schedule\n                })]\n              }), /*#__PURE__*/_jsxs(\"tr\", {\n                children: [_td3 || (_td3 = /*#__PURE__*/_jsx(\"td\", {\n                  children: \"Next scheduled synchronisation\"\n                })), /*#__PURE__*/_jsx(\"td\", {\n                  children: nextSyncTime\n                })]\n              })]\n            })\n          })\n        })\n      })]\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","dateTimeFormat","Button","Spinner","format","LdapSyncInfo","isSyncing","setState","state","render","ldapSyncInfo","props","nextSyncTime","nextSync","handleSyncClick","enabled","schedule"],"sources":["/home/soula/grafana/public/app/features/admin/ldap/LdapSyncInfo.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { dateTimeFormat } from '@grafana/data';\nimport { Button, Spinner } from '@grafana/ui';\nimport { SyncInfo } from 'app/types';\n\ninterface Props {\n  ldapSyncInfo: SyncInfo;\n}\n\ninterface State {\n  isSyncing: boolean;\n}\n\nconst format = 'dddd YYYY-MM-DD HH:mm zz';\n\nexport class LdapSyncInfo extends PureComponent<Props, State> {\n  state = {\n    isSyncing: false,\n  };\n\n  handleSyncClick = () => {\n    this.setState({ isSyncing: !this.state.isSyncing });\n  };\n\n  render() {\n    const { ldapSyncInfo } = this.props;\n    const { isSyncing } = this.state;\n    const nextSyncTime = dateTimeFormat(ldapSyncInfo.nextSync, { format });\n\n    return (\n      <>\n        <h3 className=\"page-heading\">\n          LDAP Synchronisation\n          <Button className=\"pull-right\" onClick={this.handleSyncClick} hidden>\n            <span className=\"btn-title\">Bulk-sync now</span>\n            {isSyncing && <Spinner inline={true} />}\n          </Button>\n        </h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <tbody>\n                <tr>\n                  <td>Active synchronisation</td>\n                  <td colSpan={2}>{ldapSyncInfo.enabled ? 'Enabled' : 'Disabled'}</td>\n                </tr>\n                <tr>\n                  <td>Scheduled</td>\n                  <td>{ldapSyncInfo.schedule}</td>\n                </tr>\n                <tr>\n                  <td>Next scheduled synchronisation</td>\n                  <td>{nextSyncTime}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,aAAhC;;;;AAWA,MAAMC,MAAM,GAAG,0BAAf;AAEA,OAAO,MAAMC,YAAN,SAA2BL,aAA3B,CAAuD;EAAA;IAAA;;IAAA,+BACpD;MACNM,SAAS,EAAE;IADL,CADoD;;IAAA,yCAK1C,MAAM;MACtB,KAAKC,QAAL,CAAc;QAAED,SAAS,EAAE,CAAC,KAAKE,KAAL,CAAWF;MAAzB,CAAd;IACD,CAP2D;EAAA;;EAS5DG,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAmB,KAAKC,KAA9B;IACA,MAAM;MAAEL;IAAF,IAAgB,KAAKE,KAA3B;IACA,MAAMI,YAAY,GAAGX,cAAc,CAACS,YAAY,CAACG,QAAd,EAAwB;MAAET;IAAF,CAAxB,CAAnC;IAEA,oBACE;MAAA,wBACE;QAAI,SAAS,EAAC,cAAd;QAAA,gDAEE,MAAC,MAAD;UAAQ,SAAS,EAAC,YAAlB;UAA+B,OAAO,EAAE,KAAKU,eAA7C;UAA8D,MAAM,MAApE;UAAA,0CACE;YAAM,SAAS,EAAC,WAAhB;YAAA;UAAA,EADF,GAEGR,SAAS,0CAAI,KAAC,OAAD;YAAS,MAAM,EAAE;UAAjB,EAAJ,EAFZ;QAAA,EAFF;MAAA,EADF,eAQE;QAAK,SAAS,EAAC,eAAf;QAAA,uBACE;UAAK,SAAS,EAAC,SAAf;UAAA,uBACE;YAAO,SAAS,EAAC,0BAAjB;YAAA,uBACE;cAAA,wBACE;gBAAA,sCACE;kBAAA;gBAAA,EADF,gBAEE;kBAAI,OAAO,EAAE,CAAb;kBAAA,UAAiBI,YAAY,CAACK,OAAb,GAAuB,SAAvB,GAAmC;gBAApD,EAFF;cAAA,EADF,eAKE;gBAAA,wCACE;kBAAA;gBAAA,EADF,gBAEE;kBAAA,UAAKL,YAAY,CAACM;gBAAlB,EAFF;cAAA,EALF,eASE;gBAAA,wCACE;kBAAA;gBAAA,EADF,gBAEE;kBAAA,UAAKJ;gBAAL,EAFF;cAAA,EATF;YAAA;UADF;QADF;MADF,EARF;IAAA,EADF;EA+BD;;AA7C2D"},"metadata":{},"sourceType":"module"}