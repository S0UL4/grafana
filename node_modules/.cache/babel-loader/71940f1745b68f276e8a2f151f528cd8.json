{"ast":null,"code":"var _span;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const FooterCell = props => {\n  const cell = css`\n    width: 100%;\n    list-style: none;\n  `;\n  const list = css`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  `;\n\n  if (props.value && !Array.isArray(props.value)) {\n    return /*#__PURE__*/_jsx(\"span\", {\n      children: props.value\n    });\n  }\n\n  if (props.value && Array.isArray(props.value) && props.value.length > 0) {\n    return /*#__PURE__*/_jsx(\"ul\", {\n      className: cell,\n      children: props.value.map((v, i) => {\n        const key = Object.keys(v)[0];\n        return /*#__PURE__*/_jsxs(\"li\", {\n          className: list,\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [key, \":\"]\n          }), /*#__PURE__*/_jsx(\"span\", {\n            children: v[key]\n          })]\n        }, i);\n      })\n    });\n  }\n\n  return EmptyCell;\n};\nexport const EmptyCell = props => {\n  return _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n    children: \"\\xA0\"\n  }));\n};","map":{"version":3,"names":["css","React","FooterCell","props","cell","list","value","Array","isArray","length","map","v","i","key","Object","keys","EmptyCell"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/FooterCell.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { KeyValue } from '@grafana/data';\n\nimport { FooterItem } from './types';\n\nexport interface FooterProps {\n  value: FooterItem;\n}\n\nexport const FooterCell = (props: FooterProps) => {\n  const cell = css`\n    width: 100%;\n    list-style: none;\n  `;\n\n  const list = css`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  `;\n\n  if (props.value && !Array.isArray(props.value)) {\n    return <span>{props.value}</span>;\n  }\n  if (props.value && Array.isArray(props.value) && props.value.length > 0) {\n    return (\n      <ul className={cell}>\n        {props.value.map((v: KeyValue<string>, i) => {\n          const key = Object.keys(v)[0];\n          return (\n            <li className={list} key={i}>\n              <span>{key}:</span>\n              <span>{v[key]}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n  return EmptyCell;\n};\n\nexport const EmptyCell = (props: any) => {\n  return <span>&nbsp;</span>;\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAUA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAwB;EAChD,MAAMC,IAAI,GAAGJ,GAAI;AACnB;AACA;AACA,GAHE;EAKA,MAAMK,IAAI,GAAGL,GAAI;AACnB;AACA;AACA;AACA;AACA,GALE;;EAOA,IAAIG,KAAK,CAACG,KAAN,IAAe,CAACC,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACG,KAApB,CAApB,EAAgD;IAC9C,oBAAO;MAAA,UAAOH,KAAK,CAACG;IAAb,EAAP;EACD;;EACD,IAAIH,KAAK,CAACG,KAAN,IAAeC,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACG,KAApB,CAAf,IAA6CH,KAAK,CAACG,KAAN,CAAYG,MAAZ,GAAqB,CAAtE,EAAyE;IACvE,oBACE;MAAI,SAAS,EAAEL,IAAf;MAAA,UACGD,KAAK,CAACG,KAAN,CAAYI,GAAZ,CAAgB,CAACC,CAAD,EAAsBC,CAAtB,KAA4B;QAC3C,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAe,CAAf,CAAZ;QACA,oBACE;UAAI,SAAS,EAAEN,IAAf;UAAA,wBACE;YAAA,WAAOQ,GAAP;UAAA,EADF,eAEE;YAAA,UAAOF,CAAC,CAACE,GAAD;UAAR,EAFF;QAAA,GAA0BD,CAA1B,CADF;MAMD,CARA;IADH,EADF;EAaD;;EACD,OAAOI,SAAP;AACD,CAhCM;AAkCP,OAAO,MAAMA,SAAS,GAAIb,KAAD,IAAgB;EACvC,sCAAO;IAAA;EAAA,EAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}