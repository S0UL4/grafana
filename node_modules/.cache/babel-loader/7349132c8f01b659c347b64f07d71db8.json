{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { FALLBACK_TRACE_NAME } from '../constants';\nimport BreakableText from './BreakableText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    TraceName: css`\n      label: TraceName;\n      font-size: ${theme.typography.size.lg};\n    `\n  };\n};\n\nexport default function TraceName(props) {\n  const {\n    className,\n    traceName\n  } = props;\n  const styles = useStyles2(getStyles);\n  const text = String(traceName || FALLBACK_TRACE_NAME);\n\n  const title = /*#__PURE__*/_jsx(BreakableText, {\n    text: text\n  });\n\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: cx(styles.TraceName, className),\n    children: title\n  });\n}","map":{"version":3,"names":["css","cx","React","useStyles2","FALLBACK_TRACE_NAME","BreakableText","getStyles","theme","TraceName","typography","size","lg","props","className","traceName","styles","text","String","title"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/common/TraceName.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { FALLBACK_TRACE_NAME } from '../constants';\nimport { TNil } from '../types';\n\nimport BreakableText from './BreakableText';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TraceName: css`\n      label: TraceName;\n      font-size: ${theme.typography.size.lg};\n    `,\n  };\n};\n\ntype Props = {\n  className?: string;\n  traceName?: string | TNil;\n};\n\nexport default function TraceName(props: Props) {\n  const { className, traceName } = props;\n  const styles = useStyles2(getStyles);\n  const text = String(traceName || FALLBACK_TRACE_NAME);\n  const title = <BreakableText text={text} />;\n  return <span className={cx(styles.TraceName, className)}>{title}</span>;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,mBAAT,QAAoC,cAApC;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,SAAS,EAAER,GAAI;AACnB;AACA,mBAAmBO,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C;EAJS,CAAP;AAMD,CAPD;;AAcA,eAAe,SAASH,SAAT,CAAmBI,KAAnB,EAAiC;EAC9C,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA2BF,KAAjC;EACA,MAAMG,MAAM,GAAGZ,UAAU,CAACG,SAAD,CAAzB;EACA,MAAMU,IAAI,GAAGC,MAAM,CAACH,SAAS,IAAIV,mBAAd,CAAnB;;EACA,MAAMc,KAAK,gBAAG,KAAC,aAAD;IAAe,IAAI,EAAEF;EAArB,EAAd;;EACA,oBAAO;IAAM,SAAS,EAAEf,EAAE,CAACc,MAAM,CAACP,SAAR,EAAmBK,SAAnB,CAAnB;IAAA,UAAmDK;EAAnD,EAAP;AACD"},"metadata":{},"sourceType":"module"}