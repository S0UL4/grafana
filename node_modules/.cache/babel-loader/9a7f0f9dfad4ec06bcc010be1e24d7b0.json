{"ast":null,"code":"var _FieldValidationMessa;\n\nimport React from 'react';\nimport { DataTransformerID, standardTransformers } from '@grafana/data';\nimport { FieldValidationMessage } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const MergeTransformerEditor = ({\n  input,\n  options,\n  onChange\n}) => {\n  if (input.length <= 1) {\n    // Show warning that merge is useless only apply on a single frame\n    return _FieldValidationMessa || (_FieldValidationMessa = /*#__PURE__*/_jsx(FieldValidationMessage, {\n      children: \"Merge has no effect when applied on a single frame.\"\n    }));\n  }\n\n  return null;\n};\nexport const mergeTransformerRegistryItem = {\n  id: DataTransformerID.merge,\n  editor: MergeTransformerEditor,\n  transformation: standardTransformers.mergeTransformer,\n  name: 'Merge',\n  description: `Merge many series/tables and return a single table where mergeable values will be combined into the same row.\n                Useful for showing multiple series, tables or a combination of both visualized in a table.`\n};","map":{"version":3,"names":["React","DataTransformerID","standardTransformers","FieldValidationMessage","MergeTransformerEditor","input","options","onChange","length","mergeTransformerRegistryItem","id","merge","editor","transformation","mergeTransformer","name","description"],"sources":["/home/soula/grafana/public/app/features/transformers/editors/MergeTransformerEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { DataTransformerID, standardTransformers, TransformerRegistryItem, TransformerUIProps } from '@grafana/data';\nimport { FieldValidationMessage } from '@grafana/ui';\n\nimport { MergeTransformerOptions } from '../../../../../packages/grafana-data/src/transformations/transformers/merge';\n\nexport const MergeTransformerEditor: React.FC<TransformerUIProps<MergeTransformerOptions>> = ({\n  input,\n  options,\n  onChange,\n}) => {\n  if (input.length <= 1) {\n    // Show warning that merge is useless only apply on a single frame\n    return <FieldValidationMessage>Merge has no effect when applied on a single frame.</FieldValidationMessage>;\n  }\n  return null;\n};\n\nexport const mergeTransformerRegistryItem: TransformerRegistryItem<MergeTransformerOptions> = {\n  id: DataTransformerID.merge,\n  editor: MergeTransformerEditor,\n  transformation: standardTransformers.mergeTransformer,\n  name: 'Merge',\n  description: `Merge many series/tables and return a single table where mergeable values will be combined into the same row.\n                Useful for showing multiple series, tables or a combination of both visualized in a table.`,\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAqG,eAArG;AACA,SAASC,sBAAT,QAAuC,aAAvC;;AAIA,OAAO,MAAMC,sBAA6E,GAAG,CAAC;EAC5FC,KAD4F;EAE5FC,OAF4F;EAG5FC;AAH4F,CAAD,KAIvF;EACJ,IAAIF,KAAK,CAACG,MAAN,IAAgB,CAApB,EAAuB;IACrB;IACA,sEAAO,KAAC,sBAAD;MAAA;IAAA,EAAP;EACD;;EACD,OAAO,IAAP;AACD,CAVM;AAYP,OAAO,MAAMC,4BAA8E,GAAG;EAC5FC,EAAE,EAAET,iBAAiB,CAACU,KADsE;EAE5FC,MAAM,EAAER,sBAFoF;EAG5FS,cAAc,EAAEX,oBAAoB,CAACY,gBAHuD;EAI5FC,IAAI,EAAE,OAJsF;EAK5FC,WAAW,EAAG;AAChB;AAN8F,CAAvF"},"metadata":{},"sourceType":"module"}