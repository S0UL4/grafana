{"ast":null,"code":"import memoizeOne from 'memoize-one';\nimport { getBackendSrv, config } from '@grafana/runtime';\nimport { notifyApp } from 'app/core/actions';\nimport { createErrorNotification, createSuccessNotification } from 'app/core/copy/appNotification';\nimport { dispatch } from 'app/store/store';\nimport { copyStringToClipboard } from './explore';\n\nfunction buildHostUrl() {\n  return `${window.location.protocol}//${window.location.host}${config.appSubUrl}`;\n}\n\nfunction getRelativeURLPath(url) {\n  let path = url.replace(buildHostUrl(), '');\n  return path.startsWith('/') ? path.substring(1, path.length) : path;\n}\n\nexport const createShortLink = memoizeOne(async function (path) {\n  try {\n    const shortLink = await getBackendSrv().post(`/api/short-urls`, {\n      path: getRelativeURLPath(path)\n    });\n    return shortLink.url;\n  } catch (err) {\n    console.error('Error when creating shortened link: ', err);\n    dispatch(notifyApp(createErrorNotification('Error generating shortened link')));\n  }\n});\nexport const createAndCopyShortLink = async path => {\n  const shortLink = await createShortLink(path);\n\n  if (shortLink) {\n    copyStringToClipboard(shortLink);\n    dispatch(notifyApp(createSuccessNotification('Shortened link copied to clipboard')));\n  } else {\n    dispatch(notifyApp(createErrorNotification('Error generating shortened link')));\n  }\n};","map":{"version":3,"names":["memoizeOne","getBackendSrv","config","notifyApp","createErrorNotification","createSuccessNotification","dispatch","copyStringToClipboard","buildHostUrl","window","location","protocol","host","appSubUrl","getRelativeURLPath","url","path","replace","startsWith","substring","length","createShortLink","shortLink","post","err","console","error","createAndCopyShortLink"],"sources":["/home/soula/grafana/public/app/core/utils/shortLinks.ts"],"sourcesContent":["import memoizeOne from 'memoize-one';\n\nimport { getBackendSrv, config } from '@grafana/runtime';\nimport { notifyApp } from 'app/core/actions';\nimport { createErrorNotification, createSuccessNotification } from 'app/core/copy/appNotification';\nimport { dispatch } from 'app/store/store';\n\nimport { copyStringToClipboard } from './explore';\n\nfunction buildHostUrl() {\n  return `${window.location.protocol}//${window.location.host}${config.appSubUrl}`;\n}\n\nfunction getRelativeURLPath(url: string) {\n  let path = url.replace(buildHostUrl(), '');\n  return path.startsWith('/') ? path.substring(1, path.length) : path;\n}\n\nexport const createShortLink = memoizeOne(async function (path: string) {\n  try {\n    const shortLink = await getBackendSrv().post(`/api/short-urls`, {\n      path: getRelativeURLPath(path),\n    });\n    return shortLink.url;\n  } catch (err) {\n    console.error('Error when creating shortened link: ', err);\n    dispatch(notifyApp(createErrorNotification('Error generating shortened link')));\n  }\n});\n\nexport const createAndCopyShortLink = async (path: string) => {\n  const shortLink = await createShortLink(path);\n  if (shortLink) {\n    copyStringToClipboard(shortLink);\n    dispatch(notifyApp(createSuccessNotification('Shortened link copied to clipboard')));\n  } else {\n    dispatch(notifyApp(createErrorNotification('Error generating shortened link')));\n  }\n};\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,uBAAT,EAAkCC,yBAAlC,QAAmE,+BAAnE;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,qBAAT,QAAsC,WAAtC;;AAEA,SAASC,YAAT,GAAwB;EACtB,OAAQ,GAAEC,MAAM,CAACC,QAAP,CAAgBC,QAAS,KAAIF,MAAM,CAACC,QAAP,CAAgBE,IAAK,GAAEV,MAAM,CAACW,SAAU,EAA/E;AACD;;AAED,SAASC,kBAAT,CAA4BC,GAA5B,EAAyC;EACvC,IAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAYT,YAAY,EAAxB,EAA4B,EAA5B,CAAX;EACA,OAAOQ,IAAI,CAACE,UAAL,CAAgB,GAAhB,IAAuBF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACI,MAAvB,CAAvB,GAAwDJ,IAA/D;AACD;;AAED,OAAO,MAAMK,eAAe,GAAGrB,UAAU,CAAC,gBAAgBgB,IAAhB,EAA8B;EACtE,IAAI;IACF,MAAMM,SAAS,GAAG,MAAMrB,aAAa,GAAGsB,IAAhB,CAAsB,iBAAtB,EAAwC;MAC9DP,IAAI,EAAEF,kBAAkB,CAACE,IAAD;IADsC,CAAxC,CAAxB;IAGA,OAAOM,SAAS,CAACP,GAAjB;EACD,CALD,CAKE,OAAOS,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDF,GAAtD;IACAlB,QAAQ,CAACH,SAAS,CAACC,uBAAuB,CAAC,iCAAD,CAAxB,CAAV,CAAR;EACD;AACF,CAVwC,CAAlC;AAYP,OAAO,MAAMuB,sBAAsB,GAAG,MAAOX,IAAP,IAAwB;EAC5D,MAAMM,SAAS,GAAG,MAAMD,eAAe,CAACL,IAAD,CAAvC;;EACA,IAAIM,SAAJ,EAAe;IACbf,qBAAqB,CAACe,SAAD,CAArB;IACAhB,QAAQ,CAACH,SAAS,CAACE,yBAAyB,CAAC,oCAAD,CAA1B,CAAV,CAAR;EACD,CAHD,MAGO;IACLC,QAAQ,CAACH,SAAS,CAACC,uBAAuB,CAAC,iCAAD,CAAxB,CAAV,CAAR;EACD;AACF,CARM"},"metadata":{},"sourceType":"module"}