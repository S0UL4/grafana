{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useToggle } from 'react-use';\nimport { Stack } from '@grafana/experimental';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function QueryOptionGroup({\n  title,\n  children,\n  collapsedInfo\n}) {\n  const [isOpen, toggleOpen] = useToggle(false);\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(Stack, {\n    gap: 0,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.header,\n      onClick: toggleOpen,\n      title: \"Click to edit options\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.toggle,\n        children: /*#__PURE__*/_jsx(Icon, {\n          name: isOpen ? 'angle-down' : 'angle-right'\n        })\n      }), /*#__PURE__*/_jsx(\"h6\", {\n        className: styles.title,\n        children: title\n      }), !isOpen && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.description,\n        children: collapsedInfo.map((x, i) => /*#__PURE__*/_jsx(\"span\", {\n          children: x\n        }, i))\n      })]\n    }), isOpen && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.body,\n      children: children\n    })]\n  });\n}\n\nconst getStyles = theme => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary\n      }\n    }),\n    header: css({\n      display: 'flex',\n      cursor: 'pointer',\n      alignItems: 'baseline',\n      color: theme.colors.text.primary,\n      '&:hover': {\n        background: theme.colors.emphasize(theme.colors.background.primary, 0.03)\n      }\n    }),\n    title: css({\n      flexGrow: 1,\n      overflow: 'hidden',\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      margin: 0\n    }),\n    description: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      paddingLeft: theme.spacing(2),\n      gap: theme.spacing(2),\n      display: 'flex'\n    }),\n    body: css({\n      display: 'flex',\n      paddingTop: theme.spacing(2),\n      gap: theme.spacing(2),\n      flexWrap: 'wrap'\n    }),\n    toggle: css({\n      color: theme.colors.text.secondary,\n      marginRight: `${theme.spacing(1)}`\n    })\n  };\n};","map":{"version":3,"names":["css","React","useToggle","Stack","Icon","useStyles2","QueryOptionGroup","title","children","collapsedInfo","isOpen","toggleOpen","styles","getStyles","header","toggle","description","map","x","i","body","theme","switchLabel","color","colors","text","secondary","cursor","fontSize","typography","bodySmall","primary","display","alignItems","background","emphasize","flexGrow","overflow","fontWeight","fontWeightMedium","margin","paddingLeft","spacing","gap","paddingTop","flexWrap","marginRight"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/shared/QueryOptionGroup.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nexport interface Props {\n  title: string;\n  collapsedInfo: string[];\n  children: React.ReactNode;\n}\n\nexport function QueryOptionGroup({ title, children, collapsedInfo }: Props) {\n  const [isOpen, toggleOpen] = useToggle(false);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Stack gap={0} direction=\"column\">\n      <div className={styles.header} onClick={toggleOpen} title=\"Click to edit options\">\n        <div className={styles.toggle}>\n          <Icon name={isOpen ? 'angle-down' : 'angle-right'} />\n        </div>\n        <h6 className={styles.title}>{title}</h6>\n        {!isOpen && (\n          <div className={styles.description}>\n            {collapsedInfo.map((x, i) => (\n              <span key={i}>{x}</span>\n            ))}\n          </div>\n        )}\n      </div>\n      {isOpen && <div className={styles.body}>{children}</div>}\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n    header: css({\n      display: 'flex',\n      cursor: 'pointer',\n      alignItems: 'baseline',\n      color: theme.colors.text.primary,\n      '&:hover': {\n        background: theme.colors.emphasize(theme.colors.background.primary, 0.03),\n      },\n    }),\n    title: css({\n      flexGrow: 1,\n      overflow: 'hidden',\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      margin: 0,\n    }),\n    description: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      paddingLeft: theme.spacing(2),\n      gap: theme.spacing(2),\n      display: 'flex',\n    }),\n    body: css({\n      display: 'flex',\n      paddingTop: theme.spacing(2),\n      gap: theme.spacing(2),\n      flexWrap: 'wrap',\n    }),\n    toggle: css({\n      color: theme.colors.text.secondary,\n      marginRight: `${theme.spacing(1)}`,\n    }),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}