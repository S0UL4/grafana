{"ast":null,"code":"var _LoadingPlaceholder, _h, _thead, _Button, _Trans;\n\nimport { Trans } from \"@lingui/react\";\nimport React, { PureComponent } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, LoadingPlaceholder } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class UserOrganizations extends PureComponent {\n  render() {\n    const {\n      isLoading,\n      orgs,\n      user\n    } = this.props;\n\n    if (isLoading) {\n      return _LoadingPlaceholder || (_LoadingPlaceholder = /*#__PURE__*/_jsx(LoadingPlaceholder, {\n        text: \"Loading organizations...\"\n      }));\n    }\n\n    if (orgs.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-sub-heading\",\n        children: /*#__PURE__*/_jsx(Trans, {\n          id: \"user-orgs.title\",\n          message: \"Organizations\"\n        })\n      })), /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-group\",\n        children: /*#__PURE__*/_jsxs(\"table\", {\n          className: \"filter-table form-inline\",\n          \"data-testid\": selectors.components.UserProfile.orgsTable,\n          children: [_thead || (_thead = /*#__PURE__*/_jsx(\"thead\", {\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(Trans, {\n                  id: \"user-orgs.name-column\",\n                  message: \"Name\"\n                })\n              }), /*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(Trans, {\n                  id: \"user-orgs.role-column\",\n                  message: \"Role\"\n                })\n              }), /*#__PURE__*/_jsx(\"th\", {})]\n            })\n          })), /*#__PURE__*/_jsx(\"tbody\", {\n            children: orgs.map((org, index) => {\n              return /*#__PURE__*/_jsxs(\"tr\", {\n                children: [/*#__PURE__*/_jsx(\"td\", {\n                  children: org.name\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  children: org.role\n                }), /*#__PURE__*/_jsx(\"td\", {\n                  className: \"text-right\",\n                  children: org.orgId === (user === null || user === void 0 ? void 0 : user.orgId) ? _Button || (_Button = /*#__PURE__*/_jsx(Button, {\n                    variant: \"secondary\",\n                    size: \"sm\",\n                    disabled: true,\n                    children: /*#__PURE__*/_jsx(Trans, {\n                      id: \"user-orgs.current-org-button\",\n                      message: \"Current\"\n                    })\n                  })) : /*#__PURE__*/_jsx(Button, {\n                    variant: \"secondary\",\n                    size: \"sm\",\n                    onClick: () => {\n                      this.props.setUserOrg(org);\n                    },\n                    children: _Trans || (_Trans = /*#__PURE__*/_jsx(Trans, {\n                      id: \"user-orgs.select-org-button\",\n                      message: \"Select organisation\"\n                    }))\n                  })\n                })]\n              }, index);\n            })\n          })]\n        })\n      })]\n    });\n  }\n\n}\nexport default UserOrganizations;","map":{"version":3,"names":["React","PureComponent","selectors","Button","LoadingPlaceholder","UserOrganizations","render","isLoading","orgs","user","props","length","components","UserProfile","orgsTable","map","org","index","name","role","orgId","setUserOrg"],"sources":["/home/soula/grafana/public/app/features/profile/UserOrganizations.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, LoadingPlaceholder } from '@grafana/ui';\nimport { UserDTO, UserOrg } from 'app/types';\n\nexport interface Props {\n  user: UserDTO | null;\n  orgs: UserOrg[];\n  isLoading: boolean;\n  setUserOrg: (org: UserOrg) => void;\n}\n\nexport class UserOrganizations extends PureComponent<Props> {\n  render() {\n    const { isLoading, orgs, user } = this.props;\n\n    if (isLoading) {\n      return <LoadingPlaceholder text=\"Loading organizations...\" />;\n    }\n\n    if (orgs.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3 className=\"page-sub-heading\">\n          <Trans id=\"user-orgs.title\">Organizations</Trans>\n        </h3>\n\n        <div className=\"gf-form-group\">\n          <table className=\"filter-table form-inline\" data-testid={selectors.components.UserProfile.orgsTable}>\n            <thead>\n              <tr>\n                <th>\n                  <Trans id=\"user-orgs.name-column\">Name</Trans>\n                </th>\n                <th>\n                  <Trans id=\"user-orgs.role-column\">Role</Trans>\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {orgs.map((org: UserOrg, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{org.name}</td>\n                    <td>{org.role}</td>\n                    <td className=\"text-right\">\n                      {org.orgId === user?.orgId ? (\n                        <Button variant=\"secondary\" size=\"sm\" disabled>\n                          <Trans id=\"user-orgs.current-org-button\">Current</Trans>\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"secondary\"\n                          size=\"sm\"\n                          onClick={() => {\n                            this.props.setUserOrg(org);\n                          }}\n                        >\n                          <Trans id=\"user-orgs.select-org-button\">Select organisation</Trans>\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserOrganizations;\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,aAA3C;;;AAUA,OAAO,MAAMC,iBAAN,SAAgCJ,aAAhC,CAAqD;EAC1DK,MAAM,GAAG;IACP,MAAM;MAAEC,SAAF;MAAaC,IAAb;MAAmBC;IAAnB,IAA4B,KAAKC,KAAvC;;IAEA,IAAIH,SAAJ,EAAe;MACb,kEAAO,KAAC,kBAAD;QAAoB,IAAI,EAAC;MAAzB,EAAP;IACD;;IAED,IAAIC,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;MACrB,OAAO,IAAP;IACD;;IAED,oBACE;MAAA,oCACE;QAAI,SAAS,EAAC,kBAAd;QAAA,uBACE;UAAA;UAAA;QAAA;MADF,EADF,gBAKE;QAAK,SAAS,EAAC,eAAf;QAAA,uBACE;UAAO,SAAS,EAAC,0BAAjB;UAA4C,eAAaT,SAAS,CAACU,UAAV,CAAqBC,WAArB,CAAiCC,SAA1F;UAAA,4CACE;YAAA,uBACE;cAAA,wBACE;gBAAA,uBACE;kBAAA;kBAAA;gBAAA;cADF,EADF,eAIE;gBAAA,uBACE;kBAAA;kBAAA;gBAAA;cADF,EAJF,eAOE,cAPF;YAAA;UADF,EADF,gBAYE;YAAA,UACGN,IAAI,CAACO,GAAL,CAAS,CAACC,GAAD,EAAeC,KAAf,KAAyB;cACjC,oBACE;gBAAA,wBACE;kBAAA,UAAKD,GAAG,CAACE;gBAAT,EADF,eAEE;kBAAA,UAAKF,GAAG,CAACG;gBAAT,EAFF,eAGE;kBAAI,SAAS,EAAC,YAAd;kBAAA,UACGH,GAAG,CAACI,KAAJ,MAAcX,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAEW,KAApB,uCACC,KAAC,MAAD;oBAAQ,OAAO,EAAC,WAAhB;oBAA4B,IAAI,EAAC,IAAjC;oBAAsC,QAAQ,MAA9C;oBAAA,uBACE;sBAAA;sBAAA;oBAAA;kBADF,EADD,iBAKC,KAAC,MAAD;oBACE,OAAO,EAAC,WADV;oBAEE,IAAI,EAAC,IAFP;oBAGE,OAAO,EAAE,MAAM;sBACb,KAAKV,KAAL,CAAWW,UAAX,CAAsBL,GAAtB;oBACD,CALH;oBAAA,2CAOE;sBAAA;sBAAA;oBAAA,EAPF;kBAAA;gBANJ,EAHF;cAAA,GAASC,KAAT,CADF;YAuBD,CAxBA;UADH,EAZF;QAAA;MADF,EALF;IAAA,EADF;EAkDD;;AA9DyD;AAiE5D,eAAeZ,iBAAf"},"metadata":{},"sourceType":"module"}