{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles, Icon } from '@grafana/ui';\nimport { DiffValues } from './DiffValues';\nimport { getDiffText } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst replaceDiff = {\n  op: 'replace',\n  originalValue: undefined,\n  path: [''],\n  value: undefined,\n  startLineNumber: 0\n};\nexport const DiffTitle = ({\n  diff,\n  title\n}) => {\n  const styles = useStyles(getDiffTitleStyles);\n  return diff ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Icon, {\n      type: \"mono\",\n      name: \"circle\",\n      className: styles[diff.op]\n    }), \" \", /*#__PURE__*/_jsx(\"span\", {\n      className: styles.embolden,\n      children: title\n    }), ' ', /*#__PURE__*/_jsx(\"span\", {\n      children: getDiffText(diff, diff.path.length > 1)\n    }), \" \", /*#__PURE__*/_jsx(DiffValues, {\n      diff: diff\n    })]\n  }) : /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.withoutDiff,\n    children: [/*#__PURE__*/_jsx(Icon, {\n      type: \"mono\",\n      name: \"circle\",\n      className: styles.replace\n    }), \" \", /*#__PURE__*/_jsx(\"span\", {\n      className: styles.embolden,\n      children: title\n    }), ' ', /*#__PURE__*/_jsx(\"span\", {\n      children: getDiffText(replaceDiff, false)\n    })]\n  });\n};\n\nconst getDiffTitleStyles = theme => ({\n  embolden: css`\n    font-weight: ${theme.typography.weight.bold};\n  `,\n  add: css`\n    color: ${theme.palette.online};\n  `,\n  replace: css`\n    color: ${theme.palette.warn};\n  `,\n  move: css`\n    color: ${theme.palette.warn};\n  `,\n  copy: css`\n    color: ${theme.palette.warn};\n  `,\n  _get: css`\n    color: ${theme.palette.warn};\n  `,\n  test: css`\n    color: ${theme.palette.warn};\n  `,\n  remove: css`\n    color: ${theme.palette.critical};\n  `,\n  withoutDiff: css`\n    margin-bottom: ${theme.spacing.md};\n  `\n});","map":{"version":3,"names":["css","React","useStyles","Icon","DiffValues","getDiffText","replaceDiff","op","originalValue","undefined","path","value","startLineNumber","DiffTitle","diff","title","styles","getDiffTitleStyles","embolden","length","withoutDiff","replace","theme","typography","weight","bold","add","palette","online","warn","move","copy","_get","test","remove","critical","spacing","md"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/VersionHistory/DiffTitle.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { useStyles, Icon } from '@grafana/ui';\n\nimport { DiffValues } from './DiffValues';\nimport { Diff, getDiffText } from './utils';\n\ntype DiffTitleProps = {\n  diff?: Diff;\n  title: string;\n};\n\nconst replaceDiff: Diff = { op: 'replace', originalValue: undefined, path: [''], value: undefined, startLineNumber: 0 };\n\nexport const DiffTitle: React.FC<DiffTitleProps> = ({ diff, title }) => {\n  const styles = useStyles(getDiffTitleStyles);\n  return diff ? (\n    <>\n      <Icon type=\"mono\" name=\"circle\" className={styles[diff.op]} /> <span className={styles.embolden}>{title}</span>{' '}\n      <span>{getDiffText(diff, diff.path.length > 1)}</span> <DiffValues diff={diff} />\n    </>\n  ) : (\n    <div className={styles.withoutDiff}>\n      <Icon type=\"mono\" name=\"circle\" className={styles.replace} /> <span className={styles.embolden}>{title}</span>{' '}\n      <span>{getDiffText(replaceDiff, false)}</span>\n    </div>\n  );\n};\n\nconst getDiffTitleStyles = (theme: GrafanaTheme) => ({\n  embolden: css`\n    font-weight: ${theme.typography.weight.bold};\n  `,\n  add: css`\n    color: ${theme.palette.online};\n  `,\n  replace: css`\n    color: ${theme.palette.warn};\n  `,\n  move: css`\n    color: ${theme.palette.warn};\n  `,\n  copy: css`\n    color: ${theme.palette.warn};\n  `,\n  _get: css`\n    color: ${theme.palette.warn};\n  `,\n  test: css`\n    color: ${theme.palette.warn};\n  `,\n  remove: css`\n    color: ${theme.palette.critical};\n  `,\n  withoutDiff: css`\n    margin-bottom: ${theme.spacing.md};\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,aAAhC;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAeC,WAAf,QAAkC,SAAlC;;;;AAOA,MAAMC,WAAiB,GAAG;EAAEC,EAAE,EAAE,SAAN;EAAiBC,aAAa,EAAEC,SAAhC;EAA2CC,IAAI,EAAE,CAAC,EAAD,CAAjD;EAAuDC,KAAK,EAAEF,SAA9D;EAAyEG,eAAe,EAAE;AAA1F,CAA1B;AAEA,OAAO,MAAMC,SAAmC,GAAG,CAAC;EAAEC,IAAF;EAAQC;AAAR,CAAD,KAAqB;EACtE,MAAMC,MAAM,GAAGd,SAAS,CAACe,kBAAD,CAAxB;EACA,OAAOH,IAAI,gBACT;IAAA,wBACE,KAAC,IAAD;MAAM,IAAI,EAAC,MAAX;MAAkB,IAAI,EAAC,QAAvB;MAAgC,SAAS,EAAEE,MAAM,CAACF,IAAI,CAACP,EAAN;IAAjD,EADF,oBACiE;MAAM,SAAS,EAAES,MAAM,CAACE,QAAxB;MAAA,UAAmCH;IAAnC,EADjE,EACkH,GADlH,eAEE;MAAA,UAAOV,WAAW,CAACS,IAAD,EAAOA,IAAI,CAACJ,IAAL,CAAUS,MAAV,GAAmB,CAA1B;IAAlB,EAFF,oBAEyD,KAAC,UAAD;MAAY,IAAI,EAAEL;IAAlB,EAFzD;EAAA,EADS,gBAMT;IAAK,SAAS,EAAEE,MAAM,CAACI,WAAvB;IAAA,wBACE,KAAC,IAAD;MAAM,IAAI,EAAC,MAAX;MAAkB,IAAI,EAAC,QAAvB;MAAgC,SAAS,EAAEJ,MAAM,CAACK;IAAlD,EADF,oBACgE;MAAM,SAAS,EAAEL,MAAM,CAACE,QAAxB;MAAA,UAAmCH;IAAnC,EADhE,EACiH,GADjH,eAEE;MAAA,UAAOV,WAAW,CAACC,WAAD,EAAc,KAAd;IAAlB,EAFF;EAAA,EANF;AAWD,CAbM;;AAeP,MAAMW,kBAAkB,GAAIK,KAAD,KAA0B;EACnDJ,QAAQ,EAAElB,GAAI;AAChB,mBAAmBsB,KAAK,CAACC,UAAN,CAAiBC,MAAjB,CAAwBC,IAAK;AAChD,GAHqD;EAInDC,GAAG,EAAE1B,GAAI;AACX,aAAasB,KAAK,CAACK,OAAN,CAAcC,MAAO;AAClC,GANqD;EAOnDP,OAAO,EAAErB,GAAI;AACf,aAAasB,KAAK,CAACK,OAAN,CAAcE,IAAK;AAChC,GATqD;EAUnDC,IAAI,EAAE9B,GAAI;AACZ,aAAasB,KAAK,CAACK,OAAN,CAAcE,IAAK;AAChC,GAZqD;EAanDE,IAAI,EAAE/B,GAAI;AACZ,aAAasB,KAAK,CAACK,OAAN,CAAcE,IAAK;AAChC,GAfqD;EAgBnDG,IAAI,EAAEhC,GAAI;AACZ,aAAasB,KAAK,CAACK,OAAN,CAAcE,IAAK;AAChC,GAlBqD;EAmBnDI,IAAI,EAAEjC,GAAI;AACZ,aAAasB,KAAK,CAACK,OAAN,CAAcE,IAAK;AAChC,GArBqD;EAsBnDK,MAAM,EAAElC,GAAI;AACd,aAAasB,KAAK,CAACK,OAAN,CAAcQ,QAAS;AACpC,GAxBqD;EAyBnDf,WAAW,EAAEpB,GAAI;AACnB,qBAAqBsB,KAAK,CAACc,OAAN,CAAcC,EAAG;AACtC;AA3BqD,CAA1B,CAA3B"},"metadata":{},"sourceType":"module"}