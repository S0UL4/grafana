{"ast":null,"code":"var _Icon;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { CollapsableSection, Icon, stylesFactory, useTheme } from '@grafana/ui';\nimport { useUniqueId } from 'app/plugins/datasource/influxdb/components/useUniqueId';\nimport { getSectionIcon, getSectionStorageKey } from '../utils';\nimport { SearchCheckbox } from './SearchCheckbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const SectionHeader = ({\n  section,\n  onSectionClick,\n  children,\n  onToggleChecked,\n  editable = false\n}) => {\n  var _section$expanded;\n\n  const theme = useTheme();\n  const styles = getSectionHeaderStyles(theme, section.selected, editable);\n  const setSectionExpanded = useLocalStorage(getSectionStorageKey(section.title), true)[1];\n\n  const onSectionExpand = () => {\n    setSectionExpanded(!section.expanded);\n    onSectionClick(section);\n  };\n\n  const handleCheckboxClick = useCallback(ev => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    onToggleChecked === null || onToggleChecked === void 0 ? void 0 : onToggleChecked(section);\n  }, [onToggleChecked, section]);\n  const id = useUniqueId();\n  const labelId = `section-header-label-${id}`;\n  return /*#__PURE__*/_jsx(CollapsableSection, {\n    isOpen: (_section$expanded = section.expanded) !== null && _section$expanded !== void 0 ? _section$expanded : false,\n    onToggle: onSectionExpand,\n    className: styles.wrapper,\n    contentClassName: styles.content,\n    loading: section.itemsFetching,\n    labelId: labelId,\n    label: /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(SearchCheckbox, {\n        className: styles.checkbox,\n        editable: editable,\n        checked: section.checked,\n        onClick: handleCheckboxClick,\n        \"aria-label\": \"Select folder\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.icon,\n        children: /*#__PURE__*/_jsx(Icon, {\n          name: getSectionIcon(section)\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.text,\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          id: labelId,\n          children: section.title\n        }), section.url && /*#__PURE__*/_jsxs(\"a\", {\n          href: section.url,\n          className: styles.link,\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            className: styles.separator,\n            children: \"|\"\n          }), \" \", _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n            name: \"folder-upload\"\n          })), \" Go to folder\"]\n        })]\n      })]\n    }),\n    children: children\n  });\n};\nconst getSectionHeaderStyles = stylesFactory((theme, selected = false, editable) => {\n  const {\n    sm\n  } = theme.spacing;\n  return {\n    wrapper: cx(css`\n        align-items: center;\n        font-size: ${theme.typography.size.base};\n        padding: 12px;\n        border-bottom: none;\n        color: ${theme.colors.textWeak};\n        z-index: 1;\n\n        &:hover,\n        &.selected {\n          color: ${theme.colors.text};\n        }\n\n        &:hover,\n        &:focus-visible,\n        &:focus-within {\n          a {\n            opacity: 1;\n          }\n        }\n      `, 'pointer', {\n      selected\n    }),\n    checkbox: css`\n      padding: 0 ${sm} 0 0;\n    `,\n    icon: css`\n      padding: 0 ${sm} 0 ${editable ? 0 : sm};\n    `,\n    text: css`\n      flex-grow: 1;\n      line-height: 24px;\n    `,\n    link: css`\n      padding: 2px 10px 0;\n      color: ${theme.colors.textWeak};\n      opacity: 0;\n      transition: opacity 150ms ease-in-out;\n    `,\n    separator: css`\n      margin-right: 6px;\n    `,\n    content: css`\n      padding-top: 0px;\n      padding-bottom: 0px;\n    `\n  };\n});","map":{"version":3,"names":["css","cx","React","useCallback","useLocalStorage","CollapsableSection","Icon","stylesFactory","useTheme","useUniqueId","getSectionIcon","getSectionStorageKey","SearchCheckbox","SectionHeader","section","onSectionClick","children","onToggleChecked","editable","theme","styles","getSectionHeaderStyles","selected","setSectionExpanded","title","onSectionExpand","expanded","handleCheckboxClick","ev","stopPropagation","preventDefault","id","labelId","wrapper","content","itemsFetching","checkbox","checked","icon","text","url","link","separator","sm","spacing","typography","size","base","colors","textWeak"],"sources":["/home/soula/grafana/public/app/features/search/components/SectionHeader.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, useCallback } from 'react';\nimport { useLocalStorage } from 'react-use';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { CollapsableSection, Icon, stylesFactory, useTheme } from '@grafana/ui';\nimport { useUniqueId } from 'app/plugins/datasource/influxdb/components/useUniqueId';\n\nimport { DashboardSection, OnToggleChecked } from '../types';\nimport { getSectionIcon, getSectionStorageKey } from '../utils';\n\nimport { SearchCheckbox } from './SearchCheckbox';\n\ninterface SectionHeaderProps {\n  editable?: boolean;\n  onSectionClick: (section: DashboardSection) => void;\n  onToggleChecked?: OnToggleChecked;\n  section: DashboardSection;\n  children: React.ReactNode;\n}\n\nexport const SectionHeader: FC<SectionHeaderProps> = ({\n  section,\n  onSectionClick,\n  children,\n  onToggleChecked,\n  editable = false,\n}) => {\n  const theme = useTheme();\n  const styles = getSectionHeaderStyles(theme, section.selected, editable);\n  const setSectionExpanded = useLocalStorage(getSectionStorageKey(section.title), true)[1];\n\n  const onSectionExpand = () => {\n    setSectionExpanded(!section.expanded);\n    onSectionClick(section);\n  };\n\n  const handleCheckboxClick = useCallback(\n    (ev: React.MouseEvent) => {\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      onToggleChecked?.(section);\n    },\n    [onToggleChecked, section]\n  );\n\n  const id = useUniqueId();\n  const labelId = `section-header-label-${id}`;\n\n  return (\n    <CollapsableSection\n      isOpen={section.expanded ?? false}\n      onToggle={onSectionExpand}\n      className={styles.wrapper}\n      contentClassName={styles.content}\n      loading={section.itemsFetching}\n      labelId={labelId}\n      label={\n        <>\n          <SearchCheckbox\n            className={styles.checkbox}\n            editable={editable}\n            checked={section.checked}\n            onClick={handleCheckboxClick}\n            aria-label=\"Select folder\"\n          />\n\n          <div className={styles.icon}>\n            <Icon name={getSectionIcon(section)} />\n          </div>\n\n          <div className={styles.text}>\n            <span id={labelId}>{section.title}</span>\n            {section.url && (\n              <a href={section.url} className={styles.link}>\n                <span className={styles.separator}>|</span> <Icon name=\"folder-upload\" /> Go to folder\n              </a>\n            )}\n          </div>\n        </>\n      }\n    >\n      {children}\n    </CollapsableSection>\n  );\n};\n\nconst getSectionHeaderStyles = stylesFactory((theme: GrafanaTheme, selected = false, editable: boolean) => {\n  const { sm } = theme.spacing;\n  return {\n    wrapper: cx(\n      css`\n        align-items: center;\n        font-size: ${theme.typography.size.base};\n        padding: 12px;\n        border-bottom: none;\n        color: ${theme.colors.textWeak};\n        z-index: 1;\n\n        &:hover,\n        &.selected {\n          color: ${theme.colors.text};\n        }\n\n        &:hover,\n        &:focus-visible,\n        &:focus-within {\n          a {\n            opacity: 1;\n          }\n        }\n      `,\n      'pointer',\n      { selected }\n    ),\n    checkbox: css`\n      padding: 0 ${sm} 0 0;\n    `,\n    icon: css`\n      padding: 0 ${sm} 0 ${editable ? 0 : sm};\n    `,\n    text: css`\n      flex-grow: 1;\n      line-height: 24px;\n    `,\n    link: css`\n      padding: 2px 10px 0;\n      color: ${theme.colors.textWeak};\n      opacity: 0;\n      transition: opacity 150ms ease-in-out;\n    `,\n    separator: css`\n      margin-right: 6px;\n    `,\n    content: css`\n      padding-top: 0px;\n      padding-bottom: 0px;\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}