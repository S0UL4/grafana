{"ast":null,"code":"import React from 'react';\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst LABEL_WIDTH = 26;\nexport const HttpProxySettings = ({\n  dataSourceConfig,\n  onChange,\n  showForwardOAuthIdentityOption = true\n}) => {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form-inline\",\n      children: [/*#__PURE__*/_jsx(InlineField, {\n        label: \"TLS Client Auth\",\n        labelWidth: LABEL_WIDTH,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          id: \"http-settings-tls-client-auth\",\n          value: dataSourceConfig.jsonData.tlsAuth || false,\n          onChange: event => onChange(Object.assign({}, dataSourceConfig.jsonData, {\n            tlsAuth: event.currentTarget.checked\n          }))\n        })\n      }), /*#__PURE__*/_jsx(InlineField, {\n        label: \"With CA Cert\",\n        tooltip: \"Needed for verifying self-signed TLS Certs\",\n        labelWidth: LABEL_WIDTH,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          id: \"http-settings-ca-cert\",\n          value: dataSourceConfig.jsonData.tlsAuthWithCACert || false,\n          onChange: event => onChange(Object.assign({}, dataSourceConfig.jsonData, {\n            tlsAuthWithCACert: event.currentTarget.checked\n          }))\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"gf-form-inline\",\n      children: /*#__PURE__*/_jsx(InlineField, {\n        label: \"Skip TLS Verify\",\n        labelWidth: LABEL_WIDTH,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          id: \"http-settings-skip-tls-verify\",\n          value: dataSourceConfig.jsonData.tlsSkipVerify || false,\n          onChange: event => onChange(Object.assign({}, dataSourceConfig.jsonData, {\n            tlsSkipVerify: event.currentTarget.checked\n          }))\n        })\n      })\n    }), showForwardOAuthIdentityOption && /*#__PURE__*/_jsx(\"div\", {\n      className: \"gf-form-inline\",\n      children: /*#__PURE__*/_jsx(InlineField, {\n        label: \"Forward OAuth Identity\",\n        tooltip: \"Forward the user's upstream OAuth identity to the data source (Their access token gets passed along).\",\n        labelWidth: LABEL_WIDTH,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          id: \"http-settings-forward-oauth\",\n          value: dataSourceConfig.jsonData.oauthPassThru || false,\n          onChange: event => onChange(Object.assign({}, dataSourceConfig.jsonData, {\n            oauthPassThru: event.currentTarget.checked\n          }))\n        })\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","InlineField","InlineSwitch","LABEL_WIDTH","HttpProxySettings","dataSourceConfig","onChange","showForwardOAuthIdentityOption","jsonData","tlsAuth","event","currentTarget","checked","tlsAuthWithCACert","tlsSkipVerify","oauthPassThru"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataSourceSettings/HttpProxySettings.tsx"],"sourcesContent":["import React from 'react';\n\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineSwitch } from '../Switch/Switch';\n\nimport { HttpSettingsBaseProps } from './types';\n\nconst LABEL_WIDTH = 26;\n\nexport const HttpProxySettings: React.FC<HttpSettingsBaseProps> = ({\n  dataSourceConfig,\n  onChange,\n  showForwardOAuthIdentityOption = true,\n}) => {\n  return (\n    <>\n      <div className=\"gf-form-inline\">\n        <InlineField label=\"TLS Client Auth\" labelWidth={LABEL_WIDTH}>\n          <InlineSwitch\n            id=\"http-settings-tls-client-auth\"\n            value={dataSourceConfig.jsonData.tlsAuth || false}\n            onChange={(event) => onChange({ ...dataSourceConfig.jsonData, tlsAuth: event!.currentTarget.checked })}\n          />\n        </InlineField>\n        <InlineField label=\"With CA Cert\" tooltip=\"Needed for verifying self-signed TLS Certs\" labelWidth={LABEL_WIDTH}>\n          <InlineSwitch\n            id=\"http-settings-ca-cert\"\n            value={dataSourceConfig.jsonData.tlsAuthWithCACert || false}\n            onChange={(event) =>\n              onChange({ ...dataSourceConfig.jsonData, tlsAuthWithCACert: event!.currentTarget.checked })\n            }\n          />\n        </InlineField>\n      </div>\n      <div className=\"gf-form-inline\">\n        <InlineField label=\"Skip TLS Verify\" labelWidth={LABEL_WIDTH}>\n          <InlineSwitch\n            id=\"http-settings-skip-tls-verify\"\n            value={dataSourceConfig.jsonData.tlsSkipVerify || false}\n            onChange={(event) =>\n              onChange({ ...dataSourceConfig.jsonData, tlsSkipVerify: event!.currentTarget.checked })\n            }\n          />\n        </InlineField>\n      </div>\n      {showForwardOAuthIdentityOption && (\n        <div className=\"gf-form-inline\">\n          <InlineField\n            label=\"Forward OAuth Identity\"\n            tooltip=\"Forward the user's upstream OAuth identity to the data source (Their access token gets passed along).\"\n            labelWidth={LABEL_WIDTH}\n          >\n            <InlineSwitch\n              id=\"http-settings-forward-oauth\"\n              value={dataSourceConfig.jsonData.oauthPassThru || false}\n              onChange={(event) =>\n                onChange({ ...dataSourceConfig.jsonData, oauthPassThru: event!.currentTarget.checked })\n              }\n            />\n          </InlineField>\n        </div>\n      )}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;;AAIA,MAAMC,WAAW,GAAG,EAApB;AAEA,OAAO,MAAMC,iBAAkD,GAAG,CAAC;EACjEC,gBADiE;EAEjEC,QAFiE;EAGjEC,8BAA8B,GAAG;AAHgC,CAAD,KAI5D;EACJ,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE,KAAC,WAAD;QAAa,KAAK,EAAC,iBAAnB;QAAqC,UAAU,EAAEJ,WAAjD;QAAA,uBACE,KAAC,YAAD;UACE,EAAE,EAAC,+BADL;UAEE,KAAK,EAAEE,gBAAgB,CAACG,QAAjB,CAA0BC,OAA1B,IAAqC,KAF9C;UAGE,QAAQ,EAAGC,KAAD,IAAWJ,QAAQ,mBAAMD,gBAAgB,CAACG,QAAvB;YAAiCC,OAAO,EAAEC,KAAK,CAAEC,aAAP,CAAqBC;UAA/D;QAH/B;MADF,EADF,eAQE,KAAC,WAAD;QAAa,KAAK,EAAC,cAAnB;QAAkC,OAAO,EAAC,4CAA1C;QAAuF,UAAU,EAAET,WAAnG;QAAA,uBACE,KAAC,YAAD;UACE,EAAE,EAAC,uBADL;UAEE,KAAK,EAAEE,gBAAgB,CAACG,QAAjB,CAA0BK,iBAA1B,IAA+C,KAFxD;UAGE,QAAQ,EAAGH,KAAD,IACRJ,QAAQ,mBAAMD,gBAAgB,CAACG,QAAvB;YAAiCK,iBAAiB,EAAEH,KAAK,CAAEC,aAAP,CAAqBC;UAAzE;QAJZ;MADF,EARF;IAAA,EADF,eAmBE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE,KAAC,WAAD;QAAa,KAAK,EAAC,iBAAnB;QAAqC,UAAU,EAAET,WAAjD;QAAA,uBACE,KAAC,YAAD;UACE,EAAE,EAAC,+BADL;UAEE,KAAK,EAAEE,gBAAgB,CAACG,QAAjB,CAA0BM,aAA1B,IAA2C,KAFpD;UAGE,QAAQ,EAAGJ,KAAD,IACRJ,QAAQ,mBAAMD,gBAAgB,CAACG,QAAvB;YAAiCM,aAAa,EAAEJ,KAAK,CAAEC,aAAP,CAAqBC;UAArE;QAJZ;MADF;IADF,EAnBF,EA8BGL,8BAA8B,iBAC7B;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE,KAAC,WAAD;QACE,KAAK,EAAC,wBADR;QAEE,OAAO,EAAC,uGAFV;QAGE,UAAU,EAAEJ,WAHd;QAAA,uBAKE,KAAC,YAAD;UACE,EAAE,EAAC,6BADL;UAEE,KAAK,EAAEE,gBAAgB,CAACG,QAAjB,CAA0BO,aAA1B,IAA2C,KAFpD;UAGE,QAAQ,EAAGL,KAAD,IACRJ,QAAQ,mBAAMD,gBAAgB,CAACG,QAAvB;YAAiCO,aAAa,EAAEL,KAAK,CAAEC,aAAP,CAAqBC;UAArE;QAJZ;MALF;IADF,EA/BJ;EAAA,EADF;AAkDD,CAvDM"},"metadata":{},"sourceType":"module"}