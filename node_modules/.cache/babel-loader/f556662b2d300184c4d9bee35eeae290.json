{"ast":null,"code":"import React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { getGridStyles } from './gridStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AmRootRouteRead = ({\n  routes\n}) => {\n  const styles = useStyles2(getGridStyles);\n  const receiver = routes.receiver || '-';\n  const groupBy = routes.groupBy.join(', ') || '-';\n  const groupWait = routes.groupWaitValue ? `${routes.groupWaitValue}${routes.groupWaitValueType}` : '-';\n  const groupInterval = routes.groupIntervalValue ? `${routes.groupIntervalValue}${routes.groupIntervalValueType}` : '-';\n  const repeatInterval = routes.repeatIntervalValue ? `${routes.repeatIntervalValue}${routes.repeatIntervalValueType}` : '-';\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.titleCell,\n      children: \"Contact point\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.valueCell,\n      \"data-testid\": \"am-routes-root-receiver\",\n      children: receiver\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.titleCell,\n      children: \"Group by\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.valueCell,\n      \"data-testid\": \"am-routes-root-group-by\",\n      children: groupBy\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.titleCell,\n      children: \"Timings\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.valueCell,\n      \"data-testid\": \"am-routes-root-timings\",\n      children: [\"Group wait: \", groupWait, \" | Group interval: \", groupInterval, \" | Repeat interval: \", repeatInterval]\n    })]\n  });\n};","map":{"version":3,"names":["React","useStyles2","getGridStyles","AmRootRouteRead","routes","styles","receiver","groupBy","join","groupWait","groupWaitValue","groupWaitValueType","groupInterval","groupIntervalValue","groupIntervalValueType","repeatInterval","repeatIntervalValue","repeatIntervalValueType","container","titleCell","valueCell"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/amroutes/AmRootRouteRead.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { FormAmRoute } from '../../types/amroutes';\n\nimport { getGridStyles } from './gridStyles';\n\nexport interface AmRootRouteReadProps {\n  routes: FormAmRoute;\n}\n\nexport const AmRootRouteRead: FC<AmRootRouteReadProps> = ({ routes }) => {\n  const styles = useStyles2(getGridStyles);\n\n  const receiver = routes.receiver || '-';\n  const groupBy = routes.groupBy.join(', ') || '-';\n  const groupWait = routes.groupWaitValue ? `${routes.groupWaitValue}${routes.groupWaitValueType}` : '-';\n  const groupInterval = routes.groupIntervalValue\n    ? `${routes.groupIntervalValue}${routes.groupIntervalValueType}`\n    : '-';\n  const repeatInterval = routes.repeatIntervalValue\n    ? `${routes.repeatIntervalValue}${routes.repeatIntervalValueType}`\n    : '-';\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleCell}>Contact point</div>\n      <div className={styles.valueCell} data-testid=\"am-routes-root-receiver\">\n        {receiver}\n      </div>\n      <div className={styles.titleCell}>Group by</div>\n      <div className={styles.valueCell} data-testid=\"am-routes-root-group-by\">\n        {groupBy}\n      </div>\n      <div className={styles.titleCell}>Timings</div>\n      <div className={styles.valueCell} data-testid=\"am-routes-root-timings\">\n        Group wait: {groupWait} | Group interval: {groupInterval} | Repeat interval: {repeatInterval}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,UAAT,QAA2B,aAA3B;AAIA,SAASC,aAAT,QAA8B,cAA9B;;;AAMA,OAAO,MAAMC,eAAyC,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAgB;EACvE,MAAMC,MAAM,GAAGJ,UAAU,CAACC,aAAD,CAAzB;EAEA,MAAMI,QAAQ,GAAGF,MAAM,CAACE,QAAP,IAAmB,GAApC;EACA,MAAMC,OAAO,GAAGH,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoB,IAApB,KAA6B,GAA7C;EACA,MAAMC,SAAS,GAAGL,MAAM,CAACM,cAAP,GAAyB,GAAEN,MAAM,CAACM,cAAe,GAAEN,MAAM,CAACO,kBAAmB,EAA7E,GAAiF,GAAnG;EACA,MAAMC,aAAa,GAAGR,MAAM,CAACS,kBAAP,GACjB,GAAET,MAAM,CAACS,kBAAmB,GAAET,MAAM,CAACU,sBAAuB,EAD3C,GAElB,GAFJ;EAGA,MAAMC,cAAc,GAAGX,MAAM,CAACY,mBAAP,GAClB,GAAEZ,MAAM,CAACY,mBAAoB,GAAEZ,MAAM,CAACa,uBAAwB,EAD5C,GAEnB,GAFJ;EAIA,oBACE;IAAK,SAAS,EAAEZ,MAAM,CAACa,SAAvB;IAAA,wBACE;MAAK,SAAS,EAAEb,MAAM,CAACc,SAAvB;MAAA;IAAA,EADF,eAEE;MAAK,SAAS,EAAEd,MAAM,CAACe,SAAvB;MAAkC,eAAY,yBAA9C;MAAA,UACGd;IADH,EAFF,eAKE;MAAK,SAAS,EAAED,MAAM,CAACc,SAAvB;MAAA;IAAA,EALF,eAME;MAAK,SAAS,EAAEd,MAAM,CAACe,SAAvB;MAAkC,eAAY,yBAA9C;MAAA,UACGb;IADH,EANF,eASE;MAAK,SAAS,EAAEF,MAAM,CAACc,SAAvB;MAAA;IAAA,EATF,eAUE;MAAK,SAAS,EAAEd,MAAM,CAACe,SAAvB;MAAkC,eAAY,wBAA9C;MAAA,2BACeX,SADf,yBAC6CG,aAD7C,0BACgFG,cADhF;IAAA,EAVF;EAAA,EADF;AAgBD,CA7BM"},"metadata":{},"sourceType":"module"}