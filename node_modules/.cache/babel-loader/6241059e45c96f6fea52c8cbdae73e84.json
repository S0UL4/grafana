{"ast":null,"code":"var _IoIosArrowDown, _IoIosArrowRight, _strong;\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport { sortBy as _sortBy } from 'lodash';\nimport * as React from 'react';\nimport IoIosArrowDown from 'react-icons/lib/io/ios-arrow-down';\nimport IoIosArrowRight from 'react-icons/lib/io/ios-arrow-right';\nimport { useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../../Theme';\nimport { uAlignIcon, ubMb1 } from '../../uberUtilityStyles';\nimport { formatDuration } from '../utils';\nimport AccordianKeyValues from './AccordianKeyValues';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    AccordianLogs: css`\n      label: AccordianLogs;\n      border: 1px solid ${autoColor(theme, '#d8d8d8')};\n      position: relative;\n      margin-bottom: 0.25rem;\n    `,\n    AccordianLogsHeader: css`\n      label: AccordianLogsHeader;\n      background: ${autoColor(theme, '#e4e4e4')};\n      color: inherit;\n      display: block;\n      padding: 0.25rem 0.5rem;\n      &:hover {\n        background: ${autoColor(theme, '#dadada')};\n      }\n    `,\n    AccordianLogsContent: css`\n      label: AccordianLogsContent;\n      background: ${autoColor(theme, '#f0f0f0')};\n      border-top: 1px solid ${autoColor(theme, '#d8d8d8')};\n      padding: 0.5rem 0.5rem 0.25rem 0.5rem;\n    `,\n    AccordianLogsFooter: css`\n      label: AccordianLogsFooter;\n      color: ${autoColor(theme, '#999')};\n    `\n  };\n};\n\nexport default function AccordianLogs(props) {\n  const {\n    interactive,\n    isOpen,\n    linksGetter,\n    logs,\n    openedItems,\n    onItemToggle,\n    onToggle,\n    timestamp\n  } = props;\n  let arrow = null;\n  let HeaderComponent = 'span';\n  let headerProps = null;\n\n  if (interactive) {\n    arrow = isOpen ? _IoIosArrowDown || (_IoIosArrowDown = /*#__PURE__*/_jsx(IoIosArrowDown, {\n      className: uAlignIcon\n    })) : _IoIosArrowRight || (_IoIosArrowRight = /*#__PURE__*/_jsx(IoIosArrowRight, {\n      className: \"u-align-icon\"\n    }));\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: onToggle,\n      role: 'switch'\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.AccordianLogs,\n    children: [/*#__PURE__*/_jsxs(HeaderComponent, Object.assign({\n      className: styles.AccordianLogsHeader\n    }, headerProps, {\n      children: [arrow, \" \", _strong || (_strong = /*#__PURE__*/_jsx(\"strong\", {\n        children: \"Logs\"\n      })), \" (\", logs.length, \")\"]\n    })), isOpen && /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.AccordianLogsContent,\n      children: [_sortBy(logs, 'timestamp').map((log, i) => /*#__PURE__*/_jsx(AccordianKeyValues // `i` is necessary in the key because timestamps can repeat\n      , {\n        className: i < logs.length - 1 ? ubMb1 : null,\n        data: log.fields || [],\n        highContrast: true,\n        interactive: interactive,\n        isOpen: openedItems ? openedItems.has(log) : false,\n        label: `${formatDuration(log.timestamp - timestamp)}`,\n        linksGetter: linksGetter,\n        onToggle: interactive && onItemToggle ? () => onItemToggle(log) : null\n      }, `${log.timestamp}-${i}`)), /*#__PURE__*/_jsx(\"small\", {\n        className: styles.AccordianLogsFooter,\n        children: \"Log timestamps are relative to the start time of the full trace.\"\n      })]\n    })]\n  });\n}\nAccordianLogs.defaultProps = {\n  interactive: true,\n  linksGetter: undefined,\n  onItemToggle: undefined,\n  onToggle: undefined,\n  openedItems: undefined\n};","map":{"version":3,"names":["css","sortBy","_sortBy","React","IoIosArrowDown","IoIosArrowRight","useStyles2","autoColor","uAlignIcon","ubMb1","formatDuration","AccordianKeyValues","getStyles","theme","AccordianLogs","AccordianLogsHeader","AccordianLogsContent","AccordianLogsFooter","props","interactive","isOpen","linksGetter","logs","openedItems","onItemToggle","onToggle","timestamp","arrow","HeaderComponent","headerProps","onClick","role","styles","length","map","log","i","fields","has","defaultProps","undefined"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanDetail/AccordianLogs.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { sortBy as _sortBy } from 'lodash';\nimport * as React from 'react';\nimport IoIosArrowDown from 'react-icons/lib/io/ios-arrow-down';\nimport IoIosArrowRight from 'react-icons/lib/io/ios-arrow-right';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TNil } from '../../types';\nimport { TraceLog, TraceKeyValuePair, TraceLink } from '../../types/trace';\nimport { uAlignIcon, ubMb1 } from '../../uberUtilityStyles';\nimport { formatDuration } from '../utils';\n\nimport AccordianKeyValues from './AccordianKeyValues';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    AccordianLogs: css`\n      label: AccordianLogs;\n      border: 1px solid ${autoColor(theme, '#d8d8d8')};\n      position: relative;\n      margin-bottom: 0.25rem;\n    `,\n    AccordianLogsHeader: css`\n      label: AccordianLogsHeader;\n      background: ${autoColor(theme, '#e4e4e4')};\n      color: inherit;\n      display: block;\n      padding: 0.25rem 0.5rem;\n      &:hover {\n        background: ${autoColor(theme, '#dadada')};\n      }\n    `,\n    AccordianLogsContent: css`\n      label: AccordianLogsContent;\n      background: ${autoColor(theme, '#f0f0f0')};\n      border-top: 1px solid ${autoColor(theme, '#d8d8d8')};\n      padding: 0.5rem 0.5rem 0.25rem 0.5rem;\n    `,\n    AccordianLogsFooter: css`\n      label: AccordianLogsFooter;\n      color: ${autoColor(theme, '#999')};\n    `,\n  };\n};\n\ntype AccordianLogsProps = {\n  interactive?: boolean;\n  isOpen: boolean;\n  linksGetter: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n  logs: TraceLog[];\n  onItemToggle?: (log: TraceLog) => void;\n  onToggle?: () => void;\n  openedItems?: Set<TraceLog>;\n  timestamp: number;\n};\n\nexport default function AccordianLogs(props: AccordianLogsProps) {\n  const { interactive, isOpen, linksGetter, logs, openedItems, onItemToggle, onToggle, timestamp } = props;\n  let arrow: React.ReactNode | null = null;\n  let HeaderComponent: 'span' | 'a' = 'span';\n  let headerProps: {} | null = null;\n  if (interactive) {\n    arrow = isOpen ? <IoIosArrowDown className={uAlignIcon} /> : <IoIosArrowRight className=\"u-align-icon\" />;\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: onToggle,\n      role: 'switch',\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={styles.AccordianLogs}>\n      <HeaderComponent className={styles.AccordianLogsHeader} {...headerProps}>\n        {arrow} <strong>Logs</strong> ({logs.length})\n      </HeaderComponent>\n      {isOpen && (\n        <div className={styles.AccordianLogsContent}>\n          {_sortBy(logs, 'timestamp').map((log, i) => (\n            <AccordianKeyValues\n              // `i` is necessary in the key because timestamps can repeat\n              key={`${log.timestamp}-${i}`}\n              className={i < logs.length - 1 ? ubMb1 : null}\n              data={log.fields || []}\n              highContrast\n              interactive={interactive}\n              isOpen={openedItems ? openedItems.has(log) : false}\n              label={`${formatDuration(log.timestamp - timestamp)}`}\n              linksGetter={linksGetter}\n              onToggle={interactive && onItemToggle ? () => onItemToggle(log) : null}\n            />\n          ))}\n          <small className={styles.AccordianLogsFooter}>\n            Log timestamps are relative to the start time of the full trace.\n          </small>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAccordianLogs.defaultProps = {\n  interactive: true,\n  linksGetter: undefined,\n  onItemToggle: undefined,\n  onToggle: undefined,\n  openedItems: undefined,\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,MAAM,IAAIC,OAAnB,QAAkC,QAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,yBAAlC;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA0B;EAC1C,OAAO;IACLC,aAAa,EAAEd,GAAI;AACvB;AACA,0BAA0BO,SAAS,CAACM,KAAD,EAAQ,SAAR,CAAmB;AACtD;AACA;AACA,KANS;IAOLE,mBAAmB,EAAEf,GAAI;AAC7B;AACA,oBAAoBO,SAAS,CAACM,KAAD,EAAQ,SAAR,CAAmB;AAChD;AACA;AACA;AACA;AACA,sBAAsBN,SAAS,CAACM,KAAD,EAAQ,SAAR,CAAmB;AAClD;AACA,KAhBS;IAiBLG,oBAAoB,EAAEhB,GAAI;AAC9B;AACA,oBAAoBO,SAAS,CAACM,KAAD,EAAQ,SAAR,CAAmB;AAChD,8BAA8BN,SAAS,CAACM,KAAD,EAAQ,SAAR,CAAmB;AAC1D;AACA,KAtBS;IAuBLI,mBAAmB,EAAEjB,GAAI;AAC7B;AACA,eAAeO,SAAS,CAACM,KAAD,EAAQ,MAAR,CAAgB;AACxC;EA1BS,CAAP;AA4BD,CA7BD;;AA0CA,eAAe,SAASC,aAAT,CAAuBI,KAAvB,EAAkD;EAC/D,MAAM;IAAEC,WAAF;IAAeC,MAAf;IAAuBC,WAAvB;IAAoCC,IAApC;IAA0CC,WAA1C;IAAuDC,YAAvD;IAAqEC,QAArE;IAA+EC;EAA/E,IAA6FR,KAAnG;EACA,IAAIS,KAA6B,GAAG,IAApC;EACA,IAAIC,eAA6B,GAAG,MAApC;EACA,IAAIC,WAAsB,GAAG,IAA7B;;EACA,IAAIV,WAAJ,EAAiB;IACfQ,KAAK,GAAGP,MAAM,sDAAG,KAAC,cAAD;MAAgB,SAAS,EAAEZ;IAA3B,EAAH,yDAA+C,KAAC,eAAD;MAAiB,SAAS,EAAC;IAA3B,EAA/C,CAAd;IACAoB,eAAe,GAAG,GAAlB;IACAC,WAAW,GAAG;MACZ,gBAAgBT,MADJ;MAEZU,OAAO,EAAEL,QAFG;MAGZM,IAAI,EAAE;IAHM,CAAd;EAKD;;EAED,MAAMC,MAAM,GAAG1B,UAAU,CAACM,SAAD,CAAzB;EACA,oBACE;IAAK,SAAS,EAAEoB,MAAM,CAAClB,aAAvB;IAAA,wBACE,MAAC,eAAD;MAAiB,SAAS,EAAEkB,MAAM,CAACjB;IAAnC,GAA4Dc,WAA5D;MAAA,WACGF,KADH,0CACU;QAAA;MAAA,EADV,SACkCL,IAAI,CAACW,MADvC;IAAA,GADF,EAIGb,MAAM,iBACL;MAAK,SAAS,EAAEY,MAAM,CAAChB,oBAAvB;MAAA,WACGd,OAAO,CAACoB,IAAD,EAAO,WAAP,CAAP,CAA2BY,GAA3B,CAA+B,CAACC,GAAD,EAAMC,CAAN,kBAC9B,KAAC,kBAAD,CACE;MADF;QAGE,SAAS,EAAEA,CAAC,GAAGd,IAAI,CAACW,MAAL,GAAc,CAAlB,GAAsBxB,KAAtB,GAA8B,IAH3C;QAIE,IAAI,EAAE0B,GAAG,CAACE,MAAJ,IAAc,EAJtB;QAKE,YAAY,MALd;QAME,WAAW,EAAElB,WANf;QAOE,MAAM,EAAEI,WAAW,GAAGA,WAAW,CAACe,GAAZ,CAAgBH,GAAhB,CAAH,GAA0B,KAP/C;QAQE,KAAK,EAAG,GAAEzB,cAAc,CAACyB,GAAG,CAACT,SAAJ,GAAgBA,SAAjB,CAA4B,EARtD;QASE,WAAW,EAAEL,WATf;QAUE,QAAQ,EAAEF,WAAW,IAAIK,YAAf,GAA8B,MAAMA,YAAY,CAACW,GAAD,CAAhD,GAAwD;MAVpE,GAEQ,GAAEA,GAAG,CAACT,SAAU,IAAGU,CAAE,EAF7B,CADD,CADH,eAeE;QAAO,SAAS,EAAEJ,MAAM,CAACf,mBAAzB;QAAA;MAAA,EAfF;IAAA,EALJ;EAAA,EADF;AA4BD;AAEDH,aAAa,CAACyB,YAAd,GAA6B;EAC3BpB,WAAW,EAAE,IADc;EAE3BE,WAAW,EAAEmB,SAFc;EAG3BhB,YAAY,EAAEgB,SAHa;EAI3Bf,QAAQ,EAAEe,SAJiB;EAK3BjB,WAAW,EAAEiB;AALc,CAA7B"},"metadata":{},"sourceType":"module"}