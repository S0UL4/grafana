{"ast":null,"code":"import { ScalarDimensionMode } from './types';\nimport { findField, getLastNotNullFieldValue } from './utils'; //---------------------------------------------------------\n// Scalar dimension\n//---------------------------------------------------------\n\nexport function getScalarDimension(frame, config) {\n  return getScalarDimensionForField(findField(frame, config === null || config === void 0 ? void 0 : config.field), config);\n}\nexport function getScalarDimensionForField(field, cfg) {\n  if (!field) {\n    var _cfg$fixed, _cfg$field;\n\n    const v = (_cfg$fixed = cfg.fixed) !== null && _cfg$fixed !== void 0 ? _cfg$fixed : 0;\n    return {\n      isAssumed: Boolean((_cfg$field = cfg.field) === null || _cfg$field === void 0 ? void 0 : _cfg$field.length) || !cfg.fixed,\n      fixed: v,\n      value: () => v,\n      get: () => v\n    };\n  } //mod mode as default\n\n\n  let validated = value => {\n    return value % cfg.max;\n  }; //capped mode\n\n\n  if (cfg.mode === ScalarDimensionMode.Clamped) {\n    validated = value => {\n      if (value < cfg.min) {\n        return cfg.min;\n      }\n\n      if (value > cfg.max) {\n        return cfg.max;\n      }\n\n      return value;\n    };\n  }\n\n  const get = i => {\n    const v = field.values.get(i);\n\n    if (v === null || typeof v !== 'number') {\n      return 0;\n    }\n\n    return validated(v);\n  };\n\n  return {\n    field,\n    get,\n    value: () => getLastNotNullFieldValue(field)\n  };\n}","map":{"version":3,"names":["ScalarDimensionMode","findField","getLastNotNullFieldValue","getScalarDimension","frame","config","getScalarDimensionForField","field","cfg","v","fixed","isAssumed","Boolean","length","value","get","validated","max","mode","Clamped","min","i","values"],"sources":["/home/soula/grafana/public/app/features/dimensions/scalar.ts"],"sourcesContent":["import { DataFrame, Field } from '@grafana/data';\n\nimport { DimensionSupplier, ScalarDimensionConfig, ScalarDimensionMode } from './types';\nimport { findField, getLastNotNullFieldValue } from './utils';\n\n//---------------------------------------------------------\n// Scalar dimension\n//---------------------------------------------------------\nexport function getScalarDimension(\n  frame: DataFrame | undefined,\n  config: ScalarDimensionConfig\n): DimensionSupplier<number> {\n  return getScalarDimensionForField(findField(frame, config?.field), config);\n}\nexport function getScalarDimensionForField(\n  field: Field | undefined,\n  cfg: ScalarDimensionConfig\n): DimensionSupplier<number> {\n  if (!field) {\n    const v = cfg.fixed ?? 0;\n    return {\n      isAssumed: Boolean(cfg.field?.length) || !cfg.fixed,\n      fixed: v,\n      value: () => v,\n      get: () => v,\n    };\n  }\n\n  //mod mode as default\n  let validated = (value: number) => {\n    return value % cfg.max;\n  };\n\n  //capped mode\n  if (cfg.mode === ScalarDimensionMode.Clamped) {\n    validated = (value: number) => {\n      if (value < cfg.min) {\n        return cfg.min;\n      }\n      if (value > cfg.max) {\n        return cfg.max;\n      }\n      return value;\n    };\n  }\n\n  const get = (i: number) => {\n    const v = field.values.get(i);\n    if (v === null || typeof v !== 'number') {\n      return 0;\n    }\n    return validated(v);\n  };\n\n  return {\n    field,\n    get,\n    value: () => getLastNotNullFieldValue(field),\n  };\n}\n"],"mappings":"AAEA,SAAmDA,mBAAnD,QAA8E,SAA9E;AACA,SAASC,SAAT,EAAoBC,wBAApB,QAAoD,SAApD,C,CAEA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CACLC,KADK,EAELC,MAFK,EAGsB;EAC3B,OAAOC,0BAA0B,CAACL,SAAS,CAACG,KAAD,EAAQC,MAAR,aAAQA,MAAR,uBAAQA,MAAM,CAAEE,KAAhB,CAAV,EAAkCF,MAAlC,CAAjC;AACD;AACD,OAAO,SAASC,0BAAT,CACLC,KADK,EAELC,GAFK,EAGsB;EAC3B,IAAI,CAACD,KAAL,EAAY;IAAA;;IACV,MAAME,CAAC,iBAAGD,GAAG,CAACE,KAAP,mDAAgB,CAAvB;IACA,OAAO;MACLC,SAAS,EAAEC,OAAO,eAACJ,GAAG,CAACD,KAAL,+CAAC,WAAWM,MAAZ,CAAP,IAA8B,CAACL,GAAG,CAACE,KADzC;MAELA,KAAK,EAAED,CAFF;MAGLK,KAAK,EAAE,MAAML,CAHR;MAILM,GAAG,EAAE,MAAMN;IAJN,CAAP;EAMD,CAT0B,CAW3B;;;EACA,IAAIO,SAAS,GAAIF,KAAD,IAAmB;IACjC,OAAOA,KAAK,GAAGN,GAAG,CAACS,GAAnB;EACD,CAFD,CAZ2B,CAgB3B;;;EACA,IAAIT,GAAG,CAACU,IAAJ,KAAalB,mBAAmB,CAACmB,OAArC,EAA8C;IAC5CH,SAAS,GAAIF,KAAD,IAAmB;MAC7B,IAAIA,KAAK,GAAGN,GAAG,CAACY,GAAhB,EAAqB;QACnB,OAAOZ,GAAG,CAACY,GAAX;MACD;;MACD,IAAIN,KAAK,GAAGN,GAAG,CAACS,GAAhB,EAAqB;QACnB,OAAOT,GAAG,CAACS,GAAX;MACD;;MACD,OAAOH,KAAP;IACD,CARD;EASD;;EAED,MAAMC,GAAG,GAAIM,CAAD,IAAe;IACzB,MAAMZ,CAAC,GAAGF,KAAK,CAACe,MAAN,CAAaP,GAAb,CAAiBM,CAAjB,CAAV;;IACA,IAAIZ,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,QAA/B,EAAyC;MACvC,OAAO,CAAP;IACD;;IACD,OAAOO,SAAS,CAACP,CAAD,CAAhB;EACD,CAND;;EAQA,OAAO;IACLF,KADK;IAELQ,GAFK;IAGLD,KAAK,EAAE,MAAMZ,wBAAwB,CAACK,KAAD;EAHhC,CAAP;AAKD"},"metadata":{},"sourceType":"module"}