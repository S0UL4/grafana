{"ast":null,"code":"import React from 'react';\nimport { PanelPlugin } from '@grafana/data';\nimport { TagsInput } from '@grafana/ui';\nimport { AnnoListPanel } from './AnnoListPanel';\nimport { defaultPanelOptions } from './models.gen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const plugin = new PanelPlugin(AnnoListPanel).setPanelOptions(builder => {\n  builder.addRadio({\n    category: ['Annotation query'],\n    path: 'onlyFromThisDashboard',\n    name: 'Query filter',\n    defaultValue: defaultPanelOptions.onlyFromThisDashboard,\n    settings: {\n      options: [{\n        value: false,\n        label: 'All dashboards'\n      }, {\n        value: true,\n        label: 'This dashboard'\n      }]\n    }\n  }).addRadio({\n    category: ['Annotation query'],\n    path: 'onlyInTimeRange',\n    name: 'Time range',\n    defaultValue: defaultPanelOptions.onlyInTimeRange,\n    settings: {\n      options: [{\n        value: false,\n        label: 'None'\n      }, {\n        value: true,\n        label: 'This dashboard'\n      }]\n    }\n  }).addCustomEditor({\n    category: ['Annotation query'],\n    id: 'tags',\n    path: 'tags',\n    name: 'Tags',\n    description: 'Match annotation tags',\n\n    editor(props) {\n      return /*#__PURE__*/_jsx(TagsInput, {\n        tags: props.value,\n        onChange: props.onChange\n      });\n    }\n\n  }).addNumberInput({\n    category: ['Annotation query'],\n    path: 'limit',\n    name: 'Limit',\n    defaultValue: defaultPanelOptions.limit\n  }).addBooleanSwitch({\n    category: ['Display'],\n    path: 'showUser',\n    name: 'Show user',\n    defaultValue: defaultPanelOptions.showUser\n  }).addBooleanSwitch({\n    category: ['Display'],\n    path: 'showTime',\n    name: 'Show time',\n    defaultValue: defaultPanelOptions.showTime\n  }).addBooleanSwitch({\n    category: ['Display'],\n    path: 'showTags',\n    name: 'Show tags',\n    defaultValue: defaultPanelOptions.showTags\n  }).addRadio({\n    category: ['Link behavior'],\n    path: 'navigateToPanel',\n    name: 'Link target',\n    defaultValue: defaultPanelOptions.navigateToPanel,\n    settings: {\n      options: [{\n        value: true,\n        label: 'Panel'\n      }, {\n        value: false,\n        label: 'Dashboard'\n      }]\n    }\n  }).addTextInput({\n    category: ['Link behavior'],\n    path: 'navigateBefore',\n    name: 'Time before',\n    defaultValue: defaultPanelOptions.navigateBefore,\n    description: ''\n  }).addTextInput({\n    category: ['Link behavior'],\n    path: 'navigateAfter',\n    name: 'Time after',\n    defaultValue: defaultPanelOptions.navigateAfter,\n    description: ''\n  });\n}) // TODO, we should support this directly in the plugin infrastructure\n.setPanelChangeHandler((panel, prevPluginId, prevOptions) => {\n  if (prevPluginId === 'ryantxu-annolist-panel') {\n    return prevOptions;\n  }\n\n  return panel.options;\n});","map":{"version":3,"names":["React","PanelPlugin","TagsInput","AnnoListPanel","defaultPanelOptions","plugin","setPanelOptions","builder","addRadio","category","path","name","defaultValue","onlyFromThisDashboard","settings","options","value","label","onlyInTimeRange","addCustomEditor","id","description","editor","props","onChange","addNumberInput","limit","addBooleanSwitch","showUser","showTime","showTags","navigateToPanel","addTextInput","navigateBefore","navigateAfter","setPanelChangeHandler","panel","prevPluginId","prevOptions"],"sources":["/home/soula/grafana/public/app/plugins/panel/annolist/module.tsx"],"sourcesContent":["import React from 'react';\n\nimport { PanelModel, PanelPlugin } from '@grafana/data';\nimport { TagsInput } from '@grafana/ui';\n\nimport { AnnoListPanel } from './AnnoListPanel';\nimport { defaultPanelOptions, PanelOptions } from './models.gen';\n\nexport const plugin = new PanelPlugin<PanelOptions>(AnnoListPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addRadio({\n        category: ['Annotation query'],\n        path: 'onlyFromThisDashboard',\n        name: 'Query filter',\n        defaultValue: defaultPanelOptions.onlyFromThisDashboard,\n        settings: {\n          options: [\n            { value: false, label: 'All dashboards' },\n            { value: true, label: 'This dashboard' },\n          ],\n        },\n      })\n      .addRadio({\n        category: ['Annotation query'],\n        path: 'onlyInTimeRange',\n        name: 'Time range',\n        defaultValue: defaultPanelOptions.onlyInTimeRange,\n        settings: {\n          options: [\n            { value: false, label: 'None' },\n            { value: true, label: 'This dashboard' },\n          ],\n        },\n      })\n      .addCustomEditor({\n        category: ['Annotation query'],\n        id: 'tags',\n        path: 'tags',\n        name: 'Tags',\n        description: 'Match annotation tags',\n        editor(props) {\n          return <TagsInput tags={props.value} onChange={props.onChange} />;\n        },\n      })\n      .addNumberInput({\n        category: ['Annotation query'],\n        path: 'limit',\n        name: 'Limit',\n        defaultValue: defaultPanelOptions.limit,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showUser',\n        name: 'Show user',\n        defaultValue: defaultPanelOptions.showUser,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showTime',\n        name: 'Show time',\n        defaultValue: defaultPanelOptions.showTime,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showTags',\n        name: 'Show tags',\n        defaultValue: defaultPanelOptions.showTags,\n      })\n      .addRadio({\n        category: ['Link behavior'],\n        path: 'navigateToPanel',\n        name: 'Link target',\n        defaultValue: defaultPanelOptions.navigateToPanel,\n        settings: {\n          options: [\n            { value: true, label: 'Panel' },\n            { value: false, label: 'Dashboard' },\n          ],\n        },\n      })\n      .addTextInput({\n        category: ['Link behavior'],\n        path: 'navigateBefore',\n        name: 'Time before',\n        defaultValue: defaultPanelOptions.navigateBefore,\n        description: '',\n      })\n      .addTextInput({\n        category: ['Link behavior'],\n        path: 'navigateAfter',\n        name: 'Time after',\n        defaultValue: defaultPanelOptions.navigateAfter,\n        description: '',\n      });\n  })\n  // TODO, we should support this directly in the plugin infrastructure\n  .setPanelChangeHandler((panel: PanelModel<PanelOptions>, prevPluginId: string, prevOptions: unknown) => {\n    if (prevPluginId === 'ryantxu-annolist-panel') {\n      return prevOptions as PanelOptions;\n    }\n\n    return panel.options;\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}