{"ast":null,"code":"import { lastValueFrom } from 'rxjs';\nimport { getBackendSrv } from '../../../core/services/backend_srv';\nimport { LibraryElementKind } from '../types';\nexport async function getLibraryPanels({\n  searchString = '',\n  perPage = 100,\n  page = 1,\n  excludeUid = '',\n  sortDirection = '',\n  typeFilter = [],\n  folderFilter = []\n} = {}) {\n  const params = new URLSearchParams();\n  params.append('searchString', searchString);\n  params.append('sortDirection', sortDirection);\n  params.append('typeFilter', typeFilter.join(','));\n  params.append('folderFilter', folderFilter.join(','));\n  params.append('excludeUid', excludeUid);\n  params.append('perPage', perPage.toString(10));\n  params.append('page', page.toString(10));\n  params.append('kind', LibraryElementKind.Panel.toString(10));\n  const {\n    result\n  } = await getBackendSrv().get(`/api/library-elements?${params.toString()}`);\n  return result;\n}\nexport async function getLibraryPanel(uid, isHandled = false) {\n  const response = await lastValueFrom(getBackendSrv().fetch({\n    method: 'GET',\n    url: `/api/library-elements/${uid}`,\n    showSuccessAlert: !isHandled,\n    showErrorAlert: !isHandled\n  }));\n  return response.data.result;\n}\nexport async function getLibraryPanelByName(name) {\n  const {\n    result\n  } = await getBackendSrv().get(`/api/library-elements/name/${name}`);\n  return result;\n}\nexport async function addLibraryPanel(panelSaveModel, folderId) {\n  const {\n    result\n  } = await getBackendSrv().post(`/api/library-elements`, {\n    folderId,\n    name: panelSaveModel.libraryPanel.name,\n    model: panelSaveModel,\n    kind: LibraryElementKind.Panel\n  });\n  return result;\n}\nexport async function updateLibraryPanel(panelSaveModel) {\n  const {\n    uid,\n    name,\n    version\n  } = panelSaveModel.libraryPanel;\n  const kind = LibraryElementKind.Panel;\n  const model = panelSaveModel;\n  const {\n    result\n  } = await getBackendSrv().patch(`/api/library-elements/${uid}`, {\n    name,\n    model,\n    version,\n    kind\n  });\n  return result;\n}\nexport function deleteLibraryPanel(uid) {\n  return getBackendSrv().delete(`/api/library-elements/${uid}`);\n}\nexport async function getLibraryPanelConnectedDashboards(libraryPanelUid) {\n  const {\n    result\n  } = await getBackendSrv().get(`/api/library-elements/${libraryPanelUid}/connections`);\n  return result;\n}\nexport async function getConnectedDashboards(uid) {\n  const connections = await getLibraryPanelConnectedDashboards(uid);\n\n  if (connections.length === 0) {\n    return [];\n  }\n\n  const searchHits = await getBackendSrv().search({\n    dashboardIds: connections.map(c => c.connectionId)\n  });\n  return searchHits;\n}","map":{"version":3,"names":["lastValueFrom","getBackendSrv","LibraryElementKind","getLibraryPanels","searchString","perPage","page","excludeUid","sortDirection","typeFilter","folderFilter","params","URLSearchParams","append","join","toString","Panel","result","get","getLibraryPanel","uid","isHandled","response","fetch","method","url","showSuccessAlert","showErrorAlert","data","getLibraryPanelByName","name","addLibraryPanel","panelSaveModel","folderId","post","libraryPanel","model","kind","updateLibraryPanel","version","patch","deleteLibraryPanel","delete","getLibraryPanelConnectedDashboards","libraryPanelUid","getConnectedDashboards","connections","length","searchHits","search","dashboardIds","map","c","connectionId"],"sources":["/home/soula/grafana/public/app/features/library-panels/state/api.ts"],"sourcesContent":["import { lastValueFrom } from 'rxjs';\n\nimport { getBackendSrv } from '../../../core/services/backend_srv';\nimport { DashboardSearchHit } from '../../search/types';\nimport {\n  LibraryElementConnectionDTO,\n  LibraryElementDTO,\n  LibraryElementKind,\n  LibraryElementsSearchResult,\n  PanelModelWithLibraryPanel,\n} from '../types';\n\nexport interface GetLibraryPanelsOptions {\n  searchString?: string;\n  perPage?: number;\n  page?: number;\n  excludeUid?: string;\n  sortDirection?: string;\n  typeFilter?: string[];\n  folderFilter?: string[];\n}\n\nexport async function getLibraryPanels({\n  searchString = '',\n  perPage = 100,\n  page = 1,\n  excludeUid = '',\n  sortDirection = '',\n  typeFilter = [],\n  folderFilter = [],\n}: GetLibraryPanelsOptions = {}): Promise<LibraryElementsSearchResult> {\n  const params = new URLSearchParams();\n  params.append('searchString', searchString);\n  params.append('sortDirection', sortDirection);\n  params.append('typeFilter', typeFilter.join(','));\n  params.append('folderFilter', folderFilter.join(','));\n  params.append('excludeUid', excludeUid);\n  params.append('perPage', perPage.toString(10));\n  params.append('page', page.toString(10));\n  params.append('kind', LibraryElementKind.Panel.toString(10));\n\n  const { result } = await getBackendSrv().get<{ result: LibraryElementsSearchResult }>(\n    `/api/library-elements?${params.toString()}`\n  );\n  return result;\n}\n\nexport async function getLibraryPanel(uid: string, isHandled = false): Promise<LibraryElementDTO> {\n  const response = await lastValueFrom(\n    getBackendSrv().fetch<{ result: LibraryElementDTO }>({\n      method: 'GET',\n      url: `/api/library-elements/${uid}`,\n      showSuccessAlert: !isHandled,\n      showErrorAlert: !isHandled,\n    })\n  );\n  return response.data.result;\n}\n\nexport async function getLibraryPanelByName(name: string): Promise<LibraryElementDTO[]> {\n  const { result } = await getBackendSrv().get<{ result: LibraryElementDTO[] }>(`/api/library-elements/name/${name}`);\n  return result;\n}\n\nexport async function addLibraryPanel(\n  panelSaveModel: PanelModelWithLibraryPanel,\n  folderId: number\n): Promise<LibraryElementDTO> {\n  const { result } = await getBackendSrv().post(`/api/library-elements`, {\n    folderId,\n    name: panelSaveModel.libraryPanel.name,\n    model: panelSaveModel,\n    kind: LibraryElementKind.Panel,\n  });\n  return result;\n}\n\nexport async function updateLibraryPanel(panelSaveModel: PanelModelWithLibraryPanel): Promise<LibraryElementDTO> {\n  const { uid, name, version } = panelSaveModel.libraryPanel;\n  const kind = LibraryElementKind.Panel;\n  const model = panelSaveModel;\n  const { result } = await getBackendSrv().patch(`/api/library-elements/${uid}`, {\n    name,\n    model,\n    version,\n    kind,\n  });\n  return result;\n}\n\nexport function deleteLibraryPanel(uid: string): Promise<{ message: string }> {\n  return getBackendSrv().delete(`/api/library-elements/${uid}`);\n}\n\nexport async function getLibraryPanelConnectedDashboards(\n  libraryPanelUid: string\n): Promise<LibraryElementConnectionDTO[]> {\n  const { result } = await getBackendSrv().get<{ result: LibraryElementConnectionDTO[] }>(\n    `/api/library-elements/${libraryPanelUid}/connections`\n  );\n  return result;\n}\n\nexport async function getConnectedDashboards(uid: string): Promise<DashboardSearchHit[]> {\n  const connections = await getLibraryPanelConnectedDashboards(uid);\n  if (connections.length === 0) {\n    return [];\n  }\n\n  const searchHits = await getBackendSrv().search({ dashboardIds: connections.map((c) => c.connectionId) });\n  return searchHits;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}