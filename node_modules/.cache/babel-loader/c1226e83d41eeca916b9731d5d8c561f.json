{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport angular from 'angular';\nimport coreModule from './core_module';\nexport class DeltaCtrl {\n  /** @ngInject */\n  constructor() {\n    _defineProperty(this, \"observer\", void 0);\n\n    const waitForCompile = () => {};\n\n    this.observer = new MutationObserver(waitForCompile);\n    const observerConfig = {\n      attributes: true,\n      attributeFilter: ['class'],\n      characterData: false,\n      childList: true,\n      subtree: false\n    };\n    this.observer.observe(angular.element('.delta-html')[0], observerConfig);\n  }\n\n  $onDestroy() {\n    this.observer.disconnect();\n  }\n\n}\nDeltaCtrl.$inject = [];\nexport function delta() {\n  return {\n    controller: DeltaCtrl,\n    replace: false,\n    restrict: 'A'\n  };\n}\ncoreModule.directive('diffDelta', delta); // Link to JSON line number\n\nexport class LinkJSONCtrl {\n  /** @ngInject */\n  constructor($scope, $rootScope, $anchorScroll) {\n    this.$scope = $scope;\n    this.$rootScope = $rootScope;\n    this.$anchorScroll = $anchorScroll;\n  }\n\n  goToLine(line) {\n    let unbind;\n\n    const scroll = () => {\n      this.$anchorScroll(`l${line}`);\n      unbind();\n    };\n\n    this.$scope.switchView().then(() => {\n      unbind = this.$rootScope.$on('json-diff-ready', scroll.bind(this));\n    });\n  }\n\n}\nLinkJSONCtrl.$inject = [\"$scope\", \"$rootScope\", \"$anchorScroll\"];\nexport function linkJson() {\n  return {\n    controller: LinkJSONCtrl,\n    controllerAs: 'ctrl',\n    replace: true,\n    restrict: 'E',\n    scope: {\n      line: '@lineDisplay',\n      link: '@lineLink',\n      switchView: '&'\n    },\n    template: `<a class=\"diff-linenum btn btn-inverse btn-small\" ng-click=\"ctrl.goToLine(link)\">Line {{ line }}</a>`\n  };\n}\ncoreModule.directive('diffLinkJson', linkJson);","map":{"version":3,"names":["angular","coreModule","DeltaCtrl","constructor","waitForCompile","observer","MutationObserver","observerConfig","attributes","attributeFilter","characterData","childList","subtree","observe","element","$onDestroy","disconnect","delta","controller","replace","restrict","directive","LinkJSONCtrl","$scope","$rootScope","$anchorScroll","goToLine","line","unbind","scroll","switchView","then","$on","bind","linkJson","controllerAs","scope","link","template"],"sources":["/home/soula/grafana/public/app/angular/diff-view.ts"],"sourcesContent":["import angular from 'angular';\n\nimport { GrafanaRootScope } from 'app/angular/GrafanaCtrl';\n\nimport coreModule from './core_module';\n\nexport class DeltaCtrl {\n  observer: any;\n\n  /** @ngInject */\n  constructor() {\n    const waitForCompile = () => {};\n\n    this.observer = new MutationObserver(waitForCompile);\n\n    const observerConfig = {\n      attributes: true,\n      attributeFilter: ['class'],\n      characterData: false,\n      childList: true,\n      subtree: false,\n    };\n\n    this.observer.observe(angular.element('.delta-html')[0], observerConfig);\n  }\n\n  $onDestroy() {\n    this.observer.disconnect();\n  }\n}\n\nexport function delta() {\n  return {\n    controller: DeltaCtrl,\n    replace: false,\n    restrict: 'A',\n  };\n}\ncoreModule.directive('diffDelta', delta);\n\n// Link to JSON line number\nexport class LinkJSONCtrl {\n  /** @ngInject */\n  constructor(private $scope: any, private $rootScope: GrafanaRootScope, private $anchorScroll: any) {}\n\n  goToLine(line: number) {\n    let unbind: () => void;\n\n    const scroll = () => {\n      this.$anchorScroll(`l${line}`);\n      unbind();\n    };\n\n    this.$scope.switchView().then(() => {\n      unbind = this.$rootScope.$on('json-diff-ready', scroll.bind(this));\n    });\n  }\n}\n\nexport function linkJson() {\n  return {\n    controller: LinkJSONCtrl,\n    controllerAs: 'ctrl',\n    replace: true,\n    restrict: 'E',\n    scope: {\n      line: '@lineDisplay',\n      link: '@lineLink',\n      switchView: '&',\n    },\n    template: `<a class=\"diff-linenum btn btn-inverse btn-small\" ng-click=\"ctrl.goToLine(link)\">Line {{ line }}</a>`,\n  };\n}\ncoreModule.directive('diffLinkJson', linkJson);\n"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,SAApB;AAIA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,SAAN,CAAgB;EAGrB;EACAC,WAAW,GAAG;IAAA;;IACZ,MAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;IAEA,KAAKC,QAAL,GAAgB,IAAIC,gBAAJ,CAAqBF,cAArB,CAAhB;IAEA,MAAMG,cAAc,GAAG;MACrBC,UAAU,EAAE,IADS;MAErBC,eAAe,EAAE,CAAC,OAAD,CAFI;MAGrBC,aAAa,EAAE,KAHM;MAIrBC,SAAS,EAAE,IAJU;MAKrBC,OAAO,EAAE;IALY,CAAvB;IAQA,KAAKP,QAAL,CAAcQ,OAAd,CAAsBb,OAAO,CAACc,OAAR,CAAgB,aAAhB,EAA+B,CAA/B,CAAtB,EAAyDP,cAAzD;EACD;;EAEDQ,UAAU,GAAG;IACX,KAAKV,QAAL,CAAcW,UAAd;EACD;;AAtBoB;;AAyBvB,OAAO,SAASC,KAAT,GAAiB;EACtB,OAAO;IACLC,UAAU,EAAEhB,SADP;IAELiB,OAAO,EAAE,KAFJ;IAGLC,QAAQ,EAAE;EAHL,CAAP;AAKD;AACDnB,UAAU,CAACoB,SAAX,CAAqB,WAArB,EAAkCJ,KAAlC,E,CAEA;;AACA,OAAO,MAAMK,YAAN,CAAmB;EACxB;EACAnB,WAAW,CAASoB,MAAT,EAA8BC,UAA9B,EAAoEC,aAApE,EAAwF;IAAA,KAA/EF,MAA+E,GAA/EA,MAA+E;IAAA,KAA1DC,UAA0D,GAA1DA,UAA0D;IAAA,KAApBC,aAAoB,GAApBA,aAAoB;EAAE;;EAErGC,QAAQ,CAACC,IAAD,EAAe;IACrB,IAAIC,MAAJ;;IAEA,MAAMC,MAAM,GAAG,MAAM;MACnB,KAAKJ,aAAL,CAAoB,IAAGE,IAAK,EAA5B;MACAC,MAAM;IACP,CAHD;;IAKA,KAAKL,MAAL,CAAYO,UAAZ,GAAyBC,IAAzB,CAA8B,MAAM;MAClCH,MAAM,GAAG,KAAKJ,UAAL,CAAgBQ,GAAhB,CAAoB,iBAApB,EAAuCH,MAAM,CAACI,IAAP,CAAY,IAAZ,CAAvC,CAAT;IACD,CAFD;EAGD;;AAfuB;;AAkB1B,OAAO,SAASC,QAAT,GAAoB;EACzB,OAAO;IACLhB,UAAU,EAAEI,YADP;IAELa,YAAY,EAAE,MAFT;IAGLhB,OAAO,EAAE,IAHJ;IAILC,QAAQ,EAAE,GAJL;IAKLgB,KAAK,EAAE;MACLT,IAAI,EAAE,cADD;MAELU,IAAI,EAAE,WAFD;MAGLP,UAAU,EAAE;IAHP,CALF;IAULQ,QAAQ,EAAG;EAVN,CAAP;AAYD;AACDrC,UAAU,CAACoB,SAAX,CAAqB,cAArB,EAAqCa,QAArC"},"metadata":{},"sourceType":"module"}