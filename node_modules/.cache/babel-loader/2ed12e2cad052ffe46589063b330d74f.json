{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialTeamsState = {\n  teams: [],\n  searchQuery: '',\n  searchPage: 1,\n  hasFetched: false\n};\nconst teamsSlice = createSlice({\n  name: 'teams',\n  initialState: initialTeamsState,\n  reducers: {\n    teamsLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        hasFetched: true,\n        teams: action.payload\n      });\n    },\n    setSearchQuery: (state, action) => {\n      return Object.assign({}, state, {\n        searchQuery: action.payload,\n        searchPage: initialTeamsState.searchPage\n      });\n    },\n    setTeamsSearchPage: (state, action) => {\n      return Object.assign({}, state, {\n        searchPage: action.payload\n      });\n    }\n  }\n});\nexport const {\n  teamsLoaded,\n  setSearchQuery,\n  setTeamsSearchPage\n} = teamsSlice.actions;\nexport const teamsReducer = teamsSlice.reducer;\nexport const initialTeamState = {\n  team: {},\n  members: [],\n  groups: [],\n  searchMemberQuery: ''\n};\nconst teamSlice = createSlice({\n  name: 'team',\n  initialState: initialTeamState,\n  reducers: {\n    teamLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        team: action.payload\n      });\n    },\n    teamMembersLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        members: action.payload\n      });\n    },\n    setSearchMemberQuery: (state, action) => {\n      return Object.assign({}, state, {\n        searchMemberQuery: action.payload\n      });\n    },\n    teamGroupsLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        groups: action.payload\n      });\n    }\n  }\n});\nexport const {\n  teamLoaded,\n  teamGroupsLoaded,\n  teamMembersLoaded,\n  setSearchMemberQuery\n} = teamSlice.actions;\nexport const teamReducer = teamSlice.reducer;\nexport default {\n  teams: teamsReducer,\n  team: teamReducer\n};","map":{"version":3,"names":["createSlice","initialTeamsState","teams","searchQuery","searchPage","hasFetched","teamsSlice","name","initialState","reducers","teamsLoaded","state","action","payload","setSearchQuery","setTeamsSearchPage","actions","teamsReducer","reducer","initialTeamState","team","members","groups","searchMemberQuery","teamSlice","teamLoaded","teamMembersLoaded","setSearchMemberQuery","teamGroupsLoaded","teamReducer"],"sources":["/home/soula/grafana/public/app/features/teams/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Team, TeamGroup, TeamMember, TeamsState, TeamState } from 'app/types';\n\nexport const initialTeamsState: TeamsState = { teams: [], searchQuery: '', searchPage: 1, hasFetched: false };\n\nconst teamsSlice = createSlice({\n  name: 'teams',\n  initialState: initialTeamsState,\n  reducers: {\n    teamsLoaded: (state, action: PayloadAction<Team[]>): TeamsState => {\n      return { ...state, hasFetched: true, teams: action.payload };\n    },\n    setSearchQuery: (state, action: PayloadAction<string>): TeamsState => {\n      return { ...state, searchQuery: action.payload, searchPage: initialTeamsState.searchPage };\n    },\n    setTeamsSearchPage: (state, action: PayloadAction<number>): TeamsState => {\n      return { ...state, searchPage: action.payload };\n    },\n  },\n});\n\nexport const { teamsLoaded, setSearchQuery, setTeamsSearchPage } = teamsSlice.actions;\n\nexport const teamsReducer = teamsSlice.reducer;\n\nexport const initialTeamState: TeamState = {\n  team: {} as Team,\n  members: [] as TeamMember[],\n  groups: [] as TeamGroup[],\n  searchMemberQuery: '',\n};\n\nconst teamSlice = createSlice({\n  name: 'team',\n  initialState: initialTeamState,\n  reducers: {\n    teamLoaded: (state, action: PayloadAction<Team>): TeamState => {\n      return { ...state, team: action.payload };\n    },\n    teamMembersLoaded: (state, action: PayloadAction<TeamMember[]>): TeamState => {\n      return { ...state, members: action.payload };\n    },\n    setSearchMemberQuery: (state, action: PayloadAction<string>): TeamState => {\n      return { ...state, searchMemberQuery: action.payload };\n    },\n    teamGroupsLoaded: (state, action: PayloadAction<TeamGroup[]>): TeamState => {\n      return { ...state, groups: action.payload };\n    },\n  },\n});\n\nexport const { teamLoaded, teamGroupsLoaded, teamMembersLoaded, setSearchMemberQuery } = teamSlice.actions;\n\nexport const teamReducer = teamSlice.reducer;\n\nexport default {\n  teams: teamsReducer,\n  team: teamReducer,\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,OAAO,MAAMC,iBAA6B,GAAG;EAAEC,KAAK,EAAE,EAAT;EAAaC,WAAW,EAAE,EAA1B;EAA8BC,UAAU,EAAE,CAA1C;EAA6CC,UAAU,EAAE;AAAzD,CAAtC;AAEP,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OADuB;EAE7BC,YAAY,EAAEP,iBAFe;EAG7BQ,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAsD;MACjE,yBAAYD,KAAZ;QAAmBN,UAAU,EAAE,IAA/B;QAAqCH,KAAK,EAAEU,MAAM,CAACC;MAAnD;IACD,CAHO;IAIRC,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAsD;MACpE,yBAAYD,KAAZ;QAAmBR,WAAW,EAAES,MAAM,CAACC,OAAvC;QAAgDT,UAAU,EAAEH,iBAAiB,CAACG;MAA9E;IACD,CANO;IAORW,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAsD;MACxE,yBAAYD,KAAZ;QAAmBP,UAAU,EAAEQ,MAAM,CAACC;MAAtC;IACD;EATO;AAHmB,CAAD,CAA9B;AAgBA,OAAO,MAAM;EAAEH,WAAF;EAAeI,cAAf;EAA+BC;AAA/B,IAAsDT,UAAU,CAACU,OAAvE;AAEP,OAAO,MAAMC,YAAY,GAAGX,UAAU,CAACY,OAAhC;AAEP,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,IAAI,EAAE,EADmC;EAEzCC,OAAO,EAAE,EAFgC;EAGzCC,MAAM,EAAE,EAHiC;EAIzCC,iBAAiB,EAAE;AAJsB,CAApC;AAOP,MAAMC,SAAS,GAAGxB,WAAW,CAAC;EAC5BO,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAEW,gBAFc;EAG5BV,QAAQ,EAAE;IACRgB,UAAU,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmD;MAC7D,yBAAYD,KAAZ;QAAmBS,IAAI,EAAER,MAAM,CAACC;MAAhC;IACD,CAHO;IAIRa,iBAAiB,EAAE,CAACf,KAAD,EAAQC,MAAR,KAA2D;MAC5E,yBAAYD,KAAZ;QAAmBU,OAAO,EAAET,MAAM,CAACC;MAAnC;IACD,CANO;IAORc,oBAAoB,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAqD;MACzE,yBAAYD,KAAZ;QAAmBY,iBAAiB,EAAEX,MAAM,CAACC;MAA7C;IACD,CATO;IAURe,gBAAgB,EAAE,CAACjB,KAAD,EAAQC,MAAR,KAA0D;MAC1E,yBAAYD,KAAZ;QAAmBW,MAAM,EAAEV,MAAM,CAACC;MAAlC;IACD;EAZO;AAHkB,CAAD,CAA7B;AAmBA,OAAO,MAAM;EAAEY,UAAF;EAAcG,gBAAd;EAAgCF,iBAAhC;EAAmDC;AAAnD,IAA4EH,SAAS,CAACR,OAA5F;AAEP,OAAO,MAAMa,WAAW,GAAGL,SAAS,CAACN,OAA9B;AAEP,eAAe;EACbhB,KAAK,EAAEe,YADM;EAEbG,IAAI,EAAES;AAFO,CAAf"},"metadata":{},"sourceType":"module"}