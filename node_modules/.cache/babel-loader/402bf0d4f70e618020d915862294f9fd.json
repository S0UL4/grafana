{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { CoreApp } from '@grafana/data';\nimport { TabbedContainer } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { runQueries } from './state/query';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ExploreQueryInspector(props) {\n  var _queryResponse$reques;\n\n  const {\n    loading,\n    width,\n    onClose,\n    queryResponse,\n    timeZone\n  } = props;\n  const dataFrames = (queryResponse === null || queryResponse === void 0 ? void 0 : queryResponse.series) || [];\n  const error = queryResponse === null || queryResponse === void 0 ? void 0 : queryResponse.error;\n  const statsTab = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: /*#__PURE__*/_jsx(InspectStatsTab, {\n      data: queryResponse,\n      timeZone: queryResponse === null || queryResponse === void 0 ? void 0 : (_queryResponse$reques = queryResponse.request) === null || _queryResponse$reques === void 0 ? void 0 : _queryResponse$reques.timezone\n    })\n  };\n  const jsonTab = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: /*#__PURE__*/_jsx(InspectJSONTab, {\n      data: queryResponse,\n      onClose: onClose\n    })\n  };\n  const dataTab = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: /*#__PURE__*/_jsx(InspectDataTab, {\n      data: dataFrames,\n      isLoading: loading,\n      options: {\n        withTransforms: false,\n        withFieldConfig: false\n      },\n      timeZone: timeZone,\n      app: CoreApp.Explore\n    })\n  };\n  const queryTab = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: /*#__PURE__*/_jsx(QueryInspector, {\n      data: dataFrames,\n      onRefreshQuery: () => props.runQueries(props.exploreId)\n    })\n  };\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n\n  if (error) {\n    const errorTab = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: /*#__PURE__*/_jsx(InspectErrorTab, {\n        error: error\n      })\n    };\n    tabs.push(errorTab);\n  }\n\n  return /*#__PURE__*/_jsx(ExploreDrawer, {\n    width: width,\n    children: /*#__PURE__*/_jsx(TabbedContainer, {\n      tabs: tabs,\n      onClose: onClose,\n      closeIconTooltip: \"Close query inspector\"\n    })\n  });\n}\n\nfunction mapStateToProps(state, {\n  exploreId\n}) {\n  const explore = state.explore;\n  const item = explore[exploreId];\n  const {\n    loading,\n    queryResponse\n  } = item;\n  return {\n    loading,\n    queryResponse\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(ExploreQueryInspector);","map":{"version":3,"names":["React","connect","CoreApp","TabbedContainer","ExploreDrawer","InspectDataTab","InspectErrorTab","InspectJSONTab","InspectStatsTab","QueryInspector","runQueries","ExploreQueryInspector","props","loading","width","onClose","queryResponse","timeZone","dataFrames","series","error","statsTab","label","value","icon","content","request","timezone","jsonTab","dataTab","withTransforms","withFieldConfig","Explore","queryTab","exploreId","tabs","errorTab","push","mapStateToProps","state","explore","item","mapDispatchToProps","connector"],"sources":["/home/soula/grafana/public/app/features/explore/ExploreQueryInspector.tsx"],"sourcesContent":["import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, TimeZone } from '@grafana/data';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}