{"ast":null,"code":"var _div, _div2, _br, _br2;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { config } from '@grafana/runtime';\nimport { Modal, stylesFactory } from '@grafana/ui';\nimport { dashboardWatcher } from './dashboardWatcher';\nimport { DashboardEventAction } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class DashboardChangedModal extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"discardAndReload\", {\n      label: 'Discard local changes',\n      description: 'Load the latest saved version for this dashboard',\n      action: () => {\n        dashboardWatcher.reloadPage();\n        this.onDismiss();\n      }\n    });\n\n    _defineProperty(this, \"continueEditing\", {\n      label: 'Continue editing',\n      description: 'Keep your local changes and continue editing.  Note: when you save, this will overwrite the most recent chages',\n      action: () => {\n        this.onDismiss();\n      }\n    });\n\n    _defineProperty(this, \"acceptDelete\", {\n      label: 'Discard Local changes',\n      description: 'view grafana homepage',\n      action: () => {\n        // Navigate to the root URL\n        document.location.href = config.appUrl;\n      }\n    });\n\n    _defineProperty(this, \"onDismiss\", () => {\n      this.setState({\n        dismiss: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      event\n    } = this.props;\n    const {\n      dismiss\n    } = this.state;\n    const styles = getStyles(config.theme);\n    const isDelete = (event === null || event === void 0 ? void 0 : event.action) === DashboardEventAction.Deleted;\n    const options = isDelete ? [this.continueEditing, this.acceptDelete] : [this.continueEditing, this.discardAndReload];\n    return /*#__PURE__*/_jsx(Modal, {\n      isOpen: !dismiss,\n      title: \"Dashboard Changed\",\n      icon: \"copy\",\n      onDismiss: this.onDismiss,\n      onClickBackdrop: () => {},\n      className: styles.modal,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [isDelete ? _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n          children: \"This dashboard has been deleted by another session\"\n        })) : _div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {\n          children: \"This dashboard has been modifed by another session\"\n        })), _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), options.map(opt => {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            onClick: opt.action,\n            className: styles.radioItem,\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              children: opt.label\n            }), opt.description]\n          }, opt.label);\n        }), _br2 || (_br2 = /*#__PURE__*/_jsx(\"br\", {}))]\n      })\n    });\n  }\n\n}\nconst getStyles = stylesFactory(theme => {\n  return {\n    modal: css`\n      width: 500px;\n    `,\n    radioItem: css`\n      margin: 0;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      padding: 10px;\n      cursor: pointer;\n      width: 100%;\n\n      &:hover {\n        background: ${theme.colors.bgBlue1};\n        color: ${theme.colors.text};\n      }\n    `\n  };\n});","map":{"version":3,"names":["css","React","PureComponent","config","Modal","stylesFactory","dashboardWatcher","DashboardEventAction","DashboardChangedModal","label","description","action","reloadPage","onDismiss","document","location","href","appUrl","setState","dismiss","render","event","props","state","styles","getStyles","theme","isDelete","Deleted","options","continueEditing","acceptDelete","discardAndReload","modal","map","opt","radioItem","typography","size","sm","colors","textWeak","bgBlue1","text"],"sources":["/home/soula/grafana/public/app/features/live/dashboard/DashboardChangedModal.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Modal, stylesFactory } from '@grafana/ui';\n\nimport { dashboardWatcher } from './dashboardWatcher';\nimport { DashboardEvent, DashboardEventAction } from './types';\n\ninterface Props {\n  event?: DashboardEvent;\n}\n\ninterface State {\n  dismiss?: boolean;\n}\n\ninterface ActionInfo {\n  label: string;\n  description: string;\n  action: () => void;\n}\n\nexport class DashboardChangedModal extends PureComponent<Props, State> {\n  state: State = {};\n\n  discardAndReload: ActionInfo = {\n    label: 'Discard local changes',\n    description: 'Load the latest saved version for this dashboard',\n    action: () => {\n      dashboardWatcher.reloadPage();\n      this.onDismiss();\n    },\n  };\n\n  continueEditing: ActionInfo = {\n    label: 'Continue editing',\n    description:\n      'Keep your local changes and continue editing.  Note: when you save, this will overwrite the most recent chages',\n    action: () => {\n      this.onDismiss();\n    },\n  };\n\n  acceptDelete: ActionInfo = {\n    label: 'Discard Local changes',\n    description: 'view grafana homepage',\n    action: () => {\n      // Navigate to the root URL\n      document.location.href = config.appUrl;\n    },\n  };\n\n  onDismiss = () => {\n    this.setState({ dismiss: true });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { dismiss } = this.state;\n    const styles = getStyles(config.theme);\n\n    const isDelete = event?.action === DashboardEventAction.Deleted;\n\n    const options = isDelete\n      ? [this.continueEditing, this.acceptDelete]\n      : [this.continueEditing, this.discardAndReload];\n\n    return (\n      <Modal\n        isOpen={!dismiss}\n        title=\"Dashboard Changed\"\n        icon=\"copy\"\n        onDismiss={this.onDismiss}\n        onClickBackdrop={() => {}}\n        className={styles.modal}\n      >\n        <div>\n          {isDelete ? (\n            <div>This dashboard has been deleted by another session</div>\n          ) : (\n            <div>This dashboard has been modifed by another session</div>\n          )}\n          <br />\n          {options.map((opt) => {\n            return (\n              <div key={opt.label} onClick={opt.action} className={styles.radioItem}>\n                <h3>{opt.label}</h3>\n                {opt.description}\n              </div>\n            );\n          })}\n          <br />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    modal: css`\n      width: 500px;\n    `,\n    radioItem: css`\n      margin: 0;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      padding: 10px;\n      cursor: pointer;\n      width: 100%;\n\n      &:hover {\n        background: ${theme.colors.bgBlue1};\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}