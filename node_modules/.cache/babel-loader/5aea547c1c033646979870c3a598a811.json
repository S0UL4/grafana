{"ast":null,"code":"const _excluded = [\"children\", \"className\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useStyles } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const InlineFieldRow = _ref => {\n  let {\n    children,\n    className\n  } = _ref,\n      htmlProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    className: cx(styles.container, className)\n  }, htmlProps, {\n    children: children\n  }));\n};\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      label: InlineFieldRow;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      align-content: flex-start;\n      row-gap: ${theme.spacing.xs};\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useStyles","InlineFieldRow","children","className","htmlProps","styles","getStyles","container","theme","spacing","xs"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, HTMLProps, ReactNode } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { useStyles } from '../../themes';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, 'css'> {\n  children: ReactNode | ReactNode[];\n}\n\nexport const InlineFieldRow: FC<Props> = ({ children, className, ...htmlProps }) => {\n  const styles = useStyles(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    container: css`\n      label: InlineFieldRow;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      align-content: flex-start;\n      row-gap: ${theme.spacing.xs};\n    `,\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAgD,OAAhD;AAIA,SAASC,SAAT,QAA0B,cAA1B;;AAMA,OAAO,MAAMC,cAAyB,GAAG,QAA2C;EAAA,IAA1C;IAAEC,QAAF;IAAYC;EAAZ,CAA0C;EAAA,IAAhBC,SAAgB;;EAClF,MAAMC,MAAM,GAAGL,SAAS,CAACM,SAAD,CAAxB;EACA,oBACE;IAAK,SAAS,EAAER,EAAE,CAACO,MAAM,CAACE,SAAR,EAAmBJ,SAAnB;EAAlB,GAAqDC,SAArD;IAAA,UACGF;EADH,GADF;AAKD,CAPM;;AASP,MAAMI,SAAS,GAAIE,KAAD,IAAyB;EACzC,OAAO;IACLD,SAAS,EAAEV,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA,iBAAiBW,KAAK,CAACC,OAAN,CAAcC,EAAG;AAClC;EARS,CAAP;AAUD,CAXD"},"metadata":{},"sourceType":"module"}