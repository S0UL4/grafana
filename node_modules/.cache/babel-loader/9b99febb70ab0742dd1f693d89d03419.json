{"ast":null,"code":"import moment from 'moment';\nexport const ISO_8601 = moment.ISO_8601;\nexport const setLocale = language => {\n  moment.locale(language);\n};\nexport const getLocale = () => {\n  return moment.locale();\n};\nexport const getLocaleData = () => {\n  return moment.localeData();\n};\nexport const isDateTime = value => {\n  return moment.isMoment(value);\n};\nexport const toUtc = (input, formatInput) => {\n  return moment.utc(input, formatInput);\n};\nexport const toDuration = (input, unit) => {\n  // moment built-in types are a bit flaky, for example `isoWeek` is not in the type definition but it's present in the js source.\n  return moment.duration(input, unit);\n};\nexport const dateTime = (input, formatInput) => {\n  return moment(input, formatInput);\n};\nexport const dateTimeAsMoment = input => {\n  return dateTime(input);\n};\nexport const dateTimeForTimeZone = (timezone, input, formatInput) => {\n  if (timezone === 'utc') {\n    return toUtc(input, formatInput);\n  }\n\n  return dateTime(input, formatInput);\n};\nexport const getWeekdayIndex = day => {\n  return moment.weekdays().findIndex(wd => wd.toLowerCase() === day.toLowerCase());\n};\nexport const getWeekdayIndexByEnglishName = day => ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].findIndex(wd => wd.toLowerCase() === day.toLowerCase());\nexport const setWeekStart = weekStart => {\n  const suffix = '-weekStart';\n  const language = getLocale().replace(suffix, '');\n  const dow = weekStart ? getWeekdayIndexByEnglishName(weekStart) : -1;\n\n  if (dow !== -1) {\n    moment.locale(language + suffix, {\n      parentLocale: language,\n      week: {\n        dow\n      }\n    });\n  } else {\n    setLocale(language);\n  }\n};","map":{"version":3,"names":["moment","ISO_8601","setLocale","language","locale","getLocale","getLocaleData","localeData","isDateTime","value","isMoment","toUtc","input","formatInput","utc","toDuration","unit","duration","dateTime","dateTimeAsMoment","dateTimeForTimeZone","timezone","getWeekdayIndex","day","weekdays","findIndex","wd","toLowerCase","getWeekdayIndexByEnglishName","setWeekStart","weekStart","suffix","replace","dow","parentLocale","week"],"sources":["/home/soula/grafana/packages/grafana-data/src/datetime/moment_wrapper.ts"],"sourcesContent":["import moment, { Moment, MomentInput, DurationInputArg1, DurationInputArg2 } from 'moment';\n\nimport { TimeZone } from '../types/time';\n/* eslint-disable id-blacklist, no-restricted-imports, @typescript-eslint/ban-types */\nexport interface DateTimeBuiltinFormat {\n  __momentBuiltinFormatBrand: any;\n}\nexport const ISO_8601: DateTimeBuiltinFormat = moment.ISO_8601;\nexport type DateTimeInput = Date | string | number | Array<string | number> | DateTime | null; // | undefined;\nexport type FormatInput = string | DateTimeBuiltinFormat | undefined;\nexport type DurationInput = string | number | DateTimeDuration;\nexport type DurationUnit =\n  | 'year'\n  | 'years'\n  | 'y'\n  | 'month'\n  | 'months'\n  | 'M'\n  | 'week'\n  | 'weeks'\n  | 'isoWeek'\n  | 'w'\n  | 'day'\n  | 'days'\n  | 'd'\n  | 'hour'\n  | 'hours'\n  | 'h'\n  | 'minute'\n  | 'minutes'\n  | 'm'\n  | 'second'\n  | 'seconds'\n  | 's'\n  | 'millisecond'\n  | 'milliseconds'\n  | 'ms'\n  | 'quarter'\n  | 'quarters'\n  | 'Q';\n\nexport interface DateTimeLocale {\n  firstDayOfWeek: () => number;\n}\n\nexport interface DateTimeDuration {\n  asHours: () => number;\n  hours: () => number;\n  minutes: () => number;\n  seconds: () => number;\n  asSeconds: () => number;\n}\n\nexport interface DateTime extends Object {\n  add: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  set: (unit: DurationUnit, amount: DateTimeInput) => void;\n  diff: (amount: DateTimeInput, unit?: DurationUnit, truncate?: boolean) => number;\n  endOf: (unitOfTime: DurationUnit) => DateTime;\n  format: (formatInput?: FormatInput) => string;\n  fromNow: (withoutSuffix?: boolean) => string;\n  from: (formaInput: DateTimeInput) => string;\n  isSame: (input?: DateTimeInput, granularity?: DurationUnit) => boolean;\n  isBefore: (input?: DateTimeInput) => boolean;\n  isValid: () => boolean;\n  local: () => DateTime;\n  locale: (locale: string) => DateTime;\n  startOf: (unitOfTime: DurationUnit) => DateTime;\n  subtract: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  toDate: () => Date;\n  toISOString: () => string;\n  isoWeekday: (day?: number | string) => number | string;\n  valueOf: () => number;\n  unix: () => number;\n  utc: () => DateTime;\n  utcOffset: () => number;\n  hour?: () => number;\n  minute?: () => number;\n}\n\nexport const setLocale = (language: string) => {\n  moment.locale(language);\n};\n\nexport const getLocale = () => {\n  return moment.locale();\n};\n\nexport const getLocaleData = (): DateTimeLocale => {\n  return moment.localeData();\n};\n\nexport const isDateTime = (value: any): value is DateTime => {\n  return moment.isMoment(value);\n};\n\nexport const toUtc = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment.utc(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const toDuration = (input?: DurationInput, unit?: DurationUnit): DateTimeDuration => {\n  // moment built-in types are a bit flaky, for example `isoWeek` is not in the type definition but it's present in the js source.\n  return moment.duration(input as DurationInputArg1, unit as DurationInputArg2) as DateTimeDuration;\n};\n\nexport const dateTime = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const dateTimeAsMoment = (input?: DateTimeInput) => {\n  return dateTime(input) as Moment;\n};\n\nexport const dateTimeForTimeZone = (\n  timezone?: TimeZone,\n  input?: DateTimeInput,\n  formatInput?: FormatInput\n): DateTime => {\n  if (timezone === 'utc') {\n    return toUtc(input, formatInput);\n  }\n\n  return dateTime(input, formatInput);\n};\n\nexport const getWeekdayIndex = (day: string) => {\n  return moment.weekdays().findIndex((wd) => wd.toLowerCase() === day.toLowerCase());\n};\n\nexport const getWeekdayIndexByEnglishName = (day: string) =>\n  ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].findIndex(\n    (wd) => wd.toLowerCase() === day.toLowerCase()\n  );\n\nexport const setWeekStart = (weekStart?: string) => {\n  const suffix = '-weekStart';\n  const language = getLocale().replace(suffix, '');\n  const dow = weekStart ? getWeekdayIndexByEnglishName(weekStart) : -1;\n  if (dow !== -1) {\n    moment.locale(language + suffix, {\n      parentLocale: language,\n      week: {\n        dow,\n      },\n    });\n  } else {\n    setLocale(language);\n  }\n};\n"],"mappings":"AAAA,OAAOA,MAAP,MAAkF,QAAlF;AAOA,OAAO,MAAMC,QAA+B,GAAGD,MAAM,CAACC,QAA/C;AAwEP,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAsB;EAC7CH,MAAM,CAACI,MAAP,CAAcD,QAAd;AACD,CAFM;AAIP,OAAO,MAAME,SAAS,GAAG,MAAM;EAC7B,OAAOL,MAAM,CAACI,MAAP,EAAP;AACD,CAFM;AAIP,OAAO,MAAME,aAAa,GAAG,MAAsB;EACjD,OAAON,MAAM,CAACO,UAAP,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAmC;EAC3D,OAAOT,MAAM,CAACU,QAAP,CAAgBD,KAAhB,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,KAAK,GAAG,CAACC,KAAD,EAAwBC,WAAxB,KAAgE;EACnF,OAAOb,MAAM,CAACc,GAAP,CAAWF,KAAX,EAAiCC,WAAjC,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,UAAU,GAAG,CAACH,KAAD,EAAwBI,IAAxB,KAAkE;EAC1F;EACA,OAAOhB,MAAM,CAACiB,QAAP,CAAgBL,KAAhB,EAA4CI,IAA5C,CAAP;AACD,CAHM;AAKP,OAAO,MAAME,QAAQ,GAAG,CAACN,KAAD,EAAwBC,WAAxB,KAAgE;EACtF,OAAOb,MAAM,CAACY,KAAD,EAAuBC,WAAvB,CAAb;AACD,CAFM;AAIP,OAAO,MAAMM,gBAAgB,GAAIP,KAAD,IAA2B;EACzD,OAAOM,QAAQ,CAACN,KAAD,CAAf;AACD,CAFM;AAIP,OAAO,MAAMQ,mBAAmB,GAAG,CACjCC,QADiC,EAEjCT,KAFiC,EAGjCC,WAHiC,KAIpB;EACb,IAAIQ,QAAQ,KAAK,KAAjB,EAAwB;IACtB,OAAOV,KAAK,CAACC,KAAD,EAAQC,WAAR,CAAZ;EACD;;EAED,OAAOK,QAAQ,CAACN,KAAD,EAAQC,WAAR,CAAf;AACD,CAVM;AAYP,OAAO,MAAMS,eAAe,GAAIC,GAAD,IAAiB;EAC9C,OAAOvB,MAAM,CAACwB,QAAP,GAAkBC,SAAlB,CAA6BC,EAAD,IAAQA,EAAE,CAACC,WAAH,OAAqBJ,GAAG,CAACI,WAAJ,EAAzD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,4BAA4B,GAAIL,GAAD,IAC1C,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,EAA+EE,SAA/E,CACGC,EAAD,IAAQA,EAAE,CAACC,WAAH,OAAqBJ,GAAG,CAACI,WAAJ,EAD/B,CADK;AAKP,OAAO,MAAME,YAAY,GAAIC,SAAD,IAAwB;EAClD,MAAMC,MAAM,GAAG,YAAf;EACA,MAAM5B,QAAQ,GAAGE,SAAS,GAAG2B,OAAZ,CAAoBD,MAApB,EAA4B,EAA5B,CAAjB;EACA,MAAME,GAAG,GAAGH,SAAS,GAAGF,4BAA4B,CAACE,SAAD,CAA/B,GAA6C,CAAC,CAAnE;;EACA,IAAIG,GAAG,KAAK,CAAC,CAAb,EAAgB;IACdjC,MAAM,CAACI,MAAP,CAAcD,QAAQ,GAAG4B,MAAzB,EAAiC;MAC/BG,YAAY,EAAE/B,QADiB;MAE/BgC,IAAI,EAAE;QACJF;MADI;IAFyB,CAAjC;EAMD,CAPD,MAOO;IACL/B,SAAS,CAACC,QAAD,CAAT;EACD;AACF,CAdM"},"metadata":{},"sourceType":"module"}