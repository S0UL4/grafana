{"ast":null,"code":"var _th, _th2, _th3;\n\nimport { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Input, useStyles2 } from '@grafana/ui';\nimport { ActionIcon } from '../../../rules/ActionIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const KeyValueMapInput = ({\n  value,\n  onChange,\n  readOnly = false\n}) => {\n  const styles = useStyles2(getStyles);\n  const [pairs, setPairs] = useState(recordToPairs(value));\n  useEffect(() => setPairs(recordToPairs(value)), [value]);\n\n  const emitChange = pairs => {\n    onChange(pairsToRecord(pairs));\n  };\n\n  const deleteItem = index => {\n    const newPairs = pairs.slice();\n    const removed = newPairs.splice(index, 1)[0];\n    setPairs(newPairs);\n\n    if (removed[0]) {\n      emitChange(newPairs);\n    }\n  };\n\n  const updatePair = (values, index) => {\n    const old = pairs[index];\n    const newPairs = pairs.map((pair, i) => i === index ? values : pair);\n    setPairs(newPairs);\n\n    if (values[0] || old[0]) {\n      emitChange(newPairs);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [!!pairs.length && /*#__PURE__*/_jsxs(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Name\"\n          })), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n            children: \"Value\"\n          })), !readOnly && (_th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {})))]\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: pairs.map(([key, value], index) => /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"td\", {\n            children: /*#__PURE__*/_jsx(Input, {\n              readOnly: readOnly,\n              value: key,\n              onChange: e => updatePair([e.currentTarget.value, value], index)\n            })\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: /*#__PURE__*/_jsx(Input, {\n              readOnly: readOnly,\n              value: value,\n              onChange: e => updatePair([key, e.currentTarget.value], index)\n            })\n          }), !readOnly && /*#__PURE__*/_jsx(\"td\", {\n            children: /*#__PURE__*/_jsx(ActionIcon, {\n              icon: \"trash-alt\",\n              tooltip: \"delete\",\n              onClick: () => deleteItem(index)\n            })\n          })]\n        }, index))\n      })]\n    }), !readOnly && /*#__PURE__*/_jsx(Button, {\n      className: styles.addButton,\n      type: \"button\",\n      variant: \"secondary\",\n      icon: \"plus\",\n      size: \"sm\",\n      onClick: () => setPairs([...pairs, ['', '']]),\n      children: \"Add\"\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  addButton: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n  table: css`\n    tbody td {\n      padding: 0 ${theme.spacing(1)} ${theme.spacing(1)} 0;\n    }\n  `\n});\n\nconst pairsToRecord = pairs => {\n  const record = {};\n\n  for (const [key, value] of pairs) {\n    if (key) {\n      record[key] = value;\n    }\n  }\n\n  return record;\n};\n\nconst recordToPairs = obj => Object.entries(obj !== null && obj !== void 0 ? obj : {});","map":{"version":3,"names":["css","React","useEffect","useState","Button","Input","useStyles2","ActionIcon","KeyValueMapInput","value","onChange","readOnly","styles","getStyles","pairs","setPairs","recordToPairs","emitChange","pairsToRecord","deleteItem","index","newPairs","slice","removed","splice","updatePair","values","old","map","pair","i","length","table","key","e","currentTarget","addButton","theme","spacing","record","obj","Object","entries"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/receivers/form/fields/KeyValueMapInput.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Input, useStyles2 } from '@grafana/ui';\n\nimport { ActionIcon } from '../../../rules/ActionIcon';\n\ninterface Props {\n  value?: Record<string, string>;\n  readOnly?: boolean;\n  onChange: (value: Record<string, string>) => void;\n}\n\nexport const KeyValueMapInput: FC<Props> = ({ value, onChange, readOnly = false }) => {\n  const styles = useStyles2(getStyles);\n  const [pairs, setPairs] = useState(recordToPairs(value));\n  useEffect(() => setPairs(recordToPairs(value)), [value]);\n\n  const emitChange = (pairs: Array<[string, string]>) => {\n    onChange(pairsToRecord(pairs));\n  };\n\n  const deleteItem = (index: number) => {\n    const newPairs = pairs.slice();\n    const removed = newPairs.splice(index, 1)[0];\n    setPairs(newPairs);\n    if (removed[0]) {\n      emitChange(newPairs);\n    }\n  };\n\n  const updatePair = (values: [string, string], index: number) => {\n    const old = pairs[index];\n    const newPairs = pairs.map((pair, i) => (i === index ? values : pair));\n    setPairs(newPairs);\n    if (values[0] || old[0]) {\n      emitChange(newPairs);\n    }\n  };\n\n  return (\n    <div>\n      {!!pairs.length && (\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Value</th>\n              {!readOnly && <th></th>}\n            </tr>\n          </thead>\n          <tbody>\n            {pairs.map(([key, value], index) => (\n              <tr key={index}>\n                <td>\n                  <Input\n                    readOnly={readOnly}\n                    value={key}\n                    onChange={(e) => updatePair([e.currentTarget.value, value], index)}\n                  />\n                </td>\n                <td>\n                  <Input\n                    readOnly={readOnly}\n                    value={value}\n                    onChange={(e) => updatePair([key, e.currentTarget.value], index)}\n                  />\n                </td>\n                {!readOnly && (\n                  <td>\n                    <ActionIcon icon=\"trash-alt\" tooltip=\"delete\" onClick={() => deleteItem(index)} />\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      {!readOnly && (\n        <Button\n          className={styles.addButton}\n          type=\"button\"\n          variant=\"secondary\"\n          icon=\"plus\"\n          size=\"sm\"\n          onClick={() => setPairs([...pairs, ['', '']])}\n        >\n          Add\n        </Button>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  addButton: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n  table: css`\n    tbody td {\n      padding: 0 ${theme.spacing(1)} ${theme.spacing(1)} 0;\n    }\n  `,\n});\n\nconst pairsToRecord = (pairs: Array<[string, string]>): Record<string, string> => {\n  const record: Record<string, string> = {};\n  for (const [key, value] of pairs) {\n    if (key) {\n      record[key] = value;\n    }\n  }\n  return record;\n};\n\nconst recordToPairs = (obj?: Record<string, string>): Array<[string, string]> => Object.entries(obj ?? {});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}