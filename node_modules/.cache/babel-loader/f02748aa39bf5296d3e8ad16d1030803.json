{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LiveTailButton(props) {\n  const {\n    start,\n    pause,\n    resume,\n    isLive,\n    isPaused,\n    stop,\n    splitted\n  } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? isPaused ? resume : pause : start;\n  return /*#__PURE__*/_jsxs(ButtonGroup, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      content: isLive && !isPaused ? /*#__PURE__*/_jsx(_Fragment, {\n        children: \"Pause the live stream\"\n      }) : /*#__PURE__*/_jsx(_Fragment, {\n        children: \"Start live stream your logs\"\n      }),\n      placement: \"bottom\",\n      children: /*#__PURE__*/_jsx(ToolbarButton, {\n        iconOnly: splitted,\n        variant: buttonVariant,\n        icon: !isLive || isPaused ? 'play' : 'pause',\n        onClick: onClickMain,\n        children: isLive && isPaused ? 'Paused' : 'Live'\n      })\n    }), /*#__PURE__*/_jsx(CSSTransition, {\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: 100,\n      in: isLive,\n      classNames: {\n        enter: styles.stopButtonEnter,\n        enterActive: styles.stopButtonEnterActive,\n        exit: styles.stopButtonExit,\n        exitActive: styles.stopButtonExitActive\n      },\n      children: /*#__PURE__*/_jsx(Tooltip, {\n        content: /*#__PURE__*/_jsx(_Fragment, {\n          children: \"Stop and exit the live stream\"\n        }),\n        placement: \"bottom\",\n        children: /*#__PURE__*/_jsx(ToolbarButton, {\n          variant: buttonVariant,\n          onClick: stop,\n          icon: \"square-shape\"\n        })\n      })\n    })]\n  });\n}\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `\n};","map":{"version":3,"names":["css","React","CSSTransition","Tooltip","ButtonGroup","ToolbarButton","LiveTailButton","props","start","pause","resume","isLive","isPaused","stop","splitted","buttonVariant","onClickMain","enter","styles","stopButtonEnter","enterActive","stopButtonEnterActive","exit","stopButtonExit","exitActive","stopButtonExitActive"],"sources":["/home/soula/grafana/public/app/features/explore/LiveTailButton.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,aAA/B,QAAoD,aAApD;;;;AAYA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;EACzD,MAAM;IAAEC,KAAF;IAASC,KAAT;IAAgBC,MAAhB;IAAwBC,MAAxB;IAAgCC,QAAhC;IAA0CC,IAA1C;IAAgDC;EAAhD,IAA6DP,KAAnE;EACA,MAAMQ,aAAa,GAAGJ,MAAM,IAAI,CAACC,QAAX,GAAsB,QAAtB,GAAiC,SAAvD;EACA,MAAMI,WAAW,GAAGL,MAAM,GAAIC,QAAQ,GAAGF,MAAH,GAAYD,KAAxB,GAAiCD,KAA3D;EAEA,oBACE,MAAC,WAAD;IAAA,wBACE,KAAC,OAAD;MACE,OAAO,EAAEG,MAAM,IAAI,CAACC,QAAX,gBAAsB;QAAA;MAAA,EAAtB,gBAAmD;QAAA;MAAA,EAD9D;MAEE,SAAS,EAAC,QAFZ;MAAA,uBAIE,KAAC,aAAD;QACE,QAAQ,EAAEE,QADZ;QAEE,OAAO,EAAEC,aAFX;QAGE,IAAI,EAAE,CAACJ,MAAD,IAAWC,QAAX,GAAsB,MAAtB,GAA+B,OAHvC;QAIE,OAAO,EAAEI,WAJX;QAAA,UAMGL,MAAM,IAAIC,QAAV,GAAqB,QAArB,GAAgC;MANnC;IAJF,EADF,eAeE,KAAC,aAAD;MACE,YAAY,EAAE,IADhB;MAEE,aAAa,EAAE,IAFjB;MAGE,OAAO,EAAE,GAHX;MAIE,EAAE,EAAED,MAJN;MAKE,UAAU,EAAE;QACVM,KAAK,EAAEC,MAAM,CAACC,eADJ;QAEVC,WAAW,EAAEF,MAAM,CAACG,qBAFV;QAGVC,IAAI,EAAEJ,MAAM,CAACK,cAHH;QAIVC,UAAU,EAAEN,MAAM,CAACO;MAJT,CALd;MAAA,uBAYE,KAAC,OAAD;QAAS,OAAO,eAAE;UAAA;QAAA,EAAlB;QAAsD,SAAS,EAAC,QAAhE;QAAA,uBACE,KAAC,aAAD;UAAe,OAAO,EAAEV,aAAxB;UAAuC,OAAO,EAAEF,IAAhD;UAAsD,IAAI,EAAC;QAA3D;MADF;IAZF,EAfF;EAAA,EADF;AAkCD;AAED,MAAMK,MAAM,GAAG;EACbC,eAAe,EAAEnB,GAAI;AACvB;AACA;AACA;AACA;AACA,GANe;EAObqB,qBAAqB,EAAErB,GAAI;AAC7B;AACA;AACA;AACA,GAXe;EAYbuB,cAAc,EAAEvB,GAAI;AACtB;AACA;AACA;AACA;AACA,GAjBe;EAkBbyB,oBAAoB,EAAEzB,GAAI;AAC5B;AACA;AACA;AACA;AAtBe,CAAf"},"metadata":{},"sourceType":"module"}