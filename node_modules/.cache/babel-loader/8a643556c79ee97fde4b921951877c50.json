{"ast":null,"code":"import { useSelector } from 'react-redux';\nconst SUFFIX_REGEX = /\\/api\\/v[1|2]\\/alerts/i;\nexport function useExternalAmSelector() {\n  const discoveredAlertmanagers = useSelector(state => {\n    var _state$unifiedAlertin;\n\n    return (_state$unifiedAlertin = state.unifiedAlerting.externalAlertmanagers.discoveredAlertmanagers.result) === null || _state$unifiedAlertin === void 0 ? void 0 : _state$unifiedAlertin.data;\n  });\n  const alertmanagerConfig = useSelector(state => {\n    var _state$unifiedAlertin2;\n\n    return (_state$unifiedAlertin2 = state.unifiedAlerting.externalAlertmanagers.alertmanagerConfig.result) === null || _state$unifiedAlertin2 === void 0 ? void 0 : _state$unifiedAlertin2.alertmanagers;\n  });\n\n  if (!discoveredAlertmanagers || !alertmanagerConfig) {\n    return [];\n  }\n\n  const enabledAlertmanagers = [];\n  const droppedAlertmanagers = discoveredAlertmanagers.droppedAlertManagers.map(am => ({\n    url: am.url.replace(SUFFIX_REGEX, ''),\n    status: 'dropped',\n    actualUrl: am.url\n  }));\n\n  for (const url of alertmanagerConfig) {\n    if (discoveredAlertmanagers.activeAlertManagers.length === 0) {\n      enabledAlertmanagers.push({\n        url: url,\n        status: 'pending',\n        actualUrl: ''\n      });\n    } else {\n      const matchingActiveAM = discoveredAlertmanagers.activeAlertManagers.find(am => am.url === `${url}/api/v2/alerts`);\n      matchingActiveAM ? enabledAlertmanagers.push({\n        url: matchingActiveAM.url.replace(SUFFIX_REGEX, ''),\n        status: 'active',\n        actualUrl: matchingActiveAM.url\n      }) : enabledAlertmanagers.push({\n        url: url,\n        status: 'pending',\n        actualUrl: ''\n      });\n    }\n  }\n\n  return [...enabledAlertmanagers, ...droppedAlertmanagers];\n}","map":{"version":3,"names":["useSelector","SUFFIX_REGEX","useExternalAmSelector","discoveredAlertmanagers","state","unifiedAlerting","externalAlertmanagers","result","data","alertmanagerConfig","alertmanagers","enabledAlertmanagers","droppedAlertmanagers","droppedAlertManagers","map","am","url","replace","status","actualUrl","activeAlertManagers","length","push","matchingActiveAM","find"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/hooks/useExternalAmSelector.ts"],"sourcesContent":["import { useSelector } from 'react-redux';\n\nimport { StoreState } from '../../../../types';\n\nconst SUFFIX_REGEX = /\\/api\\/v[1|2]\\/alerts/i;\ntype AlertmanagerConfig = { url: string; status: string; actualUrl: string };\n\nexport function useExternalAmSelector(): AlertmanagerConfig[] | [] {\n  const discoveredAlertmanagers = useSelector(\n    (state: StoreState) => state.unifiedAlerting.externalAlertmanagers.discoveredAlertmanagers.result?.data\n  );\n  const alertmanagerConfig = useSelector(\n    (state: StoreState) => state.unifiedAlerting.externalAlertmanagers.alertmanagerConfig.result?.alertmanagers\n  );\n\n  if (!discoveredAlertmanagers || !alertmanagerConfig) {\n    return [];\n  }\n\n  const enabledAlertmanagers: AlertmanagerConfig[] = [];\n  const droppedAlertmanagers: AlertmanagerConfig[] = discoveredAlertmanagers.droppedAlertManagers.map((am) => ({\n    url: am.url.replace(SUFFIX_REGEX, ''),\n    status: 'dropped',\n    actualUrl: am.url,\n  }));\n\n  for (const url of alertmanagerConfig) {\n    if (discoveredAlertmanagers.activeAlertManagers.length === 0) {\n      enabledAlertmanagers.push({\n        url: url,\n        status: 'pending',\n        actualUrl: '',\n      });\n    } else {\n      const matchingActiveAM = discoveredAlertmanagers.activeAlertManagers.find(\n        (am) => am.url === `${url}/api/v2/alerts`\n      );\n      matchingActiveAM\n        ? enabledAlertmanagers.push({\n            url: matchingActiveAM.url.replace(SUFFIX_REGEX, ''),\n            status: 'active',\n            actualUrl: matchingActiveAM.url,\n          })\n        : enabledAlertmanagers.push({\n            url: url,\n            status: 'pending',\n            actualUrl: '',\n          });\n    }\n  }\n\n  return [...enabledAlertmanagers, ...droppedAlertmanagers];\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AAIA,MAAMC,YAAY,GAAG,wBAArB;AAGA,OAAO,SAASC,qBAAT,GAA4D;EACjE,MAAMC,uBAAuB,GAAGH,WAAW,CACxCI,KAAD;IAAA;;IAAA,gCAAuBA,KAAK,CAACC,eAAN,CAAsBC,qBAAtB,CAA4CH,uBAA5C,CAAoEI,MAA3F,0DAAuB,sBAA4EC,IAAnG;EAAA,CADyC,CAA3C;EAGA,MAAMC,kBAAkB,GAAGT,WAAW,CACnCI,KAAD;IAAA;;IAAA,iCAAuBA,KAAK,CAACC,eAAN,CAAsBC,qBAAtB,CAA4CG,kBAA5C,CAA+DF,MAAtF,2DAAuB,uBAAuEG,aAA9F;EAAA,CADoC,CAAtC;;EAIA,IAAI,CAACP,uBAAD,IAA4B,CAACM,kBAAjC,EAAqD;IACnD,OAAO,EAAP;EACD;;EAED,MAAME,oBAA0C,GAAG,EAAnD;EACA,MAAMC,oBAA0C,GAAGT,uBAAuB,CAACU,oBAAxB,CAA6CC,GAA7C,CAAkDC,EAAD,KAAS;IAC3GC,GAAG,EAAED,EAAE,CAACC,GAAH,CAAOC,OAAP,CAAehB,YAAf,EAA6B,EAA7B,CADsG;IAE3GiB,MAAM,EAAE,SAFmG;IAG3GC,SAAS,EAAEJ,EAAE,CAACC;EAH6F,CAAT,CAAjD,CAAnD;;EAMA,KAAK,MAAMA,GAAX,IAAkBP,kBAAlB,EAAsC;IACpC,IAAIN,uBAAuB,CAACiB,mBAAxB,CAA4CC,MAA5C,KAAuD,CAA3D,EAA8D;MAC5DV,oBAAoB,CAACW,IAArB,CAA0B;QACxBN,GAAG,EAAEA,GADmB;QAExBE,MAAM,EAAE,SAFgB;QAGxBC,SAAS,EAAE;MAHa,CAA1B;IAKD,CAND,MAMO;MACL,MAAMI,gBAAgB,GAAGpB,uBAAuB,CAACiB,mBAAxB,CAA4CI,IAA5C,CACtBT,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAY,GAAEA,GAAI,gBADH,CAAzB;MAGAO,gBAAgB,GACZZ,oBAAoB,CAACW,IAArB,CAA0B;QACxBN,GAAG,EAAEO,gBAAgB,CAACP,GAAjB,CAAqBC,OAArB,CAA6BhB,YAA7B,EAA2C,EAA3C,CADmB;QAExBiB,MAAM,EAAE,QAFgB;QAGxBC,SAAS,EAAEI,gBAAgB,CAACP;MAHJ,CAA1B,CADY,GAMZL,oBAAoB,CAACW,IAArB,CAA0B;QACxBN,GAAG,EAAEA,GADmB;QAExBE,MAAM,EAAE,SAFgB;QAGxBC,SAAS,EAAE;MAHa,CAA1B,CANJ;IAWD;EACF;;EAED,OAAO,CAAC,GAAGR,oBAAJ,EAA0B,GAAGC,oBAA7B,CAAP;AACD"},"metadata":{},"sourceType":"module"}