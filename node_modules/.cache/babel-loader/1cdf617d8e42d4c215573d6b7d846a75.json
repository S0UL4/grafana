{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { stylesFactory } from '../../themes';\nimport { withTheme } from '../../themes/index';\n//Components\nimport { LogLabelStatsRow } from './LogLabelStatsRow';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst STATS_ROW_LIMIT = 5;\nconst getStyles = stylesFactory(theme => {\n  return {\n    logsStats: css`\n      label: logs-stats;\n      background: inherit;\n      color: ${theme.colors.text};\n      word-break: break-all;\n      width: fit-content;\n      max-width: 100%;\n    `,\n    logsStatsHeader: css`\n      label: logs-stats__header;\n      border-bottom: 1px solid ${theme.colors.border2};\n      display: flex;\n    `,\n    logsStatsTitle: css`\n      label: logs-stats__title;\n      font-weight: ${theme.typography.weight.semibold};\n      padding-right: ${theme.spacing.d};\n      display: inline-block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      flex-grow: 1;\n    `,\n    logsStatsClose: css`\n      label: logs-stats__close;\n      cursor: pointer;\n    `,\n    logsStatsBody: css`\n      label: logs-stats__body;\n      padding: 5px 0;\n    `\n  };\n});\n\nclass UnThemedLogLabelStats extends PureComponent {\n  render() {\n    const {\n      label,\n      rowCount,\n      stats,\n      value,\n      theme,\n      isLabel\n    } = this.props;\n    const style = getStyles(theme);\n    const topRows = stats.slice(0, STATS_ROW_LIMIT);\n    let activeRow = topRows.find(row => row.value === value);\n    let otherRows = stats.slice(STATS_ROW_LIMIT);\n    const insertActiveRow = !activeRow; // Remove active row from other to show extra\n\n    if (insertActiveRow) {\n      activeRow = otherRows.find(row => row.value === value);\n      otherRows = otherRows.filter(row => row.value !== value);\n    }\n\n    const otherCount = otherRows.reduce((sum, row) => sum + row.count, 0);\n    const topCount = topRows.reduce((sum, row) => sum + row.count, 0);\n    const total = topCount + otherCount;\n    const otherProportion = otherCount / total;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: style.logsStats,\n      \"data-testid\": \"logLabelStats\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.logsStatsHeader,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: style.logsStatsTitle,\n          children: [label, \": \", total, \" of \", rowCount, \" rows have that \", isLabel ? 'label' : 'field']\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.logsStatsBody,\n        children: [topRows.map(stat => /*#__PURE__*/_jsx(LogLabelStatsRow, Object.assign({}, stat, {\n          active: stat.value === value\n        }), stat.value)), insertActiveRow && activeRow && /*#__PURE__*/_jsx(LogLabelStatsRow, Object.assign({}, activeRow, {\n          active: true\n        }), activeRow.value), otherCount > 0 && /*#__PURE__*/_jsx(LogLabelStatsRow, {\n          count: otherCount,\n          value: \"Other\",\n          proportion: otherProportion\n        }, \"__OTHERS__\")]\n      })]\n    });\n  }\n\n}\n\nexport const LogLabelStats = withTheme(UnThemedLogLabelStats);\nLogLabelStats.displayName = 'LogLabelStats';","map":{"version":3,"names":["css","React","PureComponent","stylesFactory","withTheme","LogLabelStatsRow","STATS_ROW_LIMIT","getStyles","theme","logsStats","colors","text","logsStatsHeader","border2","logsStatsTitle","typography","weight","semibold","spacing","d","logsStatsClose","logsStatsBody","UnThemedLogLabelStats","render","label","rowCount","stats","value","isLabel","props","style","topRows","slice","activeRow","find","row","otherRows","insertActiveRow","filter","otherCount","reduce","sum","count","topCount","total","otherProportion","map","stat","LogLabelStats","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Logs/LogLabelStats.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { LogLabelStatsModel, GrafanaTheme } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { withTheme } from '../../themes/index';\nimport { Themeable } from '../../types/theme';\n\n//Components\nimport { LogLabelStatsRow } from './LogLabelStatsRow';\n\nconst STATS_ROW_LIMIT = 5;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    logsStats: css`\n      label: logs-stats;\n      background: inherit;\n      color: ${theme.colors.text};\n      word-break: break-all;\n      width: fit-content;\n      max-width: 100%;\n    `,\n    logsStatsHeader: css`\n      label: logs-stats__header;\n      border-bottom: 1px solid ${theme.colors.border2};\n      display: flex;\n    `,\n    logsStatsTitle: css`\n      label: logs-stats__title;\n      font-weight: ${theme.typography.weight.semibold};\n      padding-right: ${theme.spacing.d};\n      display: inline-block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      flex-grow: 1;\n    `,\n    logsStatsClose: css`\n      label: logs-stats__close;\n      cursor: pointer;\n    `,\n    logsStatsBody: css`\n      label: logs-stats__body;\n      padding: 5px 0;\n    `,\n  };\n});\n\ninterface Props extends Themeable {\n  stats: LogLabelStatsModel[];\n  label: string;\n  value: string;\n  rowCount: number;\n  isLabel?: boolean;\n}\n\nclass UnThemedLogLabelStats extends PureComponent<Props> {\n  render() {\n    const { label, rowCount, stats, value, theme, isLabel } = this.props;\n    const style = getStyles(theme);\n    const topRows = stats.slice(0, STATS_ROW_LIMIT);\n    let activeRow = topRows.find((row) => row.value === value);\n    let otherRows = stats.slice(STATS_ROW_LIMIT);\n    const insertActiveRow = !activeRow;\n\n    // Remove active row from other to show extra\n    if (insertActiveRow) {\n      activeRow = otherRows.find((row) => row.value === value);\n      otherRows = otherRows.filter((row) => row.value !== value);\n    }\n\n    const otherCount = otherRows.reduce((sum, row) => sum + row.count, 0);\n    const topCount = topRows.reduce((sum, row) => sum + row.count, 0);\n    const total = topCount + otherCount;\n    const otherProportion = otherCount / total;\n\n    return (\n      <div className={style.logsStats} data-testid=\"logLabelStats\">\n        <div className={style.logsStatsHeader}>\n          <div className={style.logsStatsTitle}>\n            {label}: {total} of {rowCount} rows have that {isLabel ? 'label' : 'field'}\n          </div>\n        </div>\n        <div className={style.logsStatsBody}>\n          {topRows.map((stat) => (\n            <LogLabelStatsRow key={stat.value} {...stat} active={stat.value === value} />\n          ))}\n          {insertActiveRow && activeRow && <LogLabelStatsRow key={activeRow.value} {...activeRow} active />}\n          {otherCount > 0 && (\n            <LogLabelStatsRow key=\"__OTHERS__\" count={otherCount} value=\"Other\" proportion={otherProportion} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LogLabelStats = withTheme(UnThemedLogLabelStats);\nLogLabelStats.displayName = 'LogLabelStats';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}