{"ast":null,"code":"const _excluded = [\"className\", \"options\", \"value\", \"onChange\", \"narrow\", \"variant\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport { useButton } from '@react-aria/button';\nimport { FocusScope } from '@react-aria/focus';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport React from 'react';\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { ButtonGroup } from '../Button';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Menu } from '../Menu/Menu';\nimport { MenuItem } from '../Menu/MenuItem';\nimport { ToolbarButton } from '../ToolbarButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * @internal\n * A temporary component until we have a proper dropdown component\n */\nconst ButtonSelectComponent = props => {\n  const {\n    className,\n    options,\n    value,\n    onChange,\n    narrow,\n    variant\n  } = props,\n        restProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styles = useStyles2(getStyles);\n  const state = useMenuTriggerState({});\n  const ref = React.useRef(null);\n  const {\n    menuTriggerProps,\n    menuProps\n  } = useMenuTrigger({}, state, ref);\n  const {\n    buttonProps\n  } = useButton(menuTriggerProps, ref);\n\n  const onChangeInternal = item => {\n    onChange(item);\n    state.close();\n  };\n\n  return /*#__PURE__*/_jsxs(ButtonGroup, {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(ToolbarButton, Object.assign({\n      className: className,\n      isOpen: state.isOpen,\n      narrow: narrow,\n      variant: variant,\n      ref: ref\n    }, buttonProps, restProps, {\n      children: (value === null || value === void 0 ? void 0 : value.label) || (value === null || value === void 0 ? void 0 : value.value)\n    })), state.isOpen && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.menuWrapper,\n      children: /*#__PURE__*/_jsx(ClickOutsideWrapper, {\n        onClick: state.close,\n        parent: document,\n        includeButtonPress: false,\n        children: /*#__PURE__*/_jsx(FocusScope, {\n          contain: true,\n          autoFocus: true,\n          restoreFocus: true,\n          children: /*#__PURE__*/_jsx(Menu, Object.assign({\n            tabIndex: -1,\n            onClose: state.close\n          }, menuProps, {\n            children: options.map(item => /*#__PURE__*/_jsx(MenuItem, {\n              label: item.label || item.value,\n              onClick: () => onChangeInternal(item),\n              active: item.value === (value === null || value === void 0 ? void 0 : value.value),\n              ariaChecked: item.value === (value === null || value === void 0 ? void 0 : value.value),\n              ariaLabel: item.ariaLabel || item.label,\n              role: \"menuitemradio\"\n            }, `${item.value}`))\n          }))\n        })\n      })\n    })]\n  });\n};\n\nButtonSelectComponent.displayName = 'ButtonSelect';\nexport const ButtonSelect = /*#__PURE__*/React.memo(ButtonSelectComponent);\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      position: relative;\n      display: inline-flex;\n    `,\n    menuWrapper: css`\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      top: ${theme.spacing(4)};\n      right: 0;\n    `\n  };\n};","map":{"version":3,"names":["css","useButton","FocusScope","useMenuTrigger","useMenuTriggerState","React","useStyles2","ButtonGroup","ClickOutsideWrapper","Menu","MenuItem","ToolbarButton","ButtonSelectComponent","props","className","options","value","onChange","narrow","variant","restProps","styles","getStyles","state","ref","useRef","menuTriggerProps","menuProps","buttonProps","onChangeInternal","item","close","wrapper","isOpen","label","menuWrapper","document","map","ariaLabel","displayName","ButtonSelect","memo","theme","zIndex","dropdown","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Dropdown/ButtonSelect.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useButton } from '@react-aria/button';\nimport { FocusScope } from '@react-aria/focus';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { ButtonGroup } from '../Button';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Menu } from '../Menu/Menu';\nimport { MenuItem } from '../Menu/MenuItem';\nimport { ToolbarButton, ToolbarButtonVariant } from '../ToolbarButton';\nimport { PopoverContent } from '../Tooltip';\n\nexport interface Props<T> extends HTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  options: Array<SelectableValue<T>>;\n  value?: SelectableValue<T>;\n  onChange: (item: SelectableValue<T>) => void;\n  tooltipContent?: PopoverContent;\n  narrow?: boolean;\n  variant?: ToolbarButtonVariant;\n}\n\n/**\n * @internal\n * A temporary component until we have a proper dropdown component\n */\nconst ButtonSelectComponent = <T,>(props: Props<T>) => {\n  const { className, options, value, onChange, narrow, variant, ...restProps } = props;\n  const styles = useStyles2(getStyles);\n  const state = useMenuTriggerState({});\n\n  const ref = React.useRef(null);\n  const { menuTriggerProps, menuProps } = useMenuTrigger({}, state, ref);\n  const { buttonProps } = useButton(menuTriggerProps, ref);\n\n  const onChangeInternal = (item: SelectableValue<T>) => {\n    onChange(item);\n    state.close();\n  };\n\n  return (\n    <ButtonGroup className={styles.wrapper}>\n      <ToolbarButton\n        className={className}\n        isOpen={state.isOpen}\n        narrow={narrow}\n        variant={variant}\n        ref={ref}\n        {...buttonProps}\n        {...restProps}\n      >\n        {value?.label || value?.value}\n      </ToolbarButton>\n      {state.isOpen && (\n        <div className={styles.menuWrapper}>\n          <ClickOutsideWrapper onClick={state.close} parent={document} includeButtonPress={false}>\n            <FocusScope contain autoFocus restoreFocus>\n              {/*\n                tabIndex=-1 is needed here to support highlighting text within the menu when using FocusScope\n                see https://github.com/adobe/react-spectrum/issues/1604#issuecomment-781574668\n              */}\n              <Menu tabIndex={-1} onClose={state.close} {...menuProps}>\n                {options.map((item) => (\n                  <MenuItem\n                    key={`${item.value}`}\n                    label={(item.label || item.value) as string}\n                    onClick={() => onChangeInternal(item)}\n                    active={item.value === value?.value}\n                    ariaChecked={item.value === value?.value}\n                    ariaLabel={item.ariaLabel || item.label}\n                    role=\"menuitemradio\"\n                  />\n                ))}\n              </Menu>\n            </FocusScope>\n          </ClickOutsideWrapper>\n        </div>\n      )}\n    </ButtonGroup>\n  );\n};\n\nButtonSelectComponent.displayName = 'ButtonSelect';\n\nexport const ButtonSelect = React.memo(ButtonSelectComponent) as typeof ButtonSelectComponent;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n      display: inline-flex;\n    `,\n    menuWrapper: css`\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      top: ${theme.spacing(4)};\n      right: 0;\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}