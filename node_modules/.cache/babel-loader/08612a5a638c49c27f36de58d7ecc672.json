{"ast":null,"code":"var _ValueContainer;\n\nconst _excluded = [\"appliedRoles\", \"builtInRole\", \"disabled\", \"isFocused\", \"query\", \"showBuiltInRole\", \"onOpen\", \"onClose\", \"onQueryChange\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef } from 'react';\nimport { useStyles2, getInputStyles, sharedInputStyle, styleMixins, Tooltip, Icon } from '@grafana/ui';\nimport { ValueContainer } from './ValueContainer';\nimport { ROLE_PICKER_WIDTH } from './constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst stopPropagation = event => event.stopPropagation();\n\nexport const RolePickerInput = _ref => {\n  let {\n    appliedRoles,\n    builtInRole,\n    disabled,\n    isFocused,\n    query,\n    showBuiltInRole,\n    onOpen,\n    onClose,\n    onQueryChange\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles2(theme => getRolePickerInputStyles(theme, false, !!isFocused, !!disabled, false));\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (isFocused) {\n      var _inputRef$current;\n\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  });\n\n  const onInputChange = event => {\n    var _event$target;\n\n    const query = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n    onQueryChange(query);\n  };\n\n  const numberOfRoles = appliedRoles.length;\n  return !isFocused ? /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.wrapper, styles.selectedRoles),\n    onMouseDown: onOpen,\n    children: [showBuiltInRole && /*#__PURE__*/_jsx(ValueContainer, {\n      children: builtInRole\n    }), /*#__PURE__*/_jsx(RolesLabel, {\n      appliedRoles: appliedRoles,\n      numberOfRoles: numberOfRoles,\n      showBuiltInRole: showBuiltInRole\n    })]\n  }) : /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [showBuiltInRole && /*#__PURE__*/_jsx(ValueContainer, {\n      children: builtInRole\n    }), appliedRoles.map(role => /*#__PURE__*/_jsx(ValueContainer, {\n      children: role.displayName\n    }, role.uid)), !disabled && /*#__PURE__*/_jsx(\"input\", Object.assign({}, rest, {\n      className: styles.input,\n      ref: inputRef,\n      onMouseDown: stopPropagation,\n      onChange: onInputChange,\n      \"data-testid\": \"role-picker-input\",\n      placeholder: isFocused ? 'Select role' : '',\n      value: query\n    })), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.suffix,\n      children: /*#__PURE__*/_jsx(Icon, {\n        name: \"angle-up\",\n        className: styles.dropdownIndicator,\n        onMouseDown: onClose\n      })\n    })]\n  });\n};\nRolePickerInput.displayName = 'RolePickerInput';\nexport const RolesLabel = ({\n  showBuiltInRole,\n  numberOfRoles,\n  appliedRoles\n}) => {\n  const styles = useStyles2(theme => getTooltipStyles(theme));\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: !!numberOfRoles ? /*#__PURE__*/_jsx(Tooltip, {\n      content: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.tooltip,\n        children: appliedRoles === null || appliedRoles === void 0 ? void 0 : appliedRoles.map(role => /*#__PURE__*/_jsx(\"p\", {\n          children: role.displayName\n        }, role.uid))\n      }),\n      children: /*#__PURE__*/_jsx(ValueContainer, {\n        children: `${showBuiltInRole ? '+' : ''}${numberOfRoles} role${numberOfRoles > 1 ? 's' : ''}`\n      })\n    }) : !showBuiltInRole && (_ValueContainer || (_ValueContainer = /*#__PURE__*/_jsx(ValueContainer, {\n      children: \"No roles assigned\"\n    })))\n  });\n};\n\nconst getRolePickerInputStyles = (theme, invalid, focused, disabled, withPrefix) => {\n  const styles = getInputStyles({\n    theme,\n    invalid\n  });\n  return {\n    wrapper: cx(styles.wrapper, sharedInputStyle(theme, invalid), focused && css`\n          ${styleMixins.focusCss(theme.v1)}\n        `, disabled && styles.inputDisabled, css`\n        width: ${ROLE_PICKER_WIDTH}px;\n        min-height: 32px;\n        height: auto;\n        flex-direction: row;\n        padding-right: 24px;\n        max-width: 100%;\n        align-items: center;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        position: relative;\n        box-sizing: border-box;\n        cursor: default;\n      `, withPrefix && css`\n          padding-left: 0;\n        `),\n    input: cx(sharedInputStyle(theme, invalid), css`\n        max-width: 120px;\n        border: none;\n        cursor: ${focused ? 'default' : 'pointer'};\n      `),\n    suffix: styles.suffix,\n    dropdownIndicator: css`\n      cursor: pointer;\n    `,\n    selectedRoles: css`\n      display: flex;\n      align-items: center;\n      cursor: ${disabled ? 'not-allowed' : 'pointer'};\n    `,\n    tooltip: css`\n      p {\n        margin-bottom: ${theme.spacing(0.5)};\n      }\n    `\n  };\n};\n\nconst getTooltipStyles = theme => ({\n  tooltip: css`\n    p {\n      margin-bottom: ${theme.spacing(0.5)};\n    }\n  `\n});","map":{"version":3,"names":["css","cx","React","useEffect","useRef","useStyles2","getInputStyles","sharedInputStyle","styleMixins","Tooltip","Icon","ValueContainer","ROLE_PICKER_WIDTH","stopPropagation","event","RolePickerInput","appliedRoles","builtInRole","disabled","isFocused","query","showBuiltInRole","onOpen","onClose","onQueryChange","rest","styles","theme","getRolePickerInputStyles","inputRef","current","focus","onInputChange","target","value","numberOfRoles","length","wrapper","selectedRoles","map","role","displayName","uid","input","suffix","dropdownIndicator","RolesLabel","getTooltipStyles","tooltip","invalid","focused","withPrefix","focusCss","v1","inputDisabled","spacing"],"sources":["/home/soula/grafana/public/app/core/components/RolePicker/RolePickerInput.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FormEvent, HTMLProps, useEffect, useRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, getInputStyles, sharedInputStyle, styleMixins, Tooltip, Icon } from '@grafana/ui';\n\nimport { Role } from '../../../types';\n\nimport { ValueContainer } from './ValueContainer';\nimport { ROLE_PICKER_WIDTH } from './constants';\n\nconst stopPropagation = (event: React.MouseEvent<HTMLDivElement>) => event.stopPropagation();\n\ninterface InputProps extends HTMLProps<HTMLInputElement> {\n  appliedRoles: Role[];\n  builtInRole?: string;\n  query: string;\n  showBuiltInRole?: boolean;\n  isFocused?: boolean;\n  disabled?: boolean;\n  onQueryChange: (query?: string) => void;\n  onOpen: (event: FormEvent<HTMLElement>) => void;\n  onClose: () => void;\n}\n\nexport const RolePickerInput = ({\n  appliedRoles,\n  builtInRole,\n  disabled,\n  isFocused,\n  query,\n  showBuiltInRole,\n  onOpen,\n  onClose,\n  onQueryChange,\n  ...rest\n}: InputProps): JSX.Element => {\n  const styles = useStyles2((theme) => getRolePickerInputStyles(theme, false, !!isFocused, !!disabled, false));\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (isFocused) {\n      inputRef.current?.focus();\n    }\n  });\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const query = event.target?.value;\n    onQueryChange(query);\n  };\n\n  const numberOfRoles = appliedRoles.length;\n\n  return !isFocused ? (\n    <div className={cx(styles.wrapper, styles.selectedRoles)} onMouseDown={onOpen}>\n      {showBuiltInRole && <ValueContainer>{builtInRole}</ValueContainer>}\n      <RolesLabel appliedRoles={appliedRoles} numberOfRoles={numberOfRoles} showBuiltInRole={showBuiltInRole} />\n    </div>\n  ) : (\n    <div className={styles.wrapper}>\n      {showBuiltInRole && <ValueContainer>{builtInRole}</ValueContainer>}\n      {appliedRoles.map((role) => (\n        <ValueContainer key={role.uid}>{role.displayName}</ValueContainer>\n      ))}\n\n      {!disabled && (\n        <input\n          {...rest}\n          className={styles.input}\n          ref={inputRef}\n          onMouseDown={stopPropagation}\n          onChange={onInputChange}\n          data-testid=\"role-picker-input\"\n          placeholder={isFocused ? 'Select role' : ''}\n          value={query}\n        />\n      )}\n      <div className={styles.suffix}>\n        <Icon name=\"angle-up\" className={styles.dropdownIndicator} onMouseDown={onClose} />\n      </div>\n    </div>\n  );\n};\n\nRolePickerInput.displayName = 'RolePickerInput';\n\ninterface RolesLabelProps {\n  appliedRoles: Role[];\n  showBuiltInRole?: boolean;\n  numberOfRoles: number;\n}\n\nexport const RolesLabel = ({ showBuiltInRole, numberOfRoles, appliedRoles }: RolesLabelProps): JSX.Element => {\n  const styles = useStyles2((theme) => getTooltipStyles(theme));\n\n  return (\n    <>\n      {!!numberOfRoles ? (\n        <Tooltip\n          content={\n            <div className={styles.tooltip}>\n              {appliedRoles?.map((role) => (\n                <p key={role.uid}>{role.displayName}</p>\n              ))}\n            </div>\n          }\n        >\n          <ValueContainer>{`${showBuiltInRole ? '+' : ''}${numberOfRoles} role${\n            numberOfRoles > 1 ? 's' : ''\n          }`}</ValueContainer>\n        </Tooltip>\n      ) : (\n        !showBuiltInRole && <ValueContainer>No roles assigned</ValueContainer>\n      )}\n    </>\n  );\n};\n\nconst getRolePickerInputStyles = (\n  theme: GrafanaTheme2,\n  invalid: boolean,\n  focused: boolean,\n  disabled: boolean,\n  withPrefix: boolean\n) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    wrapper: cx(\n      styles.wrapper,\n      sharedInputStyle(theme, invalid),\n      focused &&\n        css`\n          ${styleMixins.focusCss(theme.v1)}\n        `,\n      disabled && styles.inputDisabled,\n      css`\n        width: ${ROLE_PICKER_WIDTH}px;\n        min-height: 32px;\n        height: auto;\n        flex-direction: row;\n        padding-right: 24px;\n        max-width: 100%;\n        align-items: center;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        position: relative;\n        box-sizing: border-box;\n        cursor: default;\n      `,\n      withPrefix &&\n        css`\n          padding-left: 0;\n        `\n    ),\n    input: cx(\n      sharedInputStyle(theme, invalid),\n      css`\n        max-width: 120px;\n        border: none;\n        cursor: ${focused ? 'default' : 'pointer'};\n      `\n    ),\n    suffix: styles.suffix,\n    dropdownIndicator: css`\n      cursor: pointer;\n    `,\n    selectedRoles: css`\n      display: flex;\n      align-items: center;\n      cursor: ${disabled ? 'not-allowed' : 'pointer'};\n    `,\n    tooltip: css`\n      p {\n        margin-bottom: ${theme.spacing(0.5)};\n      }\n    `,\n  };\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => ({\n  tooltip: css`\n    p {\n      margin-bottom: ${theme.spacing(0.5)};\n    }\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}