{"ast":null,"code":"import { css } from '@emotion/css';\nimport { useFocus, useKeyboard } from '@react-aria/interactions';\nimport { useMenuItem } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport React, { useRef, useState } from 'react';\nimport { useTheme2 } from '@grafana/ui';\nimport { useNavBarItemMenuContext, useNavBarContext } from './context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function NavBarItemMenuItem({\n  item,\n  state,\n  onNavigate\n}) {\n  const {\n    onClose,\n    onLeft\n  } = useNavBarItemMenuContext();\n  const {\n    setMenuIdOpen\n  } = useNavBarContext();\n  const {\n    key,\n    rendered\n  } = item;\n  const ref = useRef(null);\n  const isDisabled = state.disabledKeys.has(key); // style to the focused menu item\n\n  const [isFocused, setFocused] = useState(false);\n  const {\n    focusProps\n  } = useFocus({\n    onFocusChange: setFocused,\n    isDisabled\n  });\n  const theme = useTheme2();\n  const isSection = item.value.menuItemType === 'section';\n  const styles = getStyles(theme, isFocused, isSection);\n\n  const onAction = () => {\n    setMenuIdOpen(undefined);\n    onNavigate(item.value);\n    onClose();\n  };\n\n  let {\n    menuItemProps\n  } = useMenuItem({\n    isDisabled,\n    'aria-label': item['aria-label'],\n    key,\n    closeOnSelect: true,\n    onClose,\n    onAction\n  }, state, ref);\n  const {\n    keyboardProps\n  } = useKeyboard({\n    onKeyDown: e => {\n      if (e.key === 'ArrowLeft') {\n        onLeft();\n      }\n\n      e.continuePropagation();\n    }\n  });\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"li\", Object.assign({}, mergeProps(menuItemProps, focusProps, keyboardProps), {\n      ref: ref,\n      className: styles.menuItem,\n      children: rendered\n    }))\n  });\n}\n\nfunction getStyles(theme, isFocused, isSection) {\n  let backgroundColor = 'transparent';\n\n  if (isFocused) {\n    backgroundColor = theme.colors.action.hover;\n  } else if (isSection) {\n    backgroundColor = theme.colors.background.secondary;\n  }\n\n  return {\n    menuItem: css`\n      background-color: ${backgroundColor};\n      color: ${theme.colors.text.primary};\n\n      &:focus-visible {\n        background-color: ${theme.colors.action.hover};\n        box-shadow: none;\n        color: ${theme.colors.text.primary};\n        outline: 2px solid ${theme.colors.primary.main};\n        outline-offset: -2px;\n        transition: none;\n      }\n    `,\n    upgradeBoxContainer: css`\n      padding: ${theme.spacing(1)};\n    `,\n    upgradeBox: css`\n      width: 300px;\n    `\n  };\n}","map":{"version":3,"names":["css","useFocus","useKeyboard","useMenuItem","mergeProps","React","useRef","useState","useTheme2","useNavBarItemMenuContext","useNavBarContext","NavBarItemMenuItem","item","state","onNavigate","onClose","onLeft","setMenuIdOpen","key","rendered","ref","isDisabled","disabledKeys","has","isFocused","setFocused","focusProps","onFocusChange","theme","isSection","value","menuItemType","styles","getStyles","onAction","undefined","menuItemProps","closeOnSelect","keyboardProps","onKeyDown","e","continuePropagation","menuItem","backgroundColor","colors","action","hover","background","secondary","text","primary","main","upgradeBoxContainer","spacing","upgradeBox"],"sources":["/home/soula/grafana/public/app/core/components/NavBar/NavBarItemMenuItem.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useFocus, useKeyboard } from '@react-aria/interactions';\nimport { useMenuItem } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { TreeState } from '@react-stately/tree';\nimport { Node } from '@react-types/shared';\nimport React, { ReactElement, useRef, useState } from 'react';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nimport { useNavBarItemMenuContext, useNavBarContext } from './context';\n\nexport interface NavBarItemMenuItemProps {\n  item: Node<NavModelItem>;\n  state: TreeState<NavModelItem>;\n  onNavigate: (item: NavModelItem) => void;\n}\n\nexport function NavBarItemMenuItem({ item, state, onNavigate }: NavBarItemMenuItemProps): ReactElement {\n  const { onClose, onLeft } = useNavBarItemMenuContext();\n  const { setMenuIdOpen } = useNavBarContext();\n  const { key, rendered } = item;\n  const ref = useRef<HTMLLIElement>(null);\n  const isDisabled = state.disabledKeys.has(key);\n\n  // style to the focused menu item\n  const [isFocused, setFocused] = useState(false);\n  const { focusProps } = useFocus({ onFocusChange: setFocused, isDisabled });\n  const theme = useTheme2();\n  const isSection = item.value.menuItemType === 'section';\n  const styles = getStyles(theme, isFocused, isSection);\n  const onAction = () => {\n    setMenuIdOpen(undefined);\n    onNavigate(item.value);\n    onClose();\n  };\n\n  let { menuItemProps } = useMenuItem(\n    {\n      isDisabled,\n      'aria-label': item['aria-label'],\n      key,\n      closeOnSelect: true,\n      onClose,\n      onAction,\n    },\n    state,\n    ref\n  );\n\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (e.key === 'ArrowLeft') {\n        onLeft();\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return (\n    <>\n      <li {...mergeProps(menuItemProps, focusProps, keyboardProps)} ref={ref} className={styles.menuItem}>\n        {rendered}\n      </li>\n    </>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2, isFocused: boolean, isSection: boolean) {\n  let backgroundColor = 'transparent';\n  if (isFocused) {\n    backgroundColor = theme.colors.action.hover;\n  } else if (isSection) {\n    backgroundColor = theme.colors.background.secondary;\n  }\n  return {\n    menuItem: css`\n      background-color: ${backgroundColor};\n      color: ${theme.colors.text.primary};\n\n      &:focus-visible {\n        background-color: ${theme.colors.action.hover};\n        box-shadow: none;\n        color: ${theme.colors.text.primary};\n        outline: 2px solid ${theme.colors.primary.main};\n        outline-offset: -2px;\n        transition: none;\n      }\n    `,\n    upgradeBoxContainer: css`\n      padding: ${theme.spacing(1)};\n    `,\n    upgradeBox: css`\n      width: 300px;\n    `,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}