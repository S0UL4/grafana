{"ast":null,"code":"import React, { useState } from 'react';\nimport { CollapsableSection, TagsInput, Select, Field, Input, Checkbox, Button } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const newLink = {\n  icon: 'external link',\n  title: 'New link',\n  tooltip: '',\n  type: 'dashboards',\n  url: '',\n  asDropdown: false,\n  tags: [],\n  targetBlank: false,\n  keepTime: false,\n  includeVars: false\n};\nconst linkTypeOptions = [{\n  value: 'dashboards',\n  label: 'Dashboards'\n}, {\n  value: 'link',\n  label: 'Link'\n}];\nexport const linkIconMap = {\n  'external link': 'external-link-alt',\n  dashboard: 'apps',\n  question: 'question-circle',\n  info: 'info-circle',\n  bolt: 'bolt',\n  doc: 'file-alt',\n  cloud: 'cloud'\n};\nconst linkIconOptions = Object.keys(linkIconMap).map(key => ({\n  label: key,\n  value: key\n}));\nexport const LinkSettingsEdit = ({\n  editLinkIdx,\n  dashboard,\n  onGoBack\n}) => {\n  const [linkSettings, setLinkSettings] = useState(editLinkIdx !== null ? dashboard.links[editLinkIdx] : newLink);\n\n  const onUpdate = link => {\n    const links = [...dashboard.links];\n    links.splice(editLinkIdx, 1, link);\n    dashboard.links = links;\n    setLinkSettings(link);\n  };\n\n  const onTagsChange = tags => {\n    onUpdate(Object.assign({}, linkSettings, {\n      tags: tags\n    }));\n  };\n\n  const onTypeChange = selectedItem => {\n    const update = Object.assign({}, linkSettings, {\n      type: selectedItem.value\n    }); // clear props that are no longe revant for this type\n\n    if (update.type === 'dashboards') {\n      update.url = '';\n      update.tooltip = '';\n    } else {\n      update.tags = [];\n    }\n\n    onUpdate(update);\n  };\n\n  const onIconChange = selectedItem => {\n    onUpdate(Object.assign({}, linkSettings, {\n      icon: selectedItem.value\n    }));\n  };\n\n  const onChange = ev => {\n    const target = ev.currentTarget;\n    onUpdate(Object.assign({}, linkSettings, {\n      [target.name]: target.type === 'checkbox' ? target.checked : target.value\n    }));\n  };\n\n  const isNew = linkSettings.title === newLink.title;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      maxWidth: '600px'\n    },\n    children: [/*#__PURE__*/_jsx(Field, {\n      label: \"Title\",\n      children: /*#__PURE__*/_jsx(Input, {\n        name: \"title\",\n        id: \"title\",\n        value: linkSettings.title,\n        onChange: onChange,\n        autoFocus: isNew\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: \"Type\",\n      children: /*#__PURE__*/_jsx(Select, {\n        inputId: \"link-type-input\",\n        value: linkSettings.type,\n        options: linkTypeOptions,\n        onChange: onTypeChange\n      })\n    }), linkSettings.type === 'dashboards' && /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(Field, {\n        label: \"With tags\",\n        children: /*#__PURE__*/_jsx(TagsInput, {\n          tags: linkSettings.tags,\n          placeholder: \"add tags\",\n          onChange: onTagsChange\n        })\n      })\n    }), linkSettings.type === 'link' && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"URL\",\n        children: /*#__PURE__*/_jsx(Input, {\n          name: \"url\",\n          value: linkSettings.url,\n          onChange: onChange\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        label: \"Tooltip\",\n        children: /*#__PURE__*/_jsx(Input, {\n          name: \"tooltip\",\n          value: linkSettings.tooltip,\n          onChange: onChange,\n          placeholder: \"Open dashboard\"\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        label: \"Icon\",\n        children: /*#__PURE__*/_jsx(Select, {\n          value: linkSettings.icon,\n          options: linkIconOptions,\n          onChange: onIconChange\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(CollapsableSection, {\n      label: \"Options\",\n      isOpen: true,\n      children: [linkSettings.type === 'dashboards' && /*#__PURE__*/_jsx(Field, {\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Show as dropdown\",\n          name: \"asDropdown\",\n          value: linkSettings.asDropdown,\n          onChange: onChange\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Include current time range\",\n          name: \"keepTime\",\n          value: linkSettings.keepTime,\n          onChange: onChange\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Include current template variable values\",\n          name: \"includeVars\",\n          value: linkSettings.includeVars,\n          onChange: onChange\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Open link in new tab\",\n          name: \"targetBlank\",\n          value: linkSettings.targetBlank,\n          onChange: onChange\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Button, {\n      onClick: onGoBack,\n      children: \"Apply\"\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","CollapsableSection","TagsInput","Select","Field","Input","Checkbox","Button","newLink","icon","title","tooltip","type","url","asDropdown","tags","targetBlank","keepTime","includeVars","linkTypeOptions","value","label","linkIconMap","dashboard","question","info","bolt","doc","cloud","linkIconOptions","Object","keys","map","key","LinkSettingsEdit","editLinkIdx","onGoBack","linkSettings","setLinkSettings","links","onUpdate","link","splice","onTagsChange","onTypeChange","selectedItem","update","onIconChange","onChange","ev","target","currentTarget","name","checked","isNew","maxWidth"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/LinksSettings/LinkSettingsEdit.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { CollapsableSection, TagsInput, Select, Field, Input, Checkbox, Button } from '@grafana/ui';\n\nimport { DashboardLink, DashboardModel } from '../../state/DashboardModel';\n\nexport const newLink = {\n  icon: 'external link',\n  title: 'New link',\n  tooltip: '',\n  type: 'dashboards',\n  url: '',\n  asDropdown: false,\n  tags: [],\n  targetBlank: false,\n  keepTime: false,\n  includeVars: false,\n} as DashboardLink;\n\nconst linkTypeOptions = [\n  { value: 'dashboards', label: 'Dashboards' },\n  { value: 'link', label: 'Link' },\n];\n\nexport const linkIconMap: { [key: string]: string } = {\n  'external link': 'external-link-alt',\n  dashboard: 'apps',\n  question: 'question-circle',\n  info: 'info-circle',\n  bolt: 'bolt',\n  doc: 'file-alt',\n  cloud: 'cloud',\n};\n\nconst linkIconOptions = Object.keys(linkIconMap).map((key) => ({ label: key, value: key }));\n\ntype LinkSettingsEditProps = {\n  editLinkIdx: number;\n  dashboard: DashboardModel;\n  onGoBack: () => void;\n};\n\nexport const LinkSettingsEdit: React.FC<LinkSettingsEditProps> = ({ editLinkIdx, dashboard, onGoBack }) => {\n  const [linkSettings, setLinkSettings] = useState(editLinkIdx !== null ? dashboard.links[editLinkIdx] : newLink);\n\n  const onUpdate = (link: DashboardLink) => {\n    const links = [...dashboard.links];\n    links.splice(editLinkIdx, 1, link);\n    dashboard.links = links;\n    setLinkSettings(link);\n  };\n\n  const onTagsChange = (tags: any[]) => {\n    onUpdate({ ...linkSettings, tags: tags });\n  };\n\n  const onTypeChange = (selectedItem: SelectableValue) => {\n    const update = { ...linkSettings, type: selectedItem.value };\n\n    // clear props that are no longe revant for this type\n    if (update.type === 'dashboards') {\n      update.url = '';\n      update.tooltip = '';\n    } else {\n      update.tags = [];\n    }\n\n    onUpdate(update);\n  };\n\n  const onIconChange = (selectedItem: SelectableValue) => {\n    onUpdate({ ...linkSettings, icon: selectedItem.value });\n  };\n\n  const onChange = (ev: React.FocusEvent<HTMLInputElement>) => {\n    const target = ev.currentTarget;\n    onUpdate({\n      ...linkSettings,\n      [target.name]: target.type === 'checkbox' ? target.checked : target.value,\n    });\n  };\n\n  const isNew = linkSettings.title === newLink.title;\n\n  return (\n    <div style={{ maxWidth: '600px' }}>\n      <Field label=\"Title\">\n        <Input name=\"title\" id=\"title\" value={linkSettings.title} onChange={onChange} autoFocus={isNew} />\n      </Field>\n      <Field label=\"Type\">\n        <Select inputId=\"link-type-input\" value={linkSettings.type} options={linkTypeOptions} onChange={onTypeChange} />\n      </Field>\n      {linkSettings.type === 'dashboards' && (\n        <>\n          <Field label=\"With tags\">\n            <TagsInput tags={linkSettings.tags} placeholder=\"add tags\" onChange={onTagsChange} />\n          </Field>\n        </>\n      )}\n      {linkSettings.type === 'link' && (\n        <>\n          <Field label=\"URL\">\n            <Input name=\"url\" value={linkSettings.url} onChange={onChange} />\n          </Field>\n          <Field label=\"Tooltip\">\n            <Input name=\"tooltip\" value={linkSettings.tooltip} onChange={onChange} placeholder=\"Open dashboard\" />\n          </Field>\n          <Field label=\"Icon\">\n            <Select value={linkSettings.icon} options={linkIconOptions} onChange={onIconChange} />\n          </Field>\n        </>\n      )}\n      <CollapsableSection label=\"Options\" isOpen={true}>\n        {linkSettings.type === 'dashboards' && (\n          <Field>\n            <Checkbox label=\"Show as dropdown\" name=\"asDropdown\" value={linkSettings.asDropdown} onChange={onChange} />\n          </Field>\n        )}\n        <Field>\n          <Checkbox\n            label=\"Include current time range\"\n            name=\"keepTime\"\n            value={linkSettings.keepTime}\n            onChange={onChange}\n          />\n        </Field>\n        <Field>\n          <Checkbox\n            label=\"Include current template variable values\"\n            name=\"includeVars\"\n            value={linkSettings.includeVars}\n            onChange={onChange}\n          />\n        </Field>\n        <Field>\n          <Checkbox\n            label=\"Open link in new tab\"\n            name=\"targetBlank\"\n            value={linkSettings.targetBlank}\n            onChange={onChange}\n          />\n        </Field>\n      </CollapsableSection>\n      <Button onClick={onGoBack}>Apply</Button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}