{"ast":null,"code":"import { PluginSignatureStatus, dateTimeParse, PluginErrorCode } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nexport function mergeLocalsAndRemotes(local = [], remote = [], errors) {\n  const catalogPlugins = [];\n  const errorByPluginId = groupErrorsByPluginId(errors); // add locals\n\n  local.forEach(l => {\n    const remotePlugin = remote.find(r => r.slug === l.id);\n    const error = errorByPluginId[l.id];\n\n    if (!remotePlugin) {\n      catalogPlugins.push(mergeLocalAndRemote(l, undefined, error));\n    }\n  }); // add remote\n\n  remote.forEach(r => {\n    const localPlugin = local.find(l => l.id === r.slug);\n    const error = errorByPluginId[r.slug];\n    catalogPlugins.push(mergeLocalAndRemote(localPlugin, r, error));\n  });\n  return catalogPlugins;\n}\nexport function mergeLocalAndRemote(local, remote, error) {\n  if (!local && remote) {\n    return mapRemoteToCatalog(remote, error);\n  }\n\n  if (local && !remote) {\n    return mapLocalToCatalog(local, error);\n  }\n\n  return mapToCatalogPlugin(local, remote, error);\n}\nexport function mapRemoteToCatalog(plugin, error) {\n  const {\n    name,\n    slug: id,\n    description,\n    version,\n    orgName,\n    popularity,\n    downloads,\n    typeCode,\n    updatedAt,\n    createdAt: publishedAt,\n    status\n  } = plugin;\n  const isDisabled = !!error;\n  return {\n    description,\n    downloads,\n    id,\n    info: {\n      logos: {\n        small: `https://grafana.com/api/plugins/${id}/versions/${version}/logos/small`,\n        large: `https://grafana.com/api/plugins/${id}/versions/${version}/logos/large`\n      }\n    },\n    name,\n    orgName,\n    popularity,\n    publishedAt,\n    signature: getPluginSignature({\n      remote: plugin,\n      error\n    }),\n    updatedAt,\n    hasUpdate: false,\n    isPublished: true,\n    isInstalled: isDisabled,\n    isDisabled: isDisabled,\n    isCore: plugin.internal,\n    isDev: false,\n    isEnterprise: status === 'enterprise',\n    type: typeCode,\n    error: error === null || error === void 0 ? void 0 : error.errorCode\n  };\n}\nexport function mapLocalToCatalog(plugin, error) {\n  const {\n    name,\n    info: {\n      description,\n      version,\n      logos,\n      updated,\n      author\n    },\n    id,\n    dev,\n    type,\n    signature,\n    signatureOrg,\n    signatureType,\n    hasUpdate\n  } = plugin;\n  return {\n    description,\n    downloads: 0,\n    id,\n    info: {\n      logos\n    },\n    name,\n    orgName: author.name,\n    popularity: 0,\n    publishedAt: '',\n    signature: getPluginSignature({\n      local: plugin,\n      error\n    }),\n    signatureOrg,\n    signatureType,\n    updatedAt: updated,\n    installedVersion: version,\n    hasUpdate,\n    isInstalled: true,\n    isDisabled: !!error,\n    isCore: signature === 'internal',\n    isPublished: false,\n    isDev: Boolean(dev),\n    isEnterprise: false,\n    type,\n    error: error === null || error === void 0 ? void 0 : error.errorCode\n  };\n} // TODO: change the signature by removing the optionals for local and remote.\n\nexport function mapToCatalogPlugin(local, remote, error) {\n  const installedVersion = local === null || local === void 0 ? void 0 : local.info.version;\n  const id = (remote === null || remote === void 0 ? void 0 : remote.slug) || (local === null || local === void 0 ? void 0 : local.id) || '';\n  const type = (local === null || local === void 0 ? void 0 : local.type) || (remote === null || remote === void 0 ? void 0 : remote.typeCode);\n  const isDisabled = !!error;\n  let logos = {\n    small: `/public/img/icn-${type}.svg`,\n    large: `/public/img/icn-${type}.svg`\n  };\n\n  if (remote) {\n    logos = {\n      small: `https://grafana.com/api/plugins/${id}/versions/${remote.version}/logos/small`,\n      large: `https://grafana.com/api/plugins/${id}/versions/${remote.version}/logos/large`\n    };\n  } else if (local && local.info.logos) {\n    logos = local.info.logos;\n  }\n\n  return {\n    description: (local === null || local === void 0 ? void 0 : local.info.description) || (remote === null || remote === void 0 ? void 0 : remote.description) || '',\n    downloads: (remote === null || remote === void 0 ? void 0 : remote.downloads) || 0,\n    hasUpdate: (local === null || local === void 0 ? void 0 : local.hasUpdate) || false,\n    id,\n    info: {\n      logos\n    },\n    isCore: Boolean((remote === null || remote === void 0 ? void 0 : remote.internal) || (local === null || local === void 0 ? void 0 : local.signature) === PluginSignatureStatus.internal),\n    isDev: Boolean(local === null || local === void 0 ? void 0 : local.dev),\n    isEnterprise: (remote === null || remote === void 0 ? void 0 : remote.status) === 'enterprise',\n    isInstalled: Boolean(local) || isDisabled,\n    isDisabled: isDisabled,\n    isPublished: true,\n    // TODO<check if we would like to keep preferring the remote version>\n    name: (remote === null || remote === void 0 ? void 0 : remote.name) || (local === null || local === void 0 ? void 0 : local.name) || '',\n    // TODO<check if we would like to keep preferring the remote version>\n    orgName: (remote === null || remote === void 0 ? void 0 : remote.orgName) || (local === null || local === void 0 ? void 0 : local.info.author.name) || '',\n    popularity: (remote === null || remote === void 0 ? void 0 : remote.popularity) || 0,\n    publishedAt: (remote === null || remote === void 0 ? void 0 : remote.createdAt) || '',\n    type,\n    signature: getPluginSignature({\n      local,\n      remote,\n      error\n    }),\n    signatureOrg: (local === null || local === void 0 ? void 0 : local.signatureOrg) || (remote === null || remote === void 0 ? void 0 : remote.versionSignedByOrgName),\n    signatureType: (local === null || local === void 0 ? void 0 : local.signatureType) || (remote === null || remote === void 0 ? void 0 : remote.versionSignatureType) || (remote === null || remote === void 0 ? void 0 : remote.signatureType) || undefined,\n    // TODO<check if we would like to keep preferring the remote version>\n    updatedAt: (remote === null || remote === void 0 ? void 0 : remote.updatedAt) || (local === null || local === void 0 ? void 0 : local.info.updated) || '',\n    installedVersion,\n    error: error === null || error === void 0 ? void 0 : error.errorCode\n  };\n}\nexport const getExternalManageLink = pluginId => `${config.pluginCatalogURL}${pluginId}`;\nexport let Sorters;\n\n(function (Sorters) {\n  Sorters[\"nameAsc\"] = \"nameAsc\";\n  Sorters[\"nameDesc\"] = \"nameDesc\";\n  Sorters[\"updated\"] = \"updated\";\n  Sorters[\"published\"] = \"published\";\n  Sorters[\"downloads\"] = \"downloads\";\n})(Sorters || (Sorters = {}));\n\nexport const sortPlugins = (plugins, sortBy) => {\n  const sorters = {\n    nameAsc: (a, b) => a.name.localeCompare(b.name),\n    nameDesc: (a, b) => b.name.localeCompare(a.name),\n    updated: (a, b) => dateTimeParse(b.updatedAt).valueOf() - dateTimeParse(a.updatedAt).valueOf(),\n    published: (a, b) => dateTimeParse(b.publishedAt).valueOf() - dateTimeParse(a.publishedAt).valueOf(),\n    downloads: (a, b) => b.downloads - a.downloads\n  };\n\n  if (sorters[sortBy]) {\n    return plugins.sort(sorters[sortBy]);\n  }\n\n  return plugins;\n};\n\nfunction groupErrorsByPluginId(errors = []) {\n  return errors.reduce((byId, error) => {\n    byId[error.pluginId] = error;\n    return byId;\n  }, {});\n}\n\nfunction getPluginSignature(options) {\n  const {\n    error,\n    local,\n    remote\n  } = options;\n\n  if (error) {\n    switch (error.errorCode) {\n      case PluginErrorCode.invalidSignature:\n        return PluginSignatureStatus.invalid;\n\n      case PluginErrorCode.missingSignature:\n        return PluginSignatureStatus.missing;\n\n      case PluginErrorCode.modifiedSignature:\n        return PluginSignatureStatus.modified;\n    }\n  }\n\n  if (local !== null && local !== void 0 && local.signature) {\n    return local.signature;\n  }\n\n  if (remote !== null && remote !== void 0 && remote.signatureType || remote !== null && remote !== void 0 && remote.versionSignatureType) {\n    return PluginSignatureStatus.valid;\n  }\n\n  return PluginSignatureStatus.missing;\n} // Updates the core Grafana config to have the correct list available panels\n\n\nexport const updatePanels = () => getBackendSrv().get('/api/frontend/settings').then(settings => {\n  config.panels = settings.panels;\n});\nexport function getLatestCompatibleVersion(versions) {\n  if (!versions) {\n    return;\n  }\n\n  const [latest] = versions.filter(v => Boolean(v.isCompatible));\n  return latest;\n}\nexport const isInstallControlsEnabled = () => config.pluginAdminEnabled;\nexport const isLocalPluginVisible = p => isPluginVisible(p.id);\nexport const isRemotePluginVisible = p => isPluginVisible(p.slug);\n\nfunction isPluginVisible(id) {\n  const {\n    pluginCatalogHiddenPlugins\n  } = config;\n  return !pluginCatalogHiddenPlugins.includes(id);\n}\n\nexport function isLocalCorePlugin(local) {\n  return Boolean((local === null || local === void 0 ? void 0 : local.signature) === 'internal');\n}","map":{"version":3,"names":["PluginSignatureStatus","dateTimeParse","PluginErrorCode","config","getBackendSrv","mergeLocalsAndRemotes","local","remote","errors","catalogPlugins","errorByPluginId","groupErrorsByPluginId","forEach","l","remotePlugin","find","r","slug","id","error","push","mergeLocalAndRemote","undefined","localPlugin","mapRemoteToCatalog","mapLocalToCatalog","mapToCatalogPlugin","plugin","name","description","version","orgName","popularity","downloads","typeCode","updatedAt","createdAt","publishedAt","status","isDisabled","info","logos","small","large","signature","getPluginSignature","hasUpdate","isPublished","isInstalled","isCore","internal","isDev","isEnterprise","type","errorCode","updated","author","dev","signatureOrg","signatureType","installedVersion","Boolean","versionSignedByOrgName","versionSignatureType","getExternalManageLink","pluginId","pluginCatalogURL","Sorters","sortPlugins","plugins","sortBy","sorters","nameAsc","a","b","localeCompare","nameDesc","valueOf","published","sort","reduce","byId","options","invalidSignature","invalid","missingSignature","missing","modifiedSignature","modified","valid","updatePanels","get","then","settings","panels","getLatestCompatibleVersion","versions","latest","filter","v","isCompatible","isInstallControlsEnabled","pluginAdminEnabled","isLocalPluginVisible","p","isPluginVisible","isRemotePluginVisible","pluginCatalogHiddenPlugins","includes","isLocalCorePlugin"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/helpers.ts"],"sourcesContent":["import { PluginSignatureStatus, dateTimeParse, PluginError, PluginErrorCode } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Settings } from 'app/core/config';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\n\nimport { CatalogPlugin, LocalPlugin, RemotePlugin, Version } from './types';\n\nexport function mergeLocalsAndRemotes(\n  local: LocalPlugin[] = [],\n  remote: RemotePlugin[] = [],\n  errors?: PluginError[]\n): CatalogPlugin[] {\n  const catalogPlugins: CatalogPlugin[] = [];\n  const errorByPluginId = groupErrorsByPluginId(errors);\n\n  // add locals\n  local.forEach((l) => {\n    const remotePlugin = remote.find((r) => r.slug === l.id);\n    const error = errorByPluginId[l.id];\n\n    if (!remotePlugin) {\n      catalogPlugins.push(mergeLocalAndRemote(l, undefined, error));\n    }\n  });\n\n  // add remote\n  remote.forEach((r) => {\n    const localPlugin = local.find((l) => l.id === r.slug);\n    const error = errorByPluginId[r.slug];\n\n    catalogPlugins.push(mergeLocalAndRemote(localPlugin, r, error));\n  });\n\n  return catalogPlugins;\n}\n\nexport function mergeLocalAndRemote(local?: LocalPlugin, remote?: RemotePlugin, error?: PluginError): CatalogPlugin {\n  if (!local && remote) {\n    return mapRemoteToCatalog(remote, error);\n  }\n\n  if (local && !remote) {\n    return mapLocalToCatalog(local, error);\n  }\n\n  return mapToCatalogPlugin(local, remote, error);\n}\n\nexport function mapRemoteToCatalog(plugin: RemotePlugin, error?: PluginError): CatalogPlugin {\n  const {\n    name,\n    slug: id,\n    description,\n    version,\n    orgName,\n    popularity,\n    downloads,\n    typeCode,\n    updatedAt,\n    createdAt: publishedAt,\n    status,\n  } = plugin;\n\n  const isDisabled = !!error;\n  return {\n    description,\n    downloads,\n    id,\n    info: {\n      logos: {\n        small: `https://grafana.com/api/plugins/${id}/versions/${version}/logos/small`,\n        large: `https://grafana.com/api/plugins/${id}/versions/${version}/logos/large`,\n      },\n    },\n    name,\n    orgName,\n    popularity,\n    publishedAt,\n    signature: getPluginSignature({ remote: plugin, error }),\n    updatedAt,\n    hasUpdate: false,\n    isPublished: true,\n    isInstalled: isDisabled,\n    isDisabled: isDisabled,\n    isCore: plugin.internal,\n    isDev: false,\n    isEnterprise: status === 'enterprise',\n    type: typeCode,\n    error: error?.errorCode,\n  };\n}\n\nexport function mapLocalToCatalog(plugin: LocalPlugin, error?: PluginError): CatalogPlugin {\n  const {\n    name,\n    info: { description, version, logos, updated, author },\n    id,\n    dev,\n    type,\n    signature,\n    signatureOrg,\n    signatureType,\n    hasUpdate,\n  } = plugin;\n\n  return {\n    description,\n    downloads: 0,\n    id,\n    info: { logos },\n    name,\n    orgName: author.name,\n    popularity: 0,\n    publishedAt: '',\n    signature: getPluginSignature({ local: plugin, error }),\n    signatureOrg,\n    signatureType,\n    updatedAt: updated,\n    installedVersion: version,\n    hasUpdate,\n    isInstalled: true,\n    isDisabled: !!error,\n    isCore: signature === 'internal',\n    isPublished: false,\n    isDev: Boolean(dev),\n    isEnterprise: false,\n    type,\n    error: error?.errorCode,\n  };\n}\n\n// TODO: change the signature by removing the optionals for local and remote.\nexport function mapToCatalogPlugin(local?: LocalPlugin, remote?: RemotePlugin, error?: PluginError): CatalogPlugin {\n  const installedVersion = local?.info.version;\n  const id = remote?.slug || local?.id || '';\n  const type = local?.type || remote?.typeCode;\n  const isDisabled = !!error;\n\n  let logos = {\n    small: `/public/img/icn-${type}.svg`,\n    large: `/public/img/icn-${type}.svg`,\n  };\n\n  if (remote) {\n    logos = {\n      small: `https://grafana.com/api/plugins/${id}/versions/${remote.version}/logos/small`,\n      large: `https://grafana.com/api/plugins/${id}/versions/${remote.version}/logos/large`,\n    };\n  } else if (local && local.info.logos) {\n    logos = local.info.logos;\n  }\n\n  return {\n    description: local?.info.description || remote?.description || '',\n    downloads: remote?.downloads || 0,\n    hasUpdate: local?.hasUpdate || false,\n    id,\n    info: {\n      logos,\n    },\n    isCore: Boolean(remote?.internal || local?.signature === PluginSignatureStatus.internal),\n    isDev: Boolean(local?.dev),\n    isEnterprise: remote?.status === 'enterprise',\n    isInstalled: Boolean(local) || isDisabled,\n    isDisabled: isDisabled,\n    isPublished: true,\n    // TODO<check if we would like to keep preferring the remote version>\n    name: remote?.name || local?.name || '',\n    // TODO<check if we would like to keep preferring the remote version>\n    orgName: remote?.orgName || local?.info.author.name || '',\n    popularity: remote?.popularity || 0,\n    publishedAt: remote?.createdAt || '',\n    type,\n    signature: getPluginSignature({ local, remote, error }),\n    signatureOrg: local?.signatureOrg || remote?.versionSignedByOrgName,\n    signatureType: local?.signatureType || remote?.versionSignatureType || remote?.signatureType || undefined,\n    // TODO<check if we would like to keep preferring the remote version>\n    updatedAt: remote?.updatedAt || local?.info.updated || '',\n    installedVersion,\n    error: error?.errorCode,\n  };\n}\n\nexport const getExternalManageLink = (pluginId: string) => `${config.pluginCatalogURL}${pluginId}`;\n\nexport enum Sorters {\n  nameAsc = 'nameAsc',\n  nameDesc = 'nameDesc',\n  updated = 'updated',\n  published = 'published',\n  downloads = 'downloads',\n}\n\nexport const sortPlugins = (plugins: CatalogPlugin[], sortBy: Sorters) => {\n  const sorters: { [name: string]: (a: CatalogPlugin, b: CatalogPlugin) => number } = {\n    nameAsc: (a: CatalogPlugin, b: CatalogPlugin) => a.name.localeCompare(b.name),\n    nameDesc: (a: CatalogPlugin, b: CatalogPlugin) => b.name.localeCompare(a.name),\n    updated: (a: CatalogPlugin, b: CatalogPlugin) =>\n      dateTimeParse(b.updatedAt).valueOf() - dateTimeParse(a.updatedAt).valueOf(),\n    published: (a: CatalogPlugin, b: CatalogPlugin) =>\n      dateTimeParse(b.publishedAt).valueOf() - dateTimeParse(a.publishedAt).valueOf(),\n    downloads: (a: CatalogPlugin, b: CatalogPlugin) => b.downloads - a.downloads,\n  };\n\n  if (sorters[sortBy]) {\n    return plugins.sort(sorters[sortBy]);\n  }\n\n  return plugins;\n};\n\nfunction groupErrorsByPluginId(errors: PluginError[] = []): Record<string, PluginError | undefined> {\n  return errors.reduce((byId, error) => {\n    byId[error.pluginId] = error;\n    return byId;\n  }, {} as Record<string, PluginError | undefined>);\n}\n\nfunction getPluginSignature(options: {\n  local?: LocalPlugin;\n  remote?: RemotePlugin;\n  error?: PluginError;\n}): PluginSignatureStatus {\n  const { error, local, remote } = options;\n\n  if (error) {\n    switch (error.errorCode) {\n      case PluginErrorCode.invalidSignature:\n        return PluginSignatureStatus.invalid;\n      case PluginErrorCode.missingSignature:\n        return PluginSignatureStatus.missing;\n      case PluginErrorCode.modifiedSignature:\n        return PluginSignatureStatus.modified;\n    }\n  }\n\n  if (local?.signature) {\n    return local.signature;\n  }\n\n  if (remote?.signatureType || remote?.versionSignatureType) {\n    return PluginSignatureStatus.valid;\n  }\n\n  return PluginSignatureStatus.missing;\n}\n\n// Updates the core Grafana config to have the correct list available panels\nexport const updatePanels = () =>\n  getBackendSrv()\n    .get('/api/frontend/settings')\n    .then((settings: Settings) => {\n      config.panels = settings.panels;\n    });\n\nexport function getLatestCompatibleVersion(versions: Version[] | undefined): Version | undefined {\n  if (!versions) {\n    return;\n  }\n  const [latest] = versions.filter((v) => Boolean(v.isCompatible));\n\n  return latest;\n}\n\nexport const isInstallControlsEnabled = () => config.pluginAdminEnabled;\n\nexport const isLocalPluginVisible = (p: LocalPlugin) => isPluginVisible(p.id);\n\nexport const isRemotePluginVisible = (p: RemotePlugin) => isPluginVisible(p.slug);\n\nfunction isPluginVisible(id: string) {\n  const { pluginCatalogHiddenPlugins }: { pluginCatalogHiddenPlugins: string[] } = config;\n\n  return !pluginCatalogHiddenPlugins.includes(id);\n}\n\nexport function isLocalCorePlugin(local?: LocalPlugin): boolean {\n  return Boolean(local?.signature === 'internal');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}