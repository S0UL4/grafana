{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { FALLBACK_COLOR, FieldType } from '@grafana/data';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport { PanelContextRoot, GraphNG, VizLayout, VizLegend } from '@grafana/ui';\nimport { preparePlotConfigBuilder } from './utils';\n/**\n * @alpha\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propsToDiff = ['rowHeight', 'colWidth', 'showValue', 'mergeValues', 'alignValue'];\nexport class TimelineChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"panelContext\", {});\n\n    _defineProperty(this, \"getValueColor\", (frameIdx, fieldIdx, value) => {\n      const field = this.props.frames[frameIdx].fields[fieldIdx];\n\n      if (field.display) {\n        const disp = field.display(value); // will apply color modes\n\n        if (disp.color) {\n          return disp.color;\n        }\n      }\n\n      return FALLBACK_COLOR;\n    });\n\n    _defineProperty(this, \"prepConfig\", (alignedFrame, allFrames, getTimeRange) => {\n      this.panelContext = this.context;\n      const {\n        eventBus,\n        sync\n      } = this.panelContext;\n      return preparePlotConfigBuilder(Object.assign({\n        frame: alignedFrame,\n        getTimeRange,\n        eventBus,\n        sync,\n        allFrames: this.props.frames\n      }, this.props, {\n        // When there is only one row, use the full space\n        rowHeight: alignedFrame.fields.length > 2 ? this.props.rowHeight : 1,\n        getValueColor: this.getValueColor\n      }));\n    });\n\n    _defineProperty(this, \"renderLegend\", config => {\n      const {\n        legend,\n        legendItems\n      } = this.props;\n\n      if (!config || !legendItems || !legend || legend.displayMode === LegendDisplayMode.Hidden) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsx(VizLayout.Legend, {\n        placement: legend.placement,\n        children: /*#__PURE__*/_jsx(VizLegend, {\n          placement: legend.placement,\n          items: legendItems,\n          displayMode: legend.displayMode,\n          readonly: true\n        })\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(GraphNG, Object.assign({}, this.props, {\n      fields: {\n        x: f => f.type === FieldType.time,\n        y: f => f.type === FieldType.number || f.type === FieldType.boolean || f.type === FieldType.string\n      },\n      prepConfig: this.prepConfig,\n      propsToDiff: propsToDiff,\n      renderLegend: this.renderLegend\n    }));\n  }\n\n}\n\n_defineProperty(TimelineChart, \"contextType\", PanelContextRoot);","map":{"version":3,"names":["React","FALLBACK_COLOR","FieldType","LegendDisplayMode","PanelContextRoot","GraphNG","VizLayout","VizLegend","preparePlotConfigBuilder","propsToDiff","TimelineChart","Component","frameIdx","fieldIdx","value","field","props","frames","fields","display","disp","color","alignedFrame","allFrames","getTimeRange","panelContext","context","eventBus","sync","frame","rowHeight","length","getValueColor","config","legend","legendItems","displayMode","Hidden","placement","render","x","f","type","time","y","number","boolean","string","prepConfig","renderLegend"],"sources":["/home/soula/grafana/public/app/plugins/panel/state-timeline/TimelineChart.tsx"],"sourcesContent":["import React from 'react';\n\nimport { DataFrame, FALLBACK_COLOR, FieldType, TimeRange } from '@grafana/data';\nimport { LegendDisplayMode, VisibilityMode } from '@grafana/schema';\nimport {\n  PanelContext,\n  PanelContextRoot,\n  GraphNG,\n  GraphNGProps,\n  UPlotConfigBuilder,\n  VizLayout,\n  VizLegend,\n  VizLegendItem,\n} from '@grafana/ui';\n\nimport { TimelineMode, TimelineOptions, TimelineValueAlignment } from './types';\nimport { preparePlotConfigBuilder } from './utils';\n\n/**\n * @alpha\n */\nexport interface TimelineProps\n  extends TimelineOptions,\n    Omit<GraphNGProps, 'prepConfig' | 'propsToDiff' | 'renderLegend'> {\n  mode: TimelineMode;\n  rowHeight: number;\n  showValue: VisibilityMode;\n  alignValue?: TimelineValueAlignment;\n  colWidth?: number;\n  legendItems?: VizLegendItem[];\n}\n\nconst propsToDiff = ['rowHeight', 'colWidth', 'showValue', 'mergeValues', 'alignValue'];\n\nexport class TimelineChart extends React.Component<TimelineProps> {\n  static contextType = PanelContextRoot;\n  panelContext: PanelContext = {} as PanelContext;\n\n  getValueColor = (frameIdx: number, fieldIdx: number, value: any) => {\n    const field = this.props.frames[frameIdx].fields[fieldIdx];\n\n    if (field.display) {\n      const disp = field.display(value); // will apply color modes\n      if (disp.color) {\n        return disp.color;\n      }\n    }\n\n    return FALLBACK_COLOR;\n  };\n\n  prepConfig = (alignedFrame: DataFrame, allFrames: DataFrame[], getTimeRange: () => TimeRange) => {\n    this.panelContext = this.context as PanelContext;\n    const { eventBus, sync } = this.panelContext;\n\n    return preparePlotConfigBuilder({\n      frame: alignedFrame,\n      getTimeRange,\n      eventBus,\n      sync,\n      allFrames: this.props.frames,\n      ...this.props,\n\n      // When there is only one row, use the full space\n      rowHeight: alignedFrame.fields.length > 2 ? this.props.rowHeight : 1,\n      getValueColor: this.getValueColor,\n    });\n  };\n\n  renderLegend = (config: UPlotConfigBuilder) => {\n    const { legend, legendItems } = this.props;\n\n    if (!config || !legendItems || !legend || legend.displayMode === LegendDisplayMode.Hidden) {\n      return null;\n    }\n\n    return (\n      <VizLayout.Legend placement={legend.placement}>\n        <VizLegend placement={legend.placement} items={legendItems} displayMode={legend.displayMode} readonly />\n      </VizLayout.Legend>\n    );\n  };\n\n  render() {\n    return (\n      <GraphNG\n        {...this.props}\n        fields={{\n          x: (f) => f.type === FieldType.time,\n          y: (f) => f.type === FieldType.number || f.type === FieldType.boolean || f.type === FieldType.string,\n        }}\n        prepConfig={this.prepConfig}\n        propsToDiff={propsToDiff}\n        renderLegend={this.renderLegend}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}