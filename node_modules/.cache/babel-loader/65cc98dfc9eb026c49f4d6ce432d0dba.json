{"ast":null,"code":"var _div, _div2;\n\nimport { css } from '@emotion/css';\nimport React, { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { urlUtil } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, ClipboardButton, ConfirmModal, HorizontalGroup, LinkButton, useStyles2 } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nimport { useIsRuleEditable } from '../../hooks/useIsRuleEditable';\nimport { useStateHistoryModal } from '../../hooks/useStateHistoryModal';\nimport { deleteRuleAction } from '../../state/actions';\nimport { getAlertmanagerByUid } from '../../utils/alertmanager';\nimport { Annotation } from '../../utils/constants';\nimport { getRulesSourceName, isCloudRulesSource, isGrafanaRulesSource } from '../../utils/datasource';\nimport { createExploreLink, createViewLink, makeRuleBasedSilenceLink } from '../../utils/misc';\nimport * as ruleId from '../../utils/rule-id';\nimport { isFederatedRuleGroup, isGrafanaRulerRule } from '../../utils/rules';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const RuleDetailsActionButtons = ({\n  rule,\n  rulesSource\n}) => {\n  var _rule$rulerRule$grafa, _getAlertmanagerByUid;\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const notifyApp = useAppNotification();\n  const style = useStyles2(getStyles);\n  const {\n    namespace,\n    group,\n    rulerRule\n  } = rule;\n  const [ruleToDelete, setRuleToDelete] = useState();\n  const alertId = isGrafanaRulerRule(rule.rulerRule) ? (_rule$rulerRule$grafa = rule.rulerRule.grafana_alert.id) !== null && _rule$rulerRule$grafa !== void 0 ? _rule$rulerRule$grafa : '' : '';\n  const {\n    StateHistoryModal,\n    showStateHistoryModal\n  } = useStateHistoryModal(alertId);\n  const alertmanagerSourceName = isGrafanaRulesSource(rulesSource) ? rulesSource : (_getAlertmanagerByUid = getAlertmanagerByUid(rulesSource.jsonData.alertmanagerUid)) === null || _getAlertmanagerByUid === void 0 ? void 0 : _getAlertmanagerByUid.name;\n  const rulesSourceName = getRulesSourceName(rulesSource);\n  const hasExplorePermission = contextSrv.hasPermission(AccessControlAction.DataSourcesExplore);\n  const isProvisioned = isGrafanaRulerRule(rule.rulerRule) && Boolean(rule.rulerRule.grafana_alert.provenance);\n  const leftButtons = [];\n  const rightButtons = [];\n  const isFederated = isFederatedRuleGroup(group);\n  const {\n    isEditable,\n    isRemovable\n  } = useIsRuleEditable(rulesSourceName, rulerRule);\n  const returnTo = location.pathname + location.search;\n  const isViewMode = inViewMode(location.pathname);\n\n  const deleteRule = () => {\n    if (ruleToDelete && ruleToDelete.rulerRule) {\n      const identifier = ruleId.fromRulerRule(getRulesSourceName(ruleToDelete.namespace.rulesSource), ruleToDelete.namespace.name, ruleToDelete.group.name, ruleToDelete.rulerRule);\n      dispatch(deleteRuleAction(identifier, {\n        navigateTo: isViewMode ? '/alerting/list' : undefined\n      }));\n      setRuleToDelete(undefined);\n    }\n  };\n\n  const buildShareUrl = () => {\n    if (isCloudRulesSource(rulesSource)) {\n      const {\n        appUrl,\n        appSubUrl\n      } = config;\n      const baseUrl = appSubUrl !== '' ? `${appUrl}${appSubUrl}/` : config.appUrl;\n      const ruleUrl = `${encodeURIComponent(rulesSource.name)}/${encodeURIComponent(rule.name)}`;\n      return `${baseUrl}alerting/${ruleUrl}/find`;\n    }\n\n    return window.location.href.split('?')[0];\n  }; // explore does not support grafana rule queries atm\n  // neither do \"federated rules\"\n\n\n  if (isCloudRulesSource(rulesSource) && hasExplorePermission && !isFederated) {\n    leftButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n      className: style.button,\n      size: \"xs\",\n      variant: \"primary\",\n      icon: \"chart-line\",\n      target: \"__blank\",\n      href: createExploreLink(rulesSource.name, rule.query),\n      children: \"See graph\"\n    }, \"explore\"));\n  }\n\n  if (rule.annotations[Annotation.runbookURL]) {\n    leftButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n      className: style.button,\n      size: \"xs\",\n      variant: \"primary\",\n      icon: \"book\",\n      target: \"__blank\",\n      href: rule.annotations[Annotation.runbookURL],\n      children: \"View runbook\"\n    }, \"runbook\"));\n  }\n\n  if (rule.annotations[Annotation.dashboardUID]) {\n    const dashboardUID = rule.annotations[Annotation.dashboardUID];\n\n    if (dashboardUID) {\n      leftButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n        className: style.button,\n        size: \"xs\",\n        variant: \"primary\",\n        icon: \"apps\",\n        target: \"__blank\",\n        href: `d/${encodeURIComponent(dashboardUID)}`,\n        children: \"Go to dashboard\"\n      }, \"dashboard\"));\n      const panelId = rule.annotations[Annotation.panelID];\n\n      if (panelId) {\n        leftButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n          className: style.button,\n          size: \"xs\",\n          variant: \"primary\",\n          icon: \"apps\",\n          target: \"__blank\",\n          href: `d/${encodeURIComponent(dashboardUID)}?viewPanel=${encodeURIComponent(panelId)}`,\n          children: \"Go to panel\"\n        }, \"panel\"));\n      }\n    }\n  }\n\n  if (alertmanagerSourceName && contextSrv.hasAccess(AccessControlAction.AlertingInstanceCreate, contextSrv.isEditor)) {\n    leftButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n      className: style.button,\n      size: \"xs\",\n      icon: \"bell-slash\",\n      target: \"__blank\",\n      href: makeRuleBasedSilenceLink(alertmanagerSourceName, rule),\n      children: \"Silence\"\n    }, \"silence\"));\n  }\n\n  if (alertId) {\n    leftButtons.push( /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        className: style.button,\n        size: \"xs\",\n        icon: \"history\",\n        onClick: () => showStateHistoryModal(),\n        children: \"Show state history\"\n      }), StateHistoryModal]\n    }, \"history\"));\n  }\n\n  if (!isViewMode) {\n    rightButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n      className: style.button,\n      size: \"xs\",\n      variant: \"secondary\",\n      icon: \"eye\",\n      href: createViewLink(rulesSource, rule, returnTo),\n      children: \"View\"\n    }, \"view\"));\n  }\n\n  if (isEditable && rulerRule && !isFederated && !isProvisioned) {\n    const sourceName = getRulesSourceName(rulesSource);\n    const identifier = ruleId.fromRulerRule(sourceName, namespace.name, group.name, rulerRule);\n    const editURL = urlUtil.renderUrl(`${config.appSubUrl}/alerting/${encodeURIComponent(ruleId.stringifyIdentifier(identifier))}/edit`, {\n      returnTo\n    });\n\n    if (isViewMode) {\n      rightButtons.push( /*#__PURE__*/_jsx(ClipboardButton, {\n        onClipboardCopy: () => {\n          notifyApp.success('URL copied!');\n        },\n        onClipboardError: copiedText => {\n          notifyApp.error('Error while copying URL', copiedText);\n        },\n        className: style.button,\n        size: \"sm\",\n        getText: buildShareUrl,\n        children: \"Copy link to rule\"\n      }, \"copy\"));\n    }\n\n    rightButtons.push( /*#__PURE__*/_jsx(LinkButton, {\n      className: style.button,\n      size: \"xs\",\n      variant: \"secondary\",\n      icon: \"pen\",\n      href: editURL,\n      children: \"Edit\"\n    }, \"edit\"));\n  }\n\n  if (isRemovable && rulerRule && !isFederated && !isProvisioned) {\n    rightButtons.push( /*#__PURE__*/_jsx(Button, {\n      className: style.button,\n      size: \"xs\",\n      type: \"button\",\n      variant: \"secondary\",\n      icon: \"trash-alt\",\n      onClick: () => setRuleToDelete(rule),\n      children: \"Delete\"\n    }, \"delete\"));\n  }\n\n  if (leftButtons.length || rightButtons.length) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.wrapper,\n        children: [/*#__PURE__*/_jsx(HorizontalGroup, {\n          width: \"auto\",\n          children: leftButtons.length ? leftButtons : _div || (_div = /*#__PURE__*/_jsx(\"div\", {}))\n        }), /*#__PURE__*/_jsx(HorizontalGroup, {\n          width: \"auto\",\n          children: rightButtons.length ? rightButtons : _div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {}))\n        })]\n      }), !!ruleToDelete && /*#__PURE__*/_jsx(ConfirmModal, {\n        isOpen: true,\n        title: \"Delete rule\",\n        body: \"Deleting this rule will permanently remove it from your alert rule list. Are you sure you want to delete this rule?\",\n        confirmText: \"Yes, delete\",\n        icon: \"exclamation-triangle\",\n        onConfirm: deleteRule,\n        onDismiss: () => setRuleToDelete(undefined)\n      })]\n    });\n  }\n\n  return null;\n};\n\nfunction inViewMode(pathname) {\n  return pathname.endsWith('/view');\n}\n\nexport const getStyles = theme => ({\n  wrapper: css`\n    padding: ${theme.spacing(2)} 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    border-bottom: solid 1px ${theme.colors.border.medium};\n  `,\n  button: css`\n    height: 24px;\n    margin-top: ${theme.spacing(1)};\n    font-size: ${theme.typography.size.sm};\n  `\n});","map":{"version":3,"names":["css","React","Fragment","useState","useDispatch","useLocation","urlUtil","config","Button","ClipboardButton","ConfirmModal","HorizontalGroup","LinkButton","useStyles2","useAppNotification","contextSrv","AccessControlAction","useIsRuleEditable","useStateHistoryModal","deleteRuleAction","getAlertmanagerByUid","Annotation","getRulesSourceName","isCloudRulesSource","isGrafanaRulesSource","createExploreLink","createViewLink","makeRuleBasedSilenceLink","ruleId","isFederatedRuleGroup","isGrafanaRulerRule","RuleDetailsActionButtons","rule","rulesSource","dispatch","location","notifyApp","style","getStyles","namespace","group","rulerRule","ruleToDelete","setRuleToDelete","alertId","grafana_alert","id","StateHistoryModal","showStateHistoryModal","alertmanagerSourceName","jsonData","alertmanagerUid","name","rulesSourceName","hasExplorePermission","hasPermission","DataSourcesExplore","isProvisioned","Boolean","provenance","leftButtons","rightButtons","isFederated","isEditable","isRemovable","returnTo","pathname","search","isViewMode","inViewMode","deleteRule","identifier","fromRulerRule","navigateTo","undefined","buildShareUrl","appUrl","appSubUrl","baseUrl","ruleUrl","encodeURIComponent","window","href","split","push","button","query","annotations","runbookURL","dashboardUID","panelId","panelID","hasAccess","AlertingInstanceCreate","isEditor","sourceName","editURL","renderUrl","stringifyIdentifier","success","copiedText","error","length","wrapper","endsWith","theme","spacing","colors","border","medium","typography","size","sm"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleDetailsActionButtons.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { GrafanaTheme2, urlUtil } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, ClipboardButton, ConfirmModal, HorizontalGroup, LinkButton, useStyles2 } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\nimport { CombinedRule, RulesSource } from 'app/types/unified-alerting';\n\nimport { useIsRuleEditable } from '../../hooks/useIsRuleEditable';\nimport { useStateHistoryModal } from '../../hooks/useStateHistoryModal';\nimport { deleteRuleAction } from '../../state/actions';\nimport { getAlertmanagerByUid } from '../../utils/alertmanager';\nimport { Annotation } from '../../utils/constants';\nimport { getRulesSourceName, isCloudRulesSource, isGrafanaRulesSource } from '../../utils/datasource';\nimport { createExploreLink, createViewLink, makeRuleBasedSilenceLink } from '../../utils/misc';\nimport * as ruleId from '../../utils/rule-id';\nimport { isFederatedRuleGroup, isGrafanaRulerRule } from '../../utils/rules';\n\ninterface Props {\n  rule: CombinedRule;\n  rulesSource: RulesSource;\n}\n\nexport const RuleDetailsActionButtons: FC<Props> = ({ rule, rulesSource }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const notifyApp = useAppNotification();\n  const style = useStyles2(getStyles);\n  const { namespace, group, rulerRule } = rule;\n  const [ruleToDelete, setRuleToDelete] = useState<CombinedRule>();\n  const alertId = isGrafanaRulerRule(rule.rulerRule) ? rule.rulerRule.grafana_alert.id ?? '' : '';\n  const { StateHistoryModal, showStateHistoryModal } = useStateHistoryModal(alertId);\n\n  const alertmanagerSourceName = isGrafanaRulesSource(rulesSource)\n    ? rulesSource\n    : getAlertmanagerByUid(rulesSource.jsonData.alertmanagerUid)?.name;\n  const rulesSourceName = getRulesSourceName(rulesSource);\n\n  const hasExplorePermission = contextSrv.hasPermission(AccessControlAction.DataSourcesExplore);\n  const isProvisioned = isGrafanaRulerRule(rule.rulerRule) && Boolean(rule.rulerRule.grafana_alert.provenance);\n\n  const leftButtons: JSX.Element[] = [];\n  const rightButtons: JSX.Element[] = [];\n\n  const isFederated = isFederatedRuleGroup(group);\n  const { isEditable, isRemovable } = useIsRuleEditable(rulesSourceName, rulerRule);\n  const returnTo = location.pathname + location.search;\n  const isViewMode = inViewMode(location.pathname);\n\n  const deleteRule = () => {\n    if (ruleToDelete && ruleToDelete.rulerRule) {\n      const identifier = ruleId.fromRulerRule(\n        getRulesSourceName(ruleToDelete.namespace.rulesSource),\n        ruleToDelete.namespace.name,\n        ruleToDelete.group.name,\n        ruleToDelete.rulerRule\n      );\n\n      dispatch(deleteRuleAction(identifier, { navigateTo: isViewMode ? '/alerting/list' : undefined }));\n      setRuleToDelete(undefined);\n    }\n  };\n\n  const buildShareUrl = () => {\n    if (isCloudRulesSource(rulesSource)) {\n      const { appUrl, appSubUrl } = config;\n      const baseUrl = appSubUrl !== '' ? `${appUrl}${appSubUrl}/` : config.appUrl;\n      const ruleUrl = `${encodeURIComponent(rulesSource.name)}/${encodeURIComponent(rule.name)}`;\n      return `${baseUrl}alerting/${ruleUrl}/find`;\n    }\n\n    return window.location.href.split('?')[0];\n  };\n\n  // explore does not support grafana rule queries atm\n  // neither do \"federated rules\"\n  if (isCloudRulesSource(rulesSource) && hasExplorePermission && !isFederated) {\n    leftButtons.push(\n      <LinkButton\n        className={style.button}\n        size=\"xs\"\n        key=\"explore\"\n        variant=\"primary\"\n        icon=\"chart-line\"\n        target=\"__blank\"\n        href={createExploreLink(rulesSource.name, rule.query)}\n      >\n        See graph\n      </LinkButton>\n    );\n  }\n  if (rule.annotations[Annotation.runbookURL]) {\n    leftButtons.push(\n      <LinkButton\n        className={style.button}\n        size=\"xs\"\n        key=\"runbook\"\n        variant=\"primary\"\n        icon=\"book\"\n        target=\"__blank\"\n        href={rule.annotations[Annotation.runbookURL]}\n      >\n        View runbook\n      </LinkButton>\n    );\n  }\n  if (rule.annotations[Annotation.dashboardUID]) {\n    const dashboardUID = rule.annotations[Annotation.dashboardUID];\n    if (dashboardUID) {\n      leftButtons.push(\n        <LinkButton\n          className={style.button}\n          size=\"xs\"\n          key=\"dashboard\"\n          variant=\"primary\"\n          icon=\"apps\"\n          target=\"__blank\"\n          href={`d/${encodeURIComponent(dashboardUID)}`}\n        >\n          Go to dashboard\n        </LinkButton>\n      );\n      const panelId = rule.annotations[Annotation.panelID];\n      if (panelId) {\n        leftButtons.push(\n          <LinkButton\n            className={style.button}\n            size=\"xs\"\n            key=\"panel\"\n            variant=\"primary\"\n            icon=\"apps\"\n            target=\"__blank\"\n            href={`d/${encodeURIComponent(dashboardUID)}?viewPanel=${encodeURIComponent(panelId)}`}\n          >\n            Go to panel\n          </LinkButton>\n        );\n      }\n    }\n  }\n\n  if (alertmanagerSourceName && contextSrv.hasAccess(AccessControlAction.AlertingInstanceCreate, contextSrv.isEditor)) {\n    leftButtons.push(\n      <LinkButton\n        className={style.button}\n        size=\"xs\"\n        key=\"silence\"\n        icon=\"bell-slash\"\n        target=\"__blank\"\n        href={makeRuleBasedSilenceLink(alertmanagerSourceName, rule)}\n      >\n        Silence\n      </LinkButton>\n    );\n  }\n\n  if (alertId) {\n    leftButtons.push(\n      <Fragment key=\"history\">\n        <Button className={style.button} size=\"xs\" icon=\"history\" onClick={() => showStateHistoryModal()}>\n          Show state history\n        </Button>\n        {StateHistoryModal}\n      </Fragment>\n    );\n  }\n\n  if (!isViewMode) {\n    rightButtons.push(\n      <LinkButton\n        className={style.button}\n        size=\"xs\"\n        key=\"view\"\n        variant=\"secondary\"\n        icon=\"eye\"\n        href={createViewLink(rulesSource, rule, returnTo)}\n      >\n        View\n      </LinkButton>\n    );\n  }\n\n  if (isEditable && rulerRule && !isFederated && !isProvisioned) {\n    const sourceName = getRulesSourceName(rulesSource);\n    const identifier = ruleId.fromRulerRule(sourceName, namespace.name, group.name, rulerRule);\n\n    const editURL = urlUtil.renderUrl(\n      `${config.appSubUrl}/alerting/${encodeURIComponent(ruleId.stringifyIdentifier(identifier))}/edit`,\n      {\n        returnTo,\n      }\n    );\n\n    if (isViewMode) {\n      rightButtons.push(\n        <ClipboardButton\n          key=\"copy\"\n          onClipboardCopy={() => {\n            notifyApp.success('URL copied!');\n          }}\n          onClipboardError={(copiedText) => {\n            notifyApp.error('Error while copying URL', copiedText);\n          }}\n          className={style.button}\n          size=\"sm\"\n          getText={buildShareUrl}\n        >\n          Copy link to rule\n        </ClipboardButton>\n      );\n    }\n\n    rightButtons.push(\n      <LinkButton className={style.button} size=\"xs\" key=\"edit\" variant=\"secondary\" icon=\"pen\" href={editURL}>\n        Edit\n      </LinkButton>\n    );\n  }\n\n  if (isRemovable && rulerRule && !isFederated && !isProvisioned) {\n    rightButtons.push(\n      <Button\n        className={style.button}\n        size=\"xs\"\n        type=\"button\"\n        key=\"delete\"\n        variant=\"secondary\"\n        icon=\"trash-alt\"\n        onClick={() => setRuleToDelete(rule)}\n      >\n        Delete\n      </Button>\n    );\n  }\n\n  if (leftButtons.length || rightButtons.length) {\n    return (\n      <>\n        <div className={style.wrapper}>\n          <HorizontalGroup width=\"auto\">{leftButtons.length ? leftButtons : <div />}</HorizontalGroup>\n          <HorizontalGroup width=\"auto\">{rightButtons.length ? rightButtons : <div />}</HorizontalGroup>\n        </div>\n        {!!ruleToDelete && (\n          <ConfirmModal\n            isOpen={true}\n            title=\"Delete rule\"\n            body=\"Deleting this rule will permanently remove it from your alert rule list. Are you sure you want to delete this rule?\"\n            confirmText=\"Yes, delete\"\n            icon=\"exclamation-triangle\"\n            onConfirm={deleteRule}\n            onDismiss={() => setRuleToDelete(undefined)}\n          />\n        )}\n      </>\n    );\n  }\n\n  return null;\n};\n\nfunction inViewMode(pathname: string): boolean {\n  return pathname.endsWith('/view');\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    padding: ${theme.spacing(2)} 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    border-bottom: solid 1px ${theme.colors.border.medium};\n  `,\n  button: css`\n    height: 24px;\n    margin-top: ${theme.spacing(1)};\n    font-size: ${theme.typography.size.sm};\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}