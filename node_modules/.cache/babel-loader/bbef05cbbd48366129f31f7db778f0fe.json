{"ast":null,"code":"import React, { memo, useCallback } from 'react';\nimport { FieldMatcherID, fieldMatchers } from '@grafana/data';\nimport { Input } from '../Input/Input';\nimport { MultiSelect } from '../Select/Select';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const FieldNamesMatcherEditor = /*#__PURE__*/memo(props => {\n  const {\n    data,\n    options,\n    onChange: onChangeFromProps\n  } = props;\n  const {\n    readOnly,\n    prefix\n  } = options;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, undefined);\n  const onChange = useCallback(selections => {\n    if (!Array.isArray(selections)) {\n      return;\n    }\n\n    return onChangeFromProps(Object.assign({}, options, {\n      names: selections.reduce((all, current) => {\n        if (!frameHasName(current.value, names)) {\n          return all;\n        }\n\n        all.push(current.value);\n        return all;\n      }, [])\n    }));\n  }, [names, onChangeFromProps, options]);\n\n  if (readOnly) {\n    var _options$names;\n\n    const displayNames = ((_options$names = options.names) !== null && _options$names !== void 0 ? _options$names : []).join(', ');\n    return /*#__PURE__*/_jsx(Input, {\n      value: displayNames,\n      readOnly: true,\n      disabled: true,\n      prefix: prefix\n    });\n  }\n\n  return /*#__PURE__*/_jsx(MultiSelect, {\n    value: options.names,\n    options: selectOptions,\n    onChange: onChange\n  });\n});\nFieldNamesMatcherEditor.displayName = 'FieldNameMatcherEditor';\nexport const fieldNamesMatcherItem = {\n  id: FieldMatcherID.byNames,\n  component: FieldNamesMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byNames),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: options => {\n    var _options$names2;\n\n    return ((_options$names2 = options.names) !== null && _options$names2 !== void 0 ? _options$names2 : []).join(', ');\n  },\n  excludeFromPicker: true\n};","map":{"version":3,"names":["React","memo","useCallback","FieldMatcherID","fieldMatchers","Input","MultiSelect","useFieldDisplayNames","useSelectOptions","frameHasName","FieldNamesMatcherEditor","props","data","options","onChange","onChangeFromProps","readOnly","prefix","names","selectOptions","undefined","selections","Array","isArray","reduce","all","current","value","push","displayNames","join","displayName","fieldNamesMatcherItem","id","byNames","component","matcher","get","name","description","optionsToLabel","excludeFromPicker"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/MatchersUI/FieldNamesMatcherEditor.tsx"],"sourcesContent":["import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue, ByNamesMatcherOptions } from '@grafana/data';\n\nimport { Input } from '../Input/Input';\nimport { MultiSelect } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\n\nexport const FieldNamesMatcherEditor = memo<MatcherUIProps<ByNamesMatcherOptions>>((props) => {\n  const { data, options, onChange: onChangeFromProps } = props;\n  const { readOnly, prefix } = options;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, undefined);\n\n  const onChange = useCallback(\n    (selections: Array<SelectableValue<string>>) => {\n      if (!Array.isArray(selections)) {\n        return;\n      }\n\n      return onChangeFromProps({\n        ...options,\n        names: selections.reduce((all: string[], current) => {\n          if (!frameHasName(current.value, names)) {\n            return all;\n          }\n          all.push(current.value!);\n          return all;\n        }, []),\n      });\n    },\n    [names, onChangeFromProps, options]\n  );\n\n  if (readOnly) {\n    const displayNames = (options.names ?? []).join(', ');\n    return <Input value={displayNames} readOnly={true} disabled={true} prefix={prefix} />;\n  }\n\n  return <MultiSelect value={options.names} options={selectOptions} onChange={onChange} />;\n});\nFieldNamesMatcherEditor.displayName = 'FieldNameMatcherEditor';\n\nexport const fieldNamesMatcherItem: FieldMatcherUIRegistryItem<ByNamesMatcherOptions> = {\n  id: FieldMatcherID.byNames,\n  component: FieldNamesMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byNames),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: (options) => (options.names ?? []).join(', '),\n  excludeFromPicker: true,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,QAAyC,OAAzC;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAAsF,eAAtF;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,YAAjD,QAAqE,SAArE;;AAEA,OAAO,MAAMC,uBAAuB,gBAAGT,IAAI,CAAyCU,KAAD,IAAW;EAC5F,MAAM;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,QAAQ,EAAEC;EAA3B,IAAiDJ,KAAvD;EACA,MAAM;IAAEK,QAAF;IAAYC;EAAZ,IAAuBJ,OAA7B;EACA,MAAMK,KAAK,GAAGX,oBAAoB,CAACK,IAAD,CAAlC;EACA,MAAMO,aAAa,GAAGX,gBAAgB,CAACU,KAAD,EAAQE,SAAR,CAAtC;EAEA,MAAMN,QAAQ,GAAGZ,WAAW,CACzBmB,UAAD,IAAgD;IAC9C,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC;MAC9B;IACD;;IAED,OAAON,iBAAiB,mBACnBF,OADmB;MAEtBK,KAAK,EAAEG,UAAU,CAACG,MAAX,CAAkB,CAACC,GAAD,EAAgBC,OAAhB,KAA4B;QACnD,IAAI,CAACjB,YAAY,CAACiB,OAAO,CAACC,KAAT,EAAgBT,KAAhB,CAAjB,EAAyC;UACvC,OAAOO,GAAP;QACD;;QACDA,GAAG,CAACG,IAAJ,CAASF,OAAO,CAACC,KAAjB;QACA,OAAOF,GAAP;MACD,CANM,EAMJ,EANI;IAFe,GAAxB;EAUD,CAhByB,EAiB1B,CAACP,KAAD,EAAQH,iBAAR,EAA2BF,OAA3B,CAjB0B,CAA5B;;EAoBA,IAAIG,QAAJ,EAAc;IAAA;;IACZ,MAAMa,YAAY,GAAG,mBAAChB,OAAO,CAACK,KAAT,2DAAkB,EAAlB,EAAsBY,IAAtB,CAA2B,IAA3B,CAArB;IACA,oBAAO,KAAC,KAAD;MAAO,KAAK,EAAED,YAAd;MAA4B,QAAQ,EAAE,IAAtC;MAA4C,QAAQ,EAAE,IAAtD;MAA4D,MAAM,EAAEZ;IAApE,EAAP;EACD;;EAED,oBAAO,KAAC,WAAD;IAAa,KAAK,EAAEJ,OAAO,CAACK,KAA5B;IAAmC,OAAO,EAAEC,aAA5C;IAA2D,QAAQ,EAAEL;EAArE,EAAP;AACD,CAhC0C,CAApC;AAiCPJ,uBAAuB,CAACqB,WAAxB,GAAsC,wBAAtC;AAEA,OAAO,MAAMC,qBAAwE,GAAG;EACtFC,EAAE,EAAE9B,cAAc,CAAC+B,OADmE;EAEtFC,SAAS,EAAEzB,uBAF2E;EAGtF0B,OAAO,EAAEhC,aAAa,CAACiC,GAAd,CAAkBlC,cAAc,CAAC+B,OAAjC,CAH6E;EAItFI,IAAI,EAAE,kBAJgF;EAKtFC,WAAW,EAAE,qCALyE;EAMtFC,cAAc,EAAG3B,OAAD;IAAA;;IAAA,OAAa,oBAACA,OAAO,CAACK,KAAT,6DAAkB,EAAlB,EAAsBY,IAAtB,CAA2B,IAA3B,CAAb;EAAA,CANsE;EAOtFW,iBAAiB,EAAE;AAPmE,CAAjF"},"metadata":{},"sourceType":"module"}