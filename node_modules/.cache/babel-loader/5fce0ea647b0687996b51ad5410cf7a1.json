{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Permissions } from 'app/core/components/AccessControl';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AccessControlAction } from 'app/types';\nimport { getFolderByUid } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state, props) {\n  const uid = props.match.params.uid;\n  return {\n    uid: uid,\n    navModel: getNavModel(state.navIndex, `folder-permissions-${uid}`, getLoadingNav(1))\n  };\n}\n\nconst mapDispatchToProps = {\n  getFolderByUid\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const AccessControlFolderPermissions = ({\n  uid,\n  getFolderByUid,\n  navModel\n}) => {\n  useEffect(() => {\n    getFolderByUid(uid);\n  }, [getFolderByUid, uid]);\n  const canSetPermissions = contextSrv.hasPermission(AccessControlAction.FoldersPermissionsWrite);\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsx(Page.Contents, {\n      children: /*#__PURE__*/_jsx(Permissions, {\n        resource: \"folders\",\n        resourceId: uid,\n        canSetPermissions: canSetPermissions\n      })\n    })\n  });\n};\nexport default connector(AccessControlFolderPermissions);","map":{"version":3,"names":["React","useEffect","connect","Permissions","Page","contextSrv","getNavModel","AccessControlAction","getFolderByUid","getLoadingNav","mapStateToProps","state","props","uid","match","params","navModel","navIndex","mapDispatchToProps","connector","AccessControlFolderPermissions","canSetPermissions","hasPermission","FoldersPermissionsWrite"],"sources":["/home/soula/grafana/public/app/features/folders/AccessControlFolderPermissions.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Permissions } from 'app/core/components/AccessControl';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AccessControlAction, StoreState } from 'app/types';\n\nimport { getFolderByUid } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{ uid: string }> {}\n\nfunction mapStateToProps(state: StoreState, props: RouteProps) {\n  const uid = props.match.params.uid;\n  return {\n    uid: uid,\n    navModel: getNavModel(state.navIndex, `folder-permissions-${uid}`, getLoadingNav(1)),\n  };\n}\n\nconst mapDispatchToProps = {\n  getFolderByUid,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport type Props = ConnectedProps<typeof connector>;\n\nexport const AccessControlFolderPermissions = ({ uid, getFolderByUid, navModel }: Props) => {\n  useEffect(() => {\n    getFolderByUid(uid);\n  }, [getFolderByUid, uid]);\n\n  const canSetPermissions = contextSrv.hasPermission(AccessControlAction.FoldersPermissionsWrite);\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <Permissions resource=\"folders\" resourceId={uid} canSetPermissions={canSetPermissions} />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(AccessControlFolderPermissions);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,mBAAT,QAAgD,WAAhD;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAA4CC,KAA5C,EAA+D;EAC7D,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,GAA/B;EACA,OAAO;IACLA,GAAG,EAAEA,GADA;IAELG,QAAQ,EAAEV,WAAW,CAACK,KAAK,CAACM,QAAP,EAAkB,sBAAqBJ,GAAI,EAA3C,EAA8CJ,aAAa,CAAC,CAAD,CAA3D;EAFhB,CAAP;AAID;;AAED,MAAMS,kBAAkB,GAAG;EACzBV;AADyB,CAA3B;AAIA,MAAMW,SAAS,GAAGjB,OAAO,CAACQ,eAAD,EAAkBQ,kBAAlB,CAAzB;AAGA,OAAO,MAAME,8BAA8B,GAAG,CAAC;EAAEP,GAAF;EAAOL,cAAP;EAAuBQ;AAAvB,CAAD,KAA8C;EAC1Ff,SAAS,CAAC,MAAM;IACdO,cAAc,CAACK,GAAD,CAAd;EACD,CAFQ,EAEN,CAACL,cAAD,EAAiBK,GAAjB,CAFM,CAAT;EAIA,MAAMQ,iBAAiB,GAAGhB,UAAU,CAACiB,aAAX,CAAyBf,mBAAmB,CAACgB,uBAA7C,CAA1B;EAEA,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAEP,QAAhB;IAAA,uBACE,KAAC,IAAD,CAAM,QAAN;MAAA,uBACE,KAAC,WAAD;QAAa,QAAQ,EAAC,SAAtB;QAAgC,UAAU,EAAEH,GAA5C;QAAiD,iBAAiB,EAAEQ;MAApE;IADF;EADF,EADF;AAOD,CAdM;AAgBP,eAAeF,SAAS,CAACC,8BAAD,CAAxB"},"metadata":{},"sourceType":"module"}