{"ast":null,"code":"var _LoadingPlaceholder;\n\nimport React from 'react';\nimport { ErrorWithStack, LoadingPlaceholder } from '..';\nimport { useAsyncDependency } from '../../utils/useAsyncDependency'; // we only use import type so it will not be included in the bundle\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @internal\n * Experimental export\n **/\nexport const ReactMonacoEditorLazy = props => {\n  const {\n    loading,\n    error,\n    dependency\n  } = useAsyncDependency(import(\n  /* webpackChunkName: \"react-monaco-editor\" */\n  './ReactMonacoEditor'));\n\n  if (loading) {\n    return _LoadingPlaceholder || (_LoadingPlaceholder = /*#__PURE__*/_jsx(LoadingPlaceholder, {\n      text: ''\n    }));\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsx(ErrorWithStack, {\n      title: \"React Monaco Editor failed to load\",\n      error: error,\n      errorInfo: {\n        componentStack: (error === null || error === void 0 ? void 0 : error.stack) || ''\n      }\n    });\n  }\n\n  const ReactMonacoEditor = dependency.ReactMonacoEditor;\n  return /*#__PURE__*/_jsx(ReactMonacoEditor, Object.assign({}, props));\n};","map":{"version":3,"names":["React","ErrorWithStack","LoadingPlaceholder","useAsyncDependency","ReactMonacoEditorLazy","props","loading","error","dependency","componentStack","stack","ReactMonacoEditor"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Monaco/ReactMonacoEditorLazy.tsx"],"sourcesContent":["import React from 'react';\n\nimport { ErrorWithStack, LoadingPlaceholder } from '..';\nimport { useAsyncDependency } from '../../utils/useAsyncDependency';\n\n// we only use import type so it will not be included in the bundle\nimport type { ReactMonacoEditorProps } from './types';\n\n/**\n * @internal\n * Experimental export\n **/\nexport const ReactMonacoEditorLazy = (props: ReactMonacoEditorProps) => {\n  const { loading, error, dependency } = useAsyncDependency(\n    import(/* webpackChunkName: \"react-monaco-editor\" */ './ReactMonacoEditor')\n  );\n\n  if (loading) {\n    return <LoadingPlaceholder text={''} />;\n  }\n\n  if (error) {\n    return (\n      <ErrorWithStack\n        title=\"React Monaco Editor failed to load\"\n        error={error}\n        errorInfo={{ componentStack: error?.stack || '' }}\n      />\n    );\n  }\n\n  const ReactMonacoEditor = dependency.ReactMonacoEditor;\n  return <ReactMonacoEditor {...props} />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,IAAnD;AACA,SAASC,kBAAT,QAAmC,gCAAnC,C,CAEA;;;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAmC;EACtE,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAAiCL,kBAAkB,CACvD;EAAO;EAA8C,qBAArD,CADuD,CAAzD;;EAIA,IAAIG,OAAJ,EAAa;IACX,kEAAO,KAAC,kBAAD;MAAoB,IAAI,EAAE;IAA1B,EAAP;EACD;;EAED,IAAIC,KAAJ,EAAW;IACT,oBACE,KAAC,cAAD;MACE,KAAK,EAAC,oCADR;MAEE,KAAK,EAAEA,KAFT;MAGE,SAAS,EAAE;QAAEE,cAAc,EAAE,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,KAAP,KAAgB;MAAlC;IAHb,EADF;EAOD;;EAED,MAAMC,iBAAiB,GAAGH,UAAU,CAACG,iBAArC;EACA,oBAAO,KAAC,iBAAD,oBAAuBN,KAAvB,EAAP;AACD,CArBM"},"metadata":{},"sourceType":"module"}