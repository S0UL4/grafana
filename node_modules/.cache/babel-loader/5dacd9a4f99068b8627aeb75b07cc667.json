{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { config } from '@grafana/runtime';\nimport { HorizontalGroup, RadioButtonGroup, Checkbox, InlineSwitch, useStyles2 } from '@grafana/ui';\nimport { SortPicker } from 'app/core/components/Select/SortPicker';\nimport { TagFilter } from 'app/core/components/TagFilter/TagFilter';\nimport { SearchSrv } from 'app/core/services/search_srv';\nimport { SearchLayout } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const layoutOptions = [{\n  value: SearchLayout.Folders,\n  icon: 'folder',\n  ariaLabel: 'View by folders'\n}, {\n  value: SearchLayout.List,\n  icon: 'list-ul',\n  ariaLabel: 'View as list'\n}];\nconst searchSrv = new SearchSrv();\nexport const ActionRow = ({\n  onLayoutChange,\n  setShowPreviews,\n  onSortChange,\n  onStarredFilterChange = () => {},\n  onTagFilterChange,\n  query,\n  showStarredFilter,\n  hideLayout,\n  showPreviews\n}) => {\n  var _query$sort;\n\n  const styles = useStyles2(getStyles);\n  const previewsEnabled = config.featureToggles.dashboardPreviews;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.actionRow,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.rowContainer,\n      children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n        spacing: \"md\",\n        width: \"auto\",\n        children: [!hideLayout ? /*#__PURE__*/_jsx(RadioButtonGroup, {\n          options: layoutOptions,\n          onChange: onLayoutChange,\n          value: query.layout\n        }) : null, /*#__PURE__*/_jsx(SortPicker, {\n          onChange: onSortChange,\n          value: (_query$sort = query.sort) === null || _query$sort === void 0 ? void 0 : _query$sort.value\n        }), previewsEnabled && /*#__PURE__*/_jsx(InlineSwitch, {\n          id: \"search-show-previews\",\n          label: \"Show previews\",\n          showLabel: true,\n          value: showPreviews,\n          onChange: ev => setShowPreviews(ev.target.checked),\n          transparent: true\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(HorizontalGroup, {\n      spacing: \"md\",\n      width: \"auto\",\n      children: [showStarredFilter && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.checkboxWrapper,\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          label: \"Filter by starred\",\n          onChange: onStarredFilterChange,\n          value: query.starred\n        })\n      }), /*#__PURE__*/_jsx(TagFilter, {\n        isClearable: true,\n        tags: query.tag,\n        tagOptions: searchSrv.getDashboardTags,\n        onChange: onTagFilterChange\n      })]\n    })]\n  });\n};\nActionRow.displayName = 'ActionRow';\nexport const getStyles = theme => {\n  return {\n    actionRow: css`\n      display: none;\n\n      ${theme.breakpoints.up('md')} {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding-bottom: ${theme.spacing(2)};\n        width: 100%;\n      }\n    `,\n    rowContainer: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    checkboxWrapper: css`\n      label {\n        line-height: 1.2;\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","React","config","HorizontalGroup","RadioButtonGroup","Checkbox","InlineSwitch","useStyles2","SortPicker","TagFilter","SearchSrv","SearchLayout","layoutOptions","value","Folders","icon","ariaLabel","List","searchSrv","ActionRow","onLayoutChange","setShowPreviews","onSortChange","onStarredFilterChange","onTagFilterChange","query","showStarredFilter","hideLayout","showPreviews","styles","getStyles","previewsEnabled","featureToggles","dashboardPreviews","actionRow","rowContainer","layout","sort","ev","target","checked","checkboxWrapper","starred","tag","getDashboardTags","displayName","theme","breakpoints","up","spacing"],"sources":["/home/soula/grafana/public/app/features/search/components/ActionRow.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, ChangeEvent, FormEvent } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { HorizontalGroup, RadioButtonGroup, Checkbox, InlineSwitch, useStyles2 } from '@grafana/ui';\nimport { SortPicker } from 'app/core/components/Select/SortPicker';\nimport { TagFilter } from 'app/core/components/TagFilter/TagFilter';\nimport { SearchSrv } from 'app/core/services/search_srv';\n\nimport { DashboardQuery, SearchLayout } from '../types';\n\nexport const layoutOptions = [\n  { value: SearchLayout.Folders, icon: 'folder', ariaLabel: 'View by folders' },\n  { value: SearchLayout.List, icon: 'list-ul', ariaLabel: 'View as list' },\n];\n\nconst searchSrv = new SearchSrv();\n\ninterface Props {\n  onLayoutChange: (layout: SearchLayout) => void;\n  setShowPreviews: (newValue: boolean) => void;\n  onSortChange: (value: SelectableValue) => void;\n  onStarredFilterChange?: (event: FormEvent<HTMLInputElement>) => void;\n  onTagFilterChange: (tags: string[]) => void;\n  query: DashboardQuery;\n  showStarredFilter?: boolean;\n  hideLayout?: boolean;\n  showPreviews?: boolean;\n}\n\nexport const ActionRow: FC<Props> = ({\n  onLayoutChange,\n  setShowPreviews,\n  onSortChange,\n  onStarredFilterChange = () => {},\n  onTagFilterChange,\n  query,\n  showStarredFilter,\n  hideLayout,\n  showPreviews,\n}) => {\n  const styles = useStyles2(getStyles);\n  const previewsEnabled = config.featureToggles.dashboardPreviews;\n\n  return (\n    <div className={styles.actionRow}>\n      <div className={styles.rowContainer}>\n        <HorizontalGroup spacing=\"md\" width=\"auto\">\n          {!hideLayout ? (\n            <RadioButtonGroup options={layoutOptions} onChange={onLayoutChange} value={query.layout} />\n          ) : null}\n          <SortPicker onChange={onSortChange} value={query.sort?.value} />\n          {previewsEnabled && (\n            <InlineSwitch\n              id=\"search-show-previews\"\n              label=\"Show previews\"\n              showLabel\n              value={showPreviews}\n              onChange={(ev: ChangeEvent<HTMLInputElement>) => setShowPreviews(ev.target.checked)}\n              transparent\n            />\n          )}\n        </HorizontalGroup>\n      </div>\n      <HorizontalGroup spacing=\"md\" width=\"auto\">\n        {showStarredFilter && (\n          <div className={styles.checkboxWrapper}>\n            <Checkbox label=\"Filter by starred\" onChange={onStarredFilterChange} value={query.starred} />\n          </div>\n        )}\n        <TagFilter isClearable tags={query.tag} tagOptions={searchSrv.getDashboardTags} onChange={onTagFilterChange} />\n      </HorizontalGroup>\n    </div>\n  );\n};\n\nActionRow.displayName = 'ActionRow';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    actionRow: css`\n      display: none;\n\n      ${theme.breakpoints.up('md')} {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding-bottom: ${theme.spacing(2)};\n        width: 100%;\n      }\n    `,\n    rowContainer: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    checkboxWrapper: css`\n      label {\n        line-height: 1.2;\n      }\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}