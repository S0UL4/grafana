{"ast":null,"code":"export const onChangeCascader = onChanged => (values, options) => {\n  if (onChanged) {\n    // map values to strings for backwards compatibility with Cascader components\n    onChanged(values.map(value => String(value)), fromRCOptions(options));\n  }\n};\nexport const onLoadDataCascader = onLoadData => options => {\n  if (onLoadData) {\n    onLoadData(fromRCOptions(options));\n  }\n};\n\nconst fromRCOptions = options => {\n  return options.map(fromRCOption);\n};\n\nconst fromRCOption = option => {\n  var _option$value;\n\n  return {\n    value: (_option$value = option.value) !== null && _option$value !== void 0 ? _option$value : '',\n    label: option.label\n  };\n};","map":{"version":3,"names":["onChangeCascader","onChanged","values","options","map","value","String","fromRCOptions","onLoadDataCascader","onLoadData","fromRCOption","option","label"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Cascader/optionMappings.ts"],"sourcesContent":["import { SingleValueType, BaseOptionType as RCCascaderOption } from 'rc-cascader/lib/Cascader';\n\nimport { CascaderOption } from './Cascader';\n\ntype onChangeType = ((values: string[], options: CascaderOption[]) => void) | undefined;\n\nexport const onChangeCascader = (onChanged: onChangeType) => (values: SingleValueType, options: RCCascaderOption[]) => {\n  if (onChanged) {\n    // map values to strings for backwards compatibility with Cascader components\n    onChanged(\n      values.map((value) => String(value)),\n      fromRCOptions(options)\n    );\n  }\n};\n\ntype onLoadDataType = ((options: CascaderOption[]) => void) | undefined;\n\nexport const onLoadDataCascader = (onLoadData: onLoadDataType) => (options: RCCascaderOption[]) => {\n  if (onLoadData) {\n    onLoadData(fromRCOptions(options));\n  }\n};\n\nconst fromRCOptions = (options: RCCascaderOption[]): CascaderOption[] => {\n  return options.map(fromRCOption);\n};\n\nconst fromRCOption = (option: RCCascaderOption): CascaderOption => {\n  return {\n    value: option.value ?? '',\n    label: option.label as unknown as string,\n  };\n};\n"],"mappings":"AAMA,OAAO,MAAMA,gBAAgB,GAAIC,SAAD,IAA6B,CAACC,MAAD,EAA0BC,OAA1B,KAA0D;EACrH,IAAIF,SAAJ,EAAe;IACb;IACAA,SAAS,CACPC,MAAM,CAACE,GAAP,CAAYC,KAAD,IAAWC,MAAM,CAACD,KAAD,CAA5B,CADO,EAEPE,aAAa,CAACJ,OAAD,CAFN,CAAT;EAID;AACF,CARM;AAYP,OAAO,MAAMK,kBAAkB,GAAIC,UAAD,IAAiCN,OAAD,IAAiC;EACjG,IAAIM,UAAJ,EAAgB;IACdA,UAAU,CAACF,aAAa,CAACJ,OAAD,CAAd,CAAV;EACD;AACF,CAJM;;AAMP,MAAMI,aAAa,GAAIJ,OAAD,IAAmD;EACvE,OAAOA,OAAO,CAACC,GAAR,CAAYM,YAAZ,CAAP;AACD,CAFD;;AAIA,MAAMA,YAAY,GAAIC,MAAD,IAA8C;EAAA;;EACjE,OAAO;IACLN,KAAK,mBAAEM,MAAM,CAACN,KAAT,yDAAkB,EADlB;IAELO,KAAK,EAAED,MAAM,CAACC;EAFT,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}