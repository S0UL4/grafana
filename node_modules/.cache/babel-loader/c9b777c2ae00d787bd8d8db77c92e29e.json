{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { debounce, isNil } from 'lodash';\nimport React, { Component } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { AsyncSelect } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class UserPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"debouncedSearch\", void 0);\n\n    this.state = {\n      isLoading: false\n    };\n    this.search = this.search.bind(this);\n    this.debouncedSearch = debounce(this.search, 300, {\n      leading: true,\n      trailing: true\n    });\n  }\n\n  search(query) {\n    this.setState({\n      isLoading: true\n    });\n\n    if (isNil(query)) {\n      query = '';\n    }\n\n    return getBackendSrv().get(`/api/org/users/lookup?query=${query}&limit=100`).then(result => {\n      return result.map(user => ({\n        id: user.userId,\n        value: user.userId,\n        label: user.login,\n        imgUrl: user.avatarUrl,\n        login: user.login\n      }));\n    }).finally(() => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      className,\n      onSelected,\n      inputId\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"user-picker\",\n      \"data-testid\": \"userPicker\",\n      children: /*#__PURE__*/_jsx(AsyncSelect, {\n        isClearable: true,\n        className: className,\n        inputId: inputId,\n        isLoading: isLoading,\n        defaultOptions: true,\n        loadOptions: this.debouncedSearch,\n        onChange: onSelected,\n        placeholder: \"Start typing to search for user\",\n        noOptionsMessage: \"No users found\",\n        \"aria-label\": \"User picker\"\n      })\n    });\n  }\n\n}","map":{"version":3,"names":["debounce","isNil","React","Component","getBackendSrv","AsyncSelect","UserPicker","constructor","props","state","isLoading","search","bind","debouncedSearch","leading","trailing","query","setState","get","then","result","map","user","id","userId","value","label","login","imgUrl","avatarUrl","finally","render","className","onSelected","inputId"],"sources":["/home/soula/grafana/public/app/core/components/Select/UserPicker.tsx"],"sourcesContent":["import { debounce, isNil } from 'lodash';\nimport React, { Component } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { AsyncSelect } from '@grafana/ui';\nimport { OrgUser } from 'app/types';\n\nexport interface Props {\n  onSelected: (user: SelectableValue<OrgUser['userId']>) => void;\n  className?: string;\n  inputId?: string;\n}\n\nexport interface State {\n  isLoading: boolean;\n}\n\nexport class UserPicker extends Component<Props, State> {\n  debouncedSearch: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isLoading: false };\n    this.search = this.search.bind(this);\n\n    this.debouncedSearch = debounce(this.search, 300, {\n      leading: true,\n      trailing: true,\n    });\n  }\n\n  search(query?: string) {\n    this.setState({ isLoading: true });\n\n    if (isNil(query)) {\n      query = '';\n    }\n\n    return getBackendSrv()\n      .get(`/api/org/users/lookup?query=${query}&limit=100`)\n      .then((result: OrgUser[]) => {\n        return result.map((user) => ({\n          id: user.userId,\n          value: user.userId,\n          label: user.login,\n          imgUrl: user.avatarUrl,\n          login: user.login,\n        }));\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    const { className, onSelected, inputId } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"user-picker\" data-testid=\"userPicker\">\n        <AsyncSelect\n          isClearable\n          className={className}\n          inputId={inputId}\n          isLoading={isLoading}\n          defaultOptions={true}\n          loadOptions={this.debouncedSearch}\n          onChange={onSelected}\n          placeholder=\"Start typing to search for user\"\n          noOptionsMessage=\"No users found\"\n          aria-label=\"User picker\"\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,QAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAaA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAiD;EAGtDI,WAAW,CAACC,KAAD,EAAe;IACxB,MAAMA,KAAN;;IADwB;;IAExB,KAAKC,KAAL,GAAa;MAAEC,SAAS,EAAE;IAAb,CAAb;IACA,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;IAEA,KAAKC,eAAL,GAAuBb,QAAQ,CAAC,KAAKW,MAAN,EAAc,GAAd,EAAmB;MAChDG,OAAO,EAAE,IADuC;MAEhDC,QAAQ,EAAE;IAFsC,CAAnB,CAA/B;EAID;;EAEDJ,MAAM,CAACK,KAAD,EAAiB;IACrB,KAAKC,QAAL,CAAc;MAAEP,SAAS,EAAE;IAAb,CAAd;;IAEA,IAAIT,KAAK,CAACe,KAAD,CAAT,EAAkB;MAChBA,KAAK,GAAG,EAAR;IACD;;IAED,OAAOZ,aAAa,GACjBc,GADI,CACC,+BAA8BF,KAAM,YADrC,EAEJG,IAFI,CAEEC,MAAD,IAAuB;MAC3B,OAAOA,MAAM,CAACC,GAAP,CAAYC,IAAD,KAAW;QAC3BC,EAAE,EAAED,IAAI,CAACE,MADkB;QAE3BC,KAAK,EAAEH,IAAI,CAACE,MAFe;QAG3BE,KAAK,EAAEJ,IAAI,CAACK,KAHe;QAI3BC,MAAM,EAAEN,IAAI,CAACO,SAJc;QAK3BF,KAAK,EAAEL,IAAI,CAACK;MALe,CAAX,CAAX,CAAP;IAOD,CAVI,EAWJG,OAXI,CAWI,MAAM;MACb,KAAKb,QAAL,CAAc;QAAEP,SAAS,EAAE;MAAb,CAAd;IACD,CAbI,CAAP;EAcD;;EAEDqB,MAAM,GAAG;IACP,MAAM;MAAEC,SAAF;MAAaC,UAAb;MAAyBC;IAAzB,IAAqC,KAAK1B,KAAhD;IACA,MAAM;MAAEE;IAAF,IAAgB,KAAKD,KAA3B;IAEA,oBACE;MAAK,SAAS,EAAC,aAAf;MAA6B,eAAY,YAAzC;MAAA,uBACE,KAAC,WAAD;QACE,WAAW,MADb;QAEE,SAAS,EAAEuB,SAFb;QAGE,OAAO,EAAEE,OAHX;QAIE,SAAS,EAAExB,SAJb;QAKE,cAAc,EAAE,IALlB;QAME,WAAW,EAAE,KAAKG,eANpB;QAOE,QAAQ,EAAEoB,UAPZ;QAQE,WAAW,EAAC,iCARd;QASE,gBAAgB,EAAC,gBATnB;QAUE,cAAW;MAVb;IADF,EADF;EAgBD;;AAzDqD"},"metadata":{},"sourceType":"module"}