{"ast":null,"code":"export let ResourceRowType;\n\n(function (ResourceRowType) {\n  ResourceRowType[\"Subscription\"] = \"Subscription\";\n  ResourceRowType[\"ResourceGroup\"] = \"ResourceGroup\";\n  ResourceRowType[\"Resource\"] = \"Resource\";\n  ResourceRowType[\"VariableGroup\"] = \"TemplateVariableGroup\";\n  ResourceRowType[\"Variable\"] = \"TemplateVariable\";\n})(ResourceRowType || (ResourceRowType = {}));","map":{"version":3,"names":["ResourceRowType"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/components/ResourcePicker/types.ts"],"sourcesContent":["export enum ResourceRowType {\n  Subscription = 'Subscription',\n  ResourceGroup = 'ResourceGroup',\n  Resource = 'Resource',\n  VariableGroup = 'TemplateVariableGroup',\n  Variable = 'TemplateVariable',\n}\n\nexport interface ResourceRow {\n  id: string; // azure's raw data id usually passes along a uri (except in the case of subscriptions), to make things less confusing for ourselves we parse the id string out of the uri or vice versa\n  uri: string; // ex: /subscriptions/subid123\n  name: string;\n  type: ResourceRowType;\n  typeLabel: string;\n  location?: string;\n  children?: ResourceRowGroup;\n}\n\nexport type ResourceRowGroup = ResourceRow[];\n"],"mappings":"AAAA,WAAYA,eAAZ;;WAAYA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;GAAAA,e,KAAAA,e"},"metadata":{},"sourceType":"module"}