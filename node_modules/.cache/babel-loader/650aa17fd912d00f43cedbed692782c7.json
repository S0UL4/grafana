{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { useDebounce } from 'react-use';\nimport { FilterInput } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// useDebounce has a bug which causes it to fire on first render. This wrapper prevents that.\n// https://github.com/streamich/react-use/issues/759\nconst useDebounceWithoutFirstRender = (callBack, delay = 0, deps = []) => {\n  const isFirstRender = useRef(true);\n  const debounceDeps = [...deps, isFirstRender];\n  return useDebounce(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    return callBack();\n  }, delay, debounceDeps);\n};\n\nexport const SearchField = ({\n  value,\n  onSearch\n}) => {\n  const [query, setQuery] = useState(value);\n  useDebounceWithoutFirstRender(() => onSearch(query !== null && query !== void 0 ? query : ''), 500, [query]);\n  return /*#__PURE__*/_jsx(FilterInput, {\n    value: query,\n    onKeyDown: e => {\n      if (e.key === 'Enter' || e.keyCode === 13) {\n        onSearch(e.currentTarget.value);\n      }\n    },\n    placeholder: \"Search Grafana plugins\",\n    onChange: value => {\n      setQuery(value);\n    },\n    width: 46\n  });\n};","map":{"version":3,"names":["React","useState","useRef","useDebounce","FilterInput","useDebounceWithoutFirstRender","callBack","delay","deps","isFirstRender","debounceDeps","current","SearchField","value","onSearch","query","setQuery","e","key","keyCode","currentTarget"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/SearchField.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useDebounce } from 'react-use';\n\nimport { FilterInput } from '@grafana/ui';\n\ninterface Props {\n  value?: string;\n  onSearch: (value: string) => void;\n}\n\n// useDebounce has a bug which causes it to fire on first render. This wrapper prevents that.\n// https://github.com/streamich/react-use/issues/759\nconst useDebounceWithoutFirstRender = (callBack: () => any, delay = 0, deps: React.DependencyList = []) => {\n  const isFirstRender = useRef(true);\n  const debounceDeps = [...deps, isFirstRender];\n\n  return useDebounce(\n    () => {\n      if (isFirstRender.current) {\n        isFirstRender.current = false;\n        return;\n      }\n      return callBack();\n    },\n    delay,\n    debounceDeps\n  );\n};\n\nexport const SearchField = ({ value, onSearch }: Props) => {\n  const [query, setQuery] = useState(value);\n\n  useDebounceWithoutFirstRender(() => onSearch(query ?? ''), 500, [query]);\n\n  return (\n    <FilterInput\n      value={query}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          onSearch(e.currentTarget.value);\n        }\n      }}\n      placeholder=\"Search Grafana plugins\"\n      onChange={(value) => {\n        setQuery(value);\n      }}\n      width={46}\n    />\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;AAOA;AACA;AACA,MAAMC,6BAA6B,GAAG,CAACC,QAAD,EAAsBC,KAAK,GAAG,CAA9B,EAAiCC,IAA0B,GAAG,EAA9D,KAAqE;EACzG,MAAMC,aAAa,GAAGP,MAAM,CAAC,IAAD,CAA5B;EACA,MAAMQ,YAAY,GAAG,CAAC,GAAGF,IAAJ,EAAUC,aAAV,CAArB;EAEA,OAAON,WAAW,CAChB,MAAM;IACJ,IAAIM,aAAa,CAACE,OAAlB,EAA2B;MACzBF,aAAa,CAACE,OAAd,GAAwB,KAAxB;MACA;IACD;;IACD,OAAOL,QAAQ,EAAf;EACD,CAPe,EAQhBC,KARgB,EAShBG,YATgB,CAAlB;AAWD,CAfD;;AAiBA,OAAO,MAAME,WAAW,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAAgC;EACzD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACY,KAAD,CAAlC;EAEAR,6BAA6B,CAAC,MAAMS,QAAQ,CAACC,KAAD,aAACA,KAAD,cAACA,KAAD,GAAU,EAAV,CAAf,EAA8B,GAA9B,EAAmC,CAACA,KAAD,CAAnC,CAA7B;EAEA,oBACE,KAAC,WAAD;IACE,KAAK,EAAEA,KADT;IAEE,SAAS,EAAGE,CAAD,IAAO;MAChB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACE,OAAF,KAAc,EAAvC,EAA2C;QACzCL,QAAQ,CAACG,CAAC,CAACG,aAAF,CAAgBP,KAAjB,CAAR;MACD;IACF,CANH;IAOE,WAAW,EAAC,wBAPd;IAQE,QAAQ,EAAGA,KAAD,IAAW;MACnBG,QAAQ,CAACH,KAAD,CAAR;IACD,CAVH;IAWE,KAAK,EAAE;EAXT,EADF;AAeD,CApBM"},"metadata":{},"sourceType":"module"}