{"ast":null,"code":"import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useState } from 'react';\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { Button } from '../../Button/Button';\nimport { Modal } from '../../Modal/Modal';\nimport { DataLinkEditorModalContent } from './DataLinkEditorModalContent';\nimport { DataLinksListItem } from './DataLinksListItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataLinksInlineEditor = ({\n  links,\n  onChange,\n  getSuggestions,\n  data\n}) => {\n  const theme = useTheme2();\n  const [editIndex, setEditIndex] = useState(null);\n  const [isNew, setIsNew] = useState(false);\n  const styles = getDataLinksInlineEditorStyles(theme);\n  const linksSafe = links !== null && links !== void 0 ? links : [];\n  const isEditing = editIndex !== null;\n\n  const onDataLinkChange = (index, link) => {\n    if (isNew) {\n      if (link.title.trim() === '' && link.url.trim() === '') {\n        setIsNew(false);\n        setEditIndex(null);\n        return;\n      } else {\n        setEditIndex(null);\n        setIsNew(false);\n      }\n    }\n\n    const update = cloneDeep(linksSafe);\n    update[index] = link;\n    onChange(update);\n    setEditIndex(null);\n  };\n\n  const onDataLinkAdd = () => {\n    let update = cloneDeep(linksSafe);\n    setEditIndex(update.length);\n    setIsNew(true);\n  };\n\n  const onDataLinkCancel = index => {\n    if (isNew) {\n      setIsNew(false);\n    }\n\n    setEditIndex(null);\n  };\n\n  const onDataLinkRemove = index => {\n    const update = cloneDeep(linksSafe);\n    update.splice(index, 1);\n    onChange(update);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [linksSafe.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.wrapper,\n      children: linksSafe.map((l, i) => {\n        return /*#__PURE__*/_jsx(DataLinksListItem, {\n          index: i,\n          link: l,\n          onChange: onDataLinkChange,\n          onEdit: () => setEditIndex(i),\n          onRemove: () => onDataLinkRemove(i),\n          data: data\n        }, `${l.title}/${i}`);\n      })\n    }), isEditing && editIndex !== null && /*#__PURE__*/_jsx(Modal, {\n      title: \"Edit link\",\n      isOpen: true,\n      closeOnBackdropClick: false,\n      onDismiss: () => {\n        onDataLinkCancel(editIndex);\n      },\n      children: /*#__PURE__*/_jsx(DataLinkEditorModalContent, {\n        index: editIndex,\n        link: isNew ? {\n          title: '',\n          url: ''\n        } : linksSafe[editIndex],\n        data: data,\n        onSave: onDataLinkChange,\n        onCancel: onDataLinkCancel,\n        getSuggestions: getSuggestions\n      })\n    }), /*#__PURE__*/_jsx(Button, {\n      size: \"sm\",\n      icon: \"plus\",\n      onClick: onDataLinkAdd,\n      variant: \"secondary\",\n      children: \"Add link\"\n    })]\n  });\n};\nconst getDataLinksInlineEditorStyles = stylesFactory(theme => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing(2)};\n    `\n  };\n});","map":{"version":3,"names":["css","cloneDeep","React","useState","stylesFactory","useTheme2","Button","Modal","DataLinkEditorModalContent","DataLinksListItem","DataLinksInlineEditor","links","onChange","getSuggestions","data","theme","editIndex","setEditIndex","isNew","setIsNew","styles","getDataLinksInlineEditorStyles","linksSafe","isEditing","onDataLinkChange","index","link","title","trim","url","update","onDataLinkAdd","length","onDataLinkCancel","onDataLinkRemove","splice","wrapper","map","l","i","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataLinks/DataLinksInlineEditor/DataLinksInlineEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { DataFrame, DataLink, GrafanaTheme2, VariableSuggestion } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { Button } from '../../Button/Button';\nimport { Modal } from '../../Modal/Modal';\n\nimport { DataLinkEditorModalContent } from './DataLinkEditorModalContent';\nimport { DataLinksListItem } from './DataLinksListItem';\n\ninterface DataLinksInlineEditorProps {\n  links?: DataLink[];\n  onChange: (links: DataLink[]) => void;\n  getSuggestions: () => VariableSuggestion[];\n  data: DataFrame[];\n}\n\nexport const DataLinksInlineEditor: React.FC<DataLinksInlineEditorProps> = ({\n  links,\n  onChange,\n  getSuggestions,\n  data,\n}) => {\n  const theme = useTheme2();\n  const [editIndex, setEditIndex] = useState<number | null>(null);\n  const [isNew, setIsNew] = useState(false);\n\n  const styles = getDataLinksInlineEditorStyles(theme);\n  const linksSafe: DataLink[] = links ?? [];\n  const isEditing = editIndex !== null;\n\n  const onDataLinkChange = (index: number, link: DataLink) => {\n    if (isNew) {\n      if (link.title.trim() === '' && link.url.trim() === '') {\n        setIsNew(false);\n        setEditIndex(null);\n        return;\n      } else {\n        setEditIndex(null);\n        setIsNew(false);\n      }\n    }\n    const update = cloneDeep(linksSafe);\n    update[index] = link;\n    onChange(update);\n    setEditIndex(null);\n  };\n\n  const onDataLinkAdd = () => {\n    let update = cloneDeep(linksSafe);\n    setEditIndex(update.length);\n    setIsNew(true);\n  };\n\n  const onDataLinkCancel = (index: number) => {\n    if (isNew) {\n      setIsNew(false);\n    }\n    setEditIndex(null);\n  };\n\n  const onDataLinkRemove = (index: number) => {\n    const update = cloneDeep(linksSafe);\n    update.splice(index, 1);\n    onChange(update);\n  };\n\n  return (\n    <>\n      {linksSafe.length > 0 && (\n        <div className={styles.wrapper}>\n          {linksSafe.map((l, i) => {\n            return (\n              <DataLinksListItem\n                key={`${l.title}/${i}`}\n                index={i}\n                link={l}\n                onChange={onDataLinkChange}\n                onEdit={() => setEditIndex(i)}\n                onRemove={() => onDataLinkRemove(i)}\n                data={data}\n              />\n            );\n          })}\n        </div>\n      )}\n\n      {isEditing && editIndex !== null && (\n        <Modal\n          title=\"Edit link\"\n          isOpen={true}\n          closeOnBackdropClick={false}\n          onDismiss={() => {\n            onDataLinkCancel(editIndex);\n          }}\n        >\n          <DataLinkEditorModalContent\n            index={editIndex}\n            link={isNew ? { title: '', url: '' } : linksSafe[editIndex]}\n            data={data}\n            onSave={onDataLinkChange}\n            onCancel={onDataLinkCancel}\n            getSuggestions={getSuggestions}\n          />\n        </Modal>\n      )}\n\n      <Button size=\"sm\" icon=\"plus\" onClick={onDataLinkAdd} variant=\"secondary\">\n        Add link\n      </Button>\n    </>\n  );\n};\n\nconst getDataLinksInlineEditorStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}