{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport React, { Component, createRef } from 'react';\nimport { withTheme2, stylesFactory } from '../../themes';\nimport { closePopover } from '../../utils/closePopover';\nimport { Popover } from '../Tooltip/Popover';\nimport { PopoverController } from '../Tooltip/PopoverController';\nimport { ColorPickerPopover } from './ColorPickerPopover';\nimport { ColorSwatch } from './ColorSwatch';\nimport { SeriesColorPickerPopover } from './SeriesColorPickerPopover';\n/**\n * If you need custom trigger for the color picker you can do that with a render prop pattern and supply a function\n * as a child. You will get show/hide function which you can map to desired interaction (like onClick or onMouseLeave)\n * and a ref which needs to be passed to an HTMLElement for correct positioning. If you want to use class or functional\n * component as a custom trigger you will need to forward the reference to first HTMLElement child.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const colorPickerFactory = (popover, displayName = 'ColorPicker') => {\n  var _class;\n\n  return _class = class ColorPicker extends Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"pickerTriggerRef\", /*#__PURE__*/createRef());\n    }\n\n    render() {\n      const {\n        theme,\n        children,\n        onChange\n      } = this.props;\n      const styles = getStyles(theme);\n      const popoverElement = /*#__PURE__*/React.createElement(popover, Object.assign({}, Object.assign({}, this.props, {\n        children: null\n      }), {\n        onChange\n      }));\n      return /*#__PURE__*/_jsx(PopoverController, {\n        content: popoverElement,\n        hideAfter: 300,\n        children: (showPopper, hidePopper, popperProps) => {\n          return /*#__PURE__*/_jsxs(_Fragment, {\n            children: [this.pickerTriggerRef.current && /*#__PURE__*/_jsx(Popover, Object.assign({}, popperProps, {\n              referenceElement: this.pickerTriggerRef.current,\n              wrapperClassName: styles.colorPicker,\n              onMouseLeave: hidePopper,\n              onMouseEnter: showPopper,\n              onKeyDown: event => closePopover(event, hidePopper)\n            })), children ? // Children have a bit weird type due to intersection used in the definition so we need to cast here,\n            // but the definition is correct and should not allow to pass a children that does not conform to\n            // ColorPickerTriggerRenderer type.\n            children({\n              ref: this.pickerTriggerRef,\n              showColorPicker: showPopper,\n              hideColorPicker: hidePopper\n            }) : /*#__PURE__*/_jsx(ColorSwatch, {\n              ref: this.pickerTriggerRef,\n              onClick: showPopper,\n              onMouseLeave: hidePopper,\n              color: theme.visualization.getColorByName(this.props.color || '#000000')\n            })]\n          });\n        }\n      });\n    }\n\n  }, _defineProperty(_class, \"displayName\", displayName), _class;\n};\nexport const ColorPicker = withTheme2(colorPickerFactory(ColorPickerPopover, 'ColorPicker'));\nexport const SeriesColorPicker = withTheme2(colorPickerFactory(SeriesColorPickerPopover, 'SeriesColorPicker'));\nconst getStyles = stylesFactory(theme => {\n  return {\n    colorPicker: css`\n      position: absolute;\n      z-index: ${theme.zIndex.tooltip};\n      color: ${theme.colors.text.primary};\n      max-width: 400px;\n      font-size: ${theme.typography.size.sm};\n      // !important because these styles are also provided to popper via .popper classes from Tooltip component\n      // hope to get rid of those soon\n      padding: 15px !important;\n      & [data-placement^='top'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='bottom'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='left'] {\n        padding-top: 0 !important;\n      }\n      & [data-placement^='right'] {\n        padding-top: 0 !important;\n      }\n    `\n  };\n});","map":{"version":3,"names":["css","React","Component","createRef","withTheme2","stylesFactory","closePopover","Popover","PopoverController","ColorPickerPopover","ColorSwatch","SeriesColorPickerPopover","colorPickerFactory","popover","displayName","ColorPicker","render","theme","children","onChange","props","styles","getStyles","popoverElement","createElement","showPopper","hidePopper","popperProps","pickerTriggerRef","current","colorPicker","event","ref","showColorPicker","hideColorPicker","visualization","getColorByName","color","SeriesColorPicker","zIndex","tooltip","colors","text","primary","typography","size","sm"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { Component, createRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2, stylesFactory } from '../../themes';\nimport { closePopover } from '../../utils/closePopover';\nimport { Popover } from '../Tooltip/Popover';\nimport { PopoverController } from '../Tooltip/PopoverController';\n\nimport { ColorPickerPopover, ColorPickerProps } from './ColorPickerPopover';\nimport { ColorSwatch } from './ColorSwatch';\nimport { SeriesColorPickerPopover } from './SeriesColorPickerPopover';\n\n/**\n * If you need custom trigger for the color picker you can do that with a render prop pattern and supply a function\n * as a child. You will get show/hide function which you can map to desired interaction (like onClick or onMouseLeave)\n * and a ref which needs to be passed to an HTMLElement for correct positioning. If you want to use class or functional\n * component as a custom trigger you will need to forward the reference to first HTMLElement child.\n */\ntype ColorPickerTriggerRenderer = (props: {\n  // This should be a React.RefObject<HTMLElement> but due to how object refs are defined you cannot downcast from that\n  // to a specific type like React.RefObject<HTMLDivElement> even though it would be fine in runtime.\n  ref: React.RefObject<any>;\n  showColorPicker: () => void;\n  hideColorPicker: () => void;\n}) => React.ReactNode;\n\nexport const colorPickerFactory = <T extends ColorPickerProps>(\n  popover: React.ComponentType<T>,\n  displayName = 'ColorPicker'\n) => {\n  return class ColorPicker extends Component<T & { children?: ColorPickerTriggerRenderer }, any> {\n    static displayName = displayName;\n    pickerTriggerRef = createRef<any>();\n\n    render() {\n      const { theme, children, onChange } = this.props;\n      const styles = getStyles(theme);\n      const popoverElement = React.createElement(popover, {\n        ...{ ...this.props, children: null },\n        onChange,\n      });\n\n      return (\n        <PopoverController content={popoverElement} hideAfter={300}>\n          {(showPopper, hidePopper, popperProps) => {\n            return (\n              <>\n                {this.pickerTriggerRef.current && (\n                  <Popover\n                    {...popperProps}\n                    referenceElement={this.pickerTriggerRef.current}\n                    wrapperClassName={styles.colorPicker}\n                    onMouseLeave={hidePopper}\n                    onMouseEnter={showPopper}\n                    onKeyDown={(event) => closePopover(event, hidePopper)}\n                  />\n                )}\n\n                {children ? (\n                  // Children have a bit weird type due to intersection used in the definition so we need to cast here,\n                  // but the definition is correct and should not allow to pass a children that does not conform to\n                  // ColorPickerTriggerRenderer type.\n                  (children as ColorPickerTriggerRenderer)({\n                    ref: this.pickerTriggerRef,\n                    showColorPicker: showPopper,\n                    hideColorPicker: hidePopper,\n                  })\n                ) : (\n                  <ColorSwatch\n                    ref={this.pickerTriggerRef}\n                    onClick={showPopper}\n                    onMouseLeave={hidePopper}\n                    color={theme.visualization.getColorByName(this.props.color || '#000000')}\n                  />\n                )}\n              </>\n            );\n          }}\n        </PopoverController>\n      );\n    }\n  };\n};\n\nexport const ColorPicker = withTheme2(colorPickerFactory(ColorPickerPopover, 'ColorPicker'));\nexport const SeriesColorPicker = withTheme2(colorPickerFactory(SeriesColorPickerPopover, 'SeriesColorPicker'));\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    colorPicker: css`\n      position: absolute;\n      z-index: ${theme.zIndex.tooltip};\n      color: ${theme.colors.text.primary};\n      max-width: 400px;\n      font-size: ${theme.typography.size.sm};\n      // !important because these styles are also provided to popper via .popper classes from Tooltip component\n      // hope to get rid of those soon\n      padding: 15px !important;\n      & [data-placement^='top'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='bottom'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='left'] {\n        padding-top: 0 !important;\n      }\n      & [data-placement^='right'] {\n        padding-top: 0 !important;\n      }\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}