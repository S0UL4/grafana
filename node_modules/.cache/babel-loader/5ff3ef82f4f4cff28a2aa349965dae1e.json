{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles } from '@grafana/ui';\nimport { OptionsPaneOptions } from './OptionsPaneOptions';\nimport { VisualizationButton } from './VisualizationButton';\nimport { VisualizationSelectPane } from './VisualizationSelectPane';\nimport { usePanelLatestData } from './usePanelLatestData';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const OptionsPane = ({\n  plugin,\n  panel,\n  onFieldConfigsChange,\n  onPanelOptionsChanged,\n  onPanelConfigChange,\n  dashboard,\n  instanceState\n}) => {\n  const styles = useStyles(getStyles);\n  const isVizPickerOpen = useSelector(state => state.panelEditor.isVizPickerOpen);\n  const {\n    data\n  } = usePanelLatestData(panel, {\n    withTransforms: true,\n    withFieldConfig: false\n  }, true);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    \"aria-label\": selectors.components.PanelEditor.OptionsPane.content,\n    children: [!isVizPickerOpen && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.vizButtonWrapper,\n        children: /*#__PURE__*/_jsx(VisualizationButton, {\n          panel: panel\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.optionsWrapper,\n        children: /*#__PURE__*/_jsx(OptionsPaneOptions, {\n          panel: panel,\n          dashboard: dashboard,\n          plugin: plugin,\n          instanceState: instanceState,\n          data: data,\n          onFieldConfigsChange: onFieldConfigsChange,\n          onPanelOptionsChanged: onPanelOptionsChanged,\n          onPanelConfigChange: onPanelConfigChange\n        })\n      })]\n    }), isVizPickerOpen && /*#__PURE__*/_jsx(VisualizationSelectPane, {\n      panel: panel,\n      data: data\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      height: 100%;\n      width: 100%;\n      display: flex;\n      flex: 1 1 0;\n      flex-direction: column;\n      padding: 0;\n    `,\n    optionsWrapper: css`\n      flex-grow: 1;\n      min-height: 0;\n    `,\n    vizButtonWrapper: css`\n      padding: 0 ${theme.spacing.md} ${theme.spacing.md} 0;\n    `,\n    legacyOptions: css`\n      label: legacy-options;\n      .panel-options-grid {\n        display: flex;\n        flex-direction: column;\n      }\n      .panel-options-group {\n        margin-bottom: 0;\n      }\n      .panel-options-group__body {\n        padding: ${theme.spacing.md} 0;\n      }\n\n      .section {\n        display: block;\n        margin: ${theme.spacing.md} 0;\n\n        &:first-child {\n          margin-top: 0;\n        }\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","React","useSelector","selectors","useStyles","OptionsPaneOptions","VisualizationButton","VisualizationSelectPane","usePanelLatestData","OptionsPane","plugin","panel","onFieldConfigsChange","onPanelOptionsChanged","onPanelConfigChange","dashboard","instanceState","styles","getStyles","isVizPickerOpen","state","panelEditor","data","withTransforms","withFieldConfig","wrapper","components","PanelEditor","content","vizButtonWrapper","optionsWrapper","theme","spacing","md","legacyOptions"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/OptionsPane.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles } from '@grafana/ui';\nimport { StoreState } from 'app/types';\n\nimport { OptionsPaneOptions } from './OptionsPaneOptions';\nimport { VisualizationButton } from './VisualizationButton';\nimport { VisualizationSelectPane } from './VisualizationSelectPane';\nimport { OptionPaneRenderProps } from './types';\nimport { usePanelLatestData } from './usePanelLatestData';\n\nexport const OptionsPane: React.FC<OptionPaneRenderProps> = ({\n  plugin,\n  panel,\n  onFieldConfigsChange,\n  onPanelOptionsChanged,\n  onPanelConfigChange,\n  dashboard,\n  instanceState,\n}) => {\n  const styles = useStyles(getStyles);\n  const isVizPickerOpen = useSelector((state: StoreState) => state.panelEditor.isVizPickerOpen);\n  const { data } = usePanelLatestData(panel, { withTransforms: true, withFieldConfig: false }, true);\n\n  return (\n    <div className={styles.wrapper} aria-label={selectors.components.PanelEditor.OptionsPane.content}>\n      {!isVizPickerOpen && (\n        <>\n          <div className={styles.vizButtonWrapper}>\n            <VisualizationButton panel={panel} />\n          </div>\n          <div className={styles.optionsWrapper}>\n            <OptionsPaneOptions\n              panel={panel}\n              dashboard={dashboard}\n              plugin={plugin}\n              instanceState={instanceState}\n              data={data}\n              onFieldConfigsChange={onFieldConfigsChange}\n              onPanelOptionsChanged={onPanelOptionsChanged}\n              onPanelConfigChange={onPanelConfigChange}\n            />\n          </div>\n        </>\n      )}\n      {isVizPickerOpen && <VisualizationSelectPane panel={panel} data={data} />}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    wrapper: css`\n      height: 100%;\n      width: 100%;\n      display: flex;\n      flex: 1 1 0;\n      flex-direction: column;\n      padding: 0;\n    `,\n    optionsWrapper: css`\n      flex-grow: 1;\n      min-height: 0;\n    `,\n    vizButtonWrapper: css`\n      padding: 0 ${theme.spacing.md} ${theme.spacing.md} 0;\n    `,\n    legacyOptions: css`\n      label: legacy-options;\n      .panel-options-grid {\n        display: flex;\n        flex-direction: column;\n      }\n      .panel-options-group {\n        margin-bottom: 0;\n      }\n      .panel-options-group__body {\n        padding: ${theme.spacing.md} 0;\n      }\n\n      .section {\n        display: block;\n        margin: ${theme.spacing.md} 0;\n\n        &:first-child {\n          margin-top: 0;\n        }\n      }\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;;;;AAEA,OAAO,MAAMC,WAA4C,GAAG,CAAC;EAC3DC,MAD2D;EAE3DC,KAF2D;EAG3DC,oBAH2D;EAI3DC,qBAJ2D;EAK3DC,mBAL2D;EAM3DC,SAN2D;EAO3DC;AAP2D,CAAD,KAQtD;EACJ,MAAMC,MAAM,GAAGb,SAAS,CAACc,SAAD,CAAxB;EACA,MAAMC,eAAe,GAAGjB,WAAW,CAAEkB,KAAD,IAAuBA,KAAK,CAACC,WAAN,CAAkBF,eAA1C,CAAnC;EACA,MAAM;IAAEG;EAAF,IAAWd,kBAAkB,CAACG,KAAD,EAAQ;IAAEY,cAAc,EAAE,IAAlB;IAAwBC,eAAe,EAAE;EAAzC,CAAR,EAA0D,IAA1D,CAAnC;EAEA,oBACE;IAAK,SAAS,EAAEP,MAAM,CAACQ,OAAvB;IAAgC,cAAYtB,SAAS,CAACuB,UAAV,CAAqBC,WAArB,CAAiClB,WAAjC,CAA6CmB,OAAzF;IAAA,WACG,CAACT,eAAD,iBACC;MAAA,wBACE;QAAK,SAAS,EAAEF,MAAM,CAACY,gBAAvB;QAAA,uBACE,KAAC,mBAAD;UAAqB,KAAK,EAAElB;QAA5B;MADF,EADF,eAIE;QAAK,SAAS,EAAEM,MAAM,CAACa,cAAvB;QAAA,uBACE,KAAC,kBAAD;UACE,KAAK,EAAEnB,KADT;UAEE,SAAS,EAAEI,SAFb;UAGE,MAAM,EAAEL,MAHV;UAIE,aAAa,EAAEM,aAJjB;UAKE,IAAI,EAAEM,IALR;UAME,oBAAoB,EAAEV,oBANxB;UAOE,qBAAqB,EAAEC,qBAPzB;UAQE,mBAAmB,EAAEC;QARvB;MADF,EAJF;IAAA,EAFJ,EAoBGK,eAAe,iBAAI,KAAC,uBAAD;MAAyB,KAAK,EAAER,KAAhC;MAAuC,IAAI,EAAEW;IAA7C,EApBtB;EAAA,EADF;AAwBD,CArCM;;AAuCP,MAAMJ,SAAS,GAAIa,KAAD,IAAyB;EACzC,OAAO;IACLN,OAAO,EAAEzB,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KARS;IASL8B,cAAc,EAAE9B,GAAI;AACxB;AACA;AACA,KAZS;IAaL6B,gBAAgB,EAAE7B,GAAI;AAC1B,mBAAmB+B,KAAK,CAACC,OAAN,CAAcC,EAAG,IAAGF,KAAK,CAACC,OAAN,CAAcC,EAAG;AACxD,KAfS;IAgBLC,aAAa,EAAElC,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB+B,KAAK,CAACC,OAAN,CAAcC,EAAG;AACpC;AACA;AACA;AACA;AACA,kBAAkBF,KAAK,CAACC,OAAN,CAAcC,EAAG;AACnC;AACA;AACA;AACA;AACA;AACA;EArCS,CAAP;AAuCD,CAxCD"},"metadata":{},"sourceType":"module"}