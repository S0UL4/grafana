{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\nimport { useStyles2 } from '../../../themes';\nimport { RadioButtonDot } from './RadioButtonDot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function RadioButtonList({\n  name,\n  id,\n  options,\n  value,\n  onChange,\n  className,\n  disabled,\n  disabledOptions = []\n}) {\n  const styles = useStyles2(getStyles);\n  const internalId = id !== null && id !== void 0 ? id : uniqueId('radiogroup-list-');\n  return /*#__PURE__*/_jsx(\"div\", {\n    id: id,\n    className: cx(styles.container, className),\n    role: \"radiogroup\",\n    children: options.map((option, index) => {\n      const itemId = `${internalId}-${index}`;\n      const isChecked = value && value === option.value;\n      const isDisabled = disabled || disabledOptions.some(optionValue => optionValue === option.value);\n\n      const handleChange = () => onChange && option.value && onChange(option.value);\n\n      return /*#__PURE__*/_jsx(RadioButtonDot, {\n        id: itemId,\n        name: name,\n        label: option.label,\n        description: option.description,\n        checked: isChecked,\n        disabled: isDisabled,\n        onChange: handleChange\n      }, itemId);\n    })\n  });\n}\n\nconst getStyles = theme => ({\n  container: css`\n    display: grid;\n    gap: ${theme.spacing(1)};\n  `\n});","map":{"version":3,"names":["css","cx","uniqueId","React","useStyles2","RadioButtonDot","RadioButtonList","name","id","options","value","onChange","className","disabled","disabledOptions","styles","getStyles","internalId","container","map","option","index","itemId","isChecked","isDisabled","some","optionValue","handleChange","label","description","theme","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/RadioButtonList/RadioButtonList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\nimport { RadioButtonDot } from './RadioButtonDot';\n\nexport interface RadioButtonListProps<T> {\n  /** A name of a radio group. Used to group multiple radio inputs into a single group */\n  name: string;\n  id?: string;\n  /** An array of available options */\n  options: Array<SelectableValue<T>>;\n  value?: T;\n  onChange?: (value: T) => void;\n  /** Disables all elements in the list */\n  disabled?: boolean;\n  /** Disables subset of elements in the list. Compares values using the === operator */\n  disabledOptions?: T[];\n  className?: string;\n}\n\nexport function RadioButtonList<T>({\n  name,\n  id,\n  options,\n  value,\n  onChange,\n  className,\n  disabled,\n  disabledOptions = [],\n}: RadioButtonListProps<T>) {\n  const styles = useStyles2(getStyles);\n  const internalId = id ?? uniqueId('radiogroup-list-');\n\n  return (\n    <div id={id} className={cx(styles.container, className)} role=\"radiogroup\">\n      {options.map((option, index) => {\n        const itemId = `${internalId}-${index}`;\n\n        const isChecked = value && value === option.value;\n        const isDisabled = disabled || disabledOptions.some((optionValue) => optionValue === option.value);\n\n        const handleChange = () => onChange && option.value && onChange(option.value);\n\n        return (\n          <RadioButtonDot\n            key={itemId}\n            id={itemId}\n            name={name}\n            label={option.label}\n            description={option.description}\n            checked={isChecked}\n            disabled={isDisabled}\n            onChange={handleChange}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    display: grid;\n    gap: ${theme.spacing(1)};\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;AAiBA,OAAO,SAASC,eAAT,CAA4B;EACjCC,IADiC;EAEjCC,EAFiC;EAGjCC,OAHiC;EAIjCC,KAJiC;EAKjCC,QALiC;EAMjCC,SANiC;EAOjCC,QAPiC;EAQjCC,eAAe,GAAG;AARe,CAA5B,EASqB;EAC1B,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EACA,MAAMC,UAAU,GAAGT,EAAH,aAAGA,EAAH,cAAGA,EAAH,GAASN,QAAQ,CAAC,kBAAD,CAAjC;EAEA,oBACE;IAAK,EAAE,EAAEM,EAAT;IAAa,SAAS,EAAEP,EAAE,CAACc,MAAM,CAACG,SAAR,EAAmBN,SAAnB,CAA1B;IAAyD,IAAI,EAAC,YAA9D;IAAA,UACGH,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;MAC9B,MAAMC,MAAM,GAAI,GAAEL,UAAW,IAAGI,KAAM,EAAtC;MAEA,MAAME,SAAS,GAAGb,KAAK,IAAIA,KAAK,KAAKU,MAAM,CAACV,KAA5C;MACA,MAAMc,UAAU,GAAGX,QAAQ,IAAIC,eAAe,CAACW,IAAhB,CAAsBC,WAAD,IAAiBA,WAAW,KAAKN,MAAM,CAACV,KAA7D,CAA/B;;MAEA,MAAMiB,YAAY,GAAG,MAAMhB,QAAQ,IAAIS,MAAM,CAACV,KAAnB,IAA4BC,QAAQ,CAACS,MAAM,CAACV,KAAR,CAA/D;;MAEA,oBACE,KAAC,cAAD;QAEE,EAAE,EAAEY,MAFN;QAGE,IAAI,EAAEf,IAHR;QAIE,KAAK,EAAEa,MAAM,CAACQ,KAJhB;QAKE,WAAW,EAAER,MAAM,CAACS,WALtB;QAME,OAAO,EAAEN,SANX;QAOE,QAAQ,EAAEC,UAPZ;QAQE,QAAQ,EAAEG;MARZ,GACOL,MADP,CADF;IAYD,CApBA;EADH,EADF;AAyBD;;AAED,MAAMN,SAAS,GAAIc,KAAD,KAA2B;EAC3CZ,SAAS,EAAElB,GAAI;AACjB;AACA,WAAW8B,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AAC5B;AAJ6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}