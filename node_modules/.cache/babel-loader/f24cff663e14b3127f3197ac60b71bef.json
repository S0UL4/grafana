{"ast":null,"code":"import React from 'react';\nimport { TextArea, InlineFormLabel, Input, Select, HorizontalGroup } from '@grafana/ui';\nimport { RESULT_FORMATS, DEFAULT_RESULT_FORMAT } from './constants';\nimport { useShadowedState } from './useShadowedState';\nimport { useUniqueId } from './useUniqueId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// we handle 3 fields: \"query\", \"alias\", \"resultFormat\"\n// \"resultFormat\" changes are applied immediately\n// \"query\" and \"alias\" changes only happen on onblur\nexport const RawInfluxQLEditor = ({\n  query,\n  onChange,\n  onRunQuery\n}) => {\n  var _query$resultFormat;\n\n  const [currentQuery, setCurrentQuery] = useShadowedState(query.query);\n  const [currentAlias, setCurrentAlias] = useShadowedState(query.alias);\n  const aliasElementId = useUniqueId();\n  const selectElementId = useUniqueId();\n  const resultFormat = (_query$resultFormat = query.resultFormat) !== null && _query$resultFormat !== void 0 ? _query$resultFormat : DEFAULT_RESULT_FORMAT;\n\n  const applyDelayedChangesAndRunQuery = () => {\n    onChange(Object.assign({}, query, {\n      query: currentQuery,\n      alias: currentAlias,\n      resultFormat\n    }));\n    onRunQuery();\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(TextArea, {\n      \"aria-label\": \"query\",\n      rows: 3,\n      spellCheck: false,\n      placeholder: \"InfluxDB Query\",\n      onBlur: applyDelayedChangesAndRunQuery,\n      onChange: e => {\n        setCurrentQuery(e.currentTarget.value);\n      },\n      value: currentQuery !== null && currentQuery !== void 0 ? currentQuery : ''\n    }), /*#__PURE__*/_jsxs(HorizontalGroup, {\n      children: [/*#__PURE__*/_jsx(InlineFormLabel, {\n        htmlFor: selectElementId,\n        children: \"Format as\"\n      }), /*#__PURE__*/_jsx(Select, {\n        inputId: selectElementId,\n        onChange: v => {\n          onChange(Object.assign({}, query, {\n            resultFormat: v.value\n          }));\n          onRunQuery();\n        },\n        value: resultFormat,\n        options: RESULT_FORMATS\n      }), /*#__PURE__*/_jsx(InlineFormLabel, {\n        htmlFor: aliasElementId,\n        children: \"Alias by\"\n      }), /*#__PURE__*/_jsx(Input, {\n        id: aliasElementId,\n        type: \"text\",\n        spellCheck: false,\n        placeholder: \"Naming pattern\",\n        onBlur: applyDelayedChangesAndRunQuery,\n        onChange: e => {\n          setCurrentAlias(e.currentTarget.value);\n        },\n        value: currentAlias !== null && currentAlias !== void 0 ? currentAlias : ''\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","TextArea","InlineFormLabel","Input","Select","HorizontalGroup","RESULT_FORMATS","DEFAULT_RESULT_FORMAT","useShadowedState","useUniqueId","RawInfluxQLEditor","query","onChange","onRunQuery","currentQuery","setCurrentQuery","currentAlias","setCurrentAlias","alias","aliasElementId","selectElementId","resultFormat","applyDelayedChangesAndRunQuery","e","currentTarget","value","v"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/RawInfluxQLEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { TextArea, InlineFormLabel, Input, Select, HorizontalGroup } from '@grafana/ui';\n\nimport { InfluxQuery } from '../types';\n\nimport { RESULT_FORMATS, DEFAULT_RESULT_FORMAT } from './constants';\nimport { useShadowedState } from './useShadowedState';\nimport { useUniqueId } from './useUniqueId';\n\ntype Props = {\n  query: InfluxQuery;\n  onChange: (query: InfluxQuery) => void;\n  onRunQuery: () => void;\n};\n\n// we handle 3 fields: \"query\", \"alias\", \"resultFormat\"\n// \"resultFormat\" changes are applied immediately\n// \"query\" and \"alias\" changes only happen on onblur\nexport const RawInfluxQLEditor = ({ query, onChange, onRunQuery }: Props): JSX.Element => {\n  const [currentQuery, setCurrentQuery] = useShadowedState(query.query);\n  const [currentAlias, setCurrentAlias] = useShadowedState(query.alias);\n  const aliasElementId = useUniqueId();\n  const selectElementId = useUniqueId();\n\n  const resultFormat = query.resultFormat ?? DEFAULT_RESULT_FORMAT;\n\n  const applyDelayedChangesAndRunQuery = () => {\n    onChange({\n      ...query,\n      query: currentQuery,\n      alias: currentAlias,\n      resultFormat,\n    });\n    onRunQuery();\n  };\n\n  return (\n    <div>\n      <TextArea\n        aria-label=\"query\"\n        rows={3}\n        spellCheck={false}\n        placeholder=\"InfluxDB Query\"\n        onBlur={applyDelayedChangesAndRunQuery}\n        onChange={(e) => {\n          setCurrentQuery(e.currentTarget.value);\n        }}\n        value={currentQuery ?? ''}\n      />\n      <HorizontalGroup>\n        <InlineFormLabel htmlFor={selectElementId}>Format as</InlineFormLabel>\n        <Select\n          inputId={selectElementId}\n          onChange={(v) => {\n            onChange({ ...query, resultFormat: v.value });\n            onRunQuery();\n          }}\n          value={resultFormat}\n          options={RESULT_FORMATS}\n        />\n        <InlineFormLabel htmlFor={aliasElementId}>Alias by</InlineFormLabel>\n        <Input\n          id={aliasElementId}\n          type=\"text\"\n          spellCheck={false}\n          placeholder=\"Naming pattern\"\n          onBlur={applyDelayedChangesAndRunQuery}\n          onChange={(e) => {\n            setCurrentAlias(e.currentTarget.value);\n          }}\n          value={currentAlias ?? ''}\n        />\n      </HorizontalGroup>\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,eAAnD,QAA0E,aAA1E;AAIA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,aAAtD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAQA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBC;AAAnB,CAAD,KAAyD;EAAA;;EACxF,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,gBAAgB,CAACG,KAAK,CAACA,KAAP,CAAxD;EACA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCT,gBAAgB,CAACG,KAAK,CAACO,KAAP,CAAxD;EACA,MAAMC,cAAc,GAAGV,WAAW,EAAlC;EACA,MAAMW,eAAe,GAAGX,WAAW,EAAnC;EAEA,MAAMY,YAAY,0BAAGV,KAAK,CAACU,YAAT,qEAAyBd,qBAA3C;;EAEA,MAAMe,8BAA8B,GAAG,MAAM;IAC3CV,QAAQ,mBACHD,KADG;MAENA,KAAK,EAAEG,YAFD;MAGNI,KAAK,EAAEF,YAHD;MAINK;IAJM,GAAR;IAMAR,UAAU;EACX,CARD;;EAUA,oBACE;IAAA,wBACE,KAAC,QAAD;MACE,cAAW,OADb;MAEE,IAAI,EAAE,CAFR;MAGE,UAAU,EAAE,KAHd;MAIE,WAAW,EAAC,gBAJd;MAKE,MAAM,EAAES,8BALV;MAME,QAAQ,EAAGC,CAAD,IAAO;QACfR,eAAe,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAf;MACD,CARH;MASE,KAAK,EAAEX,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB;IATzB,EADF,eAYE,MAAC,eAAD;MAAA,wBACE,KAAC,eAAD;QAAiB,OAAO,EAAEM,eAA1B;QAAA;MAAA,EADF,eAEE,KAAC,MAAD;QACE,OAAO,EAAEA,eADX;QAEE,QAAQ,EAAGM,CAAD,IAAO;UACfd,QAAQ,mBAAMD,KAAN;YAAaU,YAAY,EAAEK,CAAC,CAACD;UAA7B,GAAR;UACAZ,UAAU;QACX,CALH;QAME,KAAK,EAAEQ,YANT;QAOE,OAAO,EAAEf;MAPX,EAFF,eAWE,KAAC,eAAD;QAAiB,OAAO,EAAEa,cAA1B;QAAA;MAAA,EAXF,eAYE,KAAC,KAAD;QACE,EAAE,EAAEA,cADN;QAEE,IAAI,EAAC,MAFP;QAGE,UAAU,EAAE,KAHd;QAIE,WAAW,EAAC,gBAJd;QAKE,MAAM,EAAEG,8BALV;QAME,QAAQ,EAAGC,CAAD,IAAO;UACfN,eAAe,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAf;QACD,CARH;QASE,KAAK,EAAET,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB;MATzB,EAZF;IAAA,EAZF;EAAA,EADF;AAuCD,CAzDM"},"metadata":{},"sourceType":"module"}