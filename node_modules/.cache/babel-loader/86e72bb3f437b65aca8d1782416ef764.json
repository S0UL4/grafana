{"ast":null,"code":"import { VisibilityMode } from '@grafana/schema';\n/**\n * @alpha\n */\n\n/**\n * @alpha\n */\nexport const defaultPanelOptions = {\n  showValue: VisibilityMode.Auto,\n  alignValue: 'left',\n  mergeValues: true,\n  rowHeight: 0.9\n};\n/**\n * @alpha\n */\n\nexport const defaultTimelineFieldConfig = {\n  lineWidth: 0,\n  fillOpacity: 70\n};\n/**\n * @alpha\n */\n\nexport let TimelineMode;\n\n(function (TimelineMode) {\n  TimelineMode[\"Changes\"] = \"changes\";\n  TimelineMode[\"Samples\"] = \"samples\";\n})(TimelineMode || (TimelineMode = {}));","map":{"version":3,"names":["VisibilityMode","defaultPanelOptions","showValue","Auto","alignValue","mergeValues","rowHeight","defaultTimelineFieldConfig","lineWidth","fillOpacity","TimelineMode"],"sources":["/home/soula/grafana/public/app/plugins/panel/state-timeline/types.ts"],"sourcesContent":["import { DashboardCursorSync } from '@grafana/data';\nimport { HideableFieldConfig, OptionsWithLegend, OptionsWithTooltip, VisibilityMode } from '@grafana/schema';\n\n/**\n * @alpha\n */\nexport interface TimelineOptions extends OptionsWithLegend, OptionsWithTooltip {\n  mode: TimelineMode; // not in the saved model!\n\n  showValue: VisibilityMode;\n  rowHeight: number;\n\n  // only used for \"samples\" mode (status-history)\n  colWidth?: number;\n  // only used in \"changes\" mode (state-timeline)\n  mergeValues?: boolean;\n  // only used in \"changes\" mode (state-timeline)\n  alignValue?: TimelineValueAlignment;\n\n  sync?: () => DashboardCursorSync;\n  getValueColor?: (frameIdx: number, fieldIdx: number, value: any) => string;\n}\n\nexport type TimelineValueAlignment = 'center' | 'left' | 'right';\n\n/**\n * @alpha\n */\nexport interface TimelineFieldConfig extends HideableFieldConfig {\n  lineWidth?: number; // 0\n  fillOpacity?: number; // 100\n}\n\n/**\n * @alpha\n */\nexport const defaultPanelOptions: Partial<TimelineOptions> = {\n  showValue: VisibilityMode.Auto,\n  alignValue: 'left',\n  mergeValues: true,\n  rowHeight: 0.9,\n};\n\n/**\n * @alpha\n */\nexport const defaultTimelineFieldConfig: TimelineFieldConfig = {\n  lineWidth: 0,\n  fillOpacity: 70,\n};\n\n/**\n * @alpha\n */\nexport enum TimelineMode {\n  // state-timeline\n  Changes = 'changes',\n  // status-history\n  Samples = 'samples',\n}\n"],"mappings":"AACA,SAAqEA,cAArE,QAA2F,iBAA3F;AAEA;AACA;AACA;;AA4BA;AACA;AACA;AACA,OAAO,MAAMC,mBAA6C,GAAG;EAC3DC,SAAS,EAAEF,cAAc,CAACG,IADiC;EAE3DC,UAAU,EAAE,MAF+C;EAG3DC,WAAW,EAAE,IAH8C;EAI3DC,SAAS,EAAE;AAJgD,CAAtD;AAOP;AACA;AACA;;AACA,OAAO,MAAMC,0BAA+C,GAAG;EAC7DC,SAAS,EAAE,CADkD;EAE7DC,WAAW,EAAE;AAFgD,CAAxD;AAKP;AACA;AACA;;AACA,WAAYC,YAAZ;;WAAYA,Y;EAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y"},"metadata":{},"sourceType":"module"}