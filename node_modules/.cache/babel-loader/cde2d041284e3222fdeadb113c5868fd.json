{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { DataTransformerID, standardTransformers } from '@grafana/data';\nimport { histogramFieldInfo } from '@grafana/data/src/transformations/transformers/histogram';\nimport { InlineField, InlineFieldRow, InlineSwitch } from '@grafana/ui';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const HistogramTransformerEditor = ({\n  input,\n  options,\n  onChange\n}) => {\n  var _options$combine;\n\n  const labelWidth = 18;\n  const onBucketSizeChanged = useCallback(val => {\n    onChange(Object.assign({}, options, {\n      bucketSize: val\n    }));\n  }, [onChange, options]);\n  const onBucketOffsetChanged = useCallback(val => {\n    onChange(Object.assign({}, options, {\n      bucketOffset: val\n    }));\n  }, [onChange, options]);\n  const onToggleCombine = useCallback(() => {\n    onChange(Object.assign({}, options, {\n      combine: !options.combine\n    }));\n  }, [onChange, options]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n      children: /*#__PURE__*/_jsx(InlineField, {\n        labelWidth: labelWidth,\n        label: histogramFieldInfo.bucketSize.name,\n        tooltip: histogramFieldInfo.bucketSize.description,\n        children: /*#__PURE__*/_jsx(NumberInput, {\n          value: options.bucketSize,\n          placeholder: \"auto\",\n          onChange: onBucketSizeChanged,\n          min: 0\n        })\n      })\n    }), /*#__PURE__*/_jsx(InlineFieldRow, {\n      children: /*#__PURE__*/_jsx(InlineField, {\n        labelWidth: labelWidth,\n        label: histogramFieldInfo.bucketOffset.name,\n        tooltip: histogramFieldInfo.bucketOffset.description,\n        children: /*#__PURE__*/_jsx(NumberInput, {\n          value: options.bucketOffset,\n          placeholder: \"none\",\n          onChange: onBucketOffsetChanged,\n          min: 0\n        })\n      })\n    }), /*#__PURE__*/_jsx(InlineFieldRow, {\n      children: /*#__PURE__*/_jsx(InlineField, {\n        labelWidth: labelWidth,\n        label: histogramFieldInfo.combine.name,\n        tooltip: histogramFieldInfo.combine.description,\n        children: /*#__PURE__*/_jsx(InlineSwitch, {\n          value: (_options$combine = options.combine) !== null && _options$combine !== void 0 ? _options$combine : false,\n          onChange: onToggleCombine\n        })\n      })\n    })]\n  });\n};\nexport const histogramTransformRegistryItem = {\n  id: DataTransformerID.histogram,\n  editor: HistogramTransformerEditor,\n  transformation: standardTransformers.histogramTransformer,\n  name: standardTransformers.histogramTransformer.name,\n  description: standardTransformers.histogramTransformer.description\n};","map":{"version":3,"names":["React","useCallback","DataTransformerID","standardTransformers","histogramFieldInfo","InlineField","InlineFieldRow","InlineSwitch","NumberInput","HistogramTransformerEditor","input","options","onChange","labelWidth","onBucketSizeChanged","val","bucketSize","onBucketOffsetChanged","bucketOffset","onToggleCombine","combine","name","description","histogramTransformRegistryItem","id","histogram","editor","transformation","histogramTransformer"],"sources":["/home/soula/grafana/public/app/features/transformers/editors/HistogramTransformerEditor.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { DataTransformerID, standardTransformers, TransformerRegistryItem, TransformerUIProps } from '@grafana/data';\nimport {\n  HistogramTransformerOptions,\n  histogramFieldInfo,\n} from '@grafana/data/src/transformations/transformers/histogram';\nimport { InlineField, InlineFieldRow, InlineSwitch } from '@grafana/ui';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\n\nexport const HistogramTransformerEditor: React.FC<TransformerUIProps<HistogramTransformerOptions>> = ({\n  input,\n  options,\n  onChange,\n}) => {\n  const labelWidth = 18;\n\n  const onBucketSizeChanged = useCallback(\n    (val?: number) => {\n      onChange({\n        ...options,\n        bucketSize: val,\n      });\n    },\n    [onChange, options]\n  );\n\n  const onBucketOffsetChanged = useCallback(\n    (val?: number) => {\n      onChange({\n        ...options,\n        bucketOffset: val,\n      });\n    },\n    [onChange, options]\n  );\n\n  const onToggleCombine = useCallback(() => {\n    onChange({\n      ...options,\n      combine: !options.combine,\n    });\n  }, [onChange, options]);\n\n  return (\n    <div>\n      <InlineFieldRow>\n        <InlineField\n          labelWidth={labelWidth}\n          label={histogramFieldInfo.bucketSize.name}\n          tooltip={histogramFieldInfo.bucketSize.description}\n        >\n          <NumberInput value={options.bucketSize} placeholder=\"auto\" onChange={onBucketSizeChanged} min={0} />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField\n          labelWidth={labelWidth}\n          label={histogramFieldInfo.bucketOffset.name}\n          tooltip={histogramFieldInfo.bucketOffset.description}\n        >\n          <NumberInput value={options.bucketOffset} placeholder=\"none\" onChange={onBucketOffsetChanged} min={0} />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField\n          labelWidth={labelWidth}\n          label={histogramFieldInfo.combine.name}\n          tooltip={histogramFieldInfo.combine.description}\n        >\n          <InlineSwitch value={options.combine ?? false} onChange={onToggleCombine} />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n};\n\nexport const histogramTransformRegistryItem: TransformerRegistryItem<HistogramTransformerOptions> = {\n  id: DataTransformerID.histogram,\n  editor: HistogramTransformerEditor,\n  transformation: standardTransformers.histogramTransformer,\n  name: standardTransformers.histogramTransformer.name,\n  description: standardTransformers.histogramTransformer.description,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAqG,eAArG;AACA,SAEEC,kBAFF,QAGO,0DAHP;AAIA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,QAA0D,aAA1D;AACA,SAASC,WAAT,QAA4B,2CAA5B;;;AAEA,OAAO,MAAMC,0BAAqF,GAAG,CAAC;EACpGC,KADoG;EAEpGC,OAFoG;EAGpGC;AAHoG,CAAD,KAI/F;EAAA;;EACJ,MAAMC,UAAU,GAAG,EAAnB;EAEA,MAAMC,mBAAmB,GAAGb,WAAW,CACpCc,GAAD,IAAkB;IAChBH,QAAQ,mBACHD,OADG;MAENK,UAAU,EAAED;IAFN,GAAR;EAID,CANoC,EAOrC,CAACH,QAAD,EAAWD,OAAX,CAPqC,CAAvC;EAUA,MAAMM,qBAAqB,GAAGhB,WAAW,CACtCc,GAAD,IAAkB;IAChBH,QAAQ,mBACHD,OADG;MAENO,YAAY,EAAEH;IAFR,GAAR;EAID,CANsC,EAOvC,CAACH,QAAD,EAAWD,OAAX,CAPuC,CAAzC;EAUA,MAAMQ,eAAe,GAAGlB,WAAW,CAAC,MAAM;IACxCW,QAAQ,mBACHD,OADG;MAENS,OAAO,EAAE,CAACT,OAAO,CAACS;IAFZ,GAAR;EAID,CALkC,EAKhC,CAACR,QAAD,EAAWD,OAAX,CALgC,CAAnC;EAOA,oBACE;IAAA,wBACE,KAAC,cAAD;MAAA,uBACE,KAAC,WAAD;QACE,UAAU,EAAEE,UADd;QAEE,KAAK,EAAET,kBAAkB,CAACY,UAAnB,CAA8BK,IAFvC;QAGE,OAAO,EAAEjB,kBAAkB,CAACY,UAAnB,CAA8BM,WAHzC;QAAA,uBAKE,KAAC,WAAD;UAAa,KAAK,EAAEX,OAAO,CAACK,UAA5B;UAAwC,WAAW,EAAC,MAApD;UAA2D,QAAQ,EAAEF,mBAArE;UAA0F,GAAG,EAAE;QAA/F;MALF;IADF,EADF,eAUE,KAAC,cAAD;MAAA,uBACE,KAAC,WAAD;QACE,UAAU,EAAED,UADd;QAEE,KAAK,EAAET,kBAAkB,CAACc,YAAnB,CAAgCG,IAFzC;QAGE,OAAO,EAAEjB,kBAAkB,CAACc,YAAnB,CAAgCI,WAH3C;QAAA,uBAKE,KAAC,WAAD;UAAa,KAAK,EAAEX,OAAO,CAACO,YAA5B;UAA0C,WAAW,EAAC,MAAtD;UAA6D,QAAQ,EAAED,qBAAvE;UAA8F,GAAG,EAAE;QAAnG;MALF;IADF,EAVF,eAmBE,KAAC,cAAD;MAAA,uBACE,KAAC,WAAD;QACE,UAAU,EAAEJ,UADd;QAEE,KAAK,EAAET,kBAAkB,CAACgB,OAAnB,CAA2BC,IAFpC;QAGE,OAAO,EAAEjB,kBAAkB,CAACgB,OAAnB,CAA2BE,WAHtC;QAAA,uBAKE,KAAC,YAAD;UAAc,KAAK,sBAAEX,OAAO,CAACS,OAAV,+DAAqB,KAAxC;UAA+C,QAAQ,EAAED;QAAzD;MALF;IADF,EAnBF;EAAA,EADF;AA+BD,CAjEM;AAmEP,OAAO,MAAMI,8BAAoF,GAAG;EAClGC,EAAE,EAAEtB,iBAAiB,CAACuB,SAD4E;EAElGC,MAAM,EAAEjB,0BAF0F;EAGlGkB,cAAc,EAAExB,oBAAoB,CAACyB,oBAH6D;EAIlGP,IAAI,EAAElB,oBAAoB,CAACyB,oBAArB,CAA0CP,IAJkD;EAKlGC,WAAW,EAAEnB,oBAAoB,CAACyB,oBAArB,CAA0CN;AAL2C,CAA7F"},"metadata":{},"sourceType":"module"}