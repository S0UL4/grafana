{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as d3 from 'd3';\nimport $ from 'jquery';\nimport { find, isEmpty, isNaN, isNil, isString, map, max, min, toNumber } from 'lodash';\nimport { dateTimeFormat, formattedValueToString, getValueFormat, LegacyGraphHoverClearEvent, LegacyGraphHoverEvent, PanelEvents, toUtc } from '@grafana/data';\nimport { graphTimeFormat } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport * as ticksUtils from 'app/core/utils/ticks';\nimport { getColorScale, getOpacityScale } from './color_scale';\nimport { mergeZeroBuckets } from './heatmap_data_converter';\nimport { HeatmapTooltip } from './heatmap_tooltip';\nconst MIN_CARD_SIZE = 1,\n      CARD_PADDING = 1,\n      CARD_ROUND = 0,\n      DATA_RANGE_WIDING_FACTOR = 1.2,\n      DEFAULT_X_TICK_SIZE_PX = 100,\n      DEFAULT_Y_TICK_SIZE_PX = 22.5,\n      X_AXIS_TICK_PADDING = 10,\n      Y_AXIS_TICK_PADDING = 5,\n      MIN_SELECTION_WIDTH = 2;\nexport default function rendering(scope, elem, attrs, ctrl) {\n  return new HeatmapRenderer(scope, elem, attrs, ctrl);\n}\nexport class HeatmapRenderer {\n  constructor(scope, elem, attrs, ctrl) {\n    _defineProperty(this, \"width\", 200);\n\n    _defineProperty(this, \"height\", 200);\n\n    _defineProperty(this, \"yScale\", void 0);\n\n    _defineProperty(this, \"xScale\", void 0);\n\n    _defineProperty(this, \"chartWidth\", 0);\n\n    _defineProperty(this, \"chartHeight\", 0);\n\n    _defineProperty(this, \"chartTop\", 0);\n\n    _defineProperty(this, \"chartBottom\", 0);\n\n    _defineProperty(this, \"yAxisWidth\", 0);\n\n    _defineProperty(this, \"xAxisHeight\", 0);\n\n    _defineProperty(this, \"cardPadding\", 0);\n\n    _defineProperty(this, \"cardRound\", 0);\n\n    _defineProperty(this, \"cardWidth\", 0);\n\n    _defineProperty(this, \"cardHeight\", 0);\n\n    _defineProperty(this, \"colorScale\", void 0);\n\n    _defineProperty(this, \"opacityScale\", void 0);\n\n    _defineProperty(this, \"mouseUpHandler\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"$heatmap\", void 0);\n\n    _defineProperty(this, \"tooltip\", void 0);\n\n    _defineProperty(this, \"heatmap\", void 0);\n\n    _defineProperty(this, \"timeRange\", void 0);\n\n    _defineProperty(this, \"selection\", void 0);\n\n    _defineProperty(this, \"padding\", void 0);\n\n    _defineProperty(this, \"margin\", void 0);\n\n    _defineProperty(this, \"dataRangeWidingFactor\", void 0);\n\n    _defineProperty(this, \"hoverEvent\", void 0);\n\n    this.scope = scope;\n    this.elem = elem;\n    this.ctrl = ctrl;\n    // $heatmap is JQuery object, but heatmap is D3\n    this.$heatmap = this.elem.find('.heatmap-panel');\n    this.tooltip = new HeatmapTooltip(this.$heatmap, this.scope);\n    this.selection = {\n      active: false,\n      x1: -1,\n      x2: -1\n    };\n    this.padding = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.margin = {\n      left: 25,\n      right: 15,\n      top: 10,\n      bottom: 20\n    };\n    this.dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\n    this.ctrl.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.ctrl.tickValueFormatter = this.tickValueFormatter.bind(this); /////////////////////////////\n    // Selection and crosshair //\n    /////////////////////////////\n    // Shared crosshair and tooltip\n\n    this.ctrl.dashboard.events.on(LegacyGraphHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope); // Register selection listeners\n\n    this.$heatmap.on('mousedown', this.onMouseDown.bind(this));\n    this.$heatmap.on('mousemove', this.onMouseMove.bind(this));\n    this.$heatmap.on('mouseleave', this.onMouseLeave.bind(this));\n    this.hoverEvent = new LegacyGraphHoverEvent({\n      pos: {},\n      point: {},\n      panel: this.panel\n    });\n  }\n\n  onGraphHoverClear() {\n    this.clearCrosshair();\n  }\n\n  onGraphHover(event) {\n    this.drawSharedCrosshair(event.pos);\n  }\n\n  onRender() {\n    this.render();\n    this.ctrl.renderingCompleted();\n  }\n\n  setElementHeight() {\n    try {\n      let height = this.ctrl.height || this.panel.height || this.ctrl.row.height;\n\n      if (isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= this.panel.legend.show ? 28 : 11; // bottom padding and space for legend\n\n      this.$heatmap.css('height', height + 'px');\n      return true;\n    } catch (e) {\n      // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  getYAxisWidth(elem) {\n    const panelYAxisWidth = this.getPanelYAxisWidth();\n\n    if (panelYAxisWidth !== null) {\n      return panelYAxisWidth + Y_AXIS_TICK_PADDING;\n    }\n\n    const axisText = elem.selectAll('.axis-y text').nodes();\n    const maxTextWidth = max(map(axisText, text => {\n      // Use SVG getBBox method\n      return text.getBBox().width;\n    }));\n    return maxTextWidth;\n  }\n\n  getXAxisHeight(elem) {\n    const axisLine = elem.select('.axis-x line');\n\n    if (!axisLine.empty()) {\n      const axisLinePosition = parseFloat(elem.select('.axis-x line').attr('y2'));\n      const canvasWidth = parseFloat(elem.attr('height'));\n      return canvasWidth - axisLinePosition;\n    } else {\n      // Default height\n      return 30;\n    }\n  }\n\n  addXAxis() {\n    this.scope.xScale = this.xScale = d3.scaleTime().domain([this.timeRange.from, this.timeRange.to]).range([0, this.chartWidth]);\n    const ticks = this.chartWidth / DEFAULT_X_TICK_SIZE_PX;\n    const format = graphTimeFormat(ticks, this.timeRange.from.valueOf(), this.timeRange.to.valueOf());\n    const timeZone = this.ctrl.dashboard.getTimezone();\n\n    const formatter = date => dateTimeFormat(date.valueOf(), {\n      format: format,\n      timeZone: timeZone\n    });\n\n    const xAxis = d3.axisBottom(this.xScale).ticks(ticks).tickFormat(formatter).tickPadding(X_AXIS_TICK_PADDING).tickSize(this.chartHeight);\n    const posY = this.margin.top;\n    const posX = this.yAxisWidth;\n    this.heatmap.append('g').attr('class', 'axis axis-x').attr('transform', 'translate(' + posX + ',' + posY + ')').call(xAxis); // Remove horizontal line in the top of axis labels (called domain in d3)\n\n    this.heatmap.select('.axis-x').select('.domain').remove();\n  }\n\n  addYAxis() {\n    let ticks = Math.ceil(this.chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n    let tickInterval = ticksUtils.tickStep(this.data.heatmapStats.min, this.data.heatmapStats.max, ticks);\n    let {\n      yMin,\n      yMax\n    } = this.wideYAxisRange(this.data.heatmapStats.min, this.data.heatmapStats.max, tickInterval); // Rewrite min and max if it have been set explicitly\n\n    yMin = this.panel.yAxis.min !== null ? this.panel.yAxis.min : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.panel.yAxis.max : yMax; // Adjust ticks after Y range widening\n\n    tickInterval = ticksUtils.tickStep(yMin, yMax, ticks);\n    ticks = Math.ceil((yMax - yMin) / tickInterval);\n    const decimalsAuto = ticksUtils.getPrecision(tickInterval);\n    let decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals; // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, ticks, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals; // Set default Y min and max if no data\n\n    if (isEmpty(this.data.buckets)) {\n      yMax = 1;\n      yMin = -1;\n      ticks = 3;\n      decimals = 1;\n    }\n\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: ticks\n    };\n    this.scope.yScale = this.yScale = d3.scaleLinear().domain([yMin, yMax]).range([this.chartHeight, 0]);\n    const yAxis = d3.axisLeft(this.yScale).ticks(ticks).tickFormat(this.tickValueFormatter(decimals, scaledDecimals)).tickSizeInner(0 - this.width).tickSizeOuter(0).tickPadding(Y_AXIS_TICK_PADDING);\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis); // Calculate Y axis width first, then move axis into visible area\n\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')'); // Remove vertical line in the right of axis labels (called domain in d3)\n\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  } // Wide Y values range and anjust to bucket size\n\n\n  wideYAxisRange(min, max, tickInterval) {\n    const yWiding = (max * (this.dataRangeWidingFactor - 1) - min * (this.dataRangeWidingFactor - 1)) / 2;\n    let yMin, yMax;\n\n    if (tickInterval === 0) {\n      yMax = max * this.dataRangeWidingFactor;\n      yMin = min - min * (this.dataRangeWidingFactor - 1);\n    } else {\n      yMax = Math.ceil((max + yWiding) / tickInterval) * tickInterval;\n      yMin = Math.floor((min - yWiding) / tickInterval) * tickInterval;\n    } // Don't wide axis below 0 if all values are positive\n\n\n    if (min >= 0 && yMin < 0) {\n      yMin = 0;\n    }\n\n    return {\n      yMin,\n      yMax\n    };\n  }\n\n  addLogYAxis() {\n    const logBase = this.panel.yAxis.logBase;\n    let {\n      yMin,\n      yMax\n    } = this.adjustLogRange(this.data.heatmapStats.minLog, this.data.heatmapStats.max, logBase);\n    yMin = this.panel.yAxis.min && this.panel.yAxis.min !== '0' ? this.adjustLogMin(this.panel.yAxis.min, logBase) : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.adjustLogMax(this.panel.yAxis.max, logBase) : yMax; // Set default Y min and max if no data\n\n    if (isEmpty(this.data.buckets)) {\n      yMax = Math.pow(logBase, 2);\n      yMin = 1;\n    }\n\n    this.scope.yScale = this.yScale = d3.scaleLog().base(this.panel.yAxis.logBase).domain([yMin, yMax]).range([this.chartHeight, 0]);\n    const domain = this.yScale.domain();\n    const tickValues = this.logScaleTickValues(domain, logBase);\n    const decimalsAuto = ticksUtils.getPrecision(yMin);\n    const decimals = this.panel.yAxis.decimals || decimalsAuto; // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, tickValues.length, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals;\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: tickValues.length\n    };\n    const yAxis = d3.axisLeft(this.yScale).tickValues(tickValues).tickFormat(this.tickValueFormatter(decimals, scaledDecimals)).tickSizeInner(0 - this.width).tickSizeOuter(0).tickPadding(Y_AXIS_TICK_PADDING);\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis); // Calculate Y axis width first, then move axis into visible area\n\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')'); // Set first tick as pseudo 0\n\n    if (yMin < 1) {\n      this.heatmap.select('.axis-y').select('.tick text').text('0');\n    } // Remove vertical line in the right of axis labels (called domain in d3)\n\n\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  }\n\n  addYAxisFromBuckets() {\n    const tsBuckets = this.data.tsBuckets;\n    let ticks = Math.ceil(this.chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n    this.scope.yScale = this.yScale = d3.scaleLinear().domain([0, tsBuckets.length - 1]).range([this.chartHeight, 0]);\n    const tickValues = map(tsBuckets, (b, i) => i);\n    const decimalsAuto = max(map(tsBuckets, ticksUtils.getStringPrecision));\n    const decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals;\n    this.ctrl.decimals = decimals;\n    const tickValueFormatter = this.tickValueFormatter.bind(this);\n\n    function tickFormatter(yAxisWidth) {\n      return function (valIndex) {\n        let valueFormatted = tsBuckets[valIndex.valueOf()];\n\n        if (!isNaN(toNumber(valueFormatted)) && valueFormatted !== '') {\n          // Try to format numeric tick labels\n          valueFormatted = tickValueFormatter(decimals)(toNumber(valueFormatted));\n        } else if (valueFormatted && typeof valueFormatted === 'string' && valueFormatted !== '') {\n          if (yAxisWidth) {\n            const scale = 0.15; // how to have a better calculation for this\n\n            const trimmed = valueFormatted.substring(0, Math.floor(yAxisWidth * scale));\n            const postfix = trimmed.length < valueFormatted.length ? '...' : '';\n            valueFormatted = `${trimmed}${postfix}`;\n          }\n        }\n\n        return valueFormatted;\n      };\n    }\n\n    const tsBucketsFormatted = map(tsBuckets, (v, i) => tickFormatter(null)(i));\n    this.data.tsBucketsFormatted = tsBucketsFormatted;\n    const yAxis = d3.axisLeft(this.yScale).tickFormat(tickFormatter(this.getPanelYAxisWidth())).tickSizeInner(0 - this.width).tickSizeOuter(0).tickPadding(Y_AXIS_TICK_PADDING);\n\n    if (tickValues && tickValues.length <= ticks) {\n      yAxis.tickValues(tickValues);\n    } else {\n      yAxis.ticks(ticks);\n    }\n\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis); // Calculate Y axis width first, then move axis into visible area\n\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    if (this.panel.yBucketBound === 'middle' && tickValues && tickValues.length) {\n      // Shift Y axis labels to the middle of bucket\n      const tickShift = 0 - this.chartHeight / (tickValues.length - 1) / 2;\n      this.heatmap.selectAll('.axis-y text').attr('transform', 'translate(' + 0 + ',' + tickShift + ')');\n    } // Remove vertical line in the right of axis labels (called domain in d3)\n\n\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  } // Adjust data range to log base\n\n\n  adjustLogRange(min, max, logBase) {\n    let yMin = this.data.heatmapStats.minLog;\n\n    if (this.data.heatmapStats.minLog > 1 || !this.data.heatmapStats.minLog) {\n      yMin = 1;\n    } else {\n      yMin = this.adjustLogMin(this.data.heatmapStats.minLog, logBase);\n    } // Adjust max Y value to log base\n\n\n    const yMax = this.adjustLogMax(this.data.heatmapStats.max, logBase);\n    return {\n      yMin,\n      yMax\n    };\n  }\n\n  adjustLogMax(max, base) {\n    return Math.pow(base, Math.ceil(ticksUtils.logp(max, base)));\n  }\n\n  adjustLogMin(min, base) {\n    return Math.pow(base, Math.floor(ticksUtils.logp(min, base)));\n  }\n\n  logScaleTickValues(domain, base) {\n    const domainMin = domain[0];\n    const domainMax = domain[1];\n    const tickValues = [];\n\n    if (domainMin < 1) {\n      const underOneTicks = Math.floor(ticksUtils.logp(domainMin, base));\n\n      for (let i = underOneTicks; i < 0; i++) {\n        const tickValue = Math.pow(base, i);\n        tickValues.push(tickValue);\n      }\n    }\n\n    const ticks = Math.ceil(ticksUtils.logp(domainMax, base));\n\n    for (let i = 0; i <= ticks; i++) {\n      const tickValue = Math.pow(base, i);\n      tickValues.push(tickValue);\n    }\n\n    return tickValues;\n  }\n\n  tickValueFormatter(decimals, scaledDecimals = null) {\n    const format = this.panel.yAxis.format;\n    return value => {\n      try {\n        if (format !== 'none') {\n          const v = getValueFormat(format)(value, decimals, scaledDecimals);\n          return formattedValueToString(v);\n        }\n      } catch (err) {\n        console.error(err instanceof Error ? err.message : err);\n      }\n\n      return value;\n    };\n  }\n\n  fixYAxisTickSize() {\n    this.heatmap.select('.axis-y').selectAll('.tick line').attr('x2', this.chartWidth);\n  }\n\n  addAxes() {\n    this.chartHeight = this.height - this.margin.top - this.margin.bottom;\n    this.chartTop = this.margin.top;\n    this.chartBottom = this.chartTop + this.chartHeight;\n\n    if (this.panel.dataFormat === 'tsbuckets') {\n      this.addYAxisFromBuckets();\n    } else {\n      if (this.panel.yAxis.logBase === 1) {\n        this.addYAxis();\n      } else {\n        this.addLogYAxis();\n      }\n    }\n\n    this.yAxisWidth = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.chartWidth = this.width - this.yAxisWidth - this.margin.right;\n    this.fixYAxisTickSize();\n    this.addXAxis();\n    this.xAxisHeight = this.getXAxisHeight(this.heatmap);\n\n    if (!this.panel.yAxis.show) {\n      this.heatmap.select('.axis-y').selectAll('line').style('opacity', 0);\n    }\n\n    if (!this.panel.xAxis.show) {\n      this.heatmap.select('.axis-x').selectAll('line').style('opacity', 0);\n    }\n  }\n\n  addHeatmapCanvas() {\n    const heatmapElem = this.$heatmap[0];\n    this.width = Math.floor(this.$heatmap.width()) - this.padding.right;\n    this.height = Math.floor(this.$heatmap.height()) - this.padding.bottom;\n    this.cardPadding = this.panel.cards.cardPadding !== null ? this.panel.cards.cardPadding : CARD_PADDING;\n    this.cardRound = this.panel.cards.cardRound !== null ? this.panel.cards.cardRound : CARD_ROUND;\n\n    if (this.heatmap) {\n      this.heatmap.remove();\n    }\n\n    this.heatmap = d3.select(heatmapElem).append('svg').attr('width', this.width).attr('height', this.height);\n  }\n\n  addHeatmap() {\n    this.addHeatmapCanvas();\n    this.addAxes();\n\n    if (this.panel.yAxis.logBase !== 1 && this.panel.dataFormat !== 'tsbuckets') {\n      const logBase = this.panel.yAxis.logBase;\n      const domain = this.yScale.domain();\n      const tickValues = this.logScaleTickValues(domain, logBase);\n      this.data.buckets = mergeZeroBuckets(this.data.buckets, min(tickValues));\n    }\n\n    const cardsData = this.data.cards;\n    const cardStats = this.data.cardStats;\n    const maxValueAuto = cardStats.max;\n    const minValueAuto = Math.max(cardStats.min, 0);\n    const maxValue = isNil(this.panel.color.max) ? maxValueAuto : this.panel.color.max;\n    const minValue = isNil(this.panel.color.min) ? minValueAuto : this.panel.color.min;\n    const colorScheme = find(this.ctrl.colorSchemes, {\n      value: this.panel.color.colorScheme\n    });\n    this.colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n    this.opacityScale = getOpacityScale(this.panel.color, maxValue, minValue);\n    this.setCardSize();\n    let cards = this.heatmap.selectAll('.heatmap-card').data(cardsData);\n    cards.append('title');\n    cards = cards.enter().append('rect').attr('x', this.getCardX.bind(this)).attr('width', this.getCardWidth.bind(this)).attr('y', this.getCardY.bind(this)).attr('height', this.getCardHeight.bind(this)).attr('rx', this.cardRound).attr('ry', this.cardRound).attr('class', 'bordered heatmap-card').style('fill', this.getCardColor.bind(this)).style('stroke', this.getCardColor.bind(this)).style('stroke-width', 0).style('opacity', this.getCardOpacity.bind(this));\n    const $cards = this.$heatmap.find('.heatmap-card');\n    $cards.on('mouseenter', event => {\n      this.tooltip.mouseOverBucket = true;\n      this.highlightCard(event);\n    }).on('mouseleave', event => {\n      this.tooltip.mouseOverBucket = false;\n      this.resetCardHighLight(event);\n    });\n  }\n\n  highlightCard(event) {\n    const color = d3.select(event.target).style('fill');\n    const highlightColor = d3.color(color).darker(2);\n    const strokeColor = d3.color(color).brighter(4);\n    const currentCard = d3.select(event.target);\n    this.tooltip.originalFillColor = color;\n    currentCard.style('fill', highlightColor.toString()).style('stroke', strokeColor.toString()).style('stroke-width', 1);\n  }\n\n  resetCardHighLight(event) {\n    d3.select(event.target).style('fill', this.tooltip.originalFillColor).style('stroke', this.tooltip.originalFillColor).style('stroke-width', 0);\n  }\n\n  setCardSize() {\n    const xGridSize = Math.floor(this.xScale(this.data.xBucketSize) - this.xScale(0));\n    let yGridSize = Math.floor(this.yScale(this.yScale.invert(0) - this.data.yBucketSize));\n\n    if (this.panel.yAxis.logBase !== 1) {\n      const base = this.panel.yAxis.logBase;\n      const splitFactor = this.data.yBucketSize || 1;\n      yGridSize = Math.floor((this.yScale(1) - this.yScale(base)) / splitFactor);\n    }\n\n    const cardWidth = xGridSize - this.cardPadding * 2;\n    this.cardWidth = Math.max(cardWidth, MIN_CARD_SIZE);\n    this.cardHeight = yGridSize ? yGridSize - this.cardPadding * 2 : 0;\n  }\n\n  getCardX(d) {\n    let x;\n\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      x = this.yAxisWidth + this.cardPadding;\n    } else {\n      x = this.xScale(d.x) + this.yAxisWidth + this.cardPadding;\n    }\n\n    return x;\n  }\n\n  getCardWidth(d) {\n    let w = this.cardWidth;\n\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      w = this.xScale(d.x) + this.cardWidth;\n    } else if (this.xScale(d.x) + this.cardWidth > this.chartWidth) {\n      // Cut card right to prevent overlay\n      w = this.chartWidth - this.xScale(d.x) - this.cardPadding;\n    } // Card width should be MIN_CARD_SIZE at least, but cut cards shouldn't be displayed\n\n\n    w = w > 0 ? Math.max(w, MIN_CARD_SIZE) : 0;\n    return w;\n  }\n\n  getCardY(d) {\n    let y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      y = this.chartBottom - this.cardHeight - this.cardPadding;\n    } else {\n      if (y < this.chartTop) {\n        y = this.chartTop;\n      }\n    }\n\n    return y;\n  }\n\n  getCardHeight(d) {\n    const y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n    let h = this.cardHeight;\n\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      return this.cardHeight;\n    } // Cut card height to prevent overlay\n\n\n    if (y < this.chartTop) {\n      h = this.yScale(d.y) - this.cardPadding;\n    } else if (this.yScale(d.y) > this.chartBottom) {\n      h = this.chartBottom - y;\n    } else if (y + this.cardHeight > this.chartBottom) {\n      h = this.chartBottom - y;\n    } // Height can't be more than chart height\n\n\n    h = Math.min(h, this.chartHeight); // Card height should be MIN_CARD_SIZE at least\n\n    h = Math.max(h, MIN_CARD_SIZE);\n    return h;\n  }\n\n  getCardColor(d) {\n    if (this.panel.color.mode === 'opacity') {\n      return config.theme.visualization.getColorByName(this.panel.color.cardColor);\n    } else {\n      return this.colorScale(d.count);\n    }\n  }\n\n  getCardOpacity(d) {\n    if (this.panel.color.mode === 'opacity') {\n      return this.opacityScale(d.count);\n    } else {\n      return 1;\n    }\n  }\n\n  getEventOffset(event) {\n    const elemOffset = this.$heatmap.offset();\n    const x = Math.floor(event.clientX - elemOffset.left);\n    const y = Math.floor(event.clientY - elemOffset.top);\n    return {\n      x,\n      y\n    };\n  }\n\n  onMouseDown(event) {\n    const offset = this.getEventOffset(event);\n    this.selection.active = true;\n    this.selection.x1 = offset.x;\n\n    this.mouseUpHandler = () => {\n      this.onMouseUp();\n    };\n\n    $(document).one('mouseup', this.mouseUpHandler.bind(this));\n  }\n\n  onMouseUp() {\n    $(document).unbind('mouseup', this.mouseUpHandler.bind(this));\n    this.mouseUpHandler = null;\n    this.selection.active = false;\n    const selectionRange = Math.abs(this.selection.x2 - this.selection.x1);\n\n    if (this.selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n      const timeFrom = this.xScale.invert(Math.min(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n      const timeTo = this.xScale.invert(Math.max(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n      this.ctrl.timeSrv.setTime({\n        from: toUtc(timeFrom),\n        to: toUtc(timeTo)\n      });\n    }\n\n    this.clearSelection();\n  }\n\n  onMouseLeave() {\n    this.ctrl.dashboard.events.publish(new LegacyGraphHoverClearEvent());\n    this.clearCrosshair();\n  }\n\n  onMouseMove(event) {\n    if (!this.heatmap) {\n      return;\n    }\n\n    const offset = this.getEventOffset(event);\n\n    if (this.selection.active) {\n      // Clear crosshair and tooltip\n      this.clearCrosshair();\n      this.tooltip.destroy();\n      this.selection.x2 = this.limitSelection(offset.x);\n      this.drawSelection(this.selection.x1, this.selection.x2);\n    } else {\n      const pos = this.getEventPos(event, offset);\n      this.drawCrosshair(offset.x);\n      this.tooltip.show(pos, this.data);\n      this.emitGraphHoverEvent(pos);\n    }\n  }\n\n  getEventPos(event, offset) {\n    const x = this.xScale.invert(offset.x - this.yAxisWidth).valueOf();\n    const y = this.yScale.invert(offset.y - this.chartTop);\n    const pos = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n      x: x,\n      x1: x,\n      y: y,\n      y1: y,\n      panelRelY: null,\n      offset\n    };\n    return pos;\n  }\n\n  emitGraphHoverEvent(pos) {\n    // Set minimum offset to prevent showing legend from another panel\n    pos.panelRelY = Math.max(pos.offset.y / this.height, 0.001); // broadcast to other graph panels that we are hovering\n\n    this.hoverEvent.payload.pos = pos;\n    this.hoverEvent.payload.panel = this.panel;\n    this.hoverEvent.payload.point['time'] = pos.x;\n    this.ctrl.dashboard.events.publish(this.hoverEvent);\n  }\n\n  limitSelection(x2) {\n    x2 = Math.max(x2, this.yAxisWidth);\n    x2 = Math.min(x2, this.chartWidth + this.yAxisWidth);\n    return x2;\n  }\n\n  drawSelection(posX1, posX2) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n      const selectionX = Math.min(posX1, posX2);\n      const selectionWidth = Math.abs(posX1 - posX2);\n\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\n        this.heatmap.append('rect').attr('class', 'heatmap-selection').attr('x', selectionX).attr('width', selectionWidth).attr('y', this.chartTop).attr('height', this.chartHeight);\n      }\n    }\n  }\n\n  clearSelection() {\n    this.selection.x1 = -1;\n    this.selection.x2 = -1;\n\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n    }\n  }\n\n  drawCrosshair(position) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n      let posX = position;\n      posX = Math.max(posX, this.yAxisWidth);\n      posX = Math.min(posX, this.chartWidth + this.yAxisWidth);\n      this.heatmap.append('g').attr('class', 'heatmap-crosshair').attr('transform', 'translate(' + posX + ',0)').append('line').attr('x1', 1).attr('y1', this.chartTop).attr('x2', 1).attr('y2', this.chartBottom).attr('stroke-width', 1);\n    }\n  }\n\n  drawSharedCrosshair(pos) {\n    if (this.heatmap && this.ctrl.dashboard.graphTooltip !== 0) {\n      const posX = this.xScale(pos.x) + this.yAxisWidth;\n      this.drawCrosshair(posX);\n    }\n  }\n\n  clearCrosshair() {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n    }\n  }\n\n  render() {\n    this.data = this.ctrl.data;\n    this.panel = this.ctrl.panel;\n    this.timeRange = this.ctrl.range;\n\n    if (!this.setElementHeight() || !this.data) {\n      return;\n    } // Draw default axes and return if no data\n\n\n    if (isEmpty(this.data.buckets)) {\n      this.addHeatmapCanvas();\n      this.addAxes();\n      return;\n    }\n\n    this.addHeatmap();\n    this.scope.yAxisWidth = this.yAxisWidth;\n    this.scope.xAxisHeight = this.xAxisHeight;\n    this.scope.chartHeight = this.chartHeight;\n    this.scope.chartWidth = this.chartWidth;\n    this.scope.chartTop = this.chartTop;\n  }\n\n  getPanelYAxisWidth() {\n    if (!this.panel.yAxis.width) {\n      return null;\n    }\n\n    return isNaN(this.panel.yAxis.width) ? null : parseInt(this.panel.yAxis.width, 10);\n  }\n\n}","map":{"version":3,"names":["d3","$","find","isEmpty","isNaN","isNil","isString","map","max","min","toNumber","dateTimeFormat","formattedValueToString","getValueFormat","LegacyGraphHoverClearEvent","LegacyGraphHoverEvent","PanelEvents","toUtc","graphTimeFormat","config","contextSrv","ticksUtils","getColorScale","getOpacityScale","mergeZeroBuckets","HeatmapTooltip","MIN_CARD_SIZE","CARD_PADDING","CARD_ROUND","DATA_RANGE_WIDING_FACTOR","DEFAULT_X_TICK_SIZE_PX","DEFAULT_Y_TICK_SIZE_PX","X_AXIS_TICK_PADDING","Y_AXIS_TICK_PADDING","MIN_SELECTION_WIDTH","rendering","scope","elem","attrs","ctrl","HeatmapRenderer","constructor","$heatmap","tooltip","selection","active","x1","x2","padding","left","right","top","bottom","margin","dataRangeWidingFactor","events","on","render","onRender","bind","tickValueFormatter","dashboard","type","onGraphHover","onGraphHoverClear","onMouseDown","onMouseMove","onMouseLeave","hoverEvent","pos","point","panel","clearCrosshair","event","drawSharedCrosshair","renderingCompleted","setElementHeight","height","row","parseInt","replace","legend","show","css","e","getYAxisWidth","panelYAxisWidth","getPanelYAxisWidth","axisText","selectAll","nodes","maxTextWidth","text","getBBox","width","getXAxisHeight","axisLine","select","empty","axisLinePosition","parseFloat","attr","canvasWidth","addXAxis","xScale","scaleTime","domain","timeRange","from","to","range","chartWidth","ticks","format","valueOf","timeZone","getTimezone","formatter","date","xAxis","axisBottom","tickFormat","tickPadding","tickSize","chartHeight","posY","posX","yAxisWidth","heatmap","append","call","remove","addYAxis","Math","ceil","tickInterval","tickStep","data","heatmapStats","yMin","yMax","wideYAxisRange","yAxis","decimalsAuto","getPrecision","decimals","flotTickSize","getFlotTickSize","scaledDecimals","getScaledDecimals","buckets","yScale","scaleLinear","axisLeft","tickSizeInner","tickSizeOuter","yWiding","floor","addLogYAxis","logBase","adjustLogRange","minLog","adjustLogMin","adjustLogMax","pow","scaleLog","base","tickValues","logScaleTickValues","length","addYAxisFromBuckets","tsBuckets","b","i","getStringPrecision","tickFormatter","valIndex","valueFormatted","scale","trimmed","substring","postfix","tsBucketsFormatted","v","yBucketBound","tickShift","logp","domainMin","domainMax","underOneTicks","tickValue","push","value","err","console","error","Error","message","fixYAxisTickSize","addAxes","chartTop","chartBottom","dataFormat","xAxisHeight","style","addHeatmapCanvas","heatmapElem","cardPadding","cards","cardRound","addHeatmap","cardsData","cardStats","maxValueAuto","minValueAuto","maxValue","color","minValue","colorScheme","colorSchemes","colorScale","user","lightTheme","opacityScale","setCardSize","enter","getCardX","getCardWidth","getCardY","getCardHeight","getCardColor","getCardOpacity","$cards","mouseOverBucket","highlightCard","resetCardHighLight","target","highlightColor","darker","strokeColor","brighter","currentCard","originalFillColor","toString","xGridSize","xBucketSize","yGridSize","invert","yBucketSize","splitFactor","cardWidth","cardHeight","d","x","w","y","h","mode","theme","visualization","getColorByName","cardColor","count","getEventOffset","elemOffset","offset","clientX","clientY","mouseUpHandler","onMouseUp","document","one","unbind","selectionRange","abs","timeFrom","timeTo","timeSrv","setTime","clearSelection","publish","destroy","limitSelection","drawSelection","getEventPos","drawCrosshair","emitGraphHoverEvent","pageX","pageY","y1","panelRelY","payload","posX1","posX2","selectionX","selectionWidth","position","graphTooltip"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap-old/rendering.ts"],"sourcesContent":["import * as d3 from 'd3';\nimport $ from 'jquery';\nimport { find, isEmpty, isNaN, isNil, isString, map, max, min, toNumber } from 'lodash';\n\nimport {\n  dateTimeFormat,\n  formattedValueToString,\n  getValueFormat,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  PanelEvents,\n  toUtc,\n} from '@grafana/data';\nimport { graphTimeFormat } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport * as ticksUtils from 'app/core/utils/ticks';\n\nimport { getColorScale, getOpacityScale } from './color_scale';\nimport { mergeZeroBuckets } from './heatmap_data_converter';\nimport { HeatmapTooltip } from './heatmap_tooltip';\n\nconst MIN_CARD_SIZE = 1,\n  CARD_PADDING = 1,\n  CARD_ROUND = 0,\n  DATA_RANGE_WIDING_FACTOR = 1.2,\n  DEFAULT_X_TICK_SIZE_PX = 100,\n  DEFAULT_Y_TICK_SIZE_PX = 22.5,\n  X_AXIS_TICK_PADDING = 10,\n  Y_AXIS_TICK_PADDING = 5,\n  MIN_SELECTION_WIDTH = 2;\n\nexport default function rendering(scope: any, elem: any, attrs: any, ctrl: any) {\n  return new HeatmapRenderer(scope, elem, attrs, ctrl);\n}\nexport class HeatmapRenderer {\n  width = 200;\n  height = 200;\n  yScale: any;\n  xScale: any;\n  chartWidth = 0;\n  chartHeight = 0;\n  chartTop = 0;\n  chartBottom = 0;\n  yAxisWidth = 0;\n  xAxisHeight = 0;\n  cardPadding = 0;\n  cardRound = 0;\n  cardWidth = 0;\n  cardHeight = 0;\n  colorScale: any;\n  opacityScale: any;\n  mouseUpHandler: any;\n  data: any;\n  panel: any;\n  $heatmap: any;\n  tooltip: HeatmapTooltip;\n  heatmap: any;\n  timeRange: any;\n\n  selection: any;\n  padding: any;\n  margin: any;\n  dataRangeWidingFactor: number;\n\n  hoverEvent: LegacyGraphHoverEvent;\n\n  constructor(private scope: any, private elem: any, attrs: any, private ctrl: any) {\n    // $heatmap is JQuery object, but heatmap is D3\n    this.$heatmap = this.elem.find('.heatmap-panel');\n    this.tooltip = new HeatmapTooltip(this.$heatmap, this.scope);\n\n    this.selection = {\n      active: false,\n      x1: -1,\n      x2: -1,\n    };\n\n    this.padding = { left: 0, right: 0, top: 0, bottom: 0 };\n    this.margin = { left: 25, right: 15, top: 10, bottom: 20 };\n    this.dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\n    this.ctrl.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.ctrl.tickValueFormatter = this.tickValueFormatter.bind(this);\n\n    /////////////////////////////\n    // Selection and crosshair //\n    /////////////////////////////\n\n    // Shared crosshair and tooltip\n    this.ctrl.dashboard.events.on(LegacyGraphHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    // Register selection listeners\n    this.$heatmap.on('mousedown', this.onMouseDown.bind(this));\n    this.$heatmap.on('mousemove', this.onMouseMove.bind(this));\n    this.$heatmap.on('mouseleave', this.onMouseLeave.bind(this));\n\n    this.hoverEvent = new LegacyGraphHoverEvent({ pos: {}, point: {}, panel: this.panel });\n  }\n\n  onGraphHoverClear() {\n    this.clearCrosshair();\n  }\n\n  onGraphHover(event: { pos: any }) {\n    this.drawSharedCrosshair(event.pos);\n  }\n\n  onRender() {\n    this.render();\n    this.ctrl.renderingCompleted();\n  }\n\n  setElementHeight() {\n    try {\n      let height = this.ctrl.height || this.panel.height || this.ctrl.row.height;\n      if (isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= this.panel.legend.show ? 28 : 11; // bottom padding and space for legend\n\n      this.$heatmap.css('height', height + 'px');\n\n      return true;\n    } catch (e) {\n      // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  getYAxisWidth(elem: any) {\n    const panelYAxisWidth = this.getPanelYAxisWidth();\n    if (panelYAxisWidth !== null) {\n      return panelYAxisWidth + Y_AXIS_TICK_PADDING;\n    }\n\n    const axisText = elem.selectAll('.axis-y text').nodes();\n    const maxTextWidth = max(\n      map(axisText, (text) => {\n        // Use SVG getBBox method\n        return text.getBBox().width;\n      })\n    );\n\n    return maxTextWidth;\n  }\n\n  getXAxisHeight(elem: any) {\n    const axisLine = elem.select('.axis-x line');\n    if (!axisLine.empty()) {\n      const axisLinePosition = parseFloat(elem.select('.axis-x line').attr('y2'));\n      const canvasWidth = parseFloat(elem.attr('height'));\n      return canvasWidth - axisLinePosition;\n    } else {\n      // Default height\n      return 30;\n    }\n  }\n\n  addXAxis() {\n    this.scope.xScale = this.xScale = d3\n      .scaleTime()\n      .domain([this.timeRange.from, this.timeRange.to])\n      .range([0, this.chartWidth]);\n\n    const ticks = this.chartWidth / DEFAULT_X_TICK_SIZE_PX;\n    const format = graphTimeFormat(ticks, this.timeRange.from.valueOf(), this.timeRange.to.valueOf());\n    const timeZone = this.ctrl.dashboard.getTimezone();\n    const formatter = (date: d3.AxisDomain) =>\n      dateTimeFormat(date.valueOf(), {\n        format: format,\n        timeZone: timeZone,\n      });\n\n    const xAxis = d3\n      .axisBottom(this.xScale)\n      .ticks(ticks)\n      .tickFormat(formatter)\n      .tickPadding(X_AXIS_TICK_PADDING)\n      .tickSize(this.chartHeight);\n\n    const posY = this.margin.top;\n    const posX = this.yAxisWidth;\n    this.heatmap\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', 'translate(' + posX + ',' + posY + ')')\n      .call(xAxis);\n\n    // Remove horizontal line in the top of axis labels (called domain in d3)\n    this.heatmap.select('.axis-x').select('.domain').remove();\n  }\n\n  addYAxis() {\n    let ticks = Math.ceil(this.chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n    let tickInterval = ticksUtils.tickStep(this.data.heatmapStats.min, this.data.heatmapStats.max, ticks);\n    let { yMin, yMax } = this.wideYAxisRange(this.data.heatmapStats.min, this.data.heatmapStats.max, tickInterval);\n\n    // Rewrite min and max if it have been set explicitly\n    yMin = this.panel.yAxis.min !== null ? this.panel.yAxis.min : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.panel.yAxis.max : yMax;\n\n    // Adjust ticks after Y range widening\n    tickInterval = ticksUtils.tickStep(yMin, yMax, ticks);\n    ticks = Math.ceil((yMax - yMin) / tickInterval);\n\n    const decimalsAuto = ticksUtils.getPrecision(tickInterval);\n    let decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals;\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, ticks, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals;\n\n    // Set default Y min and max if no data\n    if (isEmpty(this.data.buckets)) {\n      yMax = 1;\n      yMin = -1;\n      ticks = 3;\n      decimals = 1;\n    }\n\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: ticks,\n    };\n\n    this.scope.yScale = this.yScale = d3.scaleLinear().domain([yMin, yMax]).range([this.chartHeight, 0]);\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .ticks(ticks)\n      .tickFormat(this.tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  }\n\n  // Wide Y values range and anjust to bucket size\n  wideYAxisRange(min: number, max: number, tickInterval: number) {\n    const yWiding = (max * (this.dataRangeWidingFactor - 1) - min * (this.dataRangeWidingFactor - 1)) / 2;\n    let yMin, yMax;\n\n    if (tickInterval === 0) {\n      yMax = max * this.dataRangeWidingFactor;\n      yMin = min - min * (this.dataRangeWidingFactor - 1);\n    } else {\n      yMax = Math.ceil((max + yWiding) / tickInterval) * tickInterval;\n      yMin = Math.floor((min - yWiding) / tickInterval) * tickInterval;\n    }\n\n    // Don't wide axis below 0 if all values are positive\n    if (min >= 0 && yMin < 0) {\n      yMin = 0;\n    }\n\n    return { yMin, yMax };\n  }\n\n  addLogYAxis() {\n    const logBase = this.panel.yAxis.logBase;\n    let { yMin, yMax } = this.adjustLogRange(this.data.heatmapStats.minLog, this.data.heatmapStats.max, logBase);\n\n    yMin =\n      this.panel.yAxis.min && this.panel.yAxis.min !== '0' ? this.adjustLogMin(this.panel.yAxis.min, logBase) : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.adjustLogMax(this.panel.yAxis.max, logBase) : yMax;\n\n    // Set default Y min and max if no data\n    if (isEmpty(this.data.buckets)) {\n      yMax = Math.pow(logBase, 2);\n      yMin = 1;\n    }\n\n    this.scope.yScale = this.yScale = d3\n      .scaleLog()\n      .base(this.panel.yAxis.logBase)\n      .domain([yMin, yMax])\n      .range([this.chartHeight, 0]);\n\n    const domain = this.yScale.domain();\n    const tickValues = this.logScaleTickValues(domain, logBase);\n\n    const decimalsAuto = ticksUtils.getPrecision(yMin);\n    const decimals = this.panel.yAxis.decimals || decimalsAuto;\n\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, tickValues.length, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals;\n\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: tickValues.length,\n    };\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .tickValues(tickValues)\n      .tickFormat(this.tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Set first tick as pseudo 0\n    if (yMin < 1) {\n      this.heatmap.select('.axis-y').select('.tick text').text('0');\n    }\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  }\n\n  addYAxisFromBuckets() {\n    const tsBuckets = this.data.tsBuckets;\n    let ticks = Math.ceil(this.chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n\n    this.scope.yScale = this.yScale = d3\n      .scaleLinear()\n      .domain([0, tsBuckets.length - 1])\n      .range([this.chartHeight, 0]);\n\n    const tickValues = map(tsBuckets, (b, i) => i);\n    const decimalsAuto = max(map(tsBuckets, ticksUtils.getStringPrecision));\n    const decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals;\n    this.ctrl.decimals = decimals;\n\n    const tickValueFormatter = this.tickValueFormatter.bind(this);\n    function tickFormatter(yAxisWidth: number | null) {\n      return function (valIndex: d3.AxisDomain) {\n        let valueFormatted = tsBuckets[valIndex.valueOf()];\n        if (!isNaN(toNumber(valueFormatted)) && valueFormatted !== '') {\n          // Try to format numeric tick labels\n          valueFormatted = tickValueFormatter(decimals)(toNumber(valueFormatted));\n        } else if (valueFormatted && typeof valueFormatted === 'string' && valueFormatted !== '') {\n          if (yAxisWidth) {\n            const scale = 0.15; // how to have a better calculation for this\n            const trimmed = valueFormatted.substring(0, Math.floor(yAxisWidth * scale));\n            const postfix = trimmed.length < valueFormatted.length ? '...' : '';\n            valueFormatted = `${trimmed}${postfix}`;\n          }\n        }\n        return valueFormatted;\n      };\n    }\n    const tsBucketsFormatted = map(tsBuckets, (v, i) => tickFormatter(null)(i));\n    this.data.tsBucketsFormatted = tsBucketsFormatted;\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .tickFormat(tickFormatter(this.getPanelYAxisWidth()))\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n    if (tickValues && tickValues.length <= ticks) {\n      yAxis.tickValues(tickValues);\n    } else {\n      yAxis.ticks(ticks);\n    }\n\n    this.heatmap.append('g').attr('class', 'axis axis-y').call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    if (this.panel.yBucketBound === 'middle' && tickValues && tickValues.length) {\n      // Shift Y axis labels to the middle of bucket\n      const tickShift = 0 - this.chartHeight / (tickValues.length - 1) / 2;\n      this.heatmap.selectAll('.axis-y text').attr('transform', 'translate(' + 0 + ',' + tickShift + ')');\n    }\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap.select('.axis-y').select('.domain').remove();\n  }\n\n  // Adjust data range to log base\n  adjustLogRange(min: number, max: number, logBase: number) {\n    let yMin = this.data.heatmapStats.minLog;\n    if (this.data.heatmapStats.minLog > 1 || !this.data.heatmapStats.minLog) {\n      yMin = 1;\n    } else {\n      yMin = this.adjustLogMin(this.data.heatmapStats.minLog, logBase);\n    }\n\n    // Adjust max Y value to log base\n    const yMax = this.adjustLogMax(this.data.heatmapStats.max, logBase);\n\n    return { yMin, yMax };\n  }\n\n  adjustLogMax(max: number, base: number) {\n    return Math.pow(base, Math.ceil(ticksUtils.logp(max, base)));\n  }\n\n  adjustLogMin(min: number, base: number) {\n    return Math.pow(base, Math.floor(ticksUtils.logp(min, base)));\n  }\n\n  logScaleTickValues(domain: any[], base: number) {\n    const domainMin = domain[0];\n    const domainMax = domain[1];\n    const tickValues = [];\n\n    if (domainMin < 1) {\n      const underOneTicks = Math.floor(ticksUtils.logp(domainMin, base));\n      for (let i = underOneTicks; i < 0; i++) {\n        const tickValue = Math.pow(base, i);\n        tickValues.push(tickValue);\n      }\n    }\n\n    const ticks = Math.ceil(ticksUtils.logp(domainMax, base));\n    for (let i = 0; i <= ticks; i++) {\n      const tickValue = Math.pow(base, i);\n      tickValues.push(tickValue);\n    }\n\n    return tickValues;\n  }\n\n  tickValueFormatter(decimals: number, scaledDecimals: any = null) {\n    const format = this.panel.yAxis.format;\n    return (value: any) => {\n      try {\n        if (format !== 'none') {\n          const v = getValueFormat(format)(value, decimals, scaledDecimals);\n          return formattedValueToString(v);\n        }\n      } catch (err) {\n        console.error(err instanceof Error ? err.message : err);\n      }\n      return value;\n    };\n  }\n\n  fixYAxisTickSize() {\n    this.heatmap.select('.axis-y').selectAll('.tick line').attr('x2', this.chartWidth);\n  }\n\n  addAxes() {\n    this.chartHeight = this.height - this.margin.top - this.margin.bottom;\n    this.chartTop = this.margin.top;\n    this.chartBottom = this.chartTop + this.chartHeight;\n    if (this.panel.dataFormat === 'tsbuckets') {\n      this.addYAxisFromBuckets();\n    } else {\n      if (this.panel.yAxis.logBase === 1) {\n        this.addYAxis();\n      } else {\n        this.addLogYAxis();\n      }\n    }\n\n    this.yAxisWidth = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.chartWidth = this.width - this.yAxisWidth - this.margin.right;\n    this.fixYAxisTickSize();\n\n    this.addXAxis();\n    this.xAxisHeight = this.getXAxisHeight(this.heatmap);\n\n    if (!this.panel.yAxis.show) {\n      this.heatmap.select('.axis-y').selectAll('line').style('opacity', 0);\n    }\n\n    if (!this.panel.xAxis.show) {\n      this.heatmap.select('.axis-x').selectAll('line').style('opacity', 0);\n    }\n  }\n\n  addHeatmapCanvas() {\n    const heatmapElem = this.$heatmap[0];\n\n    this.width = Math.floor(this.$heatmap.width()) - this.padding.right;\n    this.height = Math.floor(this.$heatmap.height()) - this.padding.bottom;\n\n    this.cardPadding = this.panel.cards.cardPadding !== null ? this.panel.cards.cardPadding : CARD_PADDING;\n    this.cardRound = this.panel.cards.cardRound !== null ? this.panel.cards.cardRound : CARD_ROUND;\n\n    if (this.heatmap) {\n      this.heatmap.remove();\n    }\n\n    this.heatmap = d3.select(heatmapElem).append('svg').attr('width', this.width).attr('height', this.height);\n  }\n\n  addHeatmap() {\n    this.addHeatmapCanvas();\n    this.addAxes();\n\n    if (this.panel.yAxis.logBase !== 1 && this.panel.dataFormat !== 'tsbuckets') {\n      const logBase = this.panel.yAxis.logBase;\n      const domain = this.yScale.domain();\n      const tickValues = this.logScaleTickValues(domain, logBase);\n      this.data.buckets = mergeZeroBuckets(this.data.buckets, min(tickValues)!);\n    }\n\n    const cardsData = this.data.cards;\n    const cardStats = this.data.cardStats;\n    const maxValueAuto = cardStats.max;\n    const minValueAuto = Math.max(cardStats.min, 0);\n    const maxValue = isNil(this.panel.color.max) ? maxValueAuto : this.panel.color.max;\n    const minValue = isNil(this.panel.color.min) ? minValueAuto : this.panel.color.min;\n    const colorScheme: any = find(this.ctrl.colorSchemes, {\n      value: this.panel.color.colorScheme,\n    });\n    this.colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n    this.opacityScale = getOpacityScale(this.panel.color, maxValue, minValue);\n    this.setCardSize();\n\n    let cards = this.heatmap.selectAll('.heatmap-card').data(cardsData);\n    cards.append('title');\n    cards = cards\n      .enter()\n      .append('rect')\n      .attr('x', this.getCardX.bind(this))\n      .attr('width', this.getCardWidth.bind(this))\n      .attr('y', this.getCardY.bind(this))\n      .attr('height', this.getCardHeight.bind(this))\n      .attr('rx', this.cardRound)\n      .attr('ry', this.cardRound)\n      .attr('class', 'bordered heatmap-card')\n      .style('fill', this.getCardColor.bind(this))\n      .style('stroke', this.getCardColor.bind(this))\n      .style('stroke-width', 0)\n      .style('opacity', this.getCardOpacity.bind(this));\n\n    const $cards = this.$heatmap.find('.heatmap-card');\n    $cards\n      .on('mouseenter', (event: any) => {\n        this.tooltip.mouseOverBucket = true;\n        this.highlightCard(event);\n      })\n      .on('mouseleave', (event: any) => {\n        this.tooltip.mouseOverBucket = false;\n        this.resetCardHighLight(event);\n      });\n  }\n\n  highlightCard(event: any) {\n    const color = d3.select(event.target).style('fill');\n    const highlightColor = d3.color(color)!.darker(2);\n    const strokeColor = d3.color(color)!.brighter(4);\n    const currentCard = d3.select(event.target);\n    this.tooltip.originalFillColor = color;\n    currentCard\n      .style('fill', highlightColor.toString())\n      .style('stroke', strokeColor.toString())\n      .style('stroke-width', 1);\n  }\n\n  resetCardHighLight(event: any) {\n    d3.select(event.target)\n      .style('fill', this.tooltip.originalFillColor)\n      .style('stroke', this.tooltip.originalFillColor)\n      .style('stroke-width', 0);\n  }\n\n  setCardSize() {\n    const xGridSize = Math.floor(this.xScale(this.data.xBucketSize) - this.xScale(0));\n    let yGridSize = Math.floor(this.yScale(this.yScale.invert(0) - this.data.yBucketSize));\n\n    if (this.panel.yAxis.logBase !== 1) {\n      const base = this.panel.yAxis.logBase;\n      const splitFactor = this.data.yBucketSize || 1;\n      yGridSize = Math.floor((this.yScale(1) - this.yScale(base)) / splitFactor);\n    }\n\n    const cardWidth = xGridSize - this.cardPadding * 2;\n    this.cardWidth = Math.max(cardWidth, MIN_CARD_SIZE);\n    this.cardHeight = yGridSize ? yGridSize - this.cardPadding * 2 : 0;\n  }\n\n  getCardX(d: { x: any }) {\n    let x;\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      x = this.yAxisWidth + this.cardPadding;\n    } else {\n      x = this.xScale(d.x) + this.yAxisWidth + this.cardPadding;\n    }\n\n    return x;\n  }\n\n  getCardWidth(d: { x: any }) {\n    let w = this.cardWidth;\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      w = this.xScale(d.x) + this.cardWidth;\n    } else if (this.xScale(d.x) + this.cardWidth > this.chartWidth) {\n      // Cut card right to prevent overlay\n      w = this.chartWidth - this.xScale(d.x) - this.cardPadding;\n    }\n\n    // Card width should be MIN_CARD_SIZE at least, but cut cards shouldn't be displayed\n    w = w > 0 ? Math.max(w, MIN_CARD_SIZE) : 0;\n    return w;\n  }\n\n  getCardY(d: { y: number }) {\n    let y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      y = this.chartBottom - this.cardHeight - this.cardPadding;\n    } else {\n      if (y < this.chartTop) {\n        y = this.chartTop;\n      }\n    }\n\n    return y;\n  }\n\n  getCardHeight(d: { y: number }) {\n    const y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n    let h = this.cardHeight;\n\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      return this.cardHeight;\n    }\n\n    // Cut card height to prevent overlay\n    if (y < this.chartTop) {\n      h = this.yScale(d.y) - this.cardPadding;\n    } else if (this.yScale(d.y) > this.chartBottom) {\n      h = this.chartBottom - y;\n    } else if (y + this.cardHeight > this.chartBottom) {\n      h = this.chartBottom - y;\n    }\n\n    // Height can't be more than chart height\n    h = Math.min(h, this.chartHeight);\n    // Card height should be MIN_CARD_SIZE at least\n    h = Math.max(h, MIN_CARD_SIZE);\n\n    return h;\n  }\n\n  getCardColor(d: { count: any }) {\n    if (this.panel.color.mode === 'opacity') {\n      return config.theme.visualization.getColorByName(this.panel.color.cardColor);\n    } else {\n      return this.colorScale(d.count);\n    }\n  }\n\n  getCardOpacity(d: { count: any }) {\n    if (this.panel.color.mode === 'opacity') {\n      return this.opacityScale(d.count);\n    } else {\n      return 1;\n    }\n  }\n\n  getEventOffset(event: any) {\n    const elemOffset = this.$heatmap.offset();\n    const x = Math.floor(event.clientX - elemOffset.left);\n    const y = Math.floor(event.clientY - elemOffset.top);\n    return { x, y };\n  }\n\n  onMouseDown(event: any) {\n    const offset = this.getEventOffset(event);\n    this.selection.active = true;\n    this.selection.x1 = offset.x;\n\n    this.mouseUpHandler = () => {\n      this.onMouseUp();\n    };\n\n    $(document).one('mouseup', this.mouseUpHandler.bind(this));\n  }\n\n  onMouseUp() {\n    $(document).unbind('mouseup', this.mouseUpHandler.bind(this));\n    this.mouseUpHandler = null;\n    this.selection.active = false;\n\n    const selectionRange = Math.abs(this.selection.x2 - this.selection.x1);\n    if (this.selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n      const timeFrom = this.xScale.invert(Math.min(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n      const timeTo = this.xScale.invert(Math.max(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n\n      this.ctrl.timeSrv.setTime({\n        from: toUtc(timeFrom),\n        to: toUtc(timeTo),\n      });\n    }\n\n    this.clearSelection();\n  }\n\n  onMouseLeave() {\n    this.ctrl.dashboard.events.publish(new LegacyGraphHoverClearEvent());\n    this.clearCrosshair();\n  }\n\n  onMouseMove(event: any) {\n    if (!this.heatmap) {\n      return;\n    }\n\n    const offset = this.getEventOffset(event);\n    if (this.selection.active) {\n      // Clear crosshair and tooltip\n      this.clearCrosshair();\n      this.tooltip.destroy();\n\n      this.selection.x2 = this.limitSelection(offset.x);\n      this.drawSelection(this.selection.x1, this.selection.x2);\n    } else {\n      const pos = this.getEventPos(event, offset);\n      this.drawCrosshair(offset.x);\n      this.tooltip.show(pos, this.data);\n      this.emitGraphHoverEvent(pos);\n    }\n  }\n\n  getEventPos(event: { pageX: any; pageY: any }, offset: { x: any; y: any }) {\n    const x = this.xScale.invert(offset.x - this.yAxisWidth).valueOf();\n    const y = this.yScale.invert(offset.y - this.chartTop);\n    const pos: any = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n      x: x,\n      x1: x,\n      y: y,\n      y1: y,\n      panelRelY: null,\n      offset,\n    };\n\n    return pos;\n  }\n\n  emitGraphHoverEvent(pos: { panelRelY: number; offset: { y: number } }) {\n    // Set minimum offset to prevent showing legend from another panel\n    pos.panelRelY = Math.max(pos.offset.y / this.height, 0.001);\n    // broadcast to other graph panels that we are hovering\n    this.hoverEvent.payload.pos = pos;\n    this.hoverEvent.payload.panel = this.panel;\n    this.hoverEvent.payload.point['time'] = (pos as any).x;\n    this.ctrl.dashboard.events.publish(this.hoverEvent);\n  }\n\n  limitSelection(x2: number) {\n    x2 = Math.max(x2, this.yAxisWidth);\n    x2 = Math.min(x2, this.chartWidth + this.yAxisWidth);\n    return x2;\n  }\n\n  drawSelection(posX1: number, posX2: number) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n      const selectionX = Math.min(posX1, posX2);\n      const selectionWidth = Math.abs(posX1 - posX2);\n\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\n        this.heatmap\n          .append('rect')\n          .attr('class', 'heatmap-selection')\n          .attr('x', selectionX)\n          .attr('width', selectionWidth)\n          .attr('y', this.chartTop)\n          .attr('height', this.chartHeight);\n      }\n    }\n  }\n\n  clearSelection() {\n    this.selection.x1 = -1;\n    this.selection.x2 = -1;\n\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n    }\n  }\n\n  drawCrosshair(position: number) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n\n      let posX = position;\n      posX = Math.max(posX, this.yAxisWidth);\n      posX = Math.min(posX, this.chartWidth + this.yAxisWidth);\n\n      this.heatmap\n        .append('g')\n        .attr('class', 'heatmap-crosshair')\n        .attr('transform', 'translate(' + posX + ',0)')\n        .append('line')\n        .attr('x1', 1)\n        .attr('y1', this.chartTop)\n        .attr('x2', 1)\n        .attr('y2', this.chartBottom)\n        .attr('stroke-width', 1);\n    }\n  }\n\n  drawSharedCrosshair(pos: { x: any }) {\n    if (this.heatmap && this.ctrl.dashboard.graphTooltip !== 0) {\n      const posX = this.xScale(pos.x) + this.yAxisWidth;\n      this.drawCrosshair(posX);\n    }\n  }\n\n  clearCrosshair() {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n    }\n  }\n\n  render() {\n    this.data = this.ctrl.data;\n    this.panel = this.ctrl.panel;\n    this.timeRange = this.ctrl.range;\n\n    if (!this.setElementHeight() || !this.data) {\n      return;\n    }\n\n    // Draw default axes and return if no data\n    if (isEmpty(this.data.buckets)) {\n      this.addHeatmapCanvas();\n      this.addAxes();\n      return;\n    }\n\n    this.addHeatmap();\n    this.scope.yAxisWidth = this.yAxisWidth;\n    this.scope.xAxisHeight = this.xAxisHeight;\n    this.scope.chartHeight = this.chartHeight;\n    this.scope.chartWidth = this.chartWidth;\n    this.scope.chartTop = this.chartTop;\n  }\n\n  private getPanelYAxisWidth(): number | null {\n    if (!this.panel.yAxis.width) {\n      return null;\n    }\n\n    return isNaN(this.panel.yAxis.width) ? null : parseInt(this.panel.yAxis.width, 10);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}