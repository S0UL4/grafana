{"ast":null,"code":"const _excluded = [\"datasource\", \"onChange\", \"query\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { IconButton, InlineLabel, Tooltip, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function PromExemplarField(_ref) {\n  let {\n    datasource,\n    onChange,\n    query\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [error, setError] = useState(null);\n  const styles = useStyles2(getStyles);\n  const prevError = usePrevious(error);\n  useEffect(() => {\n    if (!datasource.exemplarsAvailable) {\n      setError('Exemplars for this query are not available');\n      onChange(false);\n    } else if (query.instant && !query.range) {\n      setError('Exemplars are not available for instant queries');\n      onChange(false);\n    } else {\n      setError(null); // If error is cleared, we want to change exemplar to true\n\n      if (prevError && !error) {\n        onChange(true);\n      }\n    }\n  }, [datasource.exemplarsAvailable, query.instant, query.range, onChange, prevError, error]);\n  const iconButtonStyles = cx({\n    [styles.activeIcon]: !!query.exemplar\n  }, styles.eyeIcon);\n  return /*#__PURE__*/_jsx(InlineLabel, {\n    width: \"auto\",\n    \"data-testid\": rest['data-testid'],\n    children: /*#__PURE__*/_jsx(Tooltip, {\n      content: error !== null && error !== void 0 ? error : '',\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.iconWrapper,\n        children: [\"Exemplars\", /*#__PURE__*/_jsx(IconButton, {\n          name: \"eye\",\n          tooltip: !!query.exemplar ? 'Disable query with exemplars' : 'Enable query with exemplars',\n          disabled: !!error,\n          className: iconButtonStyles,\n          onClick: () => {\n            onChange(!query.exemplar);\n          }\n        })]\n      })\n    })\n  });\n}\n\nfunction getStyles(theme) {\n  return {\n    eyeIcon: css`\n      margin-left: ${theme.spacing(2)};\n    `,\n    activeIcon: css`\n      color: ${theme.colors.primary.main};\n    `,\n    iconWrapper: css`\n      display: flex;\n      align-items: center;\n    `\n  };\n}","map":{"version":3,"names":["css","cx","React","useEffect","useState","usePrevious","IconButton","InlineLabel","Tooltip","useStyles2","PromExemplarField","datasource","onChange","query","rest","error","setError","styles","getStyles","prevError","exemplarsAvailable","instant","range","iconButtonStyles","activeIcon","exemplar","eyeIcon","iconWrapper","theme","spacing","colors","primary","main"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/components/PromExemplarField.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, InlineLabel, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { PrometheusDatasource } from '../datasource';\nimport { PromQuery } from '../types';\n\ninterface Props {\n  onChange: (exemplar: boolean) => void;\n  datasource: PrometheusDatasource;\n  query: PromQuery;\n  'data-testid'?: string;\n}\n\nexport function PromExemplarField({ datasource, onChange, query, ...rest }: Props) {\n  const [error, setError] = useState<string | null>(null);\n  const styles = useStyles2(getStyles);\n  const prevError = usePrevious(error);\n\n  useEffect(() => {\n    if (!datasource.exemplarsAvailable) {\n      setError('Exemplars for this query are not available');\n      onChange(false);\n    } else if (query.instant && !query.range) {\n      setError('Exemplars are not available for instant queries');\n      onChange(false);\n    } else {\n      setError(null);\n      // If error is cleared, we want to change exemplar to true\n      if (prevError && !error) {\n        onChange(true);\n      }\n    }\n  }, [datasource.exemplarsAvailable, query.instant, query.range, onChange, prevError, error]);\n\n  const iconButtonStyles = cx(\n    {\n      [styles.activeIcon]: !!query.exemplar,\n    },\n    styles.eyeIcon\n  );\n\n  return (\n    <InlineLabel width=\"auto\" data-testid={rest['data-testid']}>\n      <Tooltip content={error ?? ''}>\n        <div className={styles.iconWrapper}>\n          Exemplars\n          <IconButton\n            name=\"eye\"\n            tooltip={!!query.exemplar ? 'Disable query with exemplars' : 'Enable query with exemplars'}\n            disabled={!!error}\n            className={iconButtonStyles}\n            onClick={() => {\n              onChange(!query.exemplar);\n            }}\n          />\n        </div>\n      </Tooltip>\n    </InlineLabel>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    eyeIcon: css`\n      margin-left: ${theme.spacing(2)};\n    `,\n    activeIcon: css`\n      color: ${theme.colors.primary.main};\n    `,\n    iconWrapper: css`\n      display: flex;\n      align-items: center;\n    `,\n  };\n}\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,WAA5B;AAGA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2CC,UAA3C,QAA6D,aAA7D;;;AAYA,OAAO,SAASC,iBAAT,OAA4E;EAAA,IAAjD;IAAEC,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,CAAiD;EAAA,IAAfC,IAAe;;EACjF,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAgB,IAAhB,CAAlC;EACA,MAAMa,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EACA,MAAMC,SAAS,GAAGd,WAAW,CAACU,KAAD,CAA7B;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,UAAU,CAACS,kBAAhB,EAAoC;MAClCJ,QAAQ,CAAC,4CAAD,CAAR;MACAJ,QAAQ,CAAC,KAAD,CAAR;IACD,CAHD,MAGO,IAAIC,KAAK,CAACQ,OAAN,IAAiB,CAACR,KAAK,CAACS,KAA5B,EAAmC;MACxCN,QAAQ,CAAC,iDAAD,CAAR;MACAJ,QAAQ,CAAC,KAAD,CAAR;IACD,CAHM,MAGA;MACLI,QAAQ,CAAC,IAAD,CAAR,CADK,CAEL;;MACA,IAAIG,SAAS,IAAI,CAACJ,KAAlB,EAAyB;QACvBH,QAAQ,CAAC,IAAD,CAAR;MACD;IACF;EACF,CAdQ,EAcN,CAACD,UAAU,CAACS,kBAAZ,EAAgCP,KAAK,CAACQ,OAAtC,EAA+CR,KAAK,CAACS,KAArD,EAA4DV,QAA5D,EAAsEO,SAAtE,EAAiFJ,KAAjF,CAdM,CAAT;EAgBA,MAAMQ,gBAAgB,GAAGtB,EAAE,CACzB;IACE,CAACgB,MAAM,CAACO,UAAR,GAAqB,CAAC,CAACX,KAAK,CAACY;EAD/B,CADyB,EAIzBR,MAAM,CAACS,OAJkB,CAA3B;EAOA,oBACE,KAAC,WAAD;IAAa,KAAK,EAAC,MAAnB;IAA0B,eAAaZ,IAAI,CAAC,aAAD,CAA3C;IAAA,uBACE,KAAC,OAAD;MAAS,OAAO,EAAEC,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,EAA3B;MAAA,uBACE;QAAK,SAAS,EAAEE,MAAM,CAACU,WAAvB;QAAA,qCAEE,KAAC,UAAD;UACE,IAAI,EAAC,KADP;UAEE,OAAO,EAAE,CAAC,CAACd,KAAK,CAACY,QAAR,GAAmB,8BAAnB,GAAoD,6BAF/D;UAGE,QAAQ,EAAE,CAAC,CAACV,KAHd;UAIE,SAAS,EAAEQ,gBAJb;UAKE,OAAO,EAAE,MAAM;YACbX,QAAQ,CAAC,CAACC,KAAK,CAACY,QAAR,CAAR;UACD;QAPH,EAFF;MAAA;IADF;EADF,EADF;AAkBD;;AAED,SAASP,SAAT,CAAmBU,KAAnB,EAAyC;EACvC,OAAO;IACLF,OAAO,EAAE1B,GAAI;AACjB,qBAAqB4B,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACtC,KAHS;IAILL,UAAU,EAAExB,GAAI;AACpB,eAAe4B,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,IAAK;AACzC,KANS;IAOLL,WAAW,EAAE3B,GAAI;AACrB;AACA;AACA;EAVS,CAAP;AAYD"},"metadata":{},"sourceType":"module"}