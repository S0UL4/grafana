{"ast":null,"code":"import { createContext, useCallback, useContext } from 'react';\nexport const combineReducers = reducers => (state, action) => {\n  const newState = {};\n\n  for (const key in reducers) {\n    newState[key] = reducers[key](state[key], action);\n  }\n\n  return newState;\n};\nexport const useStatelessReducer = (onChange, state, reducer) => {\n  const dispatch = useCallback(action => {\n    onChange(reducer(state, action));\n  }, [onChange, state, reducer]);\n  return dispatch;\n};\nexport const DispatchContext = /*#__PURE__*/createContext(undefined);\nexport const useDispatch = () => {\n  const dispatch = useContext(DispatchContext);\n\n  if (!dispatch) {\n    throw new Error('Use DispatchContext first.');\n  }\n\n  return dispatch;\n};","map":{"version":3,"names":["createContext","useCallback","useContext","combineReducers","reducers","state","action","newState","key","useStatelessReducer","onChange","reducer","dispatch","DispatchContext","undefined","useDispatch","Error"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/hooks/useStatelessReducer.ts"],"sourcesContent":["import { Action } from '@reduxjs/toolkit';\nimport { createContext, useCallback, useContext } from 'react';\n\nexport type Reducer<S, A extends Action> = (state: S, action: A) => S;\n\nexport const combineReducers =\n  <S, A extends Action = Action>(reducers: { [P in keyof S]: Reducer<S[P], A> }) =>\n  (state: S, action: A): Partial<S> => {\n    const newState = {} as S;\n    for (const key in reducers) {\n      newState[key] = reducers[key](state[key], action);\n    }\n    return newState;\n  };\n\nexport const useStatelessReducer = <State, A = Action>(\n  onChange: (value: State) => void,\n  state: State,\n  reducer: (state: State, action: A) => State\n) => {\n  const dispatch = useCallback(\n    (action: A) => {\n      onChange(reducer(state, action));\n    },\n    [onChange, state, reducer]\n  );\n\n  return dispatch;\n};\n\nexport const DispatchContext = createContext<((action: Action) => void) | undefined>(undefined);\n\nexport const useDispatch = <T extends Action = Action>(): ((action: T) => void) => {\n  const dispatch = useContext(DispatchContext);\n\n  if (!dispatch) {\n    throw new Error('Use DispatchContext first.');\n  }\n\n  return dispatch;\n};\n"],"mappings":"AACA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,OAAvD;AAIA,OAAO,MAAMC,eAAe,GACKC,QAA/B,IACA,CAACC,KAAD,EAAWC,MAAX,KAAqC;EACnC,MAAMC,QAAQ,GAAG,EAAjB;;EACA,KAAK,MAAMC,GAAX,IAAkBJ,QAAlB,EAA4B;IAC1BG,QAAQ,CAACC,GAAD,CAAR,GAAgBJ,QAAQ,CAACI,GAAD,CAAR,CAAcH,KAAK,CAACG,GAAD,CAAnB,EAA0BF,MAA1B,CAAhB;EACD;;EACD,OAAOC,QAAP;AACD,CARI;AAUP,OAAO,MAAME,mBAAmB,GAAG,CACjCC,QADiC,EAEjCL,KAFiC,EAGjCM,OAHiC,KAI9B;EACH,MAAMC,QAAQ,GAAGX,WAAW,CACzBK,MAAD,IAAe;IACbI,QAAQ,CAACC,OAAO,CAACN,KAAD,EAAQC,MAAR,CAAR,CAAR;EACD,CAHyB,EAI1B,CAACI,QAAD,EAAWL,KAAX,EAAkBM,OAAlB,CAJ0B,CAA5B;EAOA,OAAOC,QAAP;AACD,CAbM;AAeP,OAAO,MAAMC,eAAe,gBAAGb,aAAa,CAAyCc,SAAzC,CAArC;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAwD;EACjF,MAAMH,QAAQ,GAAGV,UAAU,CAACW,eAAD,CAA3B;;EAEA,IAAI,CAACD,QAAL,EAAe;IACb,MAAM,IAAII,KAAJ,CAAU,4BAAV,CAAN;EACD;;EAED,OAAOJ,QAAP;AACD,CARM"},"metadata":{},"sourceType":"module"}