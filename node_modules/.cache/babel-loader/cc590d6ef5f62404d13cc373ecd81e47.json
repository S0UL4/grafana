{"ast":null,"code":"const _excluded = [\"name\", \"onClick\", \"icon\", \"className\", \"colorIndex\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { cx, css } from '@emotion/css';\nimport React, { forwardRef } from 'react';\nimport { useTheme } from '../../themes';\nimport { getTagColor, getTagColorsFromName } from '../../utils';\nimport { Icon } from '../Icon/Icon';\n/**\n * @public\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Tag = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    name,\n    onClick,\n    icon,\n    className,\n    colorIndex\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme();\n  const styles = getTagStyles(theme, name, colorIndex);\n\n  const onTagClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    onClick === null || onClick === void 0 ? void 0 : onClick(name, event);\n  };\n\n  const classes = cx(styles.wrapper, className, {\n    [styles.hover]: onClick !== undefined\n  });\n  return onClick ? /*#__PURE__*/_jsxs(\"button\", Object.assign({}, rest, {\n    className: classes,\n    onClick: onTagClick,\n    ref: ref,\n    children: [icon && /*#__PURE__*/_jsx(Icon, {\n      name: icon\n    }), name]\n  })) : /*#__PURE__*/_jsxs(\"span\", Object.assign({}, rest, {\n    className: classes,\n    ref: ref,\n    children: [icon && /*#__PURE__*/_jsx(Icon, {\n      name: icon\n    }), name]\n  }));\n});\nTag.displayName = 'Tag';\n\nconst getTagStyles = (theme, name, colorIndex) => {\n  let colors;\n\n  if (colorIndex === undefined) {\n    colors = getTagColorsFromName(name);\n  } else {\n    colors = getTagColor(colorIndex);\n  }\n\n  return {\n    wrapper: css`\n      appearance: none;\n      border-style: none;\n      font-weight: ${theme.typography.weight.semibold};\n      font-size: ${theme.typography.size.sm};\n      line-height: ${theme.typography.lineHeight.xs};\n      vertical-align: baseline;\n      background-color: ${colors.color};\n      color: ${theme.palette.gray98};\n      white-space: nowrap;\n      text-shadow: none;\n      padding: 3px 6px;\n      border-radius: ${theme.border.radius.md};\n    `,\n    hover: css`\n      &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n      }\n    `\n  };\n};","map":{"version":3,"names":["cx","css","React","forwardRef","useTheme","getTagColor","getTagColorsFromName","Icon","Tag","ref","name","onClick","icon","className","colorIndex","rest","theme","styles","getTagStyles","onTagClick","event","preventDefault","stopPropagation","classes","wrapper","hover","undefined","displayName","colors","typography","weight","semibold","size","sm","lineHeight","xs","color","palette","gray98","border","radius","md"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Tags/Tag.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { useTheme } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { getTagColor, getTagColorsFromName } from '../../utils';\nimport { Icon } from '../Icon/Icon';\n\n/**\n * @public\n */\nexport type OnTagClick = (name: string, event: React.MouseEvent<HTMLElement>) => any;\n\nexport interface Props extends Omit<HTMLAttributes<HTMLElement>, 'onClick'> {\n  /** Name of the tag to display */\n  name: string;\n  icon?: IconName;\n  /** Use constant color from TAG_COLORS. Using index instead of color directly so we can match other styling. */\n  colorIndex?: number;\n  onClick?: OnTagClick;\n}\n\nexport const Tag = forwardRef<HTMLElement, Props>(({ name, onClick, icon, className, colorIndex, ...rest }, ref) => {\n  const theme = useTheme();\n  const styles = getTagStyles(theme, name, colorIndex);\n\n  const onTagClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onClick?.(name, event);\n  };\n\n  const classes = cx(styles.wrapper, className, { [styles.hover]: onClick !== undefined });\n\n  return onClick ? (\n    <button {...rest} className={classes} onClick={onTagClick} ref={ref as React.ForwardedRef<HTMLButtonElement>}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </button>\n  ) : (\n    <span {...rest} className={classes} ref={ref}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </span>\n  );\n});\n\nTag.displayName = 'Tag';\n\nconst getTagStyles = (theme: GrafanaTheme, name: string, colorIndex?: number) => {\n  let colors;\n  if (colorIndex === undefined) {\n    colors = getTagColorsFromName(name);\n  } else {\n    colors = getTagColor(colorIndex);\n  }\n  return {\n    wrapper: css`\n      appearance: none;\n      border-style: none;\n      font-weight: ${theme.typography.weight.semibold};\n      font-size: ${theme.typography.size.sm};\n      line-height: ${theme.typography.lineHeight.xs};\n      vertical-align: baseline;\n      background-color: ${colors.color};\n      color: ${theme.palette.gray98};\n      white-space: nowrap;\n      text-shadow: none;\n      padding: 3px 6px;\n      border-radius: ${theme.border.radius.md};\n    `,\n    hover: css`\n      &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n      }\n    `,\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,EAAT,EAAaC,GAAb,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkD,OAAlD;AAIA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,aAAlD;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA;AACA;AACA;;;;AAYA,OAAO,MAAMC,GAAG,gBAAGL,UAAU,CAAqB,OAA0DM,GAA1D,KAAkE;EAAA,IAAjE;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,IAAjB;IAAuBC,SAAvB;IAAkCC;EAAlC,CAAiE;EAAA,IAAhBC,IAAgB;;EAClH,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAMa,MAAM,GAAGC,YAAY,CAACF,KAAD,EAAQN,IAAR,EAAcI,UAAd,CAA3B;;EAEA,MAAMK,UAAU,GAAIC,KAAD,IAA0C;IAC3DA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACE,eAAN;IAEAX,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGD,IAAH,EAASU,KAAT,CAAP;EACD,CALD;;EAOA,MAAMG,OAAO,GAAGvB,EAAE,CAACiB,MAAM,CAACO,OAAR,EAAiBX,SAAjB,EAA4B;IAAE,CAACI,MAAM,CAACQ,KAAR,GAAgBd,OAAO,KAAKe;EAA9B,CAA5B,CAAlB;EAEA,OAAOf,OAAO,gBACZ,kCAAYI,IAAZ;IAAkB,SAAS,EAAEQ,OAA7B;IAAsC,OAAO,EAAEJ,UAA/C;IAA2D,GAAG,EAAEV,GAAhE;IAAA,WACGG,IAAI,iBAAI,KAAC,IAAD;MAAM,IAAI,EAAEA;IAAZ,EADX,EAEGF,IAFH;EAAA,GADY,gBAMZ,gCAAUK,IAAV;IAAgB,SAAS,EAAEQ,OAA3B;IAAoC,GAAG,EAAEd,GAAzC;IAAA,WACGG,IAAI,iBAAI,KAAC,IAAD;MAAM,IAAI,EAAEA;IAAZ,EADX,EAEGF,IAFH;EAAA,GANF;AAWD,CAxB4B,CAAtB;AA0BPF,GAAG,CAACmB,WAAJ,GAAkB,KAAlB;;AAEA,MAAMT,YAAY,GAAG,CAACF,KAAD,EAAsBN,IAAtB,EAAoCI,UAApC,KAA4D;EAC/E,IAAIc,MAAJ;;EACA,IAAId,UAAU,KAAKY,SAAnB,EAA8B;IAC5BE,MAAM,GAAGtB,oBAAoB,CAACI,IAAD,CAA7B;EACD,CAFD,MAEO;IACLkB,MAAM,GAAGvB,WAAW,CAACS,UAAD,CAApB;EACD;;EACD,OAAO;IACLU,OAAO,EAAEvB,GAAI;AACjB;AACA;AACA,qBAAqBe,KAAK,CAACa,UAAN,CAAiBC,MAAjB,CAAwBC,QAAS;AACtD,mBAAmBf,KAAK,CAACa,UAAN,CAAiBG,IAAjB,CAAsBC,EAAG;AAC5C,qBAAqBjB,KAAK,CAACa,UAAN,CAAiBK,UAAjB,CAA4BC,EAAG;AACpD;AACA,0BAA0BP,MAAM,CAACQ,KAAM;AACvC,eAAepB,KAAK,CAACqB,OAAN,CAAcC,MAAO;AACpC;AACA;AACA;AACA,uBAAuBtB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBC,EAAG;AAC9C,KAdS;IAeLhB,KAAK,EAAExB,GAAI;AACf;AACA;AACA;AACA;AACA;EApBS,CAAP;AAsBD,CA7BD"},"metadata":{},"sourceType":"module"}