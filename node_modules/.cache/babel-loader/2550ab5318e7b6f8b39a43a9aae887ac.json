{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { locationSearchToObject } from '@grafana/runtime';\nimport { LoadingPlaceholder, Select, RadioButtonGroup, useStyles2, Tooltip } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { HorizontalGroup } from '../components/HorizontalGroup';\nimport { PluginList } from '../components/PluginList';\nimport { SearchField } from '../components/SearchField';\nimport { Sorters } from '../helpers';\nimport { useHistory } from '../hooks/useHistory';\nimport { useGetAllWithFilters, useIsRemotePluginsAvailable, useDisplayMode } from '../state/hooks';\nimport { PluginAdminRoutes, PluginListDisplayMode } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Browse({\n  route\n}) {\n  const location = useLocation();\n  const locationSearch = locationSearchToObject(location.search);\n  const navModelId = getNavModelId(route.routeName);\n  const navModel = useSelector(state => getNavModel(state.navIndex, navModelId));\n  const {\n    displayMode,\n    setDisplayMode\n  } = useDisplayMode();\n  const styles = useStyles2(getStyles);\n  const history = useHistory();\n  const remotePluginsAvailable = useIsRemotePluginsAvailable();\n  const query = locationSearch.q || '';\n  const filterBy = locationSearch.filterBy || 'installed';\n  const filterByType = locationSearch.filterByType || 'all';\n  const sortBy = locationSearch.sortBy || Sorters.nameAsc;\n  const {\n    isLoading,\n    error,\n    plugins\n  } = useGetAllWithFilters({\n    query,\n    filterBy,\n    filterByType,\n    sortBy\n  });\n  const filterByOptions = [{\n    value: 'all',\n    label: 'All'\n  }, {\n    value: 'installed',\n    label: 'Installed'\n  }];\n\n  const onSortByChange = value => {\n    history.push({\n      query: {\n        sortBy: value.value\n      }\n    });\n  };\n\n  const onFilterByChange = value => {\n    history.push({\n      query: {\n        filterBy: value\n      }\n    });\n  };\n\n  const onFilterByTypeChange = value => {\n    history.push({\n      query: {\n        filterByType: value\n      }\n    });\n  };\n\n  const onSearch = q => {\n    history.push({\n      query: {\n        filterBy: 'all',\n        filterByType: 'all',\n        q\n      }\n    });\n  }; // How should we handle errors?\n\n\n  if (error) {\n    console.error(error.message);\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Page, {\n    navModel: navModel,\n    children: /*#__PURE__*/_jsxs(Page.Contents, {\n      children: [/*#__PURE__*/_jsxs(HorizontalGroup, {\n        wrap: true,\n        children: [/*#__PURE__*/_jsx(SearchField, {\n          value: query,\n          onSearch: onSearch\n        }), /*#__PURE__*/_jsxs(HorizontalGroup, {\n          wrap: true,\n          className: styles.actionBar,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n              value: filterByType,\n              onChange: onFilterByTypeChange,\n              options: [{\n                value: 'all',\n                label: 'All'\n              }, {\n                value: 'datasource',\n                label: 'Data sources'\n              }, {\n                value: 'panel',\n                label: 'Panels'\n              }, {\n                value: 'app',\n                label: 'Applications'\n              }]\n            })\n          }), remotePluginsAvailable ? /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n              value: filterBy,\n              onChange: onFilterByChange,\n              options: filterByOptions\n            })\n          }) : /*#__PURE__*/_jsx(Tooltip, {\n            content: \"This filter has been disabled because the Grafana server cannot access grafana.com\",\n            placement: \"top\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n                disabled: true,\n                value: filterBy,\n                onChange: onFilterByChange,\n                options: filterByOptions\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Select, {\n              \"aria-label\": \"Sort Plugins List\",\n              width: 24,\n              value: sortBy,\n              onChange: onSortByChange,\n              options: [{\n                value: 'nameAsc',\n                label: 'Sort by name (A-Z)'\n              }, {\n                value: 'nameDesc',\n                label: 'Sort by name (Z-A)'\n              }, {\n                value: 'updated',\n                label: 'Sort by updated date'\n              }, {\n                value: 'published',\n                label: 'Sort by published date'\n              }, {\n                value: 'downloads',\n                label: 'Sort by downloads'\n              }]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n              className: styles.displayAs,\n              value: displayMode,\n              onChange: setDisplayMode,\n              options: [{\n                value: PluginListDisplayMode.Grid,\n                icon: 'table',\n                description: 'Display plugins in a grid layout'\n              }, {\n                value: PluginListDisplayMode.List,\n                icon: 'list-ul',\n                description: 'Display plugins in list'\n              }]\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.listWrap,\n        children: isLoading ? /*#__PURE__*/_jsx(LoadingPlaceholder, {\n          className: css`\n                margin-bottom: 0;\n              `,\n          text: \"Loading results\"\n        }) : /*#__PURE__*/_jsx(PluginList, {\n          plugins: plugins,\n          displayMode: displayMode\n        })\n      })]\n    })\n  });\n}\n\nconst getStyles = theme => ({\n  actionBar: css`\n    ${theme.breakpoints.up('xl')} {\n      margin-left: auto;\n    }\n  `,\n  listWrap: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n  displayAs: css`\n    svg {\n      margin-right: 0;\n    }\n  `\n}); // Because the component is used under multiple paths (/plugins and /admin/plugins) we need to get\n// the correct navModel from the store\n\n\nconst getNavModelId = routeName => {\n  if (routeName === PluginAdminRoutes.HomeAdmin || routeName === PluginAdminRoutes.BrowseAdmin) {\n    return 'admin-plugins';\n  }\n\n  return 'plugins';\n};","map":{"version":3,"names":["css","React","useSelector","useLocation","locationSearchToObject","LoadingPlaceholder","Select","RadioButtonGroup","useStyles2","Tooltip","Page","getNavModel","HorizontalGroup","PluginList","SearchField","Sorters","useHistory","useGetAllWithFilters","useIsRemotePluginsAvailable","useDisplayMode","PluginAdminRoutes","PluginListDisplayMode","Browse","route","location","locationSearch","search","navModelId","getNavModelId","routeName","navModel","state","navIndex","displayMode","setDisplayMode","styles","getStyles","history","remotePluginsAvailable","query","q","filterBy","filterByType","sortBy","nameAsc","isLoading","error","plugins","filterByOptions","value","label","onSortByChange","push","onFilterByChange","onFilterByTypeChange","onSearch","console","message","actionBar","displayAs","Grid","icon","description","List","listWrap","theme","breakpoints","up","spacing","HomeAdmin","BrowseAdmin"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/pages/Browse.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { SelectableValue, GrafanaTheme2 } from '@grafana/data';\nimport { locationSearchToObject } from '@grafana/runtime';\nimport { LoadingPlaceholder, Select, RadioButtonGroup, useStyles2, Tooltip } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types/store';\n\nimport { HorizontalGroup } from '../components/HorizontalGroup';\nimport { PluginList } from '../components/PluginList';\nimport { SearchField } from '../components/SearchField';\nimport { Sorters } from '../helpers';\nimport { useHistory } from '../hooks/useHistory';\nimport { useGetAllWithFilters, useIsRemotePluginsAvailable, useDisplayMode } from '../state/hooks';\nimport { PluginAdminRoutes, PluginListDisplayMode } from '../types';\n\nexport default function Browse({ route }: GrafanaRouteComponentProps): ReactElement | null {\n  const location = useLocation();\n  const locationSearch = locationSearchToObject(location.search);\n  const navModelId = getNavModelId(route.routeName);\n  const navModel = useSelector((state: StoreState) => getNavModel(state.navIndex, navModelId));\n  const { displayMode, setDisplayMode } = useDisplayMode();\n  const styles = useStyles2(getStyles);\n  const history = useHistory();\n  const remotePluginsAvailable = useIsRemotePluginsAvailable();\n  const query = (locationSearch.q as string) || '';\n  const filterBy = (locationSearch.filterBy as string) || 'installed';\n  const filterByType = (locationSearch.filterByType as string) || 'all';\n  const sortBy = (locationSearch.sortBy as Sorters) || Sorters.nameAsc;\n  const { isLoading, error, plugins } = useGetAllWithFilters({\n    query,\n    filterBy,\n    filterByType,\n    sortBy,\n  });\n  const filterByOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'installed', label: 'Installed' },\n  ];\n\n  const onSortByChange = (value: SelectableValue<string>) => {\n    history.push({ query: { sortBy: value.value } });\n  };\n\n  const onFilterByChange = (value: string) => {\n    history.push({ query: { filterBy: value } });\n  };\n\n  const onFilterByTypeChange = (value: string) => {\n    history.push({ query: { filterByType: value } });\n  };\n\n  const onSearch = (q: any) => {\n    history.push({ query: { filterBy: 'all', filterByType: 'all', q } });\n  };\n\n  // How should we handle errors?\n  if (error) {\n    console.error(error.message);\n    return null;\n  }\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <HorizontalGroup wrap>\n          <SearchField value={query} onSearch={onSearch} />\n          <HorizontalGroup wrap className={styles.actionBar}>\n            {/* Filter by type */}\n            <div>\n              <RadioButtonGroup\n                value={filterByType}\n                onChange={onFilterByTypeChange}\n                options={[\n                  { value: 'all', label: 'All' },\n                  { value: 'datasource', label: 'Data sources' },\n                  { value: 'panel', label: 'Panels' },\n                  { value: 'app', label: 'Applications' },\n                ]}\n              />\n            </div>\n\n            {/* Filter by installed / all */}\n            {remotePluginsAvailable ? (\n              <div>\n                <RadioButtonGroup value={filterBy} onChange={onFilterByChange} options={filterByOptions} />\n              </div>\n            ) : (\n              <Tooltip\n                content=\"This filter has been disabled because the Grafana server cannot access grafana.com\"\n                placement=\"top\"\n              >\n                <div>\n                  <RadioButtonGroup\n                    disabled={true}\n                    value={filterBy}\n                    onChange={onFilterByChange}\n                    options={filterByOptions}\n                  />\n                </div>\n              </Tooltip>\n            )}\n\n            {/* Sorting */}\n            <div>\n              <Select\n                aria-label=\"Sort Plugins List\"\n                width={24}\n                value={sortBy}\n                onChange={onSortByChange}\n                options={[\n                  { value: 'nameAsc', label: 'Sort by name (A-Z)' },\n                  { value: 'nameDesc', label: 'Sort by name (Z-A)' },\n                  { value: 'updated', label: 'Sort by updated date' },\n                  { value: 'published', label: 'Sort by published date' },\n                  { value: 'downloads', label: 'Sort by downloads' },\n                ]}\n              />\n            </div>\n\n            {/* Display mode */}\n            <div>\n              <RadioButtonGroup<PluginListDisplayMode>\n                className={styles.displayAs}\n                value={displayMode}\n                onChange={setDisplayMode}\n                options={[\n                  {\n                    value: PluginListDisplayMode.Grid,\n                    icon: 'table',\n                    description: 'Display plugins in a grid layout',\n                  },\n                  { value: PluginListDisplayMode.List, icon: 'list-ul', description: 'Display plugins in list' },\n                ]}\n              />\n            </div>\n          </HorizontalGroup>\n        </HorizontalGroup>\n        <div className={styles.listWrap}>\n          {isLoading ? (\n            <LoadingPlaceholder\n              className={css`\n                margin-bottom: 0;\n              `}\n              text=\"Loading results\"\n            />\n          ) : (\n            <PluginList plugins={plugins} displayMode={displayMode} />\n          )}\n        </div>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionBar: css`\n    ${theme.breakpoints.up('xl')} {\n      margin-left: auto;\n    }\n  `,\n  listWrap: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n  displayAs: css`\n    svg {\n      margin-right: 0;\n    }\n  `,\n});\n\n// Because the component is used under multiple paths (/plugins and /admin/plugins) we need to get\n// the correct navModel from the store\nconst getNavModelId = (routeName?: string) => {\n  if (routeName === PluginAdminRoutes.HomeAdmin || routeName === PluginAdminRoutes.BrowseAdmin) {\n    return 'admin-plugins';\n  }\n\n  return 'plugins';\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,SAASC,kBAAT,EAA6BC,MAA7B,EAAqCC,gBAArC,EAAuDC,UAAvD,EAAmEC,OAAnE,QAAkF,aAAlF;AACA,SAASC,IAAT,QAAqB,+BAArB;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,oBAAT,EAA+BC,2BAA/B,EAA4DC,cAA5D,QAAkF,gBAAlF;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,UAAzD;;;AAEA,eAAe,SAASC,MAAT,CAAgB;EAAEC;AAAF,CAAhB,EAA4E;EACzF,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAMsB,cAAc,GAAGrB,sBAAsB,CAACoB,QAAQ,CAACE,MAAV,CAA7C;EACA,MAAMC,UAAU,GAAGC,aAAa,CAACL,KAAK,CAACM,SAAP,CAAhC;EACA,MAAMC,QAAQ,GAAG5B,WAAW,CAAE6B,KAAD,IAAuBpB,WAAW,CAACoB,KAAK,CAACC,QAAP,EAAiBL,UAAjB,CAAnC,CAA5B;EACA,MAAM;IAAEM,WAAF;IAAeC;EAAf,IAAkCf,cAAc,EAAtD;EACA,MAAMgB,MAAM,GAAG3B,UAAU,CAAC4B,SAAD,CAAzB;EACA,MAAMC,OAAO,GAAGrB,UAAU,EAA1B;EACA,MAAMsB,sBAAsB,GAAGpB,2BAA2B,EAA1D;EACA,MAAMqB,KAAK,GAAId,cAAc,CAACe,CAAhB,IAAgC,EAA9C;EACA,MAAMC,QAAQ,GAAIhB,cAAc,CAACgB,QAAhB,IAAuC,WAAxD;EACA,MAAMC,YAAY,GAAIjB,cAAc,CAACiB,YAAhB,IAA2C,KAAhE;EACA,MAAMC,MAAM,GAAIlB,cAAc,CAACkB,MAAhB,IAAsC5B,OAAO,CAAC6B,OAA7D;EACA,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC;EAApB,IAAgC9B,oBAAoB,CAAC;IACzDsB,KADyD;IAEzDE,QAFyD;IAGzDC,YAHyD;IAIzDC;EAJyD,CAAD,CAA1D;EAMA,MAAMK,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADsB,EAEtB;IAAED,KAAK,EAAE,WAAT;IAAsBC,KAAK,EAAE;EAA7B,CAFsB,CAAxB;;EAKA,MAAMC,cAAc,GAAIF,KAAD,IAAoC;IACzDZ,OAAO,CAACe,IAAR,CAAa;MAAEb,KAAK,EAAE;QAAEI,MAAM,EAAEM,KAAK,CAACA;MAAhB;IAAT,CAAb;EACD,CAFD;;EAIA,MAAMI,gBAAgB,GAAIJ,KAAD,IAAmB;IAC1CZ,OAAO,CAACe,IAAR,CAAa;MAAEb,KAAK,EAAE;QAAEE,QAAQ,EAAEQ;MAAZ;IAAT,CAAb;EACD,CAFD;;EAIA,MAAMK,oBAAoB,GAAIL,KAAD,IAAmB;IAC9CZ,OAAO,CAACe,IAAR,CAAa;MAAEb,KAAK,EAAE;QAAEG,YAAY,EAAEO;MAAhB;IAAT,CAAb;EACD,CAFD;;EAIA,MAAMM,QAAQ,GAAIf,CAAD,IAAY;IAC3BH,OAAO,CAACe,IAAR,CAAa;MAAEb,KAAK,EAAE;QAAEE,QAAQ,EAAE,KAAZ;QAAmBC,YAAY,EAAE,KAAjC;QAAwCF;MAAxC;IAAT,CAAb;EACD,CAFD,CApCyF,CAwCzF;;;EACA,IAAIM,KAAJ,EAAW;IACTU,OAAO,CAACV,KAAR,CAAcA,KAAK,CAACW,OAApB;IACA,OAAO,IAAP;EACD;;EAED,oBACE,KAAC,IAAD;IAAM,QAAQ,EAAE3B,QAAhB;IAAA,uBACE,MAAC,IAAD,CAAM,QAAN;MAAA,wBACE,MAAC,eAAD;QAAiB,IAAI,MAArB;QAAA,wBACE,KAAC,WAAD;UAAa,KAAK,EAAES,KAApB;UAA2B,QAAQ,EAAEgB;QAArC,EADF,eAEE,MAAC,eAAD;UAAiB,IAAI,MAArB;UAAsB,SAAS,EAAEpB,MAAM,CAACuB,SAAxC;UAAA,wBAEE;YAAA,uBACE,KAAC,gBAAD;cACE,KAAK,EAAEhB,YADT;cAEE,QAAQ,EAAEY,oBAFZ;cAGE,OAAO,EAAE,CACP;gBAAEL,KAAK,EAAE,KAAT;gBAAgBC,KAAK,EAAE;cAAvB,CADO,EAEP;gBAAED,KAAK,EAAE,YAAT;gBAAuBC,KAAK,EAAE;cAA9B,CAFO,EAGP;gBAAED,KAAK,EAAE,OAAT;gBAAkBC,KAAK,EAAE;cAAzB,CAHO,EAIP;gBAAED,KAAK,EAAE,KAAT;gBAAgBC,KAAK,EAAE;cAAvB,CAJO;YAHX;UADF,EAFF,EAgBGZ,sBAAsB,gBACrB;YAAA,uBACE,KAAC,gBAAD;cAAkB,KAAK,EAAEG,QAAzB;cAAmC,QAAQ,EAAEY,gBAA7C;cAA+D,OAAO,EAAEL;YAAxE;UADF,EADqB,gBAKrB,KAAC,OAAD;YACE,OAAO,EAAC,oFADV;YAEE,SAAS,EAAC,KAFZ;YAAA,uBAIE;cAAA,uBACE,KAAC,gBAAD;gBACE,QAAQ,EAAE,IADZ;gBAEE,KAAK,EAAEP,QAFT;gBAGE,QAAQ,EAAEY,gBAHZ;gBAIE,OAAO,EAAEL;cAJX;YADF;UAJF,EArBJ,eAqCE;YAAA,uBACE,KAAC,MAAD;cACE,cAAW,mBADb;cAEE,KAAK,EAAE,EAFT;cAGE,KAAK,EAAEL,MAHT;cAIE,QAAQ,EAAEQ,cAJZ;cAKE,OAAO,EAAE,CACP;gBAAEF,KAAK,EAAE,SAAT;gBAAoBC,KAAK,EAAE;cAA3B,CADO,EAEP;gBAAED,KAAK,EAAE,UAAT;gBAAqBC,KAAK,EAAE;cAA5B,CAFO,EAGP;gBAAED,KAAK,EAAE,SAAT;gBAAoBC,KAAK,EAAE;cAA3B,CAHO,EAIP;gBAAED,KAAK,EAAE,WAAT;gBAAsBC,KAAK,EAAE;cAA7B,CAJO,EAKP;gBAAED,KAAK,EAAE,WAAT;gBAAsBC,KAAK,EAAE;cAA7B,CALO;YALX;UADF,EArCF,eAsDE;YAAA,uBACE,KAAC,gBAAD;cACE,SAAS,EAAEf,MAAM,CAACwB,SADpB;cAEE,KAAK,EAAE1B,WAFT;cAGE,QAAQ,EAAEC,cAHZ;cAIE,OAAO,EAAE,CACP;gBACEe,KAAK,EAAE5B,qBAAqB,CAACuC,IAD/B;gBAEEC,IAAI,EAAE,OAFR;gBAGEC,WAAW,EAAE;cAHf,CADO,EAMP;gBAAEb,KAAK,EAAE5B,qBAAqB,CAAC0C,IAA/B;gBAAqCF,IAAI,EAAE,SAA3C;gBAAsDC,WAAW,EAAE;cAAnE,CANO;YAJX;UADF,EAtDF;QAAA,EAFF;MAAA,EADF,eA0EE;QAAK,SAAS,EAAE3B,MAAM,CAAC6B,QAAvB;QAAA,UACGnB,SAAS,gBACR,KAAC,kBAAD;UACE,SAAS,EAAE7C,GAAI;AAC7B;AACA,eAHY;UAIE,IAAI,EAAC;QAJP,EADQ,gBAQR,KAAC,UAAD;UAAY,OAAO,EAAE+C,OAArB;UAA8B,WAAW,EAAEd;QAA3C;MATJ,EA1EF;IAAA;EADF,EADF;AA2FD;;AAED,MAAMG,SAAS,GAAI6B,KAAD,KAA2B;EAC3CP,SAAS,EAAE1D,GAAI;AACjB,MAAMiE,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAA2B;AACjC;AACA;AACA,GAL6C;EAM3CH,QAAQ,EAAEhE,GAAI;AAChB,kBAAkBiE,KAAK,CAACG,OAAN,CAAc,CAAd,CAAiB;AACnC,GAR6C;EAS3CT,SAAS,EAAE3D,GAAI;AACjB;AACA;AACA;AACA;AAb6C,CAA3B,CAAlB,C,CAgBA;AACA;;;AACA,MAAM4B,aAAa,GAAIC,SAAD,IAAwB;EAC5C,IAAIA,SAAS,KAAKT,iBAAiB,CAACiD,SAAhC,IAA6CxC,SAAS,KAAKT,iBAAiB,CAACkD,WAAjF,EAA8F;IAC5F,OAAO,eAAP;EACD;;EAED,OAAO,SAAP;AACD,CAND"},"metadata":{},"sourceType":"module"}