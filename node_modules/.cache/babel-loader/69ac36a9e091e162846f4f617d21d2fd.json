{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Select } from '../Select/Select';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst weekStarts = [{\n  value: '',\n  label: 'Default'\n}, {\n  value: 'saturday',\n  label: 'Saturday'\n}, {\n  value: 'sunday',\n  label: 'Sunday'\n}, {\n  value: 'monday',\n  label: 'Monday'\n}];\nexport const WeekStartPicker = props => {\n  var _weekStarts$find;\n\n  const {\n    onChange,\n    width,\n    autoFocus = false,\n    onBlur,\n    value,\n    disabled = false,\n    inputId\n  } = props;\n  const onChangeWeekStart = useCallback(selectable => {\n    if (selectable.value !== undefined) {\n      onChange(selectable.value);\n    }\n  }, [onChange]);\n  return /*#__PURE__*/_jsx(Select, {\n    inputId: inputId,\n    value: (_weekStarts$find = weekStarts.find(item => item.value === value)) === null || _weekStarts$find === void 0 ? void 0 : _weekStarts$find.value,\n    placeholder: selectors.components.WeekStartPicker.placeholder,\n    autoFocus: autoFocus,\n    openMenuOnFocus: true,\n    width: width,\n    options: weekStarts,\n    onChange: onChangeWeekStart,\n    onBlur: onBlur,\n    disabled: disabled\n  });\n};","map":{"version":3,"names":["React","useCallback","selectors","Select","weekStarts","value","label","WeekStartPicker","props","onChange","width","autoFocus","onBlur","disabled","inputId","onChangeWeekStart","selectable","undefined","find","item","components","placeholder"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/WeekStartPicker.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Select } from '../Select/Select';\n\nexport interface Props {\n  onChange: (weekStart: string) => void;\n  value: string;\n  width?: number;\n  autoFocus?: boolean;\n  onBlur?: () => void;\n  includeInternal?: boolean;\n  disabled?: boolean;\n  inputId?: string;\n}\n\nconst weekStarts: Array<SelectableValue<string>> = [\n  { value: '', label: 'Default' },\n  { value: 'saturday', label: 'Saturday' },\n  { value: 'sunday', label: 'Sunday' },\n  { value: 'monday', label: 'Monday' },\n];\n\nexport const WeekStartPicker: React.FC<Props> = (props) => {\n  const { onChange, width, autoFocus = false, onBlur, value, disabled = false, inputId } = props;\n\n  const onChangeWeekStart = useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (selectable.value !== undefined) {\n        onChange(selectable.value);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <Select\n      inputId={inputId}\n      value={weekStarts.find((item) => item.value === value)?.value}\n      placeholder={selectors.components.WeekStartPicker.placeholder}\n      autoFocus={autoFocus}\n      openMenuOnFocus={true}\n      width={width}\n      options={weekStarts}\n      onChange={onChangeWeekStart}\n      onBlur={onBlur}\n      disabled={disabled}\n    />\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,MAAT,QAAuB,kBAAvB;;AAaA,MAAMC,UAA0C,GAAG,CACjD;EAAEC,KAAK,EAAE,EAAT;EAAaC,KAAK,EAAE;AAApB,CADiD,EAEjD;EAAED,KAAK,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CAFiD,EAGjD;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CAHiD,EAIjD;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CAJiD,CAAnD;AAOA,OAAO,MAAMC,eAAgC,GAAIC,KAAD,IAAW;EAAA;;EACzD,MAAM;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,SAAS,GAAG,KAA/B;IAAsCC,MAAtC;IAA8CP,KAA9C;IAAqDQ,QAAQ,GAAG,KAAhE;IAAuEC;EAAvE,IAAmFN,KAAzF;EAEA,MAAMO,iBAAiB,GAAGd,WAAW,CAClCe,UAAD,IAAyC;IACvC,IAAIA,UAAU,CAACX,KAAX,KAAqBY,SAAzB,EAAoC;MAClCR,QAAQ,CAACO,UAAU,CAACX,KAAZ,CAAR;IACD;EACF,CALkC,EAMnC,CAACI,QAAD,CANmC,CAArC;EASA,oBACE,KAAC,MAAD;IACE,OAAO,EAAEK,OADX;IAEE,KAAK,sBAAEV,UAAU,CAACc,IAAX,CAAiBC,IAAD,IAAUA,IAAI,CAACd,KAAL,KAAeA,KAAzC,CAAF,qDAAE,iBAAiDA,KAF1D;IAGE,WAAW,EAAEH,SAAS,CAACkB,UAAV,CAAqBb,eAArB,CAAqCc,WAHpD;IAIE,SAAS,EAAEV,SAJb;IAKE,eAAe,EAAE,IALnB;IAME,KAAK,EAAED,KANT;IAOE,OAAO,EAAEN,UAPX;IAQE,QAAQ,EAAEW,iBARZ;IASE,MAAM,EAAEH,MATV;IAUE,QAAQ,EAAEC;EAVZ,EADF;AAcD,CA1BM"},"metadata":{},"sourceType":"module"}