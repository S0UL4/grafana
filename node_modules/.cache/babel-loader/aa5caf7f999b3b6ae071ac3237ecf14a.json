{"ast":null,"code":"var _Icon, _span;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const RuleHealth = ({\n  rule\n}) => {\n  const style = useStyles2(getStyle);\n\n  if (rule.health === 'err' || rule.health === 'error') {\n    return /*#__PURE__*/_jsx(Tooltip, {\n      theme: \"error\",\n      content: rule.lastError || 'No error message provided.',\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: style.warn,\n        children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n          name: \"exclamation-triangle\"\n        })), _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          children: \"error\"\n        }))]\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: rule.health\n  });\n};\n\nconst getStyle = theme => ({\n  warn: css`\n    display: inline-flex;\n    flex-direction: row;\n    color: ${theme.colors.warning.text};\n    & > * + * {\n      margin-left: ${theme.spacing(1)};\n    }\n  `\n});","map":{"version":3,"names":["css","React","Icon","Tooltip","useStyles2","RuleHealth","rule","style","getStyle","health","lastError","warn","theme","colors","warning","text","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleHealth.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { Rule } from 'app/types/unified-alerting';\n\ninterface Prom {\n  rule: Rule;\n}\n\nexport const RuleHealth: FC<Prom> = ({ rule }) => {\n  const style = useStyles2(getStyle);\n  if (rule.health === 'err' || rule.health === 'error') {\n    return (\n      <Tooltip theme=\"error\" content={rule.lastError || 'No error message provided.'}>\n        <div className={style.warn}>\n          <Icon name=\"exclamation-triangle\" />\n          <span>error</span>\n        </div>\n      </Tooltip>\n    );\n  }\n  return <>{rule.health}</>;\n};\n\nconst getStyle = (theme: GrafanaTheme2) => ({\n  warn: css`\n    display: inline-flex;\n    flex-direction: row;\n    color: ${theme.colors.warning.text};\n    & > * + * {\n      margin-left: ${theme.spacing(1)};\n    }\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,UAAxB,QAA0C,aAA1C;;;;AAOA,OAAO,MAAMC,UAAoB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAChD,MAAMC,KAAK,GAAGH,UAAU,CAACI,QAAD,CAAxB;;EACA,IAAIF,IAAI,CAACG,MAAL,KAAgB,KAAhB,IAAyBH,IAAI,CAACG,MAAL,KAAgB,OAA7C,EAAsD;IACpD,oBACE,KAAC,OAAD;MAAS,KAAK,EAAC,OAAf;MAAuB,OAAO,EAAEH,IAAI,CAACI,SAAL,IAAkB,4BAAlD;MAAA,uBACE;QAAK,SAAS,EAAEH,KAAK,CAACI,IAAtB;QAAA,0CACE,KAAC,IAAD;UAAM,IAAI,EAAC;QAAX,EADF,kCAEE;UAAA;QAAA,EAFF;MAAA;IADF,EADF;EAQD;;EACD,oBAAO;IAAA,UAAGL,IAAI,CAACG;EAAR,EAAP;AACD,CAbM;;AAeP,MAAMD,QAAQ,GAAII,KAAD,KAA2B;EAC1CD,IAAI,EAAEX,GAAI;AACZ;AACA;AACA,aAAaY,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAAK;AACvC;AACA,qBAAqBH,KAAK,CAACI,OAAN,CAAc,CAAd,CAAiB;AACtC;AACA;AAR4C,CAA3B,CAAjB"},"metadata":{},"sourceType":"module"}