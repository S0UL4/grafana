{"ast":null,"code":"import React from 'react';\nimport { Input, InlineField, FieldSet } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const LogsConfig = props => {\n  const {\n    value,\n    onChange\n  } = props;\n\n  const changeHandler = key => event => {\n    onChange(Object.assign({}, value, {\n      [key]: event.currentTarget.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(FieldSet, {\n    label: \"Logs\",\n    children: [/*#__PURE__*/_jsx(InlineField, {\n      label: \"Message field name\",\n      labelWidth: 22,\n      children: /*#__PURE__*/_jsx(Input, {\n        id: \"es_logs-config_logMessageField\",\n        value: value.logMessageField,\n        onChange: changeHandler('logMessageField'),\n        placeholder: \"_source\",\n        width: 24\n      })\n    }), /*#__PURE__*/_jsx(InlineField, {\n      label: \"Level field name\",\n      labelWidth: 22,\n      children: /*#__PURE__*/_jsx(Input, {\n        id: \"es_logs-config_logLevelField\",\n        value: value.logLevelField,\n        onChange: changeHandler('logLevelField'),\n        width: 24\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","Input","InlineField","FieldSet","LogsConfig","props","value","onChange","changeHandler","key","event","currentTarget","logMessageField","logLevelField"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/configuration/LogsConfig.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Input, InlineField, FieldSet } from '@grafana/ui';\n\nimport { ElasticsearchOptions } from '../types';\n\ntype Props = {\n  value: ElasticsearchOptions;\n  onChange: (value: ElasticsearchOptions) => void;\n};\nexport const LogsConfig = (props: Props) => {\n  const { value, onChange } = props;\n  const changeHandler =\n    (key: keyof ElasticsearchOptions) => (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n      onChange({\n        ...value,\n        [key]: event.currentTarget.value,\n      });\n    };\n\n  return (\n    <FieldSet label=\"Logs\">\n      <InlineField label=\"Message field name\" labelWidth={22}>\n        <Input\n          id=\"es_logs-config_logMessageField\"\n          value={value.logMessageField}\n          onChange={changeHandler('logMessageField')}\n          placeholder=\"_source\"\n          width={24}\n        />\n      </InlineField>\n\n      <InlineField label=\"Level field name\" labelWidth={22}>\n        <Input\n          id=\"es_logs-config_logLevelField\"\n          value={value.logLevelField}\n          onChange={changeHandler('logLevelField')}\n          width={24}\n        />\n      </InlineField>\n    </FieldSet>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,aAA7C;;;AAQA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAkB;EAC1C,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBF,KAA5B;;EACA,MAAMG,aAAa,GAChBC,GAAD,IAAsCC,KAAD,IAAuE;IAC1GH,QAAQ,mBACHD,KADG;MAEN,CAACG,GAAD,GAAOC,KAAK,CAACC,aAAN,CAAoBL;IAFrB,GAAR;EAID,CANH;;EAQA,oBACE,MAAC,QAAD;IAAU,KAAK,EAAC,MAAhB;IAAA,wBACE,KAAC,WAAD;MAAa,KAAK,EAAC,oBAAnB;MAAwC,UAAU,EAAE,EAApD;MAAA,uBACE,KAAC,KAAD;QACE,EAAE,EAAC,gCADL;QAEE,KAAK,EAAEA,KAAK,CAACM,eAFf;QAGE,QAAQ,EAAEJ,aAAa,CAAC,iBAAD,CAHzB;QAIE,WAAW,EAAC,SAJd;QAKE,KAAK,EAAE;MALT;IADF,EADF,eAWE,KAAC,WAAD;MAAa,KAAK,EAAC,kBAAnB;MAAsC,UAAU,EAAE,EAAlD;MAAA,uBACE,KAAC,KAAD;QACE,EAAE,EAAC,8BADL;QAEE,KAAK,EAAEF,KAAK,CAACO,aAFf;QAGE,QAAQ,EAAEL,aAAa,CAAC,eAAD,CAHzB;QAIE,KAAK,EAAE;MAJT;IADF,EAXF;EAAA,EADF;AAsBD,CAhCM"},"metadata":{},"sourceType":"module"}