{"ast":null,"code":"let singleton;\n/**\n * Used during startup by Grafana to temporarily expose the angular injector to\n * pure javascript plugins using {@link getLegacyAngularInjector}.\n *\n * @internal\n */\n\nexport const setLegacyAngularInjector = instance => {\n  singleton = instance;\n};\n/**\n * WARNING: this function provides a temporary way for plugins to access anything in the\n * angular injector.  While the migration from angular to react continues, there are a few\n * options that do not yet have good alternatives.  Note that use of this function will\n * be removed in the future.\n *\n * @beta\n */\n\nexport const getLegacyAngularInjector = () => singleton;","map":{"version":3,"names":["singleton","setLegacyAngularInjector","instance","getLegacyAngularInjector"],"sources":["/home/soula/grafana/packages/grafana-runtime/src/services/legacyAngularInjector.ts"],"sourcesContent":["import { auto } from 'angular';\n\nlet singleton: auto.IInjectorService;\n\n/**\n * Used during startup by Grafana to temporarily expose the angular injector to\n * pure javascript plugins using {@link getLegacyAngularInjector}.\n *\n * @internal\n */\nexport const setLegacyAngularInjector = (instance: auto.IInjectorService) => {\n  singleton = instance;\n};\n\n/**\n * WARNING: this function provides a temporary way for plugins to access anything in the\n * angular injector.  While the migration from angular to react continues, there are a few\n * options that do not yet have good alternatives.  Note that use of this function will\n * be removed in the future.\n *\n * @beta\n */\nexport const getLegacyAngularInjector = (): auto.IInjectorService => singleton;\n"],"mappings":"AAEA,IAAIA,SAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,wBAAwB,GAAIC,QAAD,IAAqC;EAC3EF,SAAS,GAAGE,QAAZ;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,wBAAwB,GAAG,MAA6BH,SAA9D"},"metadata":{},"sourceType":"module"}