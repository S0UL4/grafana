{"ast":null,"code":"var _h, _h2;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { renderMarkdown } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class PluginHelp extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isError: false,\n      isLoading: false,\n      help: ''\n    });\n\n    _defineProperty(this, \"loadHelp\", () => {\n      const {\n        plugin,\n        type\n      } = this.props;\n      this.setState({\n        isLoading: true\n      });\n      getBackendSrv().get(`/api/plugins/${plugin.id}/markdown/${type}`).then(response => {\n        const helpHtml = renderMarkdown(response);\n\n        if (response === '' && type === 'help') {\n          this.setState({\n            isError: false,\n            isLoading: false,\n            help: this.constructPlaceholderInfo()\n          });\n        } else {\n          this.setState({\n            isError: false,\n            isLoading: false,\n            help: helpHtml\n          });\n        }\n      }).catch(() => {\n        this.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadHelp();\n  }\n\n  constructPlaceholderInfo() {\n    return 'No plugin help or readme markdown file was found';\n  }\n\n  render() {\n    const {\n      type\n    } = this.props;\n    const {\n      isError,\n      isLoading,\n      help\n    } = this.state;\n\n    if (isLoading) {\n      return _h || (_h = /*#__PURE__*/_jsx(\"h2\", {\n        children: \"Loading help...\"\n      }));\n    }\n\n    if (isError) {\n      return _h2 || (_h2 = /*#__PURE__*/_jsx(\"h3\", {\n        children: \"'Error occurred when loading help'\"\n      }));\n    }\n\n    if (type === 'panel_help' && help === '') {}\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"markdown-html\",\n      dangerouslySetInnerHTML: {\n        __html: help\n      }\n    });\n  }\n\n}","map":{"version":3,"names":["React","PureComponent","renderMarkdown","getBackendSrv","PluginHelp","isError","isLoading","help","plugin","type","props","setState","get","id","then","response","helpHtml","constructPlaceholderInfo","catch","componentDidMount","loadHelp","render","state","__html"],"sources":["/home/soula/grafana/public/app/core/components/PluginHelp/PluginHelp.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { renderMarkdown } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\n\ninterface Props {\n  plugin: {\n    name: string;\n    id: string;\n  };\n  type: string;\n}\n\ninterface State {\n  isError: boolean;\n  isLoading: boolean;\n  help: string;\n}\n\nexport class PluginHelp extends PureComponent<Props, State> {\n  state = {\n    isError: false,\n    isLoading: false,\n    help: '',\n  };\n\n  componentDidMount(): void {\n    this.loadHelp();\n  }\n\n  constructPlaceholderInfo() {\n    return 'No plugin help or readme markdown file was found';\n  }\n\n  loadHelp = () => {\n    const { plugin, type } = this.props;\n    this.setState({ isLoading: true });\n\n    getBackendSrv()\n      .get(`/api/plugins/${plugin.id}/markdown/${type}`)\n      .then((response: string) => {\n        const helpHtml = renderMarkdown(response);\n\n        if (response === '' && type === 'help') {\n          this.setState({\n            isError: false,\n            isLoading: false,\n            help: this.constructPlaceholderInfo(),\n          });\n        } else {\n          this.setState({\n            isError: false,\n            isLoading: false,\n            help: helpHtml,\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          isError: true,\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const { type } = this.props;\n    const { isError, isLoading, help } = this.state;\n\n    if (isLoading) {\n      return <h2>Loading help...</h2>;\n    }\n\n    if (isError) {\n      return <h3>&apos;Error occurred when loading help&apos;</h3>;\n    }\n\n    if (type === 'panel_help' && help === '') {\n    }\n\n    return <div className=\"markdown-html\" dangerouslySetInnerHTML={{ __html: help }} />;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAgBA,OAAO,MAAMC,UAAN,SAAyBH,aAAzB,CAAqD;EAAA;IAAA;;IAAA,+BAClD;MACNI,OAAO,EAAE,KADH;MAENC,SAAS,EAAE,KAFL;MAGNC,IAAI,EAAE;IAHA,CADkD;;IAAA,kCAe/C,MAAM;MACf,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAmB,KAAKC,KAA9B;MACA,KAAKC,QAAL,CAAc;QAAEL,SAAS,EAAE;MAAb,CAAd;MAEAH,aAAa,GACVS,GADH,CACQ,gBAAeJ,MAAM,CAACK,EAAG,aAAYJ,IAAK,EADlD,EAEGK,IAFH,CAESC,QAAD,IAAsB;QAC1B,MAAMC,QAAQ,GAAGd,cAAc,CAACa,QAAD,CAA/B;;QAEA,IAAIA,QAAQ,KAAK,EAAb,IAAmBN,IAAI,KAAK,MAAhC,EAAwC;UACtC,KAAKE,QAAL,CAAc;YACZN,OAAO,EAAE,KADG;YAEZC,SAAS,EAAE,KAFC;YAGZC,IAAI,EAAE,KAAKU,wBAAL;UAHM,CAAd;QAKD,CAND,MAMO;UACL,KAAKN,QAAL,CAAc;YACZN,OAAO,EAAE,KADG;YAEZC,SAAS,EAAE,KAFC;YAGZC,IAAI,EAAES;UAHM,CAAd;QAKD;MACF,CAlBH,EAmBGE,KAnBH,CAmBS,MAAM;QACX,KAAKP,QAAL,CAAc;UACZN,OAAO,EAAE,IADG;UAEZC,SAAS,EAAE;QAFC,CAAd;MAID,CAxBH;IAyBD,CA5CyD;EAAA;;EAO1Da,iBAAiB,GAAS;IACxB,KAAKC,QAAL;EACD;;EAEDH,wBAAwB,GAAG;IACzB,OAAO,kDAAP;EACD;;EAiCDI,MAAM,GAAG;IACP,MAAM;MAAEZ;IAAF,IAAW,KAAKC,KAAtB;IACA,MAAM;MAAEL,OAAF;MAAWC,SAAX;MAAsBC;IAAtB,IAA+B,KAAKe,KAA1C;;IAEA,IAAIhB,SAAJ,EAAe;MACb,gCAAO;QAAA;MAAA,EAAP;IACD;;IAED,IAAID,OAAJ,EAAa;MACX,kCAAO;QAAA;MAAA,EAAP;IACD;;IAED,IAAII,IAAI,KAAK,YAAT,IAAyBF,IAAI,KAAK,EAAtC,EAA0C,CACzC;;IAED,oBAAO;MAAK,SAAS,EAAC,eAAf;MAA+B,uBAAuB,EAAE;QAAEgB,MAAM,EAAEhB;MAAV;IAAxD,EAAP;EACD;;AA9DyD"},"metadata":{},"sourceType":"module"}