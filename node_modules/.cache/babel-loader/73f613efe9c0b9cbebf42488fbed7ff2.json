{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class AxesEditorCtrl {\n  /** @ngInject */\n  constructor($scope, uiSegmentSrv) {\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"logScales\", void 0);\n\n    _defineProperty(this, \"dataFormats\", void 0);\n\n    _defineProperty(this, \"yBucketBoundModes\", void 0);\n\n    _defineProperty(this, \"setUnitFormat\", unit => {\n      this.panel.yAxis.format = unit;\n      this.panelCtrl.render();\n    });\n\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024\n    };\n    this.dataFormats = {\n      'Time series': 'timeseries',\n      'Time series buckets': 'tsbuckets'\n    };\n    this.yBucketBoundModes = {\n      Auto: 'auto',\n      Upper: 'upper',\n      Lower: 'lower',\n      Middle: 'middle'\n    };\n  }\n\n}\nAxesEditorCtrl.$inject = [\"$scope\", \"uiSegmentSrv\"];\n\n/** @ngInject */\nexport function axesEditor() {\n  'use strict';\n\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/axes_editor.html',\n    controller: AxesEditorCtrl\n  };\n}","map":{"version":3,"names":["AxesEditorCtrl","constructor","$scope","uiSegmentSrv","unit","panel","yAxis","format","panelCtrl","render","editor","ctrl","logScales","linear","dataFormats","yBucketBoundModes","Auto","Upper","Lower","Middle","axesEditor","restrict","scope","templateUrl","controller"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap-old/axes_editor.ts"],"sourcesContent":["export class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  logScales: any;\n  dataFormats: any;\n  yBucketBoundModes: any;\n\n  /** @ngInject */\n  constructor($scope: any, uiSegmentSrv: any) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.dataFormats = {\n      'Time series': 'timeseries',\n      'Time series buckets': 'tsbuckets',\n    };\n\n    this.yBucketBoundModes = {\n      Auto: 'auto',\n      Upper: 'upper',\n      Lower: 'lower',\n      Middle: 'middle',\n    };\n  }\n\n  setUnitFormat = (unit: string) => {\n    this.panel.yAxis.format = unit;\n    this.panelCtrl.render();\n  };\n}\n\n/** @ngInject */\nexport function axesEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n"],"mappings":";;AAAA,OAAO,MAAMA,cAAN,CAAqB;EAO1B;EACAC,WAAW,CAACC,MAAD,EAAcC,YAAd,EAAiC;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA,uCA0B3BC,IAAD,IAAkB;MAChC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0BH,IAA1B;MACA,KAAKI,SAAL,CAAeC,MAAf;IACD,CA7B2C;;IAC1CP,MAAM,CAACQ,MAAP,GAAgB,IAAhB;IACA,KAAKF,SAAL,GAAiBN,MAAM,CAACS,IAAxB;IACA,KAAKN,KAAL,GAAa,KAAKG,SAAL,CAAeH,KAA5B;IAEA,KAAKO,SAAL,GAAiB;MACfC,MAAM,EAAE,CADO;MAEf,gBAAgB,CAFD;MAGf,iBAAiB,EAHF;MAIf,iBAAiB,EAJF;MAKf,mBAAmB;IALJ,CAAjB;IAQA,KAAKC,WAAL,GAAmB;MACjB,eAAe,YADE;MAEjB,uBAAuB;IAFN,CAAnB;IAKA,KAAKC,iBAAL,GAAyB;MACvBC,IAAI,EAAE,MADiB;MAEvBC,KAAK,EAAE,OAFgB;MAGvBC,KAAK,EAAE,OAHgB;MAIvBC,MAAM,EAAE;IAJe,CAAzB;EAMD;;AAhCyB;;;AAwC5B;AACA,OAAO,SAASC,UAAT,GAAsB;EAC3B;;EACA,OAAO;IACLC,QAAQ,EAAE,GADL;IAELC,KAAK,EAAE,IAFF;IAGLC,WAAW,EAAE,4DAHR;IAILC,UAAU,EAAExB;EAJP,CAAP;AAMD"},"metadata":{},"sourceType":"module"}