{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { locationSearchToObject, locationService } from '@grafana/runtime';\nexport function useQueryParams() {\n  const {\n    search\n  } = useLocation();\n  const queryParams = useMemo(() => locationSearchToObject(search || ''), [search]);\n  const update = useCallback((values, replace) => locationService.partial(values, replace), []);\n  return [queryParams, update];\n}","map":{"version":3,"names":["useCallback","useMemo","useLocation","locationSearchToObject","locationService","useQueryParams","search","queryParams","update","values","replace","partial"],"sources":["/home/soula/grafana/public/app/core/hooks/useQueryParams.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { UrlQueryMap } from '@grafana/data';\nimport { locationSearchToObject, locationService } from '@grafana/runtime';\n\nexport function useQueryParams(): [UrlQueryMap, (values: UrlQueryMap, replace?: boolean) => void] {\n  const { search } = useLocation();\n  const queryParams = useMemo(() => locationSearchToObject(search || ''), [search]);\n  const update = useCallback((values: UrlQueryMap, replace?: boolean) => locationService.partial(values, replace), []);\n  return [queryParams, update];\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,SAASC,sBAAT,EAAiCC,eAAjC,QAAwD,kBAAxD;AAEA,OAAO,SAASC,cAAT,GAA2F;EAChG,MAAM;IAAEC;EAAF,IAAaJ,WAAW,EAA9B;EACA,MAAMK,WAAW,GAAGN,OAAO,CAAC,MAAME,sBAAsB,CAACG,MAAM,IAAI,EAAX,CAA7B,EAA6C,CAACA,MAAD,CAA7C,CAA3B;EACA,MAAME,MAAM,GAAGR,WAAW,CAAC,CAACS,MAAD,EAAsBC,OAAtB,KAA4CN,eAAe,CAACO,OAAhB,CAAwBF,MAAxB,EAAgCC,OAAhC,CAA7C,EAAuF,EAAvF,CAA1B;EACA,OAAO,CAACH,WAAD,EAAcC,MAAd,CAAP;AACD"},"metadata":{},"sourceType":"module"}