{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\nimport { CustomScrollbar, FilterInput, RadioButtonGroup, useStyles2 } from '@grafana/ui';\nimport { isPanelModelLibraryPanel } from '../../../library-panels/guard';\nimport { AngularPanelOptions } from './AngularPanelOptions';\nimport { OptionsPaneCategory } from './OptionsPaneCategory';\nimport { getFieldOverrideCategories } from './getFieldOverrideElements';\nimport { getLibraryPanelOptionsCategory } from './getLibraryPanelOptions';\nimport { getPanelFrameCategory } from './getPanelFrameOptions';\nimport { getVisualizationOptions } from './getVisualizationOptions';\nimport { OptionSearchEngine } from './state/OptionSearchEngine';\nimport { getRecentOptions } from './state/getRecentOptions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const OptionsPaneOptions = props => {\n  const {\n    plugin,\n    dashboard,\n    panel\n  } = props;\n  const [searchQuery, setSearchQuery] = useState('');\n  const [listMode, setListMode] = useState(OptionFilter.All);\n  const styles = useStyles2(getStyles);\n  const [panelFrameOptions, vizOptions, libraryPanelOptions] = useMemo(() => [getPanelFrameCategory(props), getVisualizationOptions(props), getLibraryPanelOptionsCategory(props)], // eslint-disable-next-line react-hooks/exhaustive-deps\n  [panel.configRev, props.data, props.instanceState, searchQuery]);\n  const justOverrides = useMemo(() => getFieldOverrideCategories(props, searchQuery), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [panel.configRev, props.data, props.instanceState, searchQuery]);\n  const mainBoxElements = [];\n  const isSearching = searchQuery.length > 0;\n  const optionRadioFilters = useMemo(getOptionRadioFilters, []);\n  const allOptions = isPanelModelLibraryPanel(panel) ? [libraryPanelOptions, panelFrameOptions, ...vizOptions] : [panelFrameOptions, ...vizOptions];\n\n  if (isSearching) {\n    mainBoxElements.push(renderSearchHits(allOptions, justOverrides, searchQuery)); // If searching for angular panel, then we need to add notice that results are limited\n\n    if (props.plugin.angularPanelCtrl) {\n      mainBoxElements.push( /*#__PURE__*/_jsx(\"div\", {\n        className: styles.searchNotice,\n        children: \"This is an old visualization type that does not support searching all options.\"\n      }, \"Search notice\"));\n    }\n  } else {\n    switch (listMode) {\n      case OptionFilter.All:\n        if (isPanelModelLibraryPanel(panel)) {\n          // Library Panel options first\n          mainBoxElements.push(libraryPanelOptions.render());\n        } // Panel frame options second\n\n\n        mainBoxElements.push(panelFrameOptions.render()); // If angular add those options next\n\n        if (props.plugin.angularPanelCtrl) {\n          mainBoxElements.push( /*#__PURE__*/_jsx(AngularPanelOptions, {\n            plugin: plugin,\n            dashboard: dashboard,\n            panel: panel\n          }, \"AngularOptions\"));\n        } // Then add all panel and field defaults\n\n\n        for (const item of vizOptions) {\n          mainBoxElements.push(item.render());\n        }\n\n        for (const item of justOverrides) {\n          mainBoxElements.push(item.render());\n        }\n\n        break;\n\n      case OptionFilter.Overrides:\n        for (const override of justOverrides) {\n          mainBoxElements.push(override.render());\n        }\n\n        break;\n\n      case OptionFilter.Recent:\n        mainBoxElements.push( /*#__PURE__*/_jsx(OptionsPaneCategory, {\n          id: \"Recent options\",\n          title: \"Recent options\",\n          forceOpen: 1,\n          children: getRecentOptions(allOptions).map(item => item.render())\n        }, \"Recent options\"));\n        break;\n    }\n  } // only show radio buttons if we are searching or if the plugin has field config\n\n\n  const showSearchRadioButtons = !isSearching && !plugin.fieldConfigRegistry.isEmpty();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.formBox,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.formRow,\n        children: /*#__PURE__*/_jsx(FilterInput, {\n          width: 0,\n          value: searchQuery,\n          onChange: setSearchQuery,\n          placeholder: 'Search options'\n        })\n      }), showSearchRadioButtons && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.formRow,\n        children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n          options: optionRadioFilters,\n          value: listMode,\n          fullWidth: true,\n          onChange: setListMode\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.scrollWrapper,\n      children: /*#__PURE__*/_jsx(CustomScrollbar, {\n        autoHeightMin: \"100%\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.mainBox,\n          children: mainBoxElements\n        })\n      })\n    })]\n  });\n};\n\nfunction getOptionRadioFilters() {\n  return [{\n    label: OptionFilter.All,\n    value: OptionFilter.All\n  }, {\n    label: OptionFilter.Overrides,\n    value: OptionFilter.Overrides\n  }];\n}\n\nexport let OptionFilter;\n\n(function (OptionFilter) {\n  OptionFilter[\"All\"] = \"All\";\n  OptionFilter[\"Overrides\"] = \"Overrides\";\n  OptionFilter[\"Recent\"] = \"Recent\";\n})(OptionFilter || (OptionFilter = {}));\n\nfunction renderSearchHits(allOptions, overrides, searchQuery) {\n  const engine = new OptionSearchEngine(allOptions, overrides);\n  const {\n    optionHits,\n    totalCount,\n    overrideHits\n  } = engine.search(searchQuery);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(OptionsPaneCategory, {\n      id: \"Found options\",\n      title: `Matched ${optionHits.length}/${totalCount} options`,\n      forceOpen: 1,\n      children: optionHits.map(hit => hit.render(searchQuery))\n    }, \"Normal options\"), overrideHits.map(override => override.render(searchQuery))]\n  }, \"search results\");\n}\n\nconst getStyles = theme => ({\n  wrapper: css`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0;\n\n    .search-fragment-highlight {\n      color: ${theme.colors.warning.text};\n      background: transparent;\n    }\n  `,\n  searchBox: css`\n    display: flex;\n    flex-direction: column;\n    min-height: 0;\n  `,\n  formRow: css`\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  formBox: css`\n    padding: ${theme.spacing(1)};\n    background: ${theme.colors.background.primary};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-top-left-radius: ${theme.shape.borderRadius(1.5)};\n    border-bottom: none;\n  `,\n  closeButton: css`\n    margin-left: ${theme.spacing(1)};\n  `,\n  searchHits: css`\n    padding: ${theme.spacing(1, 1, 0, 1)};\n  `,\n  scrollWrapper: css`\n    flex-grow: 1;\n    min-height: 0;\n  `,\n  searchNotice: css`\n    font-size: ${theme.typography.size.sm};\n    color: ${theme.colors.text.secondary};\n    padding: ${theme.spacing(1)};\n    text-align: center;\n  `,\n  mainBox: css`\n    background: ${theme.colors.background.primary};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-top: none;\n    flex-grow: 1;\n  `\n});","map":{"version":3,"names":["css","React","useMemo","useState","CustomScrollbar","FilterInput","RadioButtonGroup","useStyles2","isPanelModelLibraryPanel","AngularPanelOptions","OptionsPaneCategory","getFieldOverrideCategories","getLibraryPanelOptionsCategory","getPanelFrameCategory","getVisualizationOptions","OptionSearchEngine","getRecentOptions","OptionsPaneOptions","props","plugin","dashboard","panel","searchQuery","setSearchQuery","listMode","setListMode","OptionFilter","All","styles","getStyles","panelFrameOptions","vizOptions","libraryPanelOptions","configRev","data","instanceState","justOverrides","mainBoxElements","isSearching","length","optionRadioFilters","getOptionRadioFilters","allOptions","push","renderSearchHits","angularPanelCtrl","searchNotice","render","item","Overrides","override","Recent","map","showSearchRadioButtons","fieldConfigRegistry","isEmpty","wrapper","formBox","formRow","scrollWrapper","mainBox","label","value","overrides","engine","optionHits","totalCount","overrideHits","search","hit","theme","colors","warning","text","searchBox","spacing","background","primary","components","borderColor","shape","borderRadius","closeButton","searchHits","typography","size","sm","secondary"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/OptionsPaneOptions.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { CustomScrollbar, FilterInput, RadioButtonGroup, useStyles2 } from '@grafana/ui';\n\nimport { isPanelModelLibraryPanel } from '../../../library-panels/guard';\n\nimport { AngularPanelOptions } from './AngularPanelOptions';\nimport { OptionsPaneCategory } from './OptionsPaneCategory';\nimport { OptionsPaneCategoryDescriptor } from './OptionsPaneCategoryDescriptor';\nimport { getFieldOverrideCategories } from './getFieldOverrideElements';\nimport { getLibraryPanelOptionsCategory } from './getLibraryPanelOptions';\nimport { getPanelFrameCategory } from './getPanelFrameOptions';\nimport { getVisualizationOptions } from './getVisualizationOptions';\nimport { OptionSearchEngine } from './state/OptionSearchEngine';\nimport { getRecentOptions } from './state/getRecentOptions';\nimport { OptionPaneRenderProps } from './types';\n\nexport const OptionsPaneOptions: React.FC<OptionPaneRenderProps> = (props) => {\n  const { plugin, dashboard, panel } = props;\n  const [searchQuery, setSearchQuery] = useState('');\n  const [listMode, setListMode] = useState(OptionFilter.All);\n  const styles = useStyles2(getStyles);\n\n  const [panelFrameOptions, vizOptions, libraryPanelOptions] = useMemo(\n    () => [getPanelFrameCategory(props), getVisualizationOptions(props), getLibraryPanelOptionsCategory(props)],\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panel.configRev, props.data, props.instanceState, searchQuery]\n  );\n\n  const justOverrides = useMemo(\n    () => getFieldOverrideCategories(props, searchQuery),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panel.configRev, props.data, props.instanceState, searchQuery]\n  );\n\n  const mainBoxElements: React.ReactNode[] = [];\n  const isSearching = searchQuery.length > 0;\n  const optionRadioFilters = useMemo(getOptionRadioFilters, []);\n\n  const allOptions = isPanelModelLibraryPanel(panel)\n    ? [libraryPanelOptions, panelFrameOptions, ...vizOptions]\n    : [panelFrameOptions, ...vizOptions];\n\n  if (isSearching) {\n    mainBoxElements.push(renderSearchHits(allOptions, justOverrides, searchQuery));\n\n    // If searching for angular panel, then we need to add notice that results are limited\n    if (props.plugin.angularPanelCtrl) {\n      mainBoxElements.push(\n        <div className={styles.searchNotice} key=\"Search notice\">\n          This is an old visualization type that does not support searching all options.\n        </div>\n      );\n    }\n  } else {\n    switch (listMode) {\n      case OptionFilter.All:\n        if (isPanelModelLibraryPanel(panel)) {\n          // Library Panel options first\n          mainBoxElements.push(libraryPanelOptions.render());\n        }\n        // Panel frame options second\n        mainBoxElements.push(panelFrameOptions.render());\n        // If angular add those options next\n        if (props.plugin.angularPanelCtrl) {\n          mainBoxElements.push(\n            <AngularPanelOptions plugin={plugin} dashboard={dashboard} panel={panel} key=\"AngularOptions\" />\n          );\n        }\n        // Then add all panel and field defaults\n        for (const item of vizOptions) {\n          mainBoxElements.push(item.render());\n        }\n\n        for (const item of justOverrides) {\n          mainBoxElements.push(item.render());\n        }\n        break;\n      case OptionFilter.Overrides:\n        for (const override of justOverrides) {\n          mainBoxElements.push(override.render());\n        }\n        break;\n      case OptionFilter.Recent:\n        mainBoxElements.push(\n          <OptionsPaneCategory id=\"Recent options\" title=\"Recent options\" key=\"Recent options\" forceOpen={1}>\n            {getRecentOptions(allOptions).map((item) => item.render())}\n          </OptionsPaneCategory>\n        );\n        break;\n    }\n  }\n\n  // only show radio buttons if we are searching or if the plugin has field config\n  const showSearchRadioButtons = !isSearching && !plugin.fieldConfigRegistry.isEmpty();\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.formBox}>\n        <div className={styles.formRow}>\n          <FilterInput width={0} value={searchQuery} onChange={setSearchQuery} placeholder={'Search options'} />\n        </div>\n        {showSearchRadioButtons && (\n          <div className={styles.formRow}>\n            <RadioButtonGroup options={optionRadioFilters} value={listMode} fullWidth onChange={setListMode} />\n          </div>\n        )}\n      </div>\n      <div className={styles.scrollWrapper}>\n        <CustomScrollbar autoHeightMin=\"100%\">\n          <div className={styles.mainBox}>{mainBoxElements}</div>\n        </CustomScrollbar>\n      </div>\n    </div>\n  );\n};\n\nfunction getOptionRadioFilters(): Array<SelectableValue<OptionFilter>> {\n  return [\n    { label: OptionFilter.All, value: OptionFilter.All },\n    { label: OptionFilter.Overrides, value: OptionFilter.Overrides },\n  ];\n}\n\nexport enum OptionFilter {\n  All = 'All',\n  Overrides = 'Overrides',\n  Recent = 'Recent',\n}\n\nfunction renderSearchHits(\n  allOptions: OptionsPaneCategoryDescriptor[],\n  overrides: OptionsPaneCategoryDescriptor[],\n  searchQuery: string\n) {\n  const engine = new OptionSearchEngine(allOptions, overrides);\n  const { optionHits, totalCount, overrideHits } = engine.search(searchQuery);\n\n  return (\n    <div key=\"search results\">\n      <OptionsPaneCategory\n        id=\"Found options\"\n        title={`Matched ${optionHits.length}/${totalCount} options`}\n        key=\"Normal options\"\n        forceOpen={1}\n      >\n        {optionHits.map((hit) => hit.render(searchQuery))}\n      </OptionsPaneCategory>\n      {overrideHits.map((override) => override.render(searchQuery))}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0;\n\n    .search-fragment-highlight {\n      color: ${theme.colors.warning.text};\n      background: transparent;\n    }\n  `,\n  searchBox: css`\n    display: flex;\n    flex-direction: column;\n    min-height: 0;\n  `,\n  formRow: css`\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  formBox: css`\n    padding: ${theme.spacing(1)};\n    background: ${theme.colors.background.primary};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-top-left-radius: ${theme.shape.borderRadius(1.5)};\n    border-bottom: none;\n  `,\n  closeButton: css`\n    margin-left: ${theme.spacing(1)};\n  `,\n  searchHits: css`\n    padding: ${theme.spacing(1, 1, 0, 1)};\n  `,\n  scrollWrapper: css`\n    flex-grow: 1;\n    min-height: 0;\n  `,\n  searchNotice: css`\n    font-size: ${theme.typography.size.sm};\n    color: ${theme.colors.text.secondary};\n    padding: ${theme.spacing(1)};\n    text-align: center;\n  `,\n  mainBox: css`\n    background: ${theme.colors.background.primary};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-top: none;\n    flex-grow: 1;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}