{"ast":null,"code":"import { isCloudRulesSource, isGrafanaRulesSource } from './datasource';\nimport { isGrafanaRulerRule } from './rules';\nexport function alertRuleToQueries(combinedRule) {\n  if (!combinedRule) {\n    return [];\n  }\n\n  const {\n    namespace,\n    rulerRule\n  } = combinedRule;\n  const {\n    rulesSource\n  } = namespace;\n\n  if (isGrafanaRulesSource(rulesSource)) {\n    if (isGrafanaRulerRule(rulerRule)) {\n      return rulerRule.grafana_alert.data;\n    }\n  }\n\n  if (isCloudRulesSource(rulesSource)) {\n    const model = cloudAlertRuleToModel(rulesSource, combinedRule);\n    return [{\n      refId: model.refId,\n      datasourceUid: rulesSource.uid,\n      queryType: '',\n      model,\n      relativeTimeRange: {\n        from: 360,\n        to: 0\n      }\n    }];\n  }\n\n  return [];\n}\n\nfunction cloudAlertRuleToModel(dsSettings, rule) {\n  const refId = 'A';\n\n  switch (dsSettings.type) {\n    case 'prometheus':\n      {\n        const query = {\n          refId,\n          expr: rule.query\n        };\n        return query;\n      }\n\n    case 'loki':\n      {\n        const query = {\n          refId,\n          expr: rule.query\n        };\n        return query;\n      }\n\n    default:\n      throw new Error(`Query for datasource type ${dsSettings.type} is currently not supported by cloud alert rules.`);\n  }\n}","map":{"version":3,"names":["isCloudRulesSource","isGrafanaRulesSource","isGrafanaRulerRule","alertRuleToQueries","combinedRule","namespace","rulerRule","rulesSource","grafana_alert","data","model","cloudAlertRuleToModel","refId","datasourceUid","uid","queryType","relativeTimeRange","from","to","dsSettings","rule","type","query","expr","Error"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/utils/query.ts"],"sourcesContent":["import { DataQuery, DataSourceInstanceSettings } from '@grafana/data';\nimport { LokiQuery } from 'app/plugins/datasource/loki/types';\nimport { PromQuery } from 'app/plugins/datasource/prometheus/types';\nimport { CombinedRule } from 'app/types/unified-alerting';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { isCloudRulesSource, isGrafanaRulesSource } from './datasource';\nimport { isGrafanaRulerRule } from './rules';\n\nexport function alertRuleToQueries(combinedRule: CombinedRule | undefined | null): AlertQuery[] {\n  if (!combinedRule) {\n    return [];\n  }\n  const { namespace, rulerRule } = combinedRule;\n  const { rulesSource } = namespace;\n\n  if (isGrafanaRulesSource(rulesSource)) {\n    if (isGrafanaRulerRule(rulerRule)) {\n      return rulerRule.grafana_alert.data;\n    }\n  }\n\n  if (isCloudRulesSource(rulesSource)) {\n    const model = cloudAlertRuleToModel(rulesSource, combinedRule);\n\n    return [\n      {\n        refId: model.refId,\n        datasourceUid: rulesSource.uid,\n        queryType: '',\n        model,\n        relativeTimeRange: {\n          from: 360,\n          to: 0,\n        },\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction cloudAlertRuleToModel(dsSettings: DataSourceInstanceSettings, rule: CombinedRule): DataQuery {\n  const refId = 'A';\n\n  switch (dsSettings.type) {\n    case 'prometheus': {\n      const query: PromQuery = {\n        refId,\n        expr: rule.query,\n      };\n\n      return query;\n    }\n\n    case 'loki': {\n      const query: LokiQuery = {\n        refId,\n        expr: rule.query,\n      };\n\n      return query;\n    }\n\n    default:\n      throw new Error(`Query for datasource type ${dsSettings.type} is currently not supported by cloud alert rules.`);\n  }\n}\n"],"mappings":"AAMA,SAASA,kBAAT,EAA6BC,oBAA7B,QAAyD,cAAzD;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAEA,OAAO,SAASC,kBAAT,CAA4BC,YAA5B,EAAyF;EAC9F,IAAI,CAACA,YAAL,EAAmB;IACjB,OAAO,EAAP;EACD;;EACD,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA2BF,YAAjC;EACA,MAAM;IAAEG;EAAF,IAAkBF,SAAxB;;EAEA,IAAIJ,oBAAoB,CAACM,WAAD,CAAxB,EAAuC;IACrC,IAAIL,kBAAkB,CAACI,SAAD,CAAtB,EAAmC;MACjC,OAAOA,SAAS,CAACE,aAAV,CAAwBC,IAA/B;IACD;EACF;;EAED,IAAIT,kBAAkB,CAACO,WAAD,CAAtB,EAAqC;IACnC,MAAMG,KAAK,GAAGC,qBAAqB,CAACJ,WAAD,EAAcH,YAAd,CAAnC;IAEA,OAAO,CACL;MACEQ,KAAK,EAAEF,KAAK,CAACE,KADf;MAEEC,aAAa,EAAEN,WAAW,CAACO,GAF7B;MAGEC,SAAS,EAAE,EAHb;MAIEL,KAJF;MAKEM,iBAAiB,EAAE;QACjBC,IAAI,EAAE,GADW;QAEjBC,EAAE,EAAE;MAFa;IALrB,CADK,CAAP;EAYD;;EAED,OAAO,EAAP;AACD;;AAED,SAASP,qBAAT,CAA+BQ,UAA/B,EAAuEC,IAAvE,EAAsG;EACpG,MAAMR,KAAK,GAAG,GAAd;;EAEA,QAAQO,UAAU,CAACE,IAAnB;IACE,KAAK,YAAL;MAAmB;QACjB,MAAMC,KAAgB,GAAG;UACvBV,KADuB;UAEvBW,IAAI,EAAEH,IAAI,CAACE;QAFY,CAAzB;QAKA,OAAOA,KAAP;MACD;;IAED,KAAK,MAAL;MAAa;QACX,MAAMA,KAAgB,GAAG;UACvBV,KADuB;UAEvBW,IAAI,EAAEH,IAAI,CAACE;QAFY,CAAzB;QAKA,OAAOA,KAAP;MACD;;IAED;MACE,MAAM,IAAIE,KAAJ,CAAW,6BAA4BL,UAAU,CAACE,IAAK,mDAAvD,CAAN;EApBJ;AAsBD"},"metadata":{},"sourceType":"module"}