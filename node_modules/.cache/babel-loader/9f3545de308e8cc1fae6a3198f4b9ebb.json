{"ast":null,"code":"const _excluded = [\"link\", \"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useAsync } from 'react-use';\nimport { sanitize, sanitizeUrl } from '@grafana/data/src/text/sanitize';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Icon, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { getLinkSrv } from '../../../panel/panellinks/link_srv';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const DashboardLinksDashboard = props => {\n  const {\n    link,\n    linkInfo\n  } = props;\n  const listRef = useRef(null);\n  const [dropdownCssClass, setDropdownCssClass] = useState('invisible');\n  const [opened, setOpened] = useState(0);\n  const resolvedLinks = useResolvedLinks(props, opened);\n  const buttonStyle = useStyles2(theme => css`\n        color: ${theme.colors.text.primary};\n      `);\n  useLayoutEffect(() => {\n    setDropdownCssClass(getDropdownLocationCssClass(listRef.current));\n  }, [resolvedLinks]);\n\n  if (link.asDropdown) {\n    return /*#__PURE__*/_jsx(LinkElement, {\n      link: link,\n      \"data-testid\": selectors.components.DashboardLinks.dropDown,\n      children: /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(ToolbarButton, {\n          onClick: () => setOpened(Date.now()),\n          className: cx('gf-form-label gf-form-label--dashlink', buttonStyle),\n          \"data-placement\": \"bottom\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-expanded\": !!opened,\n          \"aria-controls\": \"dropdown-list\",\n          \"aria-haspopup\": \"menu\",\n          children: [/*#__PURE__*/_jsx(Icon, {\n            \"aria-hidden\": true,\n            name: \"bars\",\n            style: {\n              marginRight: '4px'\n            }\n          }), /*#__PURE__*/_jsx(\"span\", {\n            children: linkInfo.title\n          })]\n        }), /*#__PURE__*/_jsx(\"ul\", {\n          id: \"dropdown-list\",\n          className: `dropdown-menu ${dropdownCssClass}`,\n          role: \"menu\",\n          ref: listRef,\n          children: resolvedLinks.length > 0 && resolvedLinks.map((resolvedLink, index) => {\n            return /*#__PURE__*/_jsx(\"li\", {\n              role: \"none\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                role: \"menuitem\",\n                href: resolvedLink.url,\n                target: link.targetBlank ? '_blank' : undefined,\n                rel: \"noreferrer\",\n                \"data-testid\": selectors.components.DashboardLinks.link,\n                \"aria-label\": `${resolvedLink.title} dashboard`,\n                children: resolvedLink.title\n              })\n            }, `dashlinks-dropdown-item-${resolvedLink.id}-${index}`);\n          })\n        })]\n      })\n    }, \"dashlinks-dropdown\");\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: resolvedLinks.length > 0 && resolvedLinks.map((resolvedLink, index) => {\n      return /*#__PURE__*/_jsx(LinkElement, {\n        link: link,\n        \"data-testid\": selectors.components.DashboardLinks.container,\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          className: \"gf-form-label gf-form-label--dashlink\",\n          href: resolvedLink.url,\n          target: link.targetBlank ? '_blank' : undefined,\n          rel: \"noreferrer\",\n          \"data-testid\": selectors.components.DashboardLinks.link,\n          \"aria-label\": `${resolvedLink.title} dashboard`,\n          children: [/*#__PURE__*/_jsx(Icon, {\n            \"aria-hidden\": true,\n            name: \"apps\",\n            style: {\n              marginRight: '4px'\n            }\n          }), /*#__PURE__*/_jsx(\"span\", {\n            children: resolvedLink.title\n          })]\n        })\n      }, `dashlinks-list-item-${resolvedLink.id}-${index}`);\n    })\n  });\n};\n\nconst LinkElement = props => {\n  const {\n    link,\n    children\n  } = props,\n        rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({}, rest, {\n    className: \"gf-form\",\n    children: [link.tooltip && /*#__PURE__*/_jsx(Tooltip, {\n      content: link.tooltip,\n      children: children\n    }), !link.tooltip && /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    })]\n  }));\n};\n\nconst useResolvedLinks = ({\n  link,\n  dashboardId\n}, opened) => {\n  const {\n    tags\n  } = link;\n  const result = useAsync(() => searchForTags(tags), [tags, opened]);\n\n  if (!result.value) {\n    return [];\n  }\n\n  return resolveLinks(dashboardId, link, result.value);\n};\n\nexport async function searchForTags(tags, dependencies = {\n  getBackendSrv\n}) {\n  const limit = 100;\n  const searchHits = await dependencies.getBackendSrv().search({\n    tag: tags,\n    limit\n  });\n  return searchHits;\n}\nexport function resolveLinks(dashboardId, link, searchHits, dependencies = {\n  getLinkSrv,\n  sanitize,\n  sanitizeUrl\n}) {\n  return searchHits.filter(searchHit => searchHit.id !== dashboardId).map(searchHit => {\n    const id = searchHit.id;\n    const title = dependencies.sanitize(searchHit.title);\n    const resolvedLink = dependencies.getLinkSrv().getLinkUrl(Object.assign({}, link, {\n      url: searchHit.url\n    }));\n    const url = dependencies.sanitizeUrl(resolvedLink);\n    return {\n      id,\n      title,\n      url\n    };\n  });\n}\n\nfunction getDropdownLocationCssClass(element) {\n  if (!element) {\n    return 'invisible';\n  }\n\n  const wrapperPos = element.parentElement.getBoundingClientRect();\n  const pos = element.getBoundingClientRect();\n\n  if (pos.width === 0) {\n    return 'invisible';\n  }\n\n  if (wrapperPos.left + pos.width + 10 > window.innerWidth) {\n    return 'pull-left';\n  } else {\n    return 'pull-right';\n  }\n}","map":{"version":3,"names":["css","cx","React","useRef","useState","useLayoutEffect","useAsync","sanitize","sanitizeUrl","selectors","Icon","ToolbarButton","Tooltip","useStyles2","getBackendSrv","getLinkSrv","DashboardLinksDashboard","props","link","linkInfo","listRef","dropdownCssClass","setDropdownCssClass","opened","setOpened","resolvedLinks","useResolvedLinks","buttonStyle","theme","colors","text","primary","getDropdownLocationCssClass","current","asDropdown","components","DashboardLinks","dropDown","Date","now","marginRight","title","length","map","resolvedLink","index","url","targetBlank","undefined","id","container","LinkElement","children","rest","tooltip","dashboardId","tags","result","searchForTags","value","resolveLinks","dependencies","limit","searchHits","search","tag","filter","searchHit","getLinkUrl","element","wrapperPos","parentElement","getBoundingClientRect","pos","width","left","window","innerWidth"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SubMenu/DashboardLinksDashboard.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { sanitize, sanitizeUrl } from '@grafana/data/src/text/sanitize';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Icon, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSearchHit } from 'app/features/search/types';\n\nimport { getLinkSrv } from '../../../panel/panellinks/link_srv';\nimport { DashboardLink } from '../../state/DashboardModel';\n\ninterface Props {\n  link: DashboardLink;\n  linkInfo: { title: string; href: string };\n  dashboardId: any;\n}\n\nexport const DashboardLinksDashboard: React.FC<Props> = (props) => {\n  const { link, linkInfo } = props;\n  const listRef = useRef<HTMLUListElement>(null);\n  const [dropdownCssClass, setDropdownCssClass] = useState('invisible');\n  const [opened, setOpened] = useState(0);\n  const resolvedLinks = useResolvedLinks(props, opened);\n\n  const buttonStyle = useStyles2(\n    (theme) =>\n      css`\n        color: ${theme.colors.text.primary};\n      `\n  );\n\n  useLayoutEffect(() => {\n    setDropdownCssClass(getDropdownLocationCssClass(listRef.current));\n  }, [resolvedLinks]);\n\n  if (link.asDropdown) {\n    return (\n      <LinkElement link={link} key=\"dashlinks-dropdown\" data-testid={selectors.components.DashboardLinks.dropDown}>\n        <>\n          <ToolbarButton\n            onClick={() => setOpened(Date.now())}\n            className={cx('gf-form-label gf-form-label--dashlink', buttonStyle)}\n            data-placement=\"bottom\"\n            data-toggle=\"dropdown\"\n            aria-expanded={!!opened}\n            aria-controls=\"dropdown-list\"\n            aria-haspopup=\"menu\"\n          >\n            <Icon aria-hidden name=\"bars\" style={{ marginRight: '4px' }} />\n            <span>{linkInfo.title}</span>\n          </ToolbarButton>\n          <ul id=\"dropdown-list\" className={`dropdown-menu ${dropdownCssClass}`} role=\"menu\" ref={listRef}>\n            {resolvedLinks.length > 0 &&\n              resolvedLinks.map((resolvedLink, index) => {\n                return (\n                  <li role=\"none\" key={`dashlinks-dropdown-item-${resolvedLink.id}-${index}`}>\n                    <a\n                      role=\"menuitem\"\n                      href={resolvedLink.url}\n                      target={link.targetBlank ? '_blank' : undefined}\n                      rel=\"noreferrer\"\n                      data-testid={selectors.components.DashboardLinks.link}\n                      aria-label={`${resolvedLink.title} dashboard`}\n                    >\n                      {resolvedLink.title}\n                    </a>\n                  </li>\n                );\n              })}\n          </ul>\n        </>\n      </LinkElement>\n    );\n  }\n\n  return (\n    <>\n      {resolvedLinks.length > 0 &&\n        resolvedLinks.map((resolvedLink, index) => {\n          return (\n            <LinkElement\n              link={link}\n              key={`dashlinks-list-item-${resolvedLink.id}-${index}`}\n              data-testid={selectors.components.DashboardLinks.container}\n            >\n              <a\n                className=\"gf-form-label gf-form-label--dashlink\"\n                href={resolvedLink.url}\n                target={link.targetBlank ? '_blank' : undefined}\n                rel=\"noreferrer\"\n                data-testid={selectors.components.DashboardLinks.link}\n                aria-label={`${resolvedLink.title} dashboard`}\n              >\n                <Icon aria-hidden name=\"apps\" style={{ marginRight: '4px' }} />\n                <span>{resolvedLink.title}</span>\n              </a>\n            </LinkElement>\n          );\n        })}\n    </>\n  );\n};\n\ninterface LinkElementProps {\n  link: DashboardLink;\n  key: string;\n  children: JSX.Element;\n}\n\nconst LinkElement: React.FC<LinkElementProps> = (props) => {\n  const { link, children, ...rest } = props;\n\n  return (\n    <div {...rest} className=\"gf-form\">\n      {link.tooltip && <Tooltip content={link.tooltip}>{children}</Tooltip>}\n      {!link.tooltip && <>{children}</>}\n    </div>\n  );\n};\n\nconst useResolvedLinks = ({ link, dashboardId }: Props, opened: number): ResolvedLinkDTO[] => {\n  const { tags } = link;\n  const result = useAsync(() => searchForTags(tags), [tags, opened]);\n  if (!result.value) {\n    return [];\n  }\n  return resolveLinks(dashboardId, link, result.value);\n};\n\ninterface ResolvedLinkDTO {\n  id: any;\n  url: string;\n  title: string;\n}\n\nexport async function searchForTags(\n  tags: any[],\n  dependencies: { getBackendSrv: typeof getBackendSrv } = { getBackendSrv }\n): Promise<DashboardSearchHit[]> {\n  const limit = 100;\n  const searchHits: DashboardSearchHit[] = await dependencies.getBackendSrv().search({ tag: tags, limit });\n\n  return searchHits;\n}\n\nexport function resolveLinks(\n  dashboardId: any,\n  link: DashboardLink,\n  searchHits: DashboardSearchHit[],\n  dependencies: { getLinkSrv: typeof getLinkSrv; sanitize: typeof sanitize; sanitizeUrl: typeof sanitizeUrl } = {\n    getLinkSrv,\n    sanitize,\n    sanitizeUrl,\n  }\n): ResolvedLinkDTO[] {\n  return searchHits\n    .filter((searchHit) => searchHit.id !== dashboardId)\n    .map((searchHit) => {\n      const id = searchHit.id;\n      const title = dependencies.sanitize(searchHit.title);\n      const resolvedLink = dependencies.getLinkSrv().getLinkUrl({ ...link, url: searchHit.url });\n      const url = dependencies.sanitizeUrl(resolvedLink);\n\n      return { id, title, url };\n    });\n}\n\nfunction getDropdownLocationCssClass(element: HTMLElement | null) {\n  if (!element) {\n    return 'invisible';\n  }\n\n  const wrapperPos = element.parentElement!.getBoundingClientRect();\n  const pos = element.getBoundingClientRect();\n\n  if (pos.width === 0) {\n    return 'invisible';\n  }\n\n  if (wrapperPos.left + pos.width + 10 > window.innerWidth) {\n    return 'pull-left';\n  } else {\n    return 'pull-right';\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}