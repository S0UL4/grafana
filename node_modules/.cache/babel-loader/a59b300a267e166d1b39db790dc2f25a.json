{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { Manager, Popper as ReactPopper } from 'react-popper';\nimport Transition from 'react-transition-group/Transition';\nimport { Portal } from '../Portal/Portal';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTransitionStyles = {\n  transitionProperty: 'opacity',\n  transitionDuration: '200ms',\n  transitionTimingFunction: 'linear',\n  opacity: 0\n};\nconst transitionStyles = {\n  exited: {\n    opacity: 0\n  },\n  entering: {\n    opacity: 0\n  },\n  entered: {\n    opacity: 1,\n    transitionDelay: '0s'\n  },\n  exiting: {\n    opacity: 0,\n    transitionDelay: '500ms'\n  }\n};\n\nclass Popover extends PureComponent {\n  render() {\n    const {\n      content,\n      show,\n      placement,\n      onMouseEnter,\n      onMouseLeave,\n      className,\n      wrapperClassName,\n      renderArrow,\n      referenceElement,\n      onKeyDown\n    } = this.props;\n    return /*#__PURE__*/_jsx(Manager, {\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: show,\n        timeout: 100,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        children: transitionState => {\n          return /*#__PURE__*/_jsx(Portal, {\n            children: /*#__PURE__*/_jsx(ReactPopper, {\n              placement: placement,\n              referenceElement: referenceElement,\n              modifiers: [{\n                name: 'preventOverflow',\n                enabled: true,\n                options: {\n                  rootBoundary: 'viewport'\n                }\n              }, {\n                name: 'eventListeners',\n                options: {\n                  scroll: true,\n                  resize: true\n                }\n              }],\n              children: ({\n                ref,\n                style,\n                placement,\n                arrowProps,\n                update\n              }) => {\n                return /*#__PURE__*/_jsx(\"div\", {\n                  onMouseEnter: onMouseEnter,\n                  onMouseLeave: onMouseLeave,\n                  onKeyDown: onKeyDown,\n                  ref: ref,\n                  style: Object.assign({}, style, defaultTransitionStyles, transitionStyles[transitionState]),\n                  \"data-placement\": placement,\n                  className: `${wrapperClassName}`,\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: className,\n                    children: [typeof content === 'string' && content, /*#__PURE__*/React.isValidElement(content) && /*#__PURE__*/React.cloneElement(content), typeof content === 'function' && content({\n                      updatePopperPosition: update\n                    }), renderArrow && renderArrow({\n                      arrowProps,\n                      placement\n                    })]\n                  })\n                });\n              }\n            })\n          });\n        }\n      })\n    });\n  }\n\n}\n\nexport { Popover };","map":{"version":3,"names":["React","PureComponent","Manager","Popper","ReactPopper","Transition","Portal","defaultTransitionStyles","transitionProperty","transitionDuration","transitionTimingFunction","opacity","transitionStyles","exited","entering","entered","transitionDelay","exiting","Popover","render","content","show","placement","onMouseEnter","onMouseLeave","className","wrapperClassName","renderArrow","referenceElement","onKeyDown","props","transitionState","name","enabled","options","rootBoundary","scroll","resize","ref","style","arrowProps","update","isValidElement","cloneElement","updatePopperPosition"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Tooltip/Popover.tsx"],"sourcesContent":["import { Placement, VirtualElement } from '@popperjs/core';\nimport React, { PureComponent } from 'react';\nimport { Manager, Popper as ReactPopper, PopperArrowProps } from 'react-popper';\nimport Transition from 'react-transition-group/Transition';\n\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent } from './types';\n\nconst defaultTransitionStyles = {\n  transitionProperty: 'opacity',\n  transitionDuration: '200ms',\n  transitionTimingFunction: 'linear',\n  opacity: 0,\n};\n\nconst transitionStyles: { [key: string]: object } = {\n  exited: { opacity: 0 },\n  entering: { opacity: 0 },\n  entered: { opacity: 1, transitionDelay: '0s' },\n  exiting: { opacity: 0, transitionDelay: '500ms' },\n};\n\nexport type RenderPopperArrowFn = (props: { arrowProps: PopperArrowProps; placement: string }) => JSX.Element;\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  show: boolean;\n  placement?: Placement;\n  content: PopoverContent;\n  referenceElement: HTMLElement | VirtualElement;\n  wrapperClassName?: string;\n  renderArrow?: RenderPopperArrowFn;\n}\n\nclass Popover extends PureComponent<Props> {\n  render() {\n    const {\n      content,\n      show,\n      placement,\n      onMouseEnter,\n      onMouseLeave,\n      className,\n      wrapperClassName,\n      renderArrow,\n      referenceElement,\n      onKeyDown,\n    } = this.props;\n\n    return (\n      <Manager>\n        <Transition in={show} timeout={100} mountOnEnter={true} unmountOnExit={true}>\n          {(transitionState) => {\n            return (\n              <Portal>\n                <ReactPopper\n                  placement={placement}\n                  referenceElement={referenceElement}\n                  modifiers={[\n                    { name: 'preventOverflow', enabled: true, options: { rootBoundary: 'viewport' } },\n                    {\n                      name: 'eventListeners',\n                      options: { scroll: true, resize: true },\n                    },\n                  ]}\n                >\n                  {({ ref, style, placement, arrowProps, update }) => {\n                    return (\n                      <div\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onKeyDown={onKeyDown}\n                        ref={ref}\n                        style={{\n                          ...style,\n                          ...defaultTransitionStyles,\n                          ...transitionStyles[transitionState],\n                        }}\n                        data-placement={placement}\n                        className={`${wrapperClassName}`}\n                      >\n                        <div className={className}>\n                          {typeof content === 'string' && content}\n                          {React.isValidElement(content) && React.cloneElement(content)}\n                          {typeof content === 'function' &&\n                            content({\n                              updatePopperPosition: update,\n                            })}\n                          {renderArrow &&\n                            renderArrow({\n                              arrowProps,\n                              placement,\n                            })}\n                        </div>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            );\n          }}\n        </Transition>\n      </Manager>\n    );\n  }\n}\n\nexport { Popover };\n"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,EAAkBC,MAAM,IAAIC,WAA5B,QAAiE,cAAjE;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AAEA,SAASC,MAAT,QAAuB,kBAAvB;;;AAIA,MAAMC,uBAAuB,GAAG;EAC9BC,kBAAkB,EAAE,SADU;EAE9BC,kBAAkB,EAAE,OAFU;EAG9BC,wBAAwB,EAAE,QAHI;EAI9BC,OAAO,EAAE;AAJqB,CAAhC;AAOA,MAAMC,gBAA2C,GAAG;EAClDC,MAAM,EAAE;IAAEF,OAAO,EAAE;EAAX,CAD0C;EAElDG,QAAQ,EAAE;IAAEH,OAAO,EAAE;EAAX,CAFwC;EAGlDI,OAAO,EAAE;IAAEJ,OAAO,EAAE,CAAX;IAAcK,eAAe,EAAE;EAA/B,CAHyC;EAIlDC,OAAO,EAAE;IAAEN,OAAO,EAAE,CAAX;IAAcK,eAAe,EAAE;EAA/B;AAJyC,CAApD;;AAkBA,MAAME,OAAN,SAAsBjB,aAAtB,CAA2C;EACzCkB,MAAM,GAAG;IACP,MAAM;MACJC,OADI;MAEJC,IAFI;MAGJC,SAHI;MAIJC,YAJI;MAKJC,YALI;MAMJC,SANI;MAOJC,gBAPI;MAQJC,WARI;MASJC,gBATI;MAUJC;IAVI,IAWF,KAAKC,KAXT;IAaA,oBACE,KAAC,OAAD;MAAA,uBACE,KAAC,UAAD;QAAY,EAAE,EAAET,IAAhB;QAAsB,OAAO,EAAE,GAA/B;QAAoC,YAAY,EAAE,IAAlD;QAAwD,aAAa,EAAE,IAAvE;QAAA,UACIU,eAAD,IAAqB;UACpB,oBACE,KAAC,MAAD;YAAA,uBACE,KAAC,WAAD;cACE,SAAS,EAAET,SADb;cAEE,gBAAgB,EAAEM,gBAFpB;cAGE,SAAS,EAAE,CACT;gBAAEI,IAAI,EAAE,iBAAR;gBAA2BC,OAAO,EAAE,IAApC;gBAA0CC,OAAO,EAAE;kBAAEC,YAAY,EAAE;gBAAhB;cAAnD,CADS,EAET;gBACEH,IAAI,EAAE,gBADR;gBAEEE,OAAO,EAAE;kBAAEE,MAAM,EAAE,IAAV;kBAAgBC,MAAM,EAAE;gBAAxB;cAFX,CAFS,CAHb;cAAA,UAWG,CAAC;gBAAEC,GAAF;gBAAOC,KAAP;gBAAcjB,SAAd;gBAAyBkB,UAAzB;gBAAqCC;cAArC,CAAD,KAAmD;gBAClD,oBACE;kBACE,YAAY,EAAElB,YADhB;kBAEE,YAAY,EAAEC,YAFhB;kBAGE,SAAS,EAAEK,SAHb;kBAIE,GAAG,EAAES,GAJP;kBAKE,KAAK,oBACAC,KADA,EAEAhC,uBAFA,EAGAK,gBAAgB,CAACmB,eAAD,CAHhB,CALP;kBAUE,kBAAgBT,SAVlB;kBAWE,SAAS,EAAG,GAAEI,gBAAiB,EAXjC;kBAAA,uBAaE;oBAAK,SAAS,EAAED,SAAhB;oBAAA,WACG,OAAOL,OAAP,KAAmB,QAAnB,IAA+BA,OADlC,EAEG,aAAApB,KAAK,CAAC0C,cAAN,CAAqBtB,OAArB,kBAAiCpB,KAAK,CAAC2C,YAAN,CAAmBvB,OAAnB,CAFpC,EAGG,OAAOA,OAAP,KAAmB,UAAnB,IACCA,OAAO,CAAC;sBACNwB,oBAAoB,EAAEH;oBADhB,CAAD,CAJX,EAOGd,WAAW,IACVA,WAAW,CAAC;sBACVa,UADU;sBAEVlB;oBAFU,CAAD,CARf;kBAAA;gBAbF,EADF;cA6BD;YAzCH;UADF,EADF;QA+CD;MAjDH;IADF,EADF;EAuDD;;AAtEwC;;AAyE3C,SAASJ,OAAT"},"metadata":{},"sourceType":"module"}