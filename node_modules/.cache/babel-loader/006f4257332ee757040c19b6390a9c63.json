{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { useTheme, stylesFactory } from '../../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const TimeZoneDescription = ({\n  info\n}) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const description = useDescription(info);\n\n  if (!info) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.description,\n    children: description\n  });\n};\n\nconst useDescription = info => {\n  return useMemo(() => {\n    const parts = [];\n\n    if (!info) {\n      return '';\n    }\n\n    if (info.countries.length > 0) {\n      const country = info.countries[0];\n      parts.push(country.name);\n    }\n\n    if (info.abbreviation) {\n      parts.push(info.abbreviation);\n    }\n\n    return parts.join(', ');\n  }, [info]);\n};\n\nconst getStyles = stylesFactory(theme => {\n  return {\n    description: css`\n      font-weight: normal;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      white-space: normal;\n      text-overflow: ellipsis;\n    `\n  };\n});","map":{"version":3,"names":["css","React","useMemo","useTheme","stylesFactory","TimeZoneDescription","info","theme","styles","getStyles","description","useDescription","parts","countries","length","country","push","name","abbreviation","join","typography","size","sm","colors","textWeak"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeZonePicker/TimeZoneDescription.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PropsWithChildren, useMemo } from 'react';\n\nimport { GrafanaTheme, TimeZoneInfo } from '@grafana/data';\n\nimport { useTheme, stylesFactory } from '../../../themes';\n\ninterface Props {\n  info?: TimeZoneInfo;\n}\n\nexport const TimeZoneDescription: React.FC<PropsWithChildren<Props>> = ({ info }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const description = useDescription(info);\n\n  if (!info) {\n    return null;\n  }\n\n  return <div className={styles.description}>{description}</div>;\n};\n\nconst useDescription = (info?: TimeZoneInfo): string => {\n  return useMemo(() => {\n    const parts: string[] = [];\n\n    if (!info) {\n      return '';\n    }\n\n    if (info.countries.length > 0) {\n      const country = info.countries[0];\n      parts.push(country.name);\n    }\n\n    if (info.abbreviation) {\n      parts.push(info.abbreviation);\n    }\n\n    return parts.join(', ');\n  }, [info]);\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    description: css`\n      font-weight: normal;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      white-space: normal;\n      text-overflow: ellipsis;\n    `,\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAmCC,OAAnC,QAAkD,OAAlD;AAIA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,iBAAxC;;AAMA,OAAO,MAAMC,mBAAuD,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EACnF,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;EACA,MAAMK,MAAM,GAAGC,SAAS,CAACF,KAAD,CAAxB;EACA,MAAMG,WAAW,GAAGC,cAAc,CAACL,IAAD,CAAlC;;EAEA,IAAI,CAACA,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EAED,oBAAO;IAAK,SAAS,EAAEE,MAAM,CAACE,WAAvB;IAAA,UAAqCA;EAArC,EAAP;AACD,CAVM;;AAYP,MAAMC,cAAc,GAAIL,IAAD,IAAiC;EACtD,OAAOJ,OAAO,CAAC,MAAM;IACnB,MAAMU,KAAe,GAAG,EAAxB;;IAEA,IAAI,CAACN,IAAL,EAAW;MACT,OAAO,EAAP;IACD;;IAED,IAAIA,IAAI,CAACO,SAAL,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;MAC7B,MAAMC,OAAO,GAAGT,IAAI,CAACO,SAAL,CAAe,CAAf,CAAhB;MACAD,KAAK,CAACI,IAAN,CAAWD,OAAO,CAACE,IAAnB;IACD;;IAED,IAAIX,IAAI,CAACY,YAAT,EAAuB;MACrBN,KAAK,CAACI,IAAN,CAAWV,IAAI,CAACY,YAAhB;IACD;;IAED,OAAON,KAAK,CAACO,IAAN,CAAW,IAAX,CAAP;EACD,CAjBa,EAiBX,CAACb,IAAD,CAjBW,CAAd;AAkBD,CAnBD;;AAqBA,MAAMG,SAAS,GAAGL,aAAa,CAAEG,KAAD,IAAyB;EACvD,OAAO;IACLG,WAAW,EAAEV,GAAI;AACrB;AACA,mBAAmBO,KAAK,CAACa,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,eAAef,KAAK,CAACgB,MAAN,CAAaC,QAAS;AACrC;AACA;AACA;EAPS,CAAP;AASD,CAV8B,CAA/B"},"metadata":{},"sourceType":"module"}