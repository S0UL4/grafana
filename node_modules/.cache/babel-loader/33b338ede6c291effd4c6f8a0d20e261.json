{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { alertInstanceKey } from '../../utils/rules';\nimport { AlertLabels } from '../AlertLabels';\nimport { DynamicTable } from '../DynamicTable';\nimport { AlertInstanceDetails } from './AlertInstanceDetails';\nimport { AlertStateTag } from './AlertStateTag';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const AlertInstancesTable = ({\n  instances,\n  pagination,\n  footerRow\n}) => {\n  const items = useMemo(() => instances.map(instance => ({\n    data: instance,\n    id: alertInstanceKey(instance)\n  })), [instances]);\n  return /*#__PURE__*/_jsx(DynamicTable, {\n    cols: columns,\n    isExpandable: true,\n    items: items,\n    renderExpandedContent: ({\n      data\n    }) => /*#__PURE__*/_jsx(AlertInstanceDetails, {\n      instance: data\n    }),\n    pagination: pagination,\n    footerRow: footerRow\n  });\n};\nconst columns = [{\n  id: 'state',\n  label: 'State',\n  // eslint-disable-next-line react/display-name\n  renderCell: ({\n    data: {\n      state\n    }\n  }) => /*#__PURE__*/_jsx(AlertStateTag, {\n    state: state\n  }),\n  size: '80px'\n}, {\n  id: 'labels',\n  label: 'Labels',\n  // eslint-disable-next-line react/display-name\n  renderCell: ({\n    data: {\n      labels\n    }\n  }) => /*#__PURE__*/_jsx(AlertLabels, {\n    labels: labels\n  })\n}, {\n  id: 'created',\n  label: 'Created',\n  // eslint-disable-next-line react/display-name\n  renderCell: ({\n    data: {\n      activeAt\n    }\n  }) => /*#__PURE__*/_jsx(_Fragment, {\n    children: activeAt.startsWith('0001') ? '-' : activeAt.slice(0, 19).replace('T', ' ')\n  }),\n  size: '150px'\n}];","map":{"version":3,"names":["React","useMemo","alertInstanceKey","AlertLabels","DynamicTable","AlertInstanceDetails","AlertStateTag","AlertInstancesTable","instances","pagination","footerRow","items","map","instance","data","id","columns","label","renderCell","state","size","labels","activeAt","startsWith","slice","replace"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/AlertInstancesTable.tsx"],"sourcesContent":["import React, { FC, useMemo } from 'react';\n\nimport { Alert, PaginationProps } from 'app/types/unified-alerting';\n\nimport { alertInstanceKey } from '../../utils/rules';\nimport { AlertLabels } from '../AlertLabels';\nimport { DynamicTable, DynamicTableColumnProps, DynamicTableItemProps } from '../DynamicTable';\n\nimport { AlertInstanceDetails } from './AlertInstanceDetails';\nimport { AlertStateTag } from './AlertStateTag';\n\ninterface Props {\n  instances: Alert[];\n  pagination?: PaginationProps;\n  footerRow?: JSX.Element;\n}\n\ntype AlertTableColumnProps = DynamicTableColumnProps<Alert>;\ntype AlertTableItemProps = DynamicTableItemProps<Alert>;\n\nexport const AlertInstancesTable: FC<Props> = ({ instances, pagination, footerRow }) => {\n  const items = useMemo(\n    (): AlertTableItemProps[] =>\n      instances.map((instance) => ({\n        data: instance,\n        id: alertInstanceKey(instance),\n      })),\n    [instances]\n  );\n\n  return (\n    <DynamicTable\n      cols={columns}\n      isExpandable={true}\n      items={items}\n      renderExpandedContent={({ data }) => <AlertInstanceDetails instance={data} />}\n      pagination={pagination}\n      footerRow={footerRow}\n    />\n  );\n};\n\nconst columns: AlertTableColumnProps[] = [\n  {\n    id: 'state',\n    label: 'State',\n    // eslint-disable-next-line react/display-name\n    renderCell: ({ data: { state } }) => <AlertStateTag state={state} />,\n    size: '80px',\n  },\n  {\n    id: 'labels',\n    label: 'Labels',\n    // eslint-disable-next-line react/display-name\n    renderCell: ({ data: { labels } }) => <AlertLabels labels={labels} />,\n  },\n  {\n    id: 'created',\n    label: 'Created',\n    // eslint-disable-next-line react/display-name\n    renderCell: ({ data: { activeAt } }) => (\n      <>{activeAt.startsWith('0001') ? '-' : activeAt.slice(0, 19).replace('T', ' ')}</>\n    ),\n    size: '150px',\n  },\n];\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAIA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6E,iBAA7E;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;AAWA,OAAO,MAAMC,mBAA8B,GAAG,CAAC;EAAEC,SAAF;EAAaC,UAAb;EAAyBC;AAAzB,CAAD,KAA0C;EACtF,MAAMC,KAAK,GAAGV,OAAO,CACnB,MACEO,SAAS,CAACI,GAAV,CAAeC,QAAD,KAAe;IAC3BC,IAAI,EAAED,QADqB;IAE3BE,EAAE,EAAEb,gBAAgB,CAACW,QAAD;EAFO,CAAf,CAAd,CAFiB,EAMnB,CAACL,SAAD,CANmB,CAArB;EASA,oBACE,KAAC,YAAD;IACE,IAAI,EAAEQ,OADR;IAEE,YAAY,EAAE,IAFhB;IAGE,KAAK,EAAEL,KAHT;IAIE,qBAAqB,EAAE,CAAC;MAAEG;IAAF,CAAD,kBAAc,KAAC,oBAAD;MAAsB,QAAQ,EAAEA;IAAhC,EAJvC;IAKE,UAAU,EAAEL,UALd;IAME,SAAS,EAAEC;EANb,EADF;AAUD,CApBM;AAsBP,MAAMM,OAAgC,GAAG,CACvC;EACED,EAAE,EAAE,OADN;EAEEE,KAAK,EAAE,OAFT;EAGE;EACAC,UAAU,EAAE,CAAC;IAAEJ,IAAI,EAAE;MAAEK;IAAF;EAAR,CAAD,kBAAyB,KAAC,aAAD;IAAe,KAAK,EAAEA;EAAtB,EAJvC;EAKEC,IAAI,EAAE;AALR,CADuC,EAQvC;EACEL,EAAE,EAAE,QADN;EAEEE,KAAK,EAAE,QAFT;EAGE;EACAC,UAAU,EAAE,CAAC;IAAEJ,IAAI,EAAE;MAAEO;IAAF;EAAR,CAAD,kBAA0B,KAAC,WAAD;IAAa,MAAM,EAAEA;EAArB;AAJxC,CARuC,EAcvC;EACEN,EAAE,EAAE,SADN;EAEEE,KAAK,EAAE,SAFT;EAGE;EACAC,UAAU,EAAE,CAAC;IAAEJ,IAAI,EAAE;MAAEQ;IAAF;EAAR,CAAD,kBACV;IAAA,UAAGA,QAAQ,CAACC,UAAT,CAAoB,MAApB,IAA8B,GAA9B,GAAoCD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC;EAAvC,EALJ;EAOEL,IAAI,EAAE;AAPR,CAduC,CAAzC"},"metadata":{},"sourceType":"module"}