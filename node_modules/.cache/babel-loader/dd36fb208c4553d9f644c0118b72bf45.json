{"ast":null,"code":"var _div;\n\nimport React, { useCallback } from 'react';\nimport { DataTransformerID, standardTransformers } from '@grafana/data';\nimport { Select } from '@grafana/ui';\nimport { useAllFieldNamesFromDataFrames } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SeriesToFieldsTransformerEditor = ({\n  input,\n  options,\n  onChange\n}) => {\n  const fieldNames = useAllFieldNamesFromDataFrames(input).map(item => ({\n    label: item,\n    value: item\n  }));\n  const onSelectField = useCallback(value => {\n    onChange(Object.assign({}, options, {\n      byField: value.value\n    }));\n  }, [onChange, options]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"gf-form-inline\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form gf-form--grow\",\n      children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label width-8\",\n        children: \"Field name\"\n      })), /*#__PURE__*/_jsx(Select, {\n        options: fieldNames,\n        value: options.byField,\n        onChange: onSelectField,\n        isClearable: true\n      })]\n    })\n  });\n};\nexport const seriesToFieldsTransformerRegistryItem = {\n  id: DataTransformerID.seriesToColumns,\n  editor: SeriesToFieldsTransformerEditor,\n  transformation: standardTransformers.seriesToColumnsTransformer,\n  name: 'Outer join',\n  description: 'Joins many time series/tables by a field. This can be used to outer join multiple time series on the _time_ field to show many time series in one table.'\n};","map":{"version":3,"names":["React","useCallback","DataTransformerID","standardTransformers","Select","useAllFieldNamesFromDataFrames","SeriesToFieldsTransformerEditor","input","options","onChange","fieldNames","map","item","label","value","onSelectField","byField","seriesToFieldsTransformerRegistryItem","id","seriesToColumns","editor","transformation","seriesToColumnsTransformer","name","description"],"sources":["/home/soula/grafana/public/app/features/transformers/editors/SeriesToFieldsTransformerEditor.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport {\n  DataTransformerID,\n  SelectableValue,\n  standardTransformers,\n  TransformerRegistryItem,\n  TransformerUIProps,\n} from '@grafana/data';\nimport { SeriesToColumnsOptions } from '@grafana/data/src/transformations/transformers/seriesToColumns';\nimport { Select } from '@grafana/ui';\n\nimport { useAllFieldNamesFromDataFrames } from '../utils';\n\nexport const SeriesToFieldsTransformerEditor: React.FC<TransformerUIProps<SeriesToColumnsOptions>> = ({\n  input,\n  options,\n  onChange,\n}) => {\n  const fieldNames = useAllFieldNamesFromDataFrames(input).map((item: string) => ({ label: item, value: item }));\n\n  const onSelectField = useCallback(\n    (value: SelectableValue<string>) => {\n      onChange({\n        ...options,\n        byField: value.value,\n      });\n    },\n    [onChange, options]\n  );\n\n  return (\n    <div className=\"gf-form-inline\">\n      <div className=\"gf-form gf-form--grow\">\n        <div className=\"gf-form-label width-8\">Field name</div>\n        <Select options={fieldNames} value={options.byField} onChange={onSelectField} isClearable />\n      </div>\n    </div>\n  );\n};\n\nexport const seriesToFieldsTransformerRegistryItem: TransformerRegistryItem<SeriesToColumnsOptions> = {\n  id: DataTransformerID.seriesToColumns,\n  editor: SeriesToFieldsTransformerEditor,\n  transformation: standardTransformers.seriesToColumnsTransformer,\n  name: 'Outer join',\n  description:\n    'Joins many time series/tables by a field. This can be used to outer join multiple time series on the _time_ field to show many time series in one table.',\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SACEC,iBADF,EAGEC,oBAHF,QAMO,eANP;AAQA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,8BAAT,QAA+C,UAA/C;;;AAEA,OAAO,MAAMC,+BAAqF,GAAG,CAAC;EACpGC,KADoG;EAEpGC,OAFoG;EAGpGC;AAHoG,CAAD,KAI/F;EACJ,MAAMC,UAAU,GAAGL,8BAA8B,CAACE,KAAD,CAA9B,CAAsCI,GAAtC,CAA2CC,IAAD,KAAmB;IAAEC,KAAK,EAAED,IAAT;IAAeE,KAAK,EAAEF;EAAtB,CAAnB,CAA1C,CAAnB;EAEA,MAAMG,aAAa,GAAGd,WAAW,CAC9Ba,KAAD,IAAoC;IAClCL,QAAQ,mBACHD,OADG;MAENQ,OAAO,EAAEF,KAAK,CAACA;IAFT,GAAR;EAID,CAN8B,EAO/B,CAACL,QAAD,EAAWD,OAAX,CAP+B,CAAjC;EAUA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wCACE;QAAK,SAAS,EAAC,uBAAf;QAAA;MAAA,EADF,gBAEE,KAAC,MAAD;QAAQ,OAAO,EAAEE,UAAjB;QAA6B,KAAK,EAAEF,OAAO,CAACQ,OAA5C;QAAqD,QAAQ,EAAED,aAA/D;QAA8E,WAAW;MAAzF,EAFF;IAAA;EADF,EADF;AAQD,CAzBM;AA2BP,OAAO,MAAME,qCAAsF,GAAG;EACpGC,EAAE,EAAEhB,iBAAiB,CAACiB,eAD8E;EAEpGC,MAAM,EAAEd,+BAF4F;EAGpGe,cAAc,EAAElB,oBAAoB,CAACmB,0BAH+D;EAIpGC,IAAI,EAAE,YAJ8F;EAKpGC,WAAW,EACT;AANkG,CAA/F"},"metadata":{},"sourceType":"module"}