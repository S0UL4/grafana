{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Field, useStyles2 } from '@grafana/ui';\nimport { LibraryPanelCard } from '../../library-panels/components/LibraryPanelCard/LibraryPanelCard';\nimport { LibraryPanelInputState } from '../state/reducers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function ImportDashboardLibraryPanelsList({\n  inputs,\n  label,\n  description,\n  folderName\n}) {\n  const styles = useStyles2(getStyles);\n\n  if (!Boolean(inputs === null || inputs === void 0 ? void 0 : inputs.length)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.spacer,\n    children: /*#__PURE__*/_jsx(Field, {\n      label: label,\n      description: description,\n      children: /*#__PURE__*/_jsx(_Fragment, {\n        children: inputs.map((input, index) => {\n          const libraryPanelIndex = `elements[${index}]`;\n          const libraryPanel = input.state === LibraryPanelInputState.New ? Object.assign({}, input.model, {\n            meta: Object.assign({}, input.model.meta, {\n              folderName: folderName !== null && folderName !== void 0 ? folderName : 'General'\n            })\n          }) : Object.assign({}, input.model);\n          return /*#__PURE__*/_jsx(\"div\", {\n            className: styles.item,\n            children: /*#__PURE__*/_jsx(LibraryPanelCard, {\n              libraryPanel: libraryPanel,\n              onClick: () => undefined\n            })\n          }, libraryPanelIndex);\n        })\n      })\n    })\n  });\n}\n\nfunction getStyles(theme) {\n  return {\n    spacer: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    item: css`\n      margin-bottom: ${theme.spacing(1)};\n    `\n  };\n}","map":{"version":3,"names":["css","React","Field","useStyles2","LibraryPanelCard","LibraryPanelInputState","ImportDashboardLibraryPanelsList","inputs","label","description","folderName","styles","getStyles","Boolean","length","spacer","map","input","index","libraryPanelIndex","libraryPanel","state","New","model","meta","item","undefined","theme","spacing"],"sources":["/home/soula/grafana/public/app/features/manage-dashboards/components/ImportDashboardLibraryPanelsList.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ReactElement } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Field, useStyles2 } from '@grafana/ui';\n\nimport { LibraryPanelCard } from '../../library-panels/components/LibraryPanelCard/LibraryPanelCard';\nimport { LibraryPanelInput, LibraryPanelInputState } from '../state/reducers';\n\ninterface ImportDashboardLibraryPanelsListProps {\n  inputs: LibraryPanelInput[];\n  label: string;\n  description: string;\n  folderName?: string;\n}\n\nexport function ImportDashboardLibraryPanelsList({\n  inputs,\n  label,\n  description,\n  folderName,\n}: ImportDashboardLibraryPanelsListProps): ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  if (!Boolean(inputs?.length)) {\n    return null;\n  }\n\n  return (\n    <div className={styles.spacer}>\n      <Field label={label} description={description}>\n        <>\n          {inputs.map((input, index) => {\n            const libraryPanelIndex = `elements[${index}]`;\n            const libraryPanel =\n              input.state === LibraryPanelInputState.New\n                ? { ...input.model, meta: { ...input.model.meta, folderName: folderName ?? 'General' } }\n                : { ...input.model };\n            return (\n              <div className={styles.item} key={libraryPanelIndex}>\n                <LibraryPanelCard libraryPanel={libraryPanel} onClick={() => undefined} />\n              </div>\n            );\n          })}\n        </>\n      </Field>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    spacer: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    item: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAoC,OAApC;AAGA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,aAAlC;AAEA,SAASC,gBAAT,QAAiC,mEAAjC;AACA,SAA4BC,sBAA5B,QAA0D,mBAA1D;;;AASA,OAAO,SAASC,gCAAT,CAA0C;EAC/CC,MAD+C;EAE/CC,KAF+C;EAG/CC,WAH+C;EAI/CC;AAJ+C,CAA1C,EAKwD;EAC7D,MAAMC,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;;EAEA,IAAI,CAACC,OAAO,CAACN,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEO,MAAT,CAAZ,EAA8B;IAC5B,OAAO,IAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAEH,MAAM,CAACI,MAAvB;IAAA,uBACE,KAAC,KAAD;MAAO,KAAK,EAAEP,KAAd;MAAqB,WAAW,EAAEC,WAAlC;MAAA,uBACE;QAAA,UACGF,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;UAC5B,MAAMC,iBAAiB,GAAI,YAAWD,KAAM,GAA5C;UACA,MAAME,YAAY,GAChBH,KAAK,CAACI,KAAN,KAAgBhB,sBAAsB,CAACiB,GAAvC,qBACSL,KAAK,CAACM,KADf;YACsBC,IAAI,oBAAOP,KAAK,CAACM,KAAN,CAAYC,IAAnB;cAAyBd,UAAU,EAAEA,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB;YAAnD;UAD1B,uBAESO,KAAK,CAACM,KAFf,CADF;UAIA,oBACE;YAAK,SAAS,EAAEZ,MAAM,CAACc,IAAvB;YAAA,uBACE,KAAC,gBAAD;cAAkB,YAAY,EAAEL,YAAhC;cAA8C,OAAO,EAAE,MAAMM;YAA7D;UADF,GAAkCP,iBAAlC,CADF;QAKD,CAXA;MADH;IADF;EADF,EADF;AAoBD;;AAED,SAASP,SAAT,CAAmBe,KAAnB,EAAyC;EACvC,OAAO;IACLZ,MAAM,EAAEf,GAAI;AAChB,uBAAuB2B,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACxC,KAHS;IAILH,IAAI,EAAEzB,GAAI;AACd,uBAAuB2B,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACxC;EANS,CAAP;AAQD"},"metadata":{},"sourceType":"module"}