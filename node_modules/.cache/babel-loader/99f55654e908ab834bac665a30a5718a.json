{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { IconButton } from '../IconButton/IconButton';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { TableCellInspectModal } from './TableCellInspectModal';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from './types';\nimport { getTextAlign } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function CellActions({\n  field,\n  cell,\n  previewMode,\n  onCellFilterAdded\n}) {\n  var _field$config$custom;\n\n  const [isInspecting, setIsInspecting] = useState(false);\n  const isRightAligned = getTextAlign(field) === 'flex-end';\n  const showFilters = Boolean(field.config.filterable) && cell.value !== undefined;\n  const inspectEnabled = Boolean((_field$config$custom = field.config.custom) === null || _field$config$custom === void 0 ? void 0 : _field$config$custom.inspect);\n  const commonButtonProps = {\n    size: 'sm',\n    tooltipPlacement: 'top'\n  };\n  const onFilterFor = useCallback(event => onCellFilterAdded({\n    key: field.name,\n    operator: FILTER_FOR_OPERATOR,\n    value: cell.value\n  }), [cell, field, onCellFilterAdded]);\n  const onFilterOut = useCallback(event => onCellFilterAdded({\n    key: field.name,\n    operator: FILTER_OUT_OPERATOR,\n    value: cell.value\n  }), [cell, field, onCellFilterAdded]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: `cellActions ${isRightAligned ? 'cellActionsLeft' : ''}`,\n      children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n        spacing: \"xs\",\n        children: [inspectEnabled && /*#__PURE__*/_jsx(IconButton, Object.assign({\n          name: \"eye\",\n          tooltip: \"Inspect value\",\n          onClick: () => {\n            setIsInspecting(true);\n          }\n        }, commonButtonProps)), showFilters && /*#__PURE__*/_jsx(IconButton, Object.assign({\n          name: 'search-plus',\n          onClick: onFilterFor,\n          tooltip: \"Filter for value\"\n        }, commonButtonProps)), showFilters && /*#__PURE__*/_jsx(IconButton, Object.assign({\n          name: 'search-minus',\n          onClick: onFilterOut,\n          tooltip: \"Filter out value\"\n        }, commonButtonProps))]\n      })\n    }), isInspecting && /*#__PURE__*/_jsx(TableCellInspectModal, {\n      mode: previewMode,\n      value: cell.value,\n      onDismiss: () => {\n        setIsInspecting(false);\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useCallback","useState","IconButton","HorizontalGroup","TableCellInspectModal","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","getTextAlign","CellActions","field","cell","previewMode","onCellFilterAdded","isInspecting","setIsInspecting","isRightAligned","showFilters","Boolean","config","filterable","value","undefined","inspectEnabled","custom","inspect","commonButtonProps","size","tooltipPlacement","onFilterFor","event","key","name","operator","onFilterOut"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/CellActions.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { IconSize } from '../../types/icon';\nimport { IconButton } from '../IconButton/IconButton';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { TooltipPlacement } from '../Tooltip';\n\nimport { TableCellInspectModal } from './TableCellInspectModal';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, TableCellProps, TableFieldOptions } from './types';\nimport { getTextAlign } from './utils';\n\ninterface CellActionProps extends TableCellProps {\n  previewMode: 'text' | 'code';\n}\n\nexport function CellActions({ field, cell, previewMode, onCellFilterAdded }: CellActionProps) {\n  const [isInspecting, setIsInspecting] = useState(false);\n\n  const isRightAligned = getTextAlign(field) === 'flex-end';\n  const showFilters = Boolean(field.config.filterable) && cell.value !== undefined;\n  const inspectEnabled = Boolean((field.config.custom as TableFieldOptions)?.inspect);\n  const commonButtonProps = {\n    size: 'sm' as IconSize,\n    tooltipPlacement: 'top' as TooltipPlacement,\n  };\n\n  const onFilterFor = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) =>\n      onCellFilterAdded({ key: field.name, operator: FILTER_FOR_OPERATOR, value: cell.value }),\n    [cell, field, onCellFilterAdded]\n  );\n  const onFilterOut = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) =>\n      onCellFilterAdded({ key: field.name, operator: FILTER_OUT_OPERATOR, value: cell.value }),\n    [cell, field, onCellFilterAdded]\n  );\n\n  return (\n    <>\n      <div className={`cellActions ${isRightAligned ? 'cellActionsLeft' : ''}`}>\n        <HorizontalGroup spacing=\"xs\">\n          {inspectEnabled && (\n            <IconButton\n              name=\"eye\"\n              tooltip=\"Inspect value\"\n              onClick={() => {\n                setIsInspecting(true);\n              }}\n              {...commonButtonProps}\n            />\n          )}\n          {showFilters && (\n            <IconButton name={'search-plus'} onClick={onFilterFor} tooltip=\"Filter for value\" {...commonButtonProps} />\n          )}\n          {showFilters && (\n            <IconButton name={'search-minus'} onClick={onFilterOut} tooltip=\"Filter out value\" {...commonButtonProps} />\n          )}\n        </HorizontalGroup>\n      </div>\n\n      {isInspecting && (\n        <TableCellInspectModal\n          mode={previewMode}\n          value={cell.value}\n          onDismiss={() => {\n            setIsInspecting(false);\n          }}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAGA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAA4F,SAA5F;AACA,SAASC,YAAT,QAA6B,SAA7B;;;;AAMA,OAAO,SAASC,WAAT,CAAqB;EAAEC,KAAF;EAASC,IAAT;EAAeC,WAAf;EAA4BC;AAA5B,CAArB,EAAuF;EAAA;;EAC5F,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;EAEA,MAAMc,cAAc,GAAGR,YAAY,CAACE,KAAD,CAAZ,KAAwB,UAA/C;EACA,MAAMO,WAAW,GAAGC,OAAO,CAACR,KAAK,CAACS,MAAN,CAAaC,UAAd,CAAP,IAAoCT,IAAI,CAACU,KAAL,KAAeC,SAAvE;EACA,MAAMC,cAAc,GAAGL,OAAO,yBAAER,KAAK,CAACS,MAAN,CAAaK,MAAf,yDAAC,qBAA4CC,OAA7C,CAA9B;EACA,MAAMC,iBAAiB,GAAG;IACxBC,IAAI,EAAE,IADkB;IAExBC,gBAAgB,EAAE;EAFM,CAA1B;EAKA,MAAMC,WAAW,GAAG5B,WAAW,CAC5B6B,KAAD,IACEjB,iBAAiB,CAAC;IAAEkB,GAAG,EAAErB,KAAK,CAACsB,IAAb;IAAmBC,QAAQ,EAAE3B,mBAA7B;IAAkDe,KAAK,EAAEV,IAAI,CAACU;EAA9D,CAAD,CAFU,EAG7B,CAACV,IAAD,EAAOD,KAAP,EAAcG,iBAAd,CAH6B,CAA/B;EAKA,MAAMqB,WAAW,GAAGjC,WAAW,CAC5B6B,KAAD,IACEjB,iBAAiB,CAAC;IAAEkB,GAAG,EAAErB,KAAK,CAACsB,IAAb;IAAmBC,QAAQ,EAAE1B,mBAA7B;IAAkDc,KAAK,EAAEV,IAAI,CAACU;EAA9D,CAAD,CAFU,EAG7B,CAACV,IAAD,EAAOD,KAAP,EAAcG,iBAAd,CAH6B,CAA/B;EAMA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAG,eAAcG,cAAc,GAAG,iBAAH,GAAuB,EAAG,EAAvE;MAAA,uBACE,MAAC,eAAD;QAAiB,OAAO,EAAC,IAAzB;QAAA,WACGO,cAAc,iBACb,KAAC,UAAD;UACE,IAAI,EAAC,KADP;UAEE,OAAO,EAAC,eAFV;UAGE,OAAO,EAAE,MAAM;YACbR,eAAe,CAAC,IAAD,CAAf;UACD;QALH,GAMMW,iBANN,EAFJ,EAWGT,WAAW,iBACV,KAAC,UAAD;UAAY,IAAI,EAAE,aAAlB;UAAiC,OAAO,EAAEY,WAA1C;UAAuD,OAAO,EAAC;QAA/D,GAAsFH,iBAAtF,EAZJ,EAcGT,WAAW,iBACV,KAAC,UAAD;UAAY,IAAI,EAAE,cAAlB;UAAkC,OAAO,EAAEiB,WAA3C;UAAwD,OAAO,EAAC;QAAhE,GAAuFR,iBAAvF,EAfJ;MAAA;IADF,EADF,EAsBGZ,YAAY,iBACX,KAAC,qBAAD;MACE,IAAI,EAAEF,WADR;MAEE,KAAK,EAAED,IAAI,CAACU,KAFd;MAGE,SAAS,EAAE,MAAM;QACfN,eAAe,CAAC,KAAD,CAAf;MACD;IALH,EAvBJ;EAAA,EADF;AAkCD"},"metadata":{},"sourceType":"module"}