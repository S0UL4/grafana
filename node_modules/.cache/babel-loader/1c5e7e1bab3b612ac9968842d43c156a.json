{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useCallback, useMemo, useRef, useLayoutEffect, useState } from 'react';\nimport { LogsSortOrder, DataHoverClearEvent, DataHoverEvent } from '@grafana/data';\nimport { LogRows, CustomScrollbar, LogLabels, useStyles2, usePanelContext } from '@grafana/ui';\nimport { dataFrameToLogsModel, dedupLogRows } from 'app/core/logs_model';\nimport { getFieldLinksForExplore } from 'app/features/explore/utils/links';\nimport { PanelDataErrorView } from 'app/features/panel/components/PanelDataErrorView';\nimport { COMMON_LABELS } from '../../../core/logs_model';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const LogsPanel = ({\n  data,\n  timeZone,\n  fieldConfig,\n  options: {\n    showLabels,\n    showTime,\n    wrapLogMessage,\n    showCommonLabels,\n    prettifyLogMessage,\n    sortOrder,\n    dedupStrategy,\n    enableLogDetails\n  },\n  title,\n  id\n}) => {\n  const isAscending = sortOrder === LogsSortOrder.Ascending;\n  const style = useStyles2(getStyles(title, isAscending));\n  const [scrollTop, setScrollTop] = useState(0);\n  const logsContainerRef = useRef(null);\n  const {\n    eventBus\n  } = usePanelContext();\n  const onLogRowHover = useCallback(row => {\n    if (!row) {\n      eventBus.publish(new DataHoverClearEvent());\n    } else {\n      eventBus.publish(new DataHoverEvent({\n        point: {\n          time: row.timeEpochMs\n        }\n      }));\n    }\n  }, [eventBus]); // Important to memoize stuff here, as panel rerenders a lot for example when resizing.\n\n  const [logRows, deduplicatedRows, commonLabels] = useMemo(() => {\n    var _data$request, _newResults$meta;\n\n    const newResults = data ? dataFrameToLogsModel(data.series, (_data$request = data.request) === null || _data$request === void 0 ? void 0 : _data$request.intervalMs) : null;\n    const logRows = (newResults === null || newResults === void 0 ? void 0 : newResults.rows) || [];\n    const commonLabels = newResults === null || newResults === void 0 ? void 0 : (_newResults$meta = newResults.meta) === null || _newResults$meta === void 0 ? void 0 : _newResults$meta.find(m => m.label === COMMON_LABELS);\n    const deduplicatedRows = dedupLogRows(logRows, dedupStrategy);\n    return [logRows, deduplicatedRows, commonLabels];\n  }, [data, dedupStrategy]);\n  useLayoutEffect(() => {\n    if (isAscending && logsContainerRef.current) {\n      setScrollTop(logsContainerRef.current.offsetHeight);\n    } else {\n      setScrollTop(0);\n    }\n  }, [isAscending, logRows]);\n  const getFieldLinks = useCallback((field, rowIndex) => {\n    return getFieldLinksForExplore({\n      field,\n      rowIndex,\n      range: data.timeRange\n    });\n  }, [data]);\n\n  if (!data || logRows.length === 0) {\n    return /*#__PURE__*/_jsx(PanelDataErrorView, {\n      fieldConfig: fieldConfig,\n      panelId: id,\n      data: data,\n      needsStringField: true\n    });\n  }\n\n  const renderCommonLabels = () => /*#__PURE__*/_jsxs(\"div\", {\n    className: style.labelContainer,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      className: style.label,\n      children: \"Common labels:\"\n    }), /*#__PURE__*/_jsx(LogLabels, {\n      labels: commonLabels ? commonLabels.value : {\n        labels: '(no common labels)'\n      }\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(CustomScrollbar, {\n    autoHide: true,\n    scrollTop: scrollTop,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: style.container,\n      ref: logsContainerRef,\n      children: [showCommonLabels && !isAscending && renderCommonLabels(), /*#__PURE__*/_jsx(LogRows, {\n        logRows: logRows,\n        deduplicatedRows: deduplicatedRows,\n        dedupStrategy: dedupStrategy,\n        showLabels: showLabels,\n        showTime: showTime,\n        wrapLogMessage: wrapLogMessage,\n        prettifyLogMessage: prettifyLogMessage,\n        timeZone: timeZone,\n        getFieldLinks: getFieldLinks,\n        logsSortOrder: sortOrder,\n        enableLogDetails: enableLogDetails,\n        previewLimit: isAscending ? logRows.length : undefined,\n        onLogRowHover: onLogRowHover\n      }), showCommonLabels && isAscending && renderCommonLabels()]\n    })\n  });\n};\n\nconst getStyles = (title, isAscending) => theme => ({\n  container: css`\n    margin-bottom: ${theme.spacing(1.5)};\n    //We can remove this hot-fix when we fix panel menu with no title overflowing top of all panels\n    margin-top: ${theme.spacing(!title ? 2.5 : 0)};\n  `,\n  labelContainer: css`\n    margin: ${isAscending ? theme.spacing(0.5, 0, 0.5, 0) : theme.spacing(0, 0, 0.5, 0.5)};\n    display: flex;\n    align-items: center;\n  `,\n  label: css`\n    margin-right: ${theme.spacing(0.5)};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `\n});","map":{"version":3,"names":["css","React","useCallback","useMemo","useRef","useLayoutEffect","useState","LogsSortOrder","DataHoverClearEvent","DataHoverEvent","LogRows","CustomScrollbar","LogLabels","useStyles2","usePanelContext","dataFrameToLogsModel","dedupLogRows","getFieldLinksForExplore","PanelDataErrorView","COMMON_LABELS","LogsPanel","data","timeZone","fieldConfig","options","showLabels","showTime","wrapLogMessage","showCommonLabels","prettifyLogMessage","sortOrder","dedupStrategy","enableLogDetails","title","id","isAscending","Ascending","style","getStyles","scrollTop","setScrollTop","logsContainerRef","eventBus","onLogRowHover","row","publish","point","time","timeEpochMs","logRows","deduplicatedRows","commonLabels","newResults","series","request","intervalMs","rows","meta","find","m","label","current","offsetHeight","getFieldLinks","field","rowIndex","range","timeRange","length","renderCommonLabels","labelContainer","value","labels","container","undefined","theme","spacing","typography","bodySmall","fontSize","fontWeightMedium"],"sources":["/home/soula/grafana/public/app/plugins/panel/logs/LogsPanel.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback, useMemo, useRef, useLayoutEffect, useState } from 'react';\n\nimport {\n  PanelProps,\n  Field,\n  Labels,\n  GrafanaTheme2,\n  LogsSortOrder,\n  LogRowModel,\n  DataHoverClearEvent,\n  DataHoverEvent,\n} from '@grafana/data';\nimport { LogRows, CustomScrollbar, LogLabels, useStyles2, usePanelContext } from '@grafana/ui';\nimport { dataFrameToLogsModel, dedupLogRows } from 'app/core/logs_model';\nimport { getFieldLinksForExplore } from 'app/features/explore/utils/links';\nimport { PanelDataErrorView } from 'app/features/panel/components/PanelDataErrorView';\n\nimport { COMMON_LABELS } from '../../../core/logs_model';\n\nimport { Options } from './types';\n\ninterface LogsPanelProps extends PanelProps<Options> {}\n\nexport const LogsPanel: React.FunctionComponent<LogsPanelProps> = ({\n  data,\n  timeZone,\n  fieldConfig,\n  options: {\n    showLabels,\n    showTime,\n    wrapLogMessage,\n    showCommonLabels,\n    prettifyLogMessage,\n    sortOrder,\n    dedupStrategy,\n    enableLogDetails,\n  },\n  title,\n  id,\n}) => {\n  const isAscending = sortOrder === LogsSortOrder.Ascending;\n  const style = useStyles2(getStyles(title, isAscending));\n  const [scrollTop, setScrollTop] = useState(0);\n  const logsContainerRef = useRef<HTMLDivElement>(null);\n\n  const { eventBus } = usePanelContext();\n  const onLogRowHover = useCallback(\n    (row?: LogRowModel) => {\n      if (!row) {\n        eventBus.publish(new DataHoverClearEvent());\n      } else {\n        eventBus.publish(\n          new DataHoverEvent({\n            point: {\n              time: row.timeEpochMs,\n            },\n          })\n        );\n      }\n    },\n    [eventBus]\n  );\n\n  // Important to memoize stuff here, as panel rerenders a lot for example when resizing.\n  const [logRows, deduplicatedRows, commonLabels] = useMemo(() => {\n    const newResults = data ? dataFrameToLogsModel(data.series, data.request?.intervalMs) : null;\n    const logRows = newResults?.rows || [];\n    const commonLabels = newResults?.meta?.find((m) => m.label === COMMON_LABELS);\n    const deduplicatedRows = dedupLogRows(logRows, dedupStrategy);\n    return [logRows, deduplicatedRows, commonLabels];\n  }, [data, dedupStrategy]);\n\n  useLayoutEffect(() => {\n    if (isAscending && logsContainerRef.current) {\n      setScrollTop(logsContainerRef.current.offsetHeight);\n    } else {\n      setScrollTop(0);\n    }\n  }, [isAscending, logRows]);\n\n  const getFieldLinks = useCallback(\n    (field: Field, rowIndex: number) => {\n      return getFieldLinksForExplore({ field, rowIndex, range: data.timeRange });\n    },\n    [data]\n  );\n\n  if (!data || logRows.length === 0) {\n    return <PanelDataErrorView fieldConfig={fieldConfig} panelId={id} data={data} needsStringField />;\n  }\n\n  const renderCommonLabels = () => (\n    <div className={style.labelContainer}>\n      <span className={style.label}>Common labels:</span>\n      <LogLabels labels={commonLabels ? (commonLabels.value as Labels) : { labels: '(no common labels)' }} />\n    </div>\n  );\n\n  return (\n    <CustomScrollbar autoHide scrollTop={scrollTop}>\n      <div className={style.container} ref={logsContainerRef}>\n        {showCommonLabels && !isAscending && renderCommonLabels()}\n        <LogRows\n          logRows={logRows}\n          deduplicatedRows={deduplicatedRows}\n          dedupStrategy={dedupStrategy}\n          showLabels={showLabels}\n          showTime={showTime}\n          wrapLogMessage={wrapLogMessage}\n          prettifyLogMessage={prettifyLogMessage}\n          timeZone={timeZone}\n          getFieldLinks={getFieldLinks}\n          logsSortOrder={sortOrder}\n          enableLogDetails={enableLogDetails}\n          previewLimit={isAscending ? logRows.length : undefined}\n          onLogRowHover={onLogRowHover}\n        />\n        {showCommonLabels && isAscending && renderCommonLabels()}\n      </div>\n    </CustomScrollbar>\n  );\n};\n\nconst getStyles = (title: string, isAscending: boolean) => (theme: GrafanaTheme2) => ({\n  container: css`\n    margin-bottom: ${theme.spacing(1.5)};\n    //We can remove this hot-fix when we fix panel menu with no title overflowing top of all panels\n    margin-top: ${theme.spacing(!title ? 2.5 : 0)};\n  `,\n  labelContainer: css`\n    margin: ${isAscending ? theme.spacing(0.5, 0, 0.5, 0) : theme.spacing(0, 0, 0.5, 0.5)};\n    display: flex;\n    align-items: center;\n  `,\n  label: css`\n    margin-right: ${theme.spacing(0.5)};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,MAAtC,EAA8CC,eAA9C,EAA+DC,QAA/D,QAA+E,OAA/E;AAEA,SAKEC,aALF,EAOEC,mBAPF,EAQEC,cARF,QASO,eATP;AAUA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA0DC,eAA1D,QAAiF,aAAjF;AACA,SAASC,oBAAT,EAA+BC,YAA/B,QAAmD,qBAAnD;AACA,SAASC,uBAAT,QAAwC,kCAAxC;AACA,SAASC,kBAAT,QAAmC,kDAAnC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;;AAMA,OAAO,MAAMC,SAAkD,GAAG,CAAC;EACjEC,IADiE;EAEjEC,QAFiE;EAGjEC,WAHiE;EAIjEC,OAAO,EAAE;IACPC,UADO;IAEPC,QAFO;IAGPC,cAHO;IAIPC,gBAJO;IAKPC,kBALO;IAMPC,SANO;IAOPC,aAPO;IAQPC;EARO,CAJwD;EAcjEC,KAdiE;EAejEC;AAfiE,CAAD,KAgB5D;EACJ,MAAMC,WAAW,GAAGL,SAAS,KAAKvB,aAAa,CAAC6B,SAAhD;EACA,MAAMC,KAAK,GAAGxB,UAAU,CAACyB,SAAS,CAACL,KAAD,EAAQE,WAAR,CAAV,CAAxB;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAMmC,gBAAgB,GAAGrC,MAAM,CAAiB,IAAjB,CAA/B;EAEA,MAAM;IAAEsC;EAAF,IAAe5B,eAAe,EAApC;EACA,MAAM6B,aAAa,GAAGzC,WAAW,CAC9B0C,GAAD,IAAuB;IACrB,IAAI,CAACA,GAAL,EAAU;MACRF,QAAQ,CAACG,OAAT,CAAiB,IAAIrC,mBAAJ,EAAjB;IACD,CAFD,MAEO;MACLkC,QAAQ,CAACG,OAAT,CACE,IAAIpC,cAAJ,CAAmB;QACjBqC,KAAK,EAAE;UACLC,IAAI,EAAEH,GAAG,CAACI;QADL;MADU,CAAnB,CADF;IAOD;EACF,CAb8B,EAc/B,CAACN,QAAD,CAd+B,CAAjC,CAPI,CAwBJ;;EACA,MAAM,CAACO,OAAD,EAAUC,gBAAV,EAA4BC,YAA5B,IAA4ChD,OAAO,CAAC,MAAM;IAAA;;IAC9D,MAAMiD,UAAU,GAAG/B,IAAI,GAAGN,oBAAoB,CAACM,IAAI,CAACgC,MAAN,mBAAchC,IAAI,CAACiC,OAAnB,kDAAc,cAAcC,UAA5B,CAAvB,GAAiE,IAAxF;IACA,MAAMN,OAAO,GAAG,CAAAG,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEI,IAAZ,KAAoB,EAApC;IACA,MAAML,YAAY,GAAGC,UAAH,aAAGA,UAAH,2CAAGA,UAAU,CAAEK,IAAf,qDAAG,iBAAkBC,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYzC,aAA1C,CAArB;IACA,MAAM+B,gBAAgB,GAAGlC,YAAY,CAACiC,OAAD,EAAUlB,aAAV,CAArC;IACA,OAAO,CAACkB,OAAD,EAAUC,gBAAV,EAA4BC,YAA5B,CAAP;EACD,CANwD,EAMtD,CAAC9B,IAAD,EAAOU,aAAP,CANsD,CAAzD;EAQA1B,eAAe,CAAC,MAAM;IACpB,IAAI8B,WAAW,IAAIM,gBAAgB,CAACoB,OAApC,EAA6C;MAC3CrB,YAAY,CAACC,gBAAgB,CAACoB,OAAjB,CAAyBC,YAA1B,CAAZ;IACD,CAFD,MAEO;MACLtB,YAAY,CAAC,CAAD,CAAZ;IACD;EACF,CANc,EAMZ,CAACL,WAAD,EAAcc,OAAd,CANY,CAAf;EAQA,MAAMc,aAAa,GAAG7D,WAAW,CAC/B,CAAC8D,KAAD,EAAeC,QAAf,KAAoC;IAClC,OAAOhD,uBAAuB,CAAC;MAAE+C,KAAF;MAASC,QAAT;MAAmBC,KAAK,EAAE7C,IAAI,CAAC8C;IAA/B,CAAD,CAA9B;EACD,CAH8B,EAI/B,CAAC9C,IAAD,CAJ+B,CAAjC;;EAOA,IAAI,CAACA,IAAD,IAAS4B,OAAO,CAACmB,MAAR,KAAmB,CAAhC,EAAmC;IACjC,oBAAO,KAAC,kBAAD;MAAoB,WAAW,EAAE7C,WAAjC;MAA8C,OAAO,EAAEW,EAAvD;MAA2D,IAAI,EAAEb,IAAjE;MAAuE,gBAAgB;IAAvF,EAAP;EACD;;EAED,MAAMgD,kBAAkB,GAAG,mBACzB;IAAK,SAAS,EAAEhC,KAAK,CAACiC,cAAtB;IAAA,wBACE;MAAM,SAAS,EAAEjC,KAAK,CAACuB,KAAvB;MAAA;IAAA,EADF,eAEE,KAAC,SAAD;MAAW,MAAM,EAAET,YAAY,GAAIA,YAAY,CAACoB,KAAjB,GAAoC;QAAEC,MAAM,EAAE;MAAV;IAAnE,EAFF;EAAA,EADF;;EAOA,oBACE,KAAC,eAAD;IAAiB,QAAQ,MAAzB;IAA0B,SAAS,EAAEjC,SAArC;IAAA,uBACE;MAAK,SAAS,EAAEF,KAAK,CAACoC,SAAtB;MAAiC,GAAG,EAAEhC,gBAAtC;MAAA,WACGb,gBAAgB,IAAI,CAACO,WAArB,IAAoCkC,kBAAkB,EADzD,eAEE,KAAC,OAAD;QACE,OAAO,EAAEpB,OADX;QAEE,gBAAgB,EAAEC,gBAFpB;QAGE,aAAa,EAAEnB,aAHjB;QAIE,UAAU,EAAEN,UAJd;QAKE,QAAQ,EAAEC,QALZ;QAME,cAAc,EAAEC,cANlB;QAOE,kBAAkB,EAAEE,kBAPtB;QAQE,QAAQ,EAAEP,QARZ;QASE,aAAa,EAAEyC,aATjB;QAUE,aAAa,EAAEjC,SAVjB;QAWE,gBAAgB,EAAEE,gBAXpB;QAYE,YAAY,EAAEG,WAAW,GAAGc,OAAO,CAACmB,MAAX,GAAoBM,SAZ/C;QAaE,aAAa,EAAE/B;MAbjB,EAFF,EAiBGf,gBAAgB,IAAIO,WAApB,IAAmCkC,kBAAkB,EAjBxD;IAAA;EADF,EADF;AAuBD,CAlGM;;AAoGP,MAAM/B,SAAS,GAAG,CAACL,KAAD,EAAgBE,WAAhB,KAA0CwC,KAAD,KAA2B;EACpFF,SAAS,EAAEzE,GAAI;AACjB,qBAAqB2E,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACxC;AACA,kBAAkBD,KAAK,CAACC,OAAN,CAAc,CAAC3C,KAAD,GAAS,GAAT,GAAe,CAA7B,CAAgC;AAClD,GALsF;EAMpFqC,cAAc,EAAEtE,GAAI;AACtB,cAAcmC,WAAW,GAAGwC,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAH,GAAmCD,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAApB,EAAyB,GAAzB,CAA8B;AAC1F;AACA;AACA,GAVsF;EAWpFhB,KAAK,EAAE5D,GAAI;AACb,oBAAoB2E,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACvC,iBAAiBD,KAAK,CAACE,UAAN,CAAiBC,SAAjB,CAA2BC,QAAS;AACrD,mBAAmBJ,KAAK,CAACE,UAAN,CAAiBG,gBAAiB;AACrD;AAfsF,CAA3B,CAA3D"},"metadata":{},"sourceType":"module"}