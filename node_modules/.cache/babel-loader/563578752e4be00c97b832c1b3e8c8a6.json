{"ast":null,"code":"import React, { memo, useCallback } from 'react';\nimport { FieldMatcherID, fieldMatchers } from '@grafana/data';\nimport { Select } from '../Select/Select';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const FieldNameMatcherEditor = /*#__PURE__*/memo(props => {\n  const {\n    data,\n    options,\n    onChange: onChangeFromProps,\n    id\n  } = props;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, options);\n  const onChange = useCallback(selection => {\n    if (!frameHasName(selection.value, names)) {\n      return;\n    }\n\n    return onChangeFromProps(selection.value);\n  }, [names, onChangeFromProps]);\n  const selectedOption = selectOptions.find(v => v.value === options);\n  return /*#__PURE__*/_jsx(Select, {\n    value: selectedOption,\n    options: selectOptions,\n    onChange: onChange,\n    inputId: id\n  });\n});\nFieldNameMatcherEditor.displayName = 'FieldNameMatcherEditor';\nexport const fieldNameMatcherItem = {\n  id: FieldMatcherID.byName,\n  component: FieldNameMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byName),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: options => options\n};","map":{"version":3,"names":["React","memo","useCallback","FieldMatcherID","fieldMatchers","Select","useFieldDisplayNames","useSelectOptions","frameHasName","FieldNameMatcherEditor","props","data","options","onChange","onChangeFromProps","id","names","selectOptions","selection","value","selectedOption","find","v","displayName","fieldNameMatcherItem","byName","component","matcher","get","name","description","optionsToLabel"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/MatchersUI/FieldNameMatcherEditor.tsx"],"sourcesContent":["import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\n\nexport const FieldNameMatcherEditor = memo<MatcherUIProps<string>>((props) => {\n  const { data, options, onChange: onChangeFromProps, id } = props;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, options);\n\n  const onChange = useCallback(\n    (selection: SelectableValue<string>) => {\n      if (!frameHasName(selection.value, names)) {\n        return;\n      }\n      return onChangeFromProps(selection.value!);\n    },\n    [names, onChangeFromProps]\n  );\n\n  const selectedOption = selectOptions.find((v) => v.value === options);\n  return <Select value={selectedOption} options={selectOptions} onChange={onChange} inputId={id} />;\n});\nFieldNameMatcherEditor.displayName = 'FieldNameMatcherEditor';\n\nexport const fieldNameMatcherItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byName,\n  component: FieldNameMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byName),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: (options) => options,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,QAAyC,OAAzC;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA+D,eAA/D;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AAGA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,YAAjD,QAAqE,SAArE;;AAEA,OAAO,MAAMC,sBAAsB,gBAAGR,IAAI,CAA0BS,KAAD,IAAW;EAC5E,MAAM;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,QAAQ,EAAEC,iBAA3B;IAA8CC;EAA9C,IAAqDL,KAA3D;EACA,MAAMM,KAAK,GAAGV,oBAAoB,CAACK,IAAD,CAAlC;EACA,MAAMM,aAAa,GAAGV,gBAAgB,CAACS,KAAD,EAAQJ,OAAR,CAAtC;EAEA,MAAMC,QAAQ,GAAGX,WAAW,CACzBgB,SAAD,IAAwC;IACtC,IAAI,CAACV,YAAY,CAACU,SAAS,CAACC,KAAX,EAAkBH,KAAlB,CAAjB,EAA2C;MACzC;IACD;;IACD,OAAOF,iBAAiB,CAACI,SAAS,CAACC,KAAX,CAAxB;EACD,CANyB,EAO1B,CAACH,KAAD,EAAQF,iBAAR,CAP0B,CAA5B;EAUA,MAAMM,cAAc,GAAGH,aAAa,CAACI,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACH,KAAF,KAAYP,OAAtC,CAAvB;EACA,oBAAO,KAAC,MAAD;IAAQ,KAAK,EAAEQ,cAAf;IAA+B,OAAO,EAAEH,aAAxC;IAAuD,QAAQ,EAAEJ,QAAjE;IAA2E,OAAO,EAAEE;EAApF,EAAP;AACD,CAjByC,CAAnC;AAkBPN,sBAAsB,CAACc,WAAvB,GAAqC,wBAArC;AAEA,OAAO,MAAMC,oBAAwD,GAAG;EACtET,EAAE,EAAEZ,cAAc,CAACsB,MADmD;EAEtEC,SAAS,EAAEjB,sBAF2D;EAGtEkB,OAAO,EAAEvB,aAAa,CAACwB,GAAd,CAAkBzB,cAAc,CAACsB,MAAjC,CAH6D;EAItEI,IAAI,EAAE,kBAJgE;EAKtEC,WAAW,EAAE,qCALyD;EAMtEC,cAAc,EAAGnB,OAAD,IAAaA;AANyC,CAAjE"},"metadata":{},"sourceType":"module"}