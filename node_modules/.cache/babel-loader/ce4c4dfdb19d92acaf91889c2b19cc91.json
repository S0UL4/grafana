{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { createTheme, systemDateFormats } from '@grafana/data';\nexport class GrafanaBootConfig {\n  // UID\n  constructor(options) {\n    _defineProperty(this, \"isPublicDashboardView\", void 0);\n\n    _defineProperty(this, \"datasources\", {});\n\n    _defineProperty(this, \"panels\", {});\n\n    _defineProperty(this, \"minRefreshInterval\", '');\n\n    _defineProperty(this, \"appUrl\", '');\n\n    _defineProperty(this, \"appSubUrl\", '');\n\n    _defineProperty(this, \"windowTitlePrefix\", '');\n\n    _defineProperty(this, \"buildInfo\", void 0);\n\n    _defineProperty(this, \"newPanelTitle\", '');\n\n    _defineProperty(this, \"bootData\", void 0);\n\n    _defineProperty(this, \"externalUserMngLinkUrl\", '');\n\n    _defineProperty(this, \"externalUserMngLinkName\", '');\n\n    _defineProperty(this, \"externalUserMngInfo\", '');\n\n    _defineProperty(this, \"allowOrgCreate\", false);\n\n    _defineProperty(this, \"feedbackLinksEnabled\", true);\n\n    _defineProperty(this, \"disableLoginForm\", false);\n\n    _defineProperty(this, \"defaultDatasource\", '');\n\n    _defineProperty(this, \"alertingEnabled\", false);\n\n    _defineProperty(this, \"alertingErrorOrTimeout\", '');\n\n    _defineProperty(this, \"alertingNoDataOrNullValues\", '');\n\n    _defineProperty(this, \"alertingMinInterval\", 1);\n\n    _defineProperty(this, \"angularSupportEnabled\", false);\n\n    _defineProperty(this, \"authProxyEnabled\", false);\n\n    _defineProperty(this, \"exploreEnabled\", false);\n\n    _defineProperty(this, \"queryHistoryEnabled\", false);\n\n    _defineProperty(this, \"helpEnabled\", false);\n\n    _defineProperty(this, \"profileEnabled\", false);\n\n    _defineProperty(this, \"ldapEnabled\", false);\n\n    _defineProperty(this, \"sigV4AuthEnabled\", false);\n\n    _defineProperty(this, \"samlEnabled\", false);\n\n    _defineProperty(this, \"samlName\", '');\n\n    _defineProperty(this, \"autoAssignOrg\", true);\n\n    _defineProperty(this, \"verifyEmailEnabled\", false);\n\n    _defineProperty(this, \"oauth\", {});\n\n    _defineProperty(this, \"rbacEnabled\", true);\n\n    _defineProperty(this, \"rbacBuiltInRoleAssignmentEnabled\", false);\n\n    _defineProperty(this, \"disableUserSignUp\", false);\n\n    _defineProperty(this, \"loginHint\", '');\n\n    _defineProperty(this, \"passwordHint\", '');\n\n    _defineProperty(this, \"loginError\", undefined);\n\n    _defineProperty(this, \"navTree\", void 0);\n\n    _defineProperty(this, \"viewersCanEdit\", false);\n\n    _defineProperty(this, \"editorsCanAdmin\", false);\n\n    _defineProperty(this, \"disableSanitizeHtml\", false);\n\n    _defineProperty(this, \"liveEnabled\", true);\n\n    _defineProperty(this, \"theme\", void 0);\n\n    _defineProperty(this, \"theme2\", void 0);\n\n    _defineProperty(this, \"pluginsToPreload\", []);\n\n    _defineProperty(this, \"featureToggles\", {});\n\n    _defineProperty(this, \"licenseInfo\", {});\n\n    _defineProperty(this, \"rendererAvailable\", false);\n\n    _defineProperty(this, \"dashboardPreviews\", {\n      systemRequirements: {\n        met: false,\n        requiredImageRendererPluginVersion: ''\n      },\n      thumbnailsExist: false\n    });\n\n    _defineProperty(this, \"rendererVersion\", '');\n\n    _defineProperty(this, \"http2Enabled\", false);\n\n    _defineProperty(this, \"dateFormats\", void 0);\n\n    _defineProperty(this, \"sentry\", {\n      enabled: false,\n      dsn: '',\n      customEndpoint: '',\n      sampleRate: 1\n    });\n\n    _defineProperty(this, \"pluginCatalogURL\", 'https://grafana.com/grafana/plugins/');\n\n    _defineProperty(this, \"pluginAdminEnabled\", true);\n\n    _defineProperty(this, \"pluginAdminExternalManageEnabled\", false);\n\n    _defineProperty(this, \"pluginCatalogHiddenPlugins\", []);\n\n    _defineProperty(this, \"expressionsEnabled\", false);\n\n    _defineProperty(this, \"customTheme\", void 0);\n\n    _defineProperty(this, \"awsAllowedAuthProviders\", []);\n\n    _defineProperty(this, \"awsAssumeRoleEnabled\", false);\n\n    _defineProperty(this, \"azure\", {\n      managedIdentityEnabled: false\n    });\n\n    _defineProperty(this, \"caching\", {\n      enabled: false\n    });\n\n    _defineProperty(this, \"geomapDefaultBaseLayerConfig\", void 0);\n\n    _defineProperty(this, \"geomapDisableCustomBaseLayer\", void 0);\n\n    _defineProperty(this, \"unifiedAlertingEnabled\", false);\n\n    _defineProperty(this, \"applicationInsightsConnectionString\", void 0);\n\n    _defineProperty(this, \"applicationInsightsEndpointUrl\", void 0);\n\n    _defineProperty(this, \"recordedQueries\", {\n      enabled: true\n    });\n\n    _defineProperty(this, \"featureHighlights\", {\n      enabled: false\n    });\n\n    _defineProperty(this, \"reporting\", {\n      enabled: true\n    });\n\n    _defineProperty(this, \"googleAnalyticsId\", void 0);\n\n    _defineProperty(this, \"rudderstackWriteKey\", void 0);\n\n    _defineProperty(this, \"rudderstackDataPlaneUrl\", void 0);\n\n    _defineProperty(this, \"rudderstackSdkUrl\", void 0);\n\n    _defineProperty(this, \"rudderstackConfigUrl\", void 0);\n\n    const mode = options.bootData.user.lightTheme ? 'light' : 'dark';\n    this.theme2 = createTheme({\n      colors: {\n        mode\n      }\n    });\n    this.theme = this.theme2.v1;\n    this.bootData = options.bootData;\n    this.isPublicDashboardView = options.bootData.settings.isPublicDashboardView;\n    const defaults = {\n      datasources: {},\n      windowTitlePrefix: 'Grafana - ',\n      panels: {},\n      newPanelTitle: 'Panel Title',\n      playlist_timespan: '1m',\n      unsaved_changes_warning: true,\n      appUrl: '',\n      appSubUrl: '',\n      buildInfo: {\n        version: '1.0',\n        commit: '1',\n        env: 'production'\n      },\n      viewersCanEdit: false,\n      editorsCanAdmin: false,\n      disableSanitizeHtml: false\n    };\n    merge(this, defaults, options);\n    this.buildInfo = options.buildInfo || defaults.buildInfo;\n\n    if (this.dateFormats) {\n      systemDateFormats.update(this.dateFormats);\n    }\n\n    overrideFeatureTogglesFromUrl(this);\n  }\n\n}\n\nfunction overrideFeatureTogglesFromUrl(config) {\n  if (window.location.href.indexOf('__feature') === -1) {\n    return;\n  }\n\n  const params = new URLSearchParams(window.location.search);\n  params.forEach((value, key) => {\n    if (key.startsWith('__feature.')) {\n      const featureName = key.substring(10);\n      const toggleState = value === 'true';\n\n      if (toggleState !== config.featureToggles[key]) {\n        config.featureToggles[featureName] = toggleState;\n        console.log(`Setting feature toggle ${featureName} = ${toggleState}`);\n      }\n    }\n  });\n}\n\nconst bootData = window.grafanaBootData || {\n  settings: {},\n  user: {},\n  navTree: []\n};\nconst options = bootData.settings;\noptions.bootData = bootData;\n/**\n * Use this to access the {@link GrafanaBootConfig} for the current running Grafana instance.\n *\n * @public\n */\n\nexport const config = new GrafanaBootConfig(options);","map":{"version":3,"names":["merge","createTheme","systemDateFormats","GrafanaBootConfig","constructor","options","undefined","systemRequirements","met","requiredImageRendererPluginVersion","thumbnailsExist","enabled","dsn","customEndpoint","sampleRate","managedIdentityEnabled","mode","bootData","user","lightTheme","theme2","colors","theme","v1","isPublicDashboardView","settings","defaults","datasources","windowTitlePrefix","panels","newPanelTitle","playlist_timespan","unsaved_changes_warning","appUrl","appSubUrl","buildInfo","version","commit","env","viewersCanEdit","editorsCanAdmin","disableSanitizeHtml","dateFormats","update","overrideFeatureTogglesFromUrl","config","window","location","href","indexOf","params","URLSearchParams","search","forEach","value","key","startsWith","featureName","substring","toggleState","featureToggles","console","log","grafanaBootData","navTree"],"sources":["/home/soula/grafana/packages/grafana-runtime/src/config.ts"],"sourcesContent":["import { merge } from 'lodash';\n\nimport {\n  BootData,\n  BuildInfo,\n  createTheme,\n  DataSourceInstanceSettings,\n  FeatureToggles,\n  GrafanaConfig,\n  GrafanaTheme,\n  GrafanaTheme2,\n  LicenseInfo,\n  MapLayerOptions,\n  OAuthSettings,\n  PanelPluginMeta,\n  PreloadPlugin,\n  systemDateFormats,\n  SystemDateFormatSettings,\n} from '@grafana/data';\n\nexport interface AzureSettings {\n  cloud?: string;\n  managedIdentityEnabled: boolean;\n}\n\nexport class GrafanaBootConfig implements GrafanaConfig {\n  isPublicDashboardView: boolean;\n  datasources: { [str: string]: DataSourceInstanceSettings } = {};\n  panels: { [key: string]: PanelPluginMeta } = {};\n  minRefreshInterval = '';\n  appUrl = '';\n  appSubUrl = '';\n  windowTitlePrefix = '';\n  buildInfo: BuildInfo;\n  newPanelTitle = '';\n  bootData: BootData;\n  externalUserMngLinkUrl = '';\n  externalUserMngLinkName = '';\n  externalUserMngInfo = '';\n  allowOrgCreate = false;\n  feedbackLinksEnabled = true;\n  disableLoginForm = false;\n  defaultDatasource = ''; // UID\n  alertingEnabled = false;\n  alertingErrorOrTimeout = '';\n  alertingNoDataOrNullValues = '';\n  alertingMinInterval = 1;\n  angularSupportEnabled = false;\n  authProxyEnabled = false;\n  exploreEnabled = false;\n  queryHistoryEnabled = false;\n  helpEnabled = false;\n  profileEnabled = false;\n  ldapEnabled = false;\n  sigV4AuthEnabled = false;\n  samlEnabled = false;\n  samlName = '';\n  autoAssignOrg = true;\n  verifyEmailEnabled = false;\n  oauth: OAuthSettings = {};\n  rbacEnabled = true;\n  rbacBuiltInRoleAssignmentEnabled = false;\n  disableUserSignUp = false;\n  loginHint = '';\n  passwordHint = '';\n  loginError = undefined;\n  navTree: any;\n  viewersCanEdit = false;\n  editorsCanAdmin = false;\n  disableSanitizeHtml = false;\n  liveEnabled = true;\n  theme: GrafanaTheme;\n  theme2: GrafanaTheme2;\n  pluginsToPreload: PreloadPlugin[] = [];\n  featureToggles: FeatureToggles = {};\n  licenseInfo: LicenseInfo = {} as LicenseInfo;\n  rendererAvailable = false;\n  dashboardPreviews: {\n    systemRequirements: {\n      met: boolean;\n      requiredImageRendererPluginVersion: string;\n    };\n    thumbnailsExist: boolean;\n  } = { systemRequirements: { met: false, requiredImageRendererPluginVersion: '' }, thumbnailsExist: false };\n  rendererVersion = '';\n  http2Enabled = false;\n  dateFormats?: SystemDateFormatSettings;\n  sentry = {\n    enabled: false,\n    dsn: '',\n    customEndpoint: '',\n    sampleRate: 1,\n  };\n  pluginCatalogURL = 'https://grafana.com/grafana/plugins/';\n  pluginAdminEnabled = true;\n  pluginAdminExternalManageEnabled = false;\n  pluginCatalogHiddenPlugins: string[] = [];\n  expressionsEnabled = false;\n  customTheme?: any;\n  awsAllowedAuthProviders: string[] = [];\n  awsAssumeRoleEnabled = false;\n  azure: AzureSettings = {\n    managedIdentityEnabled: false,\n  };\n  caching = {\n    enabled: false,\n  };\n  geomapDefaultBaseLayerConfig?: MapLayerOptions;\n  geomapDisableCustomBaseLayer?: boolean;\n  unifiedAlertingEnabled = false;\n  applicationInsightsConnectionString?: string;\n  applicationInsightsEndpointUrl?: string;\n  recordedQueries = {\n    enabled: true,\n  };\n  featureHighlights = {\n    enabled: false,\n  };\n  reporting = {\n    enabled: true,\n  };\n  googleAnalyticsId: undefined;\n  rudderstackWriteKey: undefined;\n  rudderstackDataPlaneUrl: undefined;\n  rudderstackSdkUrl: undefined;\n  rudderstackConfigUrl: undefined;\n\n  constructor(options: GrafanaBootConfig) {\n    const mode = options.bootData.user.lightTheme ? 'light' : 'dark';\n    this.theme2 = createTheme({ colors: { mode } });\n    this.theme = this.theme2.v1;\n    this.bootData = options.bootData;\n    this.isPublicDashboardView = options.bootData.settings.isPublicDashboardView;\n\n    const defaults = {\n      datasources: {},\n      windowTitlePrefix: 'Grafana - ',\n      panels: {},\n      newPanelTitle: 'Panel Title',\n      playlist_timespan: '1m',\n      unsaved_changes_warning: true,\n      appUrl: '',\n      appSubUrl: '',\n      buildInfo: {\n        version: '1.0',\n        commit: '1',\n        env: 'production',\n      },\n      viewersCanEdit: false,\n      editorsCanAdmin: false,\n      disableSanitizeHtml: false,\n    };\n\n    merge(this, defaults, options);\n\n    this.buildInfo = options.buildInfo || defaults.buildInfo;\n\n    if (this.dateFormats) {\n      systemDateFormats.update(this.dateFormats);\n    }\n\n    overrideFeatureTogglesFromUrl(this);\n  }\n}\n\nfunction overrideFeatureTogglesFromUrl(config: GrafanaBootConfig) {\n  if (window.location.href.indexOf('__feature') === -1) {\n    return;\n  }\n\n  const params = new URLSearchParams(window.location.search);\n  params.forEach((value, key) => {\n    if (key.startsWith('__feature.')) {\n      const featureName = key.substring(10);\n      const toggleState = value === 'true';\n      if (toggleState !== config.featureToggles[key]) {\n        config.featureToggles[featureName] = toggleState;\n        console.log(`Setting feature toggle ${featureName} = ${toggleState}`);\n      }\n    }\n  });\n}\n\nconst bootData = (window as any).grafanaBootData || {\n  settings: {},\n  user: {},\n  navTree: [],\n};\n\nconst options = bootData.settings;\noptions.bootData = bootData;\n\n/**\n * Use this to access the {@link GrafanaBootConfig} for the current running Grafana instance.\n *\n * @public\n */\nexport const config = new GrafanaBootConfig(options);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}