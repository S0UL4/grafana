{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isEqual } from 'lodash';\nimport React, { createRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FixedSizeList } from 'react-window';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { CompletionItemKind } from '../../types/completion';\nimport { flattenGroupItems, calculateLongestLabel, calculateListSizes } from '../../utils/typeahead';\nimport { TypeaheadInfo } from './TypeaheadInfo';\nimport { TypeaheadItem } from './TypeaheadItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst modulo = (a, n) => a - n * Math.floor(a / n);\n\nexport class Typeahead extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"listRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(this, \"state\", {\n      hoveredItem: null,\n      typeaheadIndex: null,\n      allItems: [],\n      listWidth: -1,\n      listHeight: -1,\n      itemHeight: -1\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      if (this.props.menuRef) {\n        this.props.menuRef(this);\n      }\n\n      document.addEventListener('selectionchange', this.handleSelectionChange);\n      const allItems = flattenGroupItems(this.props.groupedItems);\n      const longestLabel = calculateLongestLabel(allItems);\n      const {\n        listWidth,\n        listHeight,\n        itemHeight\n      } = calculateListSizes(this.context.v1, allItems, longestLabel);\n      this.setState({\n        listWidth,\n        listHeight,\n        itemHeight,\n        allItems\n      });\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      document.removeEventListener('selectionchange', this.handleSelectionChange);\n    });\n\n    _defineProperty(this, \"handleSelectionChange\", () => {\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"componentDidUpdate\", (prevProps, prevState) => {\n      if (this.state.typeaheadIndex !== null && prevState.typeaheadIndex !== this.state.typeaheadIndex && this.listRef && this.listRef.current) {\n        if (this.state.typeaheadIndex === 1) {\n          this.listRef.current.scrollToItem(0); // special case for handling the first group label\n\n          return;\n        }\n\n        this.listRef.current.scrollToItem(this.state.typeaheadIndex);\n      }\n\n      if (isEqual(prevProps.groupedItems, this.props.groupedItems) === false) {\n        const allItems = flattenGroupItems(this.props.groupedItems);\n        const longestLabel = calculateLongestLabel(allItems);\n        const {\n          listWidth,\n          listHeight,\n          itemHeight\n        } = calculateListSizes(this.context.v1, allItems, longestLabel);\n        this.setState({\n          listWidth,\n          listHeight,\n          itemHeight,\n          allItems,\n          typeaheadIndex: null\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMouseEnter\", index => {\n      this.setState({\n        hoveredItem: index\n      });\n    });\n\n    _defineProperty(this, \"onMouseLeave\", () => {\n      this.setState({\n        hoveredItem: null\n      });\n    });\n\n    _defineProperty(this, \"moveMenuIndex\", moveAmount => {\n      const itemCount = this.state.allItems.length;\n\n      if (itemCount) {\n        // Select next suggestion\n        const typeaheadIndex = this.state.typeaheadIndex || 0;\n        let newTypeaheadIndex = modulo(typeaheadIndex + moveAmount, itemCount);\n\n        if (this.state.allItems[newTypeaheadIndex].kind === CompletionItemKind.GroupTitle) {\n          newTypeaheadIndex = modulo(newTypeaheadIndex + moveAmount, itemCount);\n        }\n\n        this.setState({\n          typeaheadIndex: newTypeaheadIndex\n        });\n        return;\n      }\n    });\n\n    _defineProperty(this, \"insertSuggestion\", () => {\n      if (this.props.onSelectSuggestion && this.state.typeaheadIndex !== null) {\n        this.props.onSelectSuggestion(this.state.allItems[this.state.typeaheadIndex]);\n      }\n    });\n  }\n\n  get menuPosition() {\n    // Exit for unit tests\n    if (!window.getSelection) {\n      return '';\n    }\n\n    const selection = window.getSelection();\n    const node = selection && selection.anchorNode; // Align menu overlay to editor node\n\n    if (node && node.parentElement) {\n      // Read from DOM\n      const rect = node.parentElement.getBoundingClientRect();\n      const scrollX = window.scrollX;\n      const scrollY = window.scrollY;\n      return `position: absolute; display: flex; top: ${rect.top + scrollY + rect.height + 6}px; left: ${rect.left + scrollX - 2}px`;\n    }\n\n    return '';\n  }\n\n  render() {\n    const {\n      prefix,\n      isOpen = false,\n      origin\n    } = this.props;\n    const {\n      allItems,\n      listWidth,\n      listHeight,\n      itemHeight,\n      hoveredItem,\n      typeaheadIndex\n    } = this.state;\n    const showDocumentation = hoveredItem || typeaheadIndex;\n    const documentationItem = allItems[hoveredItem ? hoveredItem : typeaheadIndex || 0];\n    return /*#__PURE__*/_jsxs(Portal, {\n      origin: origin,\n      isOpen: isOpen,\n      style: this.menuPosition,\n      children: [/*#__PURE__*/_jsx(\"ul\", {\n        className: \"typeahead\",\n        \"data-testid\": \"typeahead\",\n        children: /*#__PURE__*/_jsx(FixedSizeList, {\n          ref: this.listRef,\n          itemCount: allItems.length,\n          itemSize: itemHeight,\n          itemKey: index => {\n            const item = allItems && allItems[index];\n            const key = item ? `${index}-${item.label}` : `${index}`;\n            return key;\n          },\n          width: listWidth,\n          height: listHeight,\n          children: ({\n            index,\n            style\n          }) => {\n            const item = allItems && allItems[index];\n\n            if (!item) {\n              return null;\n            }\n\n            return /*#__PURE__*/_jsx(TypeaheadItem, {\n              onClickItem: () => this.props.onSelectSuggestion ? this.props.onSelectSuggestion(item) : {},\n              isSelected: typeaheadIndex === null ? false : allItems[typeaheadIndex] === item,\n              item: item,\n              prefix: prefix,\n              style: style,\n              onMouseEnter: () => this.onMouseEnter(index),\n              onMouseLeave: this.onMouseLeave\n            });\n          }\n        })\n      }), showDocumentation && /*#__PURE__*/_jsx(TypeaheadInfo, {\n        height: listHeight,\n        item: documentationItem\n      })]\n    });\n  }\n\n}\n\n_defineProperty(Typeahead, \"contextType\", ThemeContext);\n\nclass Portal extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"node\", void 0);\n\n    const {\n      index = 0,\n      origin = 'query',\n      style\n    } = props;\n    this.node = document.createElement('div');\n    this.node.setAttribute('style', style);\n    this.node.classList.add(`slate-typeahead`, `slate-typeahead-${origin}-${index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.node.setAttribute('style', this.props.style);\n      this.node.classList.add(`slate-typeahead--open`);\n      return /*#__PURE__*/ReactDOM.createPortal(this.props.children, this.node);\n    } else {\n      this.node.classList.remove(`slate-typeahead--open`);\n    }\n\n    return null;\n  }\n\n}","map":{"version":3,"names":["isEqual","React","createRef","ReactDOM","FixedSizeList","ThemeContext","CompletionItemKind","flattenGroupItems","calculateLongestLabel","calculateListSizes","TypeaheadInfo","TypeaheadItem","modulo","a","n","Math","floor","Typeahead","PureComponent","hoveredItem","typeaheadIndex","allItems","listWidth","listHeight","itemHeight","props","menuRef","document","addEventListener","handleSelectionChange","groupedItems","longestLabel","context","v1","setState","removeEventListener","forceUpdate","prevProps","prevState","state","listRef","current","scrollToItem","index","moveAmount","itemCount","length","newTypeaheadIndex","kind","GroupTitle","onSelectSuggestion","menuPosition","window","getSelection","selection","node","anchorNode","parentElement","rect","getBoundingClientRect","scrollX","scrollY","top","height","left","render","prefix","isOpen","origin","showDocumentation","documentationItem","item","key","label","style","onMouseEnter","onMouseLeave","Portal","constructor","createElement","setAttribute","classList","add","body","appendChild","componentWillUnmount","removeChild","createPortal","children","remove"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Typeahead/Typeahead.tsx"],"sourcesContent":["import { isEqual } from 'lodash';\nimport React, { createRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FixedSizeList } from 'react-window';\n\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { CompletionItem, CompletionItemGroup, CompletionItemKind } from '../../types/completion';\nimport { flattenGroupItems, calculateLongestLabel, calculateListSizes } from '../../utils/typeahead';\n\nimport { TypeaheadInfo } from './TypeaheadInfo';\nimport { TypeaheadItem } from './TypeaheadItem';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface Props {\n  origin: string;\n  groupedItems: CompletionItemGroup[];\n  prefix?: string;\n  menuRef?: (el: Typeahead) => void;\n  onSelectSuggestion?: (suggestion: CompletionItem) => void;\n  isOpen?: boolean;\n}\n\nexport interface State {\n  allItems: CompletionItem[];\n  listWidth: number;\n  listHeight: number;\n  itemHeight: number;\n  hoveredItem: number | null;\n  typeaheadIndex: number | null;\n}\n\nexport class Typeahead extends React.PureComponent<Props, State> {\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n  listRef = createRef<FixedSizeList>();\n\n  state: State = {\n    hoveredItem: null,\n    typeaheadIndex: null,\n    allItems: [],\n    listWidth: -1,\n    listHeight: -1,\n    itemHeight: -1,\n  };\n\n  componentDidMount = () => {\n    if (this.props.menuRef) {\n      this.props.menuRef(this);\n    }\n\n    document.addEventListener('selectionchange', this.handleSelectionChange);\n\n    const allItems = flattenGroupItems(this.props.groupedItems);\n    const longestLabel = calculateLongestLabel(allItems);\n    const { listWidth, listHeight, itemHeight } = calculateListSizes(this.context.v1, allItems, longestLabel);\n    this.setState({\n      listWidth,\n      listHeight,\n      itemHeight,\n      allItems,\n    });\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  };\n\n  handleSelectionChange = () => {\n    this.forceUpdate();\n  };\n\n  componentDidUpdate = (prevProps: Readonly<Props>, prevState: Readonly<State>) => {\n    if (\n      this.state.typeaheadIndex !== null &&\n      prevState.typeaheadIndex !== this.state.typeaheadIndex &&\n      this.listRef &&\n      this.listRef.current\n    ) {\n      if (this.state.typeaheadIndex === 1) {\n        this.listRef.current.scrollToItem(0); // special case for handling the first group label\n        return;\n      }\n      this.listRef.current.scrollToItem(this.state.typeaheadIndex);\n    }\n\n    if (isEqual(prevProps.groupedItems, this.props.groupedItems) === false) {\n      const allItems = flattenGroupItems(this.props.groupedItems);\n      const longestLabel = calculateLongestLabel(allItems);\n      const { listWidth, listHeight, itemHeight } = calculateListSizes(this.context.v1, allItems, longestLabel);\n      this.setState({ listWidth, listHeight, itemHeight, allItems, typeaheadIndex: null });\n    }\n  };\n\n  onMouseEnter = (index: number) => {\n    this.setState({\n      hoveredItem: index,\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      hoveredItem: null,\n    });\n  };\n\n  moveMenuIndex = (moveAmount: number) => {\n    const itemCount = this.state.allItems.length;\n    if (itemCount) {\n      // Select next suggestion\n      const typeaheadIndex = this.state.typeaheadIndex || 0;\n      let newTypeaheadIndex = modulo(typeaheadIndex + moveAmount, itemCount);\n\n      if (this.state.allItems[newTypeaheadIndex].kind === CompletionItemKind.GroupTitle) {\n        newTypeaheadIndex = modulo(newTypeaheadIndex + moveAmount, itemCount);\n      }\n\n      this.setState({\n        typeaheadIndex: newTypeaheadIndex,\n      });\n\n      return;\n    }\n  };\n\n  insertSuggestion = () => {\n    if (this.props.onSelectSuggestion && this.state.typeaheadIndex !== null) {\n      this.props.onSelectSuggestion(this.state.allItems[this.state.typeaheadIndex]);\n    }\n  };\n\n  get menuPosition(): string {\n    // Exit for unit tests\n    if (!window.getSelection) {\n      return '';\n    }\n\n    const selection = window.getSelection();\n    const node = selection && selection.anchorNode;\n\n    // Align menu overlay to editor node\n    if (node && node.parentElement) {\n      // Read from DOM\n      const rect = node.parentElement.getBoundingClientRect();\n      const scrollX = window.scrollX;\n      const scrollY = window.scrollY;\n\n      return `position: absolute; display: flex; top: ${rect.top + scrollY + rect.height + 6}px; left: ${\n        rect.left + scrollX - 2\n      }px`;\n    }\n\n    return '';\n  }\n\n  render() {\n    const { prefix, isOpen = false, origin } = this.props;\n    const { allItems, listWidth, listHeight, itemHeight, hoveredItem, typeaheadIndex } = this.state;\n\n    const showDocumentation = hoveredItem || typeaheadIndex;\n    const documentationItem = allItems[hoveredItem ? hoveredItem : typeaheadIndex || 0];\n\n    return (\n      <Portal origin={origin} isOpen={isOpen} style={this.menuPosition}>\n        <ul className=\"typeahead\" data-testid=\"typeahead\">\n          <FixedSizeList\n            ref={this.listRef}\n            itemCount={allItems.length}\n            itemSize={itemHeight}\n            itemKey={(index) => {\n              const item = allItems && allItems[index];\n              const key = item ? `${index}-${item.label}` : `${index}`;\n              return key;\n            }}\n            width={listWidth}\n            height={listHeight}\n          >\n            {({ index, style }) => {\n              const item = allItems && allItems[index];\n              if (!item) {\n                return null;\n              }\n\n              return (\n                <TypeaheadItem\n                  onClickItem={() => (this.props.onSelectSuggestion ? this.props.onSelectSuggestion(item) : {})}\n                  isSelected={typeaheadIndex === null ? false : allItems[typeaheadIndex] === item}\n                  item={item}\n                  prefix={prefix}\n                  style={style}\n                  onMouseEnter={() => this.onMouseEnter(index)}\n                  onMouseLeave={this.onMouseLeave}\n                />\n              );\n            }}\n          </FixedSizeList>\n        </ul>\n\n        {showDocumentation && <TypeaheadInfo height={listHeight} item={documentationItem} />}\n      </Portal>\n    );\n  }\n}\n\ninterface PortalProps {\n  index?: number;\n  isOpen: boolean;\n  origin: string;\n  style: string;\n}\n\nclass Portal extends React.PureComponent<PortalProps, {}> {\n  node: HTMLElement;\n\n  constructor(props: PortalProps) {\n    super(props);\n    const { index = 0, origin = 'query', style } = props;\n    this.node = document.createElement('div');\n    this.node.setAttribute('style', style);\n    this.node.classList.add(`slate-typeahead`, `slate-typeahead-${origin}-${index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.node.setAttribute('style', this.props.style);\n      this.node.classList.add(`slate-typeahead--open`);\n      return ReactDOM.createPortal(this.props.children, this.node);\n    } else {\n      this.node.classList.remove(`slate-typeahead--open`);\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}