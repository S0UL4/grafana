{"ast":null,"code":"var _div, _em, _em2, _h, _HttpAccessHelp, _InlineFormLabel, _h2, _h3;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useState, useCallback } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useTheme } from '../../themes';\nimport { FormField } from '../FormField/FormField';\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { InlineField } from '../Forms/InlineField';\nimport { Input } from '../Forms/Legacy/Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { Select } from '../Select/Select';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { TagsInput } from '../TagsInput/TagsInput';\nimport { BasicAuthSettings } from './BasicAuthSettings';\nimport { CustomHeadersSettings } from './CustomHeadersSettings';\nimport { HttpProxySettings } from './HttpProxySettings';\nimport { TLSAuthSettings } from './TLSAuthSettings';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst ACCESS_OPTIONS = [{\n  label: 'Server (default)',\n  value: 'proxy'\n}, {\n  label: 'Browser',\n  value: 'direct'\n}];\nconst DEFAULT_ACCESS_OPTION = {\n  label: 'Server (default)',\n  value: 'proxy'\n};\n\nconst HttpAccessHelp = () => _div || (_div = /*#__PURE__*/_jsxs(\"div\", {\n  className: \"grafana-info-box m-t-2\",\n  children: [/*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Access mode controls how requests to the data source will be handled.\", /*#__PURE__*/_jsxs(\"strong\", {\n      children: [\"\\xA0\", /*#__PURE__*/_jsx(\"i\", {\n        children: \"Server\"\n      })]\n    }), ' ', \"should be the preferred way if nothing else is stated.\"]\n  }), /*#__PURE__*/_jsx(\"div\", {\n    className: \"alert-title\",\n    children: \"Server access mode (Default):\"\n  }), /*#__PURE__*/_jsx(\"p\", {\n    children: \"All requests will be made from the browser to Grafana backend/server which in turn will forward the requests to the data source and by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements. The URL needs to be accessible from the grafana backend/server if you select this access mode.\"\n  }), /*#__PURE__*/_jsx(\"div\", {\n    className: \"alert-title\",\n    children: \"Browser access mode:\"\n  }), /*#__PURE__*/_jsx(\"p\", {\n    children: \"All requests will be made from the browser directly to the data source and may be subject to Cross-Origin Resource Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this access mode.\"\n  })]\n}));\n\nconst LABEL_WIDTH = 26;\nexport const DataSourceHttpSettings = props => {\n  const {\n    defaultUrl,\n    dataSourceConfig,\n    onChange,\n    showAccessOptions,\n    sigV4AuthToggleEnabled,\n    showForwardOAuthIdentityOption,\n    azureAuthSettings,\n    renderSigV4Editor\n  } = props;\n  let urlTooltip;\n  const [isAccessHelpVisible, setIsAccessHelpVisible] = useState(false);\n  const theme = useTheme();\n  const onSettingsChange = useCallback(change => {\n    onChange(Object.assign({}, dataSourceConfig, change));\n  }, [dataSourceConfig, onChange]);\n\n  switch (dataSourceConfig.access) {\n    case 'direct':\n      urlTooltip = /*#__PURE__*/_jsxs(_Fragment, {\n        children: [\"Your access method is \", _em || (_em = /*#__PURE__*/_jsx(\"em\", {\n          children: \"Browser\"\n        })), \", this means the URL needs to be accessible from the browser.\"]\n      });\n      break;\n\n    case 'proxy':\n      urlTooltip = /*#__PURE__*/_jsxs(_Fragment, {\n        children: [\"Your access method is \", _em2 || (_em2 = /*#__PURE__*/_jsx(\"em\", {\n          children: \"Server\"\n        })), \", this means the URL needs to be accessible from the grafana backend/server.\"]\n      });\n      break;\n\n    default:\n      urlTooltip = 'Specify a complete HTTP URL (for example http://your_server:8080)';\n  }\n\n  const accessSelect = /*#__PURE__*/_jsx(Select, {\n    \"aria-label\": \"Access\",\n    className: \"width-20 gf-form-input\",\n    options: ACCESS_OPTIONS,\n    value: ACCESS_OPTIONS.filter(o => o.value === dataSourceConfig.access)[0] || DEFAULT_ACCESS_OPTION,\n    onChange: selectedValue => onSettingsChange({\n      access: selectedValue.value\n    })\n  });\n\n  const isValidUrl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(dataSourceConfig.url);\n  const notValidStyle = css`\n    box-shadow: inset 0 0px 5px ${theme.palette.red};\n  `;\n  const inputStyle = cx({\n    [`width-20`]: true,\n    [notValidStyle]: !isValidUrl\n  });\n\n  const urlInput = /*#__PURE__*/_jsx(Input, {\n    className: inputStyle,\n    placeholder: defaultUrl,\n    value: dataSourceConfig.url,\n    \"aria-label\": selectors.components.DataSource.DataSourceHttpSettings.urlInput,\n    onChange: event => onSettingsChange({\n      url: event.currentTarget.value\n    })\n  });\n\n  const azureAuthEnabled = (azureAuthSettings === null || azureAuthSettings === void 0 ? void 0 : azureAuthSettings.azureAuthSupported) && azureAuthSettings.getAzureAuthEnabled(dataSourceConfig) || false;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"gf-form-group\",\n    children: [/*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-heading\",\n        children: \"HTTP\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsx(FormField, {\n            label: \"URL\",\n            labelWidth: 13,\n            tooltip: urlTooltip,\n            inputEl: urlInput\n          })\n        }), showAccessOptions && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"gf-form-inline\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"gf-form\",\n              children: /*#__PURE__*/_jsx(FormField, {\n                label: \"Access\",\n                labelWidth: 13,\n                inputWidth: 20,\n                inputEl: accessSelect\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"gf-form\",\n              children: /*#__PURE__*/_jsxs(\"label\", {\n                className: \"gf-form-label query-keyword pointer\",\n                onClick: () => setIsAccessHelpVisible(isVisible => !isVisible),\n                children: [\"Help\\xA0\", /*#__PURE__*/_jsx(Icon, {\n                  name: isAccessHelpVisible ? 'angle-down' : 'angle-right',\n                  style: {\n                    marginBottom: 0\n                  }\n                })]\n              })\n            })]\n          }), isAccessHelpVisible && (_HttpAccessHelp || (_HttpAccessHelp = /*#__PURE__*/_jsx(HttpAccessHelp, {})))]\n        }), dataSourceConfig.access === 'proxy' && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"gf-form-group\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"gf-form\",\n            children: [_InlineFormLabel || (_InlineFormLabel = /*#__PURE__*/_jsx(InlineFormLabel, {\n              width: 13,\n              tooltip: \"Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\",\n              children: \"Allowed cookies\"\n            })), /*#__PURE__*/_jsx(TagsInput, {\n              tags: dataSourceConfig.jsonData.keepCookies,\n              width: 40,\n              onChange: cookies => onSettingsChange({\n                jsonData: Object.assign({}, dataSourceConfig.jsonData, {\n                  keepCookies: cookies\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"gf-form\",\n            children: /*#__PURE__*/_jsx(FormField, {\n              label: \"Timeout\",\n              type: \"number\",\n              labelWidth: 13,\n              inputWidth: 20,\n              tooltip: \"HTTP request timeout in seconds\",\n              placeholder: \"Timeout in seconds\",\n              \"aria-label\": \"Timeout in seconds\",\n              value: dataSourceConfig.jsonData.timeout,\n              onChange: event => {\n                onSettingsChange({\n                  jsonData: Object.assign({}, dataSourceConfig.jsonData, {\n                    timeout: parseInt(event.currentTarget.value, 10)\n                  })\n                });\n              }\n            })\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h2 || (_h2 = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-heading\",\n        children: \"Auth\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"gf-form-inline\",\n          children: [/*#__PURE__*/_jsx(InlineField, {\n            label: \"Basic auth\",\n            labelWidth: LABEL_WIDTH,\n            children: /*#__PURE__*/_jsx(InlineSwitch, {\n              id: \"http-settings-basic-auth\",\n              value: dataSourceConfig.basicAuth,\n              onChange: event => {\n                onSettingsChange({\n                  basicAuth: event.currentTarget.checked\n                });\n              }\n            })\n          }), /*#__PURE__*/_jsx(InlineField, {\n            label: \"With Credentials\",\n            tooltip: \"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\",\n            labelWidth: LABEL_WIDTH,\n            children: /*#__PURE__*/_jsx(InlineSwitch, {\n              id: \"http-settings-with-credentials\",\n              value: dataSourceConfig.withCredentials,\n              onChange: event => {\n                onSettingsChange({\n                  withCredentials: event.currentTarget.checked\n                });\n              }\n            })\n          })]\n        }), (azureAuthSettings === null || azureAuthSettings === void 0 ? void 0 : azureAuthSettings.azureAuthSupported) && /*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form-inline\",\n          children: /*#__PURE__*/_jsx(InlineField, {\n            label: \"Azure Authentication\",\n            tooltip: \"Use Azure authentication for Azure endpoint.\",\n            labelWidth: LABEL_WIDTH,\n            children: /*#__PURE__*/_jsx(InlineSwitch, {\n              id: \"http-settings-azure-auth\",\n              value: azureAuthEnabled,\n              onChange: event => {\n                onSettingsChange(azureAuthSettings.setAzureAuthEnabled(dataSourceConfig, event.currentTarget.checked));\n              }\n            })\n          })\n        }), sigV4AuthToggleEnabled && /*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form-inline\",\n          children: /*#__PURE__*/_jsx(InlineField, {\n            label: \"SigV4 auth\",\n            labelWidth: LABEL_WIDTH,\n            children: /*#__PURE__*/_jsx(InlineSwitch, {\n              id: \"http-settings-sigv4-auth\",\n              value: dataSourceConfig.jsonData.sigV4Auth || false,\n              onChange: event => {\n                onSettingsChange({\n                  jsonData: Object.assign({}, dataSourceConfig.jsonData, {\n                    sigV4Auth: event.currentTarget.checked\n                  })\n                });\n              }\n            })\n          })\n        }), dataSourceConfig.access === 'proxy' && /*#__PURE__*/_jsx(HttpProxySettings, {\n          dataSourceConfig: dataSourceConfig,\n          onChange: jsonData => onSettingsChange({\n            jsonData\n          }),\n          showForwardOAuthIdentityOption: showForwardOAuthIdentityOption\n        })]\n      }), dataSourceConfig.basicAuth && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [_h3 || (_h3 = /*#__PURE__*/_jsx(\"h6\", {\n          children: \"Basic Auth Details\"\n        })), /*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form-group\",\n          children: /*#__PURE__*/_jsx(BasicAuthSettings, Object.assign({}, props))\n        })]\n      }), (azureAuthSettings === null || azureAuthSettings === void 0 ? void 0 : azureAuthSettings.azureAuthSupported) && azureAuthEnabled && azureAuthSettings.azureSettingsUI && /*#__PURE__*/_jsx(azureAuthSettings.azureSettingsUI, {\n        dataSourceConfig: dataSourceConfig,\n        onChange: onChange\n      }), dataSourceConfig.jsonData.sigV4Auth && sigV4AuthToggleEnabled && renderSigV4Editor, (dataSourceConfig.jsonData.tlsAuth || dataSourceConfig.jsonData.tlsAuthWithCACert) && /*#__PURE__*/_jsx(TLSAuthSettings, {\n        dataSourceConfig: dataSourceConfig,\n        onChange: onChange\n      }), dataSourceConfig.access === 'proxy' && /*#__PURE__*/_jsx(CustomHeadersSettings, {\n        dataSourceConfig: dataSourceConfig,\n        onChange: onChange\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["css","cx","React","useState","useCallback","selectors","useTheme","FormField","InlineFormLabel","InlineField","Input","Icon","Select","InlineSwitch","TagsInput","BasicAuthSettings","CustomHeadersSettings","HttpProxySettings","TLSAuthSettings","ACCESS_OPTIONS","label","value","DEFAULT_ACCESS_OPTION","HttpAccessHelp","LABEL_WIDTH","DataSourceHttpSettings","props","defaultUrl","dataSourceConfig","onChange","showAccessOptions","sigV4AuthToggleEnabled","showForwardOAuthIdentityOption","azureAuthSettings","renderSigV4Editor","urlTooltip","isAccessHelpVisible","setIsAccessHelpVisible","theme","onSettingsChange","change","access","accessSelect","filter","o","selectedValue","isValidUrl","test","url","notValidStyle","palette","red","inputStyle","urlInput","components","DataSource","event","currentTarget","azureAuthEnabled","azureAuthSupported","getAzureAuthEnabled","isVisible","marginBottom","jsonData","keepCookies","cookies","timeout","parseInt","basicAuth","checked","withCredentials","setAzureAuthEnabled","sigV4Auth","azureSettingsUI","tlsAuth","tlsAuthWithCACert"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataSourceSettings/DataSourceHttpSettings.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useState, useCallback } from 'react';\n\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme } from '../../themes';\nimport { FormField } from '../FormField/FormField';\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { InlineField } from '../Forms/InlineField';\nimport { Input } from '../Forms/Legacy/Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { Select } from '../Select/Select';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { TagsInput } from '../TagsInput/TagsInput';\n\nimport { BasicAuthSettings } from './BasicAuthSettings';\nimport { CustomHeadersSettings } from './CustomHeadersSettings';\nimport { HttpProxySettings } from './HttpProxySettings';\nimport { TLSAuthSettings } from './TLSAuthSettings';\nimport { HttpSettingsProps } from './types';\n\nconst ACCESS_OPTIONS: Array<SelectableValue<string>> = [\n  {\n    label: 'Server (default)',\n    value: 'proxy',\n  },\n  {\n    label: 'Browser',\n    value: 'direct',\n  },\n];\n\nconst DEFAULT_ACCESS_OPTION = {\n  label: 'Server (default)',\n  value: 'proxy',\n};\n\nconst HttpAccessHelp = () => (\n  <div className=\"grafana-info-box m-t-2\">\n    <p>\n      Access mode controls how requests to the data source will be handled.\n      <strong>\n        &nbsp;<i>Server</i>\n      </strong>{' '}\n      should be the preferred way if nothing else is stated.\n    </p>\n    <div className=\"alert-title\">Server access mode (Default):</div>\n    <p>\n      All requests will be made from the browser to Grafana backend/server which in turn will forward the requests to\n      the data source and by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements. The URL needs\n      to be accessible from the grafana backend/server if you select this access mode.\n    </p>\n    <div className=\"alert-title\">Browser access mode:</div>\n    <p>\n      All requests will be made from the browser directly to the data source and may be subject to Cross-Origin Resource\n      Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this access mode.\n    </p>\n  </div>\n);\n\nconst LABEL_WIDTH = 26;\n\nexport const DataSourceHttpSettings: React.FC<HttpSettingsProps> = (props) => {\n  const {\n    defaultUrl,\n    dataSourceConfig,\n    onChange,\n    showAccessOptions,\n    sigV4AuthToggleEnabled,\n    showForwardOAuthIdentityOption,\n    azureAuthSettings,\n    renderSigV4Editor,\n  } = props;\n  let urlTooltip;\n  const [isAccessHelpVisible, setIsAccessHelpVisible] = useState(false);\n  const theme = useTheme();\n\n  const onSettingsChange = useCallback(\n    (change: Partial<DataSourceSettings<any, any>>) => {\n      onChange({\n        ...dataSourceConfig,\n        ...change,\n      });\n    },\n    [dataSourceConfig, onChange]\n  );\n\n  switch (dataSourceConfig.access) {\n    case 'direct':\n      urlTooltip = (\n        <>\n          Your access method is <em>Browser</em>, this means the URL needs to be accessible from the browser.\n        </>\n      );\n      break;\n    case 'proxy':\n      urlTooltip = (\n        <>\n          Your access method is <em>Server</em>, this means the URL needs to be accessible from the grafana\n          backend/server.\n        </>\n      );\n      break;\n    default:\n      urlTooltip = 'Specify a complete HTTP URL (for example http://your_server:8080)';\n  }\n\n  const accessSelect = (\n    <Select\n      aria-label=\"Access\"\n      className=\"width-20 gf-form-input\"\n      options={ACCESS_OPTIONS}\n      value={ACCESS_OPTIONS.filter((o) => o.value === dataSourceConfig.access)[0] || DEFAULT_ACCESS_OPTION}\n      onChange={(selectedValue) => onSettingsChange({ access: selectedValue.value })}\n    />\n  );\n\n  const isValidUrl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(\n    dataSourceConfig.url\n  );\n\n  const notValidStyle = css`\n    box-shadow: inset 0 0px 5px ${theme.palette.red};\n  `;\n\n  const inputStyle = cx({ [`width-20`]: true, [notValidStyle]: !isValidUrl });\n\n  const urlInput = (\n    <Input\n      className={inputStyle}\n      placeholder={defaultUrl}\n      value={dataSourceConfig.url}\n      aria-label={selectors.components.DataSource.DataSourceHttpSettings.urlInput}\n      onChange={(event) => onSettingsChange({ url: event.currentTarget.value })}\n    />\n  );\n\n  const azureAuthEnabled: boolean =\n    (azureAuthSettings?.azureAuthSupported && azureAuthSettings.getAzureAuthEnabled(dataSourceConfig)) || false;\n\n  return (\n    <div className=\"gf-form-group\">\n      <>\n        <h3 className=\"page-heading\">HTTP</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <FormField label=\"URL\" labelWidth={13} tooltip={urlTooltip} inputEl={urlInput} />\n          </div>\n\n          {showAccessOptions && (\n            <>\n              <div className=\"gf-form-inline\">\n                <div className=\"gf-form\">\n                  <FormField label=\"Access\" labelWidth={13} inputWidth={20} inputEl={accessSelect} />\n                </div>\n                <div className=\"gf-form\">\n                  <label\n                    className=\"gf-form-label query-keyword pointer\"\n                    onClick={() => setIsAccessHelpVisible((isVisible) => !isVisible)}\n                  >\n                    Help&nbsp;\n                    <Icon name={isAccessHelpVisible ? 'angle-down' : 'angle-right'} style={{ marginBottom: 0 }} />\n                  </label>\n                </div>\n              </div>\n              {isAccessHelpVisible && <HttpAccessHelp />}\n            </>\n          )}\n          {dataSourceConfig.access === 'proxy' && (\n            <div className=\"gf-form-group\">\n              <div className=\"gf-form\">\n                <InlineFormLabel\n                  width={13}\n                  tooltip=\"Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\"\n                >\n                  Allowed cookies\n                </InlineFormLabel>\n                <TagsInput\n                  tags={dataSourceConfig.jsonData.keepCookies}\n                  width={40}\n                  onChange={(cookies) =>\n                    onSettingsChange({ jsonData: { ...dataSourceConfig.jsonData, keepCookies: cookies } })\n                  }\n                />\n              </div>\n              <div className=\"gf-form\">\n                <FormField\n                  label=\"Timeout\"\n                  type=\"number\"\n                  labelWidth={13}\n                  inputWidth={20}\n                  tooltip=\"HTTP request timeout in seconds\"\n                  placeholder=\"Timeout in seconds\"\n                  aria-label=\"Timeout in seconds\"\n                  value={dataSourceConfig.jsonData.timeout}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n\n      <>\n        <h3 className=\"page-heading\">Auth</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <InlineField label=\"Basic auth\" labelWidth={LABEL_WIDTH}>\n              <InlineSwitch\n                id=\"http-settings-basic-auth\"\n                value={dataSourceConfig.basicAuth}\n                onChange={(event) => {\n                  onSettingsChange({ basicAuth: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n\n            <InlineField\n              label=\"With Credentials\"\n              tooltip=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\n              labelWidth={LABEL_WIDTH}\n            >\n              <InlineSwitch\n                id=\"http-settings-with-credentials\"\n                value={dataSourceConfig.withCredentials}\n                onChange={(event) => {\n                  onSettingsChange({ withCredentials: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n          </div>\n\n          {azureAuthSettings?.azureAuthSupported && (\n            <div className=\"gf-form-inline\">\n              <InlineField\n                label=\"Azure Authentication\"\n                tooltip=\"Use Azure authentication for Azure endpoint.\"\n                labelWidth={LABEL_WIDTH}\n              >\n                <InlineSwitch\n                  id=\"http-settings-azure-auth\"\n                  value={azureAuthEnabled}\n                  onChange={(event) => {\n                    onSettingsChange(\n                      azureAuthSettings.setAzureAuthEnabled(dataSourceConfig, event!.currentTarget.checked)\n                    );\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {sigV4AuthToggleEnabled && (\n            <div className=\"gf-form-inline\">\n              <InlineField label=\"SigV4 auth\" labelWidth={LABEL_WIDTH}>\n                <InlineSwitch\n                  id=\"http-settings-sigv4-auth\"\n                  value={dataSourceConfig.jsonData.sigV4Auth || false}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, sigV4Auth: event!.currentTarget.checked },\n                    });\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {dataSourceConfig.access === 'proxy' && (\n            <HttpProxySettings\n              dataSourceConfig={dataSourceConfig}\n              onChange={(jsonData) => onSettingsChange({ jsonData })}\n              showForwardOAuthIdentityOption={showForwardOAuthIdentityOption}\n            />\n          )}\n        </div>\n        {dataSourceConfig.basicAuth && (\n          <>\n            <h6>Basic Auth Details</h6>\n            <div className=\"gf-form-group\">\n              <BasicAuthSettings {...props} />\n            </div>\n          </>\n        )}\n\n        {azureAuthSettings?.azureAuthSupported && azureAuthEnabled && azureAuthSettings.azureSettingsUI && (\n          <azureAuthSettings.azureSettingsUI dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.jsonData.sigV4Auth && sigV4AuthToggleEnabled && renderSigV4Editor}\n        {(dataSourceConfig.jsonData.tlsAuth || dataSourceConfig.jsonData.tlsAuthWithCACert) && (\n          <TLSAuthSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.access === 'proxy' && (\n          <CustomHeadersSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n      </>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}