{"ast":null,"code":"import React, { useState } from 'react';\nimport { getDataSourceRef } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { AnnotationSettingsEdit, AnnotationSettingsList, newAnnotationName } from '../AnnotationSettings';\nimport { DashboardSettingsHeader } from './DashboardSettingsHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AnnotationsSettings = ({\n  dashboard\n}) => {\n  const [editIdx, setEditIdx] = useState(null);\n\n  const onGoBack = () => {\n    setEditIdx(null);\n  };\n\n  const onNew = () => {\n    const newAnnotation = {\n      name: newAnnotationName,\n      enable: true,\n      datasource: getDataSourceRef(getDataSourceSrv().getInstanceSettings(null)),\n      iconColor: 'red'\n    };\n    dashboard.annotations.list = [...dashboard.annotations.list, Object.assign({}, newAnnotation)];\n    setEditIdx(dashboard.annotations.list.length - 1);\n  };\n\n  const onEdit = idx => {\n    setEditIdx(idx);\n  };\n\n  const isEditing = editIdx !== null;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DashboardSettingsHeader, {\n      title: \"Annotations\",\n      onGoBack: onGoBack,\n      isEditing: isEditing\n    }), !isEditing && /*#__PURE__*/_jsx(AnnotationSettingsList, {\n      dashboard: dashboard,\n      onNew: onNew,\n      onEdit: onEdit\n    }), isEditing && /*#__PURE__*/_jsx(AnnotationSettingsEdit, {\n      dashboard: dashboard,\n      editIdx: editIdx\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","getDataSourceRef","getDataSourceSrv","AnnotationSettingsEdit","AnnotationSettingsList","newAnnotationName","DashboardSettingsHeader","AnnotationsSettings","dashboard","editIdx","setEditIdx","onGoBack","onNew","newAnnotation","name","enable","datasource","getInstanceSettings","iconColor","annotations","list","length","onEdit","idx","isEditing"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardSettings/AnnotationsSettings.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { AnnotationQuery, getDataSourceRef } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { AnnotationSettingsEdit, AnnotationSettingsList, newAnnotationName } from '../AnnotationSettings';\n\nimport { DashboardSettingsHeader } from './DashboardSettingsHeader';\n\ninterface Props {\n  dashboard: DashboardModel;\n}\n\nexport const AnnotationsSettings: React.FC<Props> = ({ dashboard }) => {\n  const [editIdx, setEditIdx] = useState<number | null>(null);\n\n  const onGoBack = () => {\n    setEditIdx(null);\n  };\n\n  const onNew = () => {\n    const newAnnotation: AnnotationQuery = {\n      name: newAnnotationName,\n      enable: true,\n      datasource: getDataSourceRef(getDataSourceSrv().getInstanceSettings(null)!),\n      iconColor: 'red',\n    };\n\n    dashboard.annotations.list = [...dashboard.annotations.list, { ...newAnnotation }];\n    setEditIdx(dashboard.annotations.list.length - 1);\n  };\n\n  const onEdit = (idx: number) => {\n    setEditIdx(idx);\n  };\n\n  const isEditing = editIdx !== null;\n\n  return (\n    <>\n      <DashboardSettingsHeader title=\"Annotations\" onGoBack={onGoBack} isEditing={isEditing} />\n      {!isEditing && <AnnotationSettingsList dashboard={dashboard} onNew={onNew} onEdit={onEdit} />}\n      {isEditing && <AnnotationSettingsEdit dashboard={dashboard} editIdx={editIdx!} />}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAA0BC,gBAA1B,QAAkD,eAAlD;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAGA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,iBAAzD,QAAkF,uBAAlF;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;;;;AAMA,OAAO,MAAMC,mBAAoC,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAmB;EACrE,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAgB,IAAhB,CAAtC;;EAEA,MAAMW,QAAQ,GAAG,MAAM;IACrBD,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,MAAME,KAAK,GAAG,MAAM;IAClB,MAAMC,aAA8B,GAAG;MACrCC,IAAI,EAAET,iBAD+B;MAErCU,MAAM,EAAE,IAF6B;MAGrCC,UAAU,EAAEf,gBAAgB,CAACC,gBAAgB,GAAGe,mBAAnB,CAAuC,IAAvC,CAAD,CAHS;MAIrCC,SAAS,EAAE;IAJ0B,CAAvC;IAOAV,SAAS,CAACW,WAAV,CAAsBC,IAAtB,GAA6B,CAAC,GAAGZ,SAAS,CAACW,WAAV,CAAsBC,IAA1B,oBAAqCP,aAArC,EAA7B;IACAH,UAAU,CAACF,SAAS,CAACW,WAAV,CAAsBC,IAAtB,CAA2BC,MAA3B,GAAoC,CAArC,CAAV;EACD,CAVD;;EAYA,MAAMC,MAAM,GAAIC,GAAD,IAAiB;IAC9Bb,UAAU,CAACa,GAAD,CAAV;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAGf,OAAO,KAAK,IAA9B;EAEA,oBACE;IAAA,wBACE,KAAC,uBAAD;MAAyB,KAAK,EAAC,aAA/B;MAA6C,QAAQ,EAAEE,QAAvD;MAAiE,SAAS,EAAEa;IAA5E,EADF,EAEG,CAACA,SAAD,iBAAc,KAAC,sBAAD;MAAwB,SAAS,EAAEhB,SAAnC;MAA8C,KAAK,EAAEI,KAArD;MAA4D,MAAM,EAAEU;IAApE,EAFjB,EAGGE,SAAS,iBAAI,KAAC,sBAAD;MAAwB,SAAS,EAAEhB,SAAnC;MAA8C,OAAO,EAAEC;IAAvD,EAHhB;EAAA,EADF;AAOD,CAhCM"},"metadata":{},"sourceType":"module"}