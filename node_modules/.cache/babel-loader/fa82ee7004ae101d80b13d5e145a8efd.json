{"ast":null,"code":"const _excluded = [\"value\", \"isOpen\", \"invalid\"],\n      _excluded2 = [\"value\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { flatten } from 'lodash';\nimport React, { useCallback, useMemo } from 'react';\nimport { toOption } from '@grafana/data';\nimport { Button, HorizontalGroup, Select, VerticalGroup } from '@grafana/ui';\nimport { SELECT_WIDTH } from '../constants';\nimport { labelsToGroupedOptions, stringArrayToFilters } from '../functions';\nimport { QueryEditorRow } from '.';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst operators = ['=', '!=', '=~', '!=~'];\nconst FilterButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(Button, Object.assign({}, rest, {\n    ref: ref,\n    variant: \"secondary\",\n    icon: \"plus\",\n    \"aria-label\": \"Add filter\"\n  }));\n});\nFilterButton.displayName = 'FilterButton';\nconst OperatorButton = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    value\n  } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return /*#__PURE__*/_jsx(Button, Object.assign({}, rest, {\n    ref: ref,\n    variant: \"secondary\",\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: \"query-segment-operator\",\n      children: value === null || value === void 0 ? void 0 : value.label\n    })\n  }));\n});\nOperatorButton.displayName = 'OperatorButton';\nexport const LabelFilter = ({\n  labels = {},\n  filters: filterArray,\n  onChange,\n  variableOptionGroup\n}) => {\n  var _AddFilter;\n\n  const filters = useMemo(() => stringArrayToFilters(filterArray), [filterArray]);\n  const options = useMemo(() => [variableOptionGroup, ...labelsToGroupedOptions(Object.keys(labels))], [labels, variableOptionGroup]);\n  const filtersToStringArray = useCallback(filters => {\n    const strArr = flatten(filters.map(({\n      key,\n      operator,\n      value,\n      condition\n    }) => [key, operator, value, condition]));\n    return strArr.slice(0, strArr.length - 1);\n  }, []);\n\n  const AddFilter = () => {\n    return /*#__PURE__*/_jsx(Select, {\n      allowCustomValue: true,\n      options: [variableOptionGroup, ...labelsToGroupedOptions(Object.keys(labels))],\n      onChange: ({\n        value: key = ''\n      }) => onChange(filtersToStringArray([...filters, {\n        key,\n        operator: '=',\n        condition: 'AND',\n        value: ''\n      }])),\n      menuPlacement: \"bottom\",\n      renderControl: FilterButton\n    });\n  };\n\n  return /*#__PURE__*/_jsx(QueryEditorRow, {\n    label: \"Filter\",\n    tooltip: 'To reduce the amount of data charted, apply a filter. A filter has three components: a label, a comparison, and a value. The comparison can be an equality, inequality, or regular expression.',\n    noFillEnd: filters.length > 1,\n    children: /*#__PURE__*/_jsxs(VerticalGroup, {\n      spacing: \"xs\",\n      width: \"auto\",\n      children: [filters.map(({\n        key,\n        operator,\n        value,\n        condition\n      }, index) => {\n        // Add the current key and value as options if they are manually entered\n        const keyPresent = options.some(op => {\n          if (op.options) {\n            return options.some(opp => opp.label === key);\n          }\n\n          return op.label === key;\n        });\n\n        if (!keyPresent) {\n          options.push({\n            label: key,\n            value: key\n          });\n        }\n\n        const valueOptions = labels.hasOwnProperty(key) ? [variableOptionGroup, ...labels[key].map(toOption)] : [variableOptionGroup];\n        const valuePresent = valueOptions.some(op => {\n          return op.label === value;\n        });\n\n        if (!valuePresent) {\n          valueOptions.push({\n            label: value,\n            value\n          });\n        }\n\n        return /*#__PURE__*/_jsxs(HorizontalGroup, {\n          spacing: \"xs\",\n          width: \"auto\",\n          children: [/*#__PURE__*/_jsx(Select, {\n            \"aria-label\": \"Filter label key\",\n            width: SELECT_WIDTH,\n            allowCustomValue: true,\n            formatCreateLabel: v => `Use label key: ${v}`,\n            value: key,\n            options: options,\n            onChange: ({\n              value: key = ''\n            }) => {\n              onChange(filtersToStringArray(filters.map((f, i) => i === index ? {\n                key,\n                operator,\n                condition,\n                value: ''\n              } : f)));\n            }\n          }), /*#__PURE__*/_jsx(Select, {\n            value: operator,\n            options: operators.map(toOption),\n            onChange: ({\n              value: operator = '='\n            }) => onChange(filtersToStringArray(filters.map((f, i) => i === index ? Object.assign({}, f, {\n              operator\n            }) : f))),\n            menuPlacement: \"bottom\",\n            renderControl: OperatorButton\n          }), /*#__PURE__*/_jsx(Select, {\n            \"aria-label\": \"Filter label value\",\n            width: SELECT_WIDTH,\n            formatCreateLabel: v => `Use label value: ${v}`,\n            allowCustomValue: true,\n            value: value,\n            placeholder: \"add filter value\",\n            options: valueOptions,\n            onChange: ({\n              value = ''\n            }) => onChange(filtersToStringArray(filters.map((f, i) => i === index ? Object.assign({}, f, {\n              value\n            }) : f)))\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            size: \"md\",\n            icon: \"trash-alt\",\n            \"aria-label\": \"Remove\",\n            onClick: () => onChange(filtersToStringArray(filters.filter((_, i) => i !== index)))\n          }), index + 1 === filters.length && Object.values(filters).every(({\n            value\n          }) => value) && (_AddFilter || (_AddFilter = /*#__PURE__*/_jsx(AddFilter, {})))]\n        }, index);\n      }), !filters.length && /*#__PURE__*/_jsx(AddFilter, {})]\n    })\n  });\n};","map":{"version":3,"names":["flatten","React","useCallback","useMemo","toOption","Button","HorizontalGroup","Select","VerticalGroup","SELECT_WIDTH","labelsToGroupedOptions","stringArrayToFilters","QueryEditorRow","operators","FilterButton","forwardRef","ref","rest","displayName","OperatorButton","value","label","LabelFilter","labels","filters","filterArray","onChange","variableOptionGroup","options","Object","keys","filtersToStringArray","strArr","map","key","operator","condition","slice","length","AddFilter","index","keyPresent","some","op","opp","push","valueOptions","hasOwnProperty","valuePresent","v","f","i","filter","_","values","every"],"sources":["/home/soula/grafana/public/app/plugins/datasource/cloud-monitoring/components/LabelFilter.tsx"],"sourcesContent":["import { flatten } from 'lodash';\nimport React, { FunctionComponent, useCallback, useMemo } from 'react';\n\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { Button, HorizontalGroup, Select, VerticalGroup } from '@grafana/ui';\nimport { CustomControlProps } from '@grafana/ui/src/components/Select/types';\n\nimport { SELECT_WIDTH } from '../constants';\nimport { labelsToGroupedOptions, stringArrayToFilters } from '../functions';\nimport { Filter } from '../types';\n\nimport { QueryEditorRow } from '.';\n\nexport interface Props {\n  labels: { [key: string]: string[] };\n  filters: string[];\n  onChange: (filters: string[]) => void;\n  variableOptionGroup: SelectableValue<string>;\n}\n\nconst operators = ['=', '!=', '=~', '!=~'];\n\nconst FilterButton = React.forwardRef<HTMLButtonElement, CustomControlProps<string>>(\n  ({ value, isOpen, invalid, ...rest }, ref) => {\n    return <Button {...rest} ref={ref} variant=\"secondary\" icon=\"plus\" aria-label=\"Add filter\"></Button>;\n  }\n);\nFilterButton.displayName = 'FilterButton';\n\nconst OperatorButton = React.forwardRef<HTMLButtonElement, CustomControlProps<string>>(({ value, ...rest }, ref) => {\n  return (\n    <Button {...rest} ref={ref} variant=\"secondary\">\n      <span className=\"query-segment-operator\">{value?.label}</span>\n    </Button>\n  );\n});\nOperatorButton.displayName = 'OperatorButton';\n\nexport const LabelFilter: FunctionComponent<Props> = ({\n  labels = {},\n  filters: filterArray,\n  onChange,\n  variableOptionGroup,\n}) => {\n  const filters = useMemo(() => stringArrayToFilters(filterArray), [filterArray]);\n  const options = useMemo(\n    () => [variableOptionGroup, ...labelsToGroupedOptions(Object.keys(labels))],\n    [labels, variableOptionGroup]\n  );\n\n  const filtersToStringArray = useCallback((filters: Filter[]) => {\n    const strArr = flatten(filters.map(({ key, operator, value, condition }) => [key, operator, value, condition!]));\n    return strArr.slice(0, strArr.length - 1);\n  }, []);\n\n  const AddFilter = () => {\n    return (\n      <Select\n        allowCustomValue\n        options={[variableOptionGroup, ...labelsToGroupedOptions(Object.keys(labels))]}\n        onChange={({ value: key = '' }) =>\n          onChange(filtersToStringArray([...filters, { key, operator: '=', condition: 'AND', value: '' }]))\n        }\n        menuPlacement=\"bottom\"\n        renderControl={FilterButton}\n      />\n    );\n  };\n\n  return (\n    <QueryEditorRow\n      label=\"Filter\"\n      tooltip={\n        'To reduce the amount of data charted, apply a filter. A filter has three components: a label, a comparison, and a value. The comparison can be an equality, inequality, or regular expression.'\n      }\n      noFillEnd={filters.length > 1}\n    >\n      <VerticalGroup spacing=\"xs\" width=\"auto\">\n        {filters.map(({ key, operator, value, condition }, index) => {\n          // Add the current key and value as options if they are manually entered\n          const keyPresent = options.some((op) => {\n            if (op.options) {\n              return options.some((opp) => opp.label === key);\n            }\n            return op.label === key;\n          });\n          if (!keyPresent) {\n            options.push({ label: key, value: key });\n          }\n\n          const valueOptions = labels.hasOwnProperty(key)\n            ? [variableOptionGroup, ...labels[key].map(toOption)]\n            : [variableOptionGroup];\n          const valuePresent = valueOptions.some((op) => {\n            return op.label === value;\n          });\n          if (!valuePresent) {\n            valueOptions.push({ label: value, value });\n          }\n\n          return (\n            <HorizontalGroup key={index} spacing=\"xs\" width=\"auto\">\n              <Select\n                aria-label=\"Filter label key\"\n                width={SELECT_WIDTH}\n                allowCustomValue\n                formatCreateLabel={(v) => `Use label key: ${v}`}\n                value={key}\n                options={options}\n                onChange={({ value: key = '' }) => {\n                  onChange(\n                    filtersToStringArray(\n                      filters.map((f, i) => (i === index ? { key, operator, condition, value: '' } : f))\n                    )\n                  );\n                }}\n              />\n              <Select\n                value={operator}\n                options={operators.map(toOption)}\n                onChange={({ value: operator = '=' }) =>\n                  onChange(filtersToStringArray(filters.map((f, i) => (i === index ? { ...f, operator } : f))))\n                }\n                menuPlacement=\"bottom\"\n                renderControl={OperatorButton}\n              />\n              <Select\n                aria-label=\"Filter label value\"\n                width={SELECT_WIDTH}\n                formatCreateLabel={(v) => `Use label value: ${v}`}\n                allowCustomValue\n                value={value}\n                placeholder=\"add filter value\"\n                options={valueOptions}\n                onChange={({ value = '' }) =>\n                  onChange(filtersToStringArray(filters.map((f, i) => (i === index ? { ...f, value } : f))))\n                }\n              />\n              <Button\n                variant=\"secondary\"\n                size=\"md\"\n                icon=\"trash-alt\"\n                aria-label=\"Remove\"\n                onClick={() => onChange(filtersToStringArray(filters.filter((_, i) => i !== index)))}\n              ></Button>\n              {index + 1 === filters.length && Object.values(filters).every(({ value }) => value) && <AddFilter />}\n            </HorizontalGroup>\n          );\n        })}\n        {!filters.length && <AddFilter />}\n      </VerticalGroup>\n    </QueryEditorRow>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}