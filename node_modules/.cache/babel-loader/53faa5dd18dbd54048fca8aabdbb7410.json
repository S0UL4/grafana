{"ast":null,"code":"// Load the Builtin matchers\nimport { Registry } from '../utils/Registry';\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport { getSimpleFieldMatchers } from './matchers/simpleFieldMatcher';\nimport { getEqualValueMatchers } from './matchers/valueMatchers/equalMatchers';\nimport { getNullValueMatchers } from './matchers/valueMatchers/nullMatchers';\nimport { getNumericValueMatchers } from './matchers/valueMatchers/numericMatchers';\nimport { getRangeValueMatchers } from './matchers/valueMatchers/rangeMatchers';\nimport { getRegexValueMatcher } from './matchers/valueMatchers/regexMatchers';\n/**\n * Registry that contains all of the built in field matchers.\n * @public\n */\n\nexport const fieldMatchers = new Registry(() => {\n  return [...getFieldPredicateMatchers(), // Predicates\n  ...getFieldTypeMatchers(), // by type\n  ...getFieldNameMatchers(), // by name\n  ...getSimpleFieldMatchers() // first\n  ];\n});\n/**\n * Registry that contains all of the built in frame matchers.\n * @public\n */\n\nexport const frameMatchers = new Registry(() => {\n  return [...getFramePredicateMatchers(), // Predicates\n  ...getFrameNameMatchers(), // by name\n  ...getRefIdMatchers() // by query refId\n  ];\n});\n/**\n * Registry that contains all of the built in value matchers.\n * @public\n */\n\nexport const valueMatchers = new Registry(() => {\n  return [...getNullValueMatchers(), ...getNumericValueMatchers(), ...getEqualValueMatchers(), ...getRangeValueMatchers(), ...getRegexValueMatcher()];\n});\n/**\n * Resolves a field matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\n\nexport function getFieldMatcher(config) {\n  const info = fieldMatchers.get(config.id);\n\n  if (!info) {\n    throw new Error('Unknown field matcher: ' + config.id);\n  }\n\n  return info.get(config.options);\n}\n/**\n * Resolves a frame matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\n\nexport function getFrameMatchers(config) {\n  const info = frameMatchers.get(config.id);\n\n  if (!info) {\n    throw new Error('Unknown frame matcher: ' + config.id);\n  }\n\n  return info.get(config.options);\n}\n/**\n * Resolves a value matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\n\nexport function getValueMatcher(config) {\n  const info = valueMatchers.get(config.id);\n\n  if (!info) {\n    throw new Error('Unknown value matcher: ' + config.id);\n  }\n\n  return info.get(config.options);\n}","map":{"version":3,"names":["Registry","getFieldTypeMatchers","getFieldNameMatchers","getFrameNameMatchers","getFieldPredicateMatchers","getFramePredicateMatchers","getRefIdMatchers","getSimpleFieldMatchers","getEqualValueMatchers","getNullValueMatchers","getNumericValueMatchers","getRangeValueMatchers","getRegexValueMatcher","fieldMatchers","frameMatchers","valueMatchers","getFieldMatcher","config","info","get","id","Error","options","getFrameMatchers","getValueMatcher"],"sources":["/home/soula/grafana/packages/grafana-data/src/transformations/matchers.ts"],"sourcesContent":["// Load the Builtin matchers\nimport {\n  FieldMatcherInfo,\n  MatcherConfig,\n  FrameMatcherInfo,\n  FieldMatcher,\n  FrameMatcher,\n  ValueMatcherInfo,\n  ValueMatcher,\n} from '../types/transformations';\nimport { Registry } from '../utils/Registry';\n\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport { getSimpleFieldMatchers } from './matchers/simpleFieldMatcher';\nimport { getEqualValueMatchers } from './matchers/valueMatchers/equalMatchers';\nimport { getNullValueMatchers } from './matchers/valueMatchers/nullMatchers';\nimport { getNumericValueMatchers } from './matchers/valueMatchers/numericMatchers';\nimport { getRangeValueMatchers } from './matchers/valueMatchers/rangeMatchers';\nimport { getRegexValueMatcher } from './matchers/valueMatchers/regexMatchers';\n\n/**\n * Registry that contains all of the built in field matchers.\n * @public\n */\nexport const fieldMatchers = new Registry<FieldMatcherInfo>(() => {\n  return [\n    ...getFieldPredicateMatchers(), // Predicates\n    ...getFieldTypeMatchers(), // by type\n    ...getFieldNameMatchers(), // by name\n    ...getSimpleFieldMatchers(), // first\n  ];\n});\n\n/**\n * Registry that contains all of the built in frame matchers.\n * @public\n */\nexport const frameMatchers = new Registry<FrameMatcherInfo>(() => {\n  return [\n    ...getFramePredicateMatchers(), // Predicates\n    ...getFrameNameMatchers(), // by name\n    ...getRefIdMatchers(), // by query refId\n  ];\n});\n\n/**\n * Registry that contains all of the built in value matchers.\n * @public\n */\nexport const valueMatchers = new Registry<ValueMatcherInfo>(() => {\n  return [\n    ...getNullValueMatchers(),\n    ...getNumericValueMatchers(),\n    ...getEqualValueMatchers(),\n    ...getRangeValueMatchers(),\n    ...getRegexValueMatcher(),\n  ];\n});\n\n/**\n * Resolves a field matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFieldMatcher(config: MatcherConfig): FieldMatcher {\n  const info = fieldMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown field matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a frame matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFrameMatchers(config: MatcherConfig): FrameMatcher {\n  const info = frameMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown frame matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a value matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getValueMatcher(config: MatcherConfig): ValueMatcher {\n  const info = valueMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown value matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n"],"mappings":"AAAA;AAUA,SAASA,QAAT,QAAyB,mBAAzB;AAEA,SAASC,oBAAT,QAAqC,6BAArC;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,wBAA3D;AACA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,uBAArE;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,sBAAT,QAAuC,+BAAvC;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,uBAAT,QAAwC,0CAAxC;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,oBAAT,QAAqC,wCAArC;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG,IAAIb,QAAJ,CAA+B,MAAM;EAChE,OAAO,CACL,GAAGI,yBAAyB,EADvB,EAC2B;EAChC,GAAGH,oBAAoB,EAFlB,EAEsB;EAC3B,GAAGC,oBAAoB,EAHlB,EAGsB;EAC3B,GAAGK,sBAAsB,EAJpB,CAIwB;EAJxB,CAAP;AAMD,CAP4B,CAAtB;AASP;AACA;AACA;AACA;;AACA,OAAO,MAAMO,aAAa,GAAG,IAAId,QAAJ,CAA+B,MAAM;EAChE,OAAO,CACL,GAAGK,yBAAyB,EADvB,EAC2B;EAChC,GAAGF,oBAAoB,EAFlB,EAEsB;EAC3B,GAAGG,gBAAgB,EAHd,CAGkB;EAHlB,CAAP;AAKD,CAN4B,CAAtB;AAQP;AACA;AACA;AACA;;AACA,OAAO,MAAMS,aAAa,GAAG,IAAIf,QAAJ,CAA+B,MAAM;EAChE,OAAO,CACL,GAAGS,oBAAoB,EADlB,EAEL,GAAGC,uBAAuB,EAFrB,EAGL,GAAGF,qBAAqB,EAHnB,EAIL,GAAGG,qBAAqB,EAJnB,EAKL,GAAGC,oBAAoB,EALlB,CAAP;AAOD,CAR4B,CAAtB;AAUP;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,eAAT,CAAyBC,MAAzB,EAA8D;EACnE,MAAMC,IAAI,GAAGL,aAAa,CAACM,GAAd,CAAkBF,MAAM,CAACG,EAAzB,CAAb;;EACA,IAAI,CAACF,IAAL,EAAW;IACT,MAAM,IAAIG,KAAJ,CAAU,4BAA4BJ,MAAM,CAACG,EAA7C,CAAN;EACD;;EACD,OAAOF,IAAI,CAACC,GAAL,CAASF,MAAM,CAACK,OAAhB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BN,MAA1B,EAA+D;EACpE,MAAMC,IAAI,GAAGJ,aAAa,CAACK,GAAd,CAAkBF,MAAM,CAACG,EAAzB,CAAb;;EACA,IAAI,CAACF,IAAL,EAAW;IACT,MAAM,IAAIG,KAAJ,CAAU,4BAA4BJ,MAAM,CAACG,EAA7C,CAAN;EACD;;EACD,OAAOF,IAAI,CAACC,GAAL,CAASF,MAAM,CAACK,OAAhB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,eAAT,CAAyBP,MAAzB,EAA8D;EACnE,MAAMC,IAAI,GAAGH,aAAa,CAACI,GAAd,CAAkBF,MAAM,CAACG,EAAzB,CAAb;;EACA,IAAI,CAACF,IAAL,EAAW;IACT,MAAM,IAAIG,KAAJ,CAAU,4BAA4BJ,MAAM,CAACG,EAA7C,CAAN;EACD;;EACD,OAAOF,IAAI,CAACC,GAAL,CAASF,MAAM,CAACK,OAAhB,CAAP;AACD"},"metadata":{},"sourceType":"module"}