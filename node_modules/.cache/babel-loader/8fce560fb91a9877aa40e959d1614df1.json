{"ast":null,"code":"// Code based on Material UI\n// The MIT License (MIT)\n// Copyright (c) 2014 Call-Em-All\n\n/** @internal */\n\n/** @internal */\n\n/**\n * @beta\n * The different signatures imply different meaning for their arguments that can't be expressed structurally.\n * We express the difference with variable names.\n * tslint:disable:unified-signatures */\n\n/** @internal */\nexport function createSpacing(options = {}) {\n  const {\n    gridSize = 8\n  } = options;\n\n  const transform = value => {\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof value !== 'number') {\n        console.error(`Expected spacing argument to be a number or a string, got ${value}.`);\n      }\n    }\n\n    return value * gridSize;\n  };\n\n  const spacing = (...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(`Too many arguments provided, expected between 0 and 4, got ${args.length}`);\n      }\n    }\n\n    if (args.length === 0) {\n      args[0] = 1;\n    }\n\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n\n  spacing.gridSize = gridSize;\n  return spacing;\n}","map":{"version":3,"names":["createSpacing","options","gridSize","transform","value","process","env","NODE_ENV","console","error","spacing","args","length","map","argument","output","join"],"sources":["/home/soula/grafana/packages/grafana-data/src/themes/createSpacing.ts"],"sourcesContent":["// Code based on Material UI\n// The MIT License (MIT)\n// Copyright (c) 2014 Call-Em-All\n\n/** @internal */\nexport type ThemeSpacingOptions = {\n  gridSize?: number;\n};\n\n/** @internal */\nexport type ThemeSpacingArgument = number | string;\n\n/**\n * @beta\n * The different signatures imply different meaning for their arguments that can't be expressed structurally.\n * We express the difference with variable names.\n * tslint:disable:unified-signatures */\nexport interface ThemeSpacing {\n  (): string;\n  (value: ThemeSpacingArgument): string;\n  (topBottom: ThemeSpacingArgument, rightLeft: ThemeSpacingArgument): string;\n  (top: ThemeSpacingArgument, rightLeft: ThemeSpacingArgument, bottom: ThemeSpacingArgument): string;\n  (\n    top: ThemeSpacingArgument,\n    right: ThemeSpacingArgument,\n    bottom: ThemeSpacingArgument,\n    left: ThemeSpacingArgument\n  ): string;\n  gridSize: number;\n}\n\n/** @internal */\nexport function createSpacing(options: ThemeSpacingOptions = {}): ThemeSpacing {\n  const { gridSize = 8 } = options;\n\n  const transform = (value: ThemeSpacingArgument) => {\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof value !== 'number') {\n        console.error(`Expected spacing argument to be a number or a string, got ${value}.`);\n      }\n    }\n    return value * gridSize;\n  };\n\n  const spacing = (...args: Array<number | string>): string => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(`Too many arguments provided, expected between 0 and 4, got ${args.length}`);\n      }\n    }\n\n    if (args.length === 0) {\n      args[0] = 1;\n    }\n\n    return args\n      .map((argument) => {\n        const output = transform(argument);\n        return typeof output === 'number' ? `${output}px` : output;\n      })\n      .join(' ');\n  };\n\n  spacing.gridSize = gridSize;\n\n  return spacing;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAKA;;AAGA;AACA;AACA;AACA;AACA;;AAeA;AACA,OAAO,SAASA,aAAT,CAAuBC,OAA4B,GAAG,EAAtD,EAAwE;EAC7E,MAAM;IAAEC,QAAQ,GAAG;EAAb,IAAmBD,OAAzB;;EAEA,MAAME,SAAS,GAAIC,KAAD,IAAiC;IACjD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOA,KAAP;IACD;;IAED,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;QAC7BI,OAAO,CAACC,KAAR,CAAe,6DAA4DL,KAAM,GAAjF;MACD;IACF;;IACD,OAAOA,KAAK,GAAGF,QAAf;EACD,CAXD;;EAaA,MAAMQ,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAA6C;IAC3D,IAAIN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAI,EAAEI,IAAI,CAACC,MAAL,IAAe,CAAjB,CAAJ,EAAyB;QACvBJ,OAAO,CAACC,KAAR,CAAe,8DAA6DE,IAAI,CAACC,MAAO,EAAxF;MACD;IACF;;IAED,IAAID,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;MACrBD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV;IACD;;IAED,OAAOA,IAAI,CACRE,GADI,CACCC,QAAD,IAAc;MACjB,MAAMC,MAAM,GAAGZ,SAAS,CAACW,QAAD,CAAxB;MACA,OAAO,OAAOC,MAAP,KAAkB,QAAlB,GAA8B,GAAEA,MAAO,IAAvC,GAA6CA,MAApD;IACD,CAJI,EAKJC,IALI,CAKC,GALD,CAAP;EAMD,CAjBD;;EAmBAN,OAAO,CAACR,QAAR,GAAmBA,QAAnB;EAEA,OAAOQ,OAAP;AACD"},"metadata":{},"sourceType":"module"}