{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { assign, each, filter, forEach, get, includes, isString, last, map, toString, isFinite } from 'lodash';\nimport { isVersionGtOrEq } from 'app/core/utils/version';\nconst index = {};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n  index[funcDef.name] = funcDef;\n\n  if (funcDef.shortName) {\n    index[funcDef.shortName] = funcDef;\n  }\n}\n\nconst optionalSeriesRefArgs = [{\n  name: 'other',\n  type: 'value_or_series',\n  optional: true,\n  multiple: true\n}];\naddFuncDef({\n  name: 'scaleToSeconds',\n  category: 'Transform',\n  params: [{\n    name: 'seconds',\n    type: 'int'\n  }],\n  defaultParams: [1]\n});\naddFuncDef({\n  name: 'perSecond',\n  category: 'Transform',\n  params: [{\n    name: 'max value',\n    type: 'int',\n    optional: true\n  }],\n  defaultParams: []\n});\naddFuncDef({\n  name: 'holtWintersForecast',\n  category: 'Calculate'\n});\naddFuncDef({\n  name: 'holtWintersConfidenceBands',\n  category: 'Calculate',\n  params: [{\n    name: 'delta',\n    type: 'int'\n  }],\n  defaultParams: [3]\n});\naddFuncDef({\n  name: 'holtWintersAberration',\n  category: 'Calculate',\n  params: [{\n    name: 'delta',\n    type: 'int'\n  }],\n  defaultParams: [3]\n});\naddFuncDef({\n  name: 'nPercentile',\n  category: 'Calculate',\n  params: [{\n    name: 'Nth percentile',\n    type: 'int'\n  }],\n  defaultParams: [95]\n});\naddFuncDef({\n  name: 'diffSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'stddevSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'divideSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'multiplySeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'asPercent',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'group',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A', '#B'],\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'sumSeries',\n  shortName: 'sum',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['']\n});\naddFuncDef({\n  name: 'averageSeries',\n  shortName: 'avg',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['']\n});\naddFuncDef({\n  name: 'rangeOfSeries',\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'percentileOfSeries',\n  category: 'Combine',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }, {\n    name: 'interpolate',\n    type: 'boolean',\n    options: ['true', 'false']\n  }],\n  defaultParams: [95, 'false']\n});\naddFuncDef({\n  name: 'sumSeriesWithWildcards',\n  category: 'Combine',\n  params: [{\n    name: 'node',\n    type: 'int',\n    multiple: true\n  }],\n  defaultParams: [3]\n});\naddFuncDef({\n  name: 'maxSeries',\n  shortName: 'max',\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'minSeries',\n  shortName: 'min',\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'averageSeriesWithWildcards',\n  category: 'Combine',\n  params: [{\n    name: 'node',\n    type: 'int',\n    multiple: true\n  }],\n  defaultParams: [3]\n});\naddFuncDef({\n  name: 'alias',\n  category: 'Alias',\n  params: [{\n    name: 'alias',\n    type: 'string'\n  }],\n  defaultParams: ['alias']\n});\naddFuncDef({\n  name: 'aliasSub',\n  category: 'Alias',\n  params: [{\n    name: 'search',\n    type: 'string'\n  }, {\n    name: 'replace',\n    type: 'string'\n  }],\n  defaultParams: ['', '\\\\1']\n});\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [{\n    name: 'function',\n    type: 'string',\n    options: ['sum', 'average', 'min', 'max']\n  }],\n  defaultParams: ['max']\n});\naddFuncDef({\n  name: 'cumulative',\n  category: 'Special',\n  params: [],\n  defaultParams: []\n});\naddFuncDef({\n  name: 'groupByNode',\n  category: 'Combine',\n  params: [{\n    name: 'node',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12]\n  }, {\n    name: 'function',\n    type: 'string',\n    options: ['sum', 'avg', 'maxSeries']\n  }],\n  defaultParams: [3, 'sum']\n});\naddFuncDef({\n  name: 'aliasByNode',\n  category: 'Alias',\n  params: [{\n    name: 'node',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    multiple: true\n  }],\n  defaultParams: [3]\n});\naddFuncDef({\n  name: 'substr',\n  category: 'Special',\n  params: [{\n    name: 'start',\n    type: 'int',\n    options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12]\n  }, {\n    name: 'stop',\n    type: 'int',\n    options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12]\n  }],\n  defaultParams: [0, 0]\n});\naddFuncDef({\n  name: 'sortByName',\n  category: 'Sorting',\n  params: [{\n    name: 'natural',\n    type: 'boolean',\n    options: ['true', 'false'],\n    optional: true\n  }],\n  defaultParams: ['false']\n});\naddFuncDef({\n  name: 'sortByMaxima',\n  category: 'Sorting'\n});\naddFuncDef({\n  name: 'sortByMinima',\n  category: 'Sorting'\n});\naddFuncDef({\n  name: 'sortByTotal',\n  category: 'Sorting'\n});\naddFuncDef({\n  name: 'aliasByMetric',\n  category: 'Alias'\n});\naddFuncDef({\n  name: 'randomWalk',\n  fake: true,\n  category: 'Special',\n  params: [{\n    name: 'name',\n    type: 'string'\n  }],\n  defaultParams: ['randomWalk']\n});\naddFuncDef({\n  name: 'countSeries',\n  category: 'Combine'\n});\naddFuncDef({\n  name: 'constantLine',\n  category: 'Special',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }],\n  defaultParams: [10]\n});\naddFuncDef({\n  name: 'cactiStyle',\n  category: 'Special'\n});\naddFuncDef({\n  name: 'keepLastValue',\n  category: 'Transform',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [100]\n});\naddFuncDef({\n  name: 'changed',\n  category: 'Special',\n  params: [],\n  defaultParams: []\n});\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{\n    name: 'factor',\n    type: 'int'\n  }],\n  defaultParams: [1]\n});\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{\n    name: 'amount',\n    type: 'int'\n  }],\n  defaultParams: [10]\n});\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{\n    name: 'amount',\n    type: 'int'\n  }],\n  defaultParams: [0]\n});\naddFuncDef({\n  name: 'integral',\n  category: 'Transform'\n});\naddFuncDef({\n  name: 'derivative',\n  category: 'Transform'\n});\naddFuncDef({\n  name: 'nonNegativeDerivative',\n  category: 'Transform',\n  params: [{\n    name: 'max value or 0',\n    type: 'int',\n    optional: true\n  }],\n  defaultParams: ['']\n});\naddFuncDef({\n  name: 'timeShift',\n  category: 'Transform',\n  params: [{\n    name: 'amount',\n    type: 'select',\n    options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d']\n  }],\n  defaultParams: ['1d']\n});\naddFuncDef({\n  name: 'timeStack',\n  category: 'Transform',\n  params: [{\n    name: 'timeShiftUnit',\n    type: 'select',\n    options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d']\n  }, {\n    name: 'timeShiftStart',\n    type: 'int'\n  }, {\n    name: 'timeShiftEnd',\n    type: 'int'\n  }],\n  defaultParams: ['1d', 0, 7]\n});\naddFuncDef({\n  name: 'summarize',\n  category: 'Transform',\n  params: [{\n    name: 'interval',\n    type: 'string'\n  }, {\n    name: 'func',\n    type: 'select',\n    options: ['sum', 'avg', 'min', 'max', 'last']\n  }, {\n    name: 'alignToFrom',\n    type: 'boolean',\n    optional: true,\n    options: ['false', 'true']\n  }],\n  defaultParams: ['1h', 'sum', 'false']\n});\naddFuncDef({\n  name: 'smartSummarize',\n  category: 'Transform',\n  params: [{\n    name: 'interval',\n    type: 'string'\n  }, {\n    name: 'func',\n    type: 'select',\n    options: ['sum', 'avg', 'min', 'max', 'last']\n  }],\n  defaultParams: ['1h', 'sum']\n});\naddFuncDef({\n  name: 'absolute',\n  category: 'Transform'\n});\naddFuncDef({\n  name: 'hitcount',\n  category: 'Transform',\n  params: [{\n    name: 'interval',\n    type: 'string'\n  }],\n  defaultParams: ['10s']\n});\naddFuncDef({\n  name: 'log',\n  category: 'Transform',\n  params: [{\n    name: 'base',\n    type: 'int'\n  }],\n  defaultParams: ['10']\n});\naddFuncDef({\n  name: 'averageAbove',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [25]\n});\naddFuncDef({\n  name: 'averageBelow',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [25]\n});\naddFuncDef({\n  name: 'currentAbove',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [25]\n});\naddFuncDef({\n  name: 'currentBelow',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [25]\n});\naddFuncDef({\n  name: 'maximumAbove',\n  category: 'Filter Series',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }],\n  defaultParams: [0]\n});\naddFuncDef({\n  name: 'maximumBelow',\n  category: 'Filter Series',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }],\n  defaultParams: [0]\n});\naddFuncDef({\n  name: 'minimumAbove',\n  category: 'Filter Series',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }],\n  defaultParams: [0]\n});\naddFuncDef({\n  name: 'minimumBelow',\n  category: 'Filter Series',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }],\n  defaultParams: [0]\n});\naddFuncDef({\n  name: 'limit',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'mostDeviant',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [10]\n});\naddFuncDef({\n  name: 'exclude',\n  category: 'Filter Series',\n  params: [{\n    name: 'exclude',\n    type: 'string'\n  }],\n  defaultParams: ['exclude']\n});\naddFuncDef({\n  name: 'highestCurrent',\n  category: 'Filter Series',\n  params: [{\n    name: 'count',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'highestMax',\n  category: 'Filter Series',\n  params: [{\n    name: 'count',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'lowestCurrent',\n  category: 'Filter Series',\n  params: [{\n    name: 'count',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: [10]\n});\naddFuncDef({\n  name: 'movingMedian',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: ['5']\n});\naddFuncDef({\n  name: 'stdev',\n  category: 'Calculate',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }, {\n    name: 'tolerance',\n    type: 'int'\n  }],\n  defaultParams: [5, 0.1]\n});\naddFuncDef({\n  name: 'highestAverage',\n  category: 'Filter Series',\n  params: [{\n    name: 'count',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'lowestAverage',\n  category: 'Filter Series',\n  params: [{\n    name: 'count',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'removeAbovePercentile',\n  category: 'Filter Data',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Filter Data',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'removeBelowPercentile',\n  category: 'Filter Data',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Filter Data',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [5]\n});\naddFuncDef({\n  name: 'useSeriesAbove',\n  category: 'Filter Series',\n  params: [{\n    name: 'value',\n    type: 'int'\n  }, {\n    name: 'search',\n    type: 'string'\n  }, {\n    name: 'replace',\n    type: 'string'\n  }],\n  defaultParams: [0, 'search', 'replace']\n}); ////////////////////\n// Graphite 1.0.x //\n////////////////////\n\naddFuncDef({\n  name: 'aggregateLine',\n  category: 'Calculate',\n  params: [{\n    name: 'func',\n    type: 'select',\n    options: ['sum', 'avg', 'min', 'max', 'last']\n  }],\n  defaultParams: ['avg'],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'averageOutsidePercentile',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [95],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'delay',\n  category: 'Transform',\n  params: [{\n    name: 'steps',\n    type: 'int'\n  }],\n  defaultParams: [1],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: [10],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'fallbackSeries',\n  category: 'Special',\n  params: [{\n    name: 'fallback',\n    type: 'string'\n  }],\n  defaultParams: ['constantLine(0)'],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'grep',\n  category: 'Filter Series',\n  params: [{\n    name: 'grep',\n    type: 'string'\n  }],\n  defaultParams: ['grep'],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'groupByNodes',\n  category: 'Combine',\n  params: [{\n    name: 'function',\n    type: 'string',\n    options: ['sum', 'avg', 'maxSeries']\n  }, {\n    name: 'node',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    multiple: true\n  }],\n  defaultParams: ['sum', 3],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'integralByInterval',\n  category: 'Transform',\n  params: [{\n    name: 'intervalUnit',\n    type: 'select',\n    options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d']\n  }],\n  defaultParams: ['1d'],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'interpolate',\n  category: 'Transform',\n  params: [{\n    name: 'limit',\n    type: 'int',\n    optional: true\n  }],\n  defaultParams: [],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'invert',\n  category: 'Transform',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'isNonNull',\n  category: 'Combine',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'linearRegression',\n  category: 'Calculate',\n  params: [{\n    name: 'startSourceAt',\n    type: 'select',\n    options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    optional: true\n  }, {\n    name: 'endSourceAt',\n    type: 'select',\n    options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    optional: true\n  }],\n  defaultParams: [],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'mapSeries',\n  shortName: 'map',\n  params: [{\n    name: 'node',\n    type: 'int'\n  }],\n  defaultParams: [3],\n  category: 'Combine',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'movingMin',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: [10],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'movingMax',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: [10],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'movingSum',\n  category: 'Calculate',\n  params: [{\n    name: 'windowSize',\n    type: 'int_or_interval',\n    options: ['5', '7', '10', '5min', '10min', '30min', '1hour']\n  }],\n  defaultParams: [10],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'multiplySeriesWithWildcards',\n  category: 'Combine',\n  params: [{\n    name: 'position',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    multiple: true\n  }],\n  defaultParams: [2],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'offsetToZero',\n  category: 'Transform',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'pow',\n  category: 'Transform',\n  params: [{\n    name: 'factor',\n    type: 'int'\n  }],\n  defaultParams: [10],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'powSeries',\n  category: 'Transform',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'reduceSeries',\n  shortName: 'reduce',\n  params: [{\n    name: 'function',\n    type: 'string',\n    options: ['asPercent', 'diffSeries', 'divideSeries']\n  }, {\n    name: 'reduceNode',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n  }, {\n    name: 'reduceMatchers',\n    type: 'string',\n    multiple: true\n  }],\n  defaultParams: ['asPercent', 2, 'used_bytes'],\n  category: 'Combine',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'removeBetweenPercentile',\n  category: 'Filter Series',\n  params: [{\n    name: 'n',\n    type: 'int'\n  }],\n  defaultParams: [95],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'removeEmptySeries',\n  category: 'Filter Series',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'squareRoot',\n  category: 'Transform',\n  version: '1.0'\n});\naddFuncDef({\n  name: 'timeSlice',\n  category: 'Transform',\n  params: [{\n    name: 'startSliceAt',\n    type: 'select',\n    options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d']\n  }, {\n    name: 'endSliceAt',\n    type: 'select',\n    options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    optional: true\n  }],\n  defaultParams: ['-1h'],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'weightedAverage',\n  category: 'Combine',\n  params: [{\n    name: 'other',\n    type: 'value_or_series',\n    optional: true\n  }, {\n    name: 'node',\n    type: 'int',\n    options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12]\n  }],\n  defaultParams: ['#A', 4],\n  version: '1.0'\n});\naddFuncDef({\n  name: 'seriesByTag',\n  category: 'Special',\n  params: [{\n    name: 'tagExpression',\n    type: 'string',\n    multiple: true\n  }],\n  version: '1.1'\n});\naddFuncDef({\n  name: 'groupByTags',\n  category: 'Combine',\n  params: [{\n    name: 'function',\n    type: 'string',\n    options: ['sum', 'avg', 'maxSeries']\n  }, {\n    name: 'tag',\n    type: 'string',\n    multiple: true\n  }],\n  defaultParams: ['sum', 'tag'],\n  version: '1.1'\n});\naddFuncDef({\n  name: 'aliasByTags',\n  category: 'Alias',\n  params: [{\n    name: 'tag',\n    type: 'string',\n    multiple: true\n  }],\n  defaultParams: ['tag'],\n  version: '1.1'\n});\n\nfunction isVersionRelatedFunction(obj, graphiteVersion) {\n  return !obj.version || isVersionGtOrEq(graphiteVersion, obj.version);\n}\n\nexport class FuncInstance {\n  /**\n   * Hidden functions are not displayed in UI but available in text editor\n   * This is used for seriesByTagUsed function which when used switches\n   * the editor to tag-only mode. Defined tags are provided to seriesByTagUsed\n   * as parameters.\n   */\n  constructor(funcDef, options) {\n    _defineProperty(this, \"def\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"text\", void 0);\n\n    _defineProperty(this, \"hidden\", void 0);\n\n    this.def = funcDef;\n    this.params = [];\n\n    if (options && options.withDefaultParams && funcDef.defaultParams) {\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  render(metricExp, replaceVariables) {\n    const str = this.def.name + '(';\n    const parameters = map(this.params, (value, index) => {\n      let paramType;\n\n      if (index < this.def.params.length) {\n        paramType = this.def.params[index].type;\n      } else if (get(last(this.def.params), 'multiple')) {\n        paramType = get(last(this.def.params), 'type');\n      } // param types that should never be quoted\n\n\n      if (includes(['value_or_series', 'boolean', 'int', 'float', 'node', 'int_or_infinity'], paramType)) {\n        return value;\n      }\n\n      const valueInterpolated = isString(value) ? replaceVariables(value) : value; // param types that might be quoted\n      // To quote variables correctly we need to interpolate it to check if it contains a numeric or string value\n\n      if (includes(['int_or_interval', 'node_or_tag'], paramType) && isFinite(+valueInterpolated)) {\n        return toString(value);\n      }\n\n      return \"'\" + value + \"'\";\n    }); // don't send any blank parameters to graphite\n\n    while (parameters[parameters.length - 1] === '') {\n      parameters.pop();\n    }\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    if (this.def.params[index + 1] && this.def.params[index + 1].optional) {\n      return true;\n    }\n\n    if (index + 1 >= this.def.params.length && get(last(this.def.params), 'multiple')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), index + idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && (index >= this.def.params.length || this.def.params[index].optional)) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n\n}\n\nfunction createFuncInstance(funcDef, options, idx) {\n  if (isString(funcDef)) {\n    funcDef = getFuncDef(funcDef, idx);\n  }\n\n  return new FuncInstance(funcDef, options);\n}\n\nfunction getFuncDef(name, idx) {\n  if (!(idx || index)[name]) {\n    return {\n      name: name,\n      params: [{\n        name: '',\n        type: '',\n        multiple: true\n      }],\n      defaultParams: [''],\n      unknown: true\n    };\n  }\n\n  return (idx || index)[name];\n}\n\nfunction getFuncDefs(graphiteVersion, idx) {\n  const funcs = {};\n  forEach(idx || index, funcDef => {\n    if (isVersionRelatedFunction(funcDef, graphiteVersion)) {\n      funcs[funcDef.name] = assign({}, funcDef, {\n        params: filter(funcDef.params, param => {\n          return isVersionRelatedFunction(param, graphiteVersion);\n        })\n      });\n    }\n  });\n  return funcs;\n} // parse response from graphite /functions endpoint into internal format\n\n\nfunction parseFuncDefs(rawDefs) {\n  const funcDefs = {};\n  forEach(rawDefs || {}, (funcDef, funcName) => {\n    // skip graphite graph functions\n    if (funcDef.group === 'Graph') {\n      return;\n    }\n\n    let description = funcDef.description;\n\n    if (description) {\n      // tidy up some pydoc syntax that rst2html can't handle\n      description = description.replace(/:py:func:`(.+)( <[^>]*>)?`/g, '``$1``').replace(/.. seealso:: /g, 'See also: ').replace(/.. code-block *:: *none/g, '.. code-block::');\n    }\n\n    const func = {\n      name: funcDef.name,\n      description,\n      category: funcDef.group,\n      params: [],\n      defaultParams: [],\n      fake: false\n    }; // get rid of the first \"seriesList\" param\n\n    if (/^seriesLists?$/.test(get(funcDef, 'params[0].type', ''))) {\n      // handle functions that accept multiple seriesLists\n      // we leave the param in place but mark it optional, so users can add more series if they wish\n      if (funcDef.params[0].multiple) {\n        funcDef.params[0].required = false; // otherwise chop off the first param, it'll be handled separately\n      } else {\n        funcDef.params.shift();\n      } // tag function as fake\n\n    } else {\n      func.fake = true;\n    }\n\n    forEach(funcDef.params, rawParam => {\n      const param = {\n        name: rawParam.name,\n        type: 'string',\n        optional: !rawParam.required,\n        multiple: !!rawParam.multiple,\n        options: undefined\n      };\n\n      if (rawParam.default !== undefined) {\n        if (rawParam.default === Infinity) {\n          func.defaultParams.push('inf');\n        } else {\n          func.defaultParams.push(toString(rawParam.default));\n        }\n      } else if (rawParam.suggestions) {\n        func.defaultParams.push(toString(rawParam.suggestions[0]));\n      } else {\n        func.defaultParams.push('');\n      }\n\n      if (rawParam.type === 'boolean') {\n        param.type = 'boolean';\n        param.options = ['true', 'false'];\n      } else if (rawParam.type === 'integer') {\n        param.type = 'int';\n      } else if (rawParam.type === 'float') {\n        param.type = 'float';\n      } else if (rawParam.type === 'node') {\n        param.type = 'node';\n        param.options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'nodeOrTag') {\n        param.type = 'node_or_tag';\n        param.options = ['name', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'intOrInterval') {\n        param.type = 'int_or_interval';\n      } else if (rawParam.type === 'seriesList') {\n        param.type = 'value_or_series';\n      } else if (rawParam.type === 'intOrInf') {\n        param.type = 'int_or_infinity';\n      }\n\n      if (rawParam.options) {\n        param.options = map(rawParam.options, toString);\n      } else if (rawParam.suggestions) {\n        param.options = map(rawParam.suggestions, toString);\n      }\n\n      func.params.push(param);\n    });\n    funcDefs[funcName] = func;\n  });\n  return funcDefs;\n}\n\nexport default {\n  createFuncInstance: createFuncInstance,\n  getFuncDef: getFuncDef,\n  getFuncDefs: getFuncDefs,\n  parseFuncDefs: parseFuncDefs\n};","map":{"version":3,"names":["assign","each","filter","forEach","get","includes","isString","last","map","toString","isFinite","isVersionGtOrEq","index","addFuncDef","funcDef","params","defaultParams","name","shortName","optionalSeriesRefArgs","type","optional","multiple","category","options","fake","version","isVersionRelatedFunction","obj","graphiteVersion","FuncInstance","constructor","def","withDefaultParams","slice","updateText","render","metricExp","replaceVariables","str","parameters","value","paramType","length","valueInterpolated","pop","unshift","join","_hasMultipleParamsInString","strValue","indexOf","updateParam","split","partVal","idx","trim","splice","text","createFuncInstance","getFuncDef","unknown","getFuncDefs","funcs","param","parseFuncDefs","rawDefs","funcDefs","funcName","group","description","replace","func","test","required","shift","rawParam","undefined","default","Infinity","push","suggestions"],"sources":["/home/soula/grafana/public/app/plugins/datasource/graphite/gfunc.ts"],"sourcesContent":["import { assign, each, filter, forEach, get, includes, isString, last, map, toString, isFinite } from 'lodash';\n\nimport { InterpolateFunction } from '@grafana/data';\nimport { isVersionGtOrEq } from 'app/core/utils/version';\n\nexport type ParamDef = {\n  name: string;\n  type: string;\n  options?: Array<string | number>;\n  multiple?: boolean;\n  optional?: boolean;\n  version?: string;\n};\n\nexport interface FuncDef {\n  name: string;\n  params: ParamDef[];\n  defaultParams: Array<string | number>;\n  category?: string;\n  shortName?: any;\n  fake?: boolean;\n  version?: string;\n  description?: string;\n  /**\n   * True if the function was not found on the list of available function descriptions.\n   */\n  unknown?: boolean;\n}\n\nexport type FuncDefs = {\n  [functionName in string]: FuncDef;\n};\n\nconst index: FuncDefs = {};\n\nfunction addFuncDef(funcDef: Partial<FuncDef> & { name: string; category: string }) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  index[funcDef.name] = funcDef as FuncDef;\n  if (funcDef.shortName) {\n    index[funcDef.shortName] = funcDef as FuncDef;\n  }\n}\n\nconst optionalSeriesRefArgs = [{ name: 'other', type: 'value_or_series', optional: true, multiple: true }];\n\naddFuncDef({\n  name: 'scaleToSeconds',\n  category: 'Transform',\n  params: [{ name: 'seconds', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'perSecond',\n  category: 'Transform',\n  params: [{ name: 'max value', type: 'int', optional: true }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'holtWintersForecast',\n  category: 'Calculate',\n});\n\naddFuncDef({\n  name: 'holtWintersConfidenceBands',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'holtWintersAberration',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'nPercentile',\n  category: 'Calculate',\n  params: [{ name: 'Nth percentile', type: 'int' }],\n  defaultParams: [95],\n});\n\naddFuncDef({\n  name: 'diffSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'stddevSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'divideSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'multiplySeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'asPercent',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'group',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A', '#B'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  shortName: 'sum',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'averageSeries',\n  shortName: 'avg',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'rangeOfSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'percentileOfSeries',\n  category: 'Combine',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'interpolate', type: 'boolean', options: ['true', 'false'] },\n  ],\n  defaultParams: [95, 'false'],\n});\n\naddFuncDef({\n  name: 'sumSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'maxSeries',\n  shortName: 'max',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'minSeries',\n  shortName: 'min',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'averageSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'alias',\n  category: 'Alias',\n  params: [{ name: 'alias', type: 'string' }],\n  defaultParams: ['alias'],\n});\n\naddFuncDef({\n  name: 'aliasSub',\n  category: 'Alias',\n  params: [\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: ['', '\\\\1'],\n});\n\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'average', 'min', 'max'],\n    },\n  ],\n  defaultParams: ['max'],\n});\n\naddFuncDef({\n  name: 'cumulative',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'groupByNode',\n  category: 'Combine',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n  ],\n  defaultParams: [3, 'sum'],\n});\n\naddFuncDef({\n  name: 'aliasByNode',\n  category: 'Alias',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'substr',\n  category: 'Special',\n  params: [\n    {\n      name: 'start',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'stop',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: [0, 0],\n});\n\naddFuncDef({\n  name: 'sortByName',\n  category: 'Sorting',\n  params: [\n    {\n      name: 'natural',\n      type: 'boolean',\n      options: ['true', 'false'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['false'],\n});\n\naddFuncDef({\n  name: 'sortByMaxima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByMinima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByTotal',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'aliasByMetric',\n  category: 'Alias',\n});\n\naddFuncDef({\n  name: 'randomWalk',\n  fake: true,\n  category: 'Special',\n  params: [{ name: 'name', type: 'string' }],\n  defaultParams: ['randomWalk'],\n});\n\naddFuncDef({\n  name: 'countSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'constantLine',\n  category: 'Special',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'cactiStyle',\n  category: 'Special',\n});\n\naddFuncDef({\n  name: 'keepLastValue',\n  category: 'Transform',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'changed',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'integral',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'derivative',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'nonNegativeDerivative',\n  category: 'Transform',\n  params: [{ name: 'max value or 0', type: 'int', optional: true }],\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Transform',\n  params: [\n    {\n      name: 'amount',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n});\n\naddFuncDef({\n  name: 'timeStack',\n  category: 'Transform',\n  params: [\n    {\n      name: 'timeShiftUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n    { name: 'timeShiftStart', type: 'int' },\n    { name: 'timeShiftEnd', type: 'int' },\n  ],\n  defaultParams: ['1d', 0, 7],\n});\n\naddFuncDef({\n  name: 'summarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n    {\n      name: 'alignToFrom',\n      type: 'boolean',\n      optional: true,\n      options: ['false', 'true'],\n    },\n  ],\n  defaultParams: ['1h', 'sum', 'false'],\n});\n\naddFuncDef({\n  name: 'smartSummarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['1h', 'sum'],\n});\n\naddFuncDef({\n  name: 'absolute',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'hitcount',\n  category: 'Transform',\n  params: [{ name: 'interval', type: 'string' }],\n  defaultParams: ['10s'],\n});\n\naddFuncDef({\n  name: 'log',\n  category: 'Transform',\n  params: [{ name: 'base', type: 'int' }],\n  defaultParams: ['10'],\n});\n\naddFuncDef({\n  name: 'averageAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'averageBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'maximumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'maximumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'limit',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'mostDeviant',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exclude',\n  category: 'Filter Series',\n  params: [{ name: 'exclude', type: 'string' }],\n  defaultParams: ['exclude'],\n});\n\naddFuncDef({\n  name: 'highestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'highestMax',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'movingMedian',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: ['5'],\n});\n\naddFuncDef({\n  name: 'stdev',\n  category: 'Calculate',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'tolerance', type: 'int' },\n  ],\n  defaultParams: [5, 0.1],\n});\n\naddFuncDef({\n  name: 'highestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAbovePercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowPercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'useSeriesAbove',\n  category: 'Filter Series',\n  params: [\n    { name: 'value', type: 'int' },\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: [0, 'search', 'replace'],\n});\n\n////////////////////\n// Graphite 1.0.x //\n////////////////////\n\naddFuncDef({\n  name: 'aggregateLine',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['avg'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'averageOutsidePercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'delay',\n  category: 'Transform',\n  params: [{ name: 'steps', type: 'int' }],\n  defaultParams: [1],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'fallbackSeries',\n  category: 'Special',\n  params: [{ name: 'fallback', type: 'string' }],\n  defaultParams: ['constantLine(0)'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'grep',\n  category: 'Filter Series',\n  params: [{ name: 'grep', type: 'string' }],\n  defaultParams: ['grep'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'groupByNodes',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: ['sum', 3],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'integralByInterval',\n  category: 'Transform',\n  params: [\n    {\n      name: 'intervalUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'interpolate',\n  category: 'Transform',\n  params: [{ name: 'limit', type: 'int', optional: true }],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'invert',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'isNonNull',\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'linearRegression',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'startSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n    {\n      name: 'endSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'mapSeries',\n  shortName: 'map',\n  params: [{ name: 'node', type: 'int' }],\n  defaultParams: [3],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMin',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMax',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingSum',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'multiplySeriesWithWildcards',\n  category: 'Combine',\n  params: [\n    {\n      name: 'position',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [2],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'offsetToZero',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'pow',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'powSeries',\n  category: 'Transform',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'reduceSeries',\n  shortName: 'reduce',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['asPercent', 'diffSeries', 'divideSeries'],\n    },\n    {\n      name: 'reduceNode',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n    },\n    { name: 'reduceMatchers', type: 'string', multiple: true },\n  ],\n  defaultParams: ['asPercent', 2, 'used_bytes'],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeBetweenPercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeEmptySeries',\n  category: 'Filter Series',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'squareRoot',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'timeSlice',\n  category: 'Transform',\n  params: [\n    {\n      name: 'startSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    },\n    {\n      name: 'endSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['-1h'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'weightedAverage',\n  category: 'Combine',\n  params: [\n    { name: 'other', type: 'value_or_series', optional: true },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: ['#A', 4],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'seriesByTag',\n  category: 'Special',\n  params: [{ name: 'tagExpression', type: 'string', multiple: true }],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'groupByTags',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    { name: 'tag', type: 'string', multiple: true },\n  ],\n  defaultParams: ['sum', 'tag'],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'aliasByTags',\n  category: 'Alias',\n  params: [{ name: 'tag', type: 'string', multiple: true }],\n  defaultParams: ['tag'],\n  version: '1.1',\n});\n\nfunction isVersionRelatedFunction(obj: { version?: string }, graphiteVersion: string) {\n  return !obj.version || isVersionGtOrEq(graphiteVersion, obj.version);\n}\n\nexport class FuncInstance {\n  def: FuncDef;\n  params: Array<string | number>;\n  text: any;\n  /**\n   * True if this function was just added and not edited yet. It's used to focus on first\n   * function param to edit it straight away after adding a function.\n   */\n  declare added: boolean;\n  /**\n   * Hidden functions are not displayed in UI but available in text editor\n   * This is used for seriesByTagUsed function which when used switches\n   * the editor to tag-only mode. Defined tags are provided to seriesByTagUsed\n   * as parameters.\n   */\n  hidden?: boolean;\n\n  constructor(funcDef: FuncDef, options?: { withDefaultParams: any }) {\n    this.def = funcDef;\n    this.params = [];\n\n    if (options && options.withDefaultParams && funcDef.defaultParams) {\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  render(metricExp: string, replaceVariables: InterpolateFunction): string {\n    const str = this.def.name + '(';\n\n    const parameters = map(this.params, (value, index) => {\n      let paramType;\n\n      if (index < this.def.params.length) {\n        paramType = this.def.params[index].type;\n      } else if (get(last(this.def.params), 'multiple')) {\n        paramType = get(last(this.def.params), 'type');\n      }\n\n      // param types that should never be quoted\n      if (includes(['value_or_series', 'boolean', 'int', 'float', 'node', 'int_or_infinity'], paramType)) {\n        return value;\n      }\n\n      const valueInterpolated = isString(value) ? replaceVariables(value) : value;\n\n      // param types that might be quoted\n      // To quote variables correctly we need to interpolate it to check if it contains a numeric or string value\n      if (includes(['int_or_interval', 'node_or_tag'], paramType) && isFinite(+valueInterpolated)) {\n        return toString(value);\n      }\n\n      return \"'\" + value + \"'\";\n    });\n\n    // don't send any blank parameters to graphite\n    while (parameters[parameters.length - 1] === '') {\n      parameters.pop();\n    }\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue: any, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    if (this.def.params[index + 1] && this.def.params[index + 1].optional) {\n      return true;\n    }\n\n    if (index + 1 >= this.def.params.length && get(last(this.def.params), 'multiple')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateParam(strValue: any, index: any) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), index + idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && (index >= this.def.params.length || this.def.params[index].optional)) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nfunction createFuncInstance(funcDef: any, options?: { withDefaultParams: any }, idx?: any): FuncInstance {\n  if (isString(funcDef)) {\n    funcDef = getFuncDef(funcDef, idx);\n  }\n  return new FuncInstance(funcDef, options);\n}\n\nfunction getFuncDef(name: string, idx?: any): FuncDef {\n  if (!(idx || index)[name]) {\n    return { name: name, params: [{ name: '', type: '', multiple: true }], defaultParams: [''], unknown: true };\n  }\n  return (idx || index)[name];\n}\n\nfunction getFuncDefs(graphiteVersion: string, idx?: any): FuncDefs {\n  const funcs: FuncDefs = {};\n  forEach(idx || index, (funcDef: FuncDef) => {\n    if (isVersionRelatedFunction(funcDef, graphiteVersion)) {\n      funcs[funcDef.name] = assign({}, funcDef, {\n        params: filter(funcDef.params, (param) => {\n          return isVersionRelatedFunction(param, graphiteVersion);\n        }),\n      });\n    }\n  });\n  return funcs;\n}\n\n// parse response from graphite /functions endpoint into internal format\nfunction parseFuncDefs(rawDefs: any): FuncDefs {\n  const funcDefs: FuncDefs = {};\n\n  forEach(rawDefs || {}, (funcDef, funcName) => {\n    // skip graphite graph functions\n    if (funcDef.group === 'Graph') {\n      return;\n    }\n\n    let description = funcDef.description;\n    if (description) {\n      // tidy up some pydoc syntax that rst2html can't handle\n      description = description\n        .replace(/:py:func:`(.+)( <[^>]*>)?`/g, '``$1``')\n        .replace(/.. seealso:: /g, 'See also: ')\n        .replace(/.. code-block *:: *none/g, '.. code-block::');\n    }\n\n    const func: FuncDef = {\n      name: funcDef.name,\n      description,\n      category: funcDef.group,\n      params: [],\n      defaultParams: [],\n      fake: false,\n    };\n\n    // get rid of the first \"seriesList\" param\n    if (/^seriesLists?$/.test(get(funcDef, 'params[0].type', ''))) {\n      // handle functions that accept multiple seriesLists\n      // we leave the param in place but mark it optional, so users can add more series if they wish\n      if (funcDef.params[0].multiple) {\n        funcDef.params[0].required = false;\n        // otherwise chop off the first param, it'll be handled separately\n      } else {\n        funcDef.params.shift();\n      }\n      // tag function as fake\n    } else {\n      func.fake = true;\n    }\n\n    forEach(funcDef.params, (rawParam) => {\n      const param: any = {\n        name: rawParam.name,\n        type: 'string',\n        optional: !rawParam.required,\n        multiple: !!rawParam.multiple,\n        options: undefined,\n      };\n\n      if (rawParam.default !== undefined) {\n        if (rawParam.default === Infinity) {\n          func.defaultParams.push('inf');\n        } else {\n          func.defaultParams.push(toString(rawParam.default));\n        }\n      } else if (rawParam.suggestions) {\n        func.defaultParams.push(toString(rawParam.suggestions[0]));\n      } else {\n        func.defaultParams.push('');\n      }\n\n      if (rawParam.type === 'boolean') {\n        param.type = 'boolean';\n        param.options = ['true', 'false'];\n      } else if (rawParam.type === 'integer') {\n        param.type = 'int';\n      } else if (rawParam.type === 'float') {\n        param.type = 'float';\n      } else if (rawParam.type === 'node') {\n        param.type = 'node';\n        param.options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'nodeOrTag') {\n        param.type = 'node_or_tag';\n        param.options = ['name', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'intOrInterval') {\n        param.type = 'int_or_interval';\n      } else if (rawParam.type === 'seriesList') {\n        param.type = 'value_or_series';\n      } else if (rawParam.type === 'intOrInf') {\n        param.type = 'int_or_infinity';\n      }\n\n      if (rawParam.options) {\n        param.options = map(rawParam.options, toString);\n      } else if (rawParam.suggestions) {\n        param.options = map(rawParam.suggestions, toString);\n      }\n\n      func.params.push(param);\n    });\n\n    funcDefs[funcName] = func;\n  });\n\n  return funcDefs;\n}\n\nexport default {\n  createFuncInstance: createFuncInstance,\n  getFuncDef: getFuncDef,\n  getFuncDefs: getFuncDefs,\n  parseFuncDefs: parseFuncDefs,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}