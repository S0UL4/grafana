{"ast":null,"code":"var _Footer;\n\nconst _excluded = [\"navModel\", \"children\", \"className\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libraries\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect } from 'react';\nimport { CustomScrollbar, useStyles2 } from '@grafana/ui';\nimport { getTitleFromNavModel } from 'app/core/selectors/navModel'; // Components\n\nimport { Branding } from '../Branding/Branding';\nimport { Footer } from '../Footer/Footer';\nimport PageHeader from '../PageHeader/PageHeader';\nimport { PageContents } from './PageContents';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Page = _ref => {\n  let {\n    navModel,\n    children,\n    className\n  } = _ref,\n      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles2(getStyles);\n  useEffect(() => {\n    if (navModel) {\n      const title = getTitleFromNavModel(navModel);\n      document.title = title ? `${title} - ${Branding.AppTitle}` : Branding.AppTitle;\n    } else {\n      document.title = Branding.AppTitle;\n    }\n  }, [navModel]);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({}, otherProps, {\n    className: cx(styles.wrapper, className),\n    children: /*#__PURE__*/_jsx(CustomScrollbar, {\n      autoHeightMin: '100%',\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"page-scrollbar-content\",\n        children: [navModel && /*#__PURE__*/_jsx(PageHeader, {\n          model: navModel\n        }), children, _Footer || (_Footer = /*#__PURE__*/_jsx(Footer, {}))]\n      })\n    })\n  }));\n};\nPage.Header = PageHeader;\nPage.Contents = PageContents;\nexport default Page;\n\nconst getStyles = theme => ({\n  wrapper: css`\n    width: 100%;\n    flex-grow: 1;\n    min-height: 0;\n  `\n});","map":{"version":3,"names":["css","cx","React","useEffect","CustomScrollbar","useStyles2","getTitleFromNavModel","Branding","Footer","PageHeader","PageContents","Page","navModel","children","className","otherProps","styles","getStyles","title","document","AppTitle","wrapper","Header","Contents","theme"],"sources":["/home/soula/grafana/public/app/core/components/Page/Page.tsx"],"sourcesContent":["// Libraries\nimport { css, cx } from '@emotion/css';\nimport React, { FC, HTMLAttributes, useEffect } from 'react';\n\nimport { GrafanaTheme2, NavModel } from '@grafana/data';\nimport { CustomScrollbar, useStyles2 } from '@grafana/ui';\nimport { getTitleFromNavModel } from 'app/core/selectors/navModel';\n\n// Components\nimport { Branding } from '../Branding/Branding';\nimport { Footer } from '../Footer/Footer';\nimport PageHeader from '../PageHeader/PageHeader';\n\nimport { PageContents } from './PageContents';\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  navModel?: NavModel;\n}\n\nexport interface PageType extends FC<Props> {\n  Header: typeof PageHeader;\n  Contents: typeof PageContents;\n}\n\nexport const Page: PageType = ({ navModel, children, className, ...otherProps }) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (navModel) {\n      const title = getTitleFromNavModel(navModel);\n      document.title = title ? `${title} - ${Branding.AppTitle}` : Branding.AppTitle;\n    } else {\n      document.title = Branding.AppTitle;\n    }\n  }, [navModel]);\n\n  return (\n    <div {...otherProps} className={cx(styles.wrapper, className)}>\n      <CustomScrollbar autoHeightMin={'100%'}>\n        <div className=\"page-scrollbar-content\">\n          {navModel && <PageHeader model={navModel} />}\n          {children}\n          <Footer />\n        </div>\n      </CustomScrollbar>\n    </div>\n  );\n};\n\nPage.Header = PageHeader;\nPage.Contents = PageContents;\n\nexport default Page;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    width: 100%;\n    flex-grow: 1;\n    min-height: 0;\n  `,\n});\n"],"mappings":";;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAoCC,SAApC,QAAqD,OAArD;AAGA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,aAA5C;AACA,SAASC,oBAAT,QAAqC,6BAArC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;;AAYA,OAAO,MAAMC,IAAc,GAAG,QAAsD;EAAA,IAArD;IAAEC,QAAF;IAAYC,QAAZ;IAAsBC;EAAtB,CAAqD;EAAA,IAAjBC,UAAiB;;EAClF,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EAEAd,SAAS,CAAC,MAAM;IACd,IAAIS,QAAJ,EAAc;MACZ,MAAMM,KAAK,GAAGZ,oBAAoB,CAACM,QAAD,CAAlC;MACAO,QAAQ,CAACD,KAAT,GAAiBA,KAAK,GAAI,GAAEA,KAAM,MAAKX,QAAQ,CAACa,QAAS,EAAnC,GAAuCb,QAAQ,CAACa,QAAtE;IACD,CAHD,MAGO;MACLD,QAAQ,CAACD,KAAT,GAAiBX,QAAQ,CAACa,QAA1B;IACD;EACF,CAPQ,EAON,CAACR,QAAD,CAPM,CAAT;EASA,oBACE,8BAASG,UAAT;IAAqB,SAAS,EAAEd,EAAE,CAACe,MAAM,CAACK,OAAR,EAAiBP,SAAjB,CAAlC;IAAA,uBACE,KAAC,eAAD;MAAiB,aAAa,EAAE,MAAhC;MAAA,uBACE;QAAK,SAAS,EAAC,wBAAf;QAAA,WACGF,QAAQ,iBAAI,KAAC,UAAD;UAAY,KAAK,EAAEA;QAAnB,EADf,EAEGC,QAFH,qCAGE,KAAC,MAAD,KAHF;MAAA;IADF;EADF,GADF;AAWD,CAvBM;AAyBPF,IAAI,CAACW,MAAL,GAAcb,UAAd;AACAE,IAAI,CAACY,QAAL,GAAgBb,YAAhB;AAEA,eAAeC,IAAf;;AAEA,MAAMM,SAAS,GAAIO,KAAD,KAA2B;EAC3CH,OAAO,EAAErB,GAAI;AACf;AACA;AACA;AACA;AAL6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}