{"ast":null,"code":"import React from 'react';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const Authorize = ({\n  actions,\n  children,\n  fallback = true\n}) => {\n  if (actions.some(action => contextSrv.hasAccess(action, fallback))) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    });\n  } else {\n    return null;\n  }\n};","map":{"version":3,"names":["React","contextSrv","Authorize","actions","children","fallback","some","action","hasAccess"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/Authorize.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\ntype Props = {\n  actions: AccessControlAction[];\n  fallback?: boolean;\n};\n\nexport const Authorize: FC<Props> = ({ actions, children, fallback = true }) => {\n  if (actions.some((action) => contextSrv.hasAccess(action, fallback))) {\n    return <>{children}</>;\n  } else {\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,UAAT,QAA2B,+BAA3B;;;AAQA,OAAO,MAAMC,SAAoB,GAAG,CAAC;EAAEC,OAAF;EAAWC,QAAX;EAAqBC,QAAQ,GAAG;AAAhC,CAAD,KAA4C;EAC9E,IAAIF,OAAO,CAACG,IAAR,CAAcC,MAAD,IAAYN,UAAU,CAACO,SAAX,CAAqBD,MAArB,EAA6BF,QAA7B,CAAzB,CAAJ,EAAsE;IACpE,oBAAO;MAAA,UAAGD;IAAH,EAAP;EACD,CAFD,MAEO;IACL,OAAO,IAAP;EACD;AACF,CANM"},"metadata":{},"sourceType":"module"}