{"ast":null,"code":"import { VisualizationSuggestionScore } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { SuggestionName } from 'app/types/suggestions';\nimport { prepareCandlestickFields } from './fields';\nimport { defaultPanelOptions } from './models.gen';\nexport class CandlestickSuggestionsSupplier {\n  getSuggestionsForData(builder) {\n    var _builder$data;\n\n    const {\n      dataSummary\n    } = builder;\n\n    if (!((_builder$data = builder.data) !== null && _builder$data !== void 0 && _builder$data.series) || !dataSummary.hasData || dataSummary.timeFieldCount < 1 || dataSummary.numberFieldCount < 2 || dataSummary.numberFieldCount > 10) {\n      return;\n    }\n\n    const info = prepareCandlestickFields(builder.data.series, defaultPanelOptions, config.theme2);\n\n    if (!info) {\n      return;\n    } // Regular timeseries\n\n\n    if (info.open === info.high && info.open === info.low) {\n      return;\n    }\n\n    const list = builder.getListAppender({\n      name: '',\n      pluginId: 'candlestick',\n      options: {},\n      fieldConfig: {\n        defaults: {\n          custom: {}\n        },\n        overrides: []\n      }\n    });\n    list.append({\n      name: SuggestionName.Candlestick,\n      options: defaultPanelOptions,\n      fieldConfig: {\n        defaults: {},\n        overrides: []\n      },\n      score: info.autoOpenClose ? VisualizationSuggestionScore.Good : VisualizationSuggestionScore.Best\n    });\n  }\n\n}","map":{"version":3,"names":["VisualizationSuggestionScore","config","SuggestionName","prepareCandlestickFields","defaultPanelOptions","CandlestickSuggestionsSupplier","getSuggestionsForData","builder","dataSummary","data","series","hasData","timeFieldCount","numberFieldCount","info","theme2","open","high","low","list","getListAppender","name","pluginId","options","fieldConfig","defaults","custom","overrides","append","Candlestick","score","autoOpenClose","Good","Best"],"sources":["/home/soula/grafana/public/app/plugins/panel/candlestick/suggestions.ts"],"sourcesContent":["import { VisualizationSuggestionsBuilder, VisualizationSuggestionScore } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { SuggestionName } from 'app/types/suggestions';\n\nimport { prepareCandlestickFields } from './fields';\nimport { CandlestickOptions, defaultPanelOptions } from './models.gen';\n\nexport class CandlestickSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary } = builder;\n\n    if (\n      !builder.data?.series ||\n      !dataSummary.hasData ||\n      dataSummary.timeFieldCount < 1 ||\n      dataSummary.numberFieldCount < 2 ||\n      dataSummary.numberFieldCount > 10\n    ) {\n      return;\n    }\n\n    const info = prepareCandlestickFields(builder.data.series, defaultPanelOptions, config.theme2);\n    if (!info) {\n      return;\n    }\n\n    // Regular timeseries\n    if (info.open === info.high && info.open === info.low) {\n      return;\n    }\n\n    const list = builder.getListAppender<CandlestickOptions, {}>({\n      name: '',\n      pluginId: 'candlestick',\n      options: {},\n      fieldConfig: {\n        defaults: {\n          custom: {},\n        },\n        overrides: [],\n      },\n    });\n\n    list.append({\n      name: SuggestionName.Candlestick,\n      options: defaultPanelOptions,\n      fieldConfig: {\n        defaults: {},\n        overrides: [],\n      },\n      score: info.autoOpenClose ? VisualizationSuggestionScore.Good : VisualizationSuggestionScore.Best,\n    });\n  }\n}\n"],"mappings":"AAAA,SAA0CA,4BAA1C,QAA8E,eAA9E;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAA6BC,mBAA7B,QAAwD,cAAxD;AAEA,OAAO,MAAMC,8BAAN,CAAqC;EAC1CC,qBAAqB,CAACC,OAAD,EAA2C;IAAA;;IAC9D,MAAM;MAAEC;IAAF,IAAkBD,OAAxB;;IAEA,IACE,mBAACA,OAAO,CAACE,IAAT,0CAAC,cAAcC,MAAf,KACA,CAACF,WAAW,CAACG,OADb,IAEAH,WAAW,CAACI,cAAZ,GAA6B,CAF7B,IAGAJ,WAAW,CAACK,gBAAZ,GAA+B,CAH/B,IAIAL,WAAW,CAACK,gBAAZ,GAA+B,EALjC,EAME;MACA;IACD;;IAED,MAAMC,IAAI,GAAGX,wBAAwB,CAACI,OAAO,CAACE,IAAR,CAAaC,MAAd,EAAsBN,mBAAtB,EAA2CH,MAAM,CAACc,MAAlD,CAArC;;IACA,IAAI,CAACD,IAAL,EAAW;MACT;IACD,CAhB6D,CAkB9D;;;IACA,IAAIA,IAAI,CAACE,IAAL,KAAcF,IAAI,CAACG,IAAnB,IAA2BH,IAAI,CAACE,IAAL,KAAcF,IAAI,CAACI,GAAlD,EAAuD;MACrD;IACD;;IAED,MAAMC,IAAI,GAAGZ,OAAO,CAACa,eAAR,CAAgD;MAC3DC,IAAI,EAAE,EADqD;MAE3DC,QAAQ,EAAE,aAFiD;MAG3DC,OAAO,EAAE,EAHkD;MAI3DC,WAAW,EAAE;QACXC,QAAQ,EAAE;UACRC,MAAM,EAAE;QADA,CADC;QAIXC,SAAS,EAAE;MAJA;IAJ8C,CAAhD,CAAb;IAYAR,IAAI,CAACS,MAAL,CAAY;MACVP,IAAI,EAAEnB,cAAc,CAAC2B,WADX;MAEVN,OAAO,EAAEnB,mBAFC;MAGVoB,WAAW,EAAE;QACXC,QAAQ,EAAE,EADC;QAEXE,SAAS,EAAE;MAFA,CAHH;MAOVG,KAAK,EAAEhB,IAAI,CAACiB,aAAL,GAAqB/B,4BAA4B,CAACgC,IAAlD,GAAyDhC,4BAA4B,CAACiC;IAPnF,CAAZ;EASD;;AA7CyC"},"metadata":{},"sourceType":"module"}