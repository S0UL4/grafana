{"ast":null,"code":"var _PageLoader;\n\nimport React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getWarningNav } from 'app/angular/services/nav_model_srv';\nimport Page from 'app/core/components/Page/Page';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\nimport { useImportAppPlugin } from '../hooks/useImportAppPlugin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// This component can be used to render an app-plugin based on its plugin ID.\nexport const AppPluginLoader = ({\n  id,\n  basePath\n}) => {\n  const [nav, setNav] = useState(null);\n  const {\n    value: plugin,\n    error,\n    loading\n  } = useImportAppPlugin(id);\n  const queryParams = useParams();\n  const {\n    pathname\n  } = useLocation();\n\n  if (error) {\n    return /*#__PURE__*/_jsx(Page.Header, {\n      model: getWarningNav(error.message, error.stack)\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [loading && (_PageLoader || (_PageLoader = /*#__PURE__*/_jsx(PageLoader, {}))), nav && /*#__PURE__*/_jsx(Page.Header, {\n      model: nav\n    }), !loading && plugin && plugin.root && /*#__PURE__*/_jsx(plugin.root, {\n      meta: plugin.meta,\n      basename: basePath || pathname,\n      onNavChanged: setNav,\n      query: queryParams,\n      path: pathname\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useLocation","useParams","getWarningNav","Page","PageLoader","useImportAppPlugin","AppPluginLoader","id","basePath","nav","setNav","value","plugin","error","loading","queryParams","pathname","message","stack","root","meta"],"sources":["/home/soula/grafana/public/app/features/plugins/components/AppPluginLoader.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { NavModel } from '@grafana/data';\nimport { getWarningNav } from 'app/angular/services/nav_model_srv';\nimport Page from 'app/core/components/Page/Page';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\n\nimport { useImportAppPlugin } from '../hooks/useImportAppPlugin';\n\ntype AppPluginLoaderProps = {\n  // The id of the app plugin to be loaded\n  id: string;\n  // The base URL path - defaults to the current path\n  basePath?: string;\n};\n\n// This component can be used to render an app-plugin based on its plugin ID.\nexport const AppPluginLoader = ({ id, basePath }: AppPluginLoaderProps) => {\n  const [nav, setNav] = useState<NavModel | null>(null);\n  const { value: plugin, error, loading } = useImportAppPlugin(id);\n  const queryParams = useParams();\n  const { pathname } = useLocation();\n\n  if (error) {\n    return <Page.Header model={getWarningNav(error.message, error.stack)} />;\n  }\n\n  return (\n    <>\n      {loading && <PageLoader />}\n      {nav && <Page.Header model={nav} />}\n      {!loading && plugin && plugin.root && (\n        <plugin.root\n          meta={plugin.meta}\n          basename={basePath || pathname}\n          onNavChanged={setNav}\n          query={queryParams}\n          path={pathname}\n        />\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAGA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AAEA,SAASC,kBAAT,QAAmC,6BAAnC;;;;AASA;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;EAAEC,EAAF;EAAMC;AAAN,CAAD,KAA4C;EACzE,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAkB,IAAlB,CAA9B;EACA,MAAM;IAAEY,KAAK,EAAEC,MAAT;IAAiBC,KAAjB;IAAwBC;EAAxB,IAAoCT,kBAAkB,CAACE,EAAD,CAA5D;EACA,MAAMQ,WAAW,GAAGd,SAAS,EAA7B;EACA,MAAM;IAAEe;EAAF,IAAehB,WAAW,EAAhC;;EAEA,IAAIa,KAAJ,EAAW;IACT,oBAAO,KAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAEX,aAAa,CAACW,KAAK,CAACI,OAAP,EAAgBJ,KAAK,CAACK,KAAtB;IAAjC,EAAP;EACD;;EAED,oBACE;IAAA,WACGJ,OAAO,gDAAI,KAAC,UAAD,KAAJ,EADV,EAEGL,GAAG,iBAAI,KAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAEA;IAApB,EAFV,EAGG,CAACK,OAAD,IAAYF,MAAZ,IAAsBA,MAAM,CAACO,IAA7B,iBACC,KAAC,MAAD,CAAQ,IAAR;MACE,IAAI,EAAEP,MAAM,CAACQ,IADf;MAEE,QAAQ,EAAEZ,QAAQ,IAAIQ,QAFxB;MAGE,YAAY,EAAEN,MAHhB;MAIE,KAAK,EAAEK,WAJT;MAKE,IAAI,EAAEC;IALR,EAJJ;EAAA,EADF;AAeD,CAzBM"},"metadata":{},"sourceType":"module"}