{"ast":null,"code":"import { cx, css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { MenuItem, WithContextMenu, MenuGroup, useTheme2 } from '@grafana/ui';\nimport { AddButton } from './AddButton';\nimport { Seg } from './Seg';\nimport { toSelectableValue } from './toSelectableValue';\nimport { unwrap } from './unwrap';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst renderRemovableNameMenuItems = onClick => {\n  return /*#__PURE__*/_jsx(MenuGroup, {\n    label: \"\",\n    children: /*#__PURE__*/_jsx(MenuItem, {\n      label: \"remove\",\n      onClick: onClick\n    })\n  });\n};\n\nconst noRightMarginPaddingClass = css({\n  paddingRight: '0',\n  marginRight: '0'\n});\n\nconst RemovableName = ({\n  name,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsx(WithContextMenu, {\n    renderMenuItems: () => renderRemovableNameMenuItems(onRemove),\n    children: ({\n      openMenu\n    }) => /*#__PURE__*/_jsx(\"button\", {\n      className: cx('gf-form-label', noRightMarginPaddingClass),\n      onClick: openMenu,\n      children: name\n    })\n  });\n};\n\nconst noHorizMarginPaddingClass = css({\n  paddingLeft: '0',\n  paddingRight: '0',\n  marginLeft: '0',\n  marginRight: '0'\n});\n\nconst getPartClass = theme => {\n  return cx('gf-form-label', css({\n    paddingLeft: '0',\n    // gf-form-label class makes certain css attributes incorrect\n    // for the selectbox-dropdown, so we have to \"reset\" them back\n    lineHeight: theme.typography.body.lineHeight,\n    fontSize: theme.typography.body.fontSize\n  }));\n};\n\nconst Part = ({\n  name,\n  params,\n  onChange,\n  onRemove\n}) => {\n  const theme = useTheme2();\n  const partClass = useMemo(() => getPartClass(theme), [theme]);\n\n  const onParamChange = (par, i) => {\n    const newParams = params.map(p => p.value);\n    newParams[i] = par;\n    onChange(newParams);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: partClass,\n    children: [/*#__PURE__*/_jsx(RemovableName, {\n      name: name,\n      onRemove: onRemove\n    }), \"(\", params.map((p, i) => {\n      const {\n        value,\n        options\n      } = p;\n      const isLast = i === params.length - 1;\n      const loadOptions = options !== null ? () => options().then(items => items.map(toSelectableValue)) : undefined;\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(Seg, {\n          allowCustomValue: true,\n          value: value,\n          buttonClassName: noHorizMarginPaddingClass,\n          loadOptions: loadOptions,\n          onChange: v => {\n            onParamChange(unwrap(v.value), i);\n          }\n        }), !isLast && ',']\n      }, i);\n    }), \")\"]\n  });\n};\n\nexport const PartListSection = ({\n  parts,\n  getNewPartOptions,\n  onAddNewPart,\n  onRemovePart,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [parts.map((part, index) => /*#__PURE__*/_jsx(Part, {\n      name: part.name,\n      params: part.params,\n      onRemove: () => {\n        onRemovePart(index);\n      },\n      onChange: pars => {\n        onChange(index, pars);\n      }\n    }, index)), /*#__PURE__*/_jsx(AddButton, {\n      loadOptions: getNewPartOptions,\n      onAdd: onAddNewPart\n    })]\n  });\n};","map":{"version":3,"names":["cx","css","React","useMemo","MenuItem","WithContextMenu","MenuGroup","useTheme2","AddButton","Seg","toSelectableValue","unwrap","renderRemovableNameMenuItems","onClick","noRightMarginPaddingClass","paddingRight","marginRight","RemovableName","name","onRemove","openMenu","noHorizMarginPaddingClass","paddingLeft","marginLeft","getPartClass","theme","lineHeight","typography","body","fontSize","Part","params","onChange","partClass","onParamChange","par","i","newParams","map","p","value","options","isLast","length","loadOptions","then","items","undefined","v","PartListSection","parts","getNewPartOptions","onAddNewPart","onRemovePart","part","index","pars"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/VisualInfluxQLEditor/PartListSection.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { SelectableValue, GrafanaTheme2 } from '@grafana/data';\nimport { MenuItem, WithContextMenu, MenuGroup, useTheme2 } from '@grafana/ui';\n\nimport { AddButton } from './AddButton';\nimport { Seg } from './Seg';\nimport { toSelectableValue } from './toSelectableValue';\nimport { unwrap } from './unwrap';\n\nexport type PartParams = Array<{\n  value: string;\n  options: (() => Promise<string[]>) | null;\n}>;\n\ntype Props = {\n  parts: Array<{\n    name: string;\n    params: PartParams;\n  }>;\n  getNewPartOptions: () => Promise<SelectableValue[]>;\n  onChange: (partIndex: number, paramValues: string[]) => void;\n  onRemovePart: (index: number) => void;\n  onAddNewPart: (type: string) => void;\n};\n\nconst renderRemovableNameMenuItems = (onClick: () => void) => {\n  return (\n    <MenuGroup label=\"\">\n      <MenuItem label=\"remove\" onClick={onClick} />\n    </MenuGroup>\n  );\n};\n\nconst noRightMarginPaddingClass = css({\n  paddingRight: '0',\n  marginRight: '0',\n});\n\nconst RemovableName = ({ name, onRemove }: { name: string; onRemove: () => void }) => {\n  return (\n    <WithContextMenu renderMenuItems={() => renderRemovableNameMenuItems(onRemove)}>\n      {({ openMenu }) => (\n        <button className={cx('gf-form-label', noRightMarginPaddingClass)} onClick={openMenu}>\n          {name}\n        </button>\n      )}\n    </WithContextMenu>\n  );\n};\n\ntype PartProps = {\n  name: string;\n  params: PartParams;\n  onRemove: () => void;\n  onChange: (paramValues: string[]) => void;\n};\n\nconst noHorizMarginPaddingClass = css({\n  paddingLeft: '0',\n  paddingRight: '0',\n  marginLeft: '0',\n  marginRight: '0',\n});\n\nconst getPartClass = (theme: GrafanaTheme2) => {\n  return cx(\n    'gf-form-label',\n    css({\n      paddingLeft: '0',\n      // gf-form-label class makes certain css attributes incorrect\n      // for the selectbox-dropdown, so we have to \"reset\" them back\n      lineHeight: theme.typography.body.lineHeight,\n      fontSize: theme.typography.body.fontSize,\n    })\n  );\n};\n\nconst Part = ({ name, params, onChange, onRemove }: PartProps): JSX.Element => {\n  const theme = useTheme2();\n  const partClass = useMemo(() => getPartClass(theme), [theme]);\n\n  const onParamChange = (par: string, i: number) => {\n    const newParams = params.map((p) => p.value);\n    newParams[i] = par;\n    onChange(newParams);\n  };\n  return (\n    <div className={partClass}>\n      <RemovableName name={name} onRemove={onRemove} />(\n      {params.map((p, i) => {\n        const { value, options } = p;\n        const isLast = i === params.length - 1;\n        const loadOptions =\n          options !== null ? () => options().then((items) => items.map(toSelectableValue)) : undefined;\n        return (\n          <React.Fragment key={i}>\n            <Seg\n              allowCustomValue\n              value={value}\n              buttonClassName={noHorizMarginPaddingClass}\n              loadOptions={loadOptions}\n              onChange={(v) => {\n                onParamChange(unwrap(v.value), i);\n              }}\n            />\n            {!isLast && ','}\n          </React.Fragment>\n        );\n      })}\n      )\n    </div>\n  );\n};\n\nexport const PartListSection = ({\n  parts,\n  getNewPartOptions,\n  onAddNewPart,\n  onRemovePart,\n  onChange,\n}: Props): JSX.Element => {\n  return (\n    <>\n      {parts.map((part, index) => (\n        <Part\n          key={index}\n          name={part.name}\n          params={part.params}\n          onRemove={() => {\n            onRemovePart(index);\n          }}\n          onChange={(pars) => {\n            onChange(index, pars);\n          }}\n        />\n      ))}\n      <AddButton loadOptions={getNewPartOptions} onAdd={onAddNewPart} />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}