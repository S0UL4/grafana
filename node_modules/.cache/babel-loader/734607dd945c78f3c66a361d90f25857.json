{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { PanelDataErrorView } from '@grafana/runtime';\nimport { TooltipDisplayMode } from '@grafana/schema';\nimport { usePanelContext, TimeSeries, TooltipPlugin, ZoomPlugin, KeyboardPlugin } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { getFieldLinksForExplore } from 'app/features/explore/utils/links';\nimport { AnnotationEditorPlugin } from './plugins/AnnotationEditorPlugin';\nimport { AnnotationsPlugin } from './plugins/AnnotationsPlugin';\nimport { ContextMenuPlugin } from './plugins/ContextMenuPlugin';\nimport { ExemplarsPlugin } from './plugins/ExemplarsPlugin';\nimport { OutsideRangePlugin } from './plugins/OutsideRangePlugin';\nimport { ThresholdControlsPlugin } from './plugins/ThresholdControlsPlugin';\nimport { prepareGraphableFields } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TimeSeriesPanel = ({\n  data,\n  timeRange,\n  timeZone,\n  width,\n  height,\n  options,\n  fieldConfig,\n  onChangeTimeRange,\n  replaceVariables,\n  id\n}) => {\n  const {\n    sync,\n    canAddAnnotations,\n    onThresholdsChange,\n    canEditThresholds,\n    onSplitOpen\n  } = usePanelContext();\n\n  const getFieldLinks = (field, rowIndex) => {\n    return getFieldLinksForExplore({\n      field,\n      rowIndex,\n      splitOpenFn: onSplitOpen,\n      range: timeRange\n    });\n  };\n\n  const frames = useMemo(() => prepareGraphableFields(data.series, config.theme2, timeRange), [data, timeRange]);\n\n  if (!frames) {\n    return /*#__PURE__*/_jsx(PanelDataErrorView, {\n      panelId: id,\n      fieldConfig: fieldConfig,\n      data: data,\n      needsTimeField: true,\n      needsNumberField: true\n    });\n  }\n\n  const enableAnnotationCreation = Boolean(canAddAnnotations && canAddAnnotations());\n  return /*#__PURE__*/_jsx(TimeSeries, {\n    frames: frames,\n    structureRev: data.structureRev,\n    timeRange: timeRange,\n    timeZone: timeZone,\n    width: width,\n    height: height,\n    legend: options.legend,\n    children: (config, alignedDataFrame) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(KeyboardPlugin, {\n          config: config\n        }), /*#__PURE__*/_jsx(ZoomPlugin, {\n          config: config,\n          onZoom: onChangeTimeRange\n        }), options.tooltip.mode === TooltipDisplayMode.None || /*#__PURE__*/_jsx(TooltipPlugin, {\n          data: alignedDataFrame,\n          config: config,\n          mode: options.tooltip.mode,\n          sortOrder: options.tooltip.sort,\n          sync: sync,\n          timeZone: timeZone\n        }), data.annotations && /*#__PURE__*/_jsx(AnnotationsPlugin, {\n          annotations: data.annotations,\n          config: config,\n          timeZone: timeZone\n        }), enableAnnotationCreation ? /*#__PURE__*/_jsx(AnnotationEditorPlugin, {\n          data: alignedDataFrame,\n          timeZone: timeZone,\n          config: config,\n          children: ({\n            startAnnotating\n          }) => {\n            return /*#__PURE__*/_jsx(ContextMenuPlugin, {\n              data: alignedDataFrame,\n              config: config,\n              timeZone: timeZone,\n              replaceVariables: replaceVariables,\n              defaultItems: [{\n                items: [{\n                  label: 'Add annotation',\n                  ariaLabel: 'Add annotation',\n                  icon: 'comment-alt',\n                  onClick: (e, p) => {\n                    if (!p) {\n                      return;\n                    }\n\n                    startAnnotating({\n                      coords: p.coords\n                    });\n                  }\n                }]\n              }]\n            });\n          }\n        }) : /*#__PURE__*/_jsx(ContextMenuPlugin, {\n          data: alignedDataFrame,\n          config: config,\n          timeZone: timeZone,\n          replaceVariables: replaceVariables,\n          defaultItems: []\n        }), data.annotations && /*#__PURE__*/_jsx(ExemplarsPlugin, {\n          config: config,\n          exemplars: data.annotations,\n          timeZone: timeZone,\n          getFieldLinks: getFieldLinks\n        }), canEditThresholds && onThresholdsChange && /*#__PURE__*/_jsx(ThresholdControlsPlugin, {\n          config: config,\n          fieldConfig: fieldConfig,\n          onThresholdsChange: onThresholdsChange\n        }), /*#__PURE__*/_jsx(OutsideRangePlugin, {\n          config: config,\n          onChangeTimeRange: onChangeTimeRange\n        })]\n      });\n    }\n  });\n};","map":{"version":3,"names":["React","useMemo","PanelDataErrorView","TooltipDisplayMode","usePanelContext","TimeSeries","TooltipPlugin","ZoomPlugin","KeyboardPlugin","config","getFieldLinksForExplore","AnnotationEditorPlugin","AnnotationsPlugin","ContextMenuPlugin","ExemplarsPlugin","OutsideRangePlugin","ThresholdControlsPlugin","prepareGraphableFields","TimeSeriesPanel","data","timeRange","timeZone","width","height","options","fieldConfig","onChangeTimeRange","replaceVariables","id","sync","canAddAnnotations","onThresholdsChange","canEditThresholds","onSplitOpen","getFieldLinks","field","rowIndex","splitOpenFn","range","frames","series","theme2","enableAnnotationCreation","Boolean","structureRev","legend","alignedDataFrame","tooltip","mode","None","sort","annotations","startAnnotating","items","label","ariaLabel","icon","onClick","e","p","coords"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/TimeSeriesPanel.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { Field, PanelProps } from '@grafana/data';\nimport { PanelDataErrorView } from '@grafana/runtime';\nimport { TooltipDisplayMode } from '@grafana/schema';\nimport { usePanelContext, TimeSeries, TooltipPlugin, ZoomPlugin, KeyboardPlugin } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { getFieldLinksForExplore } from 'app/features/explore/utils/links';\n\nimport { AnnotationEditorPlugin } from './plugins/AnnotationEditorPlugin';\nimport { AnnotationsPlugin } from './plugins/AnnotationsPlugin';\nimport { ContextMenuPlugin } from './plugins/ContextMenuPlugin';\nimport { ExemplarsPlugin } from './plugins/ExemplarsPlugin';\nimport { OutsideRangePlugin } from './plugins/OutsideRangePlugin';\nimport { ThresholdControlsPlugin } from './plugins/ThresholdControlsPlugin';\nimport { TimeSeriesOptions } from './types';\nimport { prepareGraphableFields } from './utils';\n\ninterface TimeSeriesPanelProps extends PanelProps<TimeSeriesOptions> {}\n\nexport const TimeSeriesPanel: React.FC<TimeSeriesPanelProps> = ({\n  data,\n  timeRange,\n  timeZone,\n  width,\n  height,\n  options,\n  fieldConfig,\n  onChangeTimeRange,\n  replaceVariables,\n  id,\n}) => {\n  const { sync, canAddAnnotations, onThresholdsChange, canEditThresholds, onSplitOpen } = usePanelContext();\n\n  const getFieldLinks = (field: Field, rowIndex: number) => {\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn: onSplitOpen, range: timeRange });\n  };\n\n  const frames = useMemo(() => prepareGraphableFields(data.series, config.theme2, timeRange), [data, timeRange]);\n\n  if (!frames) {\n    return (\n      <PanelDataErrorView\n        panelId={id}\n        fieldConfig={fieldConfig}\n        data={data}\n        needsTimeField={true}\n        needsNumberField={true}\n      />\n    );\n  }\n\n  const enableAnnotationCreation = Boolean(canAddAnnotations && canAddAnnotations());\n\n  return (\n    <TimeSeries\n      frames={frames}\n      structureRev={data.structureRev}\n      timeRange={timeRange}\n      timeZone={timeZone}\n      width={width}\n      height={height}\n      legend={options.legend}\n    >\n      {(config, alignedDataFrame) => {\n        return (\n          <>\n            <KeyboardPlugin config={config} />\n            <ZoomPlugin config={config} onZoom={onChangeTimeRange} />\n            {options.tooltip.mode === TooltipDisplayMode.None || (\n              <TooltipPlugin\n                data={alignedDataFrame}\n                config={config}\n                mode={options.tooltip.mode}\n                sortOrder={options.tooltip.sort}\n                sync={sync}\n                timeZone={timeZone}\n              />\n            )}\n            {/* Renders annotation markers*/}\n            {data.annotations && (\n              <AnnotationsPlugin annotations={data.annotations} config={config} timeZone={timeZone} />\n            )}\n            {/* Enables annotations creation*/}\n            {enableAnnotationCreation ? (\n              <AnnotationEditorPlugin data={alignedDataFrame} timeZone={timeZone} config={config}>\n                {({ startAnnotating }) => {\n                  return (\n                    <ContextMenuPlugin\n                      data={alignedDataFrame}\n                      config={config}\n                      timeZone={timeZone}\n                      replaceVariables={replaceVariables}\n                      defaultItems={[\n                        {\n                          items: [\n                            {\n                              label: 'Add annotation',\n                              ariaLabel: 'Add annotation',\n                              icon: 'comment-alt',\n                              onClick: (e, p) => {\n                                if (!p) {\n                                  return;\n                                }\n                                startAnnotating({ coords: p.coords });\n                              },\n                            },\n                          ],\n                        },\n                      ]}\n                    />\n                  );\n                }}\n              </AnnotationEditorPlugin>\n            ) : (\n              <ContextMenuPlugin\n                data={alignedDataFrame}\n                config={config}\n                timeZone={timeZone}\n                replaceVariables={replaceVariables}\n                defaultItems={[]}\n              />\n            )}\n            {data.annotations && (\n              <ExemplarsPlugin\n                config={config}\n                exemplars={data.annotations}\n                timeZone={timeZone}\n                getFieldLinks={getFieldLinks}\n              />\n            )}\n\n            {canEditThresholds && onThresholdsChange && (\n              <ThresholdControlsPlugin\n                config={config}\n                fieldConfig={fieldConfig}\n                onThresholdsChange={onThresholdsChange}\n              />\n            )}\n\n            <OutsideRangePlugin config={config} onChangeTimeRange={onChangeTimeRange} />\n          </>\n        );\n      }}\n    </TimeSeries>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}