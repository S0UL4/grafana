{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useTheme2 } from '@grafana/ui';\nimport { SearchForm } from './SearchForm';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function QueryEditor({\n  datasource,\n  query,\n  onChange,\n  onRunQuery\n}) {\n  var _SearchForm;\n\n  const theme = useTheme2();\n\n  const onChangeQuery = value => {\n    const nextQuery = Object.assign({}, query, {\n      query: value\n    });\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return _SearchForm || (_SearchForm = /*#__PURE__*/_jsx(SearchForm, {\n          datasource: datasource,\n          query: query,\n          onChange: onChange\n        }));\n\n      case 'upload':\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: css({\n            padding: theme.spacing(2)\n          }),\n          children: /*#__PURE__*/_jsx(FileDropzone, {\n            options: {\n              multiple: false\n            },\n            onLoad: result => {\n              datasource.uploadedJson = result;\n              onRunQuery();\n            }\n          })\n        });\n\n      default:\n        return /*#__PURE__*/_jsx(InlineFieldRow, {\n          children: /*#__PURE__*/_jsx(InlineField, {\n            label: \"Trace ID\",\n            labelWidth: 14,\n            grow: true,\n            children: /*#__PURE__*/_jsx(QueryField, {\n              query: query.query,\n              onChange: onChangeQuery,\n              onRunQuery: onRunQuery,\n              onBlur: () => {},\n              placeholder: 'Enter a Trace ID (run with Shift+Enter)',\n              portalOrigin: \"jaeger\"\n            })\n          })\n        });\n    }\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: css({\n        width: '100%'\n      }),\n      children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n        children: /*#__PURE__*/_jsx(InlineField, {\n          label: \"Query type\",\n          children: /*#__PURE__*/_jsx(RadioButtonGroup, {\n            options: [{\n              value: 'search',\n              label: 'Search'\n            }, {\n              value: undefined,\n              label: 'TraceID'\n            }, {\n              value: 'upload',\n              label: 'JSON file'\n            }],\n            value: query.queryType,\n            onChange: v => onChange(Object.assign({}, query, {\n              queryType: v\n            })),\n            size: \"md\"\n          })\n        })\n      }), renderEditorBody()]\n    })\n  });\n}","map":{"version":3,"names":["css","React","FileDropzone","InlineField","InlineFieldRow","QueryField","RadioButtonGroup","useTheme2","SearchForm","QueryEditor","datasource","query","onChange","onRunQuery","theme","onChangeQuery","value","nextQuery","renderEditorBody","queryType","padding","spacing","multiple","result","uploadedJson","width","label","undefined","v"],"sources":["/home/soula/grafana/public/app/plugins/datasource/jaeger/components/QueryEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useTheme2 } from '@grafana/ui';\n\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\n\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const theme = useTheme2();\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={css({ padding: theme.spacing(2) })}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={css({ width: '100%' })}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON file' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,EAAoDC,UAApD,EAAgEC,gBAAhE,EAAkFC,SAAlF,QAAmG,aAAnG;AAKA,SAASC,UAAT,QAA2B,cAA3B;;;;AAIA,OAAO,SAASC,WAAT,CAAqB;EAAEC,UAAF;EAAcC,KAAd;EAAqBC,QAArB;EAA+BC;AAA/B,CAArB,EAAyE;EAAA;;EAC9E,MAAMC,KAAK,GAAGP,SAAS,EAAvB;;EAEA,MAAMQ,aAAa,GAAIC,KAAD,IAAmB;IACvC,MAAMC,SAAsB,qBAAQN,KAAR;MAAeA,KAAK,EAAEK;IAAtB,EAA5B;IACAJ,QAAQ,CAACK,SAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,QAAQP,KAAK,CAACQ,SAAd;MACE,KAAK,QAAL;QACE,kDAAO,KAAC,UAAD;UAAY,UAAU,EAAET,UAAxB;UAAoC,KAAK,EAAEC,KAA3C;UAAkD,QAAQ,EAAEC;QAA5D,EAAP;;MACF,KAAK,QAAL;QACE,oBACE;UAAK,SAAS,EAAEZ,GAAG,CAAC;YAAEoB,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;UAAX,CAAD,CAAnB;UAAA,uBACE,KAAC,YAAD;YACE,OAAO,EAAE;cAAEC,QAAQ,EAAE;YAAZ,CADX;YAEE,MAAM,EAAGC,MAAD,IAAY;cAClBb,UAAU,CAACc,YAAX,GAA0BD,MAA1B;cACAV,UAAU;YACX;UALH;QADF,EADF;;MAWF;QACE,oBACE,KAAC,cAAD;UAAA,uBACE,KAAC,WAAD;YAAa,KAAK,EAAC,UAAnB;YAA8B,UAAU,EAAE,EAA1C;YAA8C,IAAI,MAAlD;YAAA,uBACE,KAAC,UAAD;cACE,KAAK,EAAEF,KAAK,CAACA,KADf;cAEE,QAAQ,EAAEI,aAFZ;cAGE,UAAU,EAAEF,UAHd;cAIE,MAAM,EAAE,MAAM,CAAE,CAJlB;cAKE,WAAW,EAAE,yCALf;cAME,YAAY,EAAC;YANf;UADF;QADF,EADF;IAhBJ;EA+BD,CAhCD;;EAkCA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAEb,GAAG,CAAC;QAAEyB,KAAK,EAAE;MAAT,CAAD,CAAnB;MAAA,wBACE,KAAC,cAAD;QAAA,uBACE,KAAC,WAAD;UAAa,KAAK,EAAC,YAAnB;UAAA,uBACE,KAAC,gBAAD;YACE,OAAO,EAAE,CACP;cAAET,KAAK,EAAE,QAAT;cAAmBU,KAAK,EAAE;YAA1B,CADO,EAEP;cAAEV,KAAK,EAAEW,SAAT;cAAoBD,KAAK,EAAE;YAA3B,CAFO,EAGP;cAAEV,KAAK,EAAE,QAAT;cAAmBU,KAAK,EAAE;YAA1B,CAHO,CADX;YAME,KAAK,EAAEf,KAAK,CAACQ,SANf;YAOE,QAAQ,EAAGS,CAAD,IACRhB,QAAQ,mBACHD,KADG;cAENQ,SAAS,EAAES;YAFL,GARZ;YAaE,IAAI,EAAC;UAbP;QADF;MADF,EADF,EAoBGV,gBAAgB,EApBnB;IAAA;EADF,EADF;AA0BD"},"metadata":{},"sourceType":"module"}