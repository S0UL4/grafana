{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { Icon, InlineSegmentGroup, useTheme2 } from '@grafana/ui';\nimport { segmentStyles } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = (theme, hidden) => {\n  return {\n    wrapper: css`\n      max-width: 500px;\n      display: flex;\n      flex-direction: column;\n    `,\n    settingsWrapper: css`\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    icon: css`\n      margin-right: ${theme.spacing(0.5)};\n    `,\n    button: css`\n      justify-content: start;\n      ${hidden && css`\n        color: ${theme.colors.text.disabled};\n      `}\n    `\n  };\n};\n\nexport const SettingsEditorContainer = ({\n  label,\n  children,\n  hidden = false\n}) => {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme2();\n  const styles = getStyles(theme, hidden);\n  return /*#__PURE__*/_jsx(InlineSegmentGroup, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.wrapper),\n      children: [/*#__PURE__*/_jsxs(\"button\", {\n        className: cx('gf-form-label query-part', styles.button, segmentStyles),\n        onClick: () => setOpen(!open),\n        \"aria-expanded\": open,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          name: open ? 'angle-down' : 'angle-right',\n          \"aria-hidden\": \"true\",\n          className: styles.icon\n        }), label]\n      }), open && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.settingsWrapper,\n        children: children\n      })]\n    })\n  });\n};","map":{"version":3,"names":["css","cx","React","useState","Icon","InlineSegmentGroup","useTheme2","segmentStyles","getStyles","theme","hidden","wrapper","settingsWrapper","spacing","icon","button","colors","text","disabled","SettingsEditorContainer","label","children","open","setOpen","styles"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/SettingsEditorContainer.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { PropsWithChildren, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, InlineSegmentGroup, useTheme2 } from '@grafana/ui';\n\nimport { segmentStyles } from './styles';\n\nconst getStyles = (theme: GrafanaTheme2, hidden: boolean) => {\n  return {\n    wrapper: css`\n      max-width: 500px;\n      display: flex;\n      flex-direction: column;\n    `,\n    settingsWrapper: css`\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    icon: css`\n      margin-right: ${theme.spacing(0.5)};\n    `,\n    button: css`\n      justify-content: start;\n      ${hidden &&\n      css`\n        color: ${theme.colors.text.disabled};\n      `}\n    `,\n  };\n};\n\ninterface Props {\n  label: string;\n  hidden?: boolean;\n}\n\nexport const SettingsEditorContainer = ({ label, children, hidden = false }: PropsWithChildren<Props>) => {\n  const [open, setOpen] = useState(false);\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, hidden);\n\n  return (\n    <InlineSegmentGroup>\n      <div className={cx(styles.wrapper)}>\n        <button\n          className={cx('gf-form-label query-part', styles.button, segmentStyles)}\n          onClick={() => setOpen(!open)}\n          aria-expanded={open}\n        >\n          <Icon name={open ? 'angle-down' : 'angle-right'} aria-hidden=\"true\" className={styles.icon} />\n          {label}\n        </button>\n\n        {open && <div className={styles.settingsWrapper}>{children}</div>}\n      </div>\n    </InlineSegmentGroup>\n  );\n};\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAGA,SAASC,IAAT,EAAeC,kBAAf,EAAmCC,SAAnC,QAAoD,aAApD;AAEA,SAASC,aAAT,QAA8B,UAA9B;;;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAuBC,MAAvB,KAA2C;EAC3D,OAAO;IACLC,OAAO,EAAEX,GAAI;AACjB;AACA;AACA;AACA,KALS;IAMLY,eAAe,EAAEZ,GAAI;AACzB,qBAAqBS,KAAK,CAACI,OAAN,CAAc,GAAd,CAAmB;AACxC,KARS;IASLC,IAAI,EAAEd,GAAI;AACd,sBAAsBS,KAAK,CAACI,OAAN,CAAc,GAAd,CAAmB;AACzC,KAXS;IAYLE,MAAM,EAAEf,GAAI;AAChB;AACA,QAAQU,MAAM,IACRV,GAAI;AACV,iBAAiBS,KAAK,CAACO,MAAN,CAAaC,IAAb,CAAkBC,QAAS;AAC5C,OAAQ;AACR;EAlBS,CAAP;AAoBD,CArBD;;AA4BA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBX,MAAM,GAAG;AAA5B,CAAD,KAAmE;EACxG,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAMM,KAAK,GAAGH,SAAS,EAAvB;EACA,MAAMkB,MAAM,GAAGhB,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAxB;EAEA,oBACE,KAAC,kBAAD;IAAA,uBACE;MAAK,SAAS,EAAET,EAAE,CAACuB,MAAM,CAACb,OAAR,CAAlB;MAAA,wBACE;QACE,SAAS,EAAEV,EAAE,CAAC,0BAAD,EAA6BuB,MAAM,CAACT,MAApC,EAA4CR,aAA5C,CADf;QAEE,OAAO,EAAE,MAAMgB,OAAO,CAAC,CAACD,IAAF,CAFxB;QAGE,iBAAeA,IAHjB;QAAA,wBAKE,KAAC,IAAD;UAAM,IAAI,EAAEA,IAAI,GAAG,YAAH,GAAkB,aAAlC;UAAiD,eAAY,MAA7D;UAAoE,SAAS,EAAEE,MAAM,CAACV;QAAtF,EALF,EAMGM,KANH;MAAA,EADF,EAUGE,IAAI,iBAAI;QAAK,SAAS,EAAEE,MAAM,CAACZ,eAAvB;QAAA,UAAyCS;MAAzC,EAVX;IAAA;EADF,EADF;AAgBD,CAtBM"},"metadata":{},"sourceType":"module"}