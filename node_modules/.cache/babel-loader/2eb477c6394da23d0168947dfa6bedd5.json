{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { BackgroundImageSize, canvasElementRegistry } from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { HorizontalConstraint, VerticalConstraint } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet counter = 0;\nexport class ElementState {\n  // UID necessary for moveable to work (for now)\n  // Determine whether or not element is in motion or not (via moveable)\n  // Temp stored constraint for visualization purposes (switch to top / left constraint to simplify some functionality)\n  // Filled in by ref\n  // Calculated\n  // depends on the type\n  constructor(item, options, parent) {\n    var _options$constraint, _options$placement;\n\n    _defineProperty(this, \"UID\", counter++);\n\n    _defineProperty(this, \"revId\", 0);\n\n    _defineProperty(this, \"sizeStyle\", {});\n\n    _defineProperty(this, \"dataStyle\", {});\n\n    _defineProperty(this, \"isMoving\", false);\n\n    _defineProperty(this, \"tempConstraint\", void 0);\n\n    _defineProperty(this, \"div\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"initElement\", target => {\n      this.div = target;\n      this.applyLayoutStylesToDiv();\n    });\n\n    _defineProperty(this, \"applyDrag\", event => {\n      var _this$options$constra, _this$options$constra2;\n\n      const hasHorizontalCenterConstraint = ((_this$options$constra = this.options.constraint) === null || _this$options$constra === void 0 ? void 0 : _this$options$constra.horizontal) === HorizontalConstraint.Center;\n      const hasVerticalCenterConstraint = ((_this$options$constra2 = this.options.constraint) === null || _this$options$constra2 === void 0 ? void 0 : _this$options$constra2.vertical) === VerticalConstraint.Center;\n\n      if (hasHorizontalCenterConstraint || hasVerticalCenterConstraint) {\n        var _this$getScene$select, _this$getScene, _this$getScene$select2;\n\n        const numberOfTargets = (_this$getScene$select = (_this$getScene = this.getScene()) === null || _this$getScene === void 0 ? void 0 : (_this$getScene$select2 = _this$getScene.selecto) === null || _this$getScene$select2 === void 0 ? void 0 : _this$getScene$select2.getSelectedTargets().length) !== null && _this$getScene$select !== void 0 ? _this$getScene$select : 0;\n        const isMultiSelection = numberOfTargets > 1;\n\n        if (!isMultiSelection) {\n          var _this$div, _elementContainer$hei;\n\n          const elementContainer = (_this$div = this.div) === null || _this$div === void 0 ? void 0 : _this$div.getBoundingClientRect();\n          const height = (_elementContainer$hei = elementContainer === null || elementContainer === void 0 ? void 0 : elementContainer.height) !== null && _elementContainer$hei !== void 0 ? _elementContainer$hei : 100;\n          const yOffset = hasVerticalCenterConstraint ? height / 4 : 0;\n          event.target.style.transform = `translate(${event.translate[0]}px, ${event.translate[1] - yOffset}px)`;\n          return;\n        }\n      }\n\n      event.target.style.transform = event.transform;\n    });\n\n    _defineProperty(this, \"applyResize\", event => {\n      const placement = this.options.placement;\n      const style = event.target.style;\n      const deltaX = event.delta[0];\n      const deltaY = event.delta[1];\n      const dirLR = event.direction[0];\n      const dirTB = event.direction[1];\n\n      if (dirLR === 1) {\n        placement.width = event.width;\n        style.width = `${placement.width}px`;\n      } else if (dirLR === -1) {\n        placement.left -= deltaX;\n        placement.width = event.width;\n        style.left = `${placement.left}px`;\n        style.width = `${placement.width}px`;\n      }\n\n      if (dirTB === -1) {\n        placement.top -= deltaY;\n        placement.height = event.height;\n        style.top = `${placement.top}px`;\n        style.height = `${placement.height}px`;\n      } else if (dirTB === 1) {\n        placement.height = event.height;\n        style.height = `${placement.height}px`;\n      }\n    });\n\n    this.item = item;\n    this.options = options;\n    this.parent = parent;\n    const fallbackName = `Element ${Date.now()}`;\n\n    if (!options) {\n      this.options = {\n        type: item.id,\n        name: fallbackName\n      };\n    }\n\n    options.constraint = (_options$constraint = options.constraint) !== null && _options$constraint !== void 0 ? _options$constraint : {\n      vertical: VerticalConstraint.Top,\n      horizontal: HorizontalConstraint.Left\n    };\n    options.placement = (_options$placement = options.placement) !== null && _options$placement !== void 0 ? _options$placement : {\n      width: 100,\n      height: 100,\n      top: 0,\n      left: 0\n    };\n    const scene = this.getScene();\n\n    if (!options.name) {\n      const newName = scene === null || scene === void 0 ? void 0 : scene.getNextElementName();\n      options.name = newName !== null && newName !== void 0 ? newName : fallbackName;\n    }\n\n    scene === null || scene === void 0 ? void 0 : scene.byName.set(options.name, this);\n  }\n\n  getScene() {\n    let trav = this.parent;\n\n    while (trav) {\n      if (trav.isRoot()) {\n        return trav.scene;\n      }\n\n      trav = trav.parent;\n    }\n\n    return undefined;\n  }\n\n  getName() {\n    return this.options.name;\n  }\n  /** Use the configured options to update CSS style properties directly on the wrapper div **/\n\n\n  applyLayoutStylesToDiv() {\n    var _this$options$placeme, _placement$top, _placement$height, _placement$bottom, _placement$height2, _placement$top2, _placement$bottom2, _placement$top3, _placement$height3, _placement$top4, _placement$bottom3, _placement$left, _placement$width, _placement$right, _placement$width2, _placement$left2, _placement$right2, _placement$left3, _placement$width3, _placement$left4, _placement$right3;\n\n    if (this.isRoot()) {\n      // Root supersedes layout engine and is always 100% width + height of panel\n      return;\n    }\n\n    const {\n      constraint\n    } = this.options;\n    const {\n      vertical,\n      horizontal\n    } = constraint !== null && constraint !== void 0 ? constraint : {};\n    const placement = (_this$options$placeme = this.options.placement) !== null && _this$options$placeme !== void 0 ? _this$options$placeme : {};\n    const style = {\n      position: 'absolute',\n      // Minimum element size is 10x10\n      minWidth: '10px',\n      minHeight: '10px'\n    };\n    const translate = ['0px', '0px'];\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = (_placement$top = placement.top) !== null && _placement$top !== void 0 ? _placement$top : 0;\n        placement.height = (_placement$height = placement.height) !== null && _placement$height !== void 0 ? _placement$height : 100;\n        style.top = `${placement.top}px`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n\n      case VerticalConstraint.Bottom:\n        placement.bottom = (_placement$bottom = placement.bottom) !== null && _placement$bottom !== void 0 ? _placement$bottom : 0;\n        placement.height = (_placement$height2 = placement.height) !== null && _placement$height2 !== void 0 ? _placement$height2 : 100;\n        style.bottom = `${placement.bottom}px`;\n        style.height = `${placement.height}px`;\n        delete placement.top;\n        break;\n\n      case VerticalConstraint.TopBottom:\n        placement.top = (_placement$top2 = placement.top) !== null && _placement$top2 !== void 0 ? _placement$top2 : 0;\n        placement.bottom = (_placement$bottom2 = placement.bottom) !== null && _placement$bottom2 !== void 0 ? _placement$bottom2 : 0;\n        style.top = `${placement.top}px`;\n        style.bottom = `${placement.bottom}px`;\n        delete placement.height;\n        style.height = '';\n        break;\n\n      case VerticalConstraint.Center:\n        placement.top = (_placement$top3 = placement.top) !== null && _placement$top3 !== void 0 ? _placement$top3 : 0;\n        placement.height = (_placement$height3 = placement.height) !== null && _placement$height3 !== void 0 ? _placement$height3 : 100;\n        translate[1] = '-50%';\n        style.top = `calc(50% - ${placement.top}px)`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n\n      case VerticalConstraint.Scale:\n        placement.top = (_placement$top4 = placement.top) !== null && _placement$top4 !== void 0 ? _placement$top4 : 0;\n        placement.bottom = (_placement$bottom3 = placement.bottom) !== null && _placement$bottom3 !== void 0 ? _placement$bottom3 : 0;\n        style.top = `${placement.top}%`;\n        style.bottom = `${placement.bottom}%`;\n        delete placement.height;\n        style.height = '';\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = (_placement$left = placement.left) !== null && _placement$left !== void 0 ? _placement$left : 0;\n        placement.width = (_placement$width = placement.width) !== null && _placement$width !== void 0 ? _placement$width : 100;\n        style.left = `${placement.left}px`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n\n      case HorizontalConstraint.Right:\n        placement.right = (_placement$right = placement.right) !== null && _placement$right !== void 0 ? _placement$right : 0;\n        placement.width = (_placement$width2 = placement.width) !== null && _placement$width2 !== void 0 ? _placement$width2 : 100;\n        style.right = `${placement.right}px`;\n        style.width = `${placement.width}px`;\n        delete placement.left;\n        break;\n\n      case HorizontalConstraint.LeftRight:\n        placement.left = (_placement$left2 = placement.left) !== null && _placement$left2 !== void 0 ? _placement$left2 : 0;\n        placement.right = (_placement$right2 = placement.right) !== null && _placement$right2 !== void 0 ? _placement$right2 : 0;\n        style.left = `${placement.left}px`;\n        style.right = `${placement.right}px`;\n        delete placement.width;\n        style.width = '';\n        break;\n\n      case HorizontalConstraint.Center:\n        placement.left = (_placement$left3 = placement.left) !== null && _placement$left3 !== void 0 ? _placement$left3 : 0;\n        placement.width = (_placement$width3 = placement.width) !== null && _placement$width3 !== void 0 ? _placement$width3 : 100;\n        translate[0] = '-50%';\n        style.left = `calc(50% - ${placement.left}px)`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n\n      case HorizontalConstraint.Scale:\n        placement.left = (_placement$left4 = placement.left) !== null && _placement$left4 !== void 0 ? _placement$left4 : 0;\n        placement.right = (_placement$right3 = placement.right) !== null && _placement$right3 !== void 0 ? _placement$right3 : 0;\n        style.left = `${placement.left}%`;\n        style.right = `${placement.right}%`;\n        delete placement.width;\n        style.width = '';\n        break;\n    }\n\n    style.transform = `translate(${translate[0]}, ${translate[1]})`;\n    this.options.placement = placement;\n    this.sizeStyle = style;\n\n    if (this.div) {\n      for (const key in this.sizeStyle) {\n        this.div.style[key] = this.sizeStyle[key];\n      }\n\n      for (const key in this.dataStyle) {\n        this.div.style[key] = this.dataStyle[key];\n      }\n    }\n  }\n\n  setPlacementFromConstraint(elementContainer, parentContainer) {\n    var _elementContainer$wid, _elementContainer, _elementContainer$hei2, _elementContainer2, _parentContainer$heig, _parentContainer, _parentContainer$heig2, _parentContainer2, _parentContainer$widt, _parentContainer3, _parentContainer$widt2, _parentContainer4;\n\n    const {\n      constraint\n    } = this.options;\n    const {\n      vertical,\n      horizontal\n    } = constraint !== null && constraint !== void 0 ? constraint : {};\n\n    if (!elementContainer) {\n      elementContainer = this.div && this.div.getBoundingClientRect();\n    }\n\n    if (!parentContainer) {\n      var _this$div$parentEleme;\n\n      parentContainer = this.div && ((_this$div$parentEleme = this.div.parentElement) === null || _this$div$parentEleme === void 0 ? void 0 : _this$div$parentEleme.getBoundingClientRect());\n    }\n\n    const relativeTop = elementContainer && parentContainer ? Math.round(elementContainer.top - parentContainer.top) : 0;\n    const relativeBottom = elementContainer && parentContainer ? Math.round(parentContainer.bottom - elementContainer.bottom) : 0;\n    const relativeLeft = elementContainer && parentContainer ? Math.round(elementContainer.left - parentContainer.left) : 0;\n    const relativeRight = elementContainer && parentContainer ? Math.round(parentContainer.right - elementContainer.right) : 0;\n    const placement = {};\n    const width = (_elementContainer$wid = (_elementContainer = elementContainer) === null || _elementContainer === void 0 ? void 0 : _elementContainer.width) !== null && _elementContainer$wid !== void 0 ? _elementContainer$wid : 100;\n    const height = (_elementContainer$hei2 = (_elementContainer2 = elementContainer) === null || _elementContainer2 === void 0 ? void 0 : _elementContainer2.height) !== null && _elementContainer$hei2 !== void 0 ? _elementContainer$hei2 : 100;\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = relativeTop;\n        placement.height = height;\n        break;\n\n      case VerticalConstraint.Bottom:\n        placement.bottom = relativeBottom;\n        placement.height = height;\n        break;\n\n      case VerticalConstraint.TopBottom:\n        placement.top = relativeTop;\n        placement.bottom = relativeBottom;\n        break;\n\n      case VerticalConstraint.Center:\n        const elementCenter = elementContainer ? relativeTop + height / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.height / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.top = distanceFromCenter;\n        placement.height = height;\n        break;\n\n      case VerticalConstraint.Scale:\n        placement.top = relativeTop / ((_parentContainer$heig = (_parentContainer = parentContainer) === null || _parentContainer === void 0 ? void 0 : _parentContainer.height) !== null && _parentContainer$heig !== void 0 ? _parentContainer$heig : height) * 100;\n        placement.bottom = relativeBottom / ((_parentContainer$heig2 = (_parentContainer2 = parentContainer) === null || _parentContainer2 === void 0 ? void 0 : _parentContainer2.height) !== null && _parentContainer$heig2 !== void 0 ? _parentContainer$heig2 : height) * 100;\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = relativeLeft;\n        placement.width = width;\n        break;\n\n      case HorizontalConstraint.Right:\n        placement.right = relativeRight;\n        placement.width = width;\n        break;\n\n      case HorizontalConstraint.LeftRight:\n        placement.left = relativeLeft;\n        placement.right = relativeRight;\n        break;\n\n      case HorizontalConstraint.Center:\n        const elementCenter = elementContainer ? relativeLeft + width / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.width / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.left = distanceFromCenter;\n        placement.width = width;\n        break;\n\n      case HorizontalConstraint.Scale:\n        placement.left = relativeLeft / ((_parentContainer$widt = (_parentContainer3 = parentContainer) === null || _parentContainer3 === void 0 ? void 0 : _parentContainer3.width) !== null && _parentContainer$widt !== void 0 ? _parentContainer$widt : width) * 100;\n        placement.right = relativeRight / ((_parentContainer$widt2 = (_parentContainer4 = parentContainer) === null || _parentContainer4 === void 0 ? void 0 : _parentContainer4.width) !== null && _parentContainer$widt2 !== void 0 ? _parentContainer$widt2 : width) * 100;\n        break;\n    }\n\n    this.options.placement = placement;\n    this.applyLayoutStylesToDiv();\n    this.revId++;\n  }\n\n  updateData(ctx) {\n    var _background$size;\n\n    if (this.item.prepareData) {\n      this.data = this.item.prepareData(ctx, this.options.config);\n      this.revId++; // rerender\n    }\n\n    const {\n      background,\n      border\n    } = this.options;\n    const css = {};\n\n    if (background) {\n      if (background.color) {\n        const color = ctx.getColor(background.color);\n        css.backgroundColor = color.value();\n      }\n\n      if (background.image) {\n        const image = ctx.getResource(background.image);\n\n        if (image) {\n          const v = image.value();\n\n          if (v) {\n            css.backgroundImage = `url(\"${v}\")`;\n\n            switch ((_background$size = background.size) !== null && _background$size !== void 0 ? _background$size : BackgroundImageSize.Contain) {\n              case BackgroundImageSize.Contain:\n                css.backgroundSize = 'contain';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n\n              case BackgroundImageSize.Cover:\n                css.backgroundSize = 'cover';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n\n              case BackgroundImageSize.Original:\n                css.backgroundRepeat = 'no-repeat';\n                break;\n\n              case BackgroundImageSize.Tile:\n                css.backgroundRepeat = 'repeat';\n                break;\n\n              case BackgroundImageSize.Fill:\n                css.backgroundSize = '100% 100%';\n                break;\n            }\n          }\n        }\n      }\n    }\n\n    if (border && border.color && border.width) {\n      const color = ctx.getColor(border.color);\n      css.borderWidth = border.width;\n      css.borderStyle = 'solid';\n      css.borderColor = color.value(); // Move the image to inside the border\n\n      if (css.backgroundImage) {\n        css.backgroundOrigin = 'padding-box';\n      }\n    }\n\n    this.dataStyle = css;\n    this.applyLayoutStylesToDiv();\n  }\n\n  isRoot() {\n    return false;\n  }\n  /** Recursively visit all nodes */\n\n\n  visit(visitor) {\n    visitor(this);\n  }\n\n  onChange(options) {\n    if (this.item.id !== options.type) {\n      var _canvasElementRegistr;\n\n      this.item = (_canvasElementRegistr = canvasElementRegistry.getIfExists(options.type)) !== null && _canvasElementRegistr !== void 0 ? _canvasElementRegistr : notFoundItem;\n    } // rename handling\n\n\n    const oldName = this.options.name;\n    const newName = options.name;\n    this.revId++;\n    this.options = Object.assign({}, options);\n    let trav = this.parent;\n\n    while (trav) {\n      if (trav.isRoot()) {\n        trav.scene.save();\n        break;\n      }\n\n      trav.revId++;\n      trav = trav.parent;\n    }\n\n    const scene = this.getScene();\n\n    if (oldName !== newName && scene) {\n      scene.byName.delete(oldName);\n      scene.byName.set(newName, this);\n    }\n  }\n\n  getSaveModel() {\n    return Object.assign({}, this.options);\n  }\n\n  render() {\n    const {\n      item\n    } = this;\n    return /*#__PURE__*/_jsx(\"div\", {\n      ref: this.initElement,\n      children: /*#__PURE__*/_jsx(item.display, {\n        config: this.options.config,\n        data: this.data\n      }, `${this.UID}/${this.revId}`)\n    }, this.UID);\n  }\n\n}","map":{"version":3,"names":["React","BackgroundImageSize","canvasElementRegistry","notFoundItem","HorizontalConstraint","VerticalConstraint","counter","ElementState","constructor","item","options","parent","target","div","applyLayoutStylesToDiv","event","hasHorizontalCenterConstraint","constraint","horizontal","Center","hasVerticalCenterConstraint","vertical","numberOfTargets","getScene","selecto","getSelectedTargets","length","isMultiSelection","elementContainer","getBoundingClientRect","height","yOffset","style","transform","translate","placement","deltaX","delta","deltaY","dirLR","direction","dirTB","width","left","top","fallbackName","Date","now","type","id","name","Top","Left","scene","newName","getNextElementName","byName","set","trav","isRoot","undefined","getName","position","minWidth","minHeight","bottom","Bottom","TopBottom","Scale","right","Right","LeftRight","sizeStyle","key","dataStyle","setPlacementFromConstraint","parentContainer","parentElement","relativeTop","Math","round","relativeBottom","relativeLeft","relativeRight","elementCenter","parentCenter","distanceFromCenter","revId","updateData","ctx","prepareData","data","config","background","border","css","color","getColor","backgroundColor","value","image","getResource","v","backgroundImage","size","Contain","backgroundSize","backgroundRepeat","Cover","Original","Tile","Fill","borderWidth","borderStyle","borderColor","backgroundOrigin","visit","visitor","onChange","getIfExists","oldName","save","delete","getSaveModel","render","initElement","UID"],"sources":["/home/soula/grafana/public/app/features/canvas/runtime/element.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react';\nimport { OnDrag, OnResize } from 'react-moveable/declaration/types';\n\nimport { LayerElement } from 'app/core/components/Layers/types';\nimport {\n  BackgroundImageSize,\n  CanvasElementItem,\n  CanvasElementOptions,\n  canvasElementRegistry,\n} from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { DimensionContext } from 'app/features/dimensions';\n\nimport { Constraint, HorizontalConstraint, Placement, VerticalConstraint } from '../types';\n\nimport { FrameState } from './frame';\nimport { RootElement } from './root';\nimport { Scene } from './scene';\n\nlet counter = 0;\n\nexport class ElementState implements LayerElement {\n  // UID necessary for moveable to work (for now)\n  readonly UID = counter++;\n  revId = 0;\n  sizeStyle: CSSProperties = {};\n  dataStyle: CSSProperties = {};\n\n  // Determine whether or not element is in motion or not (via moveable)\n  isMoving = false;\n\n  // Temp stored constraint for visualization purposes (switch to top / left constraint to simplify some functionality)\n  tempConstraint: Constraint | undefined;\n\n  // Filled in by ref\n  div?: HTMLDivElement;\n\n  // Calculated\n  data?: any; // depends on the type\n\n  constructor(public item: CanvasElementItem, public options: CanvasElementOptions, public parent?: FrameState) {\n    const fallbackName = `Element ${Date.now()}`;\n    if (!options) {\n      this.options = { type: item.id, name: fallbackName };\n    }\n\n    options.constraint = options.constraint ?? {\n      vertical: VerticalConstraint.Top,\n      horizontal: HorizontalConstraint.Left,\n    };\n    options.placement = options.placement ?? { width: 100, height: 100, top: 0, left: 0 };\n    const scene = this.getScene();\n    if (!options.name) {\n      const newName = scene?.getNextElementName();\n      options.name = newName ?? fallbackName;\n    }\n    scene?.byName.set(options.name, this);\n  }\n\n  private getScene(): Scene | undefined {\n    let trav = this.parent;\n    while (trav) {\n      if (trav.isRoot()) {\n        return trav.scene;\n      }\n      trav = trav.parent;\n    }\n\n    return undefined;\n  }\n\n  getName() {\n    return this.options.name;\n  }\n\n  /** Use the configured options to update CSS style properties directly on the wrapper div **/\n  applyLayoutStylesToDiv() {\n    if (this.isRoot()) {\n      // Root supersedes layout engine and is always 100% width + height of panel\n      return;\n    }\n\n    const { constraint } = this.options;\n    const { vertical, horizontal } = constraint ?? {};\n    const placement = this.options.placement ?? ({} as Placement);\n\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      // Minimum element size is 10x10\n      minWidth: '10px',\n      minHeight: '10px',\n    };\n\n    const translate = ['0px', '0px'];\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = placement.top ?? 0;\n        placement.height = placement.height ?? 100;\n        style.top = `${placement.top}px`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n      case VerticalConstraint.Bottom:\n        placement.bottom = placement.bottom ?? 0;\n        placement.height = placement.height ?? 100;\n        style.bottom = `${placement.bottom}px`;\n        style.height = `${placement.height}px`;\n        delete placement.top;\n        break;\n      case VerticalConstraint.TopBottom:\n        placement.top = placement.top ?? 0;\n        placement.bottom = placement.bottom ?? 0;\n        style.top = `${placement.top}px`;\n        style.bottom = `${placement.bottom}px`;\n        delete placement.height;\n        style.height = '';\n        break;\n      case VerticalConstraint.Center:\n        placement.top = placement.top ?? 0;\n        placement.height = placement.height ?? 100;\n        translate[1] = '-50%';\n        style.top = `calc(50% - ${placement.top}px)`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n      case VerticalConstraint.Scale:\n        placement.top = placement.top ?? 0;\n        placement.bottom = placement.bottom ?? 0;\n        style.top = `${placement.top}%`;\n        style.bottom = `${placement.bottom}%`;\n        delete placement.height;\n        style.height = '';\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = placement.left ?? 0;\n        placement.width = placement.width ?? 100;\n        style.left = `${placement.left}px`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n      case HorizontalConstraint.Right:\n        placement.right = placement.right ?? 0;\n        placement.width = placement.width ?? 100;\n        style.right = `${placement.right}px`;\n        style.width = `${placement.width}px`;\n        delete placement.left;\n        break;\n      case HorizontalConstraint.LeftRight:\n        placement.left = placement.left ?? 0;\n        placement.right = placement.right ?? 0;\n        style.left = `${placement.left}px`;\n        style.right = `${placement.right}px`;\n        delete placement.width;\n        style.width = '';\n        break;\n      case HorizontalConstraint.Center:\n        placement.left = placement.left ?? 0;\n        placement.width = placement.width ?? 100;\n        translate[0] = '-50%';\n        style.left = `calc(50% - ${placement.left}px)`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n      case HorizontalConstraint.Scale:\n        placement.left = placement.left ?? 0;\n        placement.right = placement.right ?? 0;\n        style.left = `${placement.left}%`;\n        style.right = `${placement.right}%`;\n        delete placement.width;\n        style.width = '';\n        break;\n    }\n\n    style.transform = `translate(${translate[0]}, ${translate[1]})`;\n    this.options.placement = placement;\n    this.sizeStyle = style;\n    if (this.div) {\n      for (const key in this.sizeStyle) {\n        this.div.style[key as any] = (this.sizeStyle as any)[key];\n      }\n\n      for (const key in this.dataStyle) {\n        this.div.style[key as any] = (this.dataStyle as any)[key];\n      }\n    }\n  }\n\n  setPlacementFromConstraint(elementContainer?: DOMRect, parentContainer?: DOMRect) {\n    const { constraint } = this.options;\n    const { vertical, horizontal } = constraint ?? {};\n\n    if (!elementContainer) {\n      elementContainer = this.div && this.div.getBoundingClientRect();\n    }\n    if (!parentContainer) {\n      parentContainer = this.div && this.div.parentElement?.getBoundingClientRect();\n    }\n\n    const relativeTop =\n      elementContainer && parentContainer ? Math.round(elementContainer.top - parentContainer.top) : 0;\n    const relativeBottom =\n      elementContainer && parentContainer ? Math.round(parentContainer.bottom - elementContainer.bottom) : 0;\n    const relativeLeft =\n      elementContainer && parentContainer ? Math.round(elementContainer.left - parentContainer.left) : 0;\n    const relativeRight =\n      elementContainer && parentContainer ? Math.round(parentContainer.right - elementContainer.right) : 0;\n\n    const placement = {} as Placement;\n\n    const width = elementContainer?.width ?? 100;\n    const height = elementContainer?.height ?? 100;\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = relativeTop;\n        placement.height = height;\n        break;\n      case VerticalConstraint.Bottom:\n        placement.bottom = relativeBottom;\n        placement.height = height;\n        break;\n      case VerticalConstraint.TopBottom:\n        placement.top = relativeTop;\n        placement.bottom = relativeBottom;\n        break;\n      case VerticalConstraint.Center:\n        const elementCenter = elementContainer ? relativeTop + height / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.height / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.top = distanceFromCenter;\n        placement.height = height;\n        break;\n      case VerticalConstraint.Scale:\n        placement.top = (relativeTop / (parentContainer?.height ?? height)) * 100;\n        placement.bottom = (relativeBottom / (parentContainer?.height ?? height)) * 100;\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = relativeLeft;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.Right:\n        placement.right = relativeRight;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.LeftRight:\n        placement.left = relativeLeft;\n        placement.right = relativeRight;\n        break;\n      case HorizontalConstraint.Center:\n        const elementCenter = elementContainer ? relativeLeft + width / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.width / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.left = distanceFromCenter;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.Scale:\n        placement.left = (relativeLeft / (parentContainer?.width ?? width)) * 100;\n        placement.right = (relativeRight / (parentContainer?.width ?? width)) * 100;\n        break;\n    }\n\n    this.options.placement = placement;\n\n    this.applyLayoutStylesToDiv();\n    this.revId++;\n  }\n\n  updateData(ctx: DimensionContext) {\n    if (this.item.prepareData) {\n      this.data = this.item.prepareData(ctx, this.options.config);\n      this.revId++; // rerender\n    }\n\n    const { background, border } = this.options;\n    const css: CSSProperties = {};\n    if (background) {\n      if (background.color) {\n        const color = ctx.getColor(background.color);\n        css.backgroundColor = color.value();\n      }\n      if (background.image) {\n        const image = ctx.getResource(background.image);\n        if (image) {\n          const v = image.value();\n          if (v) {\n            css.backgroundImage = `url(\"${v}\")`;\n            switch (background.size ?? BackgroundImageSize.Contain) {\n              case BackgroundImageSize.Contain:\n                css.backgroundSize = 'contain';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Cover:\n                css.backgroundSize = 'cover';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Original:\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Tile:\n                css.backgroundRepeat = 'repeat';\n                break;\n              case BackgroundImageSize.Fill:\n                css.backgroundSize = '100% 100%';\n                break;\n            }\n          }\n        }\n      }\n    }\n\n    if (border && border.color && border.width) {\n      const color = ctx.getColor(border.color);\n      css.borderWidth = border.width;\n      css.borderStyle = 'solid';\n      css.borderColor = color.value();\n\n      // Move the image to inside the border\n      if (css.backgroundImage) {\n        css.backgroundOrigin = 'padding-box';\n      }\n    }\n\n    this.dataStyle = css;\n    this.applyLayoutStylesToDiv();\n  }\n\n  isRoot(): this is RootElement {\n    return false;\n  }\n\n  /** Recursively visit all nodes */\n  visit(visitor: (v: ElementState) => void) {\n    visitor(this);\n  }\n\n  onChange(options: CanvasElementOptions) {\n    if (this.item.id !== options.type) {\n      this.item = canvasElementRegistry.getIfExists(options.type) ?? notFoundItem;\n    }\n\n    // rename handling\n    const oldName = this.options.name;\n    const newName = options.name;\n\n    this.revId++;\n    this.options = { ...options };\n    let trav = this.parent;\n    while (trav) {\n      if (trav.isRoot()) {\n        trav.scene.save();\n        break;\n      }\n      trav.revId++;\n      trav = trav.parent;\n    }\n\n    const scene = this.getScene();\n    if (oldName !== newName && scene) {\n      scene.byName.delete(oldName);\n      scene.byName.set(newName, this);\n    }\n  }\n\n  getSaveModel() {\n    return { ...this.options };\n  }\n\n  initElement = (target: HTMLDivElement) => {\n    this.div = target;\n    this.applyLayoutStylesToDiv();\n  };\n\n  applyDrag = (event: OnDrag) => {\n    const hasHorizontalCenterConstraint = this.options.constraint?.horizontal === HorizontalConstraint.Center;\n    const hasVerticalCenterConstraint = this.options.constraint?.vertical === VerticalConstraint.Center;\n    if (hasHorizontalCenterConstraint || hasVerticalCenterConstraint) {\n      const numberOfTargets = this.getScene()?.selecto?.getSelectedTargets().length ?? 0;\n      const isMultiSelection = numberOfTargets > 1;\n      if (!isMultiSelection) {\n        const elementContainer = this.div?.getBoundingClientRect();\n        const height = elementContainer?.height ?? 100;\n        const yOffset = hasVerticalCenterConstraint ? height / 4 : 0;\n        event.target.style.transform = `translate(${event.translate[0]}px, ${event.translate[1] - yOffset}px)`;\n        return;\n      }\n    }\n\n    event.target.style.transform = event.transform;\n  };\n\n  // kinda like:\n  // https://github.com/grafana/grafana-edge-app/blob/main/src/panels/draw/WrapItem.tsx#L44\n  applyResize = (event: OnResize) => {\n    const placement = this.options.placement!;\n\n    const style = event.target.style;\n    const deltaX = event.delta[0];\n    const deltaY = event.delta[1];\n    const dirLR = event.direction[0];\n    const dirTB = event.direction[1];\n\n    if (dirLR === 1) {\n      placement.width = event.width;\n      style.width = `${placement.width}px`;\n    } else if (dirLR === -1) {\n      placement.left! -= deltaX;\n      placement.width = event.width;\n      style.left = `${placement.left}px`;\n      style.width = `${placement.width}px`;\n    }\n\n    if (dirTB === -1) {\n      placement.top! -= deltaY;\n      placement.height = event.height;\n      style.top = `${placement.top}px`;\n      style.height = `${placement.height}px`;\n    } else if (dirTB === 1) {\n      placement.height = event.height;\n      style.height = `${placement.height}px`;\n    }\n  };\n\n  render() {\n    const { item } = this;\n    return (\n      <div key={this.UID} ref={this.initElement}>\n        <item.display key={`${this.UID}/${this.revId}`} config={this.options.config} data={this.data} />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}