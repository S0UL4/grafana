{"ast":null,"code":"import { scaledUnits } from './valueFormats';\nexport function currency(symbol, asSuffix) {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size, decimals, scaledDecimals) => {\n    if (size === null) {\n      return {\n        text: ''\n      };\n    }\n\n    const scaled = scaler(size, decimals, scaledDecimals);\n\n    if (asSuffix) {\n      scaled.suffix = scaled.suffix !== undefined ? `${scaled.suffix}${symbol}` : undefined;\n    } else {\n      scaled.prefix = symbol;\n    }\n\n    return scaled;\n  };\n}\nconst SI_PREFIXES = ['f', 'p', 'n', 'µ', 'm', '', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nconst SI_BASE_INDEX = SI_PREFIXES.indexOf('');\nexport function getOffsetFromSIPrefix(c) {\n  const charIndex = SI_PREFIXES.findIndex(prefix => prefix.normalize('NFKD') === c.normalize('NFKD'));\n  return charIndex < 0 ? 0 : charIndex - SI_BASE_INDEX;\n}\nconst BIN_PREFIXES = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\nexport function binaryPrefix(unit, offset = 0) {\n  const units = BIN_PREFIXES.map(p => ' ' + p + unit);\n  return scaledUnits(1024, units, offset);\n}\nexport function SIPrefix(unit, offset = 0) {\n  const units = SI_PREFIXES.map(p => ' ' + p + unit);\n  return scaledUnits(1000, units, SI_BASE_INDEX + offset);\n}","map":{"version":3,"names":["scaledUnits","currency","symbol","asSuffix","units","scaler","size","decimals","scaledDecimals","text","scaled","suffix","undefined","prefix","SI_PREFIXES","SI_BASE_INDEX","indexOf","getOffsetFromSIPrefix","c","charIndex","findIndex","normalize","BIN_PREFIXES","binaryPrefix","unit","offset","map","p","SIPrefix"],"sources":["/home/soula/grafana/packages/grafana-data/src/valueFormats/symbolFormatters.ts"],"sourcesContent":["import { DecimalCount } from '../types/displayValue';\n\nimport { scaledUnits, ValueFormatter } from './valueFormats';\n\nexport function currency(symbol: string, asSuffix?: boolean): ValueFormatter {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return { text: '' };\n    }\n    const scaled = scaler(size, decimals, scaledDecimals);\n    if (asSuffix) {\n      scaled.suffix = scaled.suffix !== undefined ? `${scaled.suffix}${symbol}` : undefined;\n    } else {\n      scaled.prefix = symbol;\n    }\n    return scaled;\n  };\n}\n\nconst SI_PREFIXES = ['f', 'p', 'n', 'µ', 'm', '', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nconst SI_BASE_INDEX = SI_PREFIXES.indexOf('');\n\nexport function getOffsetFromSIPrefix(c: string): number {\n  const charIndex = SI_PREFIXES.findIndex((prefix) => prefix.normalize('NFKD') === c.normalize('NFKD'));\n  return charIndex < 0 ? 0 : charIndex - SI_BASE_INDEX;\n}\n\nconst BIN_PREFIXES = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\n\nexport function binaryPrefix(unit: string, offset = 0): ValueFormatter {\n  const units = BIN_PREFIXES.map((p) => ' ' + p + unit);\n  return scaledUnits(1024, units, offset);\n}\n\nexport function SIPrefix(unit: string, offset = 0): ValueFormatter {\n  const units = SI_PREFIXES.map((p) => ' ' + p + unit);\n  return scaledUnits(1000, units, SI_BASE_INDEX + offset);\n}\n"],"mappings":"AAEA,SAASA,WAAT,QAA4C,gBAA5C;AAEA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAAkCC,QAAlC,EAAsE;EAC3E,MAAMC,KAAK,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAAd;EACA,MAAMC,MAAM,GAAGL,WAAW,CAAC,IAAD,EAAOI,KAAP,CAA1B;EACA,OAAO,CAACE,IAAD,EAAeC,QAAf,EAAwCC,cAAxC,KAA0E;IAC/E,IAAIF,IAAI,KAAK,IAAb,EAAmB;MACjB,OAAO;QAAEG,IAAI,EAAE;MAAR,CAAP;IACD;;IACD,MAAMC,MAAM,GAAGL,MAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,cAAjB,CAArB;;IACA,IAAIL,QAAJ,EAAc;MACZO,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,KAAkBC,SAAlB,GAA+B,GAAEF,MAAM,CAACC,MAAO,GAAET,MAAO,EAAxD,GAA4DU,SAA5E;IACD,CAFD,MAEO;MACLF,MAAM,CAACG,MAAP,GAAgBX,MAAhB;IACD;;IACD,OAAOQ,MAAP;EACD,CAXD;AAYD;AAED,MAAMI,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,EAA1B,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE,CAApB;AACA,MAAMC,aAAa,GAAGD,WAAW,CAACE,OAAZ,CAAoB,EAApB,CAAtB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,CAA/B,EAAkD;EACvD,MAAMC,SAAS,GAAGL,WAAW,CAACM,SAAZ,CAAuBP,MAAD,IAAYA,MAAM,CAACQ,SAAP,CAAiB,MAAjB,MAA6BH,CAAC,CAACG,SAAF,CAAY,MAAZ,CAA/D,CAAlB;EACA,OAAOF,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoBA,SAAS,GAAGJ,aAAvC;AACD;AAED,MAAMO,YAAY,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAA/C,CAArB;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAAoCC,MAAM,GAAG,CAA7C,EAAgE;EACrE,MAAMrB,KAAK,GAAGkB,YAAY,CAACI,GAAb,CAAkBC,CAAD,IAAO,MAAMA,CAAN,GAAUH,IAAlC,CAAd;EACA,OAAOxB,WAAW,CAAC,IAAD,EAAOI,KAAP,EAAcqB,MAAd,CAAlB;AACD;AAED,OAAO,SAASG,QAAT,CAAkBJ,IAAlB,EAAgCC,MAAM,GAAG,CAAzC,EAA4D;EACjE,MAAMrB,KAAK,GAAGU,WAAW,CAACY,GAAZ,CAAiBC,CAAD,IAAO,MAAMA,CAAN,GAAUH,IAAjC,CAAd;EACA,OAAOxB,WAAW,CAAC,IAAD,EAAOI,KAAP,EAAcW,aAAa,GAAGU,MAA9B,CAAlB;AACD"},"metadata":{},"sourceType":"module"}