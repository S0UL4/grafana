{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { stylesFactory } from '@grafana/ui';\nimport DraggableManager from '../../utils/DraggableManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const getStyles = stylesFactory(() => {\n  return {\n    TimelineColumnResizer: css`\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n    `,\n    wrapper: css`\n      bottom: 0;\n      position: absolute;\n      top: 0;\n    `,\n    dragger: css`\n      border-left: 2px solid transparent;\n      cursor: col-resize;\n      height: 5000px;\n      margin-left: -1px;\n      position: absolute;\n      top: 0;\n      width: 1px;\n      z-index: 10;\n      &:hover {\n        border-left: 2px solid rgba(0, 0, 0, 0.3);\n      }\n      &::before {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: -8px;\n        right: 0;\n        content: ' ';\n      }\n    `,\n    draggerDragging: css`\n      background: rgba(136, 0, 136, 0.05);\n      width: unset;\n      &::before {\n        left: -2000px;\n        right: -2000px;\n      }\n    `,\n    draggerDraggingLeft: css`\n      border-left: 2px solid #808;\n      border-right: 1px solid #999;\n    `,\n    draggerDraggingRight: css`\n      border-left: 1px solid #999;\n      border-right: 2px solid #808;\n    `,\n    gripIcon: css`\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      &::before,\n      &::after {\n        border-right: 1px solid #ccc;\n        content: ' ';\n        height: 9px;\n        position: absolute;\n        right: 9px;\n        top: 25px;\n      }\n      &::after {\n        right: 5px;\n      }\n    `,\n    gripIconDragging: css`\n      &::before,\n      &::after {\n        border-right: 1px solid rgba(136, 0, 136, 0.5);\n      }\n    `\n  };\n});\nexport default class TimelineColumnResizer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"_dragManager\", void 0);\n\n    _defineProperty(this, \"_rootElm\", void 0);\n\n    _defineProperty(this, \"_setRootElm\", elm => {\n      this._rootElm = elm;\n    });\n\n    _defineProperty(this, \"_getDraggingBounds\", () => {\n      if (!this._rootElm) {\n        throw new Error('invalid state');\n      }\n\n      const {\n        left: clientXLeft,\n        width\n      } = this._rootElm.getBoundingClientRect();\n\n      const {\n        min,\n        max\n      } = this.props;\n      return {\n        clientXLeft,\n        width,\n        maxValue: max,\n        minValue: min\n      };\n    });\n\n    _defineProperty(this, \"_handleDragUpdate\", ({\n      value\n    }) => {\n      this.setState({\n        dragPosition: value\n      });\n    });\n\n    _defineProperty(this, \"_handleDragEnd\", ({\n      manager,\n      value\n    }) => {\n      manager.resetBounds();\n      this.setState({\n        dragPosition: null\n      });\n      this.props.onChange(value);\n    });\n\n    this._dragManager = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleDragEnd,\n      onDragMove: this._handleDragUpdate,\n      onDragStart: this._handleDragUpdate\n    });\n    this._rootElm = undefined;\n    this.state = {\n      dragPosition: null\n    };\n  }\n\n  componentWillUnmount() {\n    this._dragManager.dispose();\n  }\n\n  render() {\n    let left;\n    let draggerStyle;\n    const {\n      position,\n      columnResizeHandleHeight\n    } = this.props;\n    const {\n      dragPosition\n    } = this.state;\n    left = `${position * 100}%`;\n    const gripStyle = {\n      left\n    };\n    let isDraggingLeft = false;\n    let isDraggingRight = false;\n    const styles = getStyles();\n\n    if (this._dragManager.isDragging() && this._rootElm && dragPosition != null) {\n      isDraggingLeft = dragPosition < position;\n      isDraggingRight = dragPosition > position;\n      left = `${dragPosition * 100}%`; // Draw a highlight from the current dragged position back to the original\n      // position, e.g. highlight the change. Draw the highlight via `left` and\n      // `right` css styles (simpler than using `width`).\n\n      const draggerLeft = `${Math.min(position, dragPosition) * 100}%`; // subtract 1px for draggerRight to deal with the right border being off\n      // by 1px when dragging left\n\n      const draggerRight = `calc(${(1 - Math.max(position, dragPosition)) * 100}% - 1px)`;\n      draggerStyle = {\n        left: draggerLeft,\n        right: draggerRight\n      };\n    } else {\n      draggerStyle = gripStyle;\n    }\n\n    draggerStyle.height = columnResizeHandleHeight;\n    const isDragging = isDraggingLeft || isDraggingRight;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.TimelineColumnResizer,\n      ref: this._setRootElm,\n      \"data-test-id\": \"TimelineColumnResizer\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: cx(styles.gripIcon, isDragging && styles.gripIconDragging),\n        style: gripStyle,\n        \"data-test-id\": \"TimelineColumnResizer--gripIcon\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        \"aria-hidden\": true,\n        className: cx(styles.dragger, isDragging && styles.draggerDragging, isDraggingRight && styles.draggerDraggingRight, isDraggingLeft && styles.draggerDraggingLeft),\n        onMouseDown: this._dragManager.handleMouseDown,\n        style: draggerStyle,\n        \"data-test-id\": \"TimelineColumnResizer--dragger\"\n      })]\n    });\n  }\n\n}","map":{"version":3,"names":["css","cx","React","stylesFactory","DraggableManager","getStyles","TimelineColumnResizer","wrapper","dragger","draggerDragging","draggerDraggingLeft","draggerDraggingRight","gripIcon","gripIconDragging","PureComponent","constructor","props","elm","_rootElm","Error","left","clientXLeft","width","getBoundingClientRect","min","max","maxValue","minValue","value","setState","dragPosition","manager","resetBounds","onChange","_dragManager","getBounds","_getDraggingBounds","onDragEnd","_handleDragEnd","onDragMove","_handleDragUpdate","onDragStart","undefined","state","componentWillUnmount","dispose","render","draggerStyle","position","columnResizeHandleHeight","gripStyle","isDraggingLeft","isDraggingRight","styles","isDragging","draggerLeft","Math","draggerRight","right","height","_setRootElm","handleMouseDown"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/TimelineHeaderRow/TimelineColumnResizer.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { stylesFactory } from '@grafana/ui';\n\nimport { TNil } from '../../types';\nimport DraggableManager, { DraggableBounds, DraggingUpdate } from '../../utils/DraggableManager';\n\nexport const getStyles = stylesFactory(() => {\n  return {\n    TimelineColumnResizer: css`\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n    `,\n    wrapper: css`\n      bottom: 0;\n      position: absolute;\n      top: 0;\n    `,\n    dragger: css`\n      border-left: 2px solid transparent;\n      cursor: col-resize;\n      height: 5000px;\n      margin-left: -1px;\n      position: absolute;\n      top: 0;\n      width: 1px;\n      z-index: 10;\n      &:hover {\n        border-left: 2px solid rgba(0, 0, 0, 0.3);\n      }\n      &::before {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: -8px;\n        right: 0;\n        content: ' ';\n      }\n    `,\n    draggerDragging: css`\n      background: rgba(136, 0, 136, 0.05);\n      width: unset;\n      &::before {\n        left: -2000px;\n        right: -2000px;\n      }\n    `,\n    draggerDraggingLeft: css`\n      border-left: 2px solid #808;\n      border-right: 1px solid #999;\n    `,\n    draggerDraggingRight: css`\n      border-left: 1px solid #999;\n      border-right: 2px solid #808;\n    `,\n    gripIcon: css`\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      &::before,\n      &::after {\n        border-right: 1px solid #ccc;\n        content: ' ';\n        height: 9px;\n        position: absolute;\n        right: 9px;\n        top: 25px;\n      }\n      &::after {\n        right: 5px;\n      }\n    `,\n    gripIconDragging: css`\n      &::before,\n      &::after {\n        border-right: 1px solid rgba(136, 0, 136, 0.5);\n      }\n    `,\n  };\n});\n\ntype TimelineColumnResizerProps = {\n  min: number;\n  max: number;\n  onChange: (newSize: number) => void;\n  position: number;\n  columnResizeHandleHeight: number;\n};\n\ntype TimelineColumnResizerState = {\n  dragPosition: number | TNil;\n};\n\nexport default class TimelineColumnResizer extends React.PureComponent<\n  TimelineColumnResizerProps,\n  TimelineColumnResizerState\n> {\n  state: TimelineColumnResizerState;\n\n  _dragManager: DraggableManager;\n  _rootElm: Element | TNil;\n\n  constructor(props: TimelineColumnResizerProps) {\n    super(props);\n    this._dragManager = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleDragEnd,\n      onDragMove: this._handleDragUpdate,\n      onDragStart: this._handleDragUpdate,\n    });\n    this._rootElm = undefined;\n    this.state = {\n      dragPosition: null,\n    };\n  }\n\n  componentWillUnmount() {\n    this._dragManager.dispose();\n  }\n\n  _setRootElm = (elm: Element | TNil) => {\n    this._rootElm = elm;\n  };\n\n  _getDraggingBounds = (): DraggableBounds => {\n    if (!this._rootElm) {\n      throw new Error('invalid state');\n    }\n    const { left: clientXLeft, width } = this._rootElm.getBoundingClientRect();\n    const { min, max } = this.props;\n    return {\n      clientXLeft,\n      width,\n      maxValue: max,\n      minValue: min,\n    };\n  };\n\n  _handleDragUpdate = ({ value }: DraggingUpdate) => {\n    this.setState({ dragPosition: value });\n  };\n\n  _handleDragEnd = ({ manager, value }: DraggingUpdate) => {\n    manager.resetBounds();\n    this.setState({ dragPosition: null });\n    this.props.onChange(value);\n  };\n\n  render() {\n    let left;\n    let draggerStyle: React.CSSProperties;\n    const { position, columnResizeHandleHeight } = this.props;\n    const { dragPosition } = this.state;\n    left = `${position * 100}%`;\n    const gripStyle = { left };\n    let isDraggingLeft = false;\n    let isDraggingRight = false;\n    const styles = getStyles();\n\n    if (this._dragManager.isDragging() && this._rootElm && dragPosition != null) {\n      isDraggingLeft = dragPosition < position;\n      isDraggingRight = dragPosition > position;\n      left = `${dragPosition * 100}%`;\n      // Draw a highlight from the current dragged position back to the original\n      // position, e.g. highlight the change. Draw the highlight via `left` and\n      // `right` css styles (simpler than using `width`).\n      const draggerLeft = `${Math.min(position, dragPosition) * 100}%`;\n      // subtract 1px for draggerRight to deal with the right border being off\n      // by 1px when dragging left\n      const draggerRight = `calc(${(1 - Math.max(position, dragPosition)) * 100}% - 1px)`;\n      draggerStyle = { left: draggerLeft, right: draggerRight };\n    } else {\n      draggerStyle = gripStyle;\n    }\n    draggerStyle.height = columnResizeHandleHeight;\n\n    const isDragging = isDraggingLeft || isDraggingRight;\n    return (\n      <div className={styles.TimelineColumnResizer} ref={this._setRootElm} data-test-id=\"TimelineColumnResizer\">\n        <div\n          className={cx(styles.gripIcon, isDragging && styles.gripIconDragging)}\n          style={gripStyle}\n          data-test-id=\"TimelineColumnResizer--gripIcon\"\n        />\n        <div\n          aria-hidden\n          className={cx(\n            styles.dragger,\n            isDragging && styles.draggerDragging,\n            isDraggingRight && styles.draggerDraggingRight,\n            isDraggingLeft && styles.draggerDraggingLeft\n          )}\n          onMouseDown={this._dragManager.handleMouseDown}\n          style={draggerStyle}\n          data-test-id=\"TimelineColumnResizer--dragger\"\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}