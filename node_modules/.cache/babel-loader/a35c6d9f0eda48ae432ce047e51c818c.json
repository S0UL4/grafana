{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/packages/grafana-data/src/types/queryRunner.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nimport { ScopedVars } from './ScopedVars';\nimport { DataSourceApi } from './datasource';\nimport { PanelData } from './panel';\nimport { DataQuery, DataSourceRef } from './query';\nimport { TimeRange, TimeZone } from './time';\n\n/**\n * Describes the options used when triggering a query via the {@link QueryRunner}.\n *\n * @internal\n */\nexport interface QueryRunnerOptions {\n  datasource: DataSourceRef | DataSourceApi | null;\n  queries: DataQuery[];\n  panelId?: number;\n  dashboardId?: number;\n  timezone: TimeZone;\n  timeRange: TimeRange;\n  timeInfo?: string; // String description of time range for display\n  maxDataPoints: number;\n  minInterval: string | undefined | null;\n  scopedVars?: ScopedVars;\n  cacheTimeout?: string;\n  app?: string;\n}\n\n/**\n * Describes the QueryRunner that can used to exectue queries in e.g. app plugins.\n * QueryRunner instances can be created via the {@link @grafana/runtime#createQueryRunner | createQueryRunner}.\n *\n * @internal\n */\nexport interface QueryRunner {\n  get(): Observable<PanelData>;\n  run(options: QueryRunnerOptions): void;\n  cancel(): void;\n  destroy(): void;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}