{"ast":null,"code":"const _excluded = [\"children\", \"className\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useTheme, stylesFactory } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const getLegendStyles = stylesFactory(theme => {\n  return {\n    legend: css`\n      font-size: ${theme.typography.heading.h3};\n      font-weight: ${theme.typography.weight.regular};\n      margin: 0 0 ${theme.spacing.md} 0;\n    `\n  };\n});\nexport const Legend = _ref => {\n  let {\n    children,\n    className\n  } = _ref,\n      legendProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme();\n  const styles = getLegendStyles(theme);\n  return /*#__PURE__*/_jsx(\"legend\", Object.assign({\n    className: cx(styles.legend, className)\n  }, legendProps, {\n    children: children\n  }));\n};","map":{"version":3,"names":["css","cx","React","useTheme","stylesFactory","getLegendStyles","theme","legend","typography","heading","h3","weight","regular","spacing","md","Legend","children","className","legendProps","styles"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/Legend.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { useTheme, stylesFactory } from '../../themes';\n\nexport interface LabelProps extends React.HTMLAttributes<HTMLLegendElement> {\n  children: string | ReactNode;\n  description?: string;\n}\n\nexport const getLegendStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    legend: css`\n      font-size: ${theme.typography.heading.h3};\n      font-weight: ${theme.typography.weight.regular};\n      margin: 0 0 ${theme.spacing.md} 0;\n    `,\n  };\n});\n\nexport const Legend: React.FC<LabelProps> = ({ children, className, ...legendProps }) => {\n  const theme = useTheme();\n  const styles = getLegendStyles(theme);\n\n  return (\n    <legend className={cx(styles.legend, className)} {...legendProps}>\n      {children}\n    </legend>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAIA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,cAAxC;;AAOA,OAAO,MAAMC,eAAe,GAAGD,aAAa,CAAEE,KAAD,IAAyB;EACpE,OAAO;IACLC,MAAM,EAAEP,GAAI;AAChB,mBAAmBM,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,EAAG;AAC/C,qBAAqBJ,KAAK,CAACE,UAAN,CAAiBG,MAAjB,CAAwBC,OAAQ;AACrD,oBAAoBN,KAAK,CAACO,OAAN,CAAcC,EAAG;AACrC;EALS,CAAP;AAOD,CAR2C,CAArC;AAUP,OAAO,MAAMC,MAA4B,GAAG,QAA6C;EAAA,IAA5C;IAAEC,QAAF;IAAYC;EAAZ,CAA4C;EAAA,IAAlBC,WAAkB;;EACvF,MAAMZ,KAAK,GAAGH,QAAQ,EAAtB;EACA,MAAMgB,MAAM,GAAGd,eAAe,CAACC,KAAD,CAA9B;EAEA,oBACE;IAAQ,SAAS,EAAEL,EAAE,CAACkB,MAAM,CAACZ,MAAR,EAAgBU,SAAhB;EAArB,GAAqDC,WAArD;IAAA,UACGF;EADH,GADF;AAKD,CATM"},"metadata":{},"sourceType":"module"}