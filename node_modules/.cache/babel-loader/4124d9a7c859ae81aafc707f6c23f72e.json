{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, useTheme, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getStyles = stylesFactory(theme => {\n  return {\n    container: css`\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `\n  };\n});\nconst retentionPeriodOptions = [{\n  value: 2,\n  label: '2 days'\n}, {\n  value: 5,\n  label: '5 days'\n}, {\n  value: 7,\n  label: '1 week'\n}, {\n  value: 14,\n  label: '2 weeks'\n}];\nexport function RichHistorySettingsTab(props) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find(v => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(new ShowConfirmModalEvent({\n      title: 'Delete',\n      text: 'Are you sure you want to permanently delete your query history?',\n      yesText: 'Delete',\n      icon: 'trash-alt',\n      onConfirm: () => {\n        deleteRichHistory();\n        dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [supportedFeatures().changeRetention ? /*#__PURE__*/_jsx(Field, {\n      label: \"History time span\",\n      description: `Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`,\n      className: \"space-between\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsx(Select, {\n          value: selectedOption,\n          options: retentionPeriodOptions,\n          onChange: onChangeRetentionPeriod\n        })\n      })\n    }) : /*#__PURE__*/_jsxs(Alert, {\n      severity: \"info\",\n      title: \"History time span\",\n      children: [\"Grafana will keep entries up to \", selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.label, \".\"]\n    }), /*#__PURE__*/_jsx(InlineField, {\n      label: \"Change the default active tab from \\u201CQuery history\\u201D to \\u201CStarred\\u201D\",\n      className: \"space-between\",\n      children: /*#__PURE__*/_jsx(InlineSwitch, {\n        id: \"explore-query-history-settings-default-active-tab\",\n        value: starredTabAsFirstTab,\n        onChange: toggleStarredTabAsFirstTab\n      })\n    }), supportedFeatures().onlyActiveDataSource && /*#__PURE__*/_jsx(InlineField, {\n      label: \"Only show queries for data source currently active in Explore\",\n      className: \"space-between\",\n      children: /*#__PURE__*/_jsx(InlineSwitch, {\n        id: \"explore-query-history-settings-data-source-behavior\",\n        value: activeDatasourceOnly,\n        onChange: toggleactiveDatasourceOnly\n      })\n    }), supportedFeatures().clearHistory && /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: css`\n              font-weight: ${theme.typography.weight.bold};\n            `,\n        children: \"Clear query history\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: css`\n              margin-bottom: ${theme.spacing.sm};\n            `,\n        children: \"Delete all of your query history, permanently.\"\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"destructive\",\n        onClick: onDelete,\n        children: \"Clear query history\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["css","React","stylesFactory","useTheme","Select","Button","Field","InlineField","InlineSwitch","Alert","notifyApp","appEvents","createSuccessNotification","MAX_HISTORY_ITEMS","dispatch","supportedFeatures","ShowConfirmModalEvent","getStyles","theme","container","typography","size","sm","spacing","lg","input","retentionPeriodOptions","value","label","RichHistorySettingsTab","props","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","styles","selectedOption","find","v","onDelete","publish","title","text","yesText","icon","onConfirm","changeRetention","onlyActiveDataSource","clearHistory","weight","bold"],"sources":["/home/soula/grafana/public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { stylesFactory, useTheme, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label=\"History time span\"\n          description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n          className=\"space-between\"\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title=\"History time span\">\n          Grafana will keep entries up to {selectedOption?.label}.\n        </Alert>\n      )}\n      <InlineField label=\"Change the default active tab from “Query history” to “Starred”\" className=\"space-between\">\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField label=\"Only show queries for data source currently active in Explore\" className=\"space-between\">\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div\n            className={css`\n              font-weight: ${theme.typography.weight.bold};\n            `}\n          >\n            Clear query history\n          </div>\n          <div\n            className={css`\n              margin-bottom: ${theme.spacing.sm};\n            `}\n          >\n            Delete all of your query history, permanently.\n          </div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            Clear query history\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}