{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory, withTheme2 } from '@grafana/ui';\nimport { autoColor } from '../Theme';\nimport SpanDetail from './SpanDetail';\nimport SpanTreeOffset from './SpanTreeOffset';\nimport TimelineRow from './TimelineRow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getStyles = stylesFactory(theme => {\n  return {\n    expandedAccent: css`\n      cursor: pointer;\n      height: 100%;\n      overflow: hidden;\n      position: absolute;\n      width: 100%;\n      &::before {\n        border-left: 4px solid;\n        pointer-events: none;\n        width: 1000px;\n      }\n      &::after {\n        border-right: 1000px solid;\n        border-color: inherit;\n        cursor: pointer;\n        opacity: 0.2;\n      }\n\n      /* border-color inherit must come AFTER other border declarations for accent */\n      &::before,\n      &::after {\n        border-color: inherit;\n        content: ' ';\n        position: absolute;\n        height: 100%;\n      }\n\n      &:hover::after {\n        opacity: 0.35;\n      }\n    `,\n    infoWrapper: css`\n      label: infoWrapper;\n      border: 1px solid ${autoColor(theme, '#d3d3d3')};\n      border-top: 3px solid;\n      padding: 0.75rem;\n    `\n  };\n});\nexport class UnthemedSpanDetailRow extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_detailToggle\", () => {\n      this.props.onDetailToggled(this.props.span.spanID);\n    });\n\n    _defineProperty(this, \"_linksGetter\", (items, itemIndex) => {\n      const {\n        linksGetter,\n        span\n      } = this.props;\n      return linksGetter(span, items, itemIndex);\n    });\n  }\n\n  render() {\n    const {\n      color,\n      columnDivision,\n      detailState,\n      logItemToggle,\n      logsToggle,\n      processToggle,\n      referenceItemToggle,\n      referencesToggle,\n      warningsToggle,\n      stackTracesToggle,\n      span,\n      timeZone,\n      tagsToggle,\n      traceStartTime,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      theme,\n      createSpanLink,\n      focusedSpanId,\n      createFocusSpanLink,\n      topOfViewRefType\n    } = this.props;\n    const styles = getStyles(theme);\n    return /*#__PURE__*/_jsxs(TimelineRow, {\n      children: [/*#__PURE__*/_jsxs(TimelineRow.Cell, {\n        width: columnDivision,\n        style: {\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsx(SpanTreeOffset, {\n          span: span,\n          showChildrenIcon: false,\n          hoverIndentGuideIds: hoverIndentGuideIds,\n          addHoverIndentGuideId: addHoverIndentGuideId,\n          removeHoverIndentGuideId: removeHoverIndentGuideId\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: styles.expandedAccent,\n            \"aria-checked\": \"true\",\n            onClick: this._detailToggle,\n            role: \"switch\",\n            style: {\n              borderColor: color\n            },\n            \"data-test-id\": \"detail-row-expanded-accent\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(TimelineRow.Cell, {\n        width: 1 - columnDivision,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.infoWrapper,\n          style: {\n            borderTopColor: color\n          },\n          children: /*#__PURE__*/_jsx(SpanDetail, {\n            detailState: detailState,\n            linksGetter: this._linksGetter,\n            logItemToggle: logItemToggle,\n            logsToggle: logsToggle,\n            processToggle: processToggle,\n            referenceItemToggle: referenceItemToggle,\n            referencesToggle: referencesToggle,\n            warningsToggle: warningsToggle,\n            stackTracesToggle: stackTracesToggle,\n            span: span,\n            timeZone: timeZone,\n            tagsToggle: tagsToggle,\n            traceStartTime: traceStartTime,\n            createSpanLink: createSpanLink,\n            focusedSpanId: focusedSpanId,\n            createFocusSpanLink: createFocusSpanLink,\n            topOfViewRefType: topOfViewRefType\n          })\n        })\n      })]\n    });\n  }\n\n}\nexport default withTheme2(UnthemedSpanDetailRow);","map":{"version":3,"names":["css","React","stylesFactory","withTheme2","autoColor","SpanDetail","SpanTreeOffset","TimelineRow","getStyles","theme","expandedAccent","infoWrapper","UnthemedSpanDetailRow","PureComponent","props","onDetailToggled","span","spanID","items","itemIndex","linksGetter","render","color","columnDivision","detailState","logItemToggle","logsToggle","processToggle","referenceItemToggle","referencesToggle","warningsToggle","stackTracesToggle","timeZone","tagsToggle","traceStartTime","hoverIndentGuideIds","addHoverIndentGuideId","removeHoverIndentGuideId","createSpanLink","focusedSpanId","createFocusSpanLink","topOfViewRefType","styles","overflow","_detailToggle","borderColor","borderTopColor","_linksGetter"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanDetailRow.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, LinkModel, TimeZone } from '@grafana/data';\nimport { stylesFactory, withTheme2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { SpanLinkFunc } from '../types';\nimport { TraceLog, TraceSpan, TraceKeyValuePair, TraceLink, TraceSpanReference } from '../types/trace';\n\nimport SpanDetail from './SpanDetail';\nimport DetailState from './SpanDetail/DetailState';\nimport SpanTreeOffset from './SpanTreeOffset';\nimport TimelineRow from './TimelineRow';\nimport { TopOfViewRefType } from './VirtualizedTraceView';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    expandedAccent: css`\n      cursor: pointer;\n      height: 100%;\n      overflow: hidden;\n      position: absolute;\n      width: 100%;\n      &::before {\n        border-left: 4px solid;\n        pointer-events: none;\n        width: 1000px;\n      }\n      &::after {\n        border-right: 1000px solid;\n        border-color: inherit;\n        cursor: pointer;\n        opacity: 0.2;\n      }\n\n      /* border-color inherit must come AFTER other border declarations for accent */\n      &::before,\n      &::after {\n        border-color: inherit;\n        content: ' ';\n        position: absolute;\n        height: 100%;\n      }\n\n      &:hover::after {\n        opacity: 0.35;\n      }\n    `,\n    infoWrapper: css`\n      label: infoWrapper;\n      border: 1px solid ${autoColor(theme, '#d3d3d3')};\n      border-top: 3px solid;\n      padding: 0.75rem;\n    `,\n  };\n});\n\ntype SpanDetailRowProps = {\n  color: string;\n  columnDivision: number;\n  detailState: DetailState;\n  onDetailToggled: (spanID: string) => void;\n  linksGetter: (span: TraceSpan, links: TraceKeyValuePair[], index: number) => TraceLink[];\n  logItemToggle: (spanID: string, log: TraceLog) => void;\n  logsToggle: (spanID: string) => void;\n  processToggle: (spanID: string) => void;\n  referenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;\n  referencesToggle: (spanID: string) => void;\n  warningsToggle: (spanID: string) => void;\n  stackTracesToggle: (spanID: string) => void;\n  span: TraceSpan;\n  timeZone: TimeZone;\n  tagsToggle: (spanID: string) => void;\n  traceStartTime: number;\n  hoverIndentGuideIds: Set<string>;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  theme: GrafanaTheme2;\n  createSpanLink?: SpanLinkFunc;\n  focusedSpanId?: string;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;\n  topOfViewRefType?: TopOfViewRefType;\n};\n\nexport class UnthemedSpanDetailRow extends React.PureComponent<SpanDetailRowProps> {\n  _detailToggle = () => {\n    this.props.onDetailToggled(this.props.span.spanID);\n  };\n\n  _linksGetter = (items: TraceKeyValuePair[], itemIndex: number) => {\n    const { linksGetter, span } = this.props;\n    return linksGetter(span, items, itemIndex);\n  };\n\n  render() {\n    const {\n      color,\n      columnDivision,\n      detailState,\n      logItemToggle,\n      logsToggle,\n      processToggle,\n      referenceItemToggle,\n      referencesToggle,\n      warningsToggle,\n      stackTracesToggle,\n      span,\n      timeZone,\n      tagsToggle,\n      traceStartTime,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      theme,\n      createSpanLink,\n      focusedSpanId,\n      createFocusSpanLink,\n      topOfViewRefType,\n    } = this.props;\n    const styles = getStyles(theme);\n    return (\n      <TimelineRow>\n        <TimelineRow.Cell width={columnDivision} style={{ overflow: 'hidden' }}>\n          <SpanTreeOffset\n            span={span}\n            showChildrenIcon={false}\n            hoverIndentGuideIds={hoverIndentGuideIds}\n            addHoverIndentGuideId={addHoverIndentGuideId}\n            removeHoverIndentGuideId={removeHoverIndentGuideId}\n          />\n          <span>\n            <span\n              className={styles.expandedAccent}\n              aria-checked=\"true\"\n              onClick={this._detailToggle}\n              role=\"switch\"\n              style={{ borderColor: color }}\n              data-test-id=\"detail-row-expanded-accent\"\n            />\n          </span>\n        </TimelineRow.Cell>\n        <TimelineRow.Cell width={1 - columnDivision}>\n          <div className={styles.infoWrapper} style={{ borderTopColor: color }}>\n            <SpanDetail\n              detailState={detailState}\n              linksGetter={this._linksGetter}\n              logItemToggle={logItemToggle}\n              logsToggle={logsToggle}\n              processToggle={processToggle}\n              referenceItemToggle={referenceItemToggle}\n              referencesToggle={referencesToggle}\n              warningsToggle={warningsToggle}\n              stackTracesToggle={stackTracesToggle}\n              span={span}\n              timeZone={timeZone}\n              tagsToggle={tagsToggle}\n              traceStartTime={traceStartTime}\n              createSpanLink={createSpanLink}\n              focusedSpanId={focusedSpanId}\n              createFocusSpanLink={createFocusSpanLink}\n              topOfViewRefType={topOfViewRefType}\n            />\n          </div>\n        </TimelineRow.Cell>\n      </TimelineRow>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedSpanDetailRow);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}