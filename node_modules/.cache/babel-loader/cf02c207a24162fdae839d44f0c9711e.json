{"ast":null,"code":"import { cloneDeep } from 'lodash';\nimport { deprecationWarning } from '@grafana/data';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from 'app/features/annotations/api';\n\n/**\n * @deprecated AnnotationsSrv is deprecated in favor of DashboardQueryRunner\n */\nexport class AnnotationsSrv {\n  /**\n   * @deprecated clearPromiseCaches is deprecated\n   */\n  clearPromiseCaches() {\n    deprecationWarning('annotations_srv.ts', 'clearPromiseCaches', 'DashboardQueryRunner');\n  }\n  /**\n   * @deprecated getAnnotations is deprecated in favor of DashboardQueryRunner.getResult\n   */\n\n\n  getAnnotations(options) {\n    deprecationWarning('annotations_srv.ts', 'getAnnotations', 'DashboardQueryRunner.getResult');\n    return Promise.resolve({\n      annotations: [],\n      alertState: undefined\n    });\n  }\n  /**\n   * @deprecated getAlertStates is deprecated in favor of DashboardQueryRunner.getResult\n   */\n\n\n  getAlertStates(options) {\n    deprecationWarning('annotations_srv.ts', 'getAlertStates', 'DashboardQueryRunner.getResult');\n    return Promise.resolve(undefined);\n  }\n  /**\n   * @deprecated getGlobalAnnotations is deprecated in favor of DashboardQueryRunner.getResult\n   */\n\n\n  getGlobalAnnotations(options) {\n    deprecationWarning('annotations_srv.ts', 'getGlobalAnnotations', 'DashboardQueryRunner.getResult');\n    return Promise.resolve([]);\n  }\n  /**\n   * @deprecated saveAnnotationEvent is deprecated\n   */\n\n\n  saveAnnotationEvent(annotation) {\n    deprecationWarning('annotations_srv.ts', 'saveAnnotationEvent', 'api/saveAnnotation');\n    return saveAnnotation(annotation);\n  }\n  /**\n   * @deprecated updateAnnotationEvent is deprecated\n   */\n\n\n  updateAnnotationEvent(annotation) {\n    deprecationWarning('annotations_srv.ts', 'updateAnnotationEvent', 'api/updateAnnotation');\n    return updateAnnotation(annotation);\n  }\n  /**\n   * @deprecated deleteAnnotationEvent is deprecated\n   */\n\n\n  deleteAnnotationEvent(annotation) {\n    deprecationWarning('annotations_srv.ts', 'deleteAnnotationEvent', 'api/deleteAnnotation');\n    return deleteAnnotation(annotation);\n  }\n  /**\n   * @deprecated translateQueryResult is deprecated in favor of DashboardQueryRunner/utils/translateQueryResult\n   */\n\n\n  translateQueryResult(annotation, results) {\n    deprecationWarning('annotations_srv.ts', 'translateQueryResult', 'DashboardQueryRunner/utils/translateQueryResult'); // if annotation has snapshotData\n    // make clone and remove it\n\n    if (annotation.snapshotData) {\n      annotation = cloneDeep(annotation);\n      delete annotation.snapshotData;\n    }\n\n    for (const item of results) {\n      item.source = annotation;\n      item.color = annotation.iconColor;\n      item.type = annotation.name;\n      item.isRegion = item.timeEnd && item.time !== item.timeEnd;\n    }\n\n    return results;\n  }\n\n}","map":{"version":3,"names":["cloneDeep","deprecationWarning","deleteAnnotation","saveAnnotation","updateAnnotation","AnnotationsSrv","clearPromiseCaches","getAnnotations","options","Promise","resolve","annotations","alertState","undefined","getAlertStates","getGlobalAnnotations","saveAnnotationEvent","annotation","updateAnnotationEvent","deleteAnnotationEvent","translateQueryResult","results","snapshotData","item","source","color","iconColor","type","name","isRegion","timeEnd","time"],"sources":["/home/soula/grafana/public/app/angular/services/annotations_srv.ts"],"sourcesContent":["import { cloneDeep } from 'lodash';\n\nimport { AnnotationEvent, deprecationWarning } from '@grafana/data';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from 'app/features/annotations/api';\nimport { AnnotationQueryOptions } from 'app/features/annotations/types';\n\n/**\n * @deprecated AnnotationsSrv is deprecated in favor of DashboardQueryRunner\n */\nexport class AnnotationsSrv {\n  /**\n   * @deprecated clearPromiseCaches is deprecated\n   */\n  clearPromiseCaches() {\n    deprecationWarning('annotations_srv.ts', 'clearPromiseCaches', 'DashboardQueryRunner');\n  }\n\n  /**\n   * @deprecated getAnnotations is deprecated in favor of DashboardQueryRunner.getResult\n   */\n  getAnnotations(options: AnnotationQueryOptions) {\n    deprecationWarning('annotations_srv.ts', 'getAnnotations', 'DashboardQueryRunner.getResult');\n    return Promise.resolve({ annotations: [], alertState: undefined });\n  }\n\n  /**\n   * @deprecated getAlertStates is deprecated in favor of DashboardQueryRunner.getResult\n   */\n  getAlertStates(options: any) {\n    deprecationWarning('annotations_srv.ts', 'getAlertStates', 'DashboardQueryRunner.getResult');\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * @deprecated getGlobalAnnotations is deprecated in favor of DashboardQueryRunner.getResult\n   */\n  getGlobalAnnotations(options: AnnotationQueryOptions) {\n    deprecationWarning('annotations_srv.ts', 'getGlobalAnnotations', 'DashboardQueryRunner.getResult');\n    return Promise.resolve([]);\n  }\n\n  /**\n   * @deprecated saveAnnotationEvent is deprecated\n   */\n  saveAnnotationEvent(annotation: AnnotationEvent) {\n    deprecationWarning('annotations_srv.ts', 'saveAnnotationEvent', 'api/saveAnnotation');\n    return saveAnnotation(annotation);\n  }\n\n  /**\n   * @deprecated updateAnnotationEvent is deprecated\n   */\n  updateAnnotationEvent(annotation: AnnotationEvent) {\n    deprecationWarning('annotations_srv.ts', 'updateAnnotationEvent', 'api/updateAnnotation');\n    return updateAnnotation(annotation);\n  }\n\n  /**\n   * @deprecated deleteAnnotationEvent is deprecated\n   */\n  deleteAnnotationEvent(annotation: AnnotationEvent) {\n    deprecationWarning('annotations_srv.ts', 'deleteAnnotationEvent', 'api/deleteAnnotation');\n    return deleteAnnotation(annotation);\n  }\n\n  /**\n   * @deprecated translateQueryResult is deprecated in favor of DashboardQueryRunner/utils/translateQueryResult\n   */\n  translateQueryResult(annotation: any, results: any) {\n    deprecationWarning('annotations_srv.ts', 'translateQueryResult', 'DashboardQueryRunner/utils/translateQueryResult');\n    // if annotation has snapshotData\n    // make clone and remove it\n    if (annotation.snapshotData) {\n      annotation = cloneDeep(annotation);\n      delete annotation.snapshotData;\n    }\n\n    for (const item of results) {\n      item.source = annotation;\n      item.color = annotation.iconColor;\n      item.type = annotation.name;\n      item.isRegion = item.timeEnd && item.time !== item.timeEnd;\n    }\n\n    return results;\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,SAA0BC,kBAA1B,QAAoD,eAApD;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,gBAA3C,QAAmE,8BAAnE;;AAGA;AACA;AACA;AACA,OAAO,MAAMC,cAAN,CAAqB;EAC1B;AACF;AACA;EACEC,kBAAkB,GAAG;IACnBL,kBAAkB,CAAC,oBAAD,EAAuB,oBAAvB,EAA6C,sBAA7C,CAAlB;EACD;EAED;AACF;AACA;;;EACEM,cAAc,CAACC,OAAD,EAAkC;IAC9CP,kBAAkB,CAAC,oBAAD,EAAuB,gBAAvB,EAAyC,gCAAzC,CAAlB;IACA,OAAOQ,OAAO,CAACC,OAAR,CAAgB;MAAEC,WAAW,EAAE,EAAf;MAAmBC,UAAU,EAAEC;IAA/B,CAAhB,CAAP;EACD;EAED;AACF;AACA;;;EACEC,cAAc,CAACN,OAAD,EAAe;IAC3BP,kBAAkB,CAAC,oBAAD,EAAuB,gBAAvB,EAAyC,gCAAzC,CAAlB;IACA,OAAOQ,OAAO,CAACC,OAAR,CAAgBG,SAAhB,CAAP;EACD;EAED;AACF;AACA;;;EACEE,oBAAoB,CAACP,OAAD,EAAkC;IACpDP,kBAAkB,CAAC,oBAAD,EAAuB,sBAAvB,EAA+C,gCAA/C,CAAlB;IACA,OAAOQ,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;EACD;EAED;AACF;AACA;;;EACEM,mBAAmB,CAACC,UAAD,EAA8B;IAC/ChB,kBAAkB,CAAC,oBAAD,EAAuB,qBAAvB,EAA8C,oBAA9C,CAAlB;IACA,OAAOE,cAAc,CAACc,UAAD,CAArB;EACD;EAED;AACF;AACA;;;EACEC,qBAAqB,CAACD,UAAD,EAA8B;IACjDhB,kBAAkB,CAAC,oBAAD,EAAuB,uBAAvB,EAAgD,sBAAhD,CAAlB;IACA,OAAOG,gBAAgB,CAACa,UAAD,CAAvB;EACD;EAED;AACF;AACA;;;EACEE,qBAAqB,CAACF,UAAD,EAA8B;IACjDhB,kBAAkB,CAAC,oBAAD,EAAuB,uBAAvB,EAAgD,sBAAhD,CAAlB;IACA,OAAOC,gBAAgB,CAACe,UAAD,CAAvB;EACD;EAED;AACF;AACA;;;EACEG,oBAAoB,CAACH,UAAD,EAAkBI,OAAlB,EAAgC;IAClDpB,kBAAkB,CAAC,oBAAD,EAAuB,sBAAvB,EAA+C,iDAA/C,CAAlB,CADkD,CAElD;IACA;;IACA,IAAIgB,UAAU,CAACK,YAAf,EAA6B;MAC3BL,UAAU,GAAGjB,SAAS,CAACiB,UAAD,CAAtB;MACA,OAAOA,UAAU,CAACK,YAAlB;IACD;;IAED,KAAK,MAAMC,IAAX,IAAmBF,OAAnB,EAA4B;MAC1BE,IAAI,CAACC,MAAL,GAAcP,UAAd;MACAM,IAAI,CAACE,KAAL,GAAaR,UAAU,CAACS,SAAxB;MACAH,IAAI,CAACI,IAAL,GAAYV,UAAU,CAACW,IAAvB;MACAL,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,IAAL,KAAcR,IAAI,CAACO,OAAnD;IACD;;IAED,OAAOT,OAAP;EACD;;AA5EyB"},"metadata":{},"sourceType":"module"}