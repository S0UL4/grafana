{"ast":null,"code":"import { clamp } from 'lodash';\nimport { useLayoutEffect } from 'react';\nconst PIXELS_PER_MS = 0.1;\nconst SHIFT_MULTIPLIER = 2;\nconst KNOWN_KEYS = new Set(['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Shift', ' ']);\n\nconst initHook = u => {\n  let vizLayoutViz = u.root.closest('[tabindex]');\n  let pressedKeys = new Set();\n  let dragStartX = null;\n  let keysLastHandledAt = null;\n\n  if (!vizLayoutViz) {\n    return;\n  }\n\n  const moveCursor = (dx, dy) => {\n    const {\n      cursor\n    } = u;\n\n    if (cursor.left === undefined || cursor.top === undefined) {\n      return;\n    }\n\n    const {\n      width,\n      height\n    } = u.over.style;\n    const [maxX, maxY] = [Math.floor(parseFloat(width)), Math.floor(parseFloat(height))];\n    u.setCursor({\n      left: clamp(cursor.left + dx, 0, maxX),\n      top: clamp(cursor.top + dy, 0, maxY)\n    });\n  };\n\n  const handlePressedKeys = time => {\n    var _keysLastHandledAt;\n\n    const nothingPressed = pressedKeys.size === 0;\n\n    if (nothingPressed || !u) {\n      keysLastHandledAt = null;\n      return;\n    }\n\n    const dt = time - ((_keysLastHandledAt = keysLastHandledAt) !== null && _keysLastHandledAt !== void 0 ? _keysLastHandledAt : time);\n    const dx = dt * PIXELS_PER_MS;\n    let horValue = 0;\n    let vertValue = 0;\n\n    if (pressedKeys.has('ArrowUp')) {\n      vertValue -= dx;\n    }\n\n    if (pressedKeys.has('ArrowDown')) {\n      vertValue += dx;\n    }\n\n    if (pressedKeys.has('ArrowLeft')) {\n      horValue -= dx;\n    }\n\n    if (pressedKeys.has('ArrowRight')) {\n      horValue += dx;\n    }\n\n    if (pressedKeys.has('Shift')) {\n      horValue *= SHIFT_MULTIPLIER;\n      vertValue *= SHIFT_MULTIPLIER;\n    }\n\n    moveCursor(horValue, vertValue);\n    const {\n      cursor\n    } = u;\n\n    if (pressedKeys.has(' ') && cursor) {\n      var _dragStartX;\n\n      const drawHeight = Number(u.over.style.height.slice(0, -2));\n      u.setSelect({\n        left: cursor.left < dragStartX ? cursor.left : dragStartX,\n        top: 0,\n        width: Math.abs(cursor.left - ((_dragStartX = dragStartX) !== null && _dragStartX !== void 0 ? _dragStartX : cursor.left)),\n        height: drawHeight\n      }, false);\n    }\n\n    keysLastHandledAt = time;\n    window.requestAnimationFrame(handlePressedKeys);\n  };\n\n  vizLayoutViz.addEventListener('keydown', e => {\n    if (e.key === 'Tab') {\n      // Hide the cursor if the user tabs away\n      u.setCursor({\n        left: -5,\n        top: -5\n      });\n      return;\n    }\n\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    const newKey = !pressedKeys.has(e.key);\n\n    if (newKey) {\n      const initiateAnimationLoop = pressedKeys.size === 0;\n      pressedKeys.add(e.key);\n      dragStartX = e.key === ' ' && dragStartX === null ? u.cursor.left : dragStartX;\n\n      if (initiateAnimationLoop) {\n        window.requestAnimationFrame(handlePressedKeys);\n      }\n    }\n  });\n  vizLayoutViz.addEventListener('keyup', e => {\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    pressedKeys.delete(e.key);\n\n    if (e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation(); // We do this so setSelect hooks get fired, zooming the plot\n\n      u.setSelect(u.select);\n      dragStartX = null;\n    }\n  });\n  vizLayoutViz.addEventListener('focus', e => {\n    // We only want to initialize the cursor if the user is using keyboard controls\n    if (!(vizLayoutViz !== null && vizLayoutViz !== void 0 && vizLayoutViz.matches(':focus-visible'))) {\n      return;\n    } // Is there a more idiomatic way to do this?\n\n\n    const drawWidth = parseFloat(u.over.style.width);\n    const drawHeight = parseFloat(u.over.style.height);\n    u.setCursor({\n      left: drawWidth / 2,\n      top: drawHeight / 2\n    });\n  });\n  vizLayoutViz.addEventListener('blur', e => {\n    keysLastHandledAt = null;\n    dragStartX = null;\n    pressedKeys.clear();\n    u.setSelect({\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    }, false);\n  });\n};\n/**\n * @alpha\n */\n\n\nexport const KeyboardPlugin = ({\n  config\n}) => {\n  useLayoutEffect(() => config.addHook('init', initHook), [config]);\n  return null;\n};","map":{"version":3,"names":["clamp","useLayoutEffect","PIXELS_PER_MS","SHIFT_MULTIPLIER","KNOWN_KEYS","Set","initHook","u","vizLayoutViz","root","closest","pressedKeys","dragStartX","keysLastHandledAt","moveCursor","dx","dy","cursor","left","undefined","top","width","height","over","style","maxX","maxY","Math","floor","parseFloat","setCursor","handlePressedKeys","time","nothingPressed","size","dt","horValue","vertValue","has","drawHeight","Number","slice","setSelect","abs","window","requestAnimationFrame","addEventListener","e","key","preventDefault","stopPropagation","newKey","initiateAnimationLoop","add","delete","select","matches","drawWidth","clear","KeyboardPlugin","config","addHook"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/uPlot/plugins/KeyboardPlugin.tsx"],"sourcesContent":["import { clamp } from 'lodash';\nimport React, { useLayoutEffect } from 'react';\nimport uPlot from 'uplot';\n\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\n\ninterface KeyboardPluginProps {\n  config: UPlotConfigBuilder; // onkeypress, onkeyup, onkeydown (triggered by vizlayout handlers)\n}\n\nconst PIXELS_PER_MS = 0.1 as const;\nconst SHIFT_MULTIPLIER = 2 as const;\nconst KNOWN_KEYS = new Set(['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Shift', ' ']);\n\nconst initHook = (u: uPlot) => {\n  let vizLayoutViz: HTMLElement | null = u.root.closest('[tabindex]');\n  let pressedKeys = new Set<string>();\n  let dragStartX: number | null = null;\n  let keysLastHandledAt: number | null = null;\n\n  if (!vizLayoutViz) {\n    return;\n  }\n\n  const moveCursor = (dx: number, dy: number) => {\n    const { cursor } = u;\n    if (cursor.left === undefined || cursor.top === undefined) {\n      return;\n    }\n\n    const { width, height } = u.over.style;\n    const [maxX, maxY] = [Math.floor(parseFloat(width)), Math.floor(parseFloat(height))];\n\n    u.setCursor({\n      left: clamp(cursor.left + dx, 0, maxX),\n      top: clamp(cursor.top + dy, 0, maxY),\n    });\n  };\n\n  const handlePressedKeys = (time: number) => {\n    const nothingPressed = pressedKeys.size === 0;\n    if (nothingPressed || !u) {\n      keysLastHandledAt = null;\n      return;\n    }\n\n    const dt = time - (keysLastHandledAt ?? time);\n    const dx = dt * PIXELS_PER_MS;\n    let horValue = 0;\n    let vertValue = 0;\n\n    if (pressedKeys.has('ArrowUp')) {\n      vertValue -= dx;\n    }\n    if (pressedKeys.has('ArrowDown')) {\n      vertValue += dx;\n    }\n    if (pressedKeys.has('ArrowLeft')) {\n      horValue -= dx;\n    }\n    if (pressedKeys.has('ArrowRight')) {\n      horValue += dx;\n    }\n    if (pressedKeys.has('Shift')) {\n      horValue *= SHIFT_MULTIPLIER;\n      vertValue *= SHIFT_MULTIPLIER;\n    }\n\n    moveCursor(horValue, vertValue);\n\n    const { cursor } = u;\n    if (pressedKeys.has(' ') && cursor) {\n      const drawHeight = Number(u.over.style.height.slice(0, -2));\n\n      u.setSelect(\n        {\n          left: cursor.left! < dragStartX! ? cursor.left! : dragStartX!,\n          top: 0,\n          width: Math.abs(cursor.left! - (dragStartX ?? cursor.left!)),\n          height: drawHeight,\n        },\n        false\n      );\n    }\n\n    keysLastHandledAt = time;\n    window.requestAnimationFrame(handlePressedKeys);\n  };\n\n  vizLayoutViz.addEventListener('keydown', (e) => {\n    if (e.key === 'Tab') {\n      // Hide the cursor if the user tabs away\n      u.setCursor({ left: -5, top: -5 });\n      return;\n    }\n\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const newKey = !pressedKeys.has(e.key);\n    if (newKey) {\n      const initiateAnimationLoop = pressedKeys.size === 0;\n      pressedKeys.add(e.key);\n\n      dragStartX = e.key === ' ' && dragStartX === null ? u.cursor.left! : dragStartX;\n\n      if (initiateAnimationLoop) {\n        window.requestAnimationFrame(handlePressedKeys);\n      }\n    }\n  });\n\n  vizLayoutViz.addEventListener('keyup', (e) => {\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    pressedKeys.delete(e.key);\n\n    if (e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // We do this so setSelect hooks get fired, zooming the plot\n      u.setSelect(u.select);\n      dragStartX = null;\n    }\n  });\n\n  vizLayoutViz.addEventListener('focus', (e) => {\n    // We only want to initialize the cursor if the user is using keyboard controls\n    if (!vizLayoutViz?.matches(':focus-visible')) {\n      return;\n    }\n\n    // Is there a more idiomatic way to do this?\n    const drawWidth = parseFloat(u.over.style.width);\n    const drawHeight = parseFloat(u.over.style.height);\n    u.setCursor({ left: drawWidth / 2, top: drawHeight / 2 });\n  });\n\n  vizLayoutViz.addEventListener('blur', (e) => {\n    keysLastHandledAt = null;\n    dragStartX = null;\n    pressedKeys.clear();\n    u.setSelect({ left: 0, top: 0, width: 0, height: 0 }, false);\n  });\n};\n\n/**\n * @alpha\n */\nexport const KeyboardPlugin: React.FC<KeyboardPluginProps> = ({ config }) => {\n  useLayoutEffect(() => config.addHook('init', initHook), [config]);\n\n  return null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}