{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as d3 from 'd3';\nimport $ from 'jquery';\nimport { filter, find, isNumber, map, reduce } from 'lodash';\nimport { getValueFormat, formattedValueToString } from '@grafana/data';\nimport { getValueBucketBound } from './heatmap_data_converter';\nconst TOOLTIP_PADDING_X = 30;\nconst TOOLTIP_PADDING_Y = 5;\nconst HISTOGRAM_WIDTH = 160;\nconst HISTOGRAM_HEIGHT = 40;\nexport class HeatmapTooltip {\n  constructor(elem, scope) {\n    _defineProperty(this, \"tooltip\", void 0);\n\n    _defineProperty(this, \"scope\", void 0);\n\n    _defineProperty(this, \"dashboard\", void 0);\n\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"heatmapPanel\", void 0);\n\n    _defineProperty(this, \"mouseOverBucket\", void 0);\n\n    _defineProperty(this, \"originalFillColor\", void 0);\n\n    this.scope = scope;\n    this.dashboard = scope.ctrl.dashboard;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n    this.heatmapPanel = elem;\n    this.mouseOverBucket = false;\n    this.originalFillColor = null;\n    elem.on('mouseleave', this.onMouseLeave.bind(this));\n  }\n\n  onMouseLeave() {\n    this.destroy();\n  }\n\n  onMouseMove(e) {\n    if (!this.panel.tooltip.show) {\n      return;\n    }\n\n    this.move(e);\n  }\n\n  add() {\n    this.tooltip = d3.select('body').append('div').attr('class', 'heatmap-tooltip graph-tooltip grafana-tooltip');\n  }\n\n  destroy() {\n    if (this.tooltip) {\n      this.tooltip.remove();\n    }\n\n    this.tooltip = null;\n  }\n\n  show(pos, data) {\n    if (!this.panel.tooltip.show || !data) {\n      return;\n    } // shared tooltip mode\n\n\n    if (pos.panelRelY) {\n      return;\n    }\n\n    const {\n      xBucketIndex,\n      yBucketIndex\n    } = this.getBucketIndexes(pos, data);\n\n    if (!data.buckets[xBucketIndex]) {\n      this.destroy();\n      return;\n    }\n\n    if (!this.tooltip) {\n      this.add();\n    }\n\n    let boundBottom, boundTop, valuesNumber;\n    const xData = data.buckets[xBucketIndex]; // Search in special 'zero' bucket also\n\n    const yData = find(xData.buckets, (bucket, bucketIndex) => {\n      return bucket.bounds.bottom === yBucketIndex || bucketIndex === yBucketIndex.toString();\n    });\n    const tooltipTimeFormat = 'YYYY-MM-DD HH:mm:ss';\n    const time = this.dashboard.formatDate(xData.x, tooltipTimeFormat); // Decimals override. Code from panel/graph/graph.ts\n\n    let countValueFormatter, bucketBoundFormatter;\n\n    if (isNumber(this.panel.tooltipDecimals)) {\n      countValueFormatter = this.countValueFormatter(this.panel.tooltipDecimals, null);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(this.panelCtrl.decimals, null);\n    } else {\n      // auto decimals\n      // legend and tooltip gets one more decimal precision\n      // than graph legend ticks\n      const decimals = (this.panelCtrl.decimals || -1) + 1;\n      countValueFormatter = this.countValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n    }\n\n    let tooltipHtml = `<div class=\"graph-tooltip-time\">${time}</div>\n      <div class=\"heatmap-histogram\"></div>`;\n\n    if (yData) {\n      if (yData.bounds) {\n        if (data.tsBuckets) {\n          // Use Y-axis labels\n          const tickFormatter = valIndex => {\n            return data.tsBucketsFormatted ? data.tsBucketsFormatted[valIndex] : data.tsBuckets[valIndex];\n          };\n\n          boundBottom = tickFormatter(yBucketIndex);\n\n          if (this.panel.yBucketBound !== 'middle') {\n            boundTop = yBucketIndex < data.tsBuckets.length - 1 ? tickFormatter(yBucketIndex + 1) : '';\n          }\n        } else {\n          // Display 0 if bucket is a special 'zero' bucket\n          const bottom = yData.y ? yData.bounds.bottom : 0;\n          boundBottom = bucketBoundFormatter(bottom);\n          boundTop = bucketBoundFormatter(yData.bounds.top);\n        }\n\n        valuesNumber = countValueFormatter(yData.count);\n        const boundStr = boundTop && boundBottom ? `${boundBottom} - ${boundTop}` : boundBottom || boundTop;\n        tooltipHtml += `<div>\n          bucket: <b>${boundStr}</b> <br>\n          count: <b>${valuesNumber}</b> <br>\n        </div>`;\n      } else {\n        // currently no bounds for pre bucketed data\n        tooltipHtml += `<div>count: <b>${yData.count}</b><br></div>`;\n      }\n    } else {\n      if (!this.panel.tooltip.showHistogram) {\n        this.destroy();\n        return;\n      }\n\n      boundBottom = yBucketIndex;\n      boundTop = '';\n      valuesNumber = 0;\n    }\n\n    this.tooltip.html(tooltipHtml);\n\n    if (this.panel.tooltip.showHistogram) {\n      this.addHistogram(xData);\n    }\n\n    this.move(pos);\n  }\n\n  getBucketIndexes(pos, data) {\n    const xBucketIndex = this.getXBucketIndex(pos.x, data);\n    const yBucketIndex = this.getYBucketIndex(pos.y, data);\n    return {\n      xBucketIndex,\n      yBucketIndex\n    };\n  }\n\n  getXBucketIndex(x, data) {\n    // First try to find X bucket by checking x pos is in the\n    // [bucket.x, bucket.x + xBucketSize] interval\n    const xBucket = find(data.buckets, bucket => {\n      return x > bucket.x && x - bucket.x <= data.xBucketSize;\n    });\n    return xBucket ? xBucket.x : getValueBucketBound(x, data.xBucketSize, 1);\n  }\n\n  getYBucketIndex(y, data) {\n    if (data.tsBuckets) {\n      return Math.floor(y);\n    }\n\n    const yBucketIndex = getValueBucketBound(y, data.yBucketSize, this.panel.yAxis.logBase);\n    return yBucketIndex;\n  }\n\n  getSharedTooltipPos(pos) {\n    // get pageX from position on x axis and pageY from relative position in original panel\n    pos.pageX = this.heatmapPanel.offset().left + this.scope.xScale(pos.x);\n    pos.pageY = this.heatmapPanel.offset().top + this.scope.chartHeight * pos.panelRelY;\n    return pos;\n  }\n\n  addHistogram(data) {\n    const xBucket = this.scope.ctrl.data.buckets[data.x];\n    const yBucketSize = this.scope.ctrl.data.yBucketSize;\n    let min, max, ticks;\n\n    if (this.scope.ctrl.data.tsBuckets) {\n      min = 0;\n      max = this.scope.ctrl.data.tsBuckets.length - 1;\n      ticks = this.scope.ctrl.data.tsBuckets.length;\n    } else {\n      min = this.scope.ctrl.data.yAxis.min;\n      max = this.scope.ctrl.data.yAxis.max;\n      ticks = this.scope.ctrl.data.yAxis.ticks;\n    }\n\n    let histogramData = map(xBucket.buckets, bucket => {\n      const count = bucket.count !== undefined ? bucket.count : bucket.values.length;\n      return [bucket.bounds.bottom, count];\n    });\n    histogramData = filter(histogramData, d => {\n      return d[0] >= min && d[0] <= max;\n    });\n    const scale = this.scope.yScale.copy();\n    const histXScale = scale.domain([min, max]).range([0, HISTOGRAM_WIDTH]);\n    let barWidth;\n\n    if (this.panel.yAxis.logBase === 1) {\n      barWidth = Math.floor(HISTOGRAM_WIDTH / (max - min) * yBucketSize * 0.9);\n    } else {\n      const barNumberFactor = yBucketSize ? yBucketSize : 1;\n      barWidth = Math.floor(HISTOGRAM_WIDTH / ticks / barNumberFactor * 0.9);\n    }\n\n    barWidth = Math.max(barWidth, 1); // Normalize histogram Y axis\n\n    const histogramDomain = reduce(map(histogramData, d => d[1]), (sum, val) => sum + val, 0);\n    const histYScale = d3.scaleLinear().domain([0, histogramDomain]).range([0, HISTOGRAM_HEIGHT]);\n    const histogram = this.tooltip.select('.heatmap-histogram').append('svg').attr('width', HISTOGRAM_WIDTH).attr('height', HISTOGRAM_HEIGHT);\n    histogram.selectAll('.bar').data(histogramData).enter().append('rect').attr('x', d => {\n      return histXScale(d[0]);\n    }).attr('width', barWidth).attr('y', d => {\n      return HISTOGRAM_HEIGHT - histYScale(d[1]);\n    }).attr('height', d => {\n      return histYScale(d[1]);\n    });\n  }\n\n  move(pos) {\n    if (!this.tooltip) {\n      return;\n    }\n\n    const elem = $(this.tooltip.node())[0];\n    const tooltipWidth = elem.clientWidth;\n    const tooltipHeight = elem.clientHeight;\n    let left = pos.pageX + TOOLTIP_PADDING_X;\n    let top = pos.pageY + TOOLTIP_PADDING_Y;\n\n    if (pos.pageX + tooltipWidth + 40 > window.innerWidth) {\n      left = pos.pageX - tooltipWidth - TOOLTIP_PADDING_X;\n    }\n\n    if (pos.pageY - window.pageYOffset + tooltipHeight + 20 > window.innerHeight) {\n      top = pos.pageY - tooltipHeight - TOOLTIP_PADDING_Y;\n    }\n\n    return this.tooltip.style('left', left + 'px').style('top', top + 'px');\n  }\n\n  countValueFormatter(decimals, scaledDecimals = null) {\n    const fmt = getValueFormat('short');\n    return value => {\n      return formattedValueToString(fmt(value, decimals, scaledDecimals));\n    };\n  }\n\n}","map":{"version":3,"names":["d3","$","filter","find","isNumber","map","reduce","getValueFormat","formattedValueToString","getValueBucketBound","TOOLTIP_PADDING_X","TOOLTIP_PADDING_Y","HISTOGRAM_WIDTH","HISTOGRAM_HEIGHT","HeatmapTooltip","constructor","elem","scope","dashboard","ctrl","panelCtrl","panel","heatmapPanel","mouseOverBucket","originalFillColor","on","onMouseLeave","bind","destroy","onMouseMove","e","tooltip","show","move","add","select","append","attr","remove","pos","data","panelRelY","xBucketIndex","yBucketIndex","getBucketIndexes","buckets","boundBottom","boundTop","valuesNumber","xData","yData","bucket","bucketIndex","bounds","bottom","toString","tooltipTimeFormat","time","formatDate","x","countValueFormatter","bucketBoundFormatter","tooltipDecimals","tickValueFormatter","decimals","scaledDecimals","tooltipHtml","tsBuckets","tickFormatter","valIndex","tsBucketsFormatted","yBucketBound","length","y","top","count","boundStr","showHistogram","html","addHistogram","getXBucketIndex","getYBucketIndex","xBucket","xBucketSize","Math","floor","yBucketSize","yAxis","logBase","getSharedTooltipPos","pageX","offset","left","xScale","pageY","chartHeight","min","max","ticks","histogramData","undefined","values","d","scale","yScale","copy","histXScale","domain","range","barWidth","barNumberFactor","histogramDomain","sum","val","histYScale","scaleLinear","histogram","selectAll","enter","node","tooltipWidth","clientWidth","tooltipHeight","clientHeight","window","innerWidth","pageYOffset","innerHeight","style","fmt","value"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap-old/heatmap_tooltip.ts"],"sourcesContent":["import * as d3 from 'd3';\nimport $ from 'jquery';\nimport { filter, find, isNumber, map, reduce } from 'lodash';\n\nimport { getValueFormat, formattedValueToString } from '@grafana/data';\n\nimport { getValueBucketBound } from './heatmap_data_converter';\n\nconst TOOLTIP_PADDING_X = 30;\nconst TOOLTIP_PADDING_Y = 5;\nconst HISTOGRAM_WIDTH = 160;\nconst HISTOGRAM_HEIGHT = 40;\n\nexport class HeatmapTooltip {\n  tooltip: any;\n  scope: any;\n  dashboard: any;\n  panelCtrl: any;\n  panel: any;\n  heatmapPanel: any;\n  mouseOverBucket: boolean;\n  originalFillColor: any;\n\n  constructor(elem: JQuery, scope: any) {\n    this.scope = scope;\n    this.dashboard = scope.ctrl.dashboard;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n    this.heatmapPanel = elem;\n    this.mouseOverBucket = false;\n    this.originalFillColor = null;\n\n    elem.on('mouseleave', this.onMouseLeave.bind(this));\n  }\n\n  onMouseLeave() {\n    this.destroy();\n  }\n\n  onMouseMove(e: any) {\n    if (!this.panel.tooltip.show) {\n      return;\n    }\n\n    this.move(e);\n  }\n\n  add() {\n    this.tooltip = d3.select('body').append('div').attr('class', 'heatmap-tooltip graph-tooltip grafana-tooltip');\n  }\n\n  destroy() {\n    if (this.tooltip) {\n      this.tooltip.remove();\n    }\n\n    this.tooltip = null;\n  }\n\n  show(pos: { panelRelY: any }, data: any) {\n    if (!this.panel.tooltip.show || !data) {\n      return;\n    }\n    // shared tooltip mode\n    if (pos.panelRelY) {\n      return;\n    }\n\n    const { xBucketIndex, yBucketIndex } = this.getBucketIndexes(pos, data);\n\n    if (!data.buckets[xBucketIndex]) {\n      this.destroy();\n      return;\n    }\n\n    if (!this.tooltip) {\n      this.add();\n    }\n\n    let boundBottom, boundTop, valuesNumber;\n    const xData = data.buckets[xBucketIndex];\n    // Search in special 'zero' bucket also\n    const yData: any = find(xData.buckets, (bucket, bucketIndex) => {\n      return bucket.bounds.bottom === yBucketIndex || bucketIndex === yBucketIndex.toString();\n    });\n\n    const tooltipTimeFormat = 'YYYY-MM-DD HH:mm:ss';\n    const time = this.dashboard.formatDate(xData.x, tooltipTimeFormat);\n\n    // Decimals override. Code from panel/graph/graph.ts\n    let countValueFormatter, bucketBoundFormatter;\n    if (isNumber(this.panel.tooltipDecimals)) {\n      countValueFormatter = this.countValueFormatter(this.panel.tooltipDecimals, null);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(this.panelCtrl.decimals, null);\n    } else {\n      // auto decimals\n      // legend and tooltip gets one more decimal precision\n      // than graph legend ticks\n      const decimals = (this.panelCtrl.decimals || -1) + 1;\n      countValueFormatter = this.countValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n    }\n\n    let tooltipHtml = `<div class=\"graph-tooltip-time\">${time}</div>\n      <div class=\"heatmap-histogram\"></div>`;\n\n    if (yData) {\n      if (yData.bounds) {\n        if (data.tsBuckets) {\n          // Use Y-axis labels\n          const tickFormatter = (valIndex: string | number) => {\n            return data.tsBucketsFormatted ? data.tsBucketsFormatted[valIndex] : data.tsBuckets[valIndex];\n          };\n\n          boundBottom = tickFormatter(yBucketIndex);\n          if (this.panel.yBucketBound !== 'middle') {\n            boundTop = yBucketIndex < data.tsBuckets.length - 1 ? tickFormatter(yBucketIndex + 1) : '';\n          }\n        } else {\n          // Display 0 if bucket is a special 'zero' bucket\n          const bottom = yData.y ? yData.bounds.bottom : 0;\n          boundBottom = bucketBoundFormatter(bottom);\n          boundTop = bucketBoundFormatter(yData.bounds.top);\n        }\n        valuesNumber = countValueFormatter(yData.count);\n        const boundStr = boundTop && boundBottom ? `${boundBottom} - ${boundTop}` : boundBottom || boundTop;\n        tooltipHtml += `<div>\n          bucket: <b>${boundStr}</b> <br>\n          count: <b>${valuesNumber}</b> <br>\n        </div>`;\n      } else {\n        // currently no bounds for pre bucketed data\n        tooltipHtml += `<div>count: <b>${yData.count}</b><br></div>`;\n      }\n    } else {\n      if (!this.panel.tooltip.showHistogram) {\n        this.destroy();\n        return;\n      }\n      boundBottom = yBucketIndex;\n      boundTop = '';\n      valuesNumber = 0;\n    }\n\n    this.tooltip.html(tooltipHtml);\n\n    if (this.panel.tooltip.showHistogram) {\n      this.addHistogram(xData);\n    }\n\n    this.move(pos);\n  }\n\n  getBucketIndexes(pos: { panelRelY?: any; x?: any; y?: any }, data: any) {\n    const xBucketIndex = this.getXBucketIndex(pos.x, data);\n    const yBucketIndex = this.getYBucketIndex(pos.y, data);\n    return { xBucketIndex, yBucketIndex };\n  }\n\n  getXBucketIndex(x: number, data: { buckets: any; xBucketSize: number }) {\n    // First try to find X bucket by checking x pos is in the\n    // [bucket.x, bucket.x + xBucketSize] interval\n    const xBucket: any = find(data.buckets, (bucket) => {\n      return x > bucket.x && x - bucket.x <= data.xBucketSize;\n    });\n    return xBucket ? xBucket.x : getValueBucketBound(x, data.xBucketSize, 1);\n  }\n\n  getYBucketIndex(y: number, data: { tsBuckets: any; yBucketSize: number }) {\n    if (data.tsBuckets) {\n      return Math.floor(y);\n    }\n    const yBucketIndex = getValueBucketBound(y, data.yBucketSize, this.panel.yAxis.logBase);\n    return yBucketIndex;\n  }\n\n  getSharedTooltipPos(pos: { pageX: any; x: any; pageY: any; panelRelY: number }) {\n    // get pageX from position on x axis and pageY from relative position in original panel\n    pos.pageX = this.heatmapPanel.offset().left + this.scope.xScale(pos.x);\n    pos.pageY = this.heatmapPanel.offset().top + this.scope.chartHeight * pos.panelRelY;\n    return pos;\n  }\n\n  addHistogram(data: { x: string | number }) {\n    const xBucket = this.scope.ctrl.data.buckets[data.x];\n    const yBucketSize = this.scope.ctrl.data.yBucketSize;\n    let min: number, max: number, ticks: number;\n    if (this.scope.ctrl.data.tsBuckets) {\n      min = 0;\n      max = this.scope.ctrl.data.tsBuckets.length - 1;\n      ticks = this.scope.ctrl.data.tsBuckets.length;\n    } else {\n      min = this.scope.ctrl.data.yAxis.min;\n      max = this.scope.ctrl.data.yAxis.max;\n      ticks = this.scope.ctrl.data.yAxis.ticks;\n    }\n    let histogramData = map(xBucket.buckets, (bucket) => {\n      const count = bucket.count !== undefined ? bucket.count : bucket.values.length;\n      return [bucket.bounds.bottom, count];\n    });\n    histogramData = filter(histogramData, (d) => {\n      return d[0] >= min && d[0] <= max;\n    });\n\n    const scale = this.scope.yScale.copy();\n    const histXScale = scale.domain([min, max]).range([0, HISTOGRAM_WIDTH]);\n\n    let barWidth: number;\n    if (this.panel.yAxis.logBase === 1) {\n      barWidth = Math.floor((HISTOGRAM_WIDTH / (max - min)) * yBucketSize * 0.9);\n    } else {\n      const barNumberFactor = yBucketSize ? yBucketSize : 1;\n      barWidth = Math.floor((HISTOGRAM_WIDTH / ticks / barNumberFactor) * 0.9);\n    }\n    barWidth = Math.max(barWidth, 1);\n\n    // Normalize histogram Y axis\n    const histogramDomain = reduce(\n      map(histogramData, (d) => d[1]),\n      (sum, val) => sum + val,\n      0\n    );\n    const histYScale = d3.scaleLinear().domain([0, histogramDomain]).range([0, HISTOGRAM_HEIGHT]);\n\n    const histogram = this.tooltip\n      .select('.heatmap-histogram')\n      .append('svg')\n      .attr('width', HISTOGRAM_WIDTH)\n      .attr('height', HISTOGRAM_HEIGHT);\n\n    histogram\n      .selectAll('.bar')\n      .data(histogramData)\n      .enter()\n      .append('rect')\n      .attr('x', (d: any[]) => {\n        return histXScale(d[0]);\n      })\n      .attr('width', barWidth)\n      .attr('y', (d: any[]) => {\n        return HISTOGRAM_HEIGHT - histYScale(d[1]);\n      })\n      .attr('height', (d: any[]) => {\n        return histYScale(d[1]);\n      });\n  }\n\n  move(pos: { panelRelY?: any; pageX?: any; pageY?: any }) {\n    if (!this.tooltip) {\n      return;\n    }\n\n    const elem = $(this.tooltip.node())[0];\n    const tooltipWidth = elem.clientWidth;\n    const tooltipHeight = elem.clientHeight;\n\n    let left = pos.pageX + TOOLTIP_PADDING_X;\n    let top = pos.pageY + TOOLTIP_PADDING_Y;\n\n    if (pos.pageX + tooltipWidth + 40 > window.innerWidth) {\n      left = pos.pageX - tooltipWidth - TOOLTIP_PADDING_X;\n    }\n\n    if (pos.pageY - window.pageYOffset + tooltipHeight + 20 > window.innerHeight) {\n      top = pos.pageY - tooltipHeight - TOOLTIP_PADDING_Y;\n    }\n\n    return this.tooltip.style('left', left + 'px').style('top', top + 'px');\n  }\n\n  countValueFormatter(decimals: number, scaledDecimals: any = null) {\n    const fmt = getValueFormat('short');\n    return (value: number) => {\n      return formattedValueToString(fmt(value, decimals, scaledDecimals));\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}