{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { Field, Select, useStyles2 } from '@grafana/ui';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getAlertManagerLabel(alertManager) {\n  return alertManager.name === GRAFANA_RULES_SOURCE_NAME ? 'Grafana' : alertManager.name.slice(0, 37);\n}\n\nexport const AlertManagerPicker = ({\n  onChange,\n  current,\n  dataSources,\n  disabled = false\n}) => {\n  const styles = useStyles2(getStyles);\n  const options = useMemo(() => {\n    return dataSources.map(ds => ({\n      label: getAlertManagerLabel(ds),\n      value: ds.name,\n      imgUrl: ds.imgUrl,\n      meta: ds.meta\n    }));\n  }, [dataSources]);\n  return /*#__PURE__*/_jsx(Field, {\n    className: styles.field,\n    label: disabled ? 'Alertmanager' : 'Choose Alertmanager',\n    disabled: disabled || options.length === 1,\n    \"data-testid\": \"alertmanager-picker\",\n    children: /*#__PURE__*/_jsx(Select, {\n      \"aria-label\": disabled ? 'Alertmanager' : 'Choose Alertmanager',\n      width: 29,\n      className: \"ds-picker select-container\",\n      backspaceRemovesValue: false,\n      onChange: value => value.value && onChange(value.value),\n      options: options,\n      maxMenuHeight: 500,\n      noOptionsMessage: \"No datasources found\",\n      value: current,\n      getOptionLabel: o => o.label\n    })\n  });\n};\n\nconst getStyles = theme => ({\n  field: css`\n    margin-bottom: ${theme.spacing(4)};\n  `\n});","map":{"version":3,"names":["css","React","useMemo","Field","Select","useStyles2","GRAFANA_RULES_SOURCE_NAME","getAlertManagerLabel","alertManager","name","slice","AlertManagerPicker","onChange","current","dataSources","disabled","styles","getStyles","options","map","ds","label","value","imgUrl","meta","field","length","o","theme","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/AlertManagerPicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useMemo } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Field, Select, useStyles2 } from '@grafana/ui';\n\nimport { AlertManagerDataSource, GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\n\ninterface Props {\n  onChange: (alertManagerSourceName: string) => void;\n  current?: string;\n  disabled?: boolean;\n  dataSources: AlertManagerDataSource[];\n}\n\nfunction getAlertManagerLabel(alertManager: AlertManagerDataSource) {\n  return alertManager.name === GRAFANA_RULES_SOURCE_NAME ? 'Grafana' : alertManager.name.slice(0, 37);\n}\n\nexport const AlertManagerPicker: FC<Props> = ({ onChange, current, dataSources, disabled = false }) => {\n  const styles = useStyles2(getStyles);\n\n  const options: Array<SelectableValue<string>> = useMemo(() => {\n    return dataSources.map((ds) => ({\n      label: getAlertManagerLabel(ds),\n      value: ds.name,\n      imgUrl: ds.imgUrl,\n      meta: ds.meta,\n    }));\n  }, [dataSources]);\n\n  return (\n    <Field\n      className={styles.field}\n      label={disabled ? 'Alertmanager' : 'Choose Alertmanager'}\n      disabled={disabled || options.length === 1}\n      data-testid=\"alertmanager-picker\"\n    >\n      <Select\n        aria-label={disabled ? 'Alertmanager' : 'Choose Alertmanager'}\n        width={29}\n        className=\"ds-picker select-container\"\n        backspaceRemovesValue={false}\n        onChange={(value) => value.value && onChange(value.value)}\n        options={options}\n        maxMenuHeight={500}\n        noOptionsMessage=\"No datasources found\"\n        value={current}\n        getOptionLabel={(o) => o.label}\n      />\n    </Field>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  field: css`\n    margin-bottom: ${theme.spacing(4)};\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAGA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,aAA1C;AAEA,SAAiCC,yBAAjC,QAAkE,qBAAlE;;;AASA,SAASC,oBAAT,CAA8BC,YAA9B,EAAoE;EAClE,OAAOA,YAAY,CAACC,IAAb,KAAsBH,yBAAtB,GAAkD,SAAlD,GAA8DE,YAAY,CAACC,IAAb,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B,CAArE;AACD;;AAED,OAAO,MAAMC,kBAA6B,GAAG,CAAC;EAAEC,QAAF;EAAYC,OAAZ;EAAqBC,WAArB;EAAkCC,QAAQ,GAAG;AAA7C,CAAD,KAA0D;EACrG,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EAEA,MAAMC,OAAuC,GAAGhB,OAAO,CAAC,MAAM;IAC5D,OAAOY,WAAW,CAACK,GAAZ,CAAiBC,EAAD,KAAS;MAC9BC,KAAK,EAAEd,oBAAoB,CAACa,EAAD,CADG;MAE9BE,KAAK,EAAEF,EAAE,CAACX,IAFoB;MAG9Bc,MAAM,EAAEH,EAAE,CAACG,MAHmB;MAI9BC,IAAI,EAAEJ,EAAE,CAACI;IAJqB,CAAT,CAAhB,CAAP;EAMD,CAPsD,EAOpD,CAACV,WAAD,CAPoD,CAAvD;EASA,oBACE,KAAC,KAAD;IACE,SAAS,EAAEE,MAAM,CAACS,KADpB;IAEE,KAAK,EAAEV,QAAQ,GAAG,cAAH,GAAoB,qBAFrC;IAGE,QAAQ,EAAEA,QAAQ,IAAIG,OAAO,CAACQ,MAAR,KAAmB,CAH3C;IAIE,eAAY,qBAJd;IAAA,uBAME,KAAC,MAAD;MACE,cAAYX,QAAQ,GAAG,cAAH,GAAoB,qBAD1C;MAEE,KAAK,EAAE,EAFT;MAGE,SAAS,EAAC,4BAHZ;MAIE,qBAAqB,EAAE,KAJzB;MAKE,QAAQ,EAAGO,KAAD,IAAWA,KAAK,CAACA,KAAN,IAAeV,QAAQ,CAACU,KAAK,CAACA,KAAP,CAL9C;MAME,OAAO,EAAEJ,OANX;MAOE,aAAa,EAAE,GAPjB;MAQE,gBAAgB,EAAC,sBARnB;MASE,KAAK,EAAEL,OATT;MAUE,cAAc,EAAGc,CAAD,IAAOA,CAAC,CAACN;IAV3B;EANF,EADF;AAqBD,CAjCM;;AAmCP,MAAMJ,SAAS,GAAIW,KAAD,KAA2B;EAC3CH,KAAK,EAAEzB,GAAI;AACb,qBAAqB4B,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACtC;AAH6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}