{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, Form, Input, Field } from '@grafana/ui';\nimport { PasswordField } from '../PasswordField/PasswordField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst wrapperStyles = css`\n  width: 100%;\n  padding-bottom: 16px;\n`;\nexport const submitButton = css`\n  justify-content: center;\n  width: 100%;\n`;\nexport const LoginForm = ({\n  children,\n  onSubmit,\n  isLoggingIn,\n  passwordHint,\n  loginHint\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: wrapperStyles,\n    children: /*#__PURE__*/_jsx(Form, {\n      onSubmit: onSubmit,\n      validateOn: \"onChange\",\n      children: ({\n        register,\n        errors\n      }) => {\n        var _errors$user, _errors$password;\n\n        return /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Field, {\n            label: \"Email or username\",\n            invalid: !!errors.user,\n            error: (_errors$user = errors.user) === null || _errors$user === void 0 ? void 0 : _errors$user.message,\n            children: /*#__PURE__*/_jsx(Input, Object.assign({}, register('user', {\n              required: 'Email or username is required'\n            }), {\n              autoFocus: true,\n              autoCapitalize: \"none\",\n              placeholder: loginHint,\n              \"aria-label\": selectors.pages.Login.username\n            }))\n          }), /*#__PURE__*/_jsx(Field, {\n            label: \"Password\",\n            invalid: !!errors.password,\n            error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n            children: /*#__PURE__*/_jsx(PasswordField, Object.assign({\n              id: \"current-password\",\n              autoComplete: \"current-password\",\n              passwordHint: passwordHint\n            }, register('password', {\n              required: 'Password is required'\n            })))\n          }), /*#__PURE__*/_jsx(Button, {\n            type: \"submit\",\n            \"aria-label\": selectors.pages.Login.submit,\n            className: submitButton,\n            disabled: isLoggingIn,\n            children: isLoggingIn ? 'Logging in...' : 'Log in'\n          }), children]\n        });\n      }\n    })\n  });\n};","map":{"version":3,"names":["css","React","selectors","Button","Form","Input","Field","PasswordField","wrapperStyles","submitButton","LoginForm","children","onSubmit","isLoggingIn","passwordHint","loginHint","register","errors","user","message","required","pages","Login","username","password","submit"],"sources":["/home/soula/grafana/public/app/core/components/Login/LoginForm.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, ReactElement } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, Form, Input, Field } from '@grafana/ui';\n\nimport { PasswordField } from '../PasswordField/PasswordField';\n\nimport { FormModel } from './LoginCtrl';\n\ninterface Props {\n  children: ReactElement;\n  onSubmit: (data: FormModel) => void;\n  isLoggingIn: boolean;\n  passwordHint: string;\n  loginHint: string;\n}\n\nconst wrapperStyles = css`\n  width: 100%;\n  padding-bottom: 16px;\n`;\n\nexport const submitButton = css`\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const LoginForm: FC<Props> = ({ children, onSubmit, isLoggingIn, passwordHint, loginHint }) => {\n  return (\n    <div className={wrapperStyles}>\n      <Form onSubmit={onSubmit} validateOn=\"onChange\">\n        {({ register, errors }) => (\n          <>\n            <Field label=\"Email or username\" invalid={!!errors.user} error={errors.user?.message}>\n              <Input\n                {...register('user', { required: 'Email or username is required' })}\n                autoFocus\n                autoCapitalize=\"none\"\n                placeholder={loginHint}\n                aria-label={selectors.pages.Login.username}\n              />\n            </Field>\n            <Field label=\"Password\" invalid={!!errors.password} error={errors.password?.message}>\n              <PasswordField\n                id=\"current-password\"\n                autoComplete=\"current-password\"\n                passwordHint={passwordHint}\n                {...register('password', { required: 'Password is required' })}\n              />\n            </Field>\n            <Button\n              type=\"submit\"\n              aria-label={selectors.pages.Login.submit}\n              className={submitButton}\n              disabled={isLoggingIn}\n            >\n              {isLoggingIn ? 'Logging in...' : 'Log in'}\n            </Button>\n            {children}\n          </>\n        )}\n      </Form>\n    </div>\n  );\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAwC,OAAxC;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,aAA3C;AAEA,SAASC,aAAT,QAA8B,gCAA9B;;;;AAYA,MAAMC,aAAa,GAAGR,GAAI;AAC1B;AACA;AACA,CAHA;AAKA,OAAO,MAAMS,YAAY,GAAGT,GAAI;AAChC;AACA;AACA,CAHO;AAKP,OAAO,MAAMU,SAAoB,GAAG,CAAC;EAAEC,QAAF;EAAYC,QAAZ;EAAsBC,WAAtB;EAAmCC,YAAnC;EAAiDC;AAAjD,CAAD,KAAkE;EACpG,oBACE;IAAK,SAAS,EAAEP,aAAhB;IAAA,uBACE,KAAC,IAAD;MAAM,QAAQ,EAAEI,QAAhB;MAA0B,UAAU,EAAC,UAArC;MAAA,UACG,CAAC;QAAEI,QAAF;QAAYC;MAAZ,CAAD;QAAA;;QAAA,oBACC;UAAA,wBACE,KAAC,KAAD;YAAO,KAAK,EAAC,mBAAb;YAAiC,OAAO,EAAE,CAAC,CAACA,MAAM,CAACC,IAAnD;YAAyD,KAAK,kBAAED,MAAM,CAACC,IAAT,iDAAE,aAAaC,OAA7E;YAAA,uBACE,KAAC,KAAD,oBACMH,QAAQ,CAAC,MAAD,EAAS;cAAEI,QAAQ,EAAE;YAAZ,CAAT,CADd;cAEE,SAAS,MAFX;cAGE,cAAc,EAAC,MAHjB;cAIE,WAAW,EAAEL,SAJf;cAKE,cAAYb,SAAS,CAACmB,KAAV,CAAgBC,KAAhB,CAAsBC;YALpC;UADF,EADF,eAUE,KAAC,KAAD;YAAO,KAAK,EAAC,UAAb;YAAwB,OAAO,EAAE,CAAC,CAACN,MAAM,CAACO,QAA1C;YAAoD,KAAK,sBAAEP,MAAM,CAACO,QAAT,qDAAE,iBAAiBL,OAA5E;YAAA,uBACE,KAAC,aAAD;cACE,EAAE,EAAC,kBADL;cAEE,YAAY,EAAC,kBAFf;cAGE,YAAY,EAAEL;YAHhB,GAIME,QAAQ,CAAC,UAAD,EAAa;cAAEI,QAAQ,EAAE;YAAZ,CAAb,CAJd;UADF,EAVF,eAkBE,KAAC,MAAD;YACE,IAAI,EAAC,QADP;YAEE,cAAYlB,SAAS,CAACmB,KAAV,CAAgBC,KAAhB,CAAsBG,MAFpC;YAGE,SAAS,EAAEhB,YAHb;YAIE,QAAQ,EAAEI,WAJZ;YAAA,UAMGA,WAAW,GAAG,eAAH,GAAqB;UANnC,EAlBF,EA0BGF,QA1BH;QAAA,EADD;MAAA;IADH;EADF,EADF;AAoCD,CArCM"},"metadata":{},"sourceType":"module"}