{"ast":null,"code":"import { variableAdapters } from '../adapters';\nimport { setOptionFromUrl } from '../state/actions';\nimport { toKeyedAction } from '../state/keyedVariablesReducer';\nimport { getVariable } from '../state/selectors';\nimport { changeVariableProp } from '../state/sharedReducer';\nimport { ensureStringValues, toKeyedVariableIdentifier, toVariablePayload } from '../utils';\nimport { createTextBoxOptions } from './reducer';\nexport const updateTextBoxVariableOptions = identifier => {\n  return async (dispatch, getState) => {\n    const {\n      rootStateKey,\n      type\n    } = identifier;\n    dispatch(toKeyedAction(rootStateKey, createTextBoxOptions(toVariablePayload(identifier))));\n    const variableInState = getVariable(identifier, getState());\n    await variableAdapters.get(type).setValue(variableInState, variableInState.options[0], true);\n  };\n};\nexport const setTextBoxVariableOptionsFromUrl = (identifier, urlValue) => async (dispatch, getState) => {\n  const {\n    rootStateKey\n  } = identifier;\n  const variableInState = getVariable(identifier, getState());\n  const stringUrlValue = ensureStringValues(urlValue);\n  dispatch(toKeyedAction(rootStateKey, changeVariableProp(toVariablePayload(variableInState, {\n    propName: 'query',\n    propValue: stringUrlValue\n  }))));\n  await dispatch(setOptionFromUrl(toKeyedVariableIdentifier(variableInState), stringUrlValue));\n};","map":{"version":3,"names":["variableAdapters","setOptionFromUrl","toKeyedAction","getVariable","changeVariableProp","ensureStringValues","toKeyedVariableIdentifier","toVariablePayload","createTextBoxOptions","updateTextBoxVariableOptions","identifier","dispatch","getState","rootStateKey","type","variableInState","get","setValue","options","setTextBoxVariableOptionsFromUrl","urlValue","stringUrlValue","propName","propValue"],"sources":["/home/soula/grafana/public/app/features/variables/textbox/actions.ts"],"sourcesContent":["import { UrlQueryValue } from '@grafana/data';\n\nimport { ThunkResult } from '../../../types';\nimport { variableAdapters } from '../adapters';\nimport { setOptionFromUrl } from '../state/actions';\nimport { toKeyedAction } from '../state/keyedVariablesReducer';\nimport { getVariable } from '../state/selectors';\nimport { changeVariableProp } from '../state/sharedReducer';\nimport { KeyedVariableIdentifier } from '../state/types';\nimport { TextBoxVariableModel } from '../types';\nimport { ensureStringValues, toKeyedVariableIdentifier, toVariablePayload } from '../utils';\n\nimport { createTextBoxOptions } from './reducer';\n\nexport const updateTextBoxVariableOptions = (identifier: KeyedVariableIdentifier): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const { rootStateKey, type } = identifier;\n    dispatch(toKeyedAction(rootStateKey, createTextBoxOptions(toVariablePayload(identifier))));\n\n    const variableInState = getVariable<TextBoxVariableModel>(identifier, getState());\n    await variableAdapters.get(type).setValue(variableInState, variableInState.options[0], true);\n  };\n};\n\nexport const setTextBoxVariableOptionsFromUrl =\n  (identifier: KeyedVariableIdentifier, urlValue: UrlQueryValue): ThunkResult<void> =>\n  async (dispatch, getState) => {\n    const { rootStateKey } = identifier;\n    const variableInState = getVariable<TextBoxVariableModel>(identifier, getState());\n\n    const stringUrlValue = ensureStringValues(urlValue);\n    dispatch(\n      toKeyedAction(\n        rootStateKey,\n        changeVariableProp(toVariablePayload(variableInState, { propName: 'query', propValue: stringUrlValue }))\n      )\n    );\n\n    await dispatch(setOptionFromUrl(toKeyedVariableIdentifier(variableInState), stringUrlValue));\n  };\n"],"mappings":"AAGA,SAASA,gBAAT,QAAiC,aAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAGA,SAASC,kBAAT,EAA6BC,yBAA7B,EAAwDC,iBAAxD,QAAiF,UAAjF;AAEA,SAASC,oBAAT,QAAqC,WAArC;AAEA,OAAO,MAAMC,4BAA4B,GAAIC,UAAD,IAA4D;EACtG,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,MAAM;MAAEC,YAAF;MAAgBC;IAAhB,IAAyBJ,UAA/B;IACAC,QAAQ,CAACT,aAAa,CAACW,YAAD,EAAeL,oBAAoB,CAACD,iBAAiB,CAACG,UAAD,CAAlB,CAAnC,CAAd,CAAR;IAEA,MAAMK,eAAe,GAAGZ,WAAW,CAAuBO,UAAvB,EAAmCE,QAAQ,EAA3C,CAAnC;IACA,MAAMZ,gBAAgB,CAACgB,GAAjB,CAAqBF,IAArB,EAA2BG,QAA3B,CAAoCF,eAApC,EAAqDA,eAAe,CAACG,OAAhB,CAAwB,CAAxB,CAArD,EAAiF,IAAjF,CAAN;EACD,CAND;AAOD,CARM;AAUP,OAAO,MAAMC,gCAAgC,GAC3C,CAACT,UAAD,EAAsCU,QAAtC,KACA,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EAC5B,MAAM;IAAEC;EAAF,IAAmBH,UAAzB;EACA,MAAMK,eAAe,GAAGZ,WAAW,CAAuBO,UAAvB,EAAmCE,QAAQ,EAA3C,CAAnC;EAEA,MAAMS,cAAc,GAAGhB,kBAAkB,CAACe,QAAD,CAAzC;EACAT,QAAQ,CACNT,aAAa,CACXW,YADW,EAEXT,kBAAkB,CAACG,iBAAiB,CAACQ,eAAD,EAAkB;IAAEO,QAAQ,EAAE,OAAZ;IAAqBC,SAAS,EAAEF;EAAhC,CAAlB,CAAlB,CAFP,CADP,CAAR;EAOA,MAAMV,QAAQ,CAACV,gBAAgB,CAACK,yBAAyB,CAACS,eAAD,CAA1B,EAA6CM,cAA7C,CAAjB,CAAd;AACD,CAfI"},"metadata":{},"sourceType":"module"}