{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isNumber } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { getDisplayValueAlignmentFactors, getFieldDisplayValues, VizOrientation } from '@grafana/data';\nimport { BarGauge, DataLinksContextMenu, VizRepeater } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class BarGaugePanel extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderComponent\", (valueProps, menuProps) => {\n      const {\n        options,\n        fieldConfig\n      } = this.props;\n      const {\n        value,\n        alignmentFactors,\n        orientation,\n        width,\n        height,\n        count\n      } = valueProps;\n      const {\n        field,\n        display,\n        view,\n        colIndex\n      } = value;\n      const {\n        openMenu,\n        targetClassName\n      } = menuProps;\n      let processor = undefined;\n\n      if (view && isNumber(colIndex)) {\n        processor = view.getFieldDisplayProcessor(colIndex);\n      }\n\n      return /*#__PURE__*/_jsx(BarGauge, {\n        value: clearNameForSingleSeries(count, fieldConfig.defaults, display),\n        width: width,\n        height: height,\n        orientation: orientation,\n        field: field,\n        text: options.text,\n        display: processor,\n        theme: config.theme2,\n        itemSpacing: this.getItemSpacing(),\n        displayMode: options.displayMode,\n        onClick: openMenu,\n        className: targetClassName,\n        alignmentFactors: count > 1 ? alignmentFactors : undefined,\n        showUnfilled: options.showUnfilled\n      });\n    });\n\n    _defineProperty(this, \"renderValue\", valueProps => {\n      const {\n        value,\n        orientation\n      } = valueProps;\n      const {\n        hasLinks,\n        getLinks\n      } = value;\n\n      if (hasLinks && getLinks) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            width: '100%',\n            display: orientation === VizOrientation.Vertical ? 'flex' : 'initial'\n          },\n          children: /*#__PURE__*/_jsx(DataLinksContextMenu, {\n            links: getLinks,\n            config: value.field,\n            children: api => this.renderComponent(valueProps, api)\n          })\n        });\n      }\n\n      return this.renderComponent(valueProps, {});\n    });\n\n    _defineProperty(this, \"getValues\", () => {\n      const {\n        data,\n        options,\n        replaceVariables,\n        fieldConfig,\n        timeZone\n      } = this.props;\n      return getFieldDisplayValues({\n        fieldConfig,\n        reduceOptions: options.reduceOptions,\n        replaceVariables,\n        theme: config.theme2,\n        data: data.series,\n        timeZone\n      });\n    });\n  }\n\n  getItemSpacing() {\n    if (this.props.options.displayMode === 'lcd') {\n      return 2;\n    }\n\n    return 10;\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      options,\n      data,\n      renderCounter\n    } = this.props;\n    return /*#__PURE__*/_jsx(VizRepeater, {\n      source: data,\n      getAlignmentFactors: getDisplayValueAlignmentFactors,\n      getValues: this.getValues,\n      renderValue: this.renderValue,\n      renderCounter: renderCounter,\n      width: width,\n      height: height,\n      minVizWidth: options.minVizWidth,\n      minVizHeight: options.minVizHeight,\n      itemSpacing: this.getItemSpacing(),\n      orientation: options.orientation\n    });\n  }\n\n}\nexport function clearNameForSingleSeries(count, field, display) {\n  if (count === 1 && !field.displayName) {\n    return Object.assign({}, display, {\n      title: undefined\n    });\n  }\n\n  return display;\n}","map":{"version":3,"names":["isNumber","React","PureComponent","getDisplayValueAlignmentFactors","getFieldDisplayValues","VizOrientation","BarGauge","DataLinksContextMenu","VizRepeater","config","BarGaugePanel","valueProps","menuProps","options","fieldConfig","props","value","alignmentFactors","orientation","width","height","count","field","display","view","colIndex","openMenu","targetClassName","processor","undefined","getFieldDisplayProcessor","clearNameForSingleSeries","defaults","text","theme2","getItemSpacing","displayMode","showUnfilled","hasLinks","getLinks","Vertical","api","renderComponent","data","replaceVariables","timeZone","reduceOptions","theme","series","render","renderCounter","getValues","renderValue","minVizWidth","minVizHeight","displayName","title"],"sources":["/home/soula/grafana/public/app/plugins/panel/bargauge/BarGaugePanel.tsx"],"sourcesContent":["import { isNumber } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport {\n  DisplayValueAlignmentFactors,\n  FieldDisplay,\n  getDisplayValueAlignmentFactors,\n  getFieldDisplayValues,\n  PanelProps,\n  FieldConfig,\n  DisplayProcessor,\n  DisplayValue,\n  VizOrientation,\n} from '@grafana/data';\nimport { BarGauge, DataLinksContextMenu, VizRepeater, VizRepeaterRenderValueProps } from '@grafana/ui';\nimport { DataLinksContextMenuApi } from '@grafana/ui/src/components/DataLinks/DataLinksContextMenu';\nimport { config } from 'app/core/config';\n\nimport { PanelOptions } from './models.gen';\n\nexport class BarGaugePanel extends PureComponent<PanelProps<PanelOptions>> {\n  renderComponent = (\n    valueProps: VizRepeaterRenderValueProps<FieldDisplay, DisplayValueAlignmentFactors>,\n    menuProps: DataLinksContextMenuApi\n  ): JSX.Element => {\n    const { options, fieldConfig } = this.props;\n    const { value, alignmentFactors, orientation, width, height, count } = valueProps;\n    const { field, display, view, colIndex } = value;\n    const { openMenu, targetClassName } = menuProps;\n\n    let processor: DisplayProcessor | undefined = undefined;\n    if (view && isNumber(colIndex)) {\n      processor = view.getFieldDisplayProcessor(colIndex);\n    }\n\n    return (\n      <BarGauge\n        value={clearNameForSingleSeries(count, fieldConfig.defaults, display)}\n        width={width}\n        height={height}\n        orientation={orientation}\n        field={field}\n        text={options.text}\n        display={processor}\n        theme={config.theme2}\n        itemSpacing={this.getItemSpacing()}\n        displayMode={options.displayMode}\n        onClick={openMenu}\n        className={targetClassName}\n        alignmentFactors={count > 1 ? alignmentFactors : undefined}\n        showUnfilled={options.showUnfilled}\n      />\n    );\n  };\n\n  renderValue = (valueProps: VizRepeaterRenderValueProps<FieldDisplay, DisplayValueAlignmentFactors>): JSX.Element => {\n    const { value, orientation } = valueProps;\n    const { hasLinks, getLinks } = value;\n\n    if (hasLinks && getLinks) {\n      return (\n        <div style={{ width: '100%', display: orientation === VizOrientation.Vertical ? 'flex' : 'initial' }}>\n          <DataLinksContextMenu links={getLinks} config={value.field}>\n            {(api) => this.renderComponent(valueProps, api)}\n          </DataLinksContextMenu>\n        </div>\n      );\n    }\n\n    return this.renderComponent(valueProps, {});\n  };\n\n  getValues = (): FieldDisplay[] => {\n    const { data, options, replaceVariables, fieldConfig, timeZone } = this.props;\n\n    return getFieldDisplayValues({\n      fieldConfig,\n      reduceOptions: options.reduceOptions,\n      replaceVariables,\n      theme: config.theme2,\n      data: data.series,\n      timeZone,\n    });\n  };\n\n  getItemSpacing(): number {\n    if (this.props.options.displayMode === 'lcd') {\n      return 2;\n    }\n\n    return 10;\n  }\n\n  render() {\n    const { height, width, options, data, renderCounter } = this.props;\n\n    return (\n      <VizRepeater\n        source={data}\n        getAlignmentFactors={getDisplayValueAlignmentFactors}\n        getValues={this.getValues}\n        renderValue={this.renderValue}\n        renderCounter={renderCounter}\n        width={width}\n        height={height}\n        minVizWidth={options.minVizWidth}\n        minVizHeight={options.minVizHeight}\n        itemSpacing={this.getItemSpacing()}\n        orientation={options.orientation}\n      />\n    );\n  }\n}\n\nexport function clearNameForSingleSeries(count: number, field: FieldConfig<any>, display: DisplayValue): DisplayValue {\n  if (count === 1 && !field.displayName) {\n    return {\n      ...display,\n      title: undefined,\n    };\n  }\n\n  return display;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}