{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\nimport { ColorSwatch } from './ColorSwatch';\nimport NamedColorsGroup from './NamedColorsGroup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const NamedColorsPalette = ({\n  color,\n  onChange\n}) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const swatches = [];\n\n  for (const hue of theme.visualization.hues) {\n    swatches.push( /*#__PURE__*/_jsx(NamedColorsGroup, {\n      selectedColor: color,\n      hue: hue,\n      onColorSelect: onChange\n    }, hue.name));\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.swatches,\n      children: swatches\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.extraColors,\n      children: [/*#__PURE__*/_jsx(ColorSwatch, {\n        isSelected: color === 'transparent',\n        color: 'rgba(0,0,0,0)',\n        label: \"Transparent\",\n        onClick: () => onChange('transparent')\n      }), /*#__PURE__*/_jsx(ColorSwatch, {\n        isSelected: color === 'text',\n        color: theme.colors.text.primary,\n        label: \"Text color\",\n        onClick: () => onChange('text')\n      })]\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    extraColors: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      gap: ${theme.spacing(1)};\n      padding: ${theme.spacing(1, 0)};\n    `,\n    swatches: css`\n      display: grid;\n      flex-grow: 1;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useStyles2","useTheme2","ColorSwatch","NamedColorsGroup","NamedColorsPalette","color","onChange","theme","styles","getStyles","swatches","hue","visualization","hues","push","name","extraColors","colors","text","primary","container","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ColorPicker/NamedColorsPalette.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\n\nimport { ColorSwatch } from './ColorSwatch';\nimport NamedColorsGroup from './NamedColorsGroup';\n\nexport interface NamedColorsPaletteProps {\n  color?: string;\n  onChange: (colorName: string) => void;\n}\n\nexport const NamedColorsPalette = ({ color, onChange }: NamedColorsPaletteProps) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const swatches: JSX.Element[] = [];\n  for (const hue of theme.visualization.hues) {\n    swatches.push(<NamedColorsGroup key={hue.name} selectedColor={color} hue={hue} onColorSelect={onChange} />);\n  }\n\n  return (\n    <>\n      <div className={styles.swatches}>{swatches}</div>\n      <div className={styles.extraColors}>\n        <ColorSwatch\n          isSelected={color === 'transparent'}\n          color={'rgba(0,0,0,0)'}\n          label=\"Transparent\"\n          onClick={() => onChange('transparent')}\n        />\n        <ColorSwatch\n          isSelected={color === 'text'}\n          color={theme.colors.text.primary}\n          label=\"Text color\"\n          onClick={() => onChange('text')}\n        />\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    extraColors: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      gap: ${theme.spacing(1)};\n      padding: ${theme.spacing(1, 0)};\n    `,\n    swatches: css`\n      display: grid;\n      flex-grow: 1;\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,2BAAtC;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAOA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAAkD;EAClF,MAAMC,KAAK,GAAGN,SAAS,EAAvB;EACA,MAAMO,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EAEA,MAAMC,QAAuB,GAAG,EAAhC;;EACA,KAAK,MAAMC,GAAX,IAAkBJ,KAAK,CAACK,aAAN,CAAoBC,IAAtC,EAA4C;IAC1CH,QAAQ,CAACI,IAAT,eAAc,KAAC,gBAAD;MAAiC,aAAa,EAAET,KAAhD;MAAuD,GAAG,EAAEM,GAA5D;MAAiE,aAAa,EAAEL;IAAhF,GAAuBK,GAAG,CAACI,IAA3B,CAAd;EACD;;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAEP,MAAM,CAACE,QAAvB;MAAA,UAAkCA;IAAlC,EADF,eAEE;MAAK,SAAS,EAAEF,MAAM,CAACQ,WAAvB;MAAA,wBACE,KAAC,WAAD;QACE,UAAU,EAAEX,KAAK,KAAK,aADxB;QAEE,KAAK,EAAE,eAFT;QAGE,KAAK,EAAC,aAHR;QAIE,OAAO,EAAE,MAAMC,QAAQ,CAAC,aAAD;MAJzB,EADF,eAOE,KAAC,WAAD;QACE,UAAU,EAAED,KAAK,KAAK,MADxB;QAEE,KAAK,EAAEE,KAAK,CAACU,MAAN,CAAaC,IAAb,CAAkBC,OAF3B;QAGE,KAAK,EAAC,YAHR;QAIE,OAAO,EAAE,MAAMb,QAAQ,CAAC,MAAD;MAJzB,EAPF;IAAA,EAFF;EAAA,EADF;AAmBD,CA5BM;;AA8BP,MAAMG,SAAS,GAAIF,KAAD,IAA0B;EAC1C,OAAO;IACLa,SAAS,EAAEtB,GAAI;AACnB;AACA;AACA,KAJS;IAKLkB,WAAW,EAAElB,GAAI;AACrB;AACA;AACA;AACA,aAAaS,KAAK,CAACc,OAAN,CAAc,CAAd,CAAiB;AAC9B,iBAAiBd,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAoB;AACrC,KAXS;IAYLX,QAAQ,EAAEZ,GAAI;AAClB;AACA;AACA;EAfS,CAAP;AAiBD,CAlBD"},"metadata":{},"sourceType":"module"}