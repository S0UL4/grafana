{"ast":null,"code":"var _br, _br2;\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport React, { memo } from 'react';\nimport tinycolor from 'tinycolor2';\nimport { getFieldColorModeForField } from '@grafana/data';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\nimport { statToString } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst nodeR = 40;\n\nconst getStyles = theme => ({\n  mainGroup: css`\n    cursor: pointer;\n    font-size: 10px;\n  `,\n  mainCircle: css`\n    fill: ${theme.components.panel.background};\n  `,\n  hoverCircle: css`\n    opacity: 0.5;\n    fill: transparent;\n    stroke: ${theme.colors.primary.text};\n  `,\n  text: css`\n    fill: ${theme.colors.text.primary};\n  `,\n  titleText: css`\n    text-align: center;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    background-color: ${tinycolor(theme.colors.background.primary).setAlpha(0.6).toHex8String()};\n    width: 100px;\n  `,\n  statsText: css`\n    text-align: center;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    width: 70px;\n  `,\n  textHovering: css`\n    width: 200px;\n    & span {\n      background-color: ${tinycolor(theme.colors.background.primary).setAlpha(0.8).toHex8String()};\n    }\n  `\n});\n\nexport const Node = /*#__PURE__*/memo(function Node(props) {\n  const {\n    node,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n    hovering\n  } = props;\n  const styles = useStyles2(getStyles);\n\n  if (!(node.x !== undefined && node.y !== undefined)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"g\", {\n    \"data-node-id\": node.id,\n    className: styles.mainGroup,\n    onMouseEnter: () => {\n      onMouseEnter(node.id);\n    },\n    onMouseLeave: () => {\n      onMouseLeave(node.id);\n    },\n    onClick: event => {\n      onClick(event, node);\n    },\n    \"aria-label\": `Node: ${node.title}`,\n    children: [/*#__PURE__*/_jsx(\"circle\", {\n      className: styles.mainCircle,\n      r: nodeR,\n      cx: node.x,\n      cy: node.y\n    }), hovering && /*#__PURE__*/_jsx(\"circle\", {\n      className: styles.hoverCircle,\n      r: nodeR - 3,\n      cx: node.x,\n      cy: node.y,\n      strokeWidth: 2\n    }), /*#__PURE__*/_jsx(ColorCircle, {\n      node: node\n    }), /*#__PURE__*/_jsxs(\"g\", {\n      className: styles.text,\n      children: [/*#__PURE__*/_jsx(\"foreignObject\", {\n        x: node.x - (hovering ? 100 : 35),\n        y: node.y - 15,\n        width: hovering ? '200' : '70',\n        height: \"40\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: cx(styles.statsText, hovering && styles.textHovering),\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            children: node.mainStat && statToString(node.mainStat, node.dataFrameRowIndex)\n          }), _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), /*#__PURE__*/_jsx(\"span\", {\n            children: node.secondaryStat && statToString(node.secondaryStat, node.dataFrameRowIndex)\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"foreignObject\", {\n        x: node.x - (hovering ? 100 : 50),\n        y: node.y + nodeR + 5,\n        width: hovering ? '200' : '100',\n        height: \"40\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: cx(styles.titleText, hovering && styles.textHovering),\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            children: node.title\n          }), _br2 || (_br2 = /*#__PURE__*/_jsx(\"br\", {})), /*#__PURE__*/_jsx(\"span\", {\n            children: node.subTitle\n          })]\n        })\n      })]\n    })]\n  });\n});\n/**\n * Shows the outer segmented circle with different colors based on the supplied data.\n */\n\nfunction ColorCircle(props) {\n  const {\n    node\n  } = props;\n  const fullStat = node.arcSections.find(s => s.values.get(node.dataFrameRowIndex) === 1);\n  const theme = useTheme2();\n\n  if (fullStat) {\n    var _fullStat$config$colo;\n\n    // Doing arc with path does not work well so it's better to just do a circle in that case\n    return /*#__PURE__*/_jsx(\"circle\", {\n      fill: \"none\",\n      stroke: theme.visualization.getColorByName(((_fullStat$config$colo = fullStat.config.color) === null || _fullStat$config$colo === void 0 ? void 0 : _fullStat$config$colo.fixedColor) || ''),\n      strokeWidth: 2,\n      r: nodeR,\n      cx: node.x,\n      cy: node.y\n    });\n  }\n\n  const nonZero = node.arcSections.filter(s => s.values.get(node.dataFrameRowIndex) !== 0);\n\n  if (nonZero.length === 0) {\n    // Fallback if no arc is defined\n    return /*#__PURE__*/_jsx(\"circle\", {\n      fill: \"none\",\n      stroke: node.color ? getColor(node.color, node.dataFrameRowIndex, theme) : 'gray',\n      strokeWidth: 2,\n      r: nodeR,\n      cx: node.x,\n      cy: node.y\n    });\n  }\n\n  const {\n    elements\n  } = nonZero.reduce((acc, section) => {\n    var _section$config$color;\n\n    const color = ((_section$config$color = section.config.color) === null || _section$config$color === void 0 ? void 0 : _section$config$color.fixedColor) || '';\n    const value = section.values.get(node.dataFrameRowIndex);\n\n    const el = /*#__PURE__*/_jsx(ArcSection, {\n      r: nodeR,\n      x: node.x,\n      y: node.y,\n      startPercent: acc.percent,\n      percent: value,\n      color: theme.visualization.getColorByName(color),\n      strokeWidth: 2\n    }, color);\n\n    acc.elements.push(el);\n    acc.percent = acc.percent + value;\n    return acc;\n  }, {\n    elements: [],\n    percent: 0\n  });\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: elements\n  });\n}\n\nfunction ArcSection({\n  r,\n  x,\n  y,\n  startPercent,\n  percent,\n  color,\n  strokeWidth = 2\n}) {\n  const endPercent = startPercent + percent;\n  const startXPos = x + Math.sin(2 * Math.PI * startPercent) * r;\n  const startYPos = y - Math.cos(2 * Math.PI * startPercent) * r;\n  const endXPos = x + Math.sin(2 * Math.PI * endPercent) * r;\n  const endYPos = y - Math.cos(2 * Math.PI * endPercent) * r;\n  const largeArc = percent > 0.5 ? '1' : '0';\n  return /*#__PURE__*/_jsx(\"path\", {\n    fill: \"none\",\n    d: `M ${startXPos} ${startYPos} A ${r} ${r} 0 ${largeArc} 1 ${endXPos} ${endYPos}`,\n    stroke: color,\n    strokeWidth: strokeWidth\n  });\n}\n\nfunction getColor(field, index, theme) {\n  if (!field.config.color) {\n    return field.values.get(index);\n  }\n\n  return getFieldColorModeForField(field).getCalculator(field, theme)(0, field.values.get(index));\n}","map":{"version":3,"names":["css","cx","React","memo","tinycolor","getFieldColorModeForField","useStyles2","useTheme2","statToString","nodeR","getStyles","theme","mainGroup","mainCircle","components","panel","background","hoverCircle","colors","primary","text","titleText","setAlpha","toHex8String","statsText","textHovering","Node","props","node","onMouseEnter","onMouseLeave","onClick","hovering","styles","x","undefined","y","id","event","title","mainStat","dataFrameRowIndex","secondaryStat","subTitle","ColorCircle","fullStat","arcSections","find","s","values","get","visualization","getColorByName","config","color","fixedColor","nonZero","filter","length","getColor","elements","reduce","acc","section","value","el","percent","push","ArcSection","r","startPercent","strokeWidth","endPercent","startXPos","Math","sin","PI","startYPos","cos","endXPos","endYPos","largeArc","field","index","getCalculator"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/Node.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport cx from 'classnames';\nimport React, { MouseEvent, memo } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { Field, getFieldColorModeForField, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { NodeDatum } from './types';\nimport { statToString } from './utils';\n\nconst nodeR = 40;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  mainGroup: css`\n    cursor: pointer;\n    font-size: 10px;\n  `,\n\n  mainCircle: css`\n    fill: ${theme.components.panel.background};\n  `,\n\n  hoverCircle: css`\n    opacity: 0.5;\n    fill: transparent;\n    stroke: ${theme.colors.primary.text};\n  `,\n\n  text: css`\n    fill: ${theme.colors.text.primary};\n  `,\n\n  titleText: css`\n    text-align: center;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    background-color: ${tinycolor(theme.colors.background.primary).setAlpha(0.6).toHex8String()};\n    width: 100px;\n  `,\n\n  statsText: css`\n    text-align: center;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    width: 70px;\n  `,\n\n  textHovering: css`\n    width: 200px;\n    & span {\n      background-color: ${tinycolor(theme.colors.background.primary).setAlpha(0.8).toHex8String()};\n    }\n  `,\n});\n\nexport const Node = memo(function Node(props: {\n  node: NodeDatum;\n  onMouseEnter: (id: string) => void;\n  onMouseLeave: (id: string) => void;\n  onClick: (event: MouseEvent<SVGElement>, node: NodeDatum) => void;\n  hovering: boolean;\n}) {\n  const { node, onMouseEnter, onMouseLeave, onClick, hovering } = props;\n  const styles = useStyles2(getStyles);\n\n  if (!(node.x !== undefined && node.y !== undefined)) {\n    return null;\n  }\n\n  return (\n    <g\n      data-node-id={node.id}\n      className={styles.mainGroup}\n      onMouseEnter={() => {\n        onMouseEnter(node.id);\n      }}\n      onMouseLeave={() => {\n        onMouseLeave(node.id);\n      }}\n      onClick={(event) => {\n        onClick(event, node);\n      }}\n      aria-label={`Node: ${node.title}`}\n    >\n      <circle className={styles.mainCircle} r={nodeR} cx={node.x} cy={node.y} />\n      {hovering && <circle className={styles.hoverCircle} r={nodeR - 3} cx={node.x} cy={node.y} strokeWidth={2} />}\n      <ColorCircle node={node} />\n      <g className={styles.text}>\n        <foreignObject x={node.x - (hovering ? 100 : 35)} y={node.y - 15} width={hovering ? '200' : '70'} height=\"40\">\n          <div className={cx(styles.statsText, hovering && styles.textHovering)}>\n            <span>{node.mainStat && statToString(node.mainStat, node.dataFrameRowIndex)}</span>\n            <br />\n            <span>{node.secondaryStat && statToString(node.secondaryStat, node.dataFrameRowIndex)}</span>\n          </div>\n        </foreignObject>\n        <foreignObject\n          x={node.x - (hovering ? 100 : 50)}\n          y={node.y + nodeR + 5}\n          width={hovering ? '200' : '100'}\n          height=\"40\"\n        >\n          <div className={cx(styles.titleText, hovering && styles.textHovering)}>\n            <span>{node.title}</span>\n            <br />\n            <span>{node.subTitle}</span>\n          </div>\n        </foreignObject>\n      </g>\n    </g>\n  );\n});\n\n/**\n * Shows the outer segmented circle with different colors based on the supplied data.\n */\nfunction ColorCircle(props: { node: NodeDatum }) {\n  const { node } = props;\n  const fullStat = node.arcSections.find((s) => s.values.get(node.dataFrameRowIndex) === 1);\n  const theme = useTheme2();\n\n  if (fullStat) {\n    // Doing arc with path does not work well so it's better to just do a circle in that case\n    return (\n      <circle\n        fill=\"none\"\n        stroke={theme.visualization.getColorByName(fullStat.config.color?.fixedColor || '')}\n        strokeWidth={2}\n        r={nodeR}\n        cx={node.x}\n        cy={node.y}\n      />\n    );\n  }\n\n  const nonZero = node.arcSections.filter((s) => s.values.get(node.dataFrameRowIndex) !== 0);\n  if (nonZero.length === 0) {\n    // Fallback if no arc is defined\n    return (\n      <circle\n        fill=\"none\"\n        stroke={node.color ? getColor(node.color, node.dataFrameRowIndex, theme) : 'gray'}\n        strokeWidth={2}\n        r={nodeR}\n        cx={node.x}\n        cy={node.y}\n      />\n    );\n  }\n\n  const { elements } = nonZero.reduce(\n    (acc, section) => {\n      const color = section.config.color?.fixedColor || '';\n      const value = section.values.get(node.dataFrameRowIndex);\n      const el = (\n        <ArcSection\n          key={color}\n          r={nodeR}\n          x={node.x!}\n          y={node.y!}\n          startPercent={acc.percent}\n          percent={value}\n          color={theme.visualization.getColorByName(color)}\n          strokeWidth={2}\n        />\n      );\n      acc.elements.push(el);\n      acc.percent = acc.percent + value;\n      return acc;\n    },\n    { elements: [] as React.ReactNode[], percent: 0 }\n  );\n\n  return <>{elements}</>;\n}\n\nfunction ArcSection({\n  r,\n  x,\n  y,\n  startPercent,\n  percent,\n  color,\n  strokeWidth = 2,\n}: {\n  r: number;\n  x: number;\n  y: number;\n  startPercent: number;\n  percent: number;\n  color: string;\n  strokeWidth?: number;\n}) {\n  const endPercent = startPercent + percent;\n  const startXPos = x + Math.sin(2 * Math.PI * startPercent) * r;\n  const startYPos = y - Math.cos(2 * Math.PI * startPercent) * r;\n  const endXPos = x + Math.sin(2 * Math.PI * endPercent) * r;\n  const endYPos = y - Math.cos(2 * Math.PI * endPercent) * r;\n  const largeArc = percent > 0.5 ? '1' : '0';\n  return (\n    <path\n      fill=\"none\"\n      d={`M ${startXPos} ${startYPos} A ${r} ${r} 0 ${largeArc} 1 ${endXPos} ${endYPos}`}\n      stroke={color}\n      strokeWidth={strokeWidth}\n    />\n  );\n}\n\nfunction getColor(field: Field, index: number, theme: GrafanaTheme2): string {\n  if (!field.config.color) {\n    return field.values.get(index);\n  }\n\n  return getFieldColorModeForField(field).getCalculator(field, theme)(0, field.values.get(index));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}