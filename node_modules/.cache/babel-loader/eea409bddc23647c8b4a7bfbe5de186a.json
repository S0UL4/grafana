{"ast":null,"code":"import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// When animating using max-height we need to use a static value.\n// If this is not enough, pass in <SlideDown maxHeight=\"....\nconst defaultMaxHeight = '200px';\nconst defaultDuration = 200;\nexport const defaultStyle = {\n  transition: `max-height ${defaultDuration}ms ease-in-out`,\n  overflow: 'hidden'\n};\nexport const SlideDown = ({\n  children,\n  in: inProp,\n  maxHeight = defaultMaxHeight,\n  style = defaultStyle\n}) => {\n  // There are 4 main states a Transition can be in:\n  // ENTERING, ENTERED, EXITING, EXITED\n  // https://reactcommunity.or[g/react-transition-group/\n  const transitionStyles = {\n    exited: {\n      maxHeight: 0\n    },\n    entering: {\n      maxHeight: maxHeight\n    },\n    entered: {\n      maxHeight: 'unset',\n      overflow: 'visible'\n    },\n    exiting: {\n      maxHeight: 0\n    }\n  };\n  return /*#__PURE__*/_jsx(Transition, {\n    in: inProp,\n    timeout: defaultDuration,\n    children: state => /*#__PURE__*/_jsx(\"div\", {\n      style: Object.assign({}, style, transitionStyles[state]),\n      children: children\n    })\n  });\n};","map":{"version":3,"names":["React","Transition","defaultMaxHeight","defaultDuration","defaultStyle","transition","overflow","SlideDown","children","in","inProp","maxHeight","style","transitionStyles","exited","entering","entered","exiting","state"],"sources":["/home/soula/grafana/public/app/core/components/Animations/SlideDown.tsx"],"sourcesContent":["import React, { CSSProperties, FC } from 'react';\nimport Transition from 'react-transition-group/Transition';\n\ninterface Style {\n  transition?: string;\n  overflow?: string;\n}\n\n// When animating using max-height we need to use a static value.\n// If this is not enough, pass in <SlideDown maxHeight=\"....\nconst defaultMaxHeight = '200px';\nconst defaultDuration = 200;\n\nexport const defaultStyle: Style = {\n  transition: `max-height ${defaultDuration}ms ease-in-out`,\n  overflow: 'hidden',\n};\n\nexport interface Props {\n  children: React.ReactNode;\n  in: boolean;\n  maxHeight?: number;\n  style?: CSSProperties;\n}\n\nexport const SlideDown: FC<Props> = ({ children, in: inProp, maxHeight = defaultMaxHeight, style = defaultStyle }) => {\n  // There are 4 main states a Transition can be in:\n  // ENTERING, ENTERED, EXITING, EXITED\n  // https://reactcommunity.or[g/react-transition-group/\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { maxHeight: 0 },\n    entering: { maxHeight: maxHeight },\n    entered: { maxHeight: 'unset', overflow: 'visible' },\n    exiting: { maxHeight: 0 },\n  };\n\n  return (\n    <Transition in={inProp} timeout={defaultDuration}>\n      {(state) => (\n        <div\n          style={{\n            ...style,\n            ...transitionStyles[state],\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AAOA;AACA;AACA,MAAMC,gBAAgB,GAAG,OAAzB;AACA,MAAMC,eAAe,GAAG,GAAxB;AAEA,OAAO,MAAMC,YAAmB,GAAG;EACjCC,UAAU,EAAG,cAAaF,eAAgB,gBADT;EAEjCG,QAAQ,EAAE;AAFuB,CAA5B;AAYP,OAAO,MAAMC,SAAoB,GAAG,CAAC;EAAEC,QAAF;EAAYC,EAAE,EAAEC,MAAhB;EAAwBC,SAAS,GAAGT,gBAApC;EAAsDU,KAAK,GAAGR;AAA9D,CAAD,KAAkF;EACpH;EACA;EACA;EACA,MAAMS,gBAAkD,GAAG;IACzDC,MAAM,EAAE;MAAEH,SAAS,EAAE;IAAb,CADiD;IAEzDI,QAAQ,EAAE;MAAEJ,SAAS,EAAEA;IAAb,CAF+C;IAGzDK,OAAO,EAAE;MAAEL,SAAS,EAAE,OAAb;MAAsBL,QAAQ,EAAE;IAAhC,CAHgD;IAIzDW,OAAO,EAAE;MAAEN,SAAS,EAAE;IAAb;EAJgD,CAA3D;EAOA,oBACE,KAAC,UAAD;IAAY,EAAE,EAAED,MAAhB;IAAwB,OAAO,EAAEP,eAAjC;IAAA,UACIe,KAAD,iBACC;MACE,KAAK,oBACAN,KADA,EAEAC,gBAAgB,CAACK,KAAD,CAFhB,CADP;MAAA,UAMGV;IANH;EAFJ,EADF;AAcD,CAzBM"},"metadata":{},"sourceType":"module"}