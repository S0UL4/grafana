{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo, useState, useRef, useImperativeHandle } from 'react';\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { Icon } from '../Icon/Icon';\nimport { SubMenu } from './SubMenu';\n/** @internal */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/** @internal */\nexport const MenuItem = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    url,\n    icon,\n    label,\n    ariaLabel,\n    ariaChecked,\n    target,\n    onClick,\n    className,\n    active,\n    childItems,\n    role = 'menuitem',\n    tabIndex = -1\n  } = props;\n  const styles = useStyles2(getStyles);\n  const [isActive, setIsActive] = useState(active);\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false);\n  const [openedWithArrow, setOpenedWithArrow] = useState(false);\n  const onMouseEnter = useCallback(() => {\n    setIsSubMenuOpen(true);\n    setIsActive(true);\n  }, []);\n  const onMouseLeave = useCallback(() => {\n    setIsSubMenuOpen(false);\n    setIsActive(false);\n  }, []);\n  const hasSubMenu = useMemo(() => childItems && childItems.length > 0, [childItems]);\n  const Wrapper = hasSubMenu ? 'div' : url === undefined ? 'button' : 'a';\n  const itemStyle = cx({\n    [styles.item]: true,\n    [styles.activeItem]: isActive\n  }, className);\n  const localRef = useRef(null);\n  useImperativeHandle(ref, () => localRef.current);\n\n  const handleKeys = event => {\n    switch (event.key) {\n      case 'ArrowRight':\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (hasSubMenu) {\n          setIsSubMenuOpen(true);\n          setOpenedWithArrow(true);\n          setIsActive(true);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const closeSubMenu = () => {\n    var _localRef$current;\n\n    setIsSubMenuOpen(false);\n    setIsActive(false);\n    localRef === null || localRef === void 0 ? void 0 : (_localRef$current = localRef.current) === null || _localRef$current === void 0 ? void 0 : _localRef$current.focus();\n  };\n\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    target: target,\n    className: itemStyle,\n    rel: target === '_blank' ? 'noopener noreferrer' : undefined,\n    href: url,\n    onClick: onClick ? event => {\n      if (!(event.ctrlKey || event.metaKey || event.shiftKey) && onClick) {\n        event.preventDefault();\n        event.stopPropagation();\n        onClick(event);\n      }\n    } : undefined,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onKeyDown: handleKeys,\n    role: url === undefined ? role : undefined,\n    \"data-role\": \"menuitem\" // used to identify menuitem in Menu.tsx\n    ,\n    ref: localRef,\n    \"aria-label\": ariaLabel,\n    \"aria-checked\": ariaChecked,\n    tabIndex: tabIndex,\n    children: [icon && /*#__PURE__*/_jsx(Icon, {\n      name: icon,\n      className: styles.icon,\n      \"aria-hidden\": true\n    }), label, hasSubMenu && /*#__PURE__*/_jsx(SubMenu, {\n      items: childItems,\n      isOpen: isSubMenuOpen,\n      openedWithArrow: openedWithArrow,\n      setOpenedWithArrow: setOpenedWithArrow,\n      close: closeSubMenu\n    })]\n  });\n}));\nMenuItem.displayName = 'MenuItem';\n/** @internal */\n\nconst getStyles = theme => {\n  return {\n    item: css`\n      background: none;\n      cursor: pointer;\n      white-space: nowrap;\n      color: ${theme.colors.text.primary};\n      display: flex;\n      padding: 5px 12px 5px 10px;\n      margin: 0;\n      border: none;\n      width: 100%;\n      position: relative;\n\n      &:hover,\n      &:focus,\n      &:focus-visible {\n        background: ${theme.colors.action.hover};\n        color: ${theme.colors.text.primary};\n        text-decoration: none;\n      }\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n    `,\n    activeItem: css`\n      background: ${theme.colors.action.selected};\n    `,\n    icon: css`\n      opacity: 0.7;\n      margin-right: 10px;\n      color: ${theme.colors.text.secondary};\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useCallback","useMemo","useState","useRef","useImperativeHandle","useStyles2","getFocusStyles","Icon","SubMenu","MenuItem","memo","forwardRef","props","ref","url","icon","label","ariaLabel","ariaChecked","target","onClick","className","active","childItems","role","tabIndex","styles","getStyles","isActive","setIsActive","isSubMenuOpen","setIsSubMenuOpen","openedWithArrow","setOpenedWithArrow","onMouseEnter","onMouseLeave","hasSubMenu","length","Wrapper","undefined","itemStyle","item","activeItem","localRef","current","handleKeys","event","key","preventDefault","stopPropagation","closeSubMenu","focus","ctrlKey","metaKey","shiftKey","displayName","theme","colors","text","primary","action","hover","selected","secondary"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Menu/MenuItem.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ReactElement, useCallback, useMemo, useState, useRef, useImperativeHandle } from 'react';\n\nimport { GrafanaTheme2, LinkTarget } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { SubMenu } from './SubMenu';\n\n/** @internal */\nexport type MenuItemElement = HTMLAnchorElement & HTMLButtonElement & HTMLDivElement;\n\n/** @internal */\nexport interface MenuItemProps<T = any> {\n  /** Label of the menu item */\n  label: string;\n  /** Aria label for accessibility support */\n  ariaLabel?: string;\n  /** Aria checked for accessibility support */\n  ariaChecked?: boolean;\n  /** Target of the menu item (i.e. new window)  */\n  target?: LinkTarget;\n  /** Icon of the menu item */\n  icon?: IconName;\n  /** Role of the menu item */\n  role?: string;\n  /** Url of the menu item */\n  url?: string;\n  /** Handler for the click behaviour */\n  onClick?: (event?: React.SyntheticEvent<HTMLElement>, payload?: T) => void;\n  /** Custom MenuItem styles*/\n  className?: string;\n  /** Active */\n  active?: boolean;\n\n  tabIndex?: number;\n\n  /** List of menu items for the subMenu */\n  childItems?: Array<ReactElement<MenuItemProps>>;\n}\n\n/** @internal */\nexport const MenuItem = React.memo(\n  React.forwardRef<MenuItemElement, MenuItemProps>((props, ref) => {\n    const {\n      url,\n      icon,\n      label,\n      ariaLabel,\n      ariaChecked,\n      target,\n      onClick,\n      className,\n      active,\n      childItems,\n      role = 'menuitem',\n      tabIndex = -1,\n    } = props;\n    const styles = useStyles2(getStyles);\n    const [isActive, setIsActive] = useState(active);\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false);\n    const [openedWithArrow, setOpenedWithArrow] = useState(false);\n    const onMouseEnter = useCallback(() => {\n      setIsSubMenuOpen(true);\n      setIsActive(true);\n    }, []);\n    const onMouseLeave = useCallback(() => {\n      setIsSubMenuOpen(false);\n      setIsActive(false);\n    }, []);\n    const hasSubMenu = useMemo(() => childItems && childItems.length > 0, [childItems]);\n    const Wrapper = hasSubMenu ? 'div' : url === undefined ? 'button' : 'a';\n    const itemStyle = cx(\n      {\n        [styles.item]: true,\n        [styles.activeItem]: isActive,\n      },\n      className\n    );\n\n    const localRef = useRef<MenuItemElement>(null);\n    useImperativeHandle(ref, () => localRef.current!);\n\n    const handleKeys = (event: React.KeyboardEvent) => {\n      switch (event.key) {\n        case 'ArrowRight':\n          event.preventDefault();\n          event.stopPropagation();\n          if (hasSubMenu) {\n            setIsSubMenuOpen(true);\n            setOpenedWithArrow(true);\n            setIsActive(true);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n\n    const closeSubMenu = () => {\n      setIsSubMenuOpen(false);\n      setIsActive(false);\n      localRef?.current?.focus();\n    };\n\n    return (\n      <Wrapper\n        target={target}\n        className={itemStyle}\n        rel={target === '_blank' ? 'noopener noreferrer' : undefined}\n        href={url}\n        onClick={\n          onClick\n            ? (event) => {\n                if (!(event.ctrlKey || event.metaKey || event.shiftKey) && onClick) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                  onClick(event);\n                }\n              }\n            : undefined\n        }\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onKeyDown={handleKeys}\n        role={url === undefined ? role : undefined}\n        data-role=\"menuitem\" // used to identify menuitem in Menu.tsx\n        ref={localRef}\n        aria-label={ariaLabel}\n        aria-checked={ariaChecked}\n        tabIndex={tabIndex}\n      >\n        {icon && <Icon name={icon} className={styles.icon} aria-hidden />}\n        {label}\n        {hasSubMenu && (\n          <SubMenu\n            items={childItems}\n            isOpen={isSubMenuOpen}\n            openedWithArrow={openedWithArrow}\n            setOpenedWithArrow={setOpenedWithArrow}\n            close={closeSubMenu}\n          />\n        )}\n      </Wrapper>\n    );\n  })\n);\nMenuItem.displayName = 'MenuItem';\n\n/** @internal */\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    item: css`\n      background: none;\n      cursor: pointer;\n      white-space: nowrap;\n      color: ${theme.colors.text.primary};\n      display: flex;\n      padding: 5px 12px 5px 10px;\n      margin: 0;\n      border: none;\n      width: 100%;\n      position: relative;\n\n      &:hover,\n      &:focus,\n      &:focus-visible {\n        background: ${theme.colors.action.hover};\n        color: ${theme.colors.text.primary};\n        text-decoration: none;\n      }\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n    `,\n    activeItem: css`\n      background: ${theme.colors.action.selected};\n    `,\n    icon: css`\n      opacity: 0.7;\n      margin-right: 10px;\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}