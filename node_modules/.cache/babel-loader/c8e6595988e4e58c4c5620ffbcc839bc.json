{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { dispatch } from 'app/store/store';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { changeDatasource } from '../state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from '../state/history';\nimport { setQueries } from '../state/query';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state, {\n  exploreId\n}) {\n  const explore = state.explore;\n  const {\n    datasourceInstance\n  } = explore[exploreId];\n  return {\n    exploreId,\n    datasourceInstance\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nconst getStyles = stylesFactory((theme, isRemoved) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n  /* If datasource was removed, card will have inactive color */\n\n  const cardColor = theme.colors.bg2;\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `\n  };\n});\nexport function RichHistoryCard(props) {\n  var _query$comment;\n\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState(undefined);\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceName !== (datasourceInstance === null || datasourceInstance === void 0 ? void 0 : datasourceInstance.name);\n\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceName, {\n        importQueries: true\n      });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource\n    });\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map(q => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = queryId => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled\n      });\n    }; // For starred queries, we want confirmation. For non-starred, we don't.\n\n\n    if (query.starred) {\n      appEvents.publish(new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your starred query?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => performDelete(query.id)\n      }));\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = keyEvent => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.updateCommentContainer,\n    \"aria-label\": comment ? 'Update comment form' : 'Add comment form',\n    children: [/*#__PURE__*/_jsx(TextArea, {\n      value: comment,\n      placeholder: comment ? undefined : 'An optional description of what the query does.',\n      onChange: e => setComment(e.currentTarget.value),\n      className: styles.textArea\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.commentButtonRow,\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: onUpdateComment,\n        \"aria-label\": \"Submit button\",\n        children: \"Save comment\"\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        onClick: onCancelUpdateComment,\n        children: \"Cancel\"\n      })]\n    })]\n  });\n\n  const queryActionButtons = /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.queryActionButtons,\n    children: [/*#__PURE__*/_jsx(IconButton, {\n      name: \"comment-alt\",\n      onClick: toggleActiveUpdateComment,\n      title: ((_query$comment = query.comment) === null || _query$comment === void 0 ? void 0 : _query$comment.length) > 0 ? 'Edit comment' : 'Add comment'\n    }), /*#__PURE__*/_jsx(IconButton, {\n      name: \"copy\",\n      onClick: onCopyQuery,\n      title: \"Copy query to clipboard\"\n    }), !isRemoved && /*#__PURE__*/_jsx(IconButton, {\n      name: \"share-alt\",\n      onClick: onCreateShortLink,\n      title: \"Copy shortened link to clipboard\"\n    }), /*#__PURE__*/_jsx(IconButton, {\n      name: \"trash-alt\",\n      title: 'Delete query',\n      onClick: onDeleteQuery\n    }), /*#__PURE__*/_jsx(IconButton, {\n      name: query.starred ? 'favorite' : 'star',\n      iconType: query.starred ? 'mono' : 'default',\n      onClick: onStarrQuery,\n      title: query.starred ? 'Unstar query' : 'Star query'\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.queryCard,\n    onKeyDown: onKeyDown,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cardRow,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.datasourceContainer,\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          src: dsImg,\n          \"aria-label\": \"Data source icon\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          \"aria-label\": \"Data source name\",\n          children: isRemoved ? 'Data source does not exist anymore' : query.datasourceName\n        })]\n      }), queryActionButtons]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: cx(styles.cardRow),\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.queryContainer,\n        children: [query.queries.map((q, i) => {\n          const queryText = createQueryText(q, queryDsInstance);\n          return /*#__PURE__*/_jsx(\"div\", {\n            \"aria-label\": \"Query text\",\n            className: styles.queryRow,\n            children: queryText\n          }, `${q}-${i}`);\n        }), !activeUpdateComment && query.comment && /*#__PURE__*/_jsx(\"div\", {\n          \"aria-label\": \"Query comment\",\n          className: styles.comment,\n          children: query.comment\n        }), activeUpdateComment && updateComment]\n      }), !activeUpdateComment && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.runButton,\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          onClick: onRunQuery,\n          disabled: isRemoved,\n          children: (datasourceInstance === null || datasourceInstance === void 0 ? void 0 : datasourceInstance.name) === query.datasourceName ? 'Run query' : 'Switch data source and run query'\n        })\n      })]\n    })]\n  });\n}\nexport default connector(RichHistoryCard);","map":{"version":3,"names":["css","cx","React","useState","useEffect","connect","config","getDataSourceSrv","reportInteraction","stylesFactory","useTheme","TextArea","Button","IconButton","notifyApp","appEvents","createSuccessNotification","copyStringToClipboard","createUrlFromRichHistory","createQueryText","createAndCopyShortLink","dispatch","ShowConfirmModalEvent","changeDatasource","starHistoryItem","commentHistoryItem","deleteHistoryItem","setQueries","mapStateToProps","state","exploreId","explore","datasourceInstance","mapDispatchToProps","connector","getStyles","theme","isRemoved","rigtColumnWidth","rigtColumnContentWidth","cardColor","colors","bg2","queryCard","border1","spacing","sm","border","radius","palette","orange","cardRow","xs","typography","size","base","datasourceContainer","weight","semibold","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","regular","commentButtonRow","textArea","runButton","md","RichHistoryCard","props","query","dsImg","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","undefined","getQueryDsInstance","ds","get","datasourceName","styles","onRunQuery","queriesToRun","queries","differentDataSource","name","importQueries","queryHistoryEnabled","onCopyQuery","queriesToCopy","map","q","join","onCreateShortLink","link","onDeleteQuery","performDelete","queryId","starred","publish","title","text","yesText","icon","onConfirm","id","onStarrQuery","newValue","toggleActiveUpdateComment","onUpdateComment","onCancelUpdateComment","onKeyDown","keyEvent","key","shiftKey","ctrlKey","updateComment","e","currentTarget","value","length","i","queryText"],"sources":["/home/soula/grafana/public/app/features/explore/RichHistory/RichHistoryCard.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { GrafanaTheme, DataSourceApi, DataQuery } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { changeDatasource } from '../state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from '../state/history';\nimport { setQueries } from '../state/query';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceName !== datasourceInstance?.name;\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(query.id),\n        })\n      );\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,iBAAnC,QAA4D,kBAA5D;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,MAA5C,EAAoDC,UAApD,QAAsE,aAAtE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,4BAA1D;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAIA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,iBAA9C,QAAuE,kBAAvE;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA4C;EAAEC;AAAF,CAA5C,EAAqF;EACnF,MAAMC,OAAO,GAAGF,KAAK,CAACE,OAAtB;EACA,MAAM;IAAEC;EAAF,IAAyBD,OAAO,CAACD,SAAD,CAAtC;EACA,OAAO;IACLA,SADK;IAELE;EAFK,CAAP;AAID;;AAED,MAAMC,kBAAkB,GAAG;EACzBV,gBADyB;EAEzBG,iBAFyB;EAGzBD,kBAHyB;EAIzBD,eAJyB;EAKzBG;AALyB,CAA3B;AAQA,MAAMO,SAAS,GAAG7B,OAAO,CAACuB,eAAD,EAAkBK,kBAAlB,CAAzB;AAUA,MAAME,SAAS,GAAG1B,aAAa,CAAC,CAAC2B,KAAD,EAAsBC,SAAtB,KAA6C;EAC3E;EACA,MAAMC,eAAe,GAAG,OAAxB;EACA,MAAMC,sBAAsB,GAAG,OAA/B;EAEA;;EACA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAaC,GAA/B;EAEA,OAAO;IACLC,SAAS,EAAE3C,GAAI;AACnB;AACA;AACA,0BAA0BoC,KAAK,CAACK,MAAN,CAAaG,OAAQ;AAC/C,gBAAgBR,KAAK,CAACS,OAAN,CAAcC,EAAG;AACjC,0BAA0BN,SAAU;AACpC,uBAAuBJ,KAAK,CAACW,MAAN,CAAaC,MAAb,CAAoBF,EAAG;AAC9C;AACA,iBAAiBV,KAAK,CAACa,OAAN,CAAcC,MAAO;AACtC;AACA,KAXS;IAYLC,OAAO,EAAEnD,GAAI;AACjB;AACA;AACA;AACA,iBAAiBoC,KAAK,CAACS,OAAN,CAAcC,EAAG;AAClC;AACA;AACA,mCAAmCV,KAAK,CAACK,MAAN,CAAaG,OAAQ;AACxD,mBAAmBR,KAAK,CAACS,OAAN,CAAcO,EAAG,IAAGhB,KAAK,CAACS,OAAN,CAAcC,EAAG;AACxD;AACA;AACA,kBAAkBV,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBC,IAAK;AAC7C,qBAAqBnB,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBC,IAAK;AAChD,wBAAwBnB,KAAK,CAACS,OAAN,CAAcC,EAAG;AACzC;AACA,KA3BS;IA4BLU,mBAAmB,EAAExD,GAAI;AAC7B;AACA;AACA,mBAAmBoC,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBR,EAAG;AAC5C,qBAAqBV,KAAK,CAACiB,UAAN,CAAiBI,MAAjB,CAAwBC,QAAS;AACtD,KAjCS;IAkCLC,kBAAkB,EAAE3D,GAAI;AAC5B,mBAAmBuC,sBAAuB;AAC1C;AACA;AACA,mBAAmBH,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBC,IAAK;AAC9C;AACA,uBAAuBnB,KAAK,CAACS,OAAN,CAAcC,EAAG;AACxC;AACA,KA1CS;IA2CLc,cAAc,EAAE5D,GAAI;AACxB,qBAAqBoC,KAAK,CAACiB,UAAN,CAAiBI,MAAjB,CAAwBC,QAAS;AACtD,2BAA2BpB,eAAgB;AAC3C,KA9CS;IA+CLuB,QAAQ,EAAE7D,GAAI;AAClB,8BAA8BoC,KAAK,CAACK,MAAN,CAAaG,OAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAvDS;IAwDLkB,sBAAsB,EAAE9D,GAAI;AAChC,2BAA2BsC,eAAgB;AAC3C,oBAAoBF,KAAK,CAACS,OAAN,CAAcC,EAAG;AACrC,KA3DS;IA4DLiB,OAAO,EAAE/D,GAAI;AACjB;AACA,mBAAmBoC,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,CAAsBR,EAAG;AAC5C,qBAAqBV,KAAK,CAACiB,UAAN,CAAiBI,MAAjB,CAAwBO,OAAQ;AACrD,oBAAoB5B,KAAK,CAACS,OAAN,CAAcO,EAAG;AACrC,KAjES;IAkELa,gBAAgB,EAAEjE,GAAI;AAC1B;AACA,wBAAwBoC,KAAK,CAACS,OAAN,CAAcC,EAAG;AACzC;AACA,KAtES;IAuELoB,QAAQ,EAAElE,GAAI;AAClB;AACA,KAzES;IA0ELmE,SAAS,EAAEnE,GAAI;AACnB,mBAAmBuC,sBAAuB;AAC1C;AACA;AACA;AACA;AACA,mBAAmBH,KAAK,CAACS,OAAN,CAAcO,EAAG,IAAGhB,KAAK,CAACS,OAAN,CAAcuB,EAAG;AACxD;AACA;AACA;AACA;AACA;AACA;EAtFS,CAAP;AAwFD,CAhG8B,CAA/B;AAkGA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAuC;EAAA;;EAC5C,MAAM;IACJC,KADI;IAEJC,KAFI;IAGJnC,SAHI;IAIJZ,kBAJI;IAKJD,eALI;IAMJE,iBANI;IAOJH,gBAPI;IAQJO,SARI;IASJE,kBATI;IAUJL;EAVI,IAWF2C,KAXJ;EAYA,MAAM,CAACG,mBAAD,EAAsBC,sBAAtB,IAAgDvE,QAAQ,CAAC,KAAD,CAA9D;EACA,MAAM,CAAC4D,OAAD,EAAUY,UAAV,IAAwBxE,QAAQ,CAAqBoE,KAAK,CAACR,OAA3B,CAAtC;EACA,MAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwC1E,QAAQ,CAA4B2E,SAA5B,CAAtD;EAEA1E,SAAS,CAAC,MAAM;IACd,MAAM2E,kBAAkB,GAAG,YAAY;MACrC,MAAMC,EAAE,GAAG,MAAMzE,gBAAgB,GAAG0E,GAAnB,CAAuBV,KAAK,CAACW,cAA7B,CAAjB;MACAL,kBAAkB,CAACG,EAAD,CAAlB;IACD,CAHD;;IAKAD,kBAAkB;EACnB,CAPQ,EAON,CAACR,KAAK,CAACW,cAAP,CAPM,CAAT;EASA,MAAM9C,KAAK,GAAG1B,QAAQ,EAAtB;EACA,MAAMyE,MAAM,GAAGhD,SAAS,CAACC,KAAD,EAAQC,SAAR,CAAxB;;EAEA,MAAM+C,UAAU,GAAG,YAAY;IAC7B,MAAMC,YAAY,GAAGd,KAAK,CAACe,OAA3B;IACA,MAAMC,mBAAmB,GAAGhB,KAAK,CAACW,cAAN,MAAyBlD,kBAAzB,aAAyBA,kBAAzB,uBAAyBA,kBAAkB,CAAEwD,IAA7C,CAA5B;;IACA,IAAID,mBAAJ,EAAyB;MACvB,MAAMhE,gBAAgB,CAACO,SAAD,EAAYyC,KAAK,CAACW,cAAlB,EAAkC;QAAEO,aAAa,EAAE;MAAjB,CAAlC,CAAtB;MACA9D,UAAU,CAACG,SAAD,EAAYuD,YAAZ,CAAV;IACD,CAHD,MAGO;MACL1D,UAAU,CAACG,SAAD,EAAYuD,YAAZ,CAAV;IACD;;IACD7E,iBAAiB,CAAC,mCAAD,EAAsC;MACrDkF,mBAAmB,EAAEpF,MAAM,CAACoF,mBADyB;MAErDH;IAFqD,CAAtC,CAAjB;EAID,CAbD;;EAeA,MAAMI,WAAW,GAAG,MAAM;IACxB,MAAMC,aAAa,GAAGrB,KAAK,CAACe,OAAN,CAAcO,GAAd,CAAmBC,CAAD,IAAO3E,eAAe,CAAC2E,CAAD,EAAIlB,eAAJ,CAAxC,EAA8DmB,IAA9D,CAAmE,IAAnE,CAAtB;IACA9E,qBAAqB,CAAC2E,aAAD,CAArB;IACAvE,QAAQ,CAACP,SAAS,CAACE,yBAAyB,CAAC,2BAAD,CAA1B,CAAV,CAAR;EACD,CAJD;;EAMA,MAAMgF,iBAAiB,GAAG,YAAY;IACpC,MAAMC,IAAI,GAAG/E,wBAAwB,CAACqD,KAAD,CAArC;IACA,MAAMnD,sBAAsB,CAAC6E,IAAD,CAA5B;EACD,CAHD;;EAKA,MAAMC,aAAa,GAAG,MAAM;IAC1B,MAAMC,aAAa,GAAIC,OAAD,IAAqB;MACzC1E,iBAAiB,CAAC0E,OAAD,CAAjB;MACA/E,QAAQ,CAACP,SAAS,CAACE,yBAAyB,CAAC,eAAD,CAA1B,CAAV,CAAR;MACAR,iBAAiB,CAAC,uCAAD,EAA0C;QACzDkF,mBAAmB,EAAEpF,MAAM,CAACoF;MAD6B,CAA1C,CAAjB;IAGD,CAND,CAD0B,CAS1B;;;IACA,IAAInB,KAAK,CAAC8B,OAAV,EAAmB;MACjBtF,SAAS,CAACuF,OAAV,CACE,IAAIhF,qBAAJ,CAA0B;QACxBiF,KAAK,EAAE,QADiB;QAExBC,IAAI,EAAE,iEAFkB;QAGxBC,OAAO,EAAE,QAHe;QAIxBC,IAAI,EAAE,WAJkB;QAKxBC,SAAS,EAAE,MAAMR,aAAa,CAAC5B,KAAK,CAACqC,EAAP;MALN,CAA1B,CADF;IASD,CAVD,MAUO;MACLT,aAAa,CAAC5B,KAAK,CAACqC,EAAP,CAAb;IACD;EACF,CAvBD;;EAyBA,MAAMC,YAAY,GAAG,MAAM;IACzBrF,eAAe,CAAC+C,KAAK,CAACqC,EAAP,EAAW,CAACrC,KAAK,CAAC8B,OAAlB,CAAf;IACA7F,iBAAiB,CAAC,uCAAD,EAA0C;MACzDkF,mBAAmB,EAAEpF,MAAM,CAACoF,mBAD6B;MAEzDoB,QAAQ,EAAE,CAACvC,KAAK,CAAC8B;IAFwC,CAA1C,CAAjB;EAID,CAND;;EAQA,MAAMU,yBAAyB,GAAG,MAAMrC,sBAAsB,CAAC,CAACD,mBAAF,CAA9D;;EAEA,MAAMuC,eAAe,GAAG,MAAM;IAC5BvF,kBAAkB,CAAC8C,KAAK,CAACqC,EAAP,EAAW7C,OAAX,CAAlB;IACAW,sBAAsB,CAAC,KAAD,CAAtB;IACAlE,iBAAiB,CAAC,yCAAD,EAA4C;MAC3DkF,mBAAmB,EAAEpF,MAAM,CAACoF;IAD+B,CAA5C,CAAjB;EAGD,CAND;;EAQA,MAAMuB,qBAAqB,GAAG,MAAM;IAClCvC,sBAAsB,CAAC,KAAD,CAAtB;IACAC,UAAU,CAACJ,KAAK,CAACR,OAAP,CAAV;EACD,CAHD;;EAKA,MAAMmD,SAAS,GAAIC,QAAD,IAAmC;IACnD,IAAIA,QAAQ,CAACC,GAAT,KAAiB,OAAjB,KAA6BD,QAAQ,CAACE,QAAT,IAAqBF,QAAQ,CAACG,OAA3D,CAAJ,EAAyE;MACvEN,eAAe;IAChB;;IAED,IAAIG,QAAQ,CAACC,GAAT,KAAiB,QAArB,EAA+B;MAC7BH,qBAAqB;IACtB;EACF,CARD;;EAUA,MAAMM,aAAa,gBACjB;IAAK,SAAS,EAAEpC,MAAM,CAACrB,sBAAvB;IAA+C,cAAYC,OAAO,GAAG,qBAAH,GAA2B,kBAA7F;IAAA,wBACE,KAAC,QAAD;MACE,KAAK,EAAEA,OADT;MAEE,WAAW,EAAEA,OAAO,GAAGe,SAAH,GAAe,iDAFrC;MAGE,QAAQ,EAAG0C,CAAD,IAAO7C,UAAU,CAAC6C,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAH7B;MAIE,SAAS,EAAEvC,MAAM,CAACjB;IAJpB,EADF,eAOE;MAAK,SAAS,EAAEiB,MAAM,CAAClB,gBAAvB;MAAA,wBACE,KAAC,MAAD;QAAQ,OAAO,EAAE+C,eAAjB;QAAkC,cAAW,eAA7C;QAAA;MAAA,EADF,eAIE,KAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,OAAO,EAAEC,qBAArC;QAAA;MAAA,EAJF;IAAA,EAPF;EAAA,EADF;;EAmBA,MAAMtD,kBAAkB,gBACtB;IAAK,SAAS,EAAEwB,MAAM,CAACxB,kBAAvB;IAAA,wBACE,KAAC,UAAD;MACE,IAAI,EAAC,aADP;MAEE,OAAO,EAAEoD,yBAFX;MAGE,KAAK,EAAE,mBAAAxC,KAAK,CAACR,OAAN,kEAAe4D,MAAf,IAAwB,CAAxB,GAA4B,cAA5B,GAA6C;IAHtD,EADF,eAME,KAAC,UAAD;MAAY,IAAI,EAAC,MAAjB;MAAwB,OAAO,EAAEhC,WAAjC;MAA8C,KAAK,EAAC;IAApD,EANF,EAOG,CAACtD,SAAD,iBACC,KAAC,UAAD;MAAY,IAAI,EAAC,WAAjB;MAA6B,OAAO,EAAE2D,iBAAtC;MAAyD,KAAK,EAAC;IAA/D,EARJ,eAUE,KAAC,UAAD;MAAY,IAAI,EAAC,WAAjB;MAA6B,KAAK,EAAE,cAApC;MAAoD,OAAO,EAAEE;IAA7D,EAVF,eAWE,KAAC,UAAD;MACE,IAAI,EAAE3B,KAAK,CAAC8B,OAAN,GAAgB,UAAhB,GAA6B,MADrC;MAEE,QAAQ,EAAE9B,KAAK,CAAC8B,OAAN,GAAgB,MAAhB,GAAyB,SAFrC;MAGE,OAAO,EAAEQ,YAHX;MAIE,KAAK,EAAEtC,KAAK,CAAC8B,OAAN,GAAgB,cAAhB,GAAiC;IAJ1C,EAXF;EAAA,EADF;;EAqBA,oBACE;IAAK,SAAS,EAAElB,MAAM,CAACxC,SAAvB;IAAkC,SAAS,EAAEuE,SAA7C;IAAA,wBACE;MAAK,SAAS,EAAE/B,MAAM,CAAChC,OAAvB;MAAA,wBACE;QAAK,SAAS,EAAEgC,MAAM,CAAC3B,mBAAvB;QAAA,wBACE;UAAK,GAAG,EAAEgB,KAAV;UAAiB,cAAW;QAA5B,EADF,eAEE;UAAK,cAAW,kBAAhB;UAAA,UACGnC,SAAS,GAAG,oCAAH,GAA0CkC,KAAK,CAACW;QAD5D,EAFF;MAAA,EADF,EAOGvB,kBAPH;IAAA,EADF,eAUE;MAAK,SAAS,EAAE1D,EAAE,CAACkF,MAAM,CAAChC,OAAR,CAAlB;MAAA,wBACE;QAAK,SAAS,EAAEgC,MAAM,CAACvB,cAAvB;QAAA,WACGW,KAAK,CAACe,OAAN,CAAcO,GAAd,CAAkB,CAACC,CAAD,EAAI8B,CAAJ,KAAU;UAC3B,MAAMC,SAAS,GAAG1G,eAAe,CAAC2E,CAAD,EAAIlB,eAAJ,CAAjC;UACA,oBACE;YAAK,cAAW,YAAhB;YAA+C,SAAS,EAAEO,MAAM,CAACtB,QAAjE;YAAA,UACGgE;UADH,GAAmC,GAAE/B,CAAE,IAAG8B,CAAE,EAA5C,CADF;QAKD,CAPA,CADH,EASG,CAACnD,mBAAD,IAAwBF,KAAK,CAACR,OAA9B,iBACC;UAAK,cAAW,eAAhB;UAAgC,SAAS,EAAEoB,MAAM,CAACpB,OAAlD;UAAA,UACGQ,KAAK,CAACR;QADT,EAVJ,EAcGU,mBAAmB,IAAI8C,aAd1B;MAAA,EADF,EAiBG,CAAC9C,mBAAD,iBACC;QAAK,SAAS,EAAEU,MAAM,CAAChB,SAAvB;QAAA,uBACE,KAAC,MAAD;UAAQ,OAAO,EAAC,WAAhB;UAA4B,OAAO,EAAEiB,UAArC;UAAiD,QAAQ,EAAE/C,SAA3D;UAAA,UACG,CAAAL,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAEwD,IAApB,MAA6BjB,KAAK,CAACW,cAAnC,GAAoD,WAApD,GAAkE;QADrE;MADF,EAlBJ;IAAA,EAVF;EAAA,EADF;AAsCD;AAED,eAAehD,SAAS,CAACmC,eAAD,CAAxB"},"metadata":{},"sourceType":"module"}