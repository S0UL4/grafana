{"ast":null,"code":"var _div, _div2, _div3;\n\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\nimport { applyFieldOverrides, getTimeZone } from '@grafana/data';\nimport { ErrorBoundaryAlert, useTheme2 } from '@grafana/ui';\nimport { appEvents } from 'app/core/core';\nimport { getPanelOptionsWithDefaults } from '../../dashboard/state/getPanelOptionsWithDefaults';\nimport { importPanelPlugin, syncGetPanelPlugin } from '../../plugins/importPanelPlugin';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultFieldConfig = {\n  defaults: {},\n  overrides: []\n};\nexport function PanelRenderer(props) {\n  const {\n    pluginId,\n    data,\n    timeZone = getTimeZone(),\n    options = {},\n    width,\n    height,\n    title,\n    onOptionsChange = () => {},\n    onChangeTimeRange = () => {},\n    onFieldConfigChange = () => {},\n    fieldConfig = defaultFieldConfig\n  } = props;\n  const [plugin, setPlugin] = useState(syncGetPanelPlugin(pluginId));\n  const [error, setError] = useState();\n  const optionsWithDefaults = useOptionDefaults(plugin, options, fieldConfig);\n  const dataWithOverrides = useFieldOverrides(plugin, optionsWithDefaults, data, timeZone);\n  useEffect(() => {\n    // If we already have a plugin and it's correct one do nothing\n    if (plugin && plugin.hasPluginId(pluginId)) {\n      return;\n    } // Async load the plugin\n\n\n    importPanelPlugin(pluginId).then(result => setPlugin(result)).catch(err => {\n      setError(err.message);\n    });\n  }, [pluginId, plugin]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [\"Failed to load plugin: \", error]\n    });\n  }\n\n  if (!plugin || !plugin.hasPluginId(pluginId)) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      children: \"Loading plugin panel...\"\n    }));\n  }\n\n  if (!plugin.panel) {\n    return _div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {\n      children: \"Seems like the plugin you are trying to load does not have a panel component.\"\n    }));\n  }\n\n  if (!dataWithOverrides) {\n    return _div3 || (_div3 = /*#__PURE__*/_jsx(\"div\", {\n      children: \"No panel data\"\n    }));\n  }\n\n  const PanelComponent = plugin.panel;\n  return /*#__PURE__*/_jsx(ErrorBoundaryAlert, {\n    dependencies: [plugin, data],\n    children: /*#__PURE__*/_jsx(PanelComponent, {\n      id: 1,\n      data: dataWithOverrides,\n      title: title,\n      timeRange: dataWithOverrides.timeRange,\n      timeZone: timeZone,\n      options: optionsWithDefaults.options,\n      fieldConfig: fieldConfig,\n      transparent: false,\n      width: width,\n      height: height,\n      renderCounter: 0,\n      replaceVariables: str => str,\n      onOptionsChange: onOptionsChange,\n      onFieldConfigChange: onFieldConfigChange,\n      onChangeTimeRange: onChangeTimeRange,\n      eventBus: appEvents\n    })\n  });\n}\n\nfunction useOptionDefaults(plugin, options, fieldConfig) {\n  return useMemo(() => {\n    if (!plugin) {\n      return;\n    }\n\n    return getPanelOptionsWithDefaults({\n      plugin,\n      currentOptions: options,\n      currentFieldConfig: fieldConfig,\n      isAfterPluginChange: false\n    });\n  }, [plugin, fieldConfig, options]);\n}\n\nfunction useFieldOverrides(plugin, defaultOptions, data, timeZone) {\n  const fieldConfig = defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.fieldConfig;\n  const series = data === null || data === void 0 ? void 0 : data.series;\n  const fieldConfigRegistry = plugin === null || plugin === void 0 ? void 0 : plugin.fieldConfigRegistry;\n  const theme = useTheme2();\n  const structureRev = useRef(0);\n  return useMemo(() => {\n    if (!fieldConfigRegistry || !fieldConfig || !data) {\n      return;\n    }\n\n    structureRev.current = structureRev.current + 1;\n    return Object.assign({}, data, {\n      series: applyFieldOverrides({\n        data: series,\n        fieldConfig,\n        fieldConfigRegistry,\n        replaceVariables: str => str,\n        theme,\n        timeZone\n      }),\n      structureRev: structureRev.current\n    });\n  }, [fieldConfigRegistry, fieldConfig, data, series, timeZone, theme]);\n}","map":{"version":3,"names":["React","useState","useMemo","useEffect","useRef","applyFieldOverrides","getTimeZone","ErrorBoundaryAlert","useTheme2","appEvents","getPanelOptionsWithDefaults","importPanelPlugin","syncGetPanelPlugin","defaultFieldConfig","defaults","overrides","PanelRenderer","props","pluginId","data","timeZone","options","width","height","title","onOptionsChange","onChangeTimeRange","onFieldConfigChange","fieldConfig","plugin","setPlugin","error","setError","optionsWithDefaults","useOptionDefaults","dataWithOverrides","useFieldOverrides","hasPluginId","then","result","catch","err","message","panel","PanelComponent","timeRange","str","currentOptions","currentFieldConfig","isAfterPluginChange","defaultOptions","series","fieldConfigRegistry","theme","structureRev","current","replaceVariables"],"sources":["/home/soula/grafana/public/app/features/panel/components/PanelRenderer.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect, useRef } from 'react';\n\nimport { applyFieldOverrides, FieldConfigSource, getTimeZone, PanelData, PanelPlugin } from '@grafana/data';\nimport { PanelRendererProps } from '@grafana/runtime';\nimport { ErrorBoundaryAlert, useTheme2 } from '@grafana/ui';\nimport { appEvents } from 'app/core/core';\n\nimport { getPanelOptionsWithDefaults, OptionDefaults } from '../../dashboard/state/getPanelOptionsWithDefaults';\nimport { importPanelPlugin, syncGetPanelPlugin } from '../../plugins/importPanelPlugin';\n\nconst defaultFieldConfig = { defaults: {}, overrides: [] };\n\nexport function PanelRenderer<P extends object = any, F extends object = any>(props: PanelRendererProps<P, F>) {\n  const {\n    pluginId,\n    data,\n    timeZone = getTimeZone(),\n    options = {},\n    width,\n    height,\n    title,\n    onOptionsChange = () => {},\n    onChangeTimeRange = () => {},\n    onFieldConfigChange = () => {},\n    fieldConfig = defaultFieldConfig,\n  } = props;\n\n  const [plugin, setPlugin] = useState(syncGetPanelPlugin(pluginId));\n  const [error, setError] = useState<string | undefined>();\n  const optionsWithDefaults = useOptionDefaults(plugin, options, fieldConfig);\n  const dataWithOverrides = useFieldOverrides(plugin, optionsWithDefaults, data, timeZone);\n\n  useEffect(() => {\n    // If we already have a plugin and it's correct one do nothing\n    if (plugin && plugin.hasPluginId(pluginId)) {\n      return;\n    }\n\n    // Async load the plugin\n    importPanelPlugin(pluginId)\n      .then((result) => setPlugin(result))\n      .catch((err: Error) => {\n        setError(err.message);\n      });\n  }, [pluginId, plugin]);\n\n  if (error) {\n    return <div>Failed to load plugin: {error}</div>;\n  }\n\n  if (!plugin || !plugin.hasPluginId(pluginId)) {\n    return <div>Loading plugin panel...</div>;\n  }\n\n  if (!plugin.panel) {\n    return <div>Seems like the plugin you are trying to load does not have a panel component.</div>;\n  }\n\n  if (!dataWithOverrides) {\n    return <div>No panel data</div>;\n  }\n\n  const PanelComponent = plugin.panel;\n\n  return (\n    <ErrorBoundaryAlert dependencies={[plugin, data]}>\n      <PanelComponent\n        id={1}\n        data={dataWithOverrides}\n        title={title}\n        timeRange={dataWithOverrides.timeRange}\n        timeZone={timeZone}\n        options={optionsWithDefaults!.options}\n        fieldConfig={fieldConfig}\n        transparent={false}\n        width={width}\n        height={height}\n        renderCounter={0}\n        replaceVariables={(str: string) => str}\n        onOptionsChange={onOptionsChange}\n        onFieldConfigChange={onFieldConfigChange}\n        onChangeTimeRange={onChangeTimeRange}\n        eventBus={appEvents}\n      />\n    </ErrorBoundaryAlert>\n  );\n}\n\nfunction useOptionDefaults<P extends object = any, F extends object = any>(\n  plugin: PanelPlugin | undefined,\n  options: P,\n  fieldConfig: FieldConfigSource<F>\n): OptionDefaults | undefined {\n  return useMemo(() => {\n    if (!plugin) {\n      return;\n    }\n\n    return getPanelOptionsWithDefaults({\n      plugin,\n      currentOptions: options,\n      currentFieldConfig: fieldConfig,\n      isAfterPluginChange: false,\n    });\n  }, [plugin, fieldConfig, options]);\n}\n\nfunction useFieldOverrides(\n  plugin: PanelPlugin | undefined,\n  defaultOptions: OptionDefaults | undefined,\n  data: PanelData | undefined,\n  timeZone: string\n): PanelData | undefined {\n  const fieldConfig = defaultOptions?.fieldConfig;\n  const series = data?.series;\n  const fieldConfigRegistry = plugin?.fieldConfigRegistry;\n  const theme = useTheme2();\n  const structureRev = useRef(0);\n\n  return useMemo(() => {\n    if (!fieldConfigRegistry || !fieldConfig || !data) {\n      return;\n    }\n    structureRev.current = structureRev.current + 1;\n\n    return {\n      ...data,\n      series: applyFieldOverrides({\n        data: series,\n        fieldConfig,\n        fieldConfigRegistry,\n        replaceVariables: (str: string) => str,\n        theme,\n        timeZone,\n      }),\n      structureRev: structureRev.current,\n    };\n  }, [fieldConfigRegistry, fieldConfig, data, series, timeZone, theme]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}