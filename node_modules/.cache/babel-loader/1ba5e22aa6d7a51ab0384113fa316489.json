{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { HorizontalConstraint, VerticalConstraint } from 'app/features/canvas';\nimport { iconItem } from 'app/features/canvas/elements/icon';\nimport { ElementState } from 'app/features/canvas/runtime/element';\nimport { getColorDimensionFromData, getResourceDimensionFromData, getScalarDimensionFromData, getScaleDimensionFromData, getTextDimensionFromData } from 'app/features/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport class IconPanel extends Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"element\", void 0);\n\n    _defineProperty(this, \"initElement\", props => {\n      this.element = new ElementState(iconItem, props.options.root);\n      this.updateSize(props);\n      this.element.updateData(this.dims);\n      return this.element;\n    });\n\n    _defineProperty(this, \"updateSize\", props => {\n      const {\n        width,\n        height\n      } = props;\n      this.element.options.constraint = {\n        vertical: VerticalConstraint.Top,\n        horizontal: HorizontalConstraint.Left\n      };\n      this.element.options.placement = {\n        left: 0,\n        top: 0,\n        width,\n        height\n      };\n    });\n\n    _defineProperty(this, \"dims\", {\n      getColor: color => getColorDimensionFromData(this.props.data, color),\n      getScale: scale => getScaleDimensionFromData(this.props.data, scale),\n      getScalar: scalar => getScalarDimensionFromData(this.props.data, scalar),\n      getText: text => getTextDimensionFromData(this.props.data, text),\n      getResource: res => getResourceDimensionFromData(this.props.data, res)\n    });\n\n    this.element = this.initElement(_props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var _this$props$options, _nextProps$options;\n\n    const {\n      width,\n      height,\n      data\n    } = this.props;\n    let changed = false;\n\n    if (width !== nextProps.width || height !== nextProps.height) {\n      this.updateSize(nextProps);\n      changed = true;\n    }\n\n    if (data !== nextProps.data) {\n      this.element.updateData(this.dims);\n      changed = true;\n    } // Reload the element when options change\n\n\n    if (((_this$props$options = this.props.options) === null || _this$props$options === void 0 ? void 0 : _this$props$options.root) !== ((_nextProps$options = nextProps.options) === null || _nextProps$options === void 0 ? void 0 : _nextProps$options.root)) {\n      this.initElement(nextProps);\n      changed = true;\n    }\n\n    return changed;\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n    return /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        width,\n        height,\n        overflow: 'hidden',\n        position: 'relative'\n      },\n      children: this.element.render()\n    });\n  }\n\n}","map":{"version":3,"names":["React","Component","HorizontalConstraint","VerticalConstraint","iconItem","ElementState","getColorDimensionFromData","getResourceDimensionFromData","getScalarDimensionFromData","getScaleDimensionFromData","getTextDimensionFromData","IconPanel","constructor","props","element","options","root","updateSize","updateData","dims","width","height","constraint","vertical","Top","horizontal","Left","placement","left","top","getColor","color","data","getScale","scale","getScalar","scalar","getText","text","getResource","res","initElement","shouldComponentUpdate","nextProps","changed","render","overflow","position"],"sources":["/home/soula/grafana/public/app/plugins/panel/icon/IconPanel.tsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport { PanelProps } from '@grafana/data';\nimport { HorizontalConstraint, VerticalConstraint } from 'app/features/canvas';\nimport { iconItem } from 'app/features/canvas/elements/icon';\nimport { ElementState } from 'app/features/canvas/runtime/element';\nimport {\n  ColorDimensionConfig,\n  DimensionContext,\n  getColorDimensionFromData,\n  getResourceDimensionFromData,\n  getScalarDimensionFromData,\n  getScaleDimensionFromData,\n  getTextDimensionFromData,\n  ResourceDimensionConfig,\n  ScalarDimensionConfig,\n  ScaleDimensionConfig,\n  TextDimensionConfig,\n} from 'app/features/dimensions';\n\nimport { PanelOptions } from './models.gen';\n\ninterface Props extends PanelProps<PanelOptions> {}\n\nexport class IconPanel extends Component<Props> {\n  private element: ElementState;\n\n  constructor(props: Props) {\n    super(props);\n    this.element = this.initElement(props);\n  }\n\n  initElement = (props: Props) => {\n    this.element = new ElementState(iconItem, props.options.root as any);\n    this.updateSize(props);\n    this.element.updateData(this.dims);\n    return this.element;\n  };\n\n  updateSize = (props: Props) => {\n    const { width, height } = props;\n    this.element.options.constraint = {\n      vertical: VerticalConstraint.Top,\n      horizontal: HorizontalConstraint.Left,\n    };\n    this.element.options.placement = {\n      left: 0,\n      top: 0,\n      width,\n      height,\n    };\n  };\n\n  dims: DimensionContext = {\n    getColor: (color: ColorDimensionConfig) => getColorDimensionFromData(this.props.data, color),\n    getScale: (scale: ScaleDimensionConfig) => getScaleDimensionFromData(this.props.data, scale),\n    getScalar: (scalar: ScalarDimensionConfig) => getScalarDimensionFromData(this.props.data, scalar),\n    getText: (text: TextDimensionConfig) => getTextDimensionFromData(this.props.data, text),\n    getResource: (res: ResourceDimensionConfig) => getResourceDimensionFromData(this.props.data, res),\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    const { width, height, data } = this.props;\n    let changed = false;\n\n    if (width !== nextProps.width || height !== nextProps.height) {\n      this.updateSize(nextProps);\n      changed = true;\n    }\n    if (data !== nextProps.data) {\n      this.element.updateData(this.dims);\n      changed = true;\n    }\n\n    // Reload the element when options change\n    if (this.props.options?.root !== nextProps.options?.root) {\n      this.initElement(nextProps);\n      changed = true;\n    }\n    return changed;\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <div style={{ width, height, overflow: 'hidden', position: 'relative' }}>{this.element.render()}</div>;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}