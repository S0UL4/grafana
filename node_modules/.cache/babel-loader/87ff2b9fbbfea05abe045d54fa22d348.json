{"ast":null,"code":"import { applyFieldOverrides, ArrayDataFrame, getDefaultTimeRange, LoadingState } from '@grafana/data';\nimport { config } from 'app/core/config';\nimport { SnapshotWorker } from '../../query/state/DashboardQueryRunner/SnapshotWorker';\nimport { getProcessedDataFrames } from '../../query/state/runRequest';\nimport { getTimeSrv } from '../services/TimeSrv';\nimport { applyPanelTimeOverrides } from './panel';\nexport function loadSnapshotData(panel, dashboard) {\n  const data = getProcessedDataFrames(panel.snapshotData);\n  const worker = new SnapshotWorker();\n  const options = {\n    dashboard,\n    range: getDefaultTimeRange()\n  };\n  const annotationEvents = worker.canWork(options) ? worker.getAnnotationsInSnapshot(dashboard, panel.id) : [];\n  const annotations = [new ArrayDataFrame(annotationEvents)];\n  const timeData = applyPanelTimeOverrides(panel, getTimeSrv().timeRange());\n  return {\n    timeRange: timeData.timeRange,\n    state: LoadingState.Done,\n    series: applyFieldOverrides({\n      data,\n      fieldConfig: {\n        defaults: {},\n        overrides: []\n      },\n      replaceVariables: panel.replaceVariables,\n      fieldConfigRegistry: panel.plugin.fieldConfigRegistry,\n      theme: config.theme2,\n      timeZone: dashboard.getTimezone()\n    }),\n    annotations\n  };\n}","map":{"version":3,"names":["applyFieldOverrides","ArrayDataFrame","getDefaultTimeRange","LoadingState","config","SnapshotWorker","getProcessedDataFrames","getTimeSrv","applyPanelTimeOverrides","loadSnapshotData","panel","dashboard","data","snapshotData","worker","options","range","annotationEvents","canWork","getAnnotationsInSnapshot","id","annotations","timeData","timeRange","state","Done","series","fieldConfig","defaults","overrides","replaceVariables","fieldConfigRegistry","plugin","theme","theme2","timeZone","getTimezone"],"sources":["/home/soula/grafana/public/app/features/dashboard/utils/loadSnapshotData.ts"],"sourcesContent":["import { applyFieldOverrides, ArrayDataFrame, getDefaultTimeRange, LoadingState, PanelData } from '@grafana/data';\nimport { config } from 'app/core/config';\n\nimport { SnapshotWorker } from '../../query/state/DashboardQueryRunner/SnapshotWorker';\nimport { getProcessedDataFrames } from '../../query/state/runRequest';\nimport { getTimeSrv } from '../services/TimeSrv';\nimport { DashboardModel, PanelModel } from '../state';\n\nimport { applyPanelTimeOverrides } from './panel';\n\nexport function loadSnapshotData(panel: PanelModel, dashboard: DashboardModel): PanelData {\n  const data = getProcessedDataFrames(panel.snapshotData);\n  const worker = new SnapshotWorker();\n  const options = { dashboard, range: getDefaultTimeRange() };\n  const annotationEvents = worker.canWork(options) ? worker.getAnnotationsInSnapshot(dashboard, panel.id) : [];\n  const annotations = [new ArrayDataFrame(annotationEvents)];\n  const timeData = applyPanelTimeOverrides(panel, getTimeSrv().timeRange());\n\n  return {\n    timeRange: timeData.timeRange,\n    state: LoadingState.Done,\n    series: applyFieldOverrides({\n      data,\n      fieldConfig: {\n        defaults: {},\n        overrides: [],\n      },\n      replaceVariables: panel.replaceVariables,\n      fieldConfigRegistry: panel.plugin!.fieldConfigRegistry,\n      theme: config.theme2,\n      timeZone: dashboard.getTimezone(),\n    }),\n    annotations,\n  };\n}\n"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,cAA9B,EAA8CC,mBAA9C,EAAmEC,YAAnE,QAAkG,eAAlG;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,cAAT,QAA+B,uDAA/B;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAGA,SAASC,uBAAT,QAAwC,SAAxC;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAA6CC,SAA7C,EAAmF;EACxF,MAAMC,IAAI,GAAGN,sBAAsB,CAACI,KAAK,CAACG,YAAP,CAAnC;EACA,MAAMC,MAAM,GAAG,IAAIT,cAAJ,EAAf;EACA,MAAMU,OAAO,GAAG;IAAEJ,SAAF;IAAaK,KAAK,EAAEd,mBAAmB;EAAvC,CAAhB;EACA,MAAMe,gBAAgB,GAAGH,MAAM,CAACI,OAAP,CAAeH,OAAf,IAA0BD,MAAM,CAACK,wBAAP,CAAgCR,SAAhC,EAA2CD,KAAK,CAACU,EAAjD,CAA1B,GAAiF,EAA1G;EACA,MAAMC,WAAW,GAAG,CAAC,IAAIpB,cAAJ,CAAmBgB,gBAAnB,CAAD,CAApB;EACA,MAAMK,QAAQ,GAAGd,uBAAuB,CAACE,KAAD,EAAQH,UAAU,GAAGgB,SAAb,EAAR,CAAxC;EAEA,OAAO;IACLA,SAAS,EAAED,QAAQ,CAACC,SADf;IAELC,KAAK,EAAErB,YAAY,CAACsB,IAFf;IAGLC,MAAM,EAAE1B,mBAAmB,CAAC;MAC1BY,IAD0B;MAE1Be,WAAW,EAAE;QACXC,QAAQ,EAAE,EADC;QAEXC,SAAS,EAAE;MAFA,CAFa;MAM1BC,gBAAgB,EAAEpB,KAAK,CAACoB,gBANE;MAO1BC,mBAAmB,EAAErB,KAAK,CAACsB,MAAN,CAAcD,mBAPT;MAQ1BE,KAAK,EAAE7B,MAAM,CAAC8B,MARY;MAS1BC,QAAQ,EAAExB,SAAS,CAACyB,WAAV;IATgB,CAAD,CAHtB;IAcLf;EAdK,CAAP;AAgBD"},"metadata":{},"sourceType":"module"}