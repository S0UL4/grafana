{"ast":null,"code":"var _Icon, _Icon2;\n\nimport { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport Calendar from 'react-calendar';\nimport { dateTime, dateTimeParse } from '@grafana/data';\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Body({\n  onChange,\n  from,\n  to,\n  timeZone\n}) {\n  const value = inputToValue(from, to);\n  const onCalendarChange = useOnCalendarChange(onChange, timeZone);\n  const styles = useStyles2(getBodyStyles);\n  return /*#__PURE__*/_jsx(Calendar, {\n    selectRange: true,\n    next2Label: null,\n    prev2Label: null,\n    className: styles.body,\n    tileClassName: styles.title,\n    value: value,\n    nextLabel: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: \"angle-right\"\n    })),\n    prevLabel: _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n      name: \"angle-left\"\n    })),\n    onChange: onCalendarChange,\n    locale: \"en\"\n  });\n}\nBody.displayName = 'Body';\nexport function inputToValue(from, to, invalidDateDefault = new Date()) {\n  const fromAsDate = from.toDate();\n  const toAsDate = to.toDate();\n  const fromAsValidDate = dateTime(fromAsDate).isValid() ? fromAsDate : invalidDateDefault;\n  const toAsValidDate = dateTime(toAsDate).isValid() ? toAsDate : invalidDateDefault;\n\n  if (fromAsValidDate > toAsValidDate) {\n    return [toAsValidDate, fromAsValidDate];\n  }\n\n  return [fromAsValidDate, toAsValidDate];\n}\n\nfunction useOnCalendarChange(onChange, timeZone) {\n  return useCallback(value => {\n    if (!Array.isArray(value)) {\n      return console.error('onCalendarChange: should be run in selectRange={true}');\n    }\n\n    const from = dateTimeParse(dateInfo(value[0]), {\n      timeZone\n    });\n    const to = dateTimeParse(dateInfo(value[1]), {\n      timeZone\n    });\n    onChange(from, to);\n  }, [onChange, timeZone]);\n}\n\nfunction dateInfo(date) {\n  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n}\n\nexport const getBodyStyles = theme => {\n  return {\n    title: css`\n      color: ${theme.colors.text};\n      background-color: ${theme.colors.background.primary};\n      font-size: ${theme.typography.size.md};\n      border: 1px solid transparent;\n\n      &:hover {\n        position: relative;\n      }\n    `,\n    body: css`\n      z-index: ${theme.zIndex.modal};\n      background-color: ${theme.colors.background.primary};\n      width: 268px;\n\n      .react-calendar__navigation {\n        display: flex;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation__arrow,\n      .react-calendar__navigation {\n        padding-top: 4px;\n        background-color: inherit;\n        color: ${theme.colors.text};\n        border: 0;\n        font-weight: ${theme.typography.fontWeightMedium};\n      }\n\n      .react-calendar__month-view__weekdays {\n        background-color: inherit;\n        text-align: center;\n        color: ${theme.colors.primary.text};\n\n        abbr {\n          border: 0;\n          text-decoration: none;\n          cursor: default;\n          display: block;\n          padding: 4px 0 4px 0;\n        }\n      }\n\n      .react-calendar__month-view__days {\n        background-color: inherit;\n      }\n\n      .react-calendar__tile,\n      .react-calendar__tile--now {\n        margin-bottom: 4px;\n        background-color: inherit;\n        height: 26px;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation > button:focus,\n      .time-picker-calendar-tile:focus {\n        outline: 0;\n      }\n\n      .react-calendar__tile--active,\n      .react-calendar__tile--active:hover {\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n        box-shadow: none;\n        border: 0px;\n      }\n\n      .react-calendar__tile--rangeEnd,\n      .react-calendar__tile--rangeStart {\n        padding: 0;\n        border: 0px;\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n\n        abbr {\n          background-color: ${theme.colors.primary.main};\n          border-radius: 100px;\n          display: block;\n          padding-top: 2px;\n          height: 26px;\n        }\n      }\n\n      .react-calendar__tile--rangeStart {\n        border-top-left-radius: 20px;\n        border-bottom-left-radius: 20px;\n      }\n\n      .react-calendar__tile--rangeEnd {\n        border-top-right-radius: 20px;\n        border-bottom-right-radius: 20px;\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","React","useCallback","Calendar","dateTime","dateTimeParse","useStyles2","Icon","Body","onChange","from","to","timeZone","value","inputToValue","onCalendarChange","useOnCalendarChange","styles","getBodyStyles","body","title","displayName","invalidDateDefault","Date","fromAsDate","toDate","toAsDate","fromAsValidDate","isValid","toAsValidDate","Array","isArray","console","error","dateInfo","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","theme","colors","text","background","primary","typography","size","md","zIndex","modal","fontWeightMedium","contrastText","main"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeRangePicker/CalendarBody.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2, dateTime, dateTimeParse, DateTime, TimeZone } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\n\nexport function Body({ onChange, from, to, timeZone }: TimePickerCalendarProps) {\n  const value = inputToValue(from, to);\n  const onCalendarChange = useOnCalendarChange(onChange, timeZone);\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      selectRange={true}\n      next2Label={null}\n      prev2Label={null}\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={onCalendarChange}\n      locale=\"en\"\n    />\n  );\n}\n\nBody.displayName = 'Body';\n\nexport function inputToValue(from: DateTime, to: DateTime, invalidDateDefault: Date = new Date()): [Date, Date] {\n  const fromAsDate = from.toDate();\n  const toAsDate = to.toDate();\n  const fromAsValidDate = dateTime(fromAsDate).isValid() ? fromAsDate : invalidDateDefault;\n  const toAsValidDate = dateTime(toAsDate).isValid() ? toAsDate : invalidDateDefault;\n\n  if (fromAsValidDate > toAsValidDate) {\n    return [toAsValidDate, fromAsValidDate];\n  }\n  return [fromAsValidDate, toAsValidDate];\n}\n\nfunction useOnCalendarChange(onChange: (from: DateTime, to: DateTime) => void, timeZone?: TimeZone) {\n  return useCallback(\n    (value: Date | Date[]) => {\n      if (!Array.isArray(value)) {\n        return console.error('onCalendarChange: should be run in selectRange={true}');\n      }\n\n      const from = dateTimeParse(dateInfo(value[0]), { timeZone });\n      const to = dateTimeParse(dateInfo(value[1]), { timeZone });\n\n      onChange(from, to);\n    },\n    [onChange, timeZone]\n  );\n}\n\nfunction dateInfo(date: Date): number[] {\n  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n}\n\nexport const getBodyStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      color: ${theme.colors.text};\n      background-color: ${theme.colors.background.primary};\n      font-size: ${theme.typography.size.md};\n      border: 1px solid transparent;\n\n      &:hover {\n        position: relative;\n      }\n    `,\n    body: css`\n      z-index: ${theme.zIndex.modal};\n      background-color: ${theme.colors.background.primary};\n      width: 268px;\n\n      .react-calendar__navigation {\n        display: flex;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation__arrow,\n      .react-calendar__navigation {\n        padding-top: 4px;\n        background-color: inherit;\n        color: ${theme.colors.text};\n        border: 0;\n        font-weight: ${theme.typography.fontWeightMedium};\n      }\n\n      .react-calendar__month-view__weekdays {\n        background-color: inherit;\n        text-align: center;\n        color: ${theme.colors.primary.text};\n\n        abbr {\n          border: 0;\n          text-decoration: none;\n          cursor: default;\n          display: block;\n          padding: 4px 0 4px 0;\n        }\n      }\n\n      .react-calendar__month-view__days {\n        background-color: inherit;\n      }\n\n      .react-calendar__tile,\n      .react-calendar__tile--now {\n        margin-bottom: 4px;\n        background-color: inherit;\n        height: 26px;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation > button:focus,\n      .time-picker-calendar-tile:focus {\n        outline: 0;\n      }\n\n      .react-calendar__tile--active,\n      .react-calendar__tile--active:hover {\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n        box-shadow: none;\n        border: 0px;\n      }\n\n      .react-calendar__tile--rangeEnd,\n      .react-calendar__tile--rangeStart {\n        padding: 0;\n        border: 0px;\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n\n        abbr {\n          background-color: ${theme.colors.primary.main};\n          border-radius: 100px;\n          display: block;\n          padding-top: 2px;\n          height: 26px;\n        }\n      }\n\n      .react-calendar__tile--rangeStart {\n        border-top-left-radius: 20px;\n        border-bottom-left-radius: 20px;\n      }\n\n      .react-calendar__tile--rangeEnd {\n        border-top-right-radius: 20px;\n        border-bottom-right-radius: 20px;\n      }\n    `,\n  };\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAAwBC,QAAxB,EAAkCC,aAAlC,QAA2E,eAA3E;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,OAAO,SAASC,IAAT,CAAc;EAAEC,QAAF;EAAYC,IAAZ;EAAkBC,EAAlB;EAAsBC;AAAtB,CAAd,EAAyE;EAC9E,MAAMC,KAAK,GAAGC,YAAY,CAACJ,IAAD,EAAOC,EAAP,CAA1B;EACA,MAAMI,gBAAgB,GAAGC,mBAAmB,CAACP,QAAD,EAAWG,QAAX,CAA5C;EACA,MAAMK,MAAM,GAAGX,UAAU,CAACY,aAAD,CAAzB;EAEA,oBACE,KAAC,QAAD;IACE,WAAW,EAAE,IADf;IAEE,UAAU,EAAE,IAFd;IAGE,UAAU,EAAE,IAHd;IAIE,SAAS,EAAED,MAAM,CAACE,IAJpB;IAKE,aAAa,EAAEF,MAAM,CAACG,KALxB;IAME,KAAK,EAAEP,KANT;IAOE,SAAS,iCAAE,KAAC,IAAD;MAAM,IAAI,EAAC;IAAX,EAAF,CAPX;IAQE,SAAS,mCAAE,KAAC,IAAD;MAAM,IAAI,EAAC;IAAX,EAAF,CARX;IASE,QAAQ,EAAEE,gBATZ;IAUE,MAAM,EAAC;EAVT,EADF;AAcD;AAEDP,IAAI,CAACa,WAAL,GAAmB,MAAnB;AAEA,OAAO,SAASP,YAAT,CAAsBJ,IAAtB,EAAsCC,EAAtC,EAAoDW,kBAAwB,GAAG,IAAIC,IAAJ,EAA/E,EAAyG;EAC9G,MAAMC,UAAU,GAAGd,IAAI,CAACe,MAAL,EAAnB;EACA,MAAMC,QAAQ,GAAGf,EAAE,CAACc,MAAH,EAAjB;EACA,MAAME,eAAe,GAAGvB,QAAQ,CAACoB,UAAD,CAAR,CAAqBI,OAArB,KAAiCJ,UAAjC,GAA8CF,kBAAtE;EACA,MAAMO,aAAa,GAAGzB,QAAQ,CAACsB,QAAD,CAAR,CAAmBE,OAAnB,KAA+BF,QAA/B,GAA0CJ,kBAAhE;;EAEA,IAAIK,eAAe,GAAGE,aAAtB,EAAqC;IACnC,OAAO,CAACA,aAAD,EAAgBF,eAAhB,CAAP;EACD;;EACD,OAAO,CAACA,eAAD,EAAkBE,aAAlB,CAAP;AACD;;AAED,SAASb,mBAAT,CAA6BP,QAA7B,EAA+EG,QAA/E,EAAoG;EAClG,OAAOV,WAAW,CACfW,KAAD,IAA0B;IACxB,IAAI,CAACiB,KAAK,CAACC,OAAN,CAAclB,KAAd,CAAL,EAA2B;MACzB,OAAOmB,OAAO,CAACC,KAAR,CAAc,uDAAd,CAAP;IACD;;IAED,MAAMvB,IAAI,GAAGL,aAAa,CAAC6B,QAAQ,CAACrB,KAAK,CAAC,CAAD,CAAN,CAAT,EAAqB;MAAED;IAAF,CAArB,CAA1B;IACA,MAAMD,EAAE,GAAGN,aAAa,CAAC6B,QAAQ,CAACrB,KAAK,CAAC,CAAD,CAAN,CAAT,EAAqB;MAAED;IAAF,CAArB,CAAxB;IAEAH,QAAQ,CAACC,IAAD,EAAOC,EAAP,CAAR;EACD,CAVe,EAWhB,CAACF,QAAD,EAAWG,QAAX,CAXgB,CAAlB;AAaD;;AAED,SAASsB,QAAT,CAAkBC,IAAlB,EAAwC;EACtC,OAAO,CAACA,IAAI,CAACC,WAAL,EAAD,EAAqBD,IAAI,CAACE,QAAL,EAArB,EAAsCF,IAAI,CAACG,OAAL,EAAtC,EAAsDH,IAAI,CAACI,QAAL,EAAtD,EAAuEJ,IAAI,CAACK,UAAL,EAAvE,EAA0FL,IAAI,CAACM,UAAL,EAA1F,CAAP;AACD;;AAED,OAAO,MAAMvB,aAAa,GAAIwB,KAAD,IAA0B;EACrD,OAAO;IACLtB,KAAK,EAAEpB,GAAI;AACf,eAAe0C,KAAK,CAACC,MAAN,CAAaC,IAAK;AACjC,0BAA0BF,KAAK,CAACC,MAAN,CAAaE,UAAb,CAAwBC,OAAQ;AAC1D,mBAAmBJ,KAAK,CAACK,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,KAVS;IAWL9B,IAAI,EAAEnB,GAAI;AACd,iBAAiB0C,KAAK,CAACQ,MAAN,CAAaC,KAAM;AACpC,0BAA0BT,KAAK,CAACC,MAAN,CAAaE,UAAb,CAAwBC,OAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBJ,KAAK,CAACC,MAAN,CAAaC,IAAK;AACnC;AACA,uBAAuBF,KAAK,CAACK,UAAN,CAAiBK,gBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA,iBAAiBV,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBF,IAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBF,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBO,YAAa;AACnD,uBAAuBX,KAAK,CAACK,UAAN,CAAiBK,gBAAiB;AACzD,sBAAsBV,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBQ,IAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBZ,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBO,YAAa;AACnD,uBAAuBX,KAAK,CAACK,UAAN,CAAiBK,gBAAiB;AACzD,sBAAsBV,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBQ,IAAK;AAChD;AACA;AACA,8BAA8BZ,KAAK,CAACC,MAAN,CAAaG,OAAb,CAAqBQ,IAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhGS,CAAP;AAkGD,CAnGM"},"metadata":{},"sourceType":"module"}