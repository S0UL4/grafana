{"ast":null,"code":"var _code, _code2, _Space;\n\nimport React from 'react';\nimport { EditorRow, EditorField, EditorSwitch, Space, EditorRows } from '@grafana/experimental';\nimport { Input, AutoSizeInput } from '@grafana/ui';\nimport { PromQueryCodeEditor } from '../querybuilder/components/PromQueryCodeEditor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function AnnotationQueryEditor(props) {\n  // This is because of problematic typing. See AnnotationQueryEditorProps in grafana-data/annotations.ts.\n  const annotation = props.annotation;\n  const onAnnotationChange = props.onAnnotationChange;\n  const query = {\n    expr: annotation.expr,\n    refId: annotation.name,\n    interval: annotation.step\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(EditorRows, {\n      children: [/*#__PURE__*/_jsx(PromQueryCodeEditor, Object.assign({}, props, {\n        query: query,\n        onChange: query => {\n          onAnnotationChange(Object.assign({}, annotation, {\n            expr: query.expr\n          }));\n        }\n      })), /*#__PURE__*/_jsx(EditorRow, {\n        children: /*#__PURE__*/_jsx(EditorField, {\n          label: \"Min step\",\n          tooltip: /*#__PURE__*/_jsxs(_Fragment, {\n            children: [\"An additional lower limit for the step parameter of the Prometheus query and for the\", ' ', _code || (_code = /*#__PURE__*/_jsx(\"code\", {\n              children: \"$__interval\"\n            })), \" and \", _code2 || (_code2 = /*#__PURE__*/_jsx(\"code\", {\n              children: \"$__rate_interval\"\n            })), \" variables.\"]\n          }),\n          children: /*#__PURE__*/_jsx(AutoSizeInput, {\n            type: \"text\",\n            \"aria-label\": \"Set lower limit for the step parameter\",\n            placeholder: 'auto',\n            minWidth: 10,\n            onCommitChange: ev => {\n              onAnnotationChange(Object.assign({}, annotation, {\n                step: ev.currentTarget.value\n              }));\n            },\n            defaultValue: query.interval\n          })\n        })\n      })]\n    }), _Space || (_Space = /*#__PURE__*/_jsx(Space, {\n      v: 0.5\n    })), /*#__PURE__*/_jsxs(EditorRow, {\n      children: [/*#__PURE__*/_jsx(EditorField, {\n        label: \"Title\",\n        tooltip: 'Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.',\n        children: /*#__PURE__*/_jsx(Input, {\n          type: \"text\",\n          placeholder: \"{{alertname}}\",\n          value: annotation.titleFormat,\n          onChange: event => {\n            onAnnotationChange(Object.assign({}, annotation, {\n              titleFormat: event.currentTarget.value\n            }));\n          }\n        })\n      }), /*#__PURE__*/_jsx(EditorField, {\n        label: \"Tags\",\n        children: /*#__PURE__*/_jsx(Input, {\n          type: \"text\",\n          placeholder: \"label1,label2\",\n          value: annotation.tagKeys,\n          onChange: event => {\n            onAnnotationChange(Object.assign({}, annotation, {\n              tagKeys: event.currentTarget.value\n            }));\n          }\n        })\n      }), /*#__PURE__*/_jsx(EditorField, {\n        label: \"Text\",\n        tooltip: 'Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.',\n        children: /*#__PURE__*/_jsx(Input, {\n          type: \"text\",\n          placeholder: \"{{instance}}\",\n          value: annotation.textFormat,\n          onChange: event => {\n            onAnnotationChange(Object.assign({}, annotation, {\n              textFormat: event.currentTarget.value\n            }));\n          }\n        })\n      }), /*#__PURE__*/_jsx(EditorField, {\n        label: \"Series value as timestamp\",\n        tooltip: 'The unit of timestamp is milliseconds. If the unit of the series value is seconds, multiply its range vector by 1000.',\n        children: /*#__PURE__*/_jsx(EditorSwitch, {\n          value: annotation.useValueForTime,\n          onChange: event => {\n            onAnnotationChange(Object.assign({}, annotation, {\n              useValueForTime: event.currentTarget.value\n            }));\n          }\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","EditorRow","EditorField","EditorSwitch","Space","EditorRows","Input","AutoSizeInput","PromQueryCodeEditor","AnnotationQueryEditor","props","annotation","onAnnotationChange","query","expr","refId","name","interval","step","ev","currentTarget","value","titleFormat","event","tagKeys","textFormat","useValueForTime"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/components/AnnotationQueryEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { AnnotationQuery } from '@grafana/data';\nimport { EditorRow, EditorField, EditorSwitch, Space, EditorRows } from '@grafana/experimental';\nimport { Input, AutoSizeInput } from '@grafana/ui';\n\nimport { PromQueryCodeEditor } from '../querybuilder/components/PromQueryCodeEditor';\nimport { PromQuery } from '../types';\n\nimport { PromQueryEditorProps } from './types';\n\ntype Props = PromQueryEditorProps & {\n  annotation?: AnnotationQuery<PromQuery>;\n  onAnnotationChange?: (annotation: AnnotationQuery<PromQuery>) => void;\n};\n\nexport function AnnotationQueryEditor(props: Props) {\n  // This is because of problematic typing. See AnnotationQueryEditorProps in grafana-data/annotations.ts.\n  const annotation = props.annotation!;\n  const onAnnotationChange = props.onAnnotationChange!;\n  const query = { expr: annotation.expr, refId: annotation.name, interval: annotation.step };\n\n  return (\n    <>\n      <EditorRows>\n        <PromQueryCodeEditor\n          {...props}\n          query={query}\n          onChange={(query) => {\n            onAnnotationChange({\n              ...annotation,\n              expr: query.expr,\n            });\n          }}\n        />\n        <EditorRow>\n          <EditorField\n            label=\"Min step\"\n            tooltip={\n              <>\n                An additional lower limit for the step parameter of the Prometheus query and for the{' '}\n                <code>$__interval</code> and <code>$__rate_interval</code> variables.\n              </>\n            }\n          >\n            <AutoSizeInput\n              type=\"text\"\n              aria-label=\"Set lower limit for the step parameter\"\n              placeholder={'auto'}\n              minWidth={10}\n              onCommitChange={(ev) => {\n                onAnnotationChange({\n                  ...annotation,\n                  step: ev.currentTarget.value,\n                });\n              }}\n              defaultValue={query.interval}\n            />\n          </EditorField>\n        </EditorRow>\n      </EditorRows>\n      <Space v={0.5} />\n      <EditorRow>\n        <EditorField\n          label=\"Title\"\n          tooltip={\n            'Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.'\n          }\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"{{alertname}}\"\n            value={annotation.titleFormat}\n            onChange={(event) => {\n              onAnnotationChange({\n                ...annotation,\n                titleFormat: event.currentTarget.value,\n              });\n            }}\n          />\n        </EditorField>\n        <EditorField label=\"Tags\">\n          <Input\n            type=\"text\"\n            placeholder=\"label1,label2\"\n            value={annotation.tagKeys}\n            onChange={(event) => {\n              onAnnotationChange({\n                ...annotation,\n                tagKeys: event.currentTarget.value,\n              });\n            }}\n          />\n        </EditorField>\n        <EditorField\n          label=\"Text\"\n          tooltip={\n            'Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.'\n          }\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"{{instance}}\"\n            value={annotation.textFormat}\n            onChange={(event) => {\n              onAnnotationChange({\n                ...annotation,\n                textFormat: event.currentTarget.value,\n              });\n            }}\n          />\n        </EditorField>\n        <EditorField\n          label=\"Series value as timestamp\"\n          tooltip={\n            'The unit of timestamp is milliseconds. If the unit of the series value is seconds, multiply its range vector by 1000.'\n          }\n        >\n          <EditorSwitch\n            value={annotation.useValueForTime}\n            onChange={(event) => {\n              onAnnotationChange({\n                ...annotation,\n                useValueForTime: event.currentTarget.value,\n              });\n            }}\n          />\n        </EditorField>\n      </EditorRow>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}