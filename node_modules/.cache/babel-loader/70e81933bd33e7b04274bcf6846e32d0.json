{"ast":null,"code":"const _excluded = [\"className\", \"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { forwardRef } from 'react';\nimport { useStyles2 } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const ButtonGroup = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    className,\n    children\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", Object.assign({\n    ref: ref,\n    className: cx('button-group', styles.wrapper, className)\n  }, rest, {\n    children: children\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\n\nconst getStyles = theme => ({\n  wrapper: css`\n    display: flex;\n\n    > .button-group:not(:first-child) > button,\n    > button:not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    > .button-group:not(:last-child) > button,\n    > button:not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      border-right-width: 0;\n    }\n  `\n});","map":{"version":3,"names":["css","cx","React","forwardRef","useStyles2","ButtonGroup","ref","className","children","rest","styles","getStyles","wrapper","displayName","theme"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Button/ButtonGroup.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n}\n\nexport const ButtonGroup = forwardRef<HTMLDivElement, Props>(({ className, children, ...rest }, ref) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div ref={ref} className={cx('button-group', styles.wrapper, className)} {...rest}>\n      {children}\n    </div>\n  );\n});\n\nButtonGroup.displayName = 'ButtonGroup';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    display: flex;\n\n    > .button-group:not(:first-child) > button,\n    > button:not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    > .button-group:not(:last-child) > button,\n    > button:not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      border-right-width: 0;\n    }\n  `,\n});\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkD,OAAlD;AAIA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,OAAO,MAAMC,WAAW,gBAAGF,UAAU,CAAwB,OAAmCG,GAAnC,KAA2C;EAAA,IAA1C;IAAEC,SAAF;IAAaC;EAAb,CAA0C;EAAA,IAAhBC,IAAgB;;EACtG,MAAMC,MAAM,GAAGN,UAAU,CAACO,SAAD,CAAzB;EAEA,oBACE;IAAK,GAAG,EAAEL,GAAV;IAAe,SAAS,EAAEL,EAAE,CAAC,cAAD,EAAiBS,MAAM,CAACE,OAAxB,EAAiCL,SAAjC;EAA5B,GAA6EE,IAA7E;IAAA,UACGD;EADH,GADF;AAKD,CARoC,CAA9B;AAUPH,WAAW,CAACQ,WAAZ,GAA0B,aAA1B;;AAEA,MAAMF,SAAS,GAAIG,KAAD,KAA2B;EAC3CF,OAAO,EAAEZ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhB6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}