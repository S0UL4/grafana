{"ast":null,"code":"import TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n// https://carto.com/help/building-maps/basemap-list/\nexport let LayerTheme;\n\n(function (LayerTheme) {\n  LayerTheme[\"Auto\"] = \"auto\";\n  LayerTheme[\"Light\"] = \"light\";\n  LayerTheme[\"Dark\"] = \"dark\";\n})(LayerTheme || (LayerTheme = {}));\n\nexport const defaultCartoConfig = {\n  theme: LayerTheme.Auto,\n  showLabels: true\n};\nexport const carto = {\n  id: 'carto',\n  name: 'CARTO basemap',\n  description: 'Add layer CARTO Raster basemaps',\n  isBaseMap: true,\n  defaultOptions: defaultCartoConfig,\n\n  /**\n   * Function that configures transformation and returns a transformer\n   * @param options\n   */\n  create: async (map, options, eventBus, theme) => ({\n    init: () => {\n      const cfg = Object.assign({}, defaultCartoConfig, options.config);\n      let style = cfg.theme;\n\n      if (!style || style === LayerTheme.Auto) {\n        style = theme.isDark ? 'dark' : 'light';\n      }\n\n      if (cfg.showLabels) {\n        style += '_all';\n      } else {\n        style += '_nolabels';\n      }\n\n      return new TileLayer({\n        source: new XYZ({\n          attributions: `<a href=\"https://carto.com/attribution/\">© CARTO</a>`,\n          url: `https://{1-4}.basemaps.cartocdn.com/${style}/{z}/{x}/{y}.png`\n        })\n      });\n    },\n    registerOptionsUI: builder => {\n      builder.addRadio({\n        path: 'config.theme',\n        name: 'Theme',\n        settings: {\n          options: [{\n            value: LayerTheme.Auto,\n            label: 'Auto',\n            description: 'Match grafana theme'\n          }, {\n            value: LayerTheme.Light,\n            label: 'Light'\n          }, {\n            value: LayerTheme.Dark,\n            label: 'Dark'\n          }]\n        },\n        defaultValue: defaultCartoConfig.theme\n      }).addBooleanSwitch({\n        path: 'config.showLabels',\n        name: 'Show labels',\n        description: '',\n        defaultValue: defaultCartoConfig.showLabels\n      });\n    }\n  })\n};\nexport const cartoLayers = [carto];","map":{"version":3,"names":["TileLayer","XYZ","LayerTheme","defaultCartoConfig","theme","Auto","showLabels","carto","id","name","description","isBaseMap","defaultOptions","create","map","options","eventBus","init","cfg","config","style","isDark","source","attributions","url","registerOptionsUI","builder","addRadio","path","settings","value","label","Light","Dark","defaultValue","addBooleanSwitch","cartoLayers"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/layers/basemaps/carto.ts"],"sourcesContent":["import Map from 'ol/Map';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n\nimport { MapLayerRegistryItem, MapLayerOptions, GrafanaTheme2, EventBus } from '@grafana/data';\n\n// https://carto.com/help/building-maps/basemap-list/\n\nexport enum LayerTheme {\n  Auto = 'auto',\n  Light = 'light',\n  Dark = 'dark',\n}\n\nexport interface CartoConfig {\n  theme?: LayerTheme;\n  showLabels?: boolean;\n}\n\nexport const defaultCartoConfig: CartoConfig = {\n  theme: LayerTheme.Auto,\n  showLabels: true,\n};\n\nexport const carto: MapLayerRegistryItem<CartoConfig> = {\n  id: 'carto',\n  name: 'CARTO basemap',\n  description: 'Add layer CARTO Raster basemaps',\n  isBaseMap: true,\n  defaultOptions: defaultCartoConfig,\n\n  /**\n   * Function that configures transformation and returns a transformer\n   * @param options\n   */\n  create: async (map: Map, options: MapLayerOptions<CartoConfig>, eventBus: EventBus, theme: GrafanaTheme2) => ({\n    init: () => {\n      const cfg = { ...defaultCartoConfig, ...options.config };\n      let style = cfg.theme as string;\n      if (!style || style === LayerTheme.Auto) {\n        style = theme.isDark ? 'dark' : 'light';\n      }\n      if (cfg.showLabels) {\n        style += '_all';\n      } else {\n        style += '_nolabels';\n      }\n      return new TileLayer({\n        source: new XYZ({\n          attributions: `<a href=\"https://carto.com/attribution/\">© CARTO</a>`,\n          url: `https://{1-4}.basemaps.cartocdn.com/${style}/{z}/{x}/{y}.png`,\n        }),\n      });\n    },\n\n    registerOptionsUI: (builder) => {\n      builder\n        .addRadio({\n          path: 'config.theme',\n          name: 'Theme',\n          settings: {\n            options: [\n              { value: LayerTheme.Auto, label: 'Auto', description: 'Match grafana theme' },\n              { value: LayerTheme.Light, label: 'Light' },\n              { value: LayerTheme.Dark, label: 'Dark' },\n            ],\n          },\n          defaultValue: defaultCartoConfig.theme!,\n        })\n        .addBooleanSwitch({\n          path: 'config.showLabels',\n          name: 'Show labels',\n          description: '',\n          defaultValue: defaultCartoConfig.showLabels,\n        });\n    },\n  }),\n};\n\nexport const cartoLayers = [carto];\n"],"mappings":"AACA,OAAOA,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAIA;AAEA,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAWZ,OAAO,MAAMC,kBAA+B,GAAG;EAC7CC,KAAK,EAAEF,UAAU,CAACG,IAD2B;EAE7CC,UAAU,EAAE;AAFiC,CAAxC;AAKP,OAAO,MAAMC,KAAwC,GAAG;EACtDC,EAAE,EAAE,OADkD;EAEtDC,IAAI,EAAE,eAFgD;EAGtDC,WAAW,EAAE,iCAHyC;EAItDC,SAAS,EAAE,IAJ2C;EAKtDC,cAAc,EAAET,kBALsC;;EAOtD;AACF;AACA;AACA;EACEU,MAAM,EAAE,OAAOC,GAAP,EAAiBC,OAAjB,EAAwDC,QAAxD,EAA4EZ,KAA5E,MAAsG;IAC5Ga,IAAI,EAAE,MAAM;MACV,MAAMC,GAAG,qBAAQf,kBAAR,EAA+BY,OAAO,CAACI,MAAvC,CAAT;MACA,IAAIC,KAAK,GAAGF,GAAG,CAACd,KAAhB;;MACA,IAAI,CAACgB,KAAD,IAAUA,KAAK,KAAKlB,UAAU,CAACG,IAAnC,EAAyC;QACvCe,KAAK,GAAGhB,KAAK,CAACiB,MAAN,GAAe,MAAf,GAAwB,OAAhC;MACD;;MACD,IAAIH,GAAG,CAACZ,UAAR,EAAoB;QAClBc,KAAK,IAAI,MAAT;MACD,CAFD,MAEO;QACLA,KAAK,IAAI,WAAT;MACD;;MACD,OAAO,IAAIpB,SAAJ,CAAc;QACnBsB,MAAM,EAAE,IAAIrB,GAAJ,CAAQ;UACdsB,YAAY,EAAG,sDADD;UAEdC,GAAG,EAAG,uCAAsCJ,KAAM;QAFpC,CAAR;MADW,CAAd,CAAP;IAMD,CAlB2G;IAoB5GK,iBAAiB,EAAGC,OAAD,IAAa;MAC9BA,OAAO,CACJC,QADH,CACY;QACRC,IAAI,EAAE,cADE;QAERnB,IAAI,EAAE,OAFE;QAGRoB,QAAQ,EAAE;UACRd,OAAO,EAAE,CACP;YAAEe,KAAK,EAAE5B,UAAU,CAACG,IAApB;YAA0B0B,KAAK,EAAE,MAAjC;YAAyCrB,WAAW,EAAE;UAAtD,CADO,EAEP;YAAEoB,KAAK,EAAE5B,UAAU,CAAC8B,KAApB;YAA2BD,KAAK,EAAE;UAAlC,CAFO,EAGP;YAAED,KAAK,EAAE5B,UAAU,CAAC+B,IAApB;YAA0BF,KAAK,EAAE;UAAjC,CAHO;QADD,CAHF;QAURG,YAAY,EAAE/B,kBAAkB,CAACC;MAVzB,CADZ,EAaG+B,gBAbH,CAaoB;QAChBP,IAAI,EAAE,mBADU;QAEhBnB,IAAI,EAAE,aAFU;QAGhBC,WAAW,EAAE,EAHG;QAIhBwB,YAAY,EAAE/B,kBAAkB,CAACG;MAJjB,CAbpB;IAmBD;EAxC2G,CAAtG;AAX8C,CAAjD;AAuDP,OAAO,MAAM8B,WAAW,GAAG,CAAC7B,KAAD,CAApB"},"metadata":{},"sourceType":"module"}