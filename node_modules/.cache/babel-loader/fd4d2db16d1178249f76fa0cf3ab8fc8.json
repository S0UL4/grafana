{"ast":null,"code":"import { AzureQueryType } from '../types'; // The old Angular annotations editor put some properties (rawQuery, workspace, subscription)\n// on the root annotation object, rather than down in the 'targets' query value\n// This migration moves them to a Log Analytics query compatible with the React query editor\n// The old Angular annotations editor did not support any other query types.\n\nexport default function migrateAnnotation(annotation) {\n  var _annotation$target, _annotation$target$az, _annotation$target2, _annotation$target$re, _annotation$target3;\n\n  const oldQuery = typeof annotation.rawQuery === 'string' ? annotation.rawQuery : null;\n  const oldWorkspace = typeof annotation.workspace === 'string' ? annotation.workspace : null;\n\n  if (!(oldQuery && oldWorkspace && !((_annotation$target = annotation.target) !== null && _annotation$target !== void 0 && (_annotation$target$az = _annotation$target.azureLogAnalytics) !== null && _annotation$target$az !== void 0 && _annotation$target$az.query))) {\n    return annotation;\n  }\n\n  const newQuery = Object.assign({}, (_annotation$target2 = annotation.target) !== null && _annotation$target2 !== void 0 ? _annotation$target2 : {}, {\n    refId: (_annotation$target$re = (_annotation$target3 = annotation.target) === null || _annotation$target3 === void 0 ? void 0 : _annotation$target3.refId) !== null && _annotation$target$re !== void 0 ? _annotation$target$re : 'Anno',\n    queryType: AzureQueryType.LogAnalytics,\n    azureLogAnalytics: {\n      query: oldQuery,\n      resource: oldWorkspace\n    }\n  });\n  return Object.assign({}, annotation, {\n    rawQuery: undefined,\n    workspace: undefined,\n    subscription: undefined,\n    queryType: undefined,\n    target: newQuery\n  });\n}","map":{"version":3,"names":["AzureQueryType","migrateAnnotation","annotation","oldQuery","rawQuery","oldWorkspace","workspace","target","azureLogAnalytics","query","newQuery","refId","queryType","LogAnalytics","resource","undefined","subscription"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/migrateAnnotation.ts"],"sourcesContent":["import { AnnotationQuery } from '@grafana/data';\n\nimport { AzureMonitorQuery, AzureQueryType } from '../types';\n\n// The old Angular annotations editor put some properties (rawQuery, workspace, subscription)\n// on the root annotation object, rather than down in the 'targets' query value\n// This migration moves them to a Log Analytics query compatible with the React query editor\n// The old Angular annotations editor did not support any other query types.\nexport default function migrateAnnotation(annotation: AnnotationQuery<AzureMonitorQuery>) {\n  const oldQuery = typeof annotation.rawQuery === 'string' ? annotation.rawQuery : null;\n  const oldWorkspace = typeof annotation.workspace === 'string' ? annotation.workspace : null;\n\n  if (!(oldQuery && oldWorkspace && !annotation.target?.azureLogAnalytics?.query)) {\n    return annotation;\n  }\n\n  const newQuery: AzureMonitorQuery = {\n    ...(annotation.target ?? {}),\n    refId: annotation.target?.refId ?? 'Anno',\n    queryType: AzureQueryType.LogAnalytics,\n    azureLogAnalytics: {\n      query: oldQuery,\n      resource: oldWorkspace,\n    },\n  };\n\n  return {\n    ...annotation,\n    rawQuery: undefined,\n    workspace: undefined,\n    subscription: undefined,\n    queryType: undefined,\n    target: newQuery,\n  };\n}\n"],"mappings":"AAEA,SAA4BA,cAA5B,QAAkD,UAAlD,C,CAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,CAA2BC,UAA3B,EAA2E;EAAA;;EACxF,MAAMC,QAAQ,GAAG,OAAOD,UAAU,CAACE,QAAlB,KAA+B,QAA/B,GAA0CF,UAAU,CAACE,QAArD,GAAgE,IAAjF;EACA,MAAMC,YAAY,GAAG,OAAOH,UAAU,CAACI,SAAlB,KAAgC,QAAhC,GAA2CJ,UAAU,CAACI,SAAtD,GAAkE,IAAvF;;EAEA,IAAI,EAAEH,QAAQ,IAAIE,YAAZ,IAA4B,wBAACH,UAAU,CAACK,MAAZ,wEAAC,mBAAmBC,iBAApB,kDAAC,sBAAsCC,KAAvC,CAA9B,CAAJ,EAAiF;IAC/E,OAAOP,UAAP;EACD;;EAED,MAAMQ,QAA2B,4CAC3BR,UAAU,CAACK,MADgB,qEACN,EADM;IAE/BI,KAAK,kDAAET,UAAU,CAACK,MAAb,wDAAE,oBAAmBI,KAArB,yEAA8B,MAFJ;IAG/BC,SAAS,EAAEZ,cAAc,CAACa,YAHK;IAI/BL,iBAAiB,EAAE;MACjBC,KAAK,EAAEN,QADU;MAEjBW,QAAQ,EAAET;IAFO;EAJY,EAAjC;EAUA,yBACKH,UADL;IAEEE,QAAQ,EAAEW,SAFZ;IAGET,SAAS,EAAES,SAHb;IAIEC,YAAY,EAAED,SAJhB;IAKEH,SAAS,EAAEG,SALb;IAMER,MAAM,EAAEG;EANV;AAQD"},"metadata":{},"sourceType":"module"}