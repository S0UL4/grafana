{"ast":null,"code":"var _Button, _Alert;\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { useAsync } from 'react-use';\nimport { urlUtil } from '@grafana/data';\nimport { Alert, Button, LinkButton } from '@grafana/ui';\nimport { panelToRuleFormValues } from '../../utils/rule-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const NewRuleFromPanelButton = ({\n  dashboard,\n  panel,\n  className\n}) => {\n  const templating = useSelector(state => {\n    return state.templating;\n  });\n  const location = useLocation();\n  const {\n    loading,\n    value: formValues\n  } = useAsync(() => panelToRuleFormValues(panel, dashboard), // Templating variables are required to update formValues on each variable's change. It's used implicitly by the templating engine\n  [panel, dashboard, templating]);\n\n  if (loading) {\n    return _Button || (_Button = /*#__PURE__*/_jsx(Button, {\n      disabled: true,\n      children: \"Create alert rule from this panel\"\n    }));\n  }\n\n  if (!formValues) {\n    return _Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n      severity: \"info\",\n      title: \"No alerting capable query found\",\n      children: \"Cannot create alerts from this panel because no query to an alerting capable datasource is found.\"\n    }));\n  }\n\n  const ruleFormUrl = urlUtil.renderUrl('alerting/new', {\n    defaults: JSON.stringify(formValues),\n    returnTo: location.pathname + location.search\n  });\n  return /*#__PURE__*/_jsx(LinkButton, {\n    icon: \"bell\",\n    href: ruleFormUrl,\n    className: className,\n    \"data-testid\": \"create-alert-rule-button\",\n    children: \"Create alert rule from this panel\"\n  });\n};","map":{"version":3,"names":["React","useSelector","useLocation","useAsync","urlUtil","Alert","Button","LinkButton","panelToRuleFormValues","NewRuleFromPanelButton","dashboard","panel","className","templating","state","location","loading","value","formValues","ruleFormUrl","renderUrl","defaults","JSON","stringify","returnTo","pathname","search"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/panel-alerts-tab/NewRuleFromPanelButton.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { useAsync } from 'react-use';\n\nimport { urlUtil } from '@grafana/data';\nimport { Alert, Button, LinkButton } from '@grafana/ui';\nimport { DashboardModel, PanelModel } from 'app/features/dashboard/state';\nimport { StoreState } from 'app/types';\n\nimport { panelToRuleFormValues } from '../../utils/rule-form';\n\ninterface Props {\n  panel: PanelModel;\n  dashboard: DashboardModel;\n  className?: string;\n}\n\nexport const NewRuleFromPanelButton: FC<Props> = ({ dashboard, panel, className }) => {\n  const templating = useSelector((state: StoreState) => {\n    return state.templating;\n  });\n\n  const location = useLocation();\n\n  const { loading, value: formValues } = useAsync(\n    () => panelToRuleFormValues(panel, dashboard),\n    // Templating variables are required to update formValues on each variable's change. It's used implicitly by the templating engine\n    [panel, dashboard, templating]\n  );\n\n  if (loading) {\n    return <Button disabled={true}>Create alert rule from this panel</Button>;\n  }\n\n  if (!formValues) {\n    return (\n      <Alert severity=\"info\" title=\"No alerting capable query found\">\n        Cannot create alerts from this panel because no query to an alerting capable datasource is found.\n      </Alert>\n    );\n  }\n\n  const ruleFormUrl = urlUtil.renderUrl('alerting/new', {\n    defaults: JSON.stringify(formValues),\n    returnTo: location.pathname + location.search,\n  });\n\n  return (\n    <LinkButton icon=\"bell\" href={ruleFormUrl} className={className} data-testid=\"create-alert-rule-button\">\n      Create alert rule from this panel\n    </LinkButton>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,aAA1C;AAIA,SAASC,qBAAT,QAAsC,uBAAtC;;AAQA,OAAO,MAAMC,sBAAiC,GAAG,CAAC;EAAEC,SAAF;EAAaC,KAAb;EAAoBC;AAApB,CAAD,KAAqC;EACpF,MAAMC,UAAU,GAAGZ,WAAW,CAAEa,KAAD,IAAuB;IACpD,OAAOA,KAAK,CAACD,UAAb;EACD,CAF6B,CAA9B;EAIA,MAAME,QAAQ,GAAGb,WAAW,EAA5B;EAEA,MAAM;IAAEc,OAAF;IAAWC,KAAK,EAAEC;EAAlB,IAAiCf,QAAQ,CAC7C,MAAMK,qBAAqB,CAACG,KAAD,EAAQD,SAAR,CADkB,EAE7C;EACA,CAACC,KAAD,EAAQD,SAAR,EAAmBG,UAAnB,CAH6C,CAA/C;;EAMA,IAAIG,OAAJ,EAAa;IACX,0CAAO,KAAC,MAAD;MAAQ,QAAQ,EAAE,IAAlB;MAAA;IAAA,EAAP;EACD;;EAED,IAAI,CAACE,UAAL,EAAiB;IACf,wCACE,KAAC,KAAD;MAAO,QAAQ,EAAC,MAAhB;MAAuB,KAAK,EAAC,iCAA7B;MAAA;IAAA,EADF;EAKD;;EAED,MAAMC,WAAW,GAAGf,OAAO,CAACgB,SAAR,CAAkB,cAAlB,EAAkC;IACpDC,QAAQ,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAD0C;IAEpDM,QAAQ,EAAET,QAAQ,CAACU,QAAT,GAAoBV,QAAQ,CAACW;EAFa,CAAlC,CAApB;EAKA,oBACE,KAAC,UAAD;IAAY,IAAI,EAAC,MAAjB;IAAwB,IAAI,EAAEP,WAA9B;IAA2C,SAAS,EAAEP,SAAtD;IAAiE,eAAY,0BAA7E;IAAA;EAAA,EADF;AAKD,CAnCM"},"metadata":{},"sourceType":"module"}