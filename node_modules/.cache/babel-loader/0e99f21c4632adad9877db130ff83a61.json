{"ast":null,"code":"const _excluded = [\"isOpen\", \"panel\", \"initialFolderId\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useAsync, useDebounce } from 'react-use';\nimport { isFetchError } from '@grafana/runtime';\nimport { Button, Field, Input, Modal } from '@grafana/ui';\nimport { FolderPicker } from 'app/core/components/Select/FolderPicker';\nimport { getLibraryPanelByName } from '../../state/api';\nimport { usePanelSave } from '../../utils/usePanelSave';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const AddLibraryPanelContents = ({\n  panel,\n  initialFolderId,\n  onDismiss\n}) => {\n  const [folderId, setFolderId] = useState(initialFolderId);\n  const [panelName, setPanelName] = useState(panel.title);\n  const [debouncedPanelName, setDebouncedPanelName] = useState(panel.title);\n  const [waiting, setWaiting] = useState(false);\n  useEffect(() => setWaiting(true), [panelName]);\n  useDebounce(() => setDebouncedPanelName(panelName), 350, [panelName]);\n  const {\n    saveLibraryPanel\n  } = usePanelSave();\n  const onCreate = useCallback(() => {\n    panel.libraryPanel = {\n      uid: undefined,\n      name: panelName\n    };\n    saveLibraryPanel(panel, folderId).then(res => {\n      if (!(res instanceof Error)) {\n        onDismiss();\n      }\n    });\n  }, [panel, panelName, folderId, onDismiss, saveLibraryPanel]);\n  const isValidName = useAsync(async () => {\n    try {\n      return !(await getLibraryPanelByName(panelName)).some(lp => lp.folderId === folderId);\n    } catch (err) {\n      if (isFetchError(err)) {\n        err.isHandled = true;\n      }\n\n      return true;\n    } finally {\n      setWaiting(false);\n    }\n  }, [debouncedPanelName, folderId]);\n  const invalidInput = !(isValidName !== null && isValidName !== void 0 && isValidName.value) && isValidName.value !== undefined && panelName === debouncedPanelName && !waiting;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Field, {\n      label: \"Library panel name\",\n      invalid: invalidInput,\n      error: invalidInput ? 'Library panel with this name already exists' : '',\n      children: /*#__PURE__*/_jsx(Input, {\n        id: \"share-panel-library-panel-name-input\",\n        name: \"name\",\n        value: panelName,\n        onChange: e => setPanelName(e.currentTarget.value)\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: \"Save in folder\",\n      description: \"Library panel permissions are derived from the folder permissions\",\n      children: /*#__PURE__*/_jsx(FolderPicker, {\n        onChange: ({\n          id\n        }) => setFolderId(id),\n        initialFolderId: initialFolderId,\n        inputId: \"share-panel-library-panel-folder-picker\"\n      })\n    }), /*#__PURE__*/_jsxs(Modal.ButtonRow, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        fill: \"outline\",\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onCreate,\n        disabled: invalidInput,\n        children: \"Create library panel\"\n      })]\n    })]\n  });\n};\nexport const AddLibraryPanelModal = _ref => {\n  let {\n    isOpen = false,\n    panel,\n    initialFolderId\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(Modal, {\n    title: \"Create library panel\",\n    isOpen: isOpen,\n    onDismiss: props.onDismiss,\n    children: /*#__PURE__*/_jsx(AddLibraryPanelContents, {\n      panel: panel,\n      initialFolderId: initialFolderId,\n      onDismiss: props.onDismiss\n    })\n  });\n};","map":{"version":3,"names":["React","useCallback","useEffect","useState","useAsync","useDebounce","isFetchError","Button","Field","Input","Modal","FolderPicker","getLibraryPanelByName","usePanelSave","AddLibraryPanelContents","panel","initialFolderId","onDismiss","folderId","setFolderId","panelName","setPanelName","title","debouncedPanelName","setDebouncedPanelName","waiting","setWaiting","saveLibraryPanel","onCreate","libraryPanel","uid","undefined","name","then","res","Error","isValidName","some","lp","err","isHandled","invalidInput","value","e","currentTarget","id","AddLibraryPanelModal","isOpen","props"],"sources":["/home/soula/grafana/public/app/features/library-panels/components/AddLibraryPanelModal/AddLibraryPanelModal.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useAsync, useDebounce } from 'react-use';\n\nimport { isFetchError } from '@grafana/runtime';\nimport { Button, Field, Input, Modal } from '@grafana/ui';\nimport { FolderPicker } from 'app/core/components/Select/FolderPicker';\n\nimport { PanelModel } from '../../../dashboard/state';\nimport { getLibraryPanelByName } from '../../state/api';\nimport { usePanelSave } from '../../utils/usePanelSave';\n\ninterface AddLibraryPanelContentsProps {\n  onDismiss: () => void;\n  panel: PanelModel;\n  initialFolderId?: number;\n}\n\nexport const AddLibraryPanelContents = ({ panel, initialFolderId, onDismiss }: AddLibraryPanelContentsProps) => {\n  const [folderId, setFolderId] = useState(initialFolderId);\n  const [panelName, setPanelName] = useState(panel.title);\n  const [debouncedPanelName, setDebouncedPanelName] = useState(panel.title);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => setWaiting(true), [panelName]);\n  useDebounce(() => setDebouncedPanelName(panelName), 350, [panelName]);\n\n  const { saveLibraryPanel } = usePanelSave();\n  const onCreate = useCallback(() => {\n    panel.libraryPanel = { uid: undefined, name: panelName };\n    saveLibraryPanel(panel, folderId!).then((res) => {\n      if (!(res instanceof Error)) {\n        onDismiss();\n      }\n    });\n  }, [panel, panelName, folderId, onDismiss, saveLibraryPanel]);\n  const isValidName = useAsync(async () => {\n    try {\n      return !(await getLibraryPanelByName(panelName)).some((lp) => lp.folderId === folderId);\n    } catch (err) {\n      if (isFetchError(err)) {\n        err.isHandled = true;\n      }\n      return true;\n    } finally {\n      setWaiting(false);\n    }\n  }, [debouncedPanelName, folderId]);\n\n  const invalidInput =\n    !isValidName?.value && isValidName.value !== undefined && panelName === debouncedPanelName && !waiting;\n\n  return (\n    <>\n      <Field\n        label=\"Library panel name\"\n        invalid={invalidInput}\n        error={invalidInput ? 'Library panel with this name already exists' : ''}\n      >\n        <Input\n          id=\"share-panel-library-panel-name-input\"\n          name=\"name\"\n          value={panelName}\n          onChange={(e) => setPanelName(e.currentTarget.value)}\n        />\n      </Field>\n      <Field label=\"Save in folder\" description=\"Library panel permissions are derived from the folder permissions\">\n        <FolderPicker\n          onChange={({ id }) => setFolderId(id)}\n          initialFolderId={initialFolderId}\n          inputId=\"share-panel-library-panel-folder-picker\"\n        />\n      </Field>\n\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button onClick={onCreate} disabled={invalidInput}>\n          Create library panel\n        </Button>\n      </Modal.ButtonRow>\n    </>\n  );\n};\n\ninterface Props extends AddLibraryPanelContentsProps {\n  isOpen?: boolean;\n}\n\nexport const AddLibraryPanelModal: React.FC<Props> = ({ isOpen = false, panel, initialFolderId, ...props }) => {\n  return (\n    <Modal title=\"Create library panel\" isOpen={isOpen} onDismiss={props.onDismiss}>\n      <AddLibraryPanelContents panel={panel} initialFolderId={initialFolderId} onDismiss={props.onDismiss} />\n    </Modal>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}