{"ast":null,"code":"import { OrgRole, TeamPermissionLevel } from 'app/types';\nexport const getSearchQuery = state => state.searchQuery;\nexport const getSearchMemberQuery = state => state.searchMemberQuery;\nexport const getTeamGroups = state => state.groups;\nexport const getTeamsCount = state => state.teams.length;\nexport const getTeamsSearchPage = state => state.searchPage;\nexport const getTeam = (state, currentTeamId) => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\nexport const getTeams = state => {\n  const regex = RegExp(state.searchQuery, 'i');\n  return state.teams.filter(team => {\n    return regex.test(team.name);\n  });\n};\nexport const getTeamMembers = state => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n  return state.members.filter(member => {\n    return regex.test(member.login) || regex.test(member.email) || regex.test(member.name);\n  });\n};\nexport const isSignedInUserTeamAdmin = config => {\n  const {\n    members,\n    signedInUser,\n    editorsCanAdmin\n  } = config;\n  const userInMembers = members.find(m => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n  return isPermissionTeamAdmin({\n    permission,\n    signedInUser,\n    editorsCanAdmin\n  });\n};\nexport const isPermissionTeamAdmin = config => {\n  const {\n    permission,\n    signedInUser,\n    editorsCanAdmin\n  } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};","map":{"version":3,"names":["OrgRole","TeamPermissionLevel","getSearchQuery","state","searchQuery","getSearchMemberQuery","searchMemberQuery","getTeamGroups","groups","getTeamsCount","teams","length","getTeamsSearchPage","searchPage","getTeam","currentTeamId","team","id","parseInt","getTeams","regex","RegExp","filter","test","name","getTeamMembers","members","member","login","email","isSignedInUserTeamAdmin","config","signedInUser","editorsCanAdmin","userInMembers","find","m","userId","permission","Member","isPermissionTeamAdmin","isAdmin","isGrafanaAdmin","orgRole","Admin","userIsTeamAdmin"],"sources":["/home/soula/grafana/public/app/features/teams/state/selectors.ts"],"sourcesContent":["import { User } from 'app/core/services/context_srv';\nimport { Team, TeamsState, TeamState, TeamMember, OrgRole, TeamPermissionLevel } from 'app/types';\n\nexport const getSearchQuery = (state: TeamsState) => state.searchQuery;\nexport const getSearchMemberQuery = (state: TeamState) => state.searchMemberQuery;\nexport const getTeamGroups = (state: TeamState) => state.groups;\nexport const getTeamsCount = (state: TeamsState) => state.teams.length;\nexport const getTeamsSearchPage = (state: TeamsState) => state.searchPage;\n\nexport const getTeam = (state: TeamState, currentTeamId: any): Team | null => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\n\nexport const getTeams = (state: TeamsState) => {\n  const regex = RegExp(state.searchQuery, 'i');\n\n  return state.teams.filter((team) => {\n    return regex.test(team.name);\n  });\n};\n\nexport const getTeamMembers = (state: TeamState) => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n\n  return state.members.filter((member) => {\n    return regex.test(member.login) || regex.test(member.email) || regex.test(member.name);\n  });\n};\n\nexport interface Config {\n  members: TeamMember[];\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isSignedInUserTeamAdmin = (config: Config): boolean => {\n  const { members, signedInUser, editorsCanAdmin } = config;\n  const userInMembers = members.find((m) => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n\n  return isPermissionTeamAdmin({ permission, signedInUser, editorsCanAdmin });\n};\n\nexport interface PermissionConfig {\n  permission: TeamPermissionLevel;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isPermissionTeamAdmin = (config: PermissionConfig): boolean => {\n  const { permission, signedInUser, editorsCanAdmin } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};\n"],"mappings":"AACA,SAAkDA,OAAlD,EAA2DC,mBAA3D,QAAsF,WAAtF;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAuBA,KAAK,CAACC,WAApD;AACP,OAAO,MAAMC,oBAAoB,GAAIF,KAAD,IAAsBA,KAAK,CAACG,iBAAzD;AACP,OAAO,MAAMC,aAAa,GAAIJ,KAAD,IAAsBA,KAAK,CAACK,MAAlD;AACP,OAAO,MAAMC,aAAa,GAAIN,KAAD,IAAuBA,KAAK,CAACO,KAAN,CAAYC,MAAzD;AACP,OAAO,MAAMC,kBAAkB,GAAIT,KAAD,IAAuBA,KAAK,CAACU,UAAxD;AAEP,OAAO,MAAMC,OAAO,GAAG,CAACX,KAAD,EAAmBY,aAAnB,KAAuD;EAC5E,IAAIZ,KAAK,CAACa,IAAN,CAAWC,EAAX,KAAkBC,QAAQ,CAACH,aAAD,EAAgB,EAAhB,CAA9B,EAAmD;IACjD,OAAOZ,KAAK,CAACa,IAAb;EACD;;EAED,OAAO,IAAP;AACD,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIhB,KAAD,IAAuB;EAC7C,MAAMiB,KAAK,GAAGC,MAAM,CAAClB,KAAK,CAACC,WAAP,EAAoB,GAApB,CAApB;EAEA,OAAOD,KAAK,CAACO,KAAN,CAAYY,MAAZ,CAAoBN,IAAD,IAAU;IAClC,OAAOI,KAAK,CAACG,IAAN,CAAWP,IAAI,CAACQ,IAAhB,CAAP;EACD,CAFM,CAAP;AAGD,CANM;AAQP,OAAO,MAAMC,cAAc,GAAItB,KAAD,IAAsB;EAClD,MAAMiB,KAAK,GAAGC,MAAM,CAAClB,KAAK,CAACG,iBAAP,EAA0B,GAA1B,CAApB;EAEA,OAAOH,KAAK,CAACuB,OAAN,CAAcJ,MAAd,CAAsBK,MAAD,IAAY;IACtC,OAAOP,KAAK,CAACG,IAAN,CAAWI,MAAM,CAACC,KAAlB,KAA4BR,KAAK,CAACG,IAAN,CAAWI,MAAM,CAACE,KAAlB,CAA5B,IAAwDT,KAAK,CAACG,IAAN,CAAWI,MAAM,CAACH,IAAlB,CAA/D;EACD,CAFM,CAAP;AAGD,CANM;AAcP,OAAO,MAAMM,uBAAuB,GAAIC,MAAD,IAA6B;EAClE,MAAM;IAAEL,OAAF;IAAWM,YAAX;IAAyBC;EAAzB,IAA6CF,MAAnD;EACA,MAAMG,aAAa,GAAGR,OAAO,CAACS,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaL,YAAY,CAACf,EAA9C,CAAtB;EACA,MAAMqB,UAAU,GAAGJ,aAAa,GAAGA,aAAa,CAACI,UAAjB,GAA8BrC,mBAAmB,CAACsC,MAAlF;EAEA,OAAOC,qBAAqB,CAAC;IAAEF,UAAF;IAAcN,YAAd;IAA4BC;EAA5B,CAAD,CAA5B;AACD,CANM;AAcP,OAAO,MAAMO,qBAAqB,GAAIT,MAAD,IAAuC;EAC1E,MAAM;IAAEO,UAAF;IAAcN,YAAd;IAA4BC;EAA5B,IAAgDF,MAAtD;EACA,MAAMU,OAAO,GAAGT,YAAY,CAACU,cAAb,IAA+BV,YAAY,CAACW,OAAb,KAAyB3C,OAAO,CAAC4C,KAAhF;EACA,MAAMC,eAAe,GAAGP,UAAU,KAAKrC,mBAAmB,CAAC2C,KAA3D;EACA,MAAMd,uBAAuB,GAAGW,OAAO,IAAII,eAA3C;EAEA,OAAOf,uBAAuB,IAAI,CAACG,eAAnC;AACD,CAPM"},"metadata":{},"sourceType":"module"}