{"ast":null,"code":"import { PanelPlugin } from '@grafana/data';\nimport { FrameState } from 'app/features/canvas/runtime/frame';\nimport { CanvasPanel } from './CanvasPanel';\nimport { getElementEditor } from './editor/elementEditor';\nimport { getLayerEditor } from './editor/layerEditor';\nexport const plugin = new PanelPlugin(CanvasPanel).setNoPadding() // extend to panel edges\n.useFieldConfig().setPanelOptions((builder, context) => {\n  const state = context.instanceState;\n  builder.addBooleanSwitch({\n    path: 'inlineEditing',\n    name: 'Inline editing',\n    description: 'Enable editing the panel directly',\n    defaultValue: true\n  });\n\n  if (state) {\n    builder.addNestedOptions(getLayerEditor(state));\n    const selection = state.selected;\n\n    if ((selection === null || selection === void 0 ? void 0 : selection.length) === 1) {\n      const element = selection[0];\n\n      if (!(element instanceof FrameState)) {\n        builder.addNestedOptions(getElementEditor({\n          category: [`Selected element (${element.options.name})`],\n          element,\n          scene: state.scene\n        }));\n      }\n    }\n  }\n});","map":{"version":3,"names":["PanelPlugin","FrameState","CanvasPanel","getElementEditor","getLayerEditor","plugin","setNoPadding","useFieldConfig","setPanelOptions","builder","context","state","instanceState","addBooleanSwitch","path","name","description","defaultValue","addNestedOptions","selection","selected","length","element","category","options","scene"],"sources":["/home/soula/grafana/public/app/plugins/panel/canvas/module.tsx"],"sourcesContent":["import { PanelPlugin } from '@grafana/data';\nimport { FrameState } from 'app/features/canvas/runtime/frame';\n\nimport { CanvasPanel, InstanceState } from './CanvasPanel';\nimport { getElementEditor } from './editor/elementEditor';\nimport { getLayerEditor } from './editor/layerEditor';\nimport { PanelOptions } from './models.gen';\n\nexport const plugin = new PanelPlugin<PanelOptions>(CanvasPanel)\n  .setNoPadding() // extend to panel edges\n  .useFieldConfig()\n  .setPanelOptions((builder, context) => {\n    const state: InstanceState = context.instanceState;\n\n    builder.addBooleanSwitch({\n      path: 'inlineEditing',\n      name: 'Inline editing',\n      description: 'Enable editing the panel directly',\n      defaultValue: true,\n    });\n\n    if (state) {\n      builder.addNestedOptions(getLayerEditor(state));\n\n      const selection = state.selected;\n      if (selection?.length === 1) {\n        const element = selection[0];\n        if (!(element instanceof FrameState)) {\n          builder.addNestedOptions(\n            getElementEditor({\n              category: [`Selected element (${element.options.name})`],\n              element,\n              scene: state.scene,\n            })\n          );\n        }\n      }\n    }\n  });\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAEA,SAASC,WAAT,QAA2C,eAA3C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAGA,OAAO,MAAMC,MAAM,GAAG,IAAIL,WAAJ,CAA8BE,WAA9B,EACnBI,YADmB,GACJ;AADI,CAEnBC,cAFmB,GAGnBC,eAHmB,CAGH,CAACC,OAAD,EAAUC,OAAV,KAAsB;EACrC,MAAMC,KAAoB,GAAGD,OAAO,CAACE,aAArC;EAEAH,OAAO,CAACI,gBAAR,CAAyB;IACvBC,IAAI,EAAE,eADiB;IAEvBC,IAAI,EAAE,gBAFiB;IAGvBC,WAAW,EAAE,mCAHU;IAIvBC,YAAY,EAAE;EAJS,CAAzB;;EAOA,IAAIN,KAAJ,EAAW;IACTF,OAAO,CAACS,gBAAR,CAAyBd,cAAc,CAACO,KAAD,CAAvC;IAEA,MAAMQ,SAAS,GAAGR,KAAK,CAACS,QAAxB;;IACA,IAAI,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,MAAX,MAAsB,CAA1B,EAA6B;MAC3B,MAAMC,OAAO,GAAGH,SAAS,CAAC,CAAD,CAAzB;;MACA,IAAI,EAAEG,OAAO,YAAYrB,UAArB,CAAJ,EAAsC;QACpCQ,OAAO,CAACS,gBAAR,CACEf,gBAAgB,CAAC;UACfoB,QAAQ,EAAE,CAAE,qBAAoBD,OAAO,CAACE,OAAR,CAAgBT,IAAK,GAA3C,CADK;UAEfO,OAFe;UAGfG,KAAK,EAAEd,KAAK,CAACc;QAHE,CAAD,CADlB;MAOD;IACF;EACF;AACF,CA9BmB,CAAf"},"metadata":{},"sourceType":"module"}