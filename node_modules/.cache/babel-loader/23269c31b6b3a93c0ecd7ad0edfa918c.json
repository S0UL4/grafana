{"ast":null,"code":"var _div, _b;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React, { PureComponent } from 'react';\nimport { Subscription } from 'rxjs';\nimport { AnnotationChangeEvent, AppEvents, dateTime, locationUtil } from '@grafana/data';\nimport { config, getBackendSrv, locationService } from '@grafana/runtime';\nimport { CustomScrollbar, stylesFactory, TagList } from '@grafana/ui';\nimport { AbstractList } from '@grafana/ui/src/components/List/AbstractList';\nimport appEvents from 'app/core/app_events';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { AnnotationListItem } from './AnnotationListItem';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class AnnoListPanel extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", getStyles(config.theme));\n\n    _defineProperty(this, \"subs\", new Subscription());\n\n    _defineProperty(this, \"tagListRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"onAnnoClick\", async anno => {\n      var _anno$timeEnd;\n\n      if (!anno.time) {\n        return;\n      }\n\n      const {\n        options\n      } = this.props;\n      const dashboardSrv = getDashboardSrv();\n      const current = dashboardSrv.getCurrent();\n      const params = {\n        from: this._timeOffset(anno.time, options.navigateBefore, true),\n        to: this._timeOffset((_anno$timeEnd = anno.timeEnd) !== null && _anno$timeEnd !== void 0 ? _anno$timeEnd : anno.time, options.navigateAfter, false)\n      };\n\n      if (options.navigateToPanel) {\n        params.viewPanel = anno.panelId;\n      }\n\n      if ((current === null || current === void 0 ? void 0 : current.id) === anno.dashboardId) {\n        locationService.partial(params);\n        return;\n      }\n\n      const result = await getBackendSrv().get('/api/search', {\n        dashboardIds: anno.dashboardId\n      });\n\n      if (result && result.length && result[0].id === anno.dashboardId) {\n        const dash = result[0];\n        const url = new URL(dash.url, window.location.origin);\n        url.searchParams.set('from', params.from);\n        url.searchParams.set('to', params.to);\n        locationService.push(locationUtil.stripBaseFromUrl(url.toString()));\n        return;\n      }\n\n      appEvents.emit(AppEvents.alertWarning, ['Unknown Dashboard: ' + anno.dashboardId]);\n    });\n\n    _defineProperty(this, \"onTagClick\", (tag, remove) => {\n      if (!remove && this.state.queryTags.includes(tag)) {\n        return;\n      }\n\n      const queryTags = remove ? this.state.queryTags.filter(item => item !== tag) : [...this.state.queryTags, tag]; // Logic to ensure keyboard focus isn't lost when the currently\n      // focused tag is removed\n\n      let nextTag = undefined;\n\n      if (remove) {\n        var _this$tagListRef$curr;\n\n        const focusedTag = document.activeElement;\n        const dataTagId = focusedTag === null || focusedTag === void 0 ? void 0 : focusedTag.getAttribute('data-tag-id');\n\n        if ((_this$tagListRef$curr = this.tagListRef.current) !== null && _this$tagListRef$curr !== void 0 && _this$tagListRef$curr.contains(focusedTag) && dataTagId) {\n          var _this$tagListRef$curr2;\n\n          const parsedTagId = Number.parseInt(dataTagId, 10);\n          const possibleNextTag = (_this$tagListRef$curr2 = this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId + 1}\"]`)) !== null && _this$tagListRef$curr2 !== void 0 ? _this$tagListRef$curr2 : this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId - 1}\"]`);\n\n          if (possibleNextTag instanceof HTMLElement) {\n            nextTag = possibleNextTag;\n          }\n        }\n      }\n\n      this.setState({\n        queryTags\n      }, () => {\n        var _nextTag;\n\n        return (_nextTag = nextTag) === null || _nextTag === void 0 ? void 0 : _nextTag.focus();\n      });\n    });\n\n    _defineProperty(this, \"onUserClick\", anno => {\n      this.setState({\n        queryUser: {\n          id: anno.userId,\n          login: anno.login,\n          email: anno.email\n        }\n      });\n    });\n\n    _defineProperty(this, \"onClearUser\", () => {\n      this.setState({\n        queryUser: undefined\n      });\n    });\n\n    _defineProperty(this, \"renderItem\", (anno, index) => {\n      const {\n        options\n      } = this.props;\n      const dashboard = getDashboardSrv().getCurrent();\n\n      if (!dashboard) {\n        return /*#__PURE__*/_jsx(_Fragment, {});\n      }\n\n      return /*#__PURE__*/_jsx(AnnotationListItem, {\n        annotation: anno,\n        formatDate: dashboard.formatDate,\n        onClick: this.onAnnoClick,\n        onAvatarClick: this.onUserClick,\n        onTagClick: this.onTagClick,\n        options: options\n      });\n    });\n\n    this.state = {\n      annotations: [],\n      timeInfo: '',\n      loaded: false,\n      queryTags: []\n    };\n  }\n\n  componentDidMount() {\n    this.doSearch(); // When an annotation on this dashboard changes, re-run the query\n\n    this.subs.add(this.props.eventBus.getStream(AnnotationChangeEvent).subscribe({\n      next: () => {\n        this.doSearch();\n      }\n    }));\n  }\n\n  componentWillUnmount() {\n    this.subs.unsubscribe();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      options,\n      timeRange\n    } = this.props;\n    const needsQuery = options !== prevProps.options || this.state.queryTags !== prevState.queryTags || this.state.queryUser !== prevState.queryUser || options.onlyInTimeRange && timeRange !== prevProps.timeRange;\n\n    if (needsQuery) {\n      this.doSearch();\n    }\n  }\n\n  async doSearch() {\n    // http://docs.grafana.org/http_api/annotations/\n    // https://github.com/grafana/grafana/blob/main/public/app/core/services/backend_srv.ts\n    // https://github.com/grafana/grafana/blob/main/public/app/features/annotations/annotations_srv.ts\n    const {\n      options\n    } = this.props;\n    const {\n      queryUser,\n      queryTags\n    } = this.state;\n    const params = {\n      tags: options.tags,\n      limit: options.limit,\n      type: 'annotation' // Skip the Annotations that are really alerts.  (Use the alerts panel!)\n\n    };\n\n    if (options.onlyFromThisDashboard) {\n      var _getDashboardSrv$getC;\n\n      params.dashboardId = (_getDashboardSrv$getC = getDashboardSrv().getCurrent()) === null || _getDashboardSrv$getC === void 0 ? void 0 : _getDashboardSrv$getC.id;\n    }\n\n    let timeInfo = '';\n\n    if (options.onlyInTimeRange) {\n      const {\n        timeRange\n      } = this.props;\n      params.from = timeRange.from.valueOf();\n      params.to = timeRange.to.valueOf();\n    } else {\n      timeInfo = 'All Time';\n    }\n\n    if (queryUser) {\n      params.userId = queryUser.id;\n    }\n\n    if (options.tags && options.tags.length) {\n      params.tags = options.tags.map(tag => this.props.replaceVariables(tag));\n    }\n\n    if (queryTags.length) {\n      params.tags = params.tags ? [...params.tags, ...queryTags] : queryTags;\n    }\n\n    const annotations = await getBackendSrv().get('/api/annotations', params, `anno-list-panel-${this.props.id}`);\n    this.setState({\n      annotations,\n      timeInfo,\n      loaded: true\n    });\n  }\n\n  _timeOffset(time, offset, subtract = false) {\n    let incr = 5;\n    let unit = 'm';\n    const parts = /^(\\d+)(\\w)/.exec(offset);\n\n    if (parts && parts.length === 3) {\n      incr = parseInt(parts[1], 10);\n      unit = parts[2];\n    }\n\n    const t = dateTime(time);\n\n    if (subtract) {\n      incr *= -1;\n    }\n\n    return t.add(incr, unit).valueOf();\n  }\n\n  render() {\n    const {\n      loaded,\n      annotations,\n      queryUser,\n      queryTags\n    } = this.state;\n\n    if (!loaded) {\n      return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        children: \"loading...\"\n      }));\n    } // Previously we showed inidication that it covered all time\n    // { timeInfo && (\n    //   <span className=\"panel-time-info\">\n    //     <Icon name=\"clock-nine\" /> {timeInfo}\n    //   </span>\n    // )}\n\n\n    const hasFilter = queryUser || queryTags.length > 0;\n    return /*#__PURE__*/_jsxs(CustomScrollbar, {\n      autoHeightMin: \"100%\",\n      children: [hasFilter && /*#__PURE__*/_jsxs(\"div\", {\n        className: this.style.filter,\n        children: [_b || (_b = /*#__PURE__*/_jsx(\"b\", {\n          children: \"Filter:\"\n        })), queryUser && /*#__PURE__*/_jsx(\"span\", {\n          onClick: this.onClearUser,\n          className: \"pointer\",\n          children: queryUser.email\n        }), queryTags.length > 0 && /*#__PURE__*/_jsx(FocusScope, {\n          restoreFocus: true,\n          children: /*#__PURE__*/_jsx(TagList, {\n            icon: \"times\",\n            tags: queryTags,\n            onClick: tag => this.onTagClick(tag, true),\n            getAriaLabel: name => `Remove ${name} tag`,\n            className: this.style.tagList,\n            ref: this.tagListRef\n          })\n        })]\n      }), annotations.length < 1 && /*#__PURE__*/_jsx(\"div\", {\n        className: this.style.noneFound,\n        children: \"No Annotations Found\"\n      }), /*#__PURE__*/_jsx(AbstractList, {\n        items: annotations,\n        renderItem: this.renderItem,\n        getItemKey: item => `${item.id}`\n      })]\n    });\n  }\n\n}\nconst getStyles = stylesFactory(theme => ({\n  noneFound: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: calc(100% - 30px);\n  `,\n  filter: css({\n    display: 'flex',\n    padding: `0px ${theme.spacing.xs}`,\n    b: {\n      paddingRight: theme.spacing.sm\n    }\n  }),\n  tagList: css({\n    justifyContent: 'flex-start',\n    'li > button': {\n      paddingLeft: '3px'\n    }\n  })\n}));","map":{"version":3,"names":["css","FocusScope","React","PureComponent","Subscription","AnnotationChangeEvent","AppEvents","dateTime","locationUtil","config","getBackendSrv","locationService","CustomScrollbar","stylesFactory","TagList","AbstractList","appEvents","getDashboardSrv","AnnotationListItem","AnnoListPanel","constructor","props","getStyles","theme","createRef","anno","time","options","dashboardSrv","current","getCurrent","params","from","_timeOffset","navigateBefore","to","timeEnd","navigateAfter","navigateToPanel","viewPanel","panelId","id","dashboardId","partial","result","get","dashboardIds","length","dash","url","URL","window","location","origin","searchParams","set","push","stripBaseFromUrl","toString","emit","alertWarning","tag","remove","state","queryTags","includes","filter","item","nextTag","undefined","focusedTag","document","activeElement","dataTagId","getAttribute","tagListRef","contains","parsedTagId","Number","parseInt","possibleNextTag","querySelector","HTMLElement","setState","focus","queryUser","userId","login","email","index","dashboard","formatDate","onAnnoClick","onUserClick","onTagClick","annotations","timeInfo","loaded","componentDidMount","doSearch","subs","add","eventBus","getStream","subscribe","next","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","prevState","timeRange","needsQuery","onlyInTimeRange","tags","limit","type","onlyFromThisDashboard","valueOf","map","replaceVariables","offset","subtract","incr","unit","parts","exec","t","render","hasFilter","style","onClearUser","name","tagList","noneFound","renderItem","display","padding","spacing","xs","b","paddingRight","sm","justifyContent","paddingLeft"],"sources":["/home/soula/grafana/public/app/plugins/panel/annolist/AnnoListPanel.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React, { PureComponent } from 'react';\nimport { Subscription } from 'rxjs';\n\nimport {\n  AnnotationChangeEvent,\n  AnnotationEvent,\n  AppEvents,\n  dateTime,\n  DurationUnit,\n  GrafanaTheme,\n  locationUtil,\n  PanelProps,\n} from '@grafana/data';\nimport { config, getBackendSrv, locationService } from '@grafana/runtime';\nimport { CustomScrollbar, stylesFactory, TagList } from '@grafana/ui';\nimport { AbstractList } from '@grafana/ui/src/components/List/AbstractList';\nimport appEvents from 'app/core/app_events';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nimport { AnnotationListItem } from './AnnotationListItem';\nimport { PanelOptions } from './models.gen';\n\ninterface UserInfo {\n  id?: number;\n  login?: string;\n  email?: string;\n}\n\nexport interface Props extends PanelProps<PanelOptions> {}\ninterface State {\n  annotations: AnnotationEvent[];\n  timeInfo: string;\n  loaded: boolean;\n  queryUser?: UserInfo;\n  queryTags: string[];\n}\nexport class AnnoListPanel extends PureComponent<Props, State> {\n  style = getStyles(config.theme);\n  subs = new Subscription();\n  tagListRef = React.createRef<HTMLUListElement>();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      annotations: [],\n      timeInfo: '',\n      loaded: false,\n      queryTags: [],\n    };\n  }\n\n  componentDidMount() {\n    this.doSearch();\n\n    // When an annotation on this dashboard changes, re-run the query\n    this.subs.add(\n      this.props.eventBus.getStream(AnnotationChangeEvent).subscribe({\n        next: () => {\n          this.doSearch();\n        },\n      })\n    );\n  }\n\n  componentWillUnmount() {\n    this.subs.unsubscribe();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { options, timeRange } = this.props;\n    const needsQuery =\n      options !== prevProps.options ||\n      this.state.queryTags !== prevState.queryTags ||\n      this.state.queryUser !== prevState.queryUser ||\n      (options.onlyInTimeRange && timeRange !== prevProps.timeRange);\n\n    if (needsQuery) {\n      this.doSearch();\n    }\n  }\n\n  async doSearch() {\n    // http://docs.grafana.org/http_api/annotations/\n    // https://github.com/grafana/grafana/blob/main/public/app/core/services/backend_srv.ts\n    // https://github.com/grafana/grafana/blob/main/public/app/features/annotations/annotations_srv.ts\n\n    const { options } = this.props;\n    const { queryUser, queryTags } = this.state;\n\n    const params: any = {\n      tags: options.tags,\n      limit: options.limit,\n      type: 'annotation', // Skip the Annotations that are really alerts.  (Use the alerts panel!)\n    };\n\n    if (options.onlyFromThisDashboard) {\n      params.dashboardId = getDashboardSrv().getCurrent()?.id;\n    }\n\n    let timeInfo = '';\n    if (options.onlyInTimeRange) {\n      const { timeRange } = this.props;\n      params.from = timeRange.from.valueOf();\n      params.to = timeRange.to.valueOf();\n    } else {\n      timeInfo = 'All Time';\n    }\n\n    if (queryUser) {\n      params.userId = queryUser.id;\n    }\n\n    if (options.tags && options.tags.length) {\n      params.tags = options.tags.map((tag) => this.props.replaceVariables(tag));\n    }\n\n    if (queryTags.length) {\n      params.tags = params.tags ? [...params.tags, ...queryTags] : queryTags;\n    }\n\n    const annotations = await getBackendSrv().get('/api/annotations', params, `anno-list-panel-${this.props.id}`);\n\n    this.setState({\n      annotations,\n      timeInfo,\n      loaded: true,\n    });\n  }\n\n  onAnnoClick = async (anno: AnnotationEvent) => {\n    if (!anno.time) {\n      return;\n    }\n\n    const { options } = this.props;\n    const dashboardSrv = getDashboardSrv();\n    const current = dashboardSrv.getCurrent();\n\n    const params: any = {\n      from: this._timeOffset(anno.time, options.navigateBefore, true),\n      to: this._timeOffset(anno.timeEnd ?? anno.time, options.navigateAfter, false),\n    };\n\n    if (options.navigateToPanel) {\n      params.viewPanel = anno.panelId;\n    }\n\n    if (current?.id === anno.dashboardId) {\n      locationService.partial(params);\n      return;\n    }\n\n    const result = await getBackendSrv().get('/api/search', { dashboardIds: anno.dashboardId });\n    if (result && result.length && result[0].id === anno.dashboardId) {\n      const dash = result[0];\n      const url = new URL(dash.url, window.location.origin);\n      url.searchParams.set('from', params.from);\n      url.searchParams.set('to', params.to);\n      locationService.push(locationUtil.stripBaseFromUrl(url.toString()));\n      return;\n    }\n    appEvents.emit(AppEvents.alertWarning, ['Unknown Dashboard: ' + anno.dashboardId]);\n  };\n\n  _timeOffset(time: number, offset: string, subtract = false): number {\n    let incr = 5;\n    let unit = 'm';\n    const parts = /^(\\d+)(\\w)/.exec(offset);\n    if (parts && parts.length === 3) {\n      incr = parseInt(parts[1], 10);\n      unit = parts[2];\n    }\n\n    const t = dateTime(time);\n    if (subtract) {\n      incr *= -1;\n    }\n    return t.add(incr, unit as DurationUnit).valueOf();\n  }\n\n  onTagClick = (tag: string, remove?: boolean) => {\n    if (!remove && this.state.queryTags.includes(tag)) {\n      return;\n    }\n\n    const queryTags = remove ? this.state.queryTags.filter((item) => item !== tag) : [...this.state.queryTags, tag];\n\n    // Logic to ensure keyboard focus isn't lost when the currently\n    // focused tag is removed\n    let nextTag: HTMLElement | undefined = undefined;\n    if (remove) {\n      const focusedTag = document.activeElement;\n      const dataTagId = focusedTag?.getAttribute('data-tag-id');\n      if (this.tagListRef.current?.contains(focusedTag) && dataTagId) {\n        const parsedTagId = Number.parseInt(dataTagId, 10);\n        const possibleNextTag =\n          this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId + 1}\"]`) ??\n          this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId - 1}\"]`);\n        if (possibleNextTag instanceof HTMLElement) {\n          nextTag = possibleNextTag;\n        }\n      }\n    }\n\n    this.setState({ queryTags }, () => nextTag?.focus());\n  };\n\n  onUserClick = (anno: AnnotationEvent) => {\n    this.setState({\n      queryUser: {\n        id: anno.userId,\n        login: anno.login,\n        email: anno.email,\n      },\n    });\n  };\n\n  onClearUser = () => {\n    this.setState({\n      queryUser: undefined,\n    });\n  };\n\n  renderItem = (anno: AnnotationEvent, index: number): JSX.Element => {\n    const { options } = this.props;\n    const dashboard = getDashboardSrv().getCurrent();\n    if (!dashboard) {\n      return <></>;\n    }\n\n    return (\n      <AnnotationListItem\n        annotation={anno}\n        formatDate={dashboard.formatDate}\n        onClick={this.onAnnoClick}\n        onAvatarClick={this.onUserClick}\n        onTagClick={this.onTagClick}\n        options={options}\n      />\n    );\n  };\n\n  render() {\n    const { loaded, annotations, queryUser, queryTags } = this.state;\n    if (!loaded) {\n      return <div>loading...</div>;\n    }\n\n    // Previously we showed inidication that it covered all time\n    // { timeInfo && (\n    //   <span className=\"panel-time-info\">\n    //     <Icon name=\"clock-nine\" /> {timeInfo}\n    //   </span>\n    // )}\n\n    const hasFilter = queryUser || queryTags.length > 0;\n    return (\n      <CustomScrollbar autoHeightMin=\"100%\">\n        {hasFilter && (\n          <div className={this.style.filter}>\n            <b>Filter:</b>\n            {queryUser && (\n              <span onClick={this.onClearUser} className=\"pointer\">\n                {queryUser.email}\n              </span>\n            )}\n            {queryTags.length > 0 && (\n              <FocusScope restoreFocus>\n                <TagList\n                  icon=\"times\"\n                  tags={queryTags}\n                  onClick={(tag) => this.onTagClick(tag, true)}\n                  getAriaLabel={(name) => `Remove ${name} tag`}\n                  className={this.style.tagList}\n                  ref={this.tagListRef}\n                />\n              </FocusScope>\n            )}\n          </div>\n        )}\n\n        {annotations.length < 1 && <div className={this.style.noneFound}>No Annotations Found</div>}\n\n        <AbstractList items={annotations} renderItem={this.renderItem} getItemKey={(item) => `${item.id}`} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  noneFound: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: calc(100% - 30px);\n  `,\n  filter: css({\n    display: 'flex',\n    padding: `0px ${theme.spacing.xs}`,\n    b: {\n      paddingRight: theme.spacing.sm,\n    },\n  }),\n  tagList: css({\n    justifyContent: 'flex-start',\n    'li > button': {\n      paddingLeft: '3px',\n    },\n  }),\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}