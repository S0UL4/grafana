{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Renders absolutely positioned element on top of the uPlot's plotting area (axes are not included!).\n * Useful when you want to render some overlay with canvas-independent elements on top of the plot.\n */\nexport const XYCanvas = ({\n  children,\n  left,\n  top\n}) => {\n  const className = useMemo(() => {\n    return css`\n      position: absolute;\n      overflow: visible;\n      left: ${left}px;\n      top: ${top}px;\n    `;\n  }, [left, top]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: className,\n    children: children\n  });\n};","map":{"version":3,"names":["css","React","useMemo","XYCanvas","children","left","top","className"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/uPlot/geometries/XYCanvas.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\ninterface XYCanvasProps {\n  top: number; // css pxls\n  left: number; // css pxls\n}\n\n/**\n * Renders absolutely positioned element on top of the uPlot's plotting area (axes are not included!).\n * Useful when you want to render some overlay with canvas-independent elements on top of the plot.\n */\nexport const XYCanvas: React.FC<XYCanvasProps> = ({ children, left, top }) => {\n  const className = useMemo(() => {\n    return css`\n      position: absolute;\n      overflow: visible;\n      left: ${left}px;\n      top: ${top}px;\n    `;\n  }, [left, top]);\n\n  return <div className={className}>{children}</div>;\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;;;AAOA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAiC,GAAG,CAAC;EAAEC,QAAF;EAAYC,IAAZ;EAAkBC;AAAlB,CAAD,KAA6B;EAC5E,MAAMC,SAAS,GAAGL,OAAO,CAAC,MAAM;IAC9B,OAAOF,GAAI;AACf;AACA;AACA,cAAcK,IAAK;AACnB,aAAaC,GAAI;AACjB,KALI;EAMD,CAPwB,EAOtB,CAACD,IAAD,EAAOC,GAAP,CAPsB,CAAzB;EASA,oBAAO;IAAK,SAAS,EAAEC,SAAhB;IAAA,UAA4BH;EAA5B,EAAP;AACD,CAXM"},"metadata":{},"sourceType":"module"}