{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory } from '../../themes';\nimport { withTheme } from '../../themes/ThemeContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Levels are already encoded in color, filename is a Loki-ism\nconst HIDDEN_LABELS = ['level', 'lvl', 'filename'];\nconst getStyles = stylesFactory(theme => {\n  return {\n    logsLabels: css`\n      display: flex;\n      flex-wrap: wrap;\n      font-size: ${theme.typography.size.xs};\n    `,\n    logsLabel: css`\n      label: logs-label;\n      display: flex;\n      padding: 0 2px;\n      background-color: ${theme.colors.bg2};\n      border-radius: ${theme.border.radius};\n      margin: 1px 4px 0 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    `,\n    logsLabelValue: css`\n      label: logs-label__value;\n      display: inline-block;\n      max-width: 20em;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    `\n  };\n});\nexport const UnThemedLogLabels = ({\n  labels,\n  theme\n}) => {\n  const styles = getStyles(theme);\n  const displayLabels = Object.keys(labels).filter(label => !label.startsWith('_') && !HIDDEN_LABELS.includes(label));\n\n  if (displayLabels.length === 0) {\n    return /*#__PURE__*/_jsx(\"span\", {\n      className: cx([styles.logsLabels]),\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: cx([styles.logsLabel]),\n        children: \"(no unique labels)\"\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: cx([styles.logsLabels]),\n    children: displayLabels.sort().map(label => {\n      const value = labels[label];\n\n      if (!value) {\n        return;\n      }\n\n      const tooltip = `${label}: ${value}`;\n      return /*#__PURE__*/_jsx(\"span\", {\n        className: cx([styles.logsLabel]),\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: cx([styles.logsLabelValue]),\n          title: tooltip,\n          children: value\n        })\n      }, label);\n    })\n  });\n};\nexport const LogLabels = withTheme(UnThemedLogLabels);\nLogLabels.displayName = 'LogLabels';","map":{"version":3,"names":["css","cx","React","stylesFactory","withTheme","HIDDEN_LABELS","getStyles","theme","logsLabels","typography","size","xs","logsLabel","colors","bg2","border","radius","logsLabelValue","UnThemedLogLabels","labels","styles","displayLabels","Object","keys","filter","label","startsWith","includes","length","sort","map","value","tooltip","LogLabels","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Logs/LogLabels.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FunctionComponent } from 'react';\n\nimport { GrafanaTheme, Labels } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { withTheme } from '../../themes/ThemeContext';\nimport { Themeable } from '../../types/theme';\n\n// Levels are already encoded in color, filename is a Loki-ism\nconst HIDDEN_LABELS = ['level', 'lvl', 'filename'];\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    logsLabels: css`\n      display: flex;\n      flex-wrap: wrap;\n      font-size: ${theme.typography.size.xs};\n    `,\n    logsLabel: css`\n      label: logs-label;\n      display: flex;\n      padding: 0 2px;\n      background-color: ${theme.colors.bg2};\n      border-radius: ${theme.border.radius};\n      margin: 1px 4px 0 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    `,\n    logsLabelValue: css`\n      label: logs-label__value;\n      display: inline-block;\n      max-width: 20em;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    `,\n  };\n});\n\ninterface Props extends Themeable {\n  labels: Labels;\n}\n\nexport const UnThemedLogLabels: FunctionComponent<Props> = ({ labels, theme }) => {\n  const styles = getStyles(theme);\n  const displayLabels = Object.keys(labels).filter((label) => !label.startsWith('_') && !HIDDEN_LABELS.includes(label));\n\n  if (displayLabels.length === 0) {\n    return (\n      <span className={cx([styles.logsLabels])}>\n        <span className={cx([styles.logsLabel])}>(no unique labels)</span>\n      </span>\n    );\n  }\n\n  return (\n    <span className={cx([styles.logsLabels])}>\n      {displayLabels.sort().map((label) => {\n        const value = labels[label];\n        if (!value) {\n          return;\n        }\n        const tooltip = `${label}: ${value}`;\n        return (\n          <span key={label} className={cx([styles.logsLabel])}>\n            <span className={cx([styles.logsLabelValue])} title={tooltip}>\n              {value}\n            </span>\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n\nexport const LogLabels = withTheme(UnThemedLogLabels);\nLogLabels.displayName = 'LogLabels';\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAIA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAGA;AACA,MAAMC,aAAa,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,UAAjB,CAAtB;AAEA,MAAMC,SAAS,GAAGH,aAAa,CAAEI,KAAD,IAAyB;EACvD,OAAO;IACLC,UAAU,EAAER,GAAI;AACpB;AACA;AACA,mBAAmBO,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,KALS;IAMLC,SAAS,EAAEZ,GAAI;AACnB;AACA;AACA;AACA,0BAA0BO,KAAK,CAACM,MAAN,CAAaC,GAAI;AAC3C,uBAAuBP,KAAK,CAACQ,MAAN,CAAaC,MAAO;AAC3C;AACA;AACA;AACA;AACA,KAhBS;IAiBLC,cAAc,EAAEjB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;EAvBS,CAAP;AAyBD,CA1B8B,CAA/B;AAgCA,OAAO,MAAMkB,iBAA2C,GAAG,CAAC;EAAEC,MAAF;EAAUZ;AAAV,CAAD,KAAuB;EAChF,MAAMa,MAAM,GAAGd,SAAS,CAACC,KAAD,CAAxB;EACA,MAAMc,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,KAAD,IAAW,CAACA,KAAK,CAACC,UAAN,CAAiB,GAAjB,CAAD,IAA0B,CAACrB,aAAa,CAACsB,QAAd,CAAuBF,KAAvB,CAAjE,CAAtB;;EAEA,IAAIJ,aAAa,CAACO,MAAd,KAAyB,CAA7B,EAAgC;IAC9B,oBACE;MAAM,SAAS,EAAE3B,EAAE,CAAC,CAACmB,MAAM,CAACZ,UAAR,CAAD,CAAnB;MAAA,uBACE;QAAM,SAAS,EAAEP,EAAE,CAAC,CAACmB,MAAM,CAACR,SAAR,CAAD,CAAnB;QAAA;MAAA;IADF,EADF;EAKD;;EAED,oBACE;IAAM,SAAS,EAAEX,EAAE,CAAC,CAACmB,MAAM,CAACZ,UAAR,CAAD,CAAnB;IAAA,UACGa,aAAa,CAACQ,IAAd,GAAqBC,GAArB,CAA0BL,KAAD,IAAW;MACnC,MAAMM,KAAK,GAAGZ,MAAM,CAACM,KAAD,CAApB;;MACA,IAAI,CAACM,KAAL,EAAY;QACV;MACD;;MACD,MAAMC,OAAO,GAAI,GAAEP,KAAM,KAAIM,KAAM,EAAnC;MACA,oBACE;QAAkB,SAAS,EAAE9B,EAAE,CAAC,CAACmB,MAAM,CAACR,SAAR,CAAD,CAA/B;QAAA,uBACE;UAAM,SAAS,EAAEX,EAAE,CAAC,CAACmB,MAAM,CAACH,cAAR,CAAD,CAAnB;UAA8C,KAAK,EAAEe,OAArD;UAAA,UACGD;QADH;MADF,GAAWN,KAAX,CADF;IAOD,CAbA;EADH,EADF;AAkBD,CA9BM;AAgCP,OAAO,MAAMQ,SAAS,GAAG7B,SAAS,CAACc,iBAAD,CAA3B;AACPe,SAAS,CAACC,WAAV,GAAwB,WAAxB"},"metadata":{},"sourceType":"module"}