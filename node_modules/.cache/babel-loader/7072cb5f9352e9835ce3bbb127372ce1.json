{"ast":null,"code":"import { Registry } from './Registry';\nexport let BinaryOperationID;\n\n(function (BinaryOperationID) {\n  BinaryOperationID[\"Add\"] = \"+\";\n  BinaryOperationID[\"Subtract\"] = \"-\";\n  BinaryOperationID[\"Divide\"] = \"/\";\n  BinaryOperationID[\"Multiply\"] = \"*\";\n})(BinaryOperationID || (BinaryOperationID = {}));\n\nexport const binaryOperators = new Registry(() => {\n  return [{\n    id: BinaryOperationID.Add,\n    name: 'Add',\n    operation: (a, b) => a + b\n  }, {\n    id: BinaryOperationID.Subtract,\n    name: 'Subtract',\n    operation: (a, b) => a - b\n  }, {\n    id: BinaryOperationID.Multiply,\n    name: 'Multiply',\n    operation: (a, b) => a * b\n  }, {\n    id: BinaryOperationID.Divide,\n    name: 'Divide',\n    operation: (a, b) => a / b\n  }];\n});","map":{"version":3,"names":["Registry","BinaryOperationID","binaryOperators","id","Add","name","operation","a","b","Subtract","Multiply","Divide"],"sources":["/home/soula/grafana/packages/grafana-data/src/utils/binaryOperators.ts"],"sourcesContent":["import { RegistryItem, Registry } from './Registry';\n\nexport enum BinaryOperationID {\n  Add = '+',\n  Subtract = '-',\n  Divide = '/',\n  Multiply = '*',\n}\n\nexport type BinaryOperation = (left: number, right: number) => number;\n\ninterface BinaryOperatorInfo extends RegistryItem {\n  operation: BinaryOperation;\n}\n\nexport const binaryOperators = new Registry<BinaryOperatorInfo>(() => {\n  return [\n    {\n      id: BinaryOperationID.Add,\n      name: 'Add',\n      operation: (a: number, b: number) => a + b,\n    },\n    {\n      id: BinaryOperationID.Subtract,\n      name: 'Subtract',\n      operation: (a: number, b: number) => a - b,\n    },\n    {\n      id: BinaryOperationID.Multiply,\n      name: 'Multiply',\n      operation: (a: number, b: number) => a * b,\n    },\n    {\n      id: BinaryOperationID.Divide,\n      name: 'Divide',\n      operation: (a: number, b: number) => a / b,\n    },\n  ];\n});\n"],"mappings":"AAAA,SAAuBA,QAAvB,QAAuC,YAAvC;AAEA,WAAYC,iBAAZ;;WAAYA,iB;EAAAA,iB;EAAAA,iB;EAAAA,iB;EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAaZ,OAAO,MAAMC,eAAe,GAAG,IAAIF,QAAJ,CAAiC,MAAM;EACpE,OAAO,CACL;IACEG,EAAE,EAAEF,iBAAiB,CAACG,GADxB;IAEEC,IAAI,EAAE,KAFR;IAGEC,SAAS,EAAE,CAACC,CAAD,EAAYC,CAAZ,KAA0BD,CAAC,GAAGC;EAH3C,CADK,EAML;IACEL,EAAE,EAAEF,iBAAiB,CAACQ,QADxB;IAEEJ,IAAI,EAAE,UAFR;IAGEC,SAAS,EAAE,CAACC,CAAD,EAAYC,CAAZ,KAA0BD,CAAC,GAAGC;EAH3C,CANK,EAWL;IACEL,EAAE,EAAEF,iBAAiB,CAACS,QADxB;IAEEL,IAAI,EAAE,UAFR;IAGEC,SAAS,EAAE,CAACC,CAAD,EAAYC,CAAZ,KAA0BD,CAAC,GAAGC;EAH3C,CAXK,EAgBL;IACEL,EAAE,EAAEF,iBAAiB,CAACU,MADxB;IAEEN,IAAI,EAAE,QAFR;IAGEC,SAAS,EAAE,CAACC,CAAD,EAAYC,CAAZ,KAA0BD,CAAC,GAAGC;EAH3C,CAhBK,CAAP;AAsBD,CAvB8B,CAAxB"},"metadata":{},"sourceType":"module"}