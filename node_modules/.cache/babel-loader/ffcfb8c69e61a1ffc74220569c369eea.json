{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Which items of a {@link SpanDetail} component are expanded.\n */\nexport default class DetailState {\n  constructor(oldState) {\n    _defineProperty(this, \"isTagsOpen\", void 0);\n\n    _defineProperty(this, \"isProcessOpen\", void 0);\n\n    _defineProperty(this, \"logs\", void 0);\n\n    _defineProperty(this, \"references\", void 0);\n\n    _defineProperty(this, \"isWarningsOpen\", void 0);\n\n    _defineProperty(this, \"isStackTracesOpen\", void 0);\n\n    _defineProperty(this, \"isReferencesOpen\", void 0);\n\n    const {\n      isTagsOpen,\n      isProcessOpen,\n      isReferencesOpen,\n      isWarningsOpen,\n      isStackTracesOpen,\n      logs,\n      references\n    } = oldState || {};\n    this.isTagsOpen = Boolean(isTagsOpen);\n    this.isProcessOpen = Boolean(isProcessOpen);\n    this.isReferencesOpen = Boolean(isReferencesOpen);\n    this.isWarningsOpen = Boolean(isWarningsOpen);\n    this.isStackTracesOpen = Boolean(isStackTracesOpen);\n    this.logs = {\n      isOpen: Boolean(logs && logs.isOpen),\n      openedItems: logs && logs.openedItems ? new Set(logs.openedItems) : new Set()\n    };\n    this.references = {\n      isOpen: Boolean(references && references.isOpen),\n      openedItems: references && references.openedItems ? new Set(references.openedItems) : new Set()\n    };\n  }\n\n  toggleTags() {\n    const next = new DetailState(this);\n    next.isTagsOpen = !this.isTagsOpen;\n    return next;\n  }\n\n  toggleProcess() {\n    const next = new DetailState(this);\n    next.isProcessOpen = !this.isProcessOpen;\n    return next;\n  }\n\n  toggleReferences() {\n    const next = new DetailState(this);\n    next.references.isOpen = !this.references.isOpen;\n    return next;\n  }\n\n  toggleReferenceItem(reference) {\n    const next = new DetailState(this);\n\n    if (next.references.openedItems.has(reference)) {\n      next.references.openedItems.delete(reference);\n    } else {\n      next.references.openedItems.add(reference);\n    }\n\n    return next;\n  }\n\n  toggleWarnings() {\n    const next = new DetailState(this);\n    next.isWarningsOpen = !this.isWarningsOpen;\n    return next;\n  }\n\n  toggleStackTraces() {\n    const next = new DetailState(this);\n    next.isStackTracesOpen = !this.isStackTracesOpen;\n    return next;\n  }\n\n  toggleLogs() {\n    const next = new DetailState(this);\n    next.logs.isOpen = !this.logs.isOpen;\n    return next;\n  }\n\n  toggleLogItem(logItem) {\n    const next = new DetailState(this);\n\n    if (next.logs.openedItems.has(logItem)) {\n      next.logs.openedItems.delete(logItem);\n    } else {\n      next.logs.openedItems.add(logItem);\n    }\n\n    return next;\n  }\n\n}","map":{"version":3,"names":["DetailState","constructor","oldState","isTagsOpen","isProcessOpen","isReferencesOpen","isWarningsOpen","isStackTracesOpen","logs","references","Boolean","isOpen","openedItems","Set","toggleTags","next","toggleProcess","toggleReferences","toggleReferenceItem","reference","has","delete","add","toggleWarnings","toggleStackTraces","toggleLogs","toggleLogItem","logItem"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanDetail/DetailState.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceLog, TraceSpanReference } from '../../types/trace';\n\n/**\n * Which items of a {@link SpanDetail} component are expanded.\n */\nexport default class DetailState {\n  isTagsOpen: boolean;\n  isProcessOpen: boolean;\n  logs: { isOpen: boolean; openedItems: Set<TraceLog> };\n  references: { isOpen: boolean; openedItems: Set<TraceSpanReference> };\n  isWarningsOpen: boolean;\n  isStackTracesOpen: boolean;\n  isReferencesOpen: boolean;\n\n  constructor(oldState?: DetailState) {\n    const {\n      isTagsOpen,\n      isProcessOpen,\n      isReferencesOpen,\n      isWarningsOpen,\n      isStackTracesOpen,\n      logs,\n      references,\n    }: DetailState | Record<string, undefined> = oldState || {};\n    this.isTagsOpen = Boolean(isTagsOpen);\n    this.isProcessOpen = Boolean(isProcessOpen);\n    this.isReferencesOpen = Boolean(isReferencesOpen);\n    this.isWarningsOpen = Boolean(isWarningsOpen);\n    this.isStackTracesOpen = Boolean(isStackTracesOpen);\n    this.logs = {\n      isOpen: Boolean(logs && logs.isOpen),\n      openedItems: logs && logs.openedItems ? new Set(logs.openedItems) : new Set(),\n    };\n    this.references = {\n      isOpen: Boolean(references && references.isOpen),\n      openedItems: references && references.openedItems ? new Set(references.openedItems) : new Set(),\n    };\n  }\n\n  toggleTags() {\n    const next = new DetailState(this);\n    next.isTagsOpen = !this.isTagsOpen;\n    return next;\n  }\n\n  toggleProcess() {\n    const next = new DetailState(this);\n    next.isProcessOpen = !this.isProcessOpen;\n    return next;\n  }\n\n  toggleReferences() {\n    const next = new DetailState(this);\n    next.references.isOpen = !this.references.isOpen;\n    return next;\n  }\n\n  toggleReferenceItem(reference: TraceSpanReference) {\n    const next = new DetailState(this);\n    if (next.references.openedItems.has(reference)) {\n      next.references.openedItems.delete(reference);\n    } else {\n      next.references.openedItems.add(reference);\n    }\n    return next;\n  }\n\n  toggleWarnings() {\n    const next = new DetailState(this);\n    next.isWarningsOpen = !this.isWarningsOpen;\n    return next;\n  }\n\n  toggleStackTraces() {\n    const next = new DetailState(this);\n    next.isStackTracesOpen = !this.isStackTracesOpen;\n    return next;\n  }\n\n  toggleLogs() {\n    const next = new DetailState(this);\n    next.logs.isOpen = !this.logs.isOpen;\n    return next;\n  }\n\n  toggleLogItem(logItem: TraceLog) {\n    const next = new DetailState(this);\n    if (next.logs.openedItems.has(logItem)) {\n      next.logs.openedItems.delete(logItem);\n    } else {\n      next.logs.openedItems.add(logItem);\n    }\n    return next;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}