{"ast":null,"code":"import Mousetrap from 'mousetrap';\nimport 'mousetrap-global-bind';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\nimport { LegacyGraphHoverClearEvent, locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport appEvents from 'app/core/app_events';\nimport { getExploreUrl } from 'app/core/utils/explore';\nimport { SaveDashboardDrawer } from 'app/features/dashboard/components/SaveDashboard/SaveDashboardDrawer';\nimport { ShareModal } from 'app/features/dashboard/components/ShareModal';\nimport { getTimeSrv } from '../../features/dashboard/services/TimeSrv';\nimport { getDatasourceSrv } from '../../features/plugins/datasource_srv';\nimport { RemovePanelEvent, ShiftTimeEvent, ShiftTimeEventDirection, ShowModalReactEvent, ZoomOutEvent, AbsoluteTimeEvent } from '../../types/events';\nimport { HelpModal } from '../components/help/HelpModal';\nimport { contextSrv } from '../core';\nimport { exitKioskMode, toggleKioskMode } from '../navigation/kiosk';\nimport { toggleTheme } from './toggleTheme';\nimport { withFocusedPanel } from './withFocusedPanelId';\nexport class KeybindingSrv {\n  reset() {\n    Mousetrap.reset();\n  }\n\n  initGlobals() {\n    if (locationService.getLocation().pathname !== '/login') {\n      this.bind(['?', 'h'], this.showHelpModal);\n      this.bind('g h', this.goToHome);\n      this.bind('g a', this.openAlerting);\n      this.bind('g p', this.goToProfile);\n      this.bind('s o', this.openSearch);\n      this.bind('t a', this.makeAbsoluteTime);\n      this.bind('f', this.openSearch);\n      this.bind('esc', this.exit);\n      this.bindGlobal('esc', this.globalEsc);\n    }\n\n    this.bind('t t', () => toggleTheme(false));\n    this.bind('t r', () => toggleTheme(true));\n  }\n\n  globalEsc() {\n    const anyDoc = document;\n    const activeElement = anyDoc.activeElement; // typehead needs to handle it\n\n    const typeaheads = document.querySelectorAll('.slate-typeahead--open');\n\n    if (typeaheads.length > 0) {\n      return;\n    } // second check if we are in an input we can blur\n\n\n    if (activeElement && activeElement.blur) {\n      if (activeElement.nodeName === 'INPUT' || activeElement.nodeName === 'TEXTAREA' || activeElement.hasAttribute('data-slate-editor')) {\n        anyDoc.activeElement.blur();\n        return;\n      }\n    } // ok no focused input or editor that should block this, let exist!\n\n\n    this.exit();\n  }\n\n  openSearch() {\n    locationService.partial({\n      search: 'open'\n    });\n  }\n\n  closeSearch() {\n    locationService.partial({\n      search: null\n    });\n  }\n\n  openAlerting() {\n    locationService.push('/alerting');\n  }\n\n  goToHome() {\n    locationService.push('/');\n  }\n\n  goToProfile() {\n    locationService.push('/profile');\n  }\n\n  makeAbsoluteTime() {\n    appEvents.publish(new AbsoluteTimeEvent());\n  }\n\n  showHelpModal() {\n    appEvents.publish(new ShowModalReactEvent({\n      component: HelpModal\n    }));\n  }\n\n  exit() {\n    const search = locationService.getSearchObject();\n\n    if (search.editview) {\n      locationService.partial({\n        editview: null\n      });\n      return;\n    }\n\n    if (search.inspect) {\n      locationService.partial({\n        inspect: null,\n        inspectTab: null\n      });\n      return;\n    }\n\n    if (search.editPanel) {\n      locationService.partial({\n        editPanel: null,\n        tab: null\n      });\n      return;\n    }\n\n    if (search.viewPanel) {\n      locationService.partial({\n        viewPanel: null,\n        tab: null\n      });\n      return;\n    }\n\n    if (search.kiosk) {\n      exitKioskMode();\n    }\n\n    if (search.search) {\n      this.closeSearch();\n    }\n  }\n\n  showDashEditView() {\n    locationService.partial({\n      editview: 'settings'\n    });\n  }\n\n  bind(keyArg, fn) {\n    Mousetrap.bind(keyArg, evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      evt.returnValue = false;\n      fn.call(this);\n    }, 'keydown');\n  }\n\n  bindGlobal(keyArg, fn) {\n    Mousetrap.bindGlobal(keyArg, evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      evt.returnValue = false;\n      fn.call(this);\n    }, 'keydown');\n  }\n\n  unbind(keyArg, keyType) {\n    Mousetrap.unbind(keyArg, keyType);\n  }\n\n  bindWithPanelId(keyArg, fn) {\n    this.bind(keyArg, withFocusedPanel(fn));\n  }\n\n  setupTimeRangeBindings(updateUrl = true) {\n    this.bind('t z', () => {\n      appEvents.publish(new ZoomOutEvent({\n        scale: 2,\n        updateUrl\n      }));\n    });\n    this.bind('ctrl+z', () => {\n      appEvents.publish(new ZoomOutEvent({\n        scale: 2,\n        updateUrl\n      }));\n    });\n    this.bind('t left', () => {\n      appEvents.publish(new ShiftTimeEvent({\n        direction: ShiftTimeEventDirection.Left,\n        updateUrl\n      }));\n    });\n    this.bind('t right', () => {\n      appEvents.publish(new ShiftTimeEvent({\n        direction: ShiftTimeEventDirection.Right,\n        updateUrl\n      }));\n    });\n  }\n\n  setupDashboardBindings(dashboard) {\n    this.bind('mod+o', () => {\n      dashboard.graphTooltip = (dashboard.graphTooltip + 1) % 3;\n      dashboard.events.publish(new LegacyGraphHoverClearEvent());\n      dashboard.startRefresh();\n    });\n    this.bind('mod+s', () => {\n      if (dashboard.meta.canSave) {\n        appEvents.publish(new ShowModalReactEvent({\n          component: SaveDashboardDrawer,\n          props: {\n            dashboard\n          }\n        }));\n      }\n    });\n    this.setupTimeRangeBindings(); // edit panel\n\n    this.bindWithPanelId('e', panelId => {\n      if (dashboard.canEditPanelById(panelId)) {\n        const isEditing = locationService.getSearchObject().editPanel !== undefined;\n        locationService.partial({\n          editPanel: isEditing ? null : panelId\n        });\n      }\n    }); // view panel\n\n    this.bindWithPanelId('v', panelId => {\n      const isViewing = locationService.getSearchObject().viewPanel !== undefined;\n      locationService.partial({\n        viewPanel: isViewing ? null : panelId\n      });\n    });\n    this.bindWithPanelId('i', panelId => {\n      locationService.partial({\n        inspect: panelId\n      });\n    }); // jump to explore if permissions allow\n\n    if (contextSrv.hasAccessToExplore()) {\n      this.bindWithPanelId('x', async panelId => {\n        const panel = dashboard.getPanelById(panelId);\n        const url = await getExploreUrl({\n          panel,\n          datasourceSrv: getDatasourceSrv(),\n          timeSrv: getTimeSrv()\n        });\n\n        if (url) {\n          const urlWithoutBase = locationUtil.stripBaseFromUrl(url);\n\n          if (urlWithoutBase) {\n            locationService.push(urlWithoutBase);\n          }\n        }\n      });\n    } // delete panel\n\n\n    this.bindWithPanelId('p r', panelId => {\n      if (dashboard.canEditPanelById(panelId) && !(dashboard.panelInView || dashboard.panelInEdit)) {\n        appEvents.publish(new RemovePanelEvent(panelId));\n      }\n    }); // duplicate panel\n\n    this.bindWithPanelId('p d', panelId => {\n      if (dashboard.canEditPanelById(panelId)) {\n        const panelIndex = dashboard.getPanelInfoById(panelId).index;\n        dashboard.duplicatePanel(dashboard.panels[panelIndex]);\n      }\n    }); // share panel\n\n    this.bindWithPanelId('p s', panelId => {\n      const panelInfo = dashboard.getPanelInfoById(panelId);\n      appEvents.publish(new ShowModalReactEvent({\n        component: ShareModal,\n        props: {\n          dashboard: dashboard,\n          panel: panelInfo === null || panelInfo === void 0 ? void 0 : panelInfo.panel\n        }\n      }));\n    }); // toggle panel legend\n\n    this.bindWithPanelId('p l', panelId => {\n      const panelInfo = dashboard.getPanelInfoById(panelId);\n\n      if (panelInfo.panel.legend) {\n        panelInfo.panel.legend.show = !panelInfo.panel.legend.show;\n        panelInfo.panel.render();\n      }\n    }); // toggle all panel legends\n\n    this.bind('d l', () => {\n      dashboard.toggleLegendsForAll();\n    }); // collapse all rows\n\n    this.bind('d shift+c', () => {\n      dashboard.collapseRows();\n    }); // expand all rows\n\n    this.bind('d shift+e', () => {\n      dashboard.expandRows();\n    });\n    this.bind('d n', () => {\n      locationService.push('/dashboard/new');\n    });\n    this.bind('d r', () => {\n      dashboard.startRefresh();\n    });\n    this.bind('d s', () => {\n      this.showDashEditView();\n    });\n    this.bind('d k', () => {\n      toggleKioskMode();\n    }); //Autofit panels\n\n    this.bind('d a', () => {\n      // this has to be a full page reload\n      const queryParams = locationService.getSearchObject();\n      const newUrlParam = queryParams.autofitpanels ? '' : '&autofitpanels';\n      window.location.href = window.location.href + newUrlParam;\n    });\n  }\n\n}\nexport const keybindingSrv = new KeybindingSrv();","map":{"version":3,"names":["Mousetrap","LegacyGraphHoverClearEvent","locationUtil","locationService","appEvents","getExploreUrl","SaveDashboardDrawer","ShareModal","getTimeSrv","getDatasourceSrv","RemovePanelEvent","ShiftTimeEvent","ShiftTimeEventDirection","ShowModalReactEvent","ZoomOutEvent","AbsoluteTimeEvent","HelpModal","contextSrv","exitKioskMode","toggleKioskMode","toggleTheme","withFocusedPanel","KeybindingSrv","reset","initGlobals","getLocation","pathname","bind","showHelpModal","goToHome","openAlerting","goToProfile","openSearch","makeAbsoluteTime","exit","bindGlobal","globalEsc","anyDoc","document","activeElement","typeaheads","querySelectorAll","length","blur","nodeName","hasAttribute","partial","search","closeSearch","push","publish","component","getSearchObject","editview","inspect","inspectTab","editPanel","tab","viewPanel","kiosk","showDashEditView","keyArg","fn","evt","preventDefault","stopPropagation","returnValue","call","unbind","keyType","bindWithPanelId","setupTimeRangeBindings","updateUrl","scale","direction","Left","Right","setupDashboardBindings","dashboard","graphTooltip","events","startRefresh","meta","canSave","props","panelId","canEditPanelById","isEditing","undefined","isViewing","hasAccessToExplore","panel","getPanelById","url","datasourceSrv","timeSrv","urlWithoutBase","stripBaseFromUrl","panelInView","panelInEdit","panelIndex","getPanelInfoById","index","duplicatePanel","panels","panelInfo","legend","show","render","toggleLegendsForAll","collapseRows","expandRows","queryParams","newUrlParam","autofitpanels","window","location","href","keybindingSrv"],"sources":["/home/soula/grafana/public/app/core/services/keybindingSrv.ts"],"sourcesContent":["import Mousetrap from 'mousetrap';\n\nimport 'mousetrap-global-bind';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\nimport { LegacyGraphHoverClearEvent, locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport appEvents from 'app/core/app_events';\nimport { getExploreUrl } from 'app/core/utils/explore';\nimport { SaveDashboardDrawer } from 'app/features/dashboard/components/SaveDashboard/SaveDashboardDrawer';\nimport { ShareModal } from 'app/features/dashboard/components/ShareModal';\nimport { DashboardModel } from 'app/features/dashboard/state';\n\nimport { getTimeSrv } from '../../features/dashboard/services/TimeSrv';\nimport { getDatasourceSrv } from '../../features/plugins/datasource_srv';\nimport {\n  RemovePanelEvent,\n  ShiftTimeEvent,\n  ShiftTimeEventDirection,\n  ShowModalReactEvent,\n  ZoomOutEvent,\n  AbsoluteTimeEvent,\n} from '../../types/events';\nimport { HelpModal } from '../components/help/HelpModal';\nimport { contextSrv } from '../core';\nimport { exitKioskMode, toggleKioskMode } from '../navigation/kiosk';\n\nimport { toggleTheme } from './toggleTheme';\nimport { withFocusedPanel } from './withFocusedPanelId';\n\nexport class KeybindingSrv {\n  reset() {\n    Mousetrap.reset();\n  }\n\n  initGlobals() {\n    if (locationService.getLocation().pathname !== '/login') {\n      this.bind(['?', 'h'], this.showHelpModal);\n      this.bind('g h', this.goToHome);\n      this.bind('g a', this.openAlerting);\n      this.bind('g p', this.goToProfile);\n      this.bind('s o', this.openSearch);\n      this.bind('t a', this.makeAbsoluteTime);\n      this.bind('f', this.openSearch);\n      this.bind('esc', this.exit);\n      this.bindGlobal('esc', this.globalEsc);\n    }\n\n    this.bind('t t', () => toggleTheme(false));\n    this.bind('t r', () => toggleTheme(true));\n  }\n\n  globalEsc() {\n    const anyDoc = document as any;\n    const activeElement = anyDoc.activeElement;\n\n    // typehead needs to handle it\n    const typeaheads = document.querySelectorAll('.slate-typeahead--open');\n    if (typeaheads.length > 0) {\n      return;\n    }\n\n    // second check if we are in an input we can blur\n    if (activeElement && activeElement.blur) {\n      if (\n        activeElement.nodeName === 'INPUT' ||\n        activeElement.nodeName === 'TEXTAREA' ||\n        activeElement.hasAttribute('data-slate-editor')\n      ) {\n        anyDoc.activeElement.blur();\n        return;\n      }\n    }\n\n    // ok no focused input or editor that should block this, let exist!\n    this.exit();\n  }\n\n  private openSearch() {\n    locationService.partial({ search: 'open' });\n  }\n\n  private closeSearch() {\n    locationService.partial({ search: null });\n  }\n\n  private openAlerting() {\n    locationService.push('/alerting');\n  }\n\n  private goToHome() {\n    locationService.push('/');\n  }\n\n  private goToProfile() {\n    locationService.push('/profile');\n  }\n\n  private makeAbsoluteTime() {\n    appEvents.publish(new AbsoluteTimeEvent());\n  }\n\n  private showHelpModal() {\n    appEvents.publish(new ShowModalReactEvent({ component: HelpModal }));\n  }\n\n  private exit() {\n    const search = locationService.getSearchObject();\n\n    if (search.editview) {\n      locationService.partial({ editview: null });\n      return;\n    }\n\n    if (search.inspect) {\n      locationService.partial({ inspect: null, inspectTab: null });\n      return;\n    }\n\n    if (search.editPanel) {\n      locationService.partial({ editPanel: null, tab: null });\n      return;\n    }\n\n    if (search.viewPanel) {\n      locationService.partial({ viewPanel: null, tab: null });\n      return;\n    }\n\n    if (search.kiosk) {\n      exitKioskMode();\n    }\n\n    if (search.search) {\n      this.closeSearch();\n    }\n  }\n\n  private showDashEditView() {\n    locationService.partial({\n      editview: 'settings',\n    });\n  }\n\n  bind(keyArg: string | string[], fn: () => void) {\n    Mousetrap.bind(\n      keyArg,\n      (evt: any) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        evt.returnValue = false;\n        fn.call(this);\n      },\n      'keydown'\n    );\n  }\n\n  bindGlobal(keyArg: string, fn: () => void) {\n    Mousetrap.bindGlobal(\n      keyArg,\n      (evt: any) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        evt.returnValue = false;\n        fn.call(this);\n      },\n      'keydown'\n    );\n  }\n\n  unbind(keyArg: string, keyType?: string) {\n    Mousetrap.unbind(keyArg, keyType);\n  }\n\n  bindWithPanelId(keyArg: string, fn: (panelId: number) => void) {\n    this.bind(keyArg, withFocusedPanel(fn));\n  }\n\n  setupTimeRangeBindings(updateUrl = true) {\n    this.bind('t z', () => {\n      appEvents.publish(new ZoomOutEvent({ scale: 2, updateUrl }));\n    });\n\n    this.bind('ctrl+z', () => {\n      appEvents.publish(new ZoomOutEvent({ scale: 2, updateUrl }));\n    });\n\n    this.bind('t left', () => {\n      appEvents.publish(new ShiftTimeEvent({ direction: ShiftTimeEventDirection.Left, updateUrl }));\n    });\n\n    this.bind('t right', () => {\n      appEvents.publish(new ShiftTimeEvent({ direction: ShiftTimeEventDirection.Right, updateUrl }));\n    });\n  }\n\n  setupDashboardBindings(dashboard: DashboardModel) {\n    this.bind('mod+o', () => {\n      dashboard.graphTooltip = (dashboard.graphTooltip + 1) % 3;\n      dashboard.events.publish(new LegacyGraphHoverClearEvent());\n      dashboard.startRefresh();\n    });\n\n    this.bind('mod+s', () => {\n      if (dashboard.meta.canSave) {\n        appEvents.publish(\n          new ShowModalReactEvent({\n            component: SaveDashboardDrawer,\n            props: {\n              dashboard,\n            },\n          })\n        );\n      }\n    });\n\n    this.setupTimeRangeBindings();\n\n    // edit panel\n    this.bindWithPanelId('e', (panelId) => {\n      if (dashboard.canEditPanelById(panelId)) {\n        const isEditing = locationService.getSearchObject().editPanel !== undefined;\n        locationService.partial({ editPanel: isEditing ? null : panelId });\n      }\n    });\n\n    // view panel\n    this.bindWithPanelId('v', (panelId) => {\n      const isViewing = locationService.getSearchObject().viewPanel !== undefined;\n      locationService.partial({ viewPanel: isViewing ? null : panelId });\n    });\n\n    this.bindWithPanelId('i', (panelId) => {\n      locationService.partial({ inspect: panelId });\n    });\n\n    // jump to explore if permissions allow\n    if (contextSrv.hasAccessToExplore()) {\n      this.bindWithPanelId('x', async (panelId) => {\n        const panel = dashboard.getPanelById(panelId)!;\n        const url = await getExploreUrl({\n          panel,\n          datasourceSrv: getDatasourceSrv(),\n          timeSrv: getTimeSrv(),\n        });\n\n        if (url) {\n          const urlWithoutBase = locationUtil.stripBaseFromUrl(url);\n          if (urlWithoutBase) {\n            locationService.push(urlWithoutBase);\n          }\n        }\n      });\n    }\n\n    // delete panel\n    this.bindWithPanelId('p r', (panelId) => {\n      if (dashboard.canEditPanelById(panelId) && !(dashboard.panelInView || dashboard.panelInEdit)) {\n        appEvents.publish(new RemovePanelEvent(panelId));\n      }\n    });\n\n    // duplicate panel\n    this.bindWithPanelId('p d', (panelId) => {\n      if (dashboard.canEditPanelById(panelId)) {\n        const panelIndex = dashboard.getPanelInfoById(panelId)!.index;\n        dashboard.duplicatePanel(dashboard.panels[panelIndex]);\n      }\n    });\n\n    // share panel\n    this.bindWithPanelId('p s', (panelId) => {\n      const panelInfo = dashboard.getPanelInfoById(panelId);\n\n      appEvents.publish(\n        new ShowModalReactEvent({\n          component: ShareModal,\n          props: {\n            dashboard: dashboard,\n            panel: panelInfo?.panel,\n          },\n        })\n      );\n    });\n\n    // toggle panel legend\n    this.bindWithPanelId('p l', (panelId) => {\n      const panelInfo = dashboard.getPanelInfoById(panelId)!;\n\n      if (panelInfo.panel.legend) {\n        panelInfo.panel.legend.show = !panelInfo.panel.legend.show;\n        panelInfo.panel.render();\n      }\n    });\n\n    // toggle all panel legends\n    this.bind('d l', () => {\n      dashboard.toggleLegendsForAll();\n    });\n\n    // collapse all rows\n    this.bind('d shift+c', () => {\n      dashboard.collapseRows();\n    });\n\n    // expand all rows\n    this.bind('d shift+e', () => {\n      dashboard.expandRows();\n    });\n\n    this.bind('d n', () => {\n      locationService.push('/dashboard/new');\n    });\n\n    this.bind('d r', () => {\n      dashboard.startRefresh();\n    });\n\n    this.bind('d s', () => {\n      this.showDashEditView();\n    });\n\n    this.bind('d k', () => {\n      toggleKioskMode();\n    });\n\n    //Autofit panels\n    this.bind('d a', () => {\n      // this has to be a full page reload\n      const queryParams = locationService.getSearchObject();\n      const newUrlParam = queryParams.autofitpanels ? '' : '&autofitpanels';\n      window.location.href = window.location.href + newUrlParam;\n    });\n  }\n}\n\nexport const keybindingSrv = new KeybindingSrv();\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,OAAO,uBAAP;AACA,OAAO,qDAAP;AACA,SAASC,0BAAT,EAAqCC,YAArC,QAAyD,eAAzD;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,mBAAT,QAAoC,qEAApC;AACA,SAASC,UAAT,QAA2B,8CAA3B;AAGA,SAASC,UAAT,QAA2B,2CAA3B;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,uBAHF,EAIEC,mBAJF,EAKEC,YALF,EAMEC,iBANF,QAOO,oBAPP;AAQA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,qBAA/C;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,MAAMC,aAAN,CAAoB;EACzBC,KAAK,GAAG;IACNvB,SAAS,CAACuB,KAAV;EACD;;EAEDC,WAAW,GAAG;IACZ,IAAIrB,eAAe,CAACsB,WAAhB,GAA8BC,QAA9B,KAA2C,QAA/C,EAAyD;MACvD,KAAKC,IAAL,CAAU,CAAC,GAAD,EAAM,GAAN,CAAV,EAAsB,KAAKC,aAA3B;MACA,KAAKD,IAAL,CAAU,KAAV,EAAiB,KAAKE,QAAtB;MACA,KAAKF,IAAL,CAAU,KAAV,EAAiB,KAAKG,YAAtB;MACA,KAAKH,IAAL,CAAU,KAAV,EAAiB,KAAKI,WAAtB;MACA,KAAKJ,IAAL,CAAU,KAAV,EAAiB,KAAKK,UAAtB;MACA,KAAKL,IAAL,CAAU,KAAV,EAAiB,KAAKM,gBAAtB;MACA,KAAKN,IAAL,CAAU,GAAV,EAAe,KAAKK,UAApB;MACA,KAAKL,IAAL,CAAU,KAAV,EAAiB,KAAKO,IAAtB;MACA,KAAKC,UAAL,CAAgB,KAAhB,EAAuB,KAAKC,SAA5B;IACD;;IAED,KAAKT,IAAL,CAAU,KAAV,EAAiB,MAAMP,WAAW,CAAC,KAAD,CAAlC;IACA,KAAKO,IAAL,CAAU,KAAV,EAAiB,MAAMP,WAAW,CAAC,IAAD,CAAlC;EACD;;EAEDgB,SAAS,GAAG;IACV,MAAMC,MAAM,GAAGC,QAAf;IACA,MAAMC,aAAa,GAAGF,MAAM,CAACE,aAA7B,CAFU,CAIV;;IACA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,gBAAT,CAA0B,wBAA1B,CAAnB;;IACA,IAAID,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;MACzB;IACD,CARS,CAUV;;;IACA,IAAIH,aAAa,IAAIA,aAAa,CAACI,IAAnC,EAAyC;MACvC,IACEJ,aAAa,CAACK,QAAd,KAA2B,OAA3B,IACAL,aAAa,CAACK,QAAd,KAA2B,UAD3B,IAEAL,aAAa,CAACM,YAAd,CAA2B,mBAA3B,CAHF,EAIE;QACAR,MAAM,CAACE,aAAP,CAAqBI,IAArB;QACA;MACD;IACF,CApBS,CAsBV;;;IACA,KAAKT,IAAL;EACD;;EAEOF,UAAU,GAAG;IACnB7B,eAAe,CAAC2C,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB;EACD;;EAEOC,WAAW,GAAG;IACpB7C,eAAe,CAAC2C,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB;EACD;;EAEOjB,YAAY,GAAG;IACrB3B,eAAe,CAAC8C,IAAhB,CAAqB,WAArB;EACD;;EAEOpB,QAAQ,GAAG;IACjB1B,eAAe,CAAC8C,IAAhB,CAAqB,GAArB;EACD;;EAEOlB,WAAW,GAAG;IACpB5B,eAAe,CAAC8C,IAAhB,CAAqB,UAArB;EACD;;EAEOhB,gBAAgB,GAAG;IACzB7B,SAAS,CAAC8C,OAAV,CAAkB,IAAInC,iBAAJ,EAAlB;EACD;;EAEOa,aAAa,GAAG;IACtBxB,SAAS,CAAC8C,OAAV,CAAkB,IAAIrC,mBAAJ,CAAwB;MAAEsC,SAAS,EAAEnC;IAAb,CAAxB,CAAlB;EACD;;EAEOkB,IAAI,GAAG;IACb,MAAMa,MAAM,GAAG5C,eAAe,CAACiD,eAAhB,EAAf;;IAEA,IAAIL,MAAM,CAACM,QAAX,EAAqB;MACnBlD,eAAe,CAAC2C,OAAhB,CAAwB;QAAEO,QAAQ,EAAE;MAAZ,CAAxB;MACA;IACD;;IAED,IAAIN,MAAM,CAACO,OAAX,EAAoB;MAClBnD,eAAe,CAAC2C,OAAhB,CAAwB;QAAEQ,OAAO,EAAE,IAAX;QAAiBC,UAAU,EAAE;MAA7B,CAAxB;MACA;IACD;;IAED,IAAIR,MAAM,CAACS,SAAX,EAAsB;MACpBrD,eAAe,CAAC2C,OAAhB,CAAwB;QAAEU,SAAS,EAAE,IAAb;QAAmBC,GAAG,EAAE;MAAxB,CAAxB;MACA;IACD;;IAED,IAAIV,MAAM,CAACW,SAAX,EAAsB;MACpBvD,eAAe,CAAC2C,OAAhB,CAAwB;QAAEY,SAAS,EAAE,IAAb;QAAmBD,GAAG,EAAE;MAAxB,CAAxB;MACA;IACD;;IAED,IAAIV,MAAM,CAACY,KAAX,EAAkB;MAChBzC,aAAa;IACd;;IAED,IAAI6B,MAAM,CAACA,MAAX,EAAmB;MACjB,KAAKC,WAAL;IACD;EACF;;EAEOY,gBAAgB,GAAG;IACzBzD,eAAe,CAAC2C,OAAhB,CAAwB;MACtBO,QAAQ,EAAE;IADY,CAAxB;EAGD;;EAED1B,IAAI,CAACkC,MAAD,EAA4BC,EAA5B,EAA4C;IAC9C9D,SAAS,CAAC2B,IAAV,CACEkC,MADF,EAEGE,GAAD,IAAc;MACZA,GAAG,CAACC,cAAJ;MACAD,GAAG,CAACE,eAAJ;MACAF,GAAG,CAACG,WAAJ,GAAkB,KAAlB;MACAJ,EAAE,CAACK,IAAH,CAAQ,IAAR;IACD,CAPH,EAQE,SARF;EAUD;;EAEDhC,UAAU,CAAC0B,MAAD,EAAiBC,EAAjB,EAAiC;IACzC9D,SAAS,CAACmC,UAAV,CACE0B,MADF,EAEGE,GAAD,IAAc;MACZA,GAAG,CAACC,cAAJ;MACAD,GAAG,CAACE,eAAJ;MACAF,GAAG,CAACG,WAAJ,GAAkB,KAAlB;MACAJ,EAAE,CAACK,IAAH,CAAQ,IAAR;IACD,CAPH,EAQE,SARF;EAUD;;EAEDC,MAAM,CAACP,MAAD,EAAiBQ,OAAjB,EAAmC;IACvCrE,SAAS,CAACoE,MAAV,CAAiBP,MAAjB,EAAyBQ,OAAzB;EACD;;EAEDC,eAAe,CAACT,MAAD,EAAiBC,EAAjB,EAAgD;IAC7D,KAAKnC,IAAL,CAAUkC,MAAV,EAAkBxC,gBAAgB,CAACyC,EAAD,CAAlC;EACD;;EAEDS,sBAAsB,CAACC,SAAS,GAAG,IAAb,EAAmB;IACvC,KAAK7C,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrBvB,SAAS,CAAC8C,OAAV,CAAkB,IAAIpC,YAAJ,CAAiB;QAAE2D,KAAK,EAAE,CAAT;QAAYD;MAAZ,CAAjB,CAAlB;IACD,CAFD;IAIA,KAAK7C,IAAL,CAAU,QAAV,EAAoB,MAAM;MACxBvB,SAAS,CAAC8C,OAAV,CAAkB,IAAIpC,YAAJ,CAAiB;QAAE2D,KAAK,EAAE,CAAT;QAAYD;MAAZ,CAAjB,CAAlB;IACD,CAFD;IAIA,KAAK7C,IAAL,CAAU,QAAV,EAAoB,MAAM;MACxBvB,SAAS,CAAC8C,OAAV,CAAkB,IAAIvC,cAAJ,CAAmB;QAAE+D,SAAS,EAAE9D,uBAAuB,CAAC+D,IAArC;QAA2CH;MAA3C,CAAnB,CAAlB;IACD,CAFD;IAIA,KAAK7C,IAAL,CAAU,SAAV,EAAqB,MAAM;MACzBvB,SAAS,CAAC8C,OAAV,CAAkB,IAAIvC,cAAJ,CAAmB;QAAE+D,SAAS,EAAE9D,uBAAuB,CAACgE,KAArC;QAA4CJ;MAA5C,CAAnB,CAAlB;IACD,CAFD;EAGD;;EAEDK,sBAAsB,CAACC,SAAD,EAA4B;IAChD,KAAKnD,IAAL,CAAU,OAAV,EAAmB,MAAM;MACvBmD,SAAS,CAACC,YAAV,GAAyB,CAACD,SAAS,CAACC,YAAV,GAAyB,CAA1B,IAA+B,CAAxD;MACAD,SAAS,CAACE,MAAV,CAAiB9B,OAAjB,CAAyB,IAAIjD,0BAAJ,EAAzB;MACA6E,SAAS,CAACG,YAAV;IACD,CAJD;IAMA,KAAKtD,IAAL,CAAU,OAAV,EAAmB,MAAM;MACvB,IAAImD,SAAS,CAACI,IAAV,CAAeC,OAAnB,EAA4B;QAC1B/E,SAAS,CAAC8C,OAAV,CACE,IAAIrC,mBAAJ,CAAwB;UACtBsC,SAAS,EAAE7C,mBADW;UAEtB8E,KAAK,EAAE;YACLN;UADK;QAFe,CAAxB,CADF;MAQD;IACF,CAXD;IAaA,KAAKP,sBAAL,GApBgD,CAsBhD;;IACA,KAAKD,eAAL,CAAqB,GAArB,EAA2Be,OAAD,IAAa;MACrC,IAAIP,SAAS,CAACQ,gBAAV,CAA2BD,OAA3B,CAAJ,EAAyC;QACvC,MAAME,SAAS,GAAGpF,eAAe,CAACiD,eAAhB,GAAkCI,SAAlC,KAAgDgC,SAAlE;QACArF,eAAe,CAAC2C,OAAhB,CAAwB;UAAEU,SAAS,EAAE+B,SAAS,GAAG,IAAH,GAAUF;QAAhC,CAAxB;MACD;IACF,CALD,EAvBgD,CA8BhD;;IACA,KAAKf,eAAL,CAAqB,GAArB,EAA2Be,OAAD,IAAa;MACrC,MAAMI,SAAS,GAAGtF,eAAe,CAACiD,eAAhB,GAAkCM,SAAlC,KAAgD8B,SAAlE;MACArF,eAAe,CAAC2C,OAAhB,CAAwB;QAAEY,SAAS,EAAE+B,SAAS,GAAG,IAAH,GAAUJ;MAAhC,CAAxB;IACD,CAHD;IAKA,KAAKf,eAAL,CAAqB,GAArB,EAA2Be,OAAD,IAAa;MACrClF,eAAe,CAAC2C,OAAhB,CAAwB;QAAEQ,OAAO,EAAE+B;MAAX,CAAxB;IACD,CAFD,EApCgD,CAwChD;;IACA,IAAIpE,UAAU,CAACyE,kBAAX,EAAJ,EAAqC;MACnC,KAAKpB,eAAL,CAAqB,GAArB,EAA0B,MAAOe,OAAP,IAAmB;QAC3C,MAAMM,KAAK,GAAGb,SAAS,CAACc,YAAV,CAAuBP,OAAvB,CAAd;QACA,MAAMQ,GAAG,GAAG,MAAMxF,aAAa,CAAC;UAC9BsF,KAD8B;UAE9BG,aAAa,EAAErF,gBAAgB,EAFD;UAG9BsF,OAAO,EAAEvF,UAAU;QAHW,CAAD,CAA/B;;QAMA,IAAIqF,GAAJ,EAAS;UACP,MAAMG,cAAc,GAAG9F,YAAY,CAAC+F,gBAAb,CAA8BJ,GAA9B,CAAvB;;UACA,IAAIG,cAAJ,EAAoB;YAClB7F,eAAe,CAAC8C,IAAhB,CAAqB+C,cAArB;UACD;QACF;MACF,CAdD;IAeD,CAzD+C,CA2DhD;;;IACA,KAAK1B,eAAL,CAAqB,KAArB,EAA6Be,OAAD,IAAa;MACvC,IAAIP,SAAS,CAACQ,gBAAV,CAA2BD,OAA3B,KAAuC,EAAEP,SAAS,CAACoB,WAAV,IAAyBpB,SAAS,CAACqB,WAArC,CAA3C,EAA8F;QAC5F/F,SAAS,CAAC8C,OAAV,CAAkB,IAAIxC,gBAAJ,CAAqB2E,OAArB,CAAlB;MACD;IACF,CAJD,EA5DgD,CAkEhD;;IACA,KAAKf,eAAL,CAAqB,KAArB,EAA6Be,OAAD,IAAa;MACvC,IAAIP,SAAS,CAACQ,gBAAV,CAA2BD,OAA3B,CAAJ,EAAyC;QACvC,MAAMe,UAAU,GAAGtB,SAAS,CAACuB,gBAAV,CAA2BhB,OAA3B,EAAqCiB,KAAxD;QACAxB,SAAS,CAACyB,cAAV,CAAyBzB,SAAS,CAAC0B,MAAV,CAAiBJ,UAAjB,CAAzB;MACD;IACF,CALD,EAnEgD,CA0EhD;;IACA,KAAK9B,eAAL,CAAqB,KAArB,EAA6Be,OAAD,IAAa;MACvC,MAAMoB,SAAS,GAAG3B,SAAS,CAACuB,gBAAV,CAA2BhB,OAA3B,CAAlB;MAEAjF,SAAS,CAAC8C,OAAV,CACE,IAAIrC,mBAAJ,CAAwB;QACtBsC,SAAS,EAAE5C,UADW;QAEtB6E,KAAK,EAAE;UACLN,SAAS,EAAEA,SADN;UAELa,KAAK,EAAEc,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEd;QAFb;MAFe,CAAxB,CADF;IASD,CAZD,EA3EgD,CAyFhD;;IACA,KAAKrB,eAAL,CAAqB,KAArB,EAA6Be,OAAD,IAAa;MACvC,MAAMoB,SAAS,GAAG3B,SAAS,CAACuB,gBAAV,CAA2BhB,OAA3B,CAAlB;;MAEA,IAAIoB,SAAS,CAACd,KAAV,CAAgBe,MAApB,EAA4B;QAC1BD,SAAS,CAACd,KAAV,CAAgBe,MAAhB,CAAuBC,IAAvB,GAA8B,CAACF,SAAS,CAACd,KAAV,CAAgBe,MAAhB,CAAuBC,IAAtD;QACAF,SAAS,CAACd,KAAV,CAAgBiB,MAAhB;MACD;IACF,CAPD,EA1FgD,CAmGhD;;IACA,KAAKjF,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrBmD,SAAS,CAAC+B,mBAAV;IACD,CAFD,EApGgD,CAwGhD;;IACA,KAAKlF,IAAL,CAAU,WAAV,EAAuB,MAAM;MAC3BmD,SAAS,CAACgC,YAAV;IACD,CAFD,EAzGgD,CA6GhD;;IACA,KAAKnF,IAAL,CAAU,WAAV,EAAuB,MAAM;MAC3BmD,SAAS,CAACiC,UAAV;IACD,CAFD;IAIA,KAAKpF,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrBxB,eAAe,CAAC8C,IAAhB,CAAqB,gBAArB;IACD,CAFD;IAIA,KAAKtB,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrBmD,SAAS,CAACG,YAAV;IACD,CAFD;IAIA,KAAKtD,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrB,KAAKiC,gBAAL;IACD,CAFD;IAIA,KAAKjC,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrBR,eAAe;IAChB,CAFD,EA9HgD,CAkIhD;;IACA,KAAKQ,IAAL,CAAU,KAAV,EAAiB,MAAM;MACrB;MACA,MAAMqF,WAAW,GAAG7G,eAAe,CAACiD,eAAhB,EAApB;MACA,MAAM6D,WAAW,GAAGD,WAAW,CAACE,aAAZ,GAA4B,EAA5B,GAAiC,gBAArD;MACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBJ,WAA9C;IACD,CALD;EAMD;;AA/SwB;AAkT3B,OAAO,MAAMK,aAAa,GAAG,IAAIhG,aAAJ,EAAtB"},"metadata":{},"sourceType":"module"}