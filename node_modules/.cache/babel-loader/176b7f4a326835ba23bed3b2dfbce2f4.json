{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\nimport { dateTime } from '@grafana/data';\nimport { Field, TimeRangeInput, useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SilencePeriod = () => {\n  const {\n    control,\n    getValues\n  } = useFormContext();\n  const styles = useStyles(getStyles);\n  const {\n    field: {\n      onChange: onChangeStartsAt,\n      value: startsAt\n    },\n    fieldState: {\n      invalid: startsAtInvalid\n    }\n  } = useController({\n    name: 'startsAt',\n    control,\n    rules: {\n      validate: value => getValues().endsAt > value\n    }\n  });\n  const {\n    field: {\n      onChange: onChangeEndsAt,\n      value: endsAt\n    },\n    fieldState: {\n      invalid: endsAtInvalid\n    }\n  } = useController({\n    name: 'endsAt',\n    control,\n    rules: {\n      validate: value => getValues().startsAt < value\n    }\n  });\n  const {\n    field: {\n      onChange: onChangeTimeZone,\n      value: timeZone\n    }\n  } = useController({\n    name: 'timeZone',\n    control\n  });\n  const invalid = startsAtInvalid || endsAtInvalid;\n  const from = dateTime(startsAt);\n  const to = dateTime(endsAt);\n  return /*#__PURE__*/_jsx(Field, {\n    className: styles.timeRange,\n    label: \"Silence start and end\",\n    error: invalid ? 'To is before or the same as from' : '',\n    invalid: invalid,\n    children: /*#__PURE__*/_jsx(TimeRangeInput, {\n      value: {\n        from,\n        to,\n        raw: {\n          from,\n          to\n        }\n      },\n      timeZone: timeZone,\n      onChange: newValue => {\n        onChangeStartsAt(dateTime(newValue.from));\n        onChangeEndsAt(dateTime(newValue.to));\n      },\n      onChangeTimeZone: newValue => onChangeTimeZone(newValue),\n      hideTimeZone: false,\n      hideQuickRanges: true,\n      placeholder: 'Select time range'\n    })\n  });\n};\n\nconst getStyles = theme => ({\n  timeRange: css`\n    width: 400px;\n  `\n});","map":{"version":3,"names":["css","React","useController","useFormContext","dateTime","Field","TimeRangeInput","useStyles","SilencePeriod","control","getValues","styles","getStyles","field","onChange","onChangeStartsAt","value","startsAt","fieldState","invalid","startsAtInvalid","name","rules","validate","endsAt","onChangeEndsAt","endsAtInvalid","onChangeTimeZone","timeZone","from","to","timeRange","raw","newValue","theme"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/silences/SilencePeriod.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\nimport { dateTime, GrafanaTheme } from '@grafana/data';\nimport { Field, TimeRangeInput, useStyles } from '@grafana/ui';\n\nimport { SilenceFormFields } from '../../types/silence-form';\n\nexport const SilencePeriod = () => {\n  const { control, getValues } = useFormContext<SilenceFormFields>();\n  const styles = useStyles(getStyles);\n  const {\n    field: { onChange: onChangeStartsAt, value: startsAt },\n    fieldState: { invalid: startsAtInvalid },\n  } = useController({\n    name: 'startsAt',\n    control,\n    rules: {\n      validate: (value) => getValues().endsAt > value,\n    },\n  });\n\n  const {\n    field: { onChange: onChangeEndsAt, value: endsAt },\n    fieldState: { invalid: endsAtInvalid },\n  } = useController({\n    name: 'endsAt',\n    control,\n    rules: {\n      validate: (value) => getValues().startsAt < value,\n    },\n  });\n\n  const {\n    field: { onChange: onChangeTimeZone, value: timeZone },\n  } = useController({\n    name: 'timeZone',\n    control,\n  });\n\n  const invalid = startsAtInvalid || endsAtInvalid;\n\n  const from = dateTime(startsAt);\n  const to = dateTime(endsAt);\n\n  return (\n    <Field\n      className={styles.timeRange}\n      label=\"Silence start and end\"\n      error={invalid ? 'To is before or the same as from' : ''}\n      invalid={invalid}\n    >\n      <TimeRangeInput\n        value={{\n          from,\n          to,\n          raw: {\n            from,\n            to,\n          },\n        }}\n        timeZone={timeZone}\n        onChange={(newValue) => {\n          onChangeStartsAt(dateTime(newValue.from));\n          onChangeEndsAt(dateTime(newValue.to));\n        }}\n        onChangeTimeZone={(newValue) => onChangeTimeZone(newValue)}\n        hideTimeZone={false}\n        hideQuickRanges={true}\n        placeholder={'Select time range'}\n      />\n    </Field>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  timeRange: css`\n    width: 400px;\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,iBAA9C;AAEA,SAASC,QAAT,QAAuC,eAAvC;AACA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,SAAhC,QAAiD,aAAjD;;AAIA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAyBP,cAAc,EAA7C;EACA,MAAMQ,MAAM,GAAGJ,SAAS,CAACK,SAAD,CAAxB;EACA,MAAM;IACJC,KAAK,EAAE;MAAEC,QAAQ,EAAEC,gBAAZ;MAA8BC,KAAK,EAAEC;IAArC,CADH;IAEJC,UAAU,EAAE;MAAEC,OAAO,EAAEC;IAAX;EAFR,IAGFlB,aAAa,CAAC;IAChBmB,IAAI,EAAE,UADU;IAEhBZ,OAFgB;IAGhBa,KAAK,EAAE;MACLC,QAAQ,EAAGP,KAAD,IAAWN,SAAS,GAAGc,MAAZ,GAAqBR;IADrC;EAHS,CAAD,CAHjB;EAWA,MAAM;IACJH,KAAK,EAAE;MAAEC,QAAQ,EAAEW,cAAZ;MAA4BT,KAAK,EAAEQ;IAAnC,CADH;IAEJN,UAAU,EAAE;MAAEC,OAAO,EAAEO;IAAX;EAFR,IAGFxB,aAAa,CAAC;IAChBmB,IAAI,EAAE,QADU;IAEhBZ,OAFgB;IAGhBa,KAAK,EAAE;MACLC,QAAQ,EAAGP,KAAD,IAAWN,SAAS,GAAGO,QAAZ,GAAuBD;IADvC;EAHS,CAAD,CAHjB;EAWA,MAAM;IACJH,KAAK,EAAE;MAAEC,QAAQ,EAAEa,gBAAZ;MAA8BX,KAAK,EAAEY;IAArC;EADH,IAEF1B,aAAa,CAAC;IAChBmB,IAAI,EAAE,UADU;IAEhBZ;EAFgB,CAAD,CAFjB;EAOA,MAAMU,OAAO,GAAGC,eAAe,IAAIM,aAAnC;EAEA,MAAMG,IAAI,GAAGzB,QAAQ,CAACa,QAAD,CAArB;EACA,MAAMa,EAAE,GAAG1B,QAAQ,CAACoB,MAAD,CAAnB;EAEA,oBACE,KAAC,KAAD;IACE,SAAS,EAAEb,MAAM,CAACoB,SADpB;IAEE,KAAK,EAAC,uBAFR;IAGE,KAAK,EAAEZ,OAAO,GAAG,kCAAH,GAAwC,EAHxD;IAIE,OAAO,EAAEA,OAJX;IAAA,uBAME,KAAC,cAAD;MACE,KAAK,EAAE;QACLU,IADK;QAELC,EAFK;QAGLE,GAAG,EAAE;UACHH,IADG;UAEHC;QAFG;MAHA,CADT;MASE,QAAQ,EAAEF,QATZ;MAUE,QAAQ,EAAGK,QAAD,IAAc;QACtBlB,gBAAgB,CAACX,QAAQ,CAAC6B,QAAQ,CAACJ,IAAV,CAAT,CAAhB;QACAJ,cAAc,CAACrB,QAAQ,CAAC6B,QAAQ,CAACH,EAAV,CAAT,CAAd;MACD,CAbH;MAcE,gBAAgB,EAAGG,QAAD,IAAcN,gBAAgB,CAACM,QAAD,CAdlD;MAeE,YAAY,EAAE,KAfhB;MAgBE,eAAe,EAAE,IAhBnB;MAiBE,WAAW,EAAE;IAjBf;EANF,EADF;AA4BD,CAjEM;;AAmEP,MAAMrB,SAAS,GAAIsB,KAAD,KAA0B;EAC1CH,SAAS,EAAE/B,GAAI;AACjB;AACA;AAH4C,CAA1B,CAAlB"},"metadata":{},"sourceType":"module"}