{"ast":null,"code":"var _div;\n\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { Button } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const OutsideRangePlugin = ({\n  config,\n  onChangeTimeRange\n}) => {\n  const plotInstance = useRef();\n  const [timevalues, setTimeValues] = useState([]);\n  const [timeRange, setTimeRange] = useState();\n  useLayoutEffect(() => {\n    config.addHook('init', u => {\n      plotInstance.current = u;\n    });\n    config.addHook('setScale', u => {\n      var _u$data$, _u$data, _u$scales$x;\n\n      setTimeValues((_u$data$ = (_u$data = u.data) === null || _u$data === void 0 ? void 0 : _u$data[0]) !== null && _u$data$ !== void 0 ? _u$data$ : []);\n      setTimeRange((_u$scales$x = u.scales['x']) !== null && _u$scales$x !== void 0 ? _u$scales$x : undefined);\n    });\n  }, [config]);\n\n  if (timevalues.length < 2 || !onChangeTimeRange) {\n    return null;\n  }\n\n  if (!timeRange || !timeRange.time || !timeRange.min || !timeRange.max) {\n    return null;\n  } // Time values are always sorted for uPlot to work\n\n\n  const first = timevalues[0];\n  const last = timevalues[timevalues.length - 1];\n  const fromX = timeRange.min;\n  const toX = timeRange.max; // (StartA <= EndB) and (EndA >= StartB)\n\n  if (first <= toX && last >= fromX) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      width: '100%',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [_div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        children: \"Data outside time range\"\n      })), /*#__PURE__*/_jsx(Button, {\n        onClick: v => onChangeTimeRange({\n          from: first,\n          to: last\n        }),\n        variant: \"secondary\",\n        children: \"Zoom to data\"\n      })]\n    })\n  });\n};\nOutsideRangePlugin.displayName = 'OutsideRangePlugin';","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","Button","OutsideRangePlugin","config","onChangeTimeRange","plotInstance","timevalues","setTimeValues","timeRange","setTimeRange","addHook","u","current","data","scales","undefined","length","time","min","max","first","last","fromX","toX","position","top","transform","width","textAlign","v","from","to","displayName"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/plugins/OutsideRangePlugin.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState } from 'react';\nimport uPlot, { TypedArray, Scale } from 'uplot';\n\nimport { AbsoluteTimeRange } from '@grafana/data';\nimport { UPlotConfigBuilder, Button } from '@grafana/ui';\n\ninterface ThresholdControlsPluginProps {\n  config: UPlotConfigBuilder;\n  onChangeTimeRange: (timeRange: AbsoluteTimeRange) => void;\n}\n\nexport const OutsideRangePlugin: React.FC<ThresholdControlsPluginProps> = ({ config, onChangeTimeRange }) => {\n  const plotInstance = useRef<uPlot>();\n  const [timevalues, setTimeValues] = useState<number[] | TypedArray>([]);\n  const [timeRange, setTimeRange] = useState<Scale | undefined>();\n\n  useLayoutEffect(() => {\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n    });\n\n    config.addHook('setScale', (u) => {\n      setTimeValues(u.data?.[0] ?? []);\n      setTimeRange(u.scales['x'] ?? undefined);\n    });\n  }, [config]);\n\n  if (timevalues.length < 2 || !onChangeTimeRange) {\n    return null;\n  }\n\n  if (!timeRange || !timeRange.time || !timeRange.min || !timeRange.max!) {\n    return null;\n  }\n\n  // Time values are always sorted for uPlot to work\n  const first = timevalues[0];\n  const last = timevalues[timevalues.length - 1];\n  const fromX = timeRange.min;\n  const toX = timeRange.max;\n\n  // (StartA <= EndB) and (EndA >= StartB)\n  if (first <= toX && last >= fromX) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        width: '100%',\n        textAlign: 'center',\n      }}\n    >\n      <div>\n        <div>Data outside time range</div>\n        <Button onClick={(v) => onChangeTimeRange({ from: first, to: last })} variant=\"secondary\">\n          Zoom to data\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nOutsideRangePlugin.displayName = 'OutsideRangePlugin';\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AAIA,SAA6BC,MAA7B,QAA2C,aAA3C;;;AAOA,OAAO,MAAMC,kBAA0D,GAAG,CAAC;EAAEC,MAAF;EAAUC;AAAV,CAAD,KAAmC;EAC3G,MAAMC,YAAY,GAAGN,MAAM,EAA3B;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAwB,EAAxB,CAA5C;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;EAEAF,eAAe,CAAC,MAAM;IACpBK,MAAM,CAACO,OAAP,CAAe,MAAf,EAAwBC,CAAD,IAAO;MAC5BN,YAAY,CAACO,OAAb,GAAuBD,CAAvB;IACD,CAFD;IAIAR,MAAM,CAACO,OAAP,CAAe,UAAf,EAA4BC,CAAD,IAAO;MAAA;;MAChCJ,aAAa,wBAACI,CAAC,CAACE,IAAH,4CAAC,QAAS,CAAT,CAAD,+CAAgB,EAAhB,CAAb;MACAJ,YAAY,gBAACE,CAAC,CAACG,MAAF,CAAS,GAAT,CAAD,qDAAkBC,SAAlB,CAAZ;IACD,CAHD;EAID,CATc,EASZ,CAACZ,MAAD,CATY,CAAf;;EAWA,IAAIG,UAAU,CAACU,MAAX,GAAoB,CAApB,IAAyB,CAACZ,iBAA9B,EAAiD;IAC/C,OAAO,IAAP;EACD;;EAED,IAAI,CAACI,SAAD,IAAc,CAACA,SAAS,CAACS,IAAzB,IAAiC,CAACT,SAAS,CAACU,GAA5C,IAAmD,CAACV,SAAS,CAACW,GAAlE,EAAwE;IACtE,OAAO,IAAP;EACD,CAtB0G,CAwB3G;;;EACA,MAAMC,KAAK,GAAGd,UAAU,CAAC,CAAD,CAAxB;EACA,MAAMe,IAAI,GAAGf,UAAU,CAACA,UAAU,CAACU,MAAX,GAAoB,CAArB,CAAvB;EACA,MAAMM,KAAK,GAAGd,SAAS,CAACU,GAAxB;EACA,MAAMK,GAAG,GAAGf,SAAS,CAACW,GAAtB,CA5B2G,CA8B3G;;EACA,IAAIC,KAAK,IAAIG,GAAT,IAAgBF,IAAI,IAAIC,KAA5B,EAAmC;IACjC,OAAO,IAAP;EACD;;EAED,oBACE;IACE,KAAK,EAAE;MACLE,QAAQ,EAAE,UADL;MAELC,GAAG,EAAE,KAFA;MAGLC,SAAS,EAAE,kBAHN;MAILC,KAAK,EAAE,MAJF;MAKLC,SAAS,EAAE;IALN,CADT;IAAA,uBASE;MAAA,wCACE;QAAA;MAAA,EADF,gBAEE,KAAC,MAAD;QAAQ,OAAO,EAAGC,CAAD,IAAOzB,iBAAiB,CAAC;UAAE0B,IAAI,EAAEV,KAAR;UAAeW,EAAE,EAAEV;QAAnB,CAAD,CAAzC;QAAsE,OAAO,EAAC,WAA9E;QAAA;MAAA,EAFF;IAAA;EATF,EADF;AAkBD,CArDM;AAuDPnB,kBAAkB,CAAC8B,WAAnB,GAAiC,oBAAjC"},"metadata":{},"sourceType":"module"}