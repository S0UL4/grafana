{"ast":null,"code":"import React, { memo } from 'react';\nimport { CoreApp } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { LokiQueryEditorSelector } from '../querybuilder/components/LokiQueryEditorSelector';\nimport { LokiExploreQueryEditor } from './LokiExploreQueryEditor';\nimport { LokiQueryEditor } from './LokiQueryEditor';\nimport { LokiQueryEditorForAlerting } from './LokiQueryEditorForAlerting';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function LokiQueryEditorByApp(props) {\n  const {\n    app\n  } = props;\n\n  switch (app) {\n    case CoreApp.CloudAlerting:\n      return /*#__PURE__*/_jsx(LokiQueryEditorForAlerting, Object.assign({}, props));\n\n    case CoreApp.Explore:\n      if (config.featureToggles.lokiQueryBuilder) {\n        return /*#__PURE__*/_jsx(LokiQueryEditorSelector, Object.assign({}, props));\n      }\n\n      return /*#__PURE__*/_jsx(LokiExploreQueryEditor, Object.assign({}, props));\n\n    default:\n      if (config.featureToggles.lokiQueryBuilder) {\n        return /*#__PURE__*/_jsx(LokiQueryEditorSelector, Object.assign({}, props));\n      }\n\n      return /*#__PURE__*/_jsx(LokiQueryEditor, Object.assign({}, props));\n  }\n}\nexport default /*#__PURE__*/memo(LokiQueryEditorByApp);","map":{"version":3,"names":["React","memo","CoreApp","config","LokiQueryEditorSelector","LokiExploreQueryEditor","LokiQueryEditor","LokiQueryEditorForAlerting","LokiQueryEditorByApp","props","app","CloudAlerting","Explore","featureToggles","lokiQueryBuilder"],"sources":["/home/soula/grafana/public/app/plugins/datasource/loki/components/LokiQueryEditorByApp.tsx"],"sourcesContent":["import React, { memo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nimport { LokiQueryEditorSelector } from '../querybuilder/components/LokiQueryEditorSelector';\n\nimport { LokiExploreQueryEditor } from './LokiExploreQueryEditor';\nimport { LokiQueryEditor } from './LokiQueryEditor';\nimport { LokiQueryEditorForAlerting } from './LokiQueryEditorForAlerting';\nimport { LokiQueryEditorProps } from './types';\n\nexport function LokiQueryEditorByApp(props: LokiQueryEditorProps) {\n  const { app } = props;\n\n  switch (app) {\n    case CoreApp.CloudAlerting:\n      return <LokiQueryEditorForAlerting {...props} />;\n    case CoreApp.Explore:\n      if (config.featureToggles.lokiQueryBuilder) {\n        return <LokiQueryEditorSelector {...props} />;\n      }\n      return <LokiExploreQueryEditor {...props} />;\n    default:\n      if (config.featureToggles.lokiQueryBuilder) {\n        return <LokiQueryEditorSelector {...props} />;\n      }\n      return <LokiQueryEditor {...props} />;\n  }\n}\n\nexport default memo(LokiQueryEditorByApp);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,uBAAT,QAAwC,oDAAxC;AAEA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,0BAAT,QAA2C,8BAA3C;;AAGA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAA2D;EAChE,MAAM;IAAEC;EAAF,IAAUD,KAAhB;;EAEA,QAAQC,GAAR;IACE,KAAKR,OAAO,CAACS,aAAb;MACE,oBAAO,KAAC,0BAAD,oBAAgCF,KAAhC,EAAP;;IACF,KAAKP,OAAO,CAACU,OAAb;MACE,IAAIT,MAAM,CAACU,cAAP,CAAsBC,gBAA1B,EAA4C;QAC1C,oBAAO,KAAC,uBAAD,oBAA6BL,KAA7B,EAAP;MACD;;MACD,oBAAO,KAAC,sBAAD,oBAA4BA,KAA5B,EAAP;;IACF;MACE,IAAIN,MAAM,CAACU,cAAP,CAAsBC,gBAA1B,EAA4C;QAC1C,oBAAO,KAAC,uBAAD,oBAA6BL,KAA7B,EAAP;MACD;;MACD,oBAAO,KAAC,eAAD,oBAAqBA,KAArB,EAAP;EAZJ;AAcD;AAED,4BAAeR,IAAI,CAACO,oBAAD,CAAnB"},"metadata":{},"sourceType":"module"}