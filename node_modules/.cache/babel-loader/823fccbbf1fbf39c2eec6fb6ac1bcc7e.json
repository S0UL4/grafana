{"ast":null,"code":"const _excluded = [\"label\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useRef } from 'react';\nimport { Stack } from '@grafana/experimental';\nimport { Switch, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function QueryHeaderSwitch(_ref) {\n  let {\n    label\n  } = _ref,\n      inputProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const dashedLabel = label.replace(' ', '-');\n  const switchIdRef = useRef(uniqueId(`switch-${dashedLabel}`));\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(Stack, {\n    gap: 1,\n    children: [/*#__PURE__*/_jsx(\"label\", {\n      htmlFor: switchIdRef.current,\n      className: styles.switchLabel,\n      children: label\n    }), /*#__PURE__*/_jsx(Switch, Object.assign({}, inputProps, {\n      id: switchIdRef.current\n    }))]\n  });\n}\n\nconst getStyles = theme => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary\n      }\n    })\n  };\n};","map":{"version":3,"names":["css","uniqueId","React","useRef","Stack","Switch","useStyles2","QueryHeaderSwitch","label","inputProps","dashedLabel","replace","switchIdRef","styles","getStyles","current","switchLabel","theme","color","colors","text","secondary","cursor","fontSize","typography","bodySmall","primary"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/shared/QueryHeaderSwitch.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Switch, useStyles2 } from '@grafana/ui';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value' | 'ref'> {\n  value?: boolean;\n  label: string;\n}\n\nexport function QueryHeaderSwitch({ label, ...inputProps }: Props) {\n  const dashedLabel = label.replace(' ', '-');\n  const switchIdRef = useRef(uniqueId(`switch-${dashedLabel}`));\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Stack gap={1}>\n      <label htmlFor={switchIdRef.current} className={styles.switchLabel}>\n        {label}\n      </label>\n      <Switch {...inputProps} id={switchIdRef.current} />\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,IAA2BC,MAA3B,QAAyC,OAAzC;AAGA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;;;AAOA,OAAO,SAASC,iBAAT,OAA4D;EAAA,IAAjC;IAAEC;EAAF,CAAiC;EAAA,IAArBC,UAAqB;;EACjE,MAAMC,WAAW,GAAGF,KAAK,CAACG,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAApB;EACA,MAAMC,WAAW,GAAGT,MAAM,CAACF,QAAQ,CAAE,UAASS,WAAY,EAAvB,CAAT,CAA1B;EACA,MAAMG,MAAM,GAAGP,UAAU,CAACQ,SAAD,CAAzB;EAEA,oBACE,MAAC,KAAD;IAAO,GAAG,EAAE,CAAZ;IAAA,wBACE;MAAO,OAAO,EAAEF,WAAW,CAACG,OAA5B;MAAqC,SAAS,EAAEF,MAAM,CAACG,WAAvD;MAAA,UACGR;IADH,EADF,eAIE,KAAC,MAAD,oBAAYC,UAAZ;MAAwB,EAAE,EAAEG,WAAW,CAACG;IAAxC,GAJF;EAAA,EADF;AAQD;;AAED,MAAMD,SAAS,GAAIG,KAAD,IAA0B;EAC1C,OAAO;IACLD,WAAW,EAAEhB,GAAG,CAAC;MACfkB,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,SADV;MAEfC,MAAM,EAAE,SAFO;MAGfC,QAAQ,EAAEN,KAAK,CAACO,UAAN,CAAiBC,SAAjB,CAA2BF,QAHtB;MAIf,WAAW;QACTL,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBM;MADhB;IAJI,CAAD;EADX,CAAP;AAUD,CAXD"},"metadata":{},"sourceType":"module"}