{"ast":null,"code":"var _td;\n\nimport React from 'react';\nimport { Button, Icon } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst DashboardsTable = ({\n  dashboards,\n  onImport,\n  onRemove\n}) => {\n  function buttonText(dashboard) {\n    return dashboard.revision !== dashboard.importedRevision ? 'Update' : 'Re-import';\n  }\n\n  return /*#__PURE__*/_jsx(\"table\", {\n    className: \"filter-table\",\n    children: /*#__PURE__*/_jsx(\"tbody\", {\n      children: dashboards.map((dashboard, index) => {\n        return /*#__PURE__*/_jsxs(\"tr\", {\n          children: [_td || (_td = /*#__PURE__*/_jsx(\"td\", {\n            className: \"width-1\",\n            children: /*#__PURE__*/_jsx(Icon, {\n              name: \"apps\"\n            })\n          })), /*#__PURE__*/_jsx(\"td\", {\n            children: dashboard.imported ? /*#__PURE__*/_jsx(\"a\", {\n              href: dashboard.importedUrl,\n              children: dashboard.title\n            }) : /*#__PURE__*/_jsx(\"span\", {\n              children: dashboard.title\n            })\n          }), /*#__PURE__*/_jsxs(\"td\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: [!dashboard.imported ? /*#__PURE__*/_jsx(Button, {\n              variant: \"secondary\",\n              size: \"sm\",\n              onClick: () => onImport(dashboard, false),\n              children: \"Import\"\n            }) : /*#__PURE__*/_jsx(Button, {\n              variant: \"secondary\",\n              size: \"sm\",\n              onClick: () => onImport(dashboard, true),\n              children: buttonText(dashboard)\n            }), dashboard.imported && /*#__PURE__*/_jsx(Button, {\n              \"aria-label\": \"Delete dashboard\",\n              icon: \"trash-alt\",\n              variant: \"destructive\",\n              size: \"sm\",\n              onClick: () => onRemove(dashboard)\n            })]\n          })]\n        }, `${dashboard.dashboardId}-${index}`);\n      })\n    })\n  });\n};\n\nexport default DashboardsTable;","map":{"version":3,"names":["React","Button","Icon","DashboardsTable","dashboards","onImport","onRemove","buttonText","dashboard","revision","importedRevision","map","index","imported","importedUrl","title","textAlign","dashboardId"],"sources":["/home/soula/grafana/public/app/features/datasources/DashboardsTable.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { Button, Icon } from '@grafana/ui';\n\nimport { PluginDashboard } from '../../types';\n\nexport interface Props {\n  dashboards: PluginDashboard[];\n  onImport: (dashboard: PluginDashboard, overwrite: boolean) => void;\n  onRemove: (dashboard: PluginDashboard) => void;\n}\n\nconst DashboardsTable: FC<Props> = ({ dashboards, onImport, onRemove }) => {\n  function buttonText(dashboard: PluginDashboard) {\n    return dashboard.revision !== dashboard.importedRevision ? 'Update' : 'Re-import';\n  }\n\n  return (\n    <table className=\"filter-table\">\n      <tbody>\n        {dashboards.map((dashboard, index) => {\n          return (\n            <tr key={`${dashboard.dashboardId}-${index}`}>\n              <td className=\"width-1\">\n                <Icon name=\"apps\" />\n              </td>\n              <td>\n                {dashboard.imported ? (\n                  <a href={dashboard.importedUrl}>{dashboard.title}</a>\n                ) : (\n                  <span>{dashboard.title}</span>\n                )}\n              </td>\n              <td style={{ textAlign: 'right' }}>\n                {!dashboard.imported ? (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, false)}>\n                    Import\n                  </Button>\n                ) : (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, true)}>\n                    {buttonText(dashboard)}\n                  </Button>\n                )}\n                {dashboard.imported && (\n                  <Button\n                    aria-label=\"Delete dashboard\"\n                    icon=\"trash-alt\"\n                    variant=\"destructive\"\n                    size=\"sm\"\n                    onClick={() => onRemove(dashboard)}\n                  />\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DashboardsTable;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,aAA7B;;;;AAUA,MAAMC,eAA0B,GAAG,CAAC;EAAEC,UAAF;EAAcC,QAAd;EAAwBC;AAAxB,CAAD,KAAwC;EACzE,SAASC,UAAT,CAAoBC,SAApB,EAAgD;IAC9C,OAAOA,SAAS,CAACC,QAAV,KAAuBD,SAAS,CAACE,gBAAjC,GAAoD,QAApD,GAA+D,WAAtE;EACD;;EAED,oBACE;IAAO,SAAS,EAAC,cAAjB;IAAA,uBACE;MAAA,UACGN,UAAU,CAACO,GAAX,CAAe,CAACH,SAAD,EAAYI,KAAZ,KAAsB;QACpC,oBACE;UAAA,sCACE;YAAI,SAAS,EAAC,SAAd;YAAA,uBACE,KAAC,IAAD;cAAM,IAAI,EAAC;YAAX;UADF,EADF,gBAIE;YAAA,UACGJ,SAAS,CAACK,QAAV,gBACC;cAAG,IAAI,EAAEL,SAAS,CAACM,WAAnB;cAAA,UAAiCN,SAAS,CAACO;YAA3C,EADD,gBAGC;cAAA,UAAOP,SAAS,CAACO;YAAjB;UAJJ,EAJF,eAWE;YAAI,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAb,CAAX;YAAA,WACG,CAACR,SAAS,CAACK,QAAX,gBACC,KAAC,MAAD;cAAQ,OAAO,EAAC,WAAhB;cAA4B,IAAI,EAAC,IAAjC;cAAsC,OAAO,EAAE,MAAMR,QAAQ,CAACG,SAAD,EAAY,KAAZ,CAA7D;cAAA;YAAA,EADD,gBAKC,KAAC,MAAD;cAAQ,OAAO,EAAC,WAAhB;cAA4B,IAAI,EAAC,IAAjC;cAAsC,OAAO,EAAE,MAAMH,QAAQ,CAACG,SAAD,EAAY,IAAZ,CAA7D;cAAA,UACGD,UAAU,CAACC,SAAD;YADb,EANJ,EAUGA,SAAS,CAACK,QAAV,iBACC,KAAC,MAAD;cACE,cAAW,kBADb;cAEE,IAAI,EAAC,WAFP;cAGE,OAAO,EAAC,aAHV;cAIE,IAAI,EAAC,IAJP;cAKE,OAAO,EAAE,MAAMP,QAAQ,CAACE,SAAD;YALzB,EAXJ;UAAA,EAXF;QAAA,GAAU,GAAEA,SAAS,CAACS,WAAY,IAAGL,KAAM,EAA3C,CADF;MAkCD,CAnCA;IADH;EADF,EADF;AA0CD,CA/CD;;AAiDA,eAAeT,eAAf"},"metadata":{},"sourceType":"module"}