{"ast":null,"code":"/**\n * Visual query model\n */\nexport let LokiVisualQueryOperationCategory;\n\n(function (LokiVisualQueryOperationCategory) {\n  LokiVisualQueryOperationCategory[\"Aggregations\"] = \"Aggregations\";\n  LokiVisualQueryOperationCategory[\"RangeFunctions\"] = \"Range functions\";\n  LokiVisualQueryOperationCategory[\"Functions\"] = \"Functions\";\n  LokiVisualQueryOperationCategory[\"Formats\"] = \"Formats\";\n  LokiVisualQueryOperationCategory[\"LineFilters\"] = \"Line filters\";\n  LokiVisualQueryOperationCategory[\"LabelFilters\"] = \"Label filters\";\n  LokiVisualQueryOperationCategory[\"BinaryOps\"] = \"Binary operations\";\n})(LokiVisualQueryOperationCategory || (LokiVisualQueryOperationCategory = {}));\n\nexport let LokiOperationId;\n\n(function (LokiOperationId) {\n  LokiOperationId[\"Json\"] = \"json\";\n  LokiOperationId[\"Logfmt\"] = \"logfmt\";\n  LokiOperationId[\"Regexp\"] = \"regexp\";\n  LokiOperationId[\"Pattern\"] = \"pattern\";\n  LokiOperationId[\"Unpack\"] = \"unpack\";\n  LokiOperationId[\"LineFormat\"] = \"line_format\";\n  LokiOperationId[\"LabelFormat\"] = \"label_format\";\n  LokiOperationId[\"Rate\"] = \"rate\";\n  LokiOperationId[\"CountOverTime\"] = \"count_over_time\";\n  LokiOperationId[\"SumOverTime\"] = \"sum_over_time\";\n  LokiOperationId[\"AvgOverTime\"] = \"avg_over_time\";\n  LokiOperationId[\"MaxOverTime\"] = \"max_over_time\";\n  LokiOperationId[\"MinOverTime\"] = \"min_over_time\";\n  LokiOperationId[\"FirstOverTime\"] = \"first_over_time\";\n  LokiOperationId[\"LastOverTime\"] = \"last_over_time\";\n  LokiOperationId[\"StdvarOverTime\"] = \"stdvar_over_time\";\n  LokiOperationId[\"StddevOverTime\"] = \"stddev_over_time\";\n  LokiOperationId[\"QuantileOverTime\"] = \"quantile_over_time\";\n  LokiOperationId[\"BytesRate\"] = \"bytes_rate\";\n  LokiOperationId[\"BytesOverTime\"] = \"bytes_over_time\";\n  LokiOperationId[\"AbsentOverTime\"] = \"absent_over_time\";\n  LokiOperationId[\"Sum\"] = \"sum\";\n  LokiOperationId[\"Avg\"] = \"avg\";\n  LokiOperationId[\"Min\"] = \"min\";\n  LokiOperationId[\"Max\"] = \"max\";\n  LokiOperationId[\"Stddev\"] = \"stddev\";\n  LokiOperationId[\"Stdvar\"] = \"stdvar\";\n  LokiOperationId[\"Count\"] = \"count\";\n  LokiOperationId[\"TopK\"] = \"topk\";\n  LokiOperationId[\"BottomK\"] = \"bottomk\";\n  LokiOperationId[\"LineContains\"] = \"__line_contains\";\n  LokiOperationId[\"LineContainsNot\"] = \"__line_contains_not\";\n  LokiOperationId[\"LineMatchesRegex\"] = \"__line_matches_regex\";\n  LokiOperationId[\"LineMatchesRegexNot\"] = \"__line_matches_regex_not\";\n  LokiOperationId[\"LabelFilter\"] = \"__label_filter\";\n  LokiOperationId[\"LabelFilterNoErrors\"] = \"__label_filter_no_errors\";\n  LokiOperationId[\"Unwrap\"] = \"unwrap\";\n  LokiOperationId[\"Addition\"] = \"__addition\";\n  LokiOperationId[\"Subtraction\"] = \"__subtraction\";\n  LokiOperationId[\"MultiplyBy\"] = \"__multiply_by\";\n  LokiOperationId[\"DivideBy\"] = \"__divide_by\";\n  LokiOperationId[\"Modulo\"] = \"__modulo\";\n  LokiOperationId[\"Exponent\"] = \"__exponent\";\n  LokiOperationId[\"NestedQuery\"] = \"__nested_query\";\n  LokiOperationId[\"EqualTo\"] = \"__equal_to\";\n  LokiOperationId[\"NotEqualTo\"] = \"__not_equal_to\";\n  LokiOperationId[\"GreaterThan\"] = \"__greater_than\";\n  LokiOperationId[\"LessThan\"] = \"__less_than\";\n  LokiOperationId[\"GreaterOrEqual\"] = \"__greater_or_equal\";\n  LokiOperationId[\"LessOrEqual\"] = \"__less_or_equal\";\n})(LokiOperationId || (LokiOperationId = {}));\n\nexport let LokiOperationOrder;\n\n(function (LokiOperationOrder) {\n  LokiOperationOrder[LokiOperationOrder[\"LineFilters\"] = 1] = \"LineFilters\";\n  LokiOperationOrder[LokiOperationOrder[\"LineFormats\"] = 2] = \"LineFormats\";\n  LokiOperationOrder[LokiOperationOrder[\"LabelFilters\"] = 3] = \"LabelFilters\";\n  LokiOperationOrder[LokiOperationOrder[\"Unwrap\"] = 4] = \"Unwrap\";\n  LokiOperationOrder[LokiOperationOrder[\"NoErrors\"] = 5] = \"NoErrors\";\n  LokiOperationOrder[LokiOperationOrder[\"RangeVectorFunction\"] = 5] = \"RangeVectorFunction\";\n  LokiOperationOrder[LokiOperationOrder[\"Last\"] = 6] = \"Last\";\n})(LokiOperationOrder || (LokiOperationOrder = {}));","map":{"version":3,"names":["LokiVisualQueryOperationCategory","LokiOperationId","LokiOperationOrder"],"sources":["/home/soula/grafana/public/app/plugins/datasource/loki/querybuilder/types.ts"],"sourcesContent":["import { VisualQueryBinary } from '../../prometheus/querybuilder/shared/LokiAndPromQueryModellerBase';\nimport { QueryBuilderLabelFilter, QueryBuilderOperation } from '../../prometheus/querybuilder/shared/types';\n\n/**\n * Visual query model\n */\nexport interface LokiVisualQuery {\n  labels: QueryBuilderLabelFilter[];\n  operations: QueryBuilderOperation[];\n  binaryQueries?: LokiVisualQueryBinary[];\n}\n\nexport type LokiVisualQueryBinary = VisualQueryBinary<LokiVisualQuery>;\n\nexport interface LokiQueryPattern {\n  name: string;\n  operations: QueryBuilderOperation[];\n}\n\nexport enum LokiVisualQueryOperationCategory {\n  Aggregations = 'Aggregations',\n  RangeFunctions = 'Range functions',\n  Functions = 'Functions',\n  Formats = 'Formats',\n  LineFilters = 'Line filters',\n  LabelFilters = 'Label filters',\n  BinaryOps = 'Binary operations',\n}\n\nexport enum LokiOperationId {\n  Json = 'json',\n  Logfmt = 'logfmt',\n  Regexp = 'regexp',\n  Pattern = 'pattern',\n  Unpack = 'unpack',\n  LineFormat = 'line_format',\n  LabelFormat = 'label_format',\n  Rate = 'rate',\n  CountOverTime = 'count_over_time',\n  SumOverTime = 'sum_over_time',\n  AvgOverTime = 'avg_over_time',\n  MaxOverTime = 'max_over_time',\n  MinOverTime = 'min_over_time',\n  FirstOverTime = 'first_over_time',\n  LastOverTime = 'last_over_time',\n  StdvarOverTime = 'stdvar_over_time',\n  StddevOverTime = 'stddev_over_time',\n  QuantileOverTime = 'quantile_over_time',\n  BytesRate = 'bytes_rate',\n  BytesOverTime = 'bytes_over_time',\n  AbsentOverTime = 'absent_over_time',\n  Sum = 'sum',\n  Avg = 'avg',\n  Min = 'min',\n  Max = 'max',\n  Stddev = 'stddev',\n  Stdvar = 'stdvar',\n  Count = 'count',\n  TopK = 'topk',\n  BottomK = 'bottomk',\n  LineContains = '__line_contains',\n  LineContainsNot = '__line_contains_not',\n  LineMatchesRegex = '__line_matches_regex',\n  LineMatchesRegexNot = '__line_matches_regex_not',\n  LabelFilter = '__label_filter',\n  LabelFilterNoErrors = '__label_filter_no_errors',\n  Unwrap = 'unwrap',\n  // Binary ops\n  Addition = '__addition',\n  Subtraction = '__subtraction',\n  MultiplyBy = '__multiply_by',\n  DivideBy = '__divide_by',\n  Modulo = '__modulo',\n  Exponent = '__exponent',\n  NestedQuery = '__nested_query',\n  EqualTo = '__equal_to',\n  NotEqualTo = '__not_equal_to',\n  GreaterThan = '__greater_than',\n  LessThan = '__less_than',\n  GreaterOrEqual = '__greater_or_equal',\n  LessOrEqual = '__less_or_equal',\n}\n\nexport enum LokiOperationOrder {\n  LineFilters = 1,\n  LineFormats = 2,\n  LabelFilters = 3,\n  Unwrap = 4,\n  NoErrors = 5,\n  RangeVectorFunction = 5,\n  Last = 6,\n}\n"],"mappings":"AAGA;AACA;AACA;AAcA,WAAYA,gCAAZ;;WAAYA,gC;EAAAA,gC;EAAAA,gC;EAAAA,gC;EAAAA,gC;EAAAA,gC;EAAAA,gC;EAAAA,gC;GAAAA,gC,KAAAA,gC;;AAUZ,WAAYC,eAAZ;;WAAYA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;GAAAA,e,KAAAA,e;;AAsDZ,WAAYC,kBAAZ;;WAAYA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;GAAAA,kB,KAAAA,kB"},"metadata":{},"sourceType":"module"}