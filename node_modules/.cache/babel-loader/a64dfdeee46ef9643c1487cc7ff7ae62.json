{"ast":null,"code":"var _Icon, _div;\n\nimport { css, cx, keyframes } from '@emotion/css';\nimport { chain, cloneDeep, defaults, find, sortBy } from 'lodash';\nimport React, { useMemo, useState } from 'react';\nimport { connect } from 'react-redux';\nimport tinycolor from 'tinycolor2';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { locationService, reportInteraction } from '@grafana/runtime';\nimport { Icon, IconButton, useStyles2 } from '@grafana/ui';\nimport { CardButton } from 'app/core/components/CardButton';\nimport config from 'app/core/config';\nimport { LS_PANEL_COPY_KEY } from 'app/core/constants';\nimport store from 'app/core/store';\nimport { addPanel } from 'app/features/dashboard/state/reducers';\nimport { LibraryPanelsSearch, LibraryPanelsSearchVariant } from '../../../library-panels/components/LibraryPanelsSearch/LibraryPanelsSearch';\nimport { toPanelModelLibraryPanel } from '../../../library-panels/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getCopiedPanelPlugins = () => {\n  const panels = chain(config.panels).filter({\n    hideFromList: false\n  }).map(item => item).value();\n  const copiedPanels = [];\n  const copiedPanelJson = store.get(LS_PANEL_COPY_KEY);\n\n  if (copiedPanelJson) {\n    const copiedPanel = JSON.parse(copiedPanelJson);\n    const pluginInfo = find(panels, {\n      id: copiedPanel.type\n    });\n\n    if (pluginInfo) {\n      const pluginCopy = cloneDeep(pluginInfo);\n      pluginCopy.name = copiedPanel.title;\n      pluginCopy.sort = -1;\n      pluginCopy.defaults = copiedPanel;\n      copiedPanels.push(pluginCopy);\n    }\n  }\n\n  return sortBy(copiedPanels, 'sort');\n};\n\nexport const AddPanelWidgetUnconnected = ({\n  panel,\n  dashboard\n}) => {\n  const [addPanelView, setAddPanelView] = useState(false);\n\n  const onCancelAddPanel = evt => {\n    evt.preventDefault();\n    dashboard.removePanel(panel);\n  };\n\n  const onBack = () => {\n    setAddPanelView(false);\n  };\n\n  const onCreateNewPanel = () => {\n    const {\n      gridPos\n    } = panel;\n    const newPanel = {\n      type: 'timeseries',\n      title: 'Panel Title',\n      gridPos: {\n        x: gridPos.x,\n        y: gridPos.y,\n        w: gridPos.w,\n        h: gridPos.h\n      }\n    };\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n    locationService.partial({\n      editPanel: newPanel.id\n    });\n  };\n\n  const onPasteCopiedPanel = panelPluginInfo => {\n    const {\n      gridPos\n    } = panel;\n    const newPanel = {\n      type: panelPluginInfo.id,\n      title: 'Panel Title',\n      gridPos: {\n        x: gridPos.x,\n        y: gridPos.y,\n        w: panelPluginInfo.defaults.gridPos.w,\n        h: panelPluginInfo.defaults.gridPos.h\n      }\n    }; // apply panel template / defaults\n\n    if (panelPluginInfo.defaults) {\n      defaults(newPanel, panelPluginInfo.defaults);\n      newPanel.title = panelPluginInfo.defaults.title;\n      store.delete(LS_PANEL_COPY_KEY);\n    }\n\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n  };\n\n  const onAddLibraryPanel = panelInfo => {\n    const {\n      gridPos\n    } = panel;\n    const newPanel = Object.assign({}, panelInfo.model, {\n      gridPos,\n      libraryPanel: toPanelModelLibraryPanel(panelInfo)\n    });\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n  };\n\n  const onCreateNewRow = () => {\n    const newRow = {\n      type: 'row',\n      title: 'Row title',\n      gridPos: {\n        x: 0,\n        y: 0\n      }\n    };\n    dashboard.addPanel(newRow);\n    dashboard.removePanel(panel);\n  };\n\n  const styles = useStyles2(getStyles);\n  const copiedPanelPlugins = useMemo(() => getCopiedPanelPlugins(), []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: cx('panel-container', styles.callToAction),\n      children: [/*#__PURE__*/_jsx(AddPanelWidgetHandle, {\n        onCancel: onCancelAddPanel,\n        onBack: addPanelView ? onBack : undefined,\n        styles: styles,\n        children: addPanelView ? 'Add panel from panel library' : 'Add panel'\n      }), addPanelView ? /*#__PURE__*/_jsx(LibraryPanelsSearch, {\n        onClick: onAddLibraryPanel,\n        variant: LibraryPanelsSearchVariant.Tight,\n        showPanelFilter: true\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.actionsWrapper,\n        children: [/*#__PURE__*/_jsx(CardButton, {\n          icon: \"file-blank\",\n          \"aria-label\": selectors.pages.AddDashboard.addNewPanel,\n          onClick: () => {\n            reportInteraction('Create new panel');\n            onCreateNewPanel();\n          },\n          children: \"Add a new panel\"\n        }), /*#__PURE__*/_jsx(CardButton, {\n          icon: \"wrap-text\",\n          \"aria-label\": selectors.pages.AddDashboard.addNewRow,\n          onClick: () => {\n            reportInteraction('Create new row');\n            onCreateNewRow();\n          },\n          children: \"Add a new row\"\n        }), /*#__PURE__*/_jsx(CardButton, {\n          icon: \"book-open\",\n          \"aria-label\": selectors.pages.AddDashboard.addNewPanelLibrary,\n          onClick: () => {\n            reportInteraction('Add a panel from the panel library');\n            setAddPanelView(true);\n          },\n          children: \"Add a panel from the panel library\"\n        }), copiedPanelPlugins.length === 1 && /*#__PURE__*/_jsx(CardButton, {\n          icon: \"clipboard-alt\",\n          \"aria-label\": selectors.pages.AddDashboard.addNewPanelLibrary,\n          onClick: () => {\n            reportInteraction('Paste panel from clipboard');\n            onPasteCopiedPanel(copiedPanelPlugins[0]);\n          },\n          children: \"Paste panel from clipboard\"\n        })]\n      })]\n    })\n  });\n};\nconst mapDispatchToProps = {\n  addPanel\n};\nexport const AddPanelWidget = connect(undefined, mapDispatchToProps)(AddPanelWidgetUnconnected);\n\nconst AddPanelWidgetHandle = ({\n  children,\n  onBack,\n  onCancel,\n  styles\n}) => {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.headerRow, 'grid-drag-handle'),\n    children: [onBack && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.backButton,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": \"Go back\",\n        name: \"arrow-left\",\n        onClick: onBack,\n        size: \"xl\"\n      })\n    }), !onBack && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.backButton,\n      children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"panel-add\",\n        size: \"md\"\n      }))\n    }), children && /*#__PURE__*/_jsx(\"span\", {\n      children: children\n    }), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"flex-grow-1\"\n    })), /*#__PURE__*/_jsx(IconButton, {\n      \"aria-label\": \"Close 'Add Panel' widget\",\n      name: \"times\",\n      onClick: onCancel\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  const pulsate = keyframes`\n    0% {box-shadow: 0 0 0 2px ${theme.colors.background.canvas}, 0 0 0px 4px ${theme.colors.primary.main};}\n    50% {box-shadow: 0 0 0 2px ${theme.components.dashboard.background}, 0 0 0px 4px ${tinycolor(theme.colors.primary.main).darken(20).toHexString()};}\n    100% {box-shadow: 0 0 0 2px ${theme.components.dashboard.background}, 0 0 0px 4px  ${theme.colors.primary.main};}\n  `;\n  return {\n    // wrapper is used to make sure box-shadow animation isn't cut off in dashboard page\n    wrapper: css`\n      height: 100%;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    callToAction: css`\n      overflow: hidden;\n      outline: 2px dotted transparent;\n      outline-offset: 2px;\n      box-shadow: 0 0 0 2px black, 0 0 0px 4px #1f60c4;\n      animation: ${pulsate} 2s ease infinite;\n    `,\n    actionsWrapper: css`\n      height: 100%;\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: ${theme.spacing(1)};\n      row-gap: ${theme.spacing(1)};\n      padding: ${theme.spacing(0, 1, 1, 1)};\n\n      // This is to make the last action full width (if by itself)\n      & > div:nth-child(2n-1):nth-last-of-type(1) {\n        grid-column: span 2;\n      }\n    `,\n    headerRow: css`\n      display: flex;\n      align-items: center;\n      height: 38px;\n      flex-shrink: 0;\n      width: 100%;\n      font-size: ${theme.typography.fontSize};\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding-left: ${theme.spacing(1)};\n      transition: background-color 0.1s ease-in-out;\n      cursor: move;\n\n      &:hover {\n        background: ${theme.colors.background.secondary};\n      }\n    `,\n    backButton: css`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      padding-left: ${theme.spacing(0.5)};\n      width: ${theme.spacing(4)};\n    `,\n    noMargin: css`\n      margin: 0;\n    `\n  };\n};","map":{"version":3,"names":["css","cx","keyframes","chain","cloneDeep","defaults","find","sortBy","React","useMemo","useState","connect","tinycolor","selectors","locationService","reportInteraction","Icon","IconButton","useStyles2","CardButton","config","LS_PANEL_COPY_KEY","store","addPanel","LibraryPanelsSearch","LibraryPanelsSearchVariant","toPanelModelLibraryPanel","getCopiedPanelPlugins","panels","filter","hideFromList","map","item","value","copiedPanels","copiedPanelJson","get","copiedPanel","JSON","parse","pluginInfo","id","type","pluginCopy","name","title","sort","push","AddPanelWidgetUnconnected","panel","dashboard","addPanelView","setAddPanelView","onCancelAddPanel","evt","preventDefault","removePanel","onBack","onCreateNewPanel","gridPos","newPanel","x","y","w","h","partial","editPanel","onPasteCopiedPanel","panelPluginInfo","delete","onAddLibraryPanel","panelInfo","model","libraryPanel","onCreateNewRow","newRow","styles","getStyles","copiedPanelPlugins","wrapper","callToAction","undefined","Tight","actionsWrapper","pages","AddDashboard","addNewPanel","addNewRow","addNewPanelLibrary","length","mapDispatchToProps","AddPanelWidget","AddPanelWidgetHandle","children","onCancel","headerRow","backButton","theme","pulsate","colors","background","canvas","primary","main","components","darken","toHexString","spacing","typography","fontSize","fontWeightMedium","secondary","noMargin"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/AddPanelWidget/AddPanelWidget.tsx"],"sourcesContent":["import { css, cx, keyframes } from '@emotion/css';\nimport { chain, cloneDeep, defaults, find, sortBy } from 'lodash';\nimport React, { useMemo, useState } from 'react';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { locationService, reportInteraction } from '@grafana/runtime';\nimport { Icon, IconButton, useStyles2 } from '@grafana/ui';\nimport { CardButton } from 'app/core/components/CardButton';\nimport config from 'app/core/config';\nimport { LS_PANEL_COPY_KEY } from 'app/core/constants';\nimport store from 'app/core/store';\nimport { addPanel } from 'app/features/dashboard/state/reducers';\n\nimport {\n  LibraryPanelsSearch,\n  LibraryPanelsSearchVariant,\n} from '../../../library-panels/components/LibraryPanelsSearch/LibraryPanelsSearch';\nimport { LibraryElementDTO } from '../../../library-panels/types';\nimport { toPanelModelLibraryPanel } from '../../../library-panels/utils';\nimport { DashboardModel, PanelModel } from '../../state';\n\nexport type PanelPluginInfo = { id: any; defaults: { gridPos: { w: any; h: any }; title: any } };\n\nexport interface OwnProps {\n  panel: PanelModel;\n  dashboard: DashboardModel;\n}\n\nexport interface DispatchProps {\n  addPanel: typeof addPanel;\n}\n\nexport type Props = OwnProps & DispatchProps;\n\nconst getCopiedPanelPlugins = () => {\n  const panels = chain(config.panels)\n    .filter({ hideFromList: false })\n    .map((item) => item)\n    .value();\n  const copiedPanels = [];\n\n  const copiedPanelJson = store.get(LS_PANEL_COPY_KEY);\n  if (copiedPanelJson) {\n    const copiedPanel = JSON.parse(copiedPanelJson);\n    const pluginInfo: any = find(panels, { id: copiedPanel.type });\n    if (pluginInfo) {\n      const pluginCopy = cloneDeep(pluginInfo);\n      pluginCopy.name = copiedPanel.title;\n      pluginCopy.sort = -1;\n      pluginCopy.defaults = copiedPanel;\n      copiedPanels.push(pluginCopy);\n    }\n  }\n\n  return sortBy(copiedPanels, 'sort');\n};\n\nexport const AddPanelWidgetUnconnected: React.FC<Props> = ({ panel, dashboard }) => {\n  const [addPanelView, setAddPanelView] = useState(false);\n\n  const onCancelAddPanel = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    dashboard.removePanel(panel);\n  };\n\n  const onBack = () => {\n    setAddPanelView(false);\n  };\n\n  const onCreateNewPanel = () => {\n    const { gridPos } = panel;\n\n    const newPanel: Partial<PanelModel> = {\n      type: 'timeseries',\n      title: 'Panel Title',\n      gridPos: { x: gridPos.x, y: gridPos.y, w: gridPos.w, h: gridPos.h },\n    };\n\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n\n    locationService.partial({ editPanel: newPanel.id });\n  };\n\n  const onPasteCopiedPanel = (panelPluginInfo: PanelPluginInfo) => {\n    const { gridPos } = panel;\n\n    const newPanel: any = {\n      type: panelPluginInfo.id,\n      title: 'Panel Title',\n      gridPos: {\n        x: gridPos.x,\n        y: gridPos.y,\n        w: panelPluginInfo.defaults.gridPos.w,\n        h: panelPluginInfo.defaults.gridPos.h,\n      },\n    };\n\n    // apply panel template / defaults\n    if (panelPluginInfo.defaults) {\n      defaults(newPanel, panelPluginInfo.defaults);\n      newPanel.title = panelPluginInfo.defaults.title;\n      store.delete(LS_PANEL_COPY_KEY);\n    }\n\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n  };\n\n  const onAddLibraryPanel = (panelInfo: LibraryElementDTO) => {\n    const { gridPos } = panel;\n\n    const newPanel: PanelModel = {\n      ...panelInfo.model,\n      gridPos,\n      libraryPanel: toPanelModelLibraryPanel(panelInfo),\n    };\n\n    dashboard.addPanel(newPanel);\n    dashboard.removePanel(panel);\n  };\n\n  const onCreateNewRow = () => {\n    const newRow: any = {\n      type: 'row',\n      title: 'Row title',\n      gridPos: { x: 0, y: 0 },\n    };\n\n    dashboard.addPanel(newRow);\n    dashboard.removePanel(panel);\n  };\n\n  const styles = useStyles2(getStyles);\n  const copiedPanelPlugins = useMemo(() => getCopiedPanelPlugins(), []);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={cx('panel-container', styles.callToAction)}>\n        <AddPanelWidgetHandle onCancel={onCancelAddPanel} onBack={addPanelView ? onBack : undefined} styles={styles}>\n          {addPanelView ? 'Add panel from panel library' : 'Add panel'}\n        </AddPanelWidgetHandle>\n        {addPanelView ? (\n          <LibraryPanelsSearch onClick={onAddLibraryPanel} variant={LibraryPanelsSearchVariant.Tight} showPanelFilter />\n        ) : (\n          <div className={styles.actionsWrapper}>\n            <CardButton\n              icon=\"file-blank\"\n              aria-label={selectors.pages.AddDashboard.addNewPanel}\n              onClick={() => {\n                reportInteraction('Create new panel');\n                onCreateNewPanel();\n              }}\n            >\n              Add a new panel\n            </CardButton>\n            <CardButton\n              icon=\"wrap-text\"\n              aria-label={selectors.pages.AddDashboard.addNewRow}\n              onClick={() => {\n                reportInteraction('Create new row');\n                onCreateNewRow();\n              }}\n            >\n              Add a new row\n            </CardButton>\n            <CardButton\n              icon=\"book-open\"\n              aria-label={selectors.pages.AddDashboard.addNewPanelLibrary}\n              onClick={() => {\n                reportInteraction('Add a panel from the panel library');\n                setAddPanelView(true);\n              }}\n            >\n              Add a panel from the panel library\n            </CardButton>\n            {copiedPanelPlugins.length === 1 && (\n              <CardButton\n                icon=\"clipboard-alt\"\n                aria-label={selectors.pages.AddDashboard.addNewPanelLibrary}\n                onClick={() => {\n                  reportInteraction('Paste panel from clipboard');\n                  onPasteCopiedPanel(copiedPanelPlugins[0]);\n                }}\n              >\n                Paste panel from clipboard\n              </CardButton>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = { addPanel };\n\nexport const AddPanelWidget = connect(undefined, mapDispatchToProps)(AddPanelWidgetUnconnected);\n\ninterface AddPanelWidgetHandleProps {\n  onCancel: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onBack?: () => void;\n  children?: string;\n  styles: AddPanelStyles;\n}\n\nconst AddPanelWidgetHandle: React.FC<AddPanelWidgetHandleProps> = ({ children, onBack, onCancel, styles }) => {\n  return (\n    <div className={cx(styles.headerRow, 'grid-drag-handle')}>\n      {onBack && (\n        <div className={styles.backButton}>\n          <IconButton aria-label=\"Go back\" name=\"arrow-left\" onClick={onBack} size=\"xl\" />\n        </div>\n      )}\n      {!onBack && (\n        <div className={styles.backButton}>\n          <Icon name=\"panel-add\" size=\"md\" />\n        </div>\n      )}\n      {children && <span>{children}</span>}\n      <div className=\"flex-grow-1\" />\n      <IconButton aria-label=\"Close 'Add Panel' widget\" name=\"times\" onClick={onCancel} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const pulsate = keyframes`\n    0% {box-shadow: 0 0 0 2px ${theme.colors.background.canvas}, 0 0 0px 4px ${theme.colors.primary.main};}\n    50% {box-shadow: 0 0 0 2px ${theme.components.dashboard.background}, 0 0 0px 4px ${tinycolor(\n    theme.colors.primary.main\n  )\n    .darken(20)\n    .toHexString()};}\n    100% {box-shadow: 0 0 0 2px ${theme.components.dashboard.background}, 0 0 0px 4px  ${theme.colors.primary.main};}\n  `;\n\n  return {\n    // wrapper is used to make sure box-shadow animation isn't cut off in dashboard page\n    wrapper: css`\n      height: 100%;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    callToAction: css`\n      overflow: hidden;\n      outline: 2px dotted transparent;\n      outline-offset: 2px;\n      box-shadow: 0 0 0 2px black, 0 0 0px 4px #1f60c4;\n      animation: ${pulsate} 2s ease infinite;\n    `,\n    actionsWrapper: css`\n      height: 100%;\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: ${theme.spacing(1)};\n      row-gap: ${theme.spacing(1)};\n      padding: ${theme.spacing(0, 1, 1, 1)};\n\n      // This is to make the last action full width (if by itself)\n      & > div:nth-child(2n-1):nth-last-of-type(1) {\n        grid-column: span 2;\n      }\n    `,\n    headerRow: css`\n      display: flex;\n      align-items: center;\n      height: 38px;\n      flex-shrink: 0;\n      width: 100%;\n      font-size: ${theme.typography.fontSize};\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding-left: ${theme.spacing(1)};\n      transition: background-color 0.1s ease-in-out;\n      cursor: move;\n\n      &:hover {\n        background: ${theme.colors.background.secondary};\n      }\n    `,\n    backButton: css`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      padding-left: ${theme.spacing(0.5)};\n      width: ${theme.spacing(4)};\n    `,\n    noMargin: css`\n      margin: 0;\n    `,\n  };\n};\n\ntype AddPanelStyles = ReturnType<typeof getStyles>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}