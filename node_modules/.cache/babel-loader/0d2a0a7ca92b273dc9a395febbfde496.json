{"ast":null,"code":"var _th, _th2, _th3;\n\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport React from 'react';\nimport { getFieldDisplayName, ReducerID } from '@grafana/data';\nimport { Select, StatsPicker, useStyles2 } from '@grafana/ui';\nimport { configMapHandlers, evaluteFieldMappings, lookUpConfigHandler as findConfigHandlerFor } from '../fieldToConfigMapping/fieldToConfigMapping';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function FieldToConfigMappingEditor({\n  frame,\n  mappings,\n  onChange,\n  withReducers,\n  withNameAndValue\n}) {\n  const styles = useStyles2(getStyles);\n  const rows = getViewModelRows(frame, mappings, withNameAndValue);\n  const configProps = configMapHandlers.map(def => configHandlerToSelectOption(def, false));\n\n  const onChangeConfigProperty = (row, value) => {\n    const existingIdx = mappings.findIndex(x => x.fieldName === row.fieldName);\n\n    if (value) {\n      if (existingIdx !== -1) {\n        const update = [...mappings];\n        update.splice(existingIdx, 1, Object.assign({}, mappings[existingIdx], {\n          handlerKey: value.value\n        }));\n        onChange(update);\n      } else {\n        onChange([...mappings, {\n          fieldName: row.fieldName,\n          handlerKey: value.value\n        }]);\n      }\n    } else {\n      if (existingIdx !== -1) {\n        onChange(mappings.filter((x, index) => index !== existingIdx));\n      } else {\n        onChange([...mappings, {\n          fieldName: row.fieldName,\n          handlerKey: '__ignore'\n        }]);\n      }\n    }\n  };\n\n  const onChangeReducer = (row, reducerId) => {\n    const existingIdx = mappings.findIndex(x => x.fieldName === row.fieldName);\n\n    if (existingIdx !== -1) {\n      const update = [...mappings];\n      update.splice(existingIdx, 1, Object.assign({}, mappings[existingIdx], {\n        reducerId\n      }));\n      onChange(update);\n    } else {\n      onChange([...mappings, {\n        fieldName: row.fieldName,\n        handlerKey: row.handlerKey,\n        reducerId\n      }]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"table\", {\n    className: styles.table,\n    children: [/*#__PURE__*/_jsx(\"thead\", {\n      children: /*#__PURE__*/_jsxs(\"tr\", {\n        children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {\n          children: \"Field\"\n        })), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n          children: \"Use as\"\n        })), withReducers && (_th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n          children: \"Select\"\n        })))]\n      })\n    }), /*#__PURE__*/_jsx(\"tbody\", {\n      children: rows.map(row => /*#__PURE__*/_jsxs(\"tr\", {\n        children: [/*#__PURE__*/_jsx(\"td\", {\n          className: styles.labelCell,\n          children: row.fieldName\n        }), /*#__PURE__*/_jsx(\"td\", {\n          className: styles.selectCell,\n          \"data-testid\": `${row.fieldName}-config-key`,\n          children: /*#__PURE__*/_jsx(Select, {\n            options: configProps,\n            value: row.configOption,\n            placeholder: row.placeholder,\n            isClearable: true,\n            onChange: value => onChangeConfigProperty(row, value)\n          })\n        }), withReducers && /*#__PURE__*/_jsx(\"td\", {\n          \"data-testid\": `${row.fieldName}-reducer`,\n          className: styles.selectCell,\n          children: /*#__PURE__*/_jsx(StatsPicker, {\n            stats: [row.reducerId],\n            defaultStat: row.reducerId,\n            onChange: stats => onChangeReducer(row, stats[0])\n          })\n        })]\n      }, row.fieldName))\n    })]\n  });\n}\n\nfunction getViewModelRows(frame, mappings, withNameAndValue) {\n  const rows = [];\n  const mappingResult = evaluteFieldMappings(frame, mappings !== null && mappings !== void 0 ? mappings : [], withNameAndValue);\n\n  for (const field of frame.fields) {\n    var _mapping$handler$key, _mapping$handler;\n\n    const fieldName = getFieldDisplayName(field, frame);\n    const mapping = mappingResult.index[fieldName];\n    const option = configHandlerToSelectOption(mapping.handler, mapping.automatic);\n    rows.push({\n      fieldName,\n      configOption: mapping.automatic ? null : option,\n      placeholder: mapping.automatic ? option === null || option === void 0 ? void 0 : option.label : 'Choose',\n      handlerKey: (_mapping$handler$key = (_mapping$handler = mapping.handler) === null || _mapping$handler === void 0 ? void 0 : _mapping$handler.key) !== null && _mapping$handler$key !== void 0 ? _mapping$handler$key : null,\n      reducerId: mapping.reducerId\n    });\n  } // Add rows for mappings that have no matching field\n\n\n  for (const mapping of mappings) {\n    if (!rows.find(x => x.fieldName === mapping.fieldName)) {\n      var _mapping$reducerId;\n\n      const handler = findConfigHandlerFor(mapping.handlerKey);\n      rows.push({\n        fieldName: mapping.fieldName,\n        handlerKey: mapping.handlerKey,\n        configOption: configHandlerToSelectOption(handler, false),\n        missingInFrame: true,\n        reducerId: (_mapping$reducerId = mapping.reducerId) !== null && _mapping$reducerId !== void 0 ? _mapping$reducerId : ReducerID.lastNotNull\n      });\n    }\n  }\n\n  return Object.values(rows);\n}\n\nfunction configHandlerToSelectOption(def, isAutomatic) {\n  var _def$name;\n\n  if (!def) {\n    return null;\n  }\n\n  let name = (_def$name = def.name) !== null && _def$name !== void 0 ? _def$name : capitalize(def.key);\n\n  if (isAutomatic) {\n    name = `${name} (auto)`;\n  }\n\n  return {\n    label: name,\n    value: def.key\n  };\n}\n\nconst getStyles = theme => ({\n  table: css`\n    margin-top: ${theme.spacing(1)};\n\n    td,\n    th {\n      border-right: 4px solid ${theme.colors.background.primary};\n      border-bottom: 4px solid ${theme.colors.background.primary};\n      white-space: nowrap;\n    }\n    th {\n      font-size: ${theme.typography.bodySmall.fontSize};\n      line-height: ${theme.spacing(4)};\n      padding: ${theme.spacing(0, 1)};\n    }\n  `,\n  labelCell: css`\n    font-size: ${theme.typography.bodySmall.fontSize};\n    background: ${theme.colors.background.secondary};\n    padding: ${theme.spacing(0, 1)};\n    max-width: 400px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: 140px;\n  `,\n  selectCell: css`\n    padding: 0;\n    min-width: 161px;\n  `\n});","map":{"version":3,"names":["css","capitalize","React","getFieldDisplayName","ReducerID","Select","StatsPicker","useStyles2","configMapHandlers","evaluteFieldMappings","lookUpConfigHandler","findConfigHandlerFor","FieldToConfigMappingEditor","frame","mappings","onChange","withReducers","withNameAndValue","styles","getStyles","rows","getViewModelRows","configProps","map","def","configHandlerToSelectOption","onChangeConfigProperty","row","value","existingIdx","findIndex","x","fieldName","update","splice","handlerKey","filter","index","onChangeReducer","reducerId","table","labelCell","selectCell","configOption","placeholder","stats","mappingResult","field","fields","mapping","option","handler","automatic","push","label","key","find","missingInFrame","lastNotNull","Object","values","isAutomatic","name","theme","spacing","colors","background","primary","typography","bodySmall","fontSize","secondary"],"sources":["/home/soula/grafana/public/app/features/transformers/fieldToConfigMapping/FieldToConfigMappingEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport React from 'react';\n\nimport { DataFrame, getFieldDisplayName, GrafanaTheme2, ReducerID, SelectableValue } from '@grafana/data';\nimport { Select, StatsPicker, useStyles2 } from '@grafana/ui';\n\nimport {\n  configMapHandlers,\n  evaluteFieldMappings,\n  FieldToConfigMapHandler,\n  FieldToConfigMapping,\n  lookUpConfigHandler as findConfigHandlerFor,\n} from '../fieldToConfigMapping/fieldToConfigMapping';\n\nexport interface Props {\n  frame: DataFrame;\n  mappings: FieldToConfigMapping[];\n  onChange: (mappings: FieldToConfigMapping[]) => void;\n  withReducers?: boolean;\n  withNameAndValue?: boolean;\n}\n\nexport function FieldToConfigMappingEditor({ frame, mappings, onChange, withReducers, withNameAndValue }: Props) {\n  const styles = useStyles2(getStyles);\n  const rows = getViewModelRows(frame, mappings, withNameAndValue);\n  const configProps = configMapHandlers.map((def) => configHandlerToSelectOption(def, false)) as Array<\n    SelectableValue<string>\n  >;\n\n  const onChangeConfigProperty = (row: FieldToConfigRowViewModel, value: SelectableValue<string | null>) => {\n    const existingIdx = mappings.findIndex((x) => x.fieldName === row.fieldName);\n\n    if (value) {\n      if (existingIdx !== -1) {\n        const update = [...mappings];\n        update.splice(existingIdx, 1, { ...mappings[existingIdx], handlerKey: value.value! });\n        onChange(update);\n      } else {\n        onChange([...mappings, { fieldName: row.fieldName, handlerKey: value.value! }]);\n      }\n    } else {\n      if (existingIdx !== -1) {\n        onChange(mappings.filter((x, index) => index !== existingIdx));\n      } else {\n        onChange([...mappings, { fieldName: row.fieldName, handlerKey: '__ignore' }]);\n      }\n    }\n  };\n\n  const onChangeReducer = (row: FieldToConfigRowViewModel, reducerId: ReducerID) => {\n    const existingIdx = mappings.findIndex((x) => x.fieldName === row.fieldName);\n\n    if (existingIdx !== -1) {\n      const update = [...mappings];\n      update.splice(existingIdx, 1, { ...mappings[existingIdx], reducerId });\n      onChange(update);\n    } else {\n      onChange([...mappings, { fieldName: row.fieldName, handlerKey: row.handlerKey, reducerId }]);\n    }\n  };\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Field</th>\n          <th>Use as</th>\n          {withReducers && <th>Select</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row) => (\n          <tr key={row.fieldName}>\n            <td className={styles.labelCell}>{row.fieldName}</td>\n            <td className={styles.selectCell} data-testid={`${row.fieldName}-config-key`}>\n              <Select\n                options={configProps}\n                value={row.configOption}\n                placeholder={row.placeholder}\n                isClearable={true}\n                onChange={(value) => onChangeConfigProperty(row, value)}\n              />\n            </td>\n            {withReducers && (\n              <td data-testid={`${row.fieldName}-reducer`} className={styles.selectCell}>\n                <StatsPicker\n                  stats={[row.reducerId]}\n                  defaultStat={row.reducerId}\n                  onChange={(stats: string[]) => onChangeReducer(row, stats[0] as ReducerID)}\n                />\n              </td>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\ninterface FieldToConfigRowViewModel {\n  handlerKey: string | null;\n  fieldName: string;\n  configOption: SelectableValue<string | null> | null;\n  placeholder?: string;\n  missingInFrame?: boolean;\n  reducerId: string;\n}\n\nfunction getViewModelRows(\n  frame: DataFrame,\n  mappings: FieldToConfigMapping[],\n  withNameAndValue?: boolean\n): FieldToConfigRowViewModel[] {\n  const rows: FieldToConfigRowViewModel[] = [];\n  const mappingResult = evaluteFieldMappings(frame, mappings ?? [], withNameAndValue);\n\n  for (const field of frame.fields) {\n    const fieldName = getFieldDisplayName(field, frame);\n    const mapping = mappingResult.index[fieldName];\n    const option = configHandlerToSelectOption(mapping.handler, mapping.automatic);\n\n    rows.push({\n      fieldName,\n      configOption: mapping.automatic ? null : option,\n      placeholder: mapping.automatic ? option?.label : 'Choose',\n      handlerKey: mapping.handler?.key ?? null,\n      reducerId: mapping.reducerId,\n    });\n  }\n\n  // Add rows for mappings that have no matching field\n  for (const mapping of mappings) {\n    if (!rows.find((x) => x.fieldName === mapping.fieldName)) {\n      const handler = findConfigHandlerFor(mapping.handlerKey);\n\n      rows.push({\n        fieldName: mapping.fieldName,\n        handlerKey: mapping.handlerKey,\n        configOption: configHandlerToSelectOption(handler, false),\n        missingInFrame: true,\n        reducerId: mapping.reducerId ?? ReducerID.lastNotNull,\n      });\n    }\n  }\n\n  return Object.values(rows);\n}\n\nfunction configHandlerToSelectOption(\n  def: FieldToConfigMapHandler | null,\n  isAutomatic: boolean\n): SelectableValue<string> | null {\n  if (!def) {\n    return null;\n  }\n\n  let name = def.name ?? capitalize(def.key);\n\n  if (isAutomatic) {\n    name = `${name} (auto)`;\n  }\n\n  return {\n    label: name,\n    value: def.key,\n  };\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    margin-top: ${theme.spacing(1)};\n\n    td,\n    th {\n      border-right: 4px solid ${theme.colors.background.primary};\n      border-bottom: 4px solid ${theme.colors.background.primary};\n      white-space: nowrap;\n    }\n    th {\n      font-size: ${theme.typography.bodySmall.fontSize};\n      line-height: ${theme.spacing(4)};\n      padding: ${theme.spacing(0, 1)};\n    }\n  `,\n  labelCell: css`\n    font-size: ${theme.typography.bodySmall.fontSize};\n    background: ${theme.colors.background.secondary};\n    padding: ${theme.spacing(0, 1)};\n    max-width: 400px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: 140px;\n  `,\n  selectCell: css`\n    padding: 0;\n    min-width: 161px;\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAoBC,mBAApB,EAAwDC,SAAxD,QAA0F,eAA1F;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,QAAgD,aAAhD;AAEA,SACEC,iBADF,EAEEC,oBAFF,EAKEC,mBAAmB,IAAIC,oBALzB,QAMO,8CANP;;;AAgBA,OAAO,SAASC,0BAAT,CAAoC;EAAEC,KAAF;EAASC,QAAT;EAAmBC,QAAnB;EAA6BC,YAA7B;EAA2CC;AAA3C,CAApC,EAA0G;EAC/G,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EACA,MAAMC,IAAI,GAAGC,gBAAgB,CAACR,KAAD,EAAQC,QAAR,EAAkBG,gBAAlB,CAA7B;EACA,MAAMK,WAAW,GAAGd,iBAAiB,CAACe,GAAlB,CAAuBC,GAAD,IAASC,2BAA2B,CAACD,GAAD,EAAM,KAAN,CAA1D,CAApB;;EAIA,MAAME,sBAAsB,GAAG,CAACC,GAAD,EAAiCC,KAAjC,KAA2E;IACxG,MAAMC,WAAW,GAAGf,QAAQ,CAACgB,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgBL,GAAG,CAACK,SAA9C,CAApB;;IAEA,IAAIJ,KAAJ,EAAW;MACT,IAAIC,WAAW,KAAK,CAAC,CAArB,EAAwB;QACtB,MAAMI,MAAM,GAAG,CAAC,GAAGnB,QAAJ,CAAf;QACAmB,MAAM,CAACC,MAAP,CAAcL,WAAd,EAA2B,CAA3B,oBAAmCf,QAAQ,CAACe,WAAD,CAA3C;UAA0DM,UAAU,EAAEP,KAAK,CAACA;QAA5E;QACAb,QAAQ,CAACkB,MAAD,CAAR;MACD,CAJD,MAIO;QACLlB,QAAQ,CAAC,CAAC,GAAGD,QAAJ,EAAc;UAAEkB,SAAS,EAAEL,GAAG,CAACK,SAAjB;UAA4BG,UAAU,EAAEP,KAAK,CAACA;QAA9C,CAAd,CAAD,CAAR;MACD;IACF,CARD,MAQO;MACL,IAAIC,WAAW,KAAK,CAAC,CAArB,EAAwB;QACtBd,QAAQ,CAACD,QAAQ,CAACsB,MAAT,CAAgB,CAACL,CAAD,EAAIM,KAAJ,KAAcA,KAAK,KAAKR,WAAxC,CAAD,CAAR;MACD,CAFD,MAEO;QACLd,QAAQ,CAAC,CAAC,GAAGD,QAAJ,EAAc;UAAEkB,SAAS,EAAEL,GAAG,CAACK,SAAjB;UAA4BG,UAAU,EAAE;QAAxC,CAAd,CAAD,CAAR;MACD;IACF;EACF,CAlBD;;EAoBA,MAAMG,eAAe,GAAG,CAACX,GAAD,EAAiCY,SAAjC,KAA0D;IAChF,MAAMV,WAAW,GAAGf,QAAQ,CAACgB,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgBL,GAAG,CAACK,SAA9C,CAApB;;IAEA,IAAIH,WAAW,KAAK,CAAC,CAArB,EAAwB;MACtB,MAAMI,MAAM,GAAG,CAAC,GAAGnB,QAAJ,CAAf;MACAmB,MAAM,CAACC,MAAP,CAAcL,WAAd,EAA2B,CAA3B,oBAAmCf,QAAQ,CAACe,WAAD,CAA3C;QAA0DU;MAA1D;MACAxB,QAAQ,CAACkB,MAAD,CAAR;IACD,CAJD,MAIO;MACLlB,QAAQ,CAAC,CAAC,GAAGD,QAAJ,EAAc;QAAEkB,SAAS,EAAEL,GAAG,CAACK,SAAjB;QAA4BG,UAAU,EAAER,GAAG,CAACQ,UAA5C;QAAwDI;MAAxD,CAAd,CAAD,CAAR;IACD;EACF,CAVD;;EAYA,oBACE;IAAO,SAAS,EAAErB,MAAM,CAACsB,KAAzB;IAAA,wBACE;MAAA,uBACE;QAAA,sCACE;UAAA;QAAA,EADF,gCAEE;UAAA;QAAA,EAFF,GAGGxB,YAAY,kCAAI;UAAA;QAAA,EAAJ,EAHf;MAAA;IADF,EADF,eAQE;MAAA,UACGI,IAAI,CAACG,GAAL,CAAUI,GAAD,iBACR;QAAA,wBACE;UAAI,SAAS,EAAET,MAAM,CAACuB,SAAtB;UAAA,UAAkCd,GAAG,CAACK;QAAtC,EADF,eAEE;UAAI,SAAS,EAAEd,MAAM,CAACwB,UAAtB;UAAkC,eAAc,GAAEf,GAAG,CAACK,SAAU,aAAhE;UAAA,uBACE,KAAC,MAAD;YACE,OAAO,EAAEV,WADX;YAEE,KAAK,EAAEK,GAAG,CAACgB,YAFb;YAGE,WAAW,EAAEhB,GAAG,CAACiB,WAHnB;YAIE,WAAW,EAAE,IAJf;YAKE,QAAQ,EAAGhB,KAAD,IAAWF,sBAAsB,CAACC,GAAD,EAAMC,KAAN;UAL7C;QADF,EAFF,EAWGZ,YAAY,iBACX;UAAI,eAAc,GAAEW,GAAG,CAACK,SAAU,UAAlC;UAA6C,SAAS,EAAEd,MAAM,CAACwB,UAA/D;UAAA,uBACE,KAAC,WAAD;YACE,KAAK,EAAE,CAACf,GAAG,CAACY,SAAL,CADT;YAEE,WAAW,EAAEZ,GAAG,CAACY,SAFnB;YAGE,QAAQ,EAAGM,KAAD,IAAqBP,eAAe,CAACX,GAAD,EAAMkB,KAAK,CAAC,CAAD,CAAX;UAHhD;QADF,EAZJ;MAAA,GAASlB,GAAG,CAACK,SAAb,CADD;IADH,EARF;EAAA,EADF;AAoCD;;AAWD,SAASX,gBAAT,CACER,KADF,EAEEC,QAFF,EAGEG,gBAHF,EAI+B;EAC7B,MAAMG,IAAiC,GAAG,EAA1C;EACA,MAAM0B,aAAa,GAAGrC,oBAAoB,CAACI,KAAD,EAAQC,QAAR,aAAQA,QAAR,cAAQA,QAAR,GAAoB,EAApB,EAAwBG,gBAAxB,CAA1C;;EAEA,KAAK,MAAM8B,KAAX,IAAoBlC,KAAK,CAACmC,MAA1B,EAAkC;IAAA;;IAChC,MAAMhB,SAAS,GAAG7B,mBAAmB,CAAC4C,KAAD,EAAQlC,KAAR,CAArC;IACA,MAAMoC,OAAO,GAAGH,aAAa,CAACT,KAAd,CAAoBL,SAApB,CAAhB;IACA,MAAMkB,MAAM,GAAGzB,2BAA2B,CAACwB,OAAO,CAACE,OAAT,EAAkBF,OAAO,CAACG,SAA1B,CAA1C;IAEAhC,IAAI,CAACiC,IAAL,CAAU;MACRrB,SADQ;MAERW,YAAY,EAAEM,OAAO,CAACG,SAAR,GAAoB,IAApB,GAA2BF,MAFjC;MAGRN,WAAW,EAAEK,OAAO,CAACG,SAAR,GAAoBF,MAApB,aAAoBA,MAApB,uBAAoBA,MAAM,CAAEI,KAA5B,GAAoC,QAHzC;MAIRnB,UAAU,8CAAEc,OAAO,CAACE,OAAV,qDAAE,iBAAiBI,GAAnB,uEAA0B,IAJ5B;MAKRhB,SAAS,EAAEU,OAAO,CAACV;IALX,CAAV;EAOD,CAhB4B,CAkB7B;;;EACA,KAAK,MAAMU,OAAX,IAAsBnC,QAAtB,EAAgC;IAC9B,IAAI,CAACM,IAAI,CAACoC,IAAL,CAAWzB,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgBiB,OAAO,CAACjB,SAAzC,CAAL,EAA0D;MAAA;;MACxD,MAAMmB,OAAO,GAAGxC,oBAAoB,CAACsC,OAAO,CAACd,UAAT,CAApC;MAEAf,IAAI,CAACiC,IAAL,CAAU;QACRrB,SAAS,EAAEiB,OAAO,CAACjB,SADX;QAERG,UAAU,EAAEc,OAAO,CAACd,UAFZ;QAGRQ,YAAY,EAAElB,2BAA2B,CAAC0B,OAAD,EAAU,KAAV,CAHjC;QAIRM,cAAc,EAAE,IAJR;QAKRlB,SAAS,wBAAEU,OAAO,CAACV,SAAV,mEAAuBnC,SAAS,CAACsD;MALlC,CAAV;IAOD;EACF;;EAED,OAAOC,MAAM,CAACC,MAAP,CAAcxC,IAAd,CAAP;AACD;;AAED,SAASK,2BAAT,CACED,GADF,EAEEqC,WAFF,EAGkC;EAAA;;EAChC,IAAI,CAACrC,GAAL,EAAU;IACR,OAAO,IAAP;EACD;;EAED,IAAIsC,IAAI,gBAAGtC,GAAG,CAACsC,IAAP,iDAAe7D,UAAU,CAACuB,GAAG,CAAC+B,GAAL,CAAjC;;EAEA,IAAIM,WAAJ,EAAiB;IACfC,IAAI,GAAI,GAAEA,IAAK,SAAf;EACD;;EAED,OAAO;IACLR,KAAK,EAAEQ,IADF;IAELlC,KAAK,EAAEJ,GAAG,CAAC+B;EAFN,CAAP;AAID;;AAED,MAAMpC,SAAS,GAAI4C,KAAD,KAA2B;EAC3CvB,KAAK,EAAExC,GAAI;AACb,kBAAkB+D,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACnC;AACA;AACA;AACA,gCAAgCD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,OAAQ;AAChE,iCAAiCJ,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,OAAQ;AACjE;AACA;AACA;AACA,mBAAmBJ,KAAK,CAACK,UAAN,CAAiBC,SAAjB,CAA2BC,QAAS;AACvD,qBAAqBP,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACtC,iBAAiBD,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAoB;AACrC;AACA,GAf6C;EAgB3CvB,SAAS,EAAEzC,GAAI;AACjB,iBAAiB+D,KAAK,CAACK,UAAN,CAAiBC,SAAjB,CAA2BC,QAAS;AACrD,kBAAkBP,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBK,SAAU;AACpD,eAAeR,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAoB;AACnC;AACA;AACA;AACA;AACA,GAxB6C;EAyB3CtB,UAAU,EAAE1C,GAAI;AAClB;AACA;AACA;AA5B6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}