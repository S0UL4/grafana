{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'angular';\nimport 'angular-route';\nimport 'angular-sanitize';\nimport 'angular-bindonce';\nimport 'vendor/bootstrap/bootstrap';\nimport angular from 'angular'; // eslint-disable-line no-duplicate-imports\n\nimport { extend } from 'lodash';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport coreModule, { angularModules } from 'app/angular/core_module';\nimport appEvents from 'app/core/app_events';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { DashboardLoaderSrv } from 'app/features/dashboard/services/DashboardLoaderSrv';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { exposeToPlugin } from 'app/features/plugins/plugin_loader';\nimport * as sdk from 'app/plugins/sdk';\nimport { registerAngularDirectives } from './angular_wrappers';\nimport { initAngularRoutingBridge } from './bridgeReactAngularRouting';\nimport { monkeyPatchInjectorWithPreAssignedBindings } from './injectorMonkeyPatch';\nimport { promiseToDigest } from './promiseToDigest';\nimport { registerComponents } from './registerComponents';\nexport class AngularApp {\n  constructor() {\n    _defineProperty(this, \"ngModuleDependencies\", void 0);\n\n    _defineProperty(this, \"preBootModules\", void 0);\n\n    _defineProperty(this, \"registerFunctions\", void 0);\n\n    this.preBootModules = [];\n    this.ngModuleDependencies = [];\n    this.registerFunctions = {};\n  }\n\n  init() {\n    const app = angular.module('grafana', []);\n    app.config([\"$controllerProvider\", \"$compileProvider\", \"$filterProvider\", \"$httpProvider\", \"$provide\", ($controllerProvider, $compileProvider, $filterProvider, $httpProvider, $provide) => {\n      if (config.buildInfo.env !== 'development') {\n        $compileProvider.debugInfoEnabled(false);\n      }\n\n      $httpProvider.useApplyAsync(true);\n      this.registerFunctions.controller = $controllerProvider.register;\n      this.registerFunctions.directive = $compileProvider.directive;\n      this.registerFunctions.factory = $provide.factory;\n      this.registerFunctions.service = $provide.service;\n      this.registerFunctions.filter = $filterProvider.register;\n      $provide.decorator('$http', ['$delegate', '$templateCache', ($delegate, $templateCache) => {\n        const get = $delegate.get;\n\n        $delegate.get = (url, config) => {\n          if (url.match(/\\.html$/)) {\n            // some template's already exist in the cache\n            if (!$templateCache.get(url)) {\n              url += '?v=' + new Date().getTime();\n            }\n          }\n\n          return get(url, config);\n        };\n\n        return $delegate;\n      }]);\n    }]);\n    this.ngModuleDependencies = ['grafana.core', 'ngSanitize', 'grafana', 'pasvaz.bindonce', 'react']; // makes it possible to add dynamic stuff\n\n    angularModules.forEach(m => {\n      this.useModule(m);\n    }); // register react angular wrappers\n\n    angular.module('grafana.services').service('dashboardLoaderSrv', DashboardLoaderSrv);\n    coreModule.factory('timeSrv', () => getTimeSrv());\n    coreModule.factory('templateSrv', () => getTemplateSrv());\n    registerAngularDirectives();\n    registerComponents();\n    initAngularRoutingBridge(); // Angular plugins import this\n\n    exposeToPlugin('angular', angular);\n    exposeToPlugin('app/core/utils/promiseToDigest', {\n      promiseToDigest,\n      __esModule: true\n    });\n    exposeToPlugin('app/plugins/sdk', sdk);\n    exposeToPlugin('app/core/core_module', coreModule);\n    exposeToPlugin('app/core/core', {\n      coreModule: coreModule,\n      appEvents: appEvents,\n      contextSrv: contextSrv,\n      __esModule: true\n    }); // disable tool tip animation\n\n    $.fn.tooltip.defaults.animation = false;\n  }\n\n  useModule(module) {\n    if (this.preBootModules) {\n      this.preBootModules.push(module);\n    } else {\n      extend(module, this.registerFunctions);\n    }\n\n    this.ngModuleDependencies.push(module.name);\n    return module;\n  }\n\n  bootstrap() {\n    const injector = angular.bootstrap(document.getElementById('ngRoot'), this.ngModuleDependencies);\n    monkeyPatchInjectorWithPreAssignedBindings(injector);\n    injector.invoke(() => {\n      this.preBootModules.forEach(module => {\n        extend(module, this.registerFunctions);\n      }); // I don't know\n\n      return () => {};\n    });\n    return injector;\n  }\n\n}","map":{"version":3,"names":["angular","extend","getTemplateSrv","coreModule","angularModules","appEvents","config","contextSrv","DashboardLoaderSrv","getTimeSrv","exposeToPlugin","sdk","registerAngularDirectives","initAngularRoutingBridge","monkeyPatchInjectorWithPreAssignedBindings","promiseToDigest","registerComponents","AngularApp","constructor","preBootModules","ngModuleDependencies","registerFunctions","init","app","module","$controllerProvider","$compileProvider","$filterProvider","$httpProvider","$provide","buildInfo","env","debugInfoEnabled","useApplyAsync","controller","register","directive","factory","service","filter","decorator","$delegate","$templateCache","get","url","match","Date","getTime","forEach","m","useModule","__esModule","$","fn","tooltip","defaults","animation","push","name","bootstrap","injector","document","getElementById","invoke"],"sources":["/home/soula/grafana/public/app/angular/AngularApp.ts"],"sourcesContent":["import 'angular';\nimport 'angular-route';\nimport 'angular-sanitize';\nimport 'angular-bindonce';\nimport 'vendor/bootstrap/bootstrap';\n\nimport angular from 'angular'; // eslint-disable-line no-duplicate-imports\nimport { extend } from 'lodash';\n\nimport { getTemplateSrv } from '@grafana/runtime';\nimport coreModule, { angularModules } from 'app/angular/core_module';\nimport appEvents from 'app/core/app_events';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { DashboardLoaderSrv } from 'app/features/dashboard/services/DashboardLoaderSrv';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { exposeToPlugin } from 'app/features/plugins/plugin_loader';\nimport * as sdk from 'app/plugins/sdk';\n\nimport { registerAngularDirectives } from './angular_wrappers';\nimport { initAngularRoutingBridge } from './bridgeReactAngularRouting';\nimport { monkeyPatchInjectorWithPreAssignedBindings } from './injectorMonkeyPatch';\nimport { promiseToDigest } from './promiseToDigest';\nimport { registerComponents } from './registerComponents';\n\nexport class AngularApp {\n  ngModuleDependencies: any[];\n  preBootModules: any[];\n  registerFunctions: any;\n\n  constructor() {\n    this.preBootModules = [];\n    this.ngModuleDependencies = [];\n    this.registerFunctions = {};\n  }\n\n  init() {\n    const app = angular.module('grafana', []);\n\n    app.config(\n      (\n        $controllerProvider: angular.IControllerProvider,\n        $compileProvider: angular.ICompileProvider,\n        $filterProvider: angular.IFilterProvider,\n        $httpProvider: angular.IHttpProvider,\n        $provide: angular.auto.IProvideService\n      ) => {\n        if (config.buildInfo.env !== 'development') {\n          $compileProvider.debugInfoEnabled(false);\n        }\n\n        $httpProvider.useApplyAsync(true);\n\n        this.registerFunctions.controller = $controllerProvider.register;\n        this.registerFunctions.directive = $compileProvider.directive;\n        this.registerFunctions.factory = $provide.factory;\n        this.registerFunctions.service = $provide.service;\n        this.registerFunctions.filter = $filterProvider.register;\n\n        $provide.decorator('$http', [\n          '$delegate',\n          '$templateCache',\n          ($delegate: any, $templateCache: any) => {\n            const get = $delegate.get;\n            $delegate.get = (url: string, config: any) => {\n              if (url.match(/\\.html$/)) {\n                // some template's already exist in the cache\n                if (!$templateCache.get(url)) {\n                  url += '?v=' + new Date().getTime();\n                }\n              }\n              return get(url, config);\n            };\n            return $delegate;\n          },\n        ]);\n      }\n    );\n\n    this.ngModuleDependencies = ['grafana.core', 'ngSanitize', 'grafana', 'pasvaz.bindonce', 'react'];\n\n    // makes it possible to add dynamic stuff\n    angularModules.forEach((m: angular.IModule) => {\n      this.useModule(m);\n    });\n\n    // register react angular wrappers\n    angular.module('grafana.services').service('dashboardLoaderSrv', DashboardLoaderSrv);\n\n    coreModule.factory('timeSrv', () => getTimeSrv());\n    coreModule.factory('templateSrv', () => getTemplateSrv());\n\n    registerAngularDirectives();\n    registerComponents();\n    initAngularRoutingBridge();\n\n    // Angular plugins import this\n    exposeToPlugin('angular', angular);\n    exposeToPlugin('app/core/utils/promiseToDigest', { promiseToDigest, __esModule: true });\n    exposeToPlugin('app/plugins/sdk', sdk);\n    exposeToPlugin('app/core/core_module', coreModule);\n    exposeToPlugin('app/core/core', {\n      coreModule: coreModule,\n      appEvents: appEvents,\n      contextSrv: contextSrv,\n      __esModule: true,\n    });\n\n    // disable tool tip animation\n    $.fn.tooltip.defaults.animation = false;\n  }\n\n  useModule(module: angular.IModule) {\n    if (this.preBootModules) {\n      this.preBootModules.push(module);\n    } else {\n      extend(module, this.registerFunctions);\n    }\n    this.ngModuleDependencies.push(module.name);\n    return module;\n  }\n\n  bootstrap() {\n    const injector = angular.bootstrap(document.getElementById('ngRoot')!, this.ngModuleDependencies);\n\n    monkeyPatchInjectorWithPreAssignedBindings(injector);\n\n    injector.invoke(() => {\n      this.preBootModules.forEach((module) => {\n        extend(module, this.registerFunctions);\n      });\n\n      // I don't know\n      return () => {};\n    });\n\n    return injector;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}