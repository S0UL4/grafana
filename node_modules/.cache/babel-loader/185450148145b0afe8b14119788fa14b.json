{"ast":null,"code":"var _Icon;\n\nimport { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { dateMath, dateTimeFormat, dateTimeParse, isDateTime, rangeUtil } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Icon, Tooltip } from '../..';\nimport { useStyles2 } from '../../..';\nimport { Button } from '../../Button';\nimport { Field } from '../../Forms/Field';\nimport { Input } from '../../Input/Input';\nimport TimePickerCalendar from './TimePickerCalendar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ERROR_MESSAGES = {\n  default: 'Please enter a past date or \"now\"',\n  range: '\"From\" can\\'t be after \"To\"'\n};\nexport const TimeRangeForm = props => {\n  const {\n    value,\n    isFullscreen = false,\n    timeZone,\n    onApply: onApplyFromProps,\n    isReversed,\n    fiscalYearStartMonth\n  } = props;\n  const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n  const style = useStyles2(getStyles);\n  const [from, setFrom] = useState(fromValue);\n  const [to, setTo] = useState(toValue);\n  const [isOpen, setOpen] = useState(false); // Synchronize internal state with external value\n\n  useEffect(() => {\n    const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n    setFrom(fromValue);\n    setTo(toValue);\n  }, [value.raw.from, value.raw.to, timeZone]);\n  const onOpen = useCallback(event => {\n    event.preventDefault();\n    setOpen(true);\n  }, [setOpen]);\n  const onApply = useCallback(e => {\n    e.preventDefault();\n\n    if (to.invalid || from.invalid) {\n      return;\n    }\n\n    const raw = {\n      from: from.value,\n      to: to.value\n    };\n    const timeRange = rangeUtil.convertRawToRange(raw, timeZone, fiscalYearStartMonth);\n    onApplyFromProps(timeRange);\n  }, [from.invalid, from.value, onApplyFromProps, timeZone, to.invalid, to.value, fiscalYearStartMonth]);\n  const onChange = useCallback((from, to) => {\n    const [fromValue, toValue] = valueToState(from, to, timeZone);\n    setFrom(fromValue);\n    setTo(toValue);\n  }, [timeZone]);\n  const fiscalYear = rangeUtil.convertRawToRange({\n    from: 'now/fy',\n    to: 'now/fy'\n  }, timeZone, fiscalYearStartMonth);\n\n  const fyTooltip = /*#__PURE__*/_jsx(\"div\", {\n    className: style.tooltip,\n    children: rangeUtil.isFiscal(value) ? /*#__PURE__*/_jsx(Tooltip, {\n      content: `Fiscal year: ${fiscalYear.from.format('MMM-DD')} - ${fiscalYear.to.format('MMM-DD')}`,\n      children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"info-circle\"\n      }))\n    }) : null\n  });\n\n  const icon = /*#__PURE__*/_jsx(Button, {\n    \"aria-label\": selectors.components.TimePicker.calendar.openButton,\n    icon: \"calendar-alt\",\n    variant: \"secondary\",\n    onClick: onOpen\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.fieldContainer,\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"From\",\n        invalid: from.invalid,\n        error: from.errorMessage,\n        children: /*#__PURE__*/_jsx(Input, {\n          onClick: event => event.stopPropagation(),\n          onChange: event => onChange(event.currentTarget.value, to.value),\n          addonAfter: icon,\n          \"aria-label\": selectors.components.TimePicker.fromField,\n          value: from.value\n        })\n      }), fyTooltip]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.fieldContainer,\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"To\",\n        invalid: to.invalid,\n        error: to.errorMessage,\n        children: /*#__PURE__*/_jsx(Input, {\n          onClick: event => event.stopPropagation(),\n          onChange: event => onChange(from.value, event.currentTarget.value),\n          addonAfter: icon,\n          \"aria-label\": selectors.components.TimePicker.toField,\n          value: to.value\n        })\n      }), fyTooltip]\n    }), /*#__PURE__*/_jsx(Button, {\n      \"data-testid\": selectors.components.TimePicker.applyTimeRange,\n      onClick: onApply,\n      children: \"Apply time range\"\n    }), /*#__PURE__*/_jsx(TimePickerCalendar, {\n      isFullscreen: isFullscreen,\n      isOpen: isOpen,\n      from: dateTimeParse(from.value),\n      to: dateTimeParse(to.value),\n      onApply: onApply,\n      onClose: () => setOpen(false),\n      onChange: onChange,\n      timeZone: timeZone,\n      isReversed: isReversed\n    })]\n  });\n};\n\nfunction isRangeInvalid(from, to, timezone) {\n  const raw = {\n    from,\n    to\n  };\n  const timeRange = rangeUtil.convertRawToRange(raw, timezone);\n  const valid = timeRange.from.isSame(timeRange.to) || timeRange.from.isBefore(timeRange.to);\n  return !valid;\n}\n\nfunction valueToState(rawFrom, rawTo, timeZone) {\n  const fromValue = valueAsString(rawFrom, timeZone);\n  const toValue = valueAsString(rawTo, timeZone);\n  const fromInvalid = !isValid(fromValue, false, timeZone);\n  const toInvalid = !isValid(toValue, true, timeZone); // If \"To\" is invalid, we should not check the range anyways\n\n  const rangeInvalid = isRangeInvalid(fromValue, toValue, timeZone) && !toInvalid;\n  return [{\n    value: fromValue,\n    invalid: fromInvalid || rangeInvalid,\n    errorMessage: rangeInvalid && !fromInvalid ? ERROR_MESSAGES.range : ERROR_MESSAGES.default\n  }, {\n    value: toValue,\n    invalid: toInvalid,\n    errorMessage: ERROR_MESSAGES.default\n  }];\n}\n\nfunction valueAsString(value, timeZone) {\n  if (isDateTime(value)) {\n    return dateTimeFormat(value, {\n      timeZone\n    });\n  }\n\n  return value;\n}\n\nfunction isValid(value, roundUp, timeZone) {\n  if (isDateTime(value)) {\n    return value.isValid();\n  }\n\n  if (dateMath.isMathString(value)) {\n    return dateMath.isValid(value);\n  }\n\n  const parsed = dateTimeParse(value, {\n    roundUp,\n    timeZone\n  });\n  return parsed.isValid();\n}\n\nfunction getStyles(theme) {\n  return {\n    fieldContainer: css`\n      display: flex;\n    `,\n    tooltip: css`\n      padding-left: ${theme.spacing(1)};\n      padding-top: ${theme.spacing(3)};\n    `\n  };\n}","map":{"version":3,"names":["css","React","useCallback","useEffect","useState","dateMath","dateTimeFormat","dateTimeParse","isDateTime","rangeUtil","selectors","Icon","Tooltip","useStyles2","Button","Field","Input","TimePickerCalendar","ERROR_MESSAGES","default","range","TimeRangeForm","props","value","isFullscreen","timeZone","onApply","onApplyFromProps","isReversed","fiscalYearStartMonth","fromValue","toValue","valueToState","raw","from","to","style","getStyles","setFrom","setTo","isOpen","setOpen","onOpen","event","preventDefault","e","invalid","timeRange","convertRawToRange","onChange","fiscalYear","fyTooltip","tooltip","isFiscal","format","icon","components","TimePicker","calendar","openButton","fieldContainer","errorMessage","stopPropagation","currentTarget","fromField","toField","applyTimeRange","isRangeInvalid","timezone","valid","isSame","isBefore","rawFrom","rawTo","valueAsString","fromInvalid","isValid","toInvalid","rangeInvalid","roundUp","isMathString","parsed","theme","spacing"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeRangePicker/TimeRangeForm.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FormEvent, useCallback, useEffect, useState } from 'react';\n\nimport {\n  dateMath,\n  DateTime,\n  dateTimeFormat,\n  dateTimeParse,\n  GrafanaTheme2,\n  isDateTime,\n  rangeUtil,\n  RawTimeRange,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Icon, Tooltip } from '../..';\nimport { useStyles2 } from '../../..';\nimport { Button } from '../../Button';\nimport { Field } from '../../Forms/Field';\nimport { Input } from '../../Input/Input';\n\nimport TimePickerCalendar from './TimePickerCalendar';\n\ninterface Props {\n  isFullscreen: boolean;\n  value: TimeRange;\n  onApply: (range: TimeRange) => void;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  roundup?: boolean;\n  isReversed?: boolean;\n}\n\ninterface InputState {\n  value: string;\n  invalid: boolean;\n  errorMessage: string;\n}\n\nconst ERROR_MESSAGES = {\n  default: 'Please enter a past date or \"now\"',\n  range: '\"From\" can\\'t be after \"To\"',\n};\n\nexport const TimeRangeForm: React.FC<Props> = (props) => {\n  const { value, isFullscreen = false, timeZone, onApply: onApplyFromProps, isReversed, fiscalYearStartMonth } = props;\n  const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n  const style = useStyles2(getStyles);\n\n  const [from, setFrom] = useState<InputState>(fromValue);\n  const [to, setTo] = useState<InputState>(toValue);\n  const [isOpen, setOpen] = useState(false);\n\n  // Synchronize internal state with external value\n  useEffect(() => {\n    const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n    setFrom(fromValue);\n    setTo(toValue);\n  }, [value.raw.from, value.raw.to, timeZone]);\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  const onApply = useCallback(\n    (e: FormEvent<HTMLButtonElement>) => {\n      e.preventDefault();\n      if (to.invalid || from.invalid) {\n        return;\n      }\n\n      const raw: RawTimeRange = { from: from.value, to: to.value };\n      const timeRange = rangeUtil.convertRawToRange(raw, timeZone, fiscalYearStartMonth);\n\n      onApplyFromProps(timeRange);\n    },\n    [from.invalid, from.value, onApplyFromProps, timeZone, to.invalid, to.value, fiscalYearStartMonth]\n  );\n\n  const onChange = useCallback(\n    (from: DateTime | string, to: DateTime | string) => {\n      const [fromValue, toValue] = valueToState(from, to, timeZone);\n      setFrom(fromValue);\n      setTo(toValue);\n    },\n    [timeZone]\n  );\n\n  const fiscalYear = rangeUtil.convertRawToRange({ from: 'now/fy', to: 'now/fy' }, timeZone, fiscalYearStartMonth);\n\n  const fyTooltip = (\n    <div className={style.tooltip}>\n      {rangeUtil.isFiscal(value) ? (\n        <Tooltip content={`Fiscal year: ${fiscalYear.from.format('MMM-DD')} - ${fiscalYear.to.format('MMM-DD')}`}>\n          <Icon name=\"info-circle\" />\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n\n  const icon = (\n    <Button\n      aria-label={selectors.components.TimePicker.calendar.openButton}\n      icon=\"calendar-alt\"\n      variant=\"secondary\"\n      onClick={onOpen}\n    />\n  );\n\n  return (\n    <div>\n      <div className={style.fieldContainer}>\n        <Field label=\"From\" invalid={from.invalid} error={from.errorMessage}>\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(event.currentTarget.value, to.value)}\n            addonAfter={icon}\n            aria-label={selectors.components.TimePicker.fromField}\n            value={from.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <div className={style.fieldContainer}>\n        <Field label=\"To\" invalid={to.invalid} error={to.errorMessage}>\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(from.value, event.currentTarget.value)}\n            addonAfter={icon}\n            aria-label={selectors.components.TimePicker.toField}\n            value={to.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <Button data-testid={selectors.components.TimePicker.applyTimeRange} onClick={onApply}>\n        Apply time range\n      </Button>\n\n      <TimePickerCalendar\n        isFullscreen={isFullscreen}\n        isOpen={isOpen}\n        from={dateTimeParse(from.value)}\n        to={dateTimeParse(to.value)}\n        onApply={onApply}\n        onClose={() => setOpen(false)}\n        onChange={onChange}\n        timeZone={timeZone}\n        isReversed={isReversed}\n      />\n    </div>\n  );\n};\n\nfunction isRangeInvalid(from: string, to: string, timezone?: string): boolean {\n  const raw: RawTimeRange = { from, to };\n  const timeRange = rangeUtil.convertRawToRange(raw, timezone);\n  const valid = timeRange.from.isSame(timeRange.to) || timeRange.from.isBefore(timeRange.to);\n\n  return !valid;\n}\n\nfunction valueToState(\n  rawFrom: DateTime | string,\n  rawTo: DateTime | string,\n  timeZone?: TimeZone\n): [InputState, InputState] {\n  const fromValue = valueAsString(rawFrom, timeZone);\n  const toValue = valueAsString(rawTo, timeZone);\n  const fromInvalid = !isValid(fromValue, false, timeZone);\n  const toInvalid = !isValid(toValue, true, timeZone);\n  // If \"To\" is invalid, we should not check the range anyways\n  const rangeInvalid = isRangeInvalid(fromValue, toValue, timeZone) && !toInvalid;\n\n  return [\n    {\n      value: fromValue,\n      invalid: fromInvalid || rangeInvalid,\n      errorMessage: rangeInvalid && !fromInvalid ? ERROR_MESSAGES.range : ERROR_MESSAGES.default,\n    },\n    { value: toValue, invalid: toInvalid, errorMessage: ERROR_MESSAGES.default },\n  ];\n}\n\nfunction valueAsString(value: DateTime | string, timeZone?: TimeZone): string {\n  if (isDateTime(value)) {\n    return dateTimeFormat(value, { timeZone });\n  }\n  return value;\n}\n\nfunction isValid(value: string, roundUp?: boolean, timeZone?: TimeZone): boolean {\n  if (isDateTime(value)) {\n    return value.isValid();\n  }\n\n  if (dateMath.isMathString(value)) {\n    return dateMath.isValid(value);\n  }\n\n  const parsed = dateTimeParse(value, { roundUp, timeZone });\n  return parsed.isValid();\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    fieldContainer: css`\n      display: flex;\n    `,\n    tooltip: css`\n      padding-left: ${theme.spacing(1)};\n      padding-top: ${theme.spacing(3)};\n    `,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}