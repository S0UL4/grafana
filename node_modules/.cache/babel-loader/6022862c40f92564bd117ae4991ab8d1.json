{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\nimport { ExpressionDatasourceUID } from 'app/features/expressions/ExpressionDatasource';\nimport { isCloudRulesSource } from '../../utils/datasource';\nimport { isGrafanaRulerRule } from '../../utils/rules';\nimport { DetailsField } from '../DetailsField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function RuleDetailsDataSources(props) {\n  const {\n    rulesSource,\n    rule\n  } = props;\n  const styles = useStyles2(getStyles);\n  const dataSources = useMemo(() => {\n    if (isCloudRulesSource(rulesSource)) {\n      return [{\n        name: rulesSource.name,\n        icon: rulesSource.meta.info.logos.small\n      }];\n    }\n\n    if (isGrafanaRulerRule(rule.rulerRule)) {\n      const {\n        data\n      } = rule.rulerRule.grafana_alert;\n      const unique = data.reduce((dataSources, query) => {\n        const ds = getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n\n        if (!ds || ds.uid === ExpressionDatasourceUID) {\n          return dataSources;\n        }\n\n        dataSources[ds.name] = {\n          name: ds.name,\n          icon: ds.meta.info.logos.small\n        };\n        return dataSources;\n      }, {});\n      return Object.values(unique);\n    }\n\n    return [];\n  }, [rule, rulesSource]);\n\n  if (dataSources.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(DetailsField, {\n    label: \"Data source\",\n    children: dataSources.map(({\n      name,\n      icon\n    }, index) => /*#__PURE__*/_jsxs(\"div\", {\n      children: [icon && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          alt: `${name} datasource logo`,\n          className: styles.dataSourceIcon,\n          src: icon\n        }), ' ']\n      }), name]\n    }, name))\n  });\n}\n\nfunction getStyles(theme) {\n  const size = theme.spacing(2);\n  return {\n    dataSourceIcon: css`\n      width: ${size};\n      height: ${size};\n    `\n  };\n}","map":{"version":3,"names":["css","React","useMemo","getDataSourceSrv","useStyles2","ExpressionDatasourceUID","isCloudRulesSource","isGrafanaRulerRule","DetailsField","RuleDetailsDataSources","props","rulesSource","rule","styles","getStyles","dataSources","name","icon","meta","info","logos","small","rulerRule","data","grafana_alert","unique","reduce","query","ds","getInstanceSettings","datasourceUid","uid","Object","values","length","map","index","dataSourceIcon","theme","size","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleDetailsDataSources.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\nimport { ExpressionDatasourceUID } from 'app/features/expressions/ExpressionDatasource';\nimport { CombinedRule, RulesSource } from 'app/types/unified-alerting';\n\nimport { isCloudRulesSource } from '../../utils/datasource';\nimport { isGrafanaRulerRule } from '../../utils/rules';\nimport { DetailsField } from '../DetailsField';\n\ntype Props = {\n  rule: CombinedRule;\n  rulesSource: RulesSource;\n};\n\nexport function RuleDetailsDataSources(props: Props): JSX.Element | null {\n  const { rulesSource, rule } = props;\n  const styles = useStyles2(getStyles);\n\n  const dataSources: Array<{ name: string; icon?: string }> = useMemo(() => {\n    if (isCloudRulesSource(rulesSource)) {\n      return [{ name: rulesSource.name, icon: rulesSource.meta.info.logos.small }];\n    }\n\n    if (isGrafanaRulerRule(rule.rulerRule)) {\n      const { data } = rule.rulerRule.grafana_alert;\n      const unique = data.reduce((dataSources, query) => {\n        const ds = getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n\n        if (!ds || ds.uid === ExpressionDatasourceUID) {\n          return dataSources;\n        }\n\n        dataSources[ds.name] = { name: ds.name, icon: ds.meta.info.logos.small };\n        return dataSources;\n      }, {} as Record<string, { name: string; icon?: string }>);\n\n      return Object.values(unique);\n    }\n\n    return [];\n  }, [rule, rulesSource]);\n\n  if (dataSources.length === 0) {\n    return null;\n  }\n\n  return (\n    <DetailsField label=\"Data source\">\n      {dataSources.map(({ name, icon }, index) => (\n        <div key={name}>\n          {icon && (\n            <>\n              <img alt={`${name} datasource logo`} className={styles.dataSourceIcon} src={icon} />{' '}\n            </>\n          )}\n          {name}\n        </div>\n      ))}\n    </DetailsField>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  const size = theme.spacing(2);\n\n  return {\n    dataSourceIcon: css`\n      width: ${size};\n      height: ${size};\n    `,\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,uBAAT,QAAwC,+CAAxC;AAGA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,YAAT,QAA6B,iBAA7B;;;;AAOA,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAkE;EACvE,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAAwBF,KAA9B;EACA,MAAMG,MAAM,GAAGT,UAAU,CAACU,SAAD,CAAzB;EAEA,MAAMC,WAAmD,GAAGb,OAAO,CAAC,MAAM;IACxE,IAAII,kBAAkB,CAACK,WAAD,CAAtB,EAAqC;MACnC,OAAO,CAAC;QAAEK,IAAI,EAAEL,WAAW,CAACK,IAApB;QAA0BC,IAAI,EAAEN,WAAW,CAACO,IAAZ,CAAiBC,IAAjB,CAAsBC,KAAtB,CAA4BC;MAA5D,CAAD,CAAP;IACD;;IAED,IAAId,kBAAkB,CAACK,IAAI,CAACU,SAAN,CAAtB,EAAwC;MACtC,MAAM;QAAEC;MAAF,IAAWX,IAAI,CAACU,SAAL,CAAeE,aAAhC;MACA,MAAMC,MAAM,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACX,WAAD,EAAcY,KAAd,KAAwB;QACjD,MAAMC,EAAE,GAAGzB,gBAAgB,GAAG0B,mBAAnB,CAAuCF,KAAK,CAACG,aAA7C,CAAX;;QAEA,IAAI,CAACF,EAAD,IAAOA,EAAE,CAACG,GAAH,KAAW1B,uBAAtB,EAA+C;UAC7C,OAAOU,WAAP;QACD;;QAEDA,WAAW,CAACa,EAAE,CAACZ,IAAJ,CAAX,GAAuB;UAAEA,IAAI,EAAEY,EAAE,CAACZ,IAAX;UAAiBC,IAAI,EAAEW,EAAE,CAACV,IAAH,CAAQC,IAAR,CAAaC,KAAb,CAAmBC;QAA1C,CAAvB;QACA,OAAON,WAAP;MACD,CATc,EASZ,EATY,CAAf;MAWA,OAAOiB,MAAM,CAACC,MAAP,CAAcR,MAAd,CAAP;IACD;;IAED,OAAO,EAAP;EACD,CAtBkE,EAsBhE,CAACb,IAAD,EAAOD,WAAP,CAtBgE,CAAnE;;EAwBA,IAAII,WAAW,CAACmB,MAAZ,KAAuB,CAA3B,EAA8B;IAC5B,OAAO,IAAP;EACD;;EAED,oBACE,KAAC,YAAD;IAAc,KAAK,EAAC,aAApB;IAAA,UACGnB,WAAW,CAACoB,GAAZ,CAAgB,CAAC;MAAEnB,IAAF;MAAQC;IAAR,CAAD,EAAiBmB,KAAjB,kBACf;MAAA,WACGnB,IAAI,iBACH;QAAA,wBACE;UAAK,GAAG,EAAG,GAAED,IAAK,kBAAlB;UAAqC,SAAS,EAAEH,MAAM,CAACwB,cAAvD;UAAuE,GAAG,EAAEpB;QAA5E,EADF,EACuF,GADvF;MAAA,EAFJ,EAMGD,IANH;IAAA,GAAUA,IAAV,CADD;EADH,EADF;AAcD;;AAED,SAASF,SAAT,CAAmBwB,KAAnB,EAAyC;EACvC,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,CAAb;EAEA,OAAO;IACLH,cAAc,EAAErC,GAAI;AACxB,eAAeuC,IAAK;AACpB,gBAAgBA,IAAK;AACrB;EAJS,CAAP;AAMD"},"metadata":{},"sourceType":"module"}