{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, DataLinkInput, stylesFactory, LegacyForms } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst {\n  Switch,\n  FormField\n} = LegacyForms;\nconst getStyles = stylesFactory(() => ({\n  row: css`\n    display: flex;\n    align-items: baseline;\n  `,\n  nameField: css`\n    flex: 2;\n  `,\n  regexField: css`\n    flex: 3;\n  `,\n  urlField: css`\n    flex: 1;\n  `,\n  urlDisplayLabelField: css`\n    flex: 1;\n  `\n}));\nexport const DerivedField = props => {\n  const {\n    value,\n    onChange,\n    onDelete,\n    suggestions,\n    className\n  } = props;\n  const styles = getStyles();\n  const [showInternalLink, setShowInternalLink] = useState(!!value.datasourceUid);\n  const previousUid = usePrevious(value.datasourceUid); // Force internal link visibility change if uid changed outside of this component.\n\n  useEffect(() => {\n    if (!previousUid && value.datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n\n    if (previousUid && !value.datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, value.datasourceUid, showInternalLink]);\n\n  const handleChange = field => event => {\n    onChange(Object.assign({}, value, {\n      [field]: event.currentTarget.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsx(FormField, {\n        className: styles.nameField,\n        labelWidth: 5 // A bit of a hack to prevent using default value for the width from FormField\n        ,\n        inputWidth: null,\n        label: \"Name\",\n        type: \"text\",\n        value: value.name,\n        onChange: handleChange('name')\n      }), /*#__PURE__*/_jsx(FormField, {\n        className: styles.regexField,\n        inputWidth: null,\n        label: \"Regex\",\n        type: \"text\",\n        value: value.matcherRegex,\n        onChange: handleChange('matcherRegex'),\n        tooltip: 'Use to parse and capture some part of the log message. You can use the captured groups in the template.'\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"destructive\",\n        title: \"Remove field\",\n        icon: \"times\",\n        onClick: event => {\n          event.preventDefault();\n          onDelete();\n        },\n        className: css`\n            margin-left: 8px;\n          `\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsx(FormField, {\n        label: showInternalLink ? 'Query' : 'URL',\n        inputEl: /*#__PURE__*/_jsx(DataLinkInput, {\n          placeholder: showInternalLink ? '${__value.raw}' : 'http://example.com/${__value.raw}',\n          value: value.url || '',\n          onChange: newValue => onChange(Object.assign({}, value, {\n            url: newValue\n          })),\n          suggestions: suggestions\n        }),\n        className: styles.urlField\n      }), /*#__PURE__*/_jsx(FormField, {\n        className: styles.urlDisplayLabelField,\n        inputWidth: null,\n        label: \"URL Label\",\n        type: \"text\",\n        value: value.urlDisplayLabel,\n        onChange: handleChange('urlDisplayLabel'),\n        tooltip: 'Use to override the button label when this derived field is found in a log.'\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsx(Switch, {\n        label: \"Internal link\",\n        checked: showInternalLink,\n        onChange: () => {\n          if (showInternalLink) {\n            onChange(Object.assign({}, value, {\n              datasourceUid: undefined\n            }));\n          }\n\n          setShowInternalLink(!showInternalLink);\n        }\n      }), showInternalLink && /*#__PURE__*/_jsx(DataSourcePicker, {\n        tracing: true,\n        onChange: ds => onChange(Object.assign({}, value, {\n          datasourceUid: ds.uid\n        })),\n        current: value.datasourceUid\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["css","React","useEffect","useState","usePrevious","DataSourcePicker","Button","DataLinkInput","stylesFactory","LegacyForms","Switch","FormField","getStyles","row","nameField","regexField","urlField","urlDisplayLabelField","DerivedField","props","value","onChange","onDelete","suggestions","className","styles","showInternalLink","setShowInternalLink","datasourceUid","previousUid","handleChange","field","event","currentTarget","name","matcherRegex","preventDefault","url","newValue","urlDisplayLabel","undefined","ds","uid"],"sources":["/home/soula/grafana/public/app/plugins/datasource/loki/configuration/DerivedField.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { VariableSuggestion } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, DataLinkInput, stylesFactory, LegacyForms } from '@grafana/ui';\n\nimport { DerivedFieldConfig } from '../types';\n\nconst { Switch, FormField } = LegacyForms;\n\nconst getStyles = stylesFactory(() => ({\n  row: css`\n    display: flex;\n    align-items: baseline;\n  `,\n  nameField: css`\n    flex: 2;\n  `,\n  regexField: css`\n    flex: 3;\n  `,\n  urlField: css`\n    flex: 1;\n  `,\n  urlDisplayLabelField: css`\n    flex: 1;\n  `,\n}));\n\ntype Props = {\n  value: DerivedFieldConfig;\n  onChange: (value: DerivedFieldConfig) => void;\n  onDelete: () => void;\n  suggestions: VariableSuggestion[];\n  className?: string;\n};\nexport const DerivedField = (props: Props) => {\n  const { value, onChange, onDelete, suggestions, className } = props;\n  const styles = getStyles();\n  const [showInternalLink, setShowInternalLink] = useState(!!value.datasourceUid);\n  const previousUid = usePrevious(value.datasourceUid);\n\n  // Force internal link visibility change if uid changed outside of this component.\n  useEffect(() => {\n    if (!previousUid && value.datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n    if (previousUid && !value.datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, value.datasourceUid, showInternalLink]);\n\n  const handleChange = (field: keyof typeof value) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      [field]: event.currentTarget.value,\n    });\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.row}>\n        <FormField\n          className={styles.nameField}\n          labelWidth={5}\n          // A bit of a hack to prevent using default value for the width from FormField\n          inputWidth={null}\n          label=\"Name\"\n          type=\"text\"\n          value={value.name}\n          onChange={handleChange('name')}\n        />\n        <FormField\n          className={styles.regexField}\n          inputWidth={null}\n          label=\"Regex\"\n          type=\"text\"\n          value={value.matcherRegex}\n          onChange={handleChange('matcherRegex')}\n          tooltip={\n            'Use to parse and capture some part of the log message. You can use the captured groups in the template.'\n          }\n        />\n        <Button\n          variant=\"destructive\"\n          title=\"Remove field\"\n          icon=\"times\"\n          onClick={(event) => {\n            event.preventDefault();\n            onDelete();\n          }}\n          className={css`\n            margin-left: 8px;\n          `}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <FormField\n          label={showInternalLink ? 'Query' : 'URL'}\n          inputEl={\n            <DataLinkInput\n              placeholder={showInternalLink ? '${__value.raw}' : 'http://example.com/${__value.raw}'}\n              value={value.url || ''}\n              onChange={(newValue) =>\n                onChange({\n                  ...value,\n                  url: newValue,\n                })\n              }\n              suggestions={suggestions}\n            />\n          }\n          className={styles.urlField}\n        />\n        <FormField\n          className={styles.urlDisplayLabelField}\n          inputWidth={null}\n          label=\"URL Label\"\n          type=\"text\"\n          value={value.urlDisplayLabel}\n          onChange={handleChange('urlDisplayLabel')}\n          tooltip={'Use to override the button label when this derived field is found in a log.'}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <Switch\n          label=\"Internal link\"\n          checked={showInternalLink}\n          onChange={() => {\n            if (showInternalLink) {\n              onChange({\n                ...value,\n                datasourceUid: undefined,\n              });\n            }\n            setShowInternalLink(!showInternalLink);\n          }}\n        />\n\n        {showInternalLink && (\n          <DataSourcePicker\n            tracing={true}\n            onChange={(ds) =>\n              onChange({\n                ...value,\n                datasourceUid: ds.uid,\n              })\n            }\n            current={value.datasourceUid}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}