{"ast":null,"code":"import { getFlattenedSections, getLookupField, markSelected } from '../utils';\nimport { FETCH_ITEMS, FETCH_RESULTS, TOGGLE_SECTION, MOVE_SELECTION_DOWN, MOVE_SELECTION_UP, SEARCH_START, FETCH_ITEMS_START } from './actionTypes';\nexport const dashboardsSearchState = {\n  results: [],\n  loading: true,\n  initialLoading: true,\n  selectedIndex: 0\n};\nexport const searchReducer = (state, action) => {\n  switch (action.type) {\n    case SEARCH_START:\n      if (!state.loading) {\n        return Object.assign({}, state, {\n          loading: true\n        });\n      }\n\n      return state;\n\n    case FETCH_RESULTS:\n      {\n        const results = action.payload; // Highlight the first item ('Starred' folder)\n\n        if (results.length > 0) {\n          results[0].selected = true;\n        }\n\n        return Object.assign({}, state, {\n          results,\n          loading: false,\n          initialLoading: false\n        });\n      }\n\n    case TOGGLE_SECTION:\n      {\n        const section = action.payload;\n        const lookupField = getLookupField(section.title);\n        return Object.assign({}, state, {\n          results: state.results.map(result => {\n            if (section[lookupField] === result[lookupField]) {\n              return Object.assign({}, result, {\n                expanded: !result.expanded\n              });\n            }\n\n            return result;\n          })\n        });\n      }\n\n    case FETCH_ITEMS:\n      {\n        const {\n          section,\n          items\n        } = action.payload;\n        return Object.assign({}, state, {\n          itemsFetching: false,\n          results: state.results.map(result => {\n            if (section.id === result.id) {\n              return Object.assign({}, result, {\n                items,\n                itemsFetching: false\n              });\n            }\n\n            return result;\n          })\n        });\n      }\n\n    case FETCH_ITEMS_START:\n      {\n        const id = action.payload;\n\n        if (id) {\n          return Object.assign({}, state, {\n            results: state.results.map(result => result.id === id ? Object.assign({}, result, {\n              itemsFetching: true\n            }) : result)\n          });\n        }\n\n        return state;\n      }\n\n    case MOVE_SELECTION_DOWN:\n      {\n        const flatIds = getFlattenedSections(state.results);\n\n        if (state.selectedIndex < flatIds.length - 1) {\n          const newIndex = state.selectedIndex + 1;\n          const selectedId = flatIds[newIndex];\n          return Object.assign({}, state, {\n            selectedIndex: newIndex,\n            results: markSelected(state.results, selectedId)\n          });\n        }\n\n        return state;\n      }\n\n    case MOVE_SELECTION_UP:\n      if (state.selectedIndex > 0) {\n        const flatIds = getFlattenedSections(state.results);\n        const newIndex = state.selectedIndex - 1;\n        const selectedId = flatIds[newIndex];\n        return Object.assign({}, state, {\n          selectedIndex: newIndex,\n          results: markSelected(state.results, selectedId)\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["getFlattenedSections","getLookupField","markSelected","FETCH_ITEMS","FETCH_RESULTS","TOGGLE_SECTION","MOVE_SELECTION_DOWN","MOVE_SELECTION_UP","SEARCH_START","FETCH_ITEMS_START","dashboardsSearchState","results","loading","initialLoading","selectedIndex","searchReducer","state","action","type","payload","length","selected","section","lookupField","title","map","result","expanded","items","itemsFetching","id","flatIds","newIndex","selectedId"],"sources":["/home/soula/grafana/public/app/features/search/reducers/dashboardSearch.ts"],"sourcesContent":["import { DashboardSection, SearchAction } from '../types';\nimport { getFlattenedSections, getLookupField, markSelected } from '../utils';\n\nimport {\n  FETCH_ITEMS,\n  FETCH_RESULTS,\n  TOGGLE_SECTION,\n  MOVE_SELECTION_DOWN,\n  MOVE_SELECTION_UP,\n  SEARCH_START,\n  FETCH_ITEMS_START,\n} from './actionTypes';\n\nexport interface DashboardsSearchState {\n  results: DashboardSection[];\n  loading: boolean;\n  selectedIndex: number;\n  /** Used for first time page load */\n  initialLoading: boolean;\n}\n\nexport const dashboardsSearchState: DashboardsSearchState = {\n  results: [],\n  loading: true,\n  initialLoading: true,\n  selectedIndex: 0,\n};\n\nexport const searchReducer = (state: DashboardsSearchState, action: SearchAction) => {\n  switch (action.type) {\n    case SEARCH_START:\n      if (!state.loading) {\n        return { ...state, loading: true };\n      }\n      return state;\n    case FETCH_RESULTS: {\n      const results = action.payload;\n      // Highlight the first item ('Starred' folder)\n      if (results.length > 0) {\n        results[0].selected = true;\n      }\n      return { ...state, results, loading: false, initialLoading: false };\n    }\n    case TOGGLE_SECTION: {\n      const section = action.payload;\n      const lookupField = getLookupField(section.title);\n      return {\n        ...state,\n        results: state.results.map((result: DashboardSection) => {\n          if (section[lookupField] === result[lookupField]) {\n            return { ...result, expanded: !result.expanded };\n          }\n          return result;\n        }),\n      };\n    }\n    case FETCH_ITEMS: {\n      const { section, items } = action.payload;\n      return {\n        ...state,\n        itemsFetching: false,\n        results: state.results.map((result: DashboardSection) => {\n          if (section.id === result.id) {\n            return { ...result, items, itemsFetching: false };\n          }\n          return result;\n        }),\n      };\n    }\n    case FETCH_ITEMS_START: {\n      const id = action.payload;\n      if (id) {\n        return {\n          ...state,\n          results: state.results.map((result) => (result.id === id ? { ...result, itemsFetching: true } : result)),\n        };\n      }\n      return state;\n    }\n    case MOVE_SELECTION_DOWN: {\n      const flatIds = getFlattenedSections(state.results);\n      if (state.selectedIndex < flatIds.length - 1) {\n        const newIndex = state.selectedIndex + 1;\n        const selectedId = flatIds[newIndex];\n        return {\n          ...state,\n          selectedIndex: newIndex,\n          results: markSelected(state.results, selectedId),\n        };\n      }\n      return state;\n    }\n    case MOVE_SELECTION_UP:\n      if (state.selectedIndex > 0) {\n        const flatIds = getFlattenedSections(state.results);\n        const newIndex = state.selectedIndex - 1;\n        const selectedId = flatIds[newIndex];\n        return {\n          ...state,\n          selectedIndex: newIndex,\n          results: markSelected(state.results, selectedId),\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}