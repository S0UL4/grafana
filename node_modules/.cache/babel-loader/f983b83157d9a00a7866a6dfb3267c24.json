{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList, FixedSizeGrid } from 'react-window';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Spinner, stylesFactory, useTheme } from '@grafana/ui';\nimport { SEARCH_ITEM_HEIGHT, SEARCH_ITEM_MARGIN } from '../constants';\nimport { SearchLayout } from '../types';\nimport { SearchCard } from './SearchCard';\nimport { SearchItem } from './SearchItem';\nimport { SectionHeader } from './SectionHeader';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  sectionV2: sectionLabel,\n  itemsV2: itemsLabel,\n  cards: cardsLabel\n} = selectors.components.Search;\nexport const SearchResults = /*#__PURE__*/memo(({\n  editable,\n  loading,\n  onTagSelected,\n  onToggleChecked,\n  onToggleSection,\n  results,\n  showPreviews,\n  layout\n}) => {\n  const theme = useTheme();\n  const styles = getSectionStyles(theme);\n  const itemProps = {\n    editable,\n    onToggleChecked,\n    onTagSelected\n  };\n\n  const renderFolders = () => {\n    const Wrapper = showPreviews ? SearchCard : SearchItem;\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.wrapper,\n      children: results.map(section => {\n        return /*#__PURE__*/_jsx(\"div\", {\n          \"data-testid\": sectionLabel,\n          className: styles.section,\n          children: section.title && /*#__PURE__*/_jsx(SectionHeader, {\n            onSectionClick: onToggleSection,\n            onToggleChecked,\n            editable,\n            section,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              \"data-testid\": showPreviews ? cardsLabel : itemsLabel,\n              className: cx(styles.sectionItems, {\n                [styles.gridContainer]: showPreviews\n              }),\n              children: section.items.map(item => /*#__PURE__*/_createElement(Wrapper, Object.assign({}, itemProps, {\n                key: item.uid,\n                item: item\n              })))\n            })\n          })\n        }, section.id || section.title);\n      })\n    });\n  };\n\n  const renderDashboards = () => {\n    var _results$;\n\n    const items = (_results$ = results[0]) === null || _results$ === void 0 ? void 0 : _results$.items;\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.listModeWrapper,\n      children: /*#__PURE__*/_jsx(AutoSizer, {\n        children: ({\n          height,\n          width\n        }) => {\n          const numColumns = Math.ceil(width / 320);\n          const cellWidth = width / numColumns;\n          const cellHeight = (cellWidth - 64) * 0.75 + 56 + 8;\n          const numRows = Math.ceil(items.length / numColumns);\n          return showPreviews ? /*#__PURE__*/_jsx(FixedSizeGrid, {\n            columnCount: numColumns,\n            columnWidth: cellWidth,\n            rowCount: numRows,\n            rowHeight: cellHeight,\n            className: styles.wrapper,\n            innerElementType: \"ul\",\n            height: height,\n            width: width,\n            children: ({\n              columnIndex,\n              rowIndex,\n              style\n            }) => {\n              const index = rowIndex * numColumns + columnIndex;\n              const item = items[index]; // The wrapper div is needed as the inner SearchItem has margin-bottom spacing\n              // And without this wrapper there is no room for that margin\n\n              return item ? /*#__PURE__*/_jsx(\"li\", {\n                style: style,\n                className: styles.virtualizedGridItemWrapper,\n                children: /*#__PURE__*/_jsx(SearchCard, Object.assign({}, itemProps, {\n                  item: item\n                }), item.id)\n              }) : null;\n            }\n          }) : /*#__PURE__*/_jsx(FixedSizeList, {\n            className: styles.wrapper,\n            innerElementType: \"ul\",\n            itemSize: SEARCH_ITEM_HEIGHT + SEARCH_ITEM_MARGIN,\n            height: height,\n            itemCount: items.length,\n            width: width,\n            children: ({\n              index,\n              style\n            }) => {\n              const item = items[index]; // The wrapper div is needed as the inner SearchItem has margin-bottom spacing\n              // And without this wrapper there is no room for that margin\n\n              return /*#__PURE__*/_jsx(\"li\", {\n                style: style,\n                children: /*#__PURE__*/_jsx(SearchItem, Object.assign({}, itemProps, {\n                  item: item\n                }), item.id)\n              });\n            }\n          });\n        }\n      })\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsx(Spinner, {\n      className: styles.spinner\n    });\n  } else if (!results || !results.length) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.noResults,\n      children: \"No dashboards matching your query were found.\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.resultsContainer,\n    children: layout === SearchLayout.Folders ? renderFolders() : renderDashboards()\n  });\n});\nSearchResults.displayName = 'SearchResults';\nconst getSectionStyles = stylesFactory(theme => {\n  const {\n    md,\n    sm\n  } = theme.spacing;\n  return {\n    virtualizedGridItemWrapper: css`\n      padding: 4px;\n    `,\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n\n      > ul {\n        list-style: none;\n      }\n    `,\n    section: css`\n      display: flex;\n      flex-direction: column;\n      background: ${theme.colors.panelBg};\n      border-bottom: solid 1px ${theme.colors.border2};\n    `,\n    sectionItems: css`\n      margin: 0 24px 0 32px;\n    `,\n    spinner: css`\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100px;\n    `,\n    gridContainer: css`\n      display: grid;\n      gap: ${sm};\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n      margin-bottom: ${md};\n    `,\n    resultsContainer: css`\n      position: relative;\n      flex-grow: 10;\n      margin-bottom: ${md};\n      background: ${theme.colors.bg1};\n      border: 1px solid ${theme.colors.border1};\n      border-radius: 3px;\n      height: 100%;\n    `,\n    noResults: css`\n      padding: ${md};\n      background: ${theme.colors.bg2};\n      font-style: italic;\n      margin-top: ${theme.spacing.md};\n    `,\n    listModeWrapper: css`\n      position: relative;\n      height: 100%;\n      padding: ${md};\n    `\n  };\n});","map":{"version":3,"names":["css","cx","React","memo","AutoSizer","FixedSizeList","FixedSizeGrid","selectors","Spinner","stylesFactory","useTheme","SEARCH_ITEM_HEIGHT","SEARCH_ITEM_MARGIN","SearchLayout","SearchCard","SearchItem","SectionHeader","sectionV2","sectionLabel","itemsV2","itemsLabel","cards","cardsLabel","components","Search","SearchResults","editable","loading","onTagSelected","onToggleChecked","onToggleSection","results","showPreviews","layout","theme","styles","getSectionStyles","itemProps","renderFolders","Wrapper","wrapper","map","section","title","sectionItems","gridContainer","items","item","uid","id","renderDashboards","listModeWrapper","height","width","numColumns","Math","ceil","cellWidth","cellHeight","numRows","length","columnIndex","rowIndex","style","index","virtualizedGridItemWrapper","spinner","noResults","resultsContainer","Folders","displayName","md","sm","spacing","colors","panelBg","border2","bg1","border1","bg2"],"sources":["/home/soula/grafana/public/app/features/search/components/SearchResults.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, memo } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList, FixedSizeGrid } from 'react-window';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Spinner, stylesFactory, useTheme } from '@grafana/ui';\n\nimport { SEARCH_ITEM_HEIGHT, SEARCH_ITEM_MARGIN } from '../constants';\nimport { DashboardSection, OnToggleChecked, SearchLayout } from '../types';\n\nimport { SearchCard } from './SearchCard';\nimport { SearchItem } from './SearchItem';\nimport { SectionHeader } from './SectionHeader';\n\nexport interface Props {\n  editable?: boolean;\n  loading?: boolean;\n  onTagSelected: (name: string) => any;\n  onToggleChecked?: OnToggleChecked;\n  onToggleSection: (section: DashboardSection) => void;\n  results: DashboardSection[];\n  showPreviews?: boolean;\n  layout?: string;\n}\n\nconst { sectionV2: sectionLabel, itemsV2: itemsLabel, cards: cardsLabel } = selectors.components.Search;\n\nexport const SearchResults: FC<Props> = memo(\n  ({ editable, loading, onTagSelected, onToggleChecked, onToggleSection, results, showPreviews, layout }) => {\n    const theme = useTheme();\n    const styles = getSectionStyles(theme);\n    const itemProps = { editable, onToggleChecked, onTagSelected };\n    const renderFolders = () => {\n      const Wrapper = showPreviews ? SearchCard : SearchItem;\n      return (\n        <div className={styles.wrapper}>\n          {results.map((section) => {\n            return (\n              <div data-testid={sectionLabel} className={styles.section} key={section.id || section.title}>\n                {section.title && (\n                  <SectionHeader onSectionClick={onToggleSection} {...{ onToggleChecked, editable, section }}>\n                    <div\n                      data-testid={showPreviews ? cardsLabel : itemsLabel}\n                      className={cx(styles.sectionItems, { [styles.gridContainer]: showPreviews })}\n                    >\n                      {section.items.map((item) => (\n                        <Wrapper {...itemProps} key={item.uid} item={item} />\n                      ))}\n                    </div>\n                  </SectionHeader>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      );\n    };\n    const renderDashboards = () => {\n      const items = results[0]?.items;\n      return (\n        <div className={styles.listModeWrapper}>\n          <AutoSizer>\n            {({ height, width }) => {\n              const numColumns = Math.ceil(width / 320);\n              const cellWidth = width / numColumns;\n              const cellHeight = (cellWidth - 64) * 0.75 + 56 + 8;\n              const numRows = Math.ceil(items.length / numColumns);\n              return showPreviews ? (\n                <FixedSizeGrid\n                  columnCount={numColumns}\n                  columnWidth={cellWidth}\n                  rowCount={numRows}\n                  rowHeight={cellHeight}\n                  className={styles.wrapper}\n                  innerElementType=\"ul\"\n                  height={height}\n                  width={width}\n                >\n                  {({ columnIndex, rowIndex, style }) => {\n                    const index = rowIndex * numColumns + columnIndex;\n                    const item = items[index];\n                    // The wrapper div is needed as the inner SearchItem has margin-bottom spacing\n                    // And without this wrapper there is no room for that margin\n                    return item ? (\n                      <li style={style} className={styles.virtualizedGridItemWrapper}>\n                        <SearchCard key={item.id} {...itemProps} item={item} />\n                      </li>\n                    ) : null;\n                  }}\n                </FixedSizeGrid>\n              ) : (\n                <FixedSizeList\n                  className={styles.wrapper}\n                  innerElementType=\"ul\"\n                  itemSize={SEARCH_ITEM_HEIGHT + SEARCH_ITEM_MARGIN}\n                  height={height}\n                  itemCount={items.length}\n                  width={width}\n                >\n                  {({ index, style }) => {\n                    const item = items[index];\n                    // The wrapper div is needed as the inner SearchItem has margin-bottom spacing\n                    // And without this wrapper there is no room for that margin\n                    return (\n                      <li style={style}>\n                        <SearchItem key={item.id} {...itemProps} item={item} />\n                      </li>\n                    );\n                  }}\n                </FixedSizeList>\n              );\n            }}\n          </AutoSizer>\n        </div>\n      );\n    };\n\n    if (loading) {\n      return <Spinner className={styles.spinner} />;\n    } else if (!results || !results.length) {\n      return <div className={styles.noResults}>No dashboards matching your query were found.</div>;\n    }\n\n    return (\n      <div className={styles.resultsContainer}>\n        {layout === SearchLayout.Folders ? renderFolders() : renderDashboards()}\n      </div>\n    );\n  }\n);\n\nSearchResults.displayName = 'SearchResults';\n\nconst getSectionStyles = stylesFactory((theme: GrafanaTheme) => {\n  const { md, sm } = theme.spacing;\n\n  return {\n    virtualizedGridItemWrapper: css`\n      padding: 4px;\n    `,\n    wrapper: css`\n      display: flex;\n      flex-direction: column;\n\n      > ul {\n        list-style: none;\n      }\n    `,\n    section: css`\n      display: flex;\n      flex-direction: column;\n      background: ${theme.colors.panelBg};\n      border-bottom: solid 1px ${theme.colors.border2};\n    `,\n    sectionItems: css`\n      margin: 0 24px 0 32px;\n    `,\n    spinner: css`\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100px;\n    `,\n    gridContainer: css`\n      display: grid;\n      gap: ${sm};\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n      margin-bottom: ${md};\n    `,\n    resultsContainer: css`\n      position: relative;\n      flex-grow: 10;\n      margin-bottom: ${md};\n      background: ${theme.colors.bg1};\n      border: 1px solid ${theme.colors.border1};\n      border-radius: 3px;\n      height: 100%;\n    `,\n    noResults: css`\n      padding: ${md};\n      background: ${theme.colors.bg2};\n      font-style: italic;\n      margin-top: ${theme.spacing.md};\n    `,\n    listModeWrapper: css`\n      position: relative;\n      height: 100%;\n      padding: ${md};\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}