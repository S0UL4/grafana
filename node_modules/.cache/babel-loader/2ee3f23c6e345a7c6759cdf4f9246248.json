{"ast":null,"code":"import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '@grafana/ui';\nimport { variableAdapters } from '../adapters';\nimport { toKeyedAction } from '../state/keyedVariablesReducer';\nimport { changeVariableProp } from '../state/sharedReducer';\nimport { toVariablePayload } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function TextBoxVariablePicker({\n  variable,\n  onVariableChange\n}) {\n  const dispatch = useDispatch();\n  const [updatedValue, setUpdatedValue] = useState(variable.current.value);\n  useEffect(() => {\n    setUpdatedValue(variable.current.value);\n  }, [variable]);\n  const updateVariable = useCallback(() => {\n    if (!variable.rootStateKey) {\n      console.error('Cannot update variable without rootStateKey');\n      return;\n    }\n\n    if (variable.current.value === updatedValue) {\n      return;\n    }\n\n    dispatch(toKeyedAction(variable.rootStateKey, changeVariableProp(toVariablePayload({\n      id: variable.id,\n      type: variable.type\n    }, {\n      propName: 'query',\n      propValue: updatedValue\n    }))));\n\n    if (onVariableChange) {\n      onVariableChange(Object.assign({}, variable, {\n        current: Object.assign({}, variable.current, {\n          value: updatedValue\n        })\n      }));\n      return;\n    }\n\n    variableAdapters.get(variable.type).updateOptions(variable);\n  }, [variable, updatedValue, dispatch, onVariableChange]);\n  const onChange = useCallback(event => setUpdatedValue(event.target.value), [setUpdatedValue]);\n\n  const onBlur = e => updateVariable();\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      updateVariable();\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Input, {\n    type: \"text\",\n    value: updatedValue,\n    onChange: onChange,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    placeholder: \"Enter variable value\",\n    id: `var-${variable.id}`\n  });\n}","map":{"version":3,"names":["React","useCallback","useEffect","useState","useDispatch","Input","variableAdapters","toKeyedAction","changeVariableProp","toVariablePayload","TextBoxVariablePicker","variable","onVariableChange","dispatch","updatedValue","setUpdatedValue","current","value","updateVariable","rootStateKey","console","error","id","type","propName","propValue","get","updateOptions","onChange","event","target","onBlur","e","onKeyDown","keyCode","preventDefault"],"sources":["/home/soula/grafana/public/app/features/variables/textbox/TextBoxVariablePicker.tsx"],"sourcesContent":["import React, { ChangeEvent, FocusEvent, KeyboardEvent, ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Input } from '@grafana/ui';\n\nimport { variableAdapters } from '../adapters';\nimport { VariablePickerProps } from '../pickers/types';\nimport { toKeyedAction } from '../state/keyedVariablesReducer';\nimport { changeVariableProp } from '../state/sharedReducer';\nimport { TextBoxVariableModel } from '../types';\nimport { toVariablePayload } from '../utils';\n\nexport interface Props extends VariablePickerProps<TextBoxVariableModel> {}\n\nexport function TextBoxVariablePicker({ variable, onVariableChange }: Props): ReactElement {\n  const dispatch = useDispatch();\n  const [updatedValue, setUpdatedValue] = useState(variable.current.value);\n  useEffect(() => {\n    setUpdatedValue(variable.current.value);\n  }, [variable]);\n\n  const updateVariable = useCallback(() => {\n    if (!variable.rootStateKey) {\n      console.error('Cannot update variable without rootStateKey');\n      return;\n    }\n\n    if (variable.current.value === updatedValue) {\n      return;\n    }\n\n    dispatch(\n      toKeyedAction(\n        variable.rootStateKey,\n        changeVariableProp(\n          toVariablePayload({ id: variable.id, type: variable.type }, { propName: 'query', propValue: updatedValue })\n        )\n      )\n    );\n\n    if (onVariableChange) {\n      onVariableChange({\n        ...variable,\n        current: { ...variable.current, value: updatedValue },\n      });\n      return;\n    }\n\n    variableAdapters.get(variable.type).updateOptions(variable);\n  }, [variable, updatedValue, dispatch, onVariableChange]);\n\n  const onChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => setUpdatedValue(event.target.value),\n    [setUpdatedValue]\n  );\n\n  const onBlur = (e: FocusEvent<HTMLInputElement>) => updateVariable();\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      updateVariable();\n    }\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      value={updatedValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      placeholder=\"Enter variable value\"\n      id={`var-${variable.id}`}\n    />\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAsEC,WAAtE,EAAmFC,SAAnF,EAA8FC,QAA9F,QAA8G,OAA9G;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,SAASC,iBAAT,QAAkC,UAAlC;;AAIA,OAAO,SAASC,qBAAT,CAA+B;EAAEC,QAAF;EAAYC;AAAZ,CAA/B,EAAoF;EACzF,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACQ,QAAQ,CAACK,OAAT,CAAiBC,KAAlB,CAAhD;EACAf,SAAS,CAAC,MAAM;IACda,eAAe,CAACJ,QAAQ,CAACK,OAAT,CAAiBC,KAAlB,CAAf;EACD,CAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;EAIA,MAAMO,cAAc,GAAGjB,WAAW,CAAC,MAAM;IACvC,IAAI,CAACU,QAAQ,CAACQ,YAAd,EAA4B;MAC1BC,OAAO,CAACC,KAAR,CAAc,6CAAd;MACA;IACD;;IAED,IAAIV,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,KAA2BH,YAA/B,EAA6C;MAC3C;IACD;;IAEDD,QAAQ,CACNN,aAAa,CACXI,QAAQ,CAACQ,YADE,EAEXX,kBAAkB,CAChBC,iBAAiB,CAAC;MAAEa,EAAE,EAAEX,QAAQ,CAACW,EAAf;MAAmBC,IAAI,EAAEZ,QAAQ,CAACY;IAAlC,CAAD,EAA2C;MAAEC,QAAQ,EAAE,OAAZ;MAAqBC,SAAS,EAAEX;IAAhC,CAA3C,CADD,CAFP,CADP,CAAR;;IASA,IAAIF,gBAAJ,EAAsB;MACpBA,gBAAgB,mBACXD,QADW;QAEdK,OAAO,oBAAOL,QAAQ,CAACK,OAAhB;UAAyBC,KAAK,EAAEH;QAAhC;MAFO,GAAhB;MAIA;IACD;;IAEDR,gBAAgB,CAACoB,GAAjB,CAAqBf,QAAQ,CAACY,IAA9B,EAAoCI,aAApC,CAAkDhB,QAAlD;EACD,CA5BiC,EA4B/B,CAACA,QAAD,EAAWG,YAAX,EAAyBD,QAAzB,EAAmCD,gBAAnC,CA5B+B,CAAlC;EA8BA,MAAMgB,QAAQ,GAAG3B,WAAW,CACzB4B,KAAD,IAA0Cd,eAAe,CAACc,KAAK,CAACC,MAAN,CAAab,KAAd,CAD/B,EAE1B,CAACF,eAAD,CAF0B,CAA5B;;EAKA,MAAMgB,MAAM,GAAIC,CAAD,IAAqCd,cAAc,EAAlE;;EACA,MAAMe,SAAS,GAAIJ,KAAD,IAA4C;IAC5D,IAAIA,KAAK,CAACK,OAAN,KAAkB,EAAtB,EAA0B;MACxBL,KAAK,CAACM,cAAN;MACAjB,cAAc;IACf;EACF,CALD;;EAOA,oBACE,KAAC,KAAD;IACE,IAAI,EAAC,MADP;IAEE,KAAK,EAAEJ,YAFT;IAGE,QAAQ,EAAEc,QAHZ;IAIE,MAAM,EAAEG,MAJV;IAKE,SAAS,EAAEE,SALb;IAME,WAAW,EAAC,sBANd;IAOE,EAAE,EAAG,OAAMtB,QAAQ,CAACW,EAAG;EAPzB,EADF;AAWD"},"metadata":{},"sourceType":"module"}