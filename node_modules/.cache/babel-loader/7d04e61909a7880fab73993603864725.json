{"ast":null,"code":"import { useDialog } from '@react-aria/dialog';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { createRef } from 'react';\nimport { VizTooltipContainer } from '@grafana/ui';\nimport { ComplexDataHoverView } from './components/ComplexDataHoverView';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const GeomapTooltip = ({\n  ttip,\n  onClose,\n  isOpen\n}) => {\n  const ref = /*#__PURE__*/createRef();\n  const {\n    overlayProps\n  } = useOverlay({\n    onClose,\n    isDismissable: true,\n    isOpen\n  }, ref);\n  const {\n    dialogProps\n  } = useDialog({}, ref);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: ttip && ttip.layers && /*#__PURE__*/_jsx(VizTooltipContainer, {\n      position: {\n        x: ttip.pageX,\n        y: ttip.pageY\n      },\n      offset: {\n        x: 10,\n        y: 10\n      },\n      allowPointerEvents: true,\n      children: /*#__PURE__*/_jsx(\"section\", Object.assign({\n        ref: ref\n      }, overlayProps, dialogProps, {\n        children: /*#__PURE__*/_jsx(ComplexDataHoverView, {\n          layers: ttip.layers,\n          isOpen: isOpen,\n          onClose: onClose\n        })\n      }))\n    })\n  });\n};","map":{"version":3,"names":["useDialog","useOverlay","React","createRef","VizTooltipContainer","ComplexDataHoverView","GeomapTooltip","ttip","onClose","isOpen","ref","overlayProps","isDismissable","dialogProps","layers","x","pageX","y","pageY"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/GeomapTooltip.tsx"],"sourcesContent":["import { useDialog } from '@react-aria/dialog';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { createRef } from 'react';\n\nimport { VizTooltipContainer } from '@grafana/ui';\n\nimport { ComplexDataHoverView } from './components/ComplexDataHoverView';\nimport { GeomapHoverPayload } from './event';\n\ninterface Props {\n  ttip?: GeomapHoverPayload;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const GeomapTooltip = ({ ttip, onClose, isOpen }: Props) => {\n  const ref = createRef<HTMLElement>();\n  const { overlayProps } = useOverlay({ onClose, isDismissable: true, isOpen }, ref);\n  const { dialogProps } = useDialog({}, ref);\n\n  return (\n    <>\n      {ttip && ttip.layers && (\n        <VizTooltipContainer position={{ x: ttip.pageX, y: ttip.pageY }} offset={{ x: 10, y: 10 }} allowPointerEvents>\n          <section ref={ref} {...overlayProps} {...dialogProps}>\n            <ComplexDataHoverView layers={ttip.layers} isOpen={isOpen} onClose={onClose} />\n          </section>\n        </VizTooltipContainer>\n      )}\n    </>\n  );\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,mBAAT,QAAoC,aAApC;AAEA,SAASC,oBAAT,QAAqC,mCAArC;;;AASA,OAAO,MAAMC,aAAa,GAAG,CAAC;EAAEC,IAAF;EAAQC,OAAR;EAAiBC;AAAjB,CAAD,KAAsC;EACjE,MAAMC,GAAG,gBAAGP,SAAS,EAArB;EACA,MAAM;IAAEQ;EAAF,IAAmBV,UAAU,CAAC;IAAEO,OAAF;IAAWI,aAAa,EAAE,IAA1B;IAAgCH;EAAhC,CAAD,EAA2CC,GAA3C,CAAnC;EACA,MAAM;IAAEG;EAAF,IAAkBb,SAAS,CAAC,EAAD,EAAKU,GAAL,CAAjC;EAEA,oBACE;IAAA,UACGH,IAAI,IAAIA,IAAI,CAACO,MAAb,iBACC,KAAC,mBAAD;MAAqB,QAAQ,EAAE;QAAEC,CAAC,EAAER,IAAI,CAACS,KAAV;QAAiBC,CAAC,EAAEV,IAAI,CAACW;MAAzB,CAA/B;MAAiE,MAAM,EAAE;QAAEH,CAAC,EAAE,EAAL;QAASE,CAAC,EAAE;MAAZ,CAAzE;MAA2F,kBAAkB,MAA7G;MAAA,uBACE;QAAS,GAAG,EAAEP;MAAd,GAAuBC,YAAvB,EAAyCE,WAAzC;QAAA,uBACE,KAAC,oBAAD;UAAsB,MAAM,EAAEN,IAAI,CAACO,MAAnC;UAA2C,MAAM,EAAEL,MAAnD;UAA2D,OAAO,EAAED;QAApE;MADF;IADF;EAFJ,EADF;AAWD,CAhBM"},"metadata":{},"sourceType":"module"}