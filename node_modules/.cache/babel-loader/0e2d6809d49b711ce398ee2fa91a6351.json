{"ast":null,"code":"var _br;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { Card, TagList, Tooltip, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AnnotationListItem = ({\n  options,\n  annotation,\n  formatDate,\n  onClick,\n  onAvatarClick,\n  onTagClick\n}) => {\n  const styles = useStyles2(getStyles);\n  const {\n    showUser,\n    showTags,\n    showTime\n  } = options;\n  const {\n    text,\n    login,\n    email,\n    avatarUrl,\n    tags,\n    time,\n    timeEnd\n  } = annotation;\n\n  const onItemClick = () => {\n    onClick(annotation);\n  };\n\n  const onLoginClick = () => {\n    onAvatarClick(annotation);\n  };\n\n  const showAvatar = login && showUser;\n  const showTimeStamp = time && showTime;\n  const showTimeStampEnd = timeEnd && timeEnd !== time && showTime;\n  return /*#__PURE__*/_jsxs(Card, {\n    className: styles.card,\n    onClick: onItemClick,\n    children: [/*#__PURE__*/_jsx(Card.Heading, {\n      children: /*#__PURE__*/_jsx(\"span\", {\n        children: text\n      })\n    }), showTimeStamp && /*#__PURE__*/_jsxs(Card.Description, {\n      className: styles.timestamp,\n      children: [/*#__PURE__*/_jsx(TimeStamp, {\n        formatDate: formatDate,\n        time: time\n      }), showTimeStampEnd && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          className: styles.time,\n          children: \"-\"\n        }), /*#__PURE__*/_jsx(TimeStamp, {\n          formatDate: formatDate,\n          time: timeEnd\n        }), ' ']\n      })]\n    }), showAvatar && /*#__PURE__*/_jsx(Card.Meta, {\n      className: styles.meta,\n      children: /*#__PURE__*/_jsx(Avatar, {\n        email: email,\n        login: login,\n        avatarUrl: avatarUrl,\n        onClick: onLoginClick\n      })\n    }), showTags && tags && /*#__PURE__*/_jsx(Card.Tags, {\n      children: /*#__PURE__*/_jsx(TagList, {\n        tags: tags,\n        onClick: tag => onTagClick(tag, false)\n      })\n    })]\n  });\n};\n\nconst Avatar = ({\n  onClick,\n  avatarUrl,\n  login,\n  email\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const onAvatarClick = e => {\n    e.stopPropagation();\n    onClick();\n  };\n\n  const tooltipContent = /*#__PURE__*/_jsxs(\"span\", {\n    children: [\"Created by:\", _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), \" \", email]\n  });\n\n  return /*#__PURE__*/_jsx(Tooltip, {\n    content: tooltipContent,\n    theme: \"info\",\n    placement: \"top\",\n    children: /*#__PURE__*/_jsx(\"button\", {\n      onClick: onAvatarClick,\n      className: styles.avatar,\n      \"aria-label\": `Created by ${email}`,\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: avatarUrl,\n        alt: \"avatar icon\"\n      })\n    })\n  });\n};\n\nconst TimeStamp = ({\n  time,\n  formatDate\n}) => {\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: styles.time,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      children: formatDate(time)\n    })\n  });\n};\n\nfunction getStyles(theme) {\n  return {\n    card: css({\n      gridTemplateAreas: `\"Heading Description Meta Tags\"`,\n      gridTemplateColumns: 'auto 1fr auto auto',\n      padding: theme.spacing(1),\n      margin: theme.spacing(0.5),\n      width: 'inherit'\n    }),\n    meta: css({\n      margin: 0,\n      position: 'relative',\n      justifyContent: 'end'\n    }),\n    timestamp: css({\n      margin: 0,\n      alignSelf: 'center'\n    }),\n    time: css({\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      fontSize: theme.typography.bodySmall.fontSize,\n      color: theme.colors.text.secondary\n    }),\n    avatar: css({\n      border: 'none',\n      background: 'inherit',\n      margin: 0,\n      padding: theme.spacing(0.5),\n      img: {\n        borderRadius: '50%',\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n      }\n    })\n  };\n}","map":{"version":3,"names":["css","React","Card","TagList","Tooltip","useStyles2","AnnotationListItem","options","annotation","formatDate","onClick","onAvatarClick","onTagClick","styles","getStyles","showUser","showTags","showTime","text","login","email","avatarUrl","tags","time","timeEnd","onItemClick","onLoginClick","showAvatar","showTimeStamp","showTimeStampEnd","card","timestamp","meta","tag","Avatar","e","stopPropagation","tooltipContent","avatar","TimeStamp","theme","gridTemplateAreas","gridTemplateColumns","padding","spacing","margin","width","position","justifyContent","alignSelf","marginLeft","marginRight","fontSize","typography","bodySmall","color","colors","secondary","border","background","img","borderRadius","height"],"sources":["/home/soula/grafana/public/app/plugins/panel/annolist/AnnotationListItem.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, MouseEvent } from 'react';\n\nimport { AnnotationEvent, DateTimeInput, GrafanaTheme2, PanelProps } from '@grafana/data';\nimport { Card, TagList, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { PanelOptions } from './models.gen';\n\ninterface Props extends Pick<PanelProps<PanelOptions>, 'options'> {\n  annotation: AnnotationEvent;\n  formatDate: (date: DateTimeInput, format?: string) => string;\n  onClick: (annotation: AnnotationEvent) => void;\n  onAvatarClick: (annotation: AnnotationEvent) => void;\n  onTagClick: (tag: string, remove?: boolean) => void;\n}\n\nexport const AnnotationListItem: FC<Props> = ({\n  options,\n  annotation,\n  formatDate,\n  onClick,\n  onAvatarClick,\n  onTagClick,\n}) => {\n  const styles = useStyles2(getStyles);\n  const { showUser, showTags, showTime } = options;\n  const { text, login, email, avatarUrl, tags, time, timeEnd } = annotation;\n  const onItemClick = () => {\n    onClick(annotation);\n  };\n  const onLoginClick = () => {\n    onAvatarClick(annotation);\n  };\n  const showAvatar = login && showUser;\n  const showTimeStamp = time && showTime;\n  const showTimeStampEnd = timeEnd && timeEnd !== time && showTime;\n\n  return (\n    <Card className={styles.card} onClick={onItemClick}>\n      <Card.Heading>\n        <span>{text}</span>\n      </Card.Heading>\n      {showTimeStamp && (\n        <Card.Description className={styles.timestamp}>\n          <TimeStamp formatDate={formatDate} time={time!} />\n          {showTimeStampEnd && (\n            <>\n              <span className={styles.time}>-</span>\n              <TimeStamp formatDate={formatDate} time={timeEnd!} />{' '}\n            </>\n          )}\n        </Card.Description>\n      )}\n      {showAvatar && (\n        <Card.Meta className={styles.meta}>\n          <Avatar email={email} login={login!} avatarUrl={avatarUrl} onClick={onLoginClick} />\n        </Card.Meta>\n      )}\n      {showTags && tags && (\n        <Card.Tags>\n          <TagList tags={tags} onClick={(tag) => onTagClick(tag, false)} />\n        </Card.Tags>\n      )}\n    </Card>\n  );\n};\n\ninterface AvatarProps {\n  login: string;\n  onClick: () => void;\n  avatarUrl?: string;\n  email?: string;\n}\n\nconst Avatar: FC<AvatarProps> = ({ onClick, avatarUrl, login, email }) => {\n  const styles = useStyles2(getStyles);\n  const onAvatarClick = (e: MouseEvent) => {\n    e.stopPropagation();\n    onClick();\n  };\n  const tooltipContent = (\n    <span>\n      Created by:\n      <br /> {email}\n    </span>\n  );\n\n  return (\n    <Tooltip content={tooltipContent} theme=\"info\" placement=\"top\">\n      <button onClick={onAvatarClick} className={styles.avatar} aria-label={`Created by ${email}`}>\n        <img src={avatarUrl} alt=\"avatar icon\" />\n      </button>\n    </Tooltip>\n  );\n};\n\ninterface TimeStampProps {\n  time: number;\n  formatDate: (date: DateTimeInput, format?: string) => string;\n}\n\nconst TimeStamp: FC<TimeStampProps> = ({ time, formatDate }) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <span className={styles.time}>\n      <span>{formatDate(time)}</span>\n    </span>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    card: css({\n      gridTemplateAreas: `\"Heading Description Meta Tags\"`,\n      gridTemplateColumns: 'auto 1fr auto auto',\n      padding: theme.spacing(1),\n      margin: theme.spacing(0.5),\n      width: 'inherit',\n    }),\n    meta: css({\n      margin: 0,\n      position: 'relative',\n      justifyContent: 'end',\n    }),\n    timestamp: css({\n      margin: 0,\n      alignSelf: 'center',\n    }),\n    time: css({\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      fontSize: theme.typography.bodySmall.fontSize,\n      color: theme.colors.text.secondary,\n    }),\n    avatar: css({\n      border: 'none',\n      background: 'inherit',\n      margin: 0,\n      padding: theme.spacing(0.5),\n      img: {\n        borderRadius: '50%',\n        width: theme.spacing(2),\n        height: theme.spacing(2),\n      },\n    }),\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}