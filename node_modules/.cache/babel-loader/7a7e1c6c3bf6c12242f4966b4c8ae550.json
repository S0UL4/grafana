{"ast":null,"code":"var _div, _div2, _br, _br2;\n\nimport React from 'react';\nimport { useObservable } from 'react-use';\nimport { Subject } from 'rxjs';\nimport { Field, HorizontalGroup, InlineField, InlineFieldRow, Select, VerticalGroup } from '@grafana/ui';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\nimport { HorizontalConstraint, VerticalConstraint } from 'app/features/canvas';\nimport { ConstraintSelectionBox } from './ConstraintSelectionBox';\nimport { QuickPositioning } from './QuickPositioning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst places = ['top', 'left', 'bottom', 'right', 'width', 'height'];\nconst horizontalOptions = [{\n  label: 'Left',\n  value: HorizontalConstraint.Left\n}, {\n  label: 'Right',\n  value: HorizontalConstraint.Right\n}, {\n  label: 'Left and right',\n  value: HorizontalConstraint.LeftRight\n}, {\n  label: 'Center',\n  value: HorizontalConstraint.Center\n}, {\n  label: 'Scale',\n  value: HorizontalConstraint.Scale\n}];\nconst verticalOptions = [{\n  label: 'Top',\n  value: VerticalConstraint.Top\n}, {\n  label: 'Bottom',\n  value: VerticalConstraint.Bottom\n}, {\n  label: 'Top and bottom',\n  value: VerticalConstraint.TopBottom\n}, {\n  label: 'Center',\n  value: VerticalConstraint.Center\n}, {\n  label: 'Scale',\n  value: VerticalConstraint.Scale\n}];\nexport const PlacementEditor = ({\n  item\n}) => {\n  var _ref, _element$tempConstrai;\n\n  const settings = item.settings; // Will force a rerender whenever the subject changes\n\n  useObservable(settings !== null && settings !== void 0 && settings.scene ? settings.scene.moved : new Subject());\n\n  if (!settings) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      children: \"Loading...\"\n    }));\n  }\n\n  const element = settings.element;\n\n  if (!element) {\n    return _div2 || (_div2 = /*#__PURE__*/_jsx(\"div\", {\n      children: \"???\"\n    }));\n  }\n\n  const {\n    options\n  } = element;\n  const {\n    placement,\n    constraint: layout\n  } = options;\n\n  const reselectElementAfterChange = () => {\n    setTimeout(() => {\n      settings.scene.select({\n        targets: [element.div]\n      });\n    });\n  };\n\n  const onHorizontalConstraintSelect = h => {\n    onHorizontalConstraintChange(h.value);\n  };\n\n  const onHorizontalConstraintChange = h => {\n    element.options.constraint.horizontal = h;\n    element.setPlacementFromConstraint();\n    settings.scene.revId++;\n    settings.scene.save(true);\n    reselectElementAfterChange();\n  };\n\n  const onVerticalConstraintSelect = v => {\n    onVerticalConstraintChange(v.value);\n  };\n\n  const onVerticalConstraintChange = v => {\n    element.options.constraint.vertical = v;\n    element.setPlacementFromConstraint();\n    settings.scene.revId++;\n    settings.scene.save(true);\n    reselectElementAfterChange();\n  };\n\n  const onPositionChange = (value, placement) => {\n    element.options.placement[placement] = value !== null && value !== void 0 ? value : element.options.placement[placement];\n    element.applyLayoutStylesToDiv();\n    settings.scene.clearCurrentSelection(true);\n    reselectElementAfterChange();\n  };\n\n  const constraint = (_ref = (_element$tempConstrai = element.tempConstraint) !== null && _element$tempConstrai !== void 0 ? _element$tempConstrai : layout) !== null && _ref !== void 0 ? _ref : {};\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(QuickPositioning, {\n      onPositionChange: onPositionChange,\n      settings: settings,\n      element: element\n    }), _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), /*#__PURE__*/_jsx(Field, {\n      label: \"Constraints\",\n      children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n        children: [/*#__PURE__*/_jsx(ConstraintSelectionBox, {\n          onVerticalConstraintChange: onVerticalConstraintChange,\n          onHorizontalConstraintChange: onHorizontalConstraintChange,\n          currentConstraints: constraint\n        }), /*#__PURE__*/_jsxs(VerticalGroup, {\n          children: [/*#__PURE__*/_jsx(Select, {\n            options: verticalOptions,\n            onChange: onVerticalConstraintSelect,\n            value: constraint.vertical\n          }), /*#__PURE__*/_jsx(Select, {\n            options: horizontalOptions,\n            onChange: onHorizontalConstraintSelect,\n            value: constraint.horizontal\n          })]\n        })]\n      })\n    }), _br2 || (_br2 = /*#__PURE__*/_jsx(\"br\", {})), /*#__PURE__*/_jsx(Field, {\n      label: \"Position\",\n      children: /*#__PURE__*/_jsx(_Fragment, {\n        children: places.map(p => {\n          const v = placement[p];\n\n          if (v == null) {\n            return null;\n          }\n\n          return /*#__PURE__*/_jsx(InlineFieldRow, {\n            children: /*#__PURE__*/_jsx(InlineField, {\n              label: p,\n              labelWidth: 8,\n              grow: true,\n              children: /*#__PURE__*/_jsx(NumberInput, {\n                value: v,\n                onChange: v => onPositionChange(v, p)\n              })\n            })\n          }, p);\n        })\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","useObservable","Subject","Field","HorizontalGroup","InlineField","InlineFieldRow","Select","VerticalGroup","NumberInput","HorizontalConstraint","VerticalConstraint","ConstraintSelectionBox","QuickPositioning","places","horizontalOptions","label","value","Left","Right","LeftRight","Center","Scale","verticalOptions","Top","Bottom","TopBottom","PlacementEditor","item","settings","scene","moved","element","options","placement","constraint","layout","reselectElementAfterChange","setTimeout","select","targets","div","onHorizontalConstraintSelect","h","onHorizontalConstraintChange","horizontal","setPlacementFromConstraint","revId","save","onVerticalConstraintSelect","v","onVerticalConstraintChange","vertical","onPositionChange","applyLayoutStylesToDiv","clearCurrentSelection","tempConstraint","map","p"],"sources":["/home/soula/grafana/public/app/plugins/panel/canvas/editor/PlacementEditor.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useObservable } from 'react-use';\nimport { Subject } from 'rxjs';\n\nimport { SelectableValue, StandardEditorProps } from '@grafana/data';\nimport { Field, HorizontalGroup, InlineField, InlineFieldRow, Select, VerticalGroup } from '@grafana/ui';\nimport { NumberInput } from 'app/core/components/OptionsUI/NumberInput';\nimport { HorizontalConstraint, Placement, VerticalConstraint } from 'app/features/canvas';\n\nimport { PanelOptions } from '../models.gen';\n\nimport { ConstraintSelectionBox } from './ConstraintSelectionBox';\nimport { QuickPositioning } from './QuickPositioning';\nimport { CanvasEditorOptions } from './elementEditor';\n\nconst places: Array<keyof Placement> = ['top', 'left', 'bottom', 'right', 'width', 'height'];\n\nconst horizontalOptions: Array<SelectableValue<HorizontalConstraint>> = [\n  { label: 'Left', value: HorizontalConstraint.Left },\n  { label: 'Right', value: HorizontalConstraint.Right },\n  { label: 'Left and right', value: HorizontalConstraint.LeftRight },\n  { label: 'Center', value: HorizontalConstraint.Center },\n  { label: 'Scale', value: HorizontalConstraint.Scale },\n];\n\nconst verticalOptions: Array<SelectableValue<VerticalConstraint>> = [\n  { label: 'Top', value: VerticalConstraint.Top },\n  { label: 'Bottom', value: VerticalConstraint.Bottom },\n  { label: 'Top and bottom', value: VerticalConstraint.TopBottom },\n  { label: 'Center', value: VerticalConstraint.Center },\n  { label: 'Scale', value: VerticalConstraint.Scale },\n];\n\nexport const PlacementEditor: FC<StandardEditorProps<any, CanvasEditorOptions, PanelOptions>> = ({ item }) => {\n  const settings = item.settings;\n\n  // Will force a rerender whenever the subject changes\n  useObservable(settings?.scene ? settings.scene.moved : new Subject());\n\n  if (!settings) {\n    return <div>Loading...</div>;\n  }\n\n  const element = settings.element;\n  if (!element) {\n    return <div>???</div>;\n  }\n  const { options } = element;\n  const { placement, constraint: layout } = options;\n\n  const reselectElementAfterChange = () => {\n    setTimeout(() => {\n      settings.scene.select({ targets: [element.div!] });\n    });\n  };\n\n  const onHorizontalConstraintSelect = (h: SelectableValue<HorizontalConstraint>) => {\n    onHorizontalConstraintChange(h.value!);\n  };\n\n  const onHorizontalConstraintChange = (h: HorizontalConstraint) => {\n    element.options.constraint!.horizontal = h;\n    element.setPlacementFromConstraint();\n    settings.scene.revId++;\n    settings.scene.save(true);\n    reselectElementAfterChange();\n  };\n\n  const onVerticalConstraintSelect = (v: SelectableValue<VerticalConstraint>) => {\n    onVerticalConstraintChange(v.value!);\n  };\n\n  const onVerticalConstraintChange = (v: VerticalConstraint) => {\n    element.options.constraint!.vertical = v;\n    element.setPlacementFromConstraint();\n    settings.scene.revId++;\n    settings.scene.save(true);\n    reselectElementAfterChange();\n  };\n\n  const onPositionChange = (value: number | undefined, placement: keyof Placement) => {\n    element.options.placement![placement] = value ?? element.options.placement![placement];\n    element.applyLayoutStylesToDiv();\n    settings.scene.clearCurrentSelection(true);\n    reselectElementAfterChange();\n  };\n\n  const constraint = element.tempConstraint ?? layout ?? {};\n\n  return (\n    <div>\n      <QuickPositioning onPositionChange={onPositionChange} settings={settings} element={element} />\n      <br />\n      <Field label=\"Constraints\">\n        <HorizontalGroup>\n          <ConstraintSelectionBox\n            onVerticalConstraintChange={onVerticalConstraintChange}\n            onHorizontalConstraintChange={onHorizontalConstraintChange}\n            currentConstraints={constraint}\n          />\n          <VerticalGroup>\n            <Select options={verticalOptions} onChange={onVerticalConstraintSelect} value={constraint.vertical} />\n            <Select options={horizontalOptions} onChange={onHorizontalConstraintSelect} value={constraint.horizontal} />\n          </VerticalGroup>\n        </HorizontalGroup>\n      </Field>\n\n      <br />\n\n      <Field label=\"Position\">\n        <>\n          {places.map((p) => {\n            const v = placement![p];\n            if (v == null) {\n              return null;\n            }\n            return (\n              <InlineFieldRow key={p}>\n                <InlineField label={p} labelWidth={8} grow={true}>\n                  <NumberInput value={v} onChange={(v) => onPositionChange(v, p)} />\n                </InlineField>\n              </InlineFieldRow>\n            );\n          })}\n        </>\n      </Field>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}