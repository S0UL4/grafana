{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2 } from '../../themes/index';\nimport { Field } from '../Forms/Field';\nimport { Input } from '../Input/Input';\nimport { Switch } from '../Switch/Switch';\nimport { DataLinkInput } from './DataLinkInput';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => ({\n  listItem: css`\n    margin-bottom: ${theme.spacing()};\n  `,\n  infoText: css`\n    padding-bottom: ${theme.spacing(2)};\n    margin-left: 66px;\n    color: ${theme.colors.text.secondary};\n  `\n});\n\nexport const DataLinkEditor = /*#__PURE__*/React.memo(({\n  index,\n  value,\n  onChange,\n  suggestions,\n  isLast\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const onUrlChange = (url, callback) => {\n    onChange(index, Object.assign({}, value, {\n      url\n    }), callback);\n  };\n\n  const onTitleChange = event => {\n    onChange(index, Object.assign({}, value, {\n      title: event.target.value\n    }));\n  };\n\n  const onOpenInNewTabChanged = () => {\n    onChange(index, Object.assign({}, value, {\n      targetBlank: !value.targetBlank\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.listItem,\n    children: [/*#__PURE__*/_jsx(Field, {\n      label: \"Title\",\n      children: /*#__PURE__*/_jsx(Input, {\n        value: value.title,\n        onChange: onTitleChange,\n        placeholder: \"Show details\"\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: \"URL\",\n      children: /*#__PURE__*/_jsx(DataLinkInput, {\n        value: value.url,\n        onChange: onUrlChange,\n        suggestions: suggestions\n      })\n    }), /*#__PURE__*/_jsx(Field, {\n      label: \"Open in new tab\",\n      children: /*#__PURE__*/_jsx(Switch, {\n        value: value.targetBlank || false,\n        onChange: onOpenInNewTabChanged\n      })\n    }), isLast && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.infoText,\n      children: \"With data links you can reference data variables like series name, labels and values. Type CMD+Space, CTRL+Space, or $ to open variable suggestions.\"\n    })]\n  });\n});\nDataLinkEditor.displayName = 'DataLinkEditor';","map":{"version":3,"names":["css","React","useStyles2","Field","Input","Switch","DataLinkInput","getStyles","theme","listItem","spacing","infoText","colors","text","secondary","DataLinkEditor","memo","index","value","onChange","suggestions","isLast","styles","onUrlChange","url","callback","onTitleChange","event","title","target","onOpenInNewTabChanged","targetBlank","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataLinks/DataLinkEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ChangeEvent } from 'react';\n\nimport { VariableSuggestion, GrafanaTheme2, DataLink } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/index';\nimport { Field } from '../Forms/Field';\nimport { Input } from '../Input/Input';\nimport { Switch } from '../Switch/Switch';\n\nimport { DataLinkInput } from './DataLinkInput';\n\ninterface DataLinkEditorProps {\n  index: number;\n  isLast: boolean;\n  value: DataLink;\n  suggestions: VariableSuggestion[];\n  onChange: (index: number, link: DataLink, callback?: () => void) => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  listItem: css`\n    margin-bottom: ${theme.spacing()};\n  `,\n  infoText: css`\n    padding-bottom: ${theme.spacing(2)};\n    margin-left: 66px;\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\nexport const DataLinkEditor: React.FC<DataLinkEditorProps> = React.memo(\n  ({ index, value, onChange, suggestions, isLast }) => {\n    const styles = useStyles2(getStyles);\n\n    const onUrlChange = (url: string, callback?: () => void) => {\n      onChange(index, { ...value, url }, callback);\n    };\n    const onTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n      onChange(index, { ...value, title: event.target.value });\n    };\n\n    const onOpenInNewTabChanged = () => {\n      onChange(index, { ...value, targetBlank: !value.targetBlank });\n    };\n\n    return (\n      <div className={styles.listItem}>\n        <Field label=\"Title\">\n          <Input value={value.title} onChange={onTitleChange} placeholder=\"Show details\" />\n        </Field>\n\n        <Field label=\"URL\">\n          <DataLinkInput value={value.url} onChange={onUrlChange} suggestions={suggestions} />\n        </Field>\n\n        <Field label=\"Open in new tab\">\n          <Switch value={value.targetBlank || false} onChange={onOpenInNewTabChanged} />\n        </Field>\n\n        {isLast && (\n          <div className={styles.infoText}>\n            With data links you can reference data variables like series name, labels and values. Type CMD+Space,\n            CTRL+Space, or $ to open variable suggestions.\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nDataLinkEditor.displayName = 'DataLinkEditor';\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAmC,OAAnC;AAIA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;;;;AAUA,MAAMC,SAAS,GAAIC,KAAD,KAA2B;EAC3CC,QAAQ,EAAET,GAAI;AAChB,qBAAqBQ,KAAK,CAACE,OAAN,EAAgB;AACrC,GAH6C;EAI3CC,QAAQ,EAAEX,GAAI;AAChB,sBAAsBQ,KAAK,CAACE,OAAN,CAAc,CAAd,CAAiB;AACvC;AACA,aAAaF,KAAK,CAACI,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AACzC;AAR6C,CAA3B,CAAlB;;AAWA,OAAO,MAAMC,cAA6C,gBAAGd,KAAK,CAACe,IAAN,CAC3D,CAAC;EAAEC,KAAF;EAASC,KAAT;EAAgBC,QAAhB;EAA0BC,WAA1B;EAAuCC;AAAvC,CAAD,KAAqD;EACnD,MAAMC,MAAM,GAAGpB,UAAU,CAACK,SAAD,CAAzB;;EAEA,MAAMgB,WAAW,GAAG,CAACC,GAAD,EAAcC,QAAd,KAAwC;IAC1DN,QAAQ,CAACF,KAAD,oBAAaC,KAAb;MAAoBM;IAApB,IAA2BC,QAA3B,CAAR;EACD,CAFD;;EAGA,MAAMC,aAAa,GAAIC,KAAD,IAA0C;IAC9DR,QAAQ,CAACF,KAAD,oBAAaC,KAAb;MAAoBU,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaX;IAAxC,GAAR;EACD,CAFD;;EAIA,MAAMY,qBAAqB,GAAG,MAAM;IAClCX,QAAQ,CAACF,KAAD,oBAAaC,KAAb;MAAoBa,WAAW,EAAE,CAACb,KAAK,CAACa;IAAxC,GAAR;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAET,MAAM,CAACb,QAAvB;IAAA,wBACE,KAAC,KAAD;MAAO,KAAK,EAAC,OAAb;MAAA,uBACE,KAAC,KAAD;QAAO,KAAK,EAAES,KAAK,CAACU,KAApB;QAA2B,QAAQ,EAAEF,aAArC;QAAoD,WAAW,EAAC;MAAhE;IADF,EADF,eAKE,KAAC,KAAD;MAAO,KAAK,EAAC,KAAb;MAAA,uBACE,KAAC,aAAD;QAAe,KAAK,EAAER,KAAK,CAACM,GAA5B;QAAiC,QAAQ,EAAED,WAA3C;QAAwD,WAAW,EAAEH;MAArE;IADF,EALF,eASE,KAAC,KAAD;MAAO,KAAK,EAAC,iBAAb;MAAA,uBACE,KAAC,MAAD;QAAQ,KAAK,EAAEF,KAAK,CAACa,WAAN,IAAqB,KAApC;QAA2C,QAAQ,EAAED;MAArD;IADF,EATF,EAaGT,MAAM,iBACL;MAAK,SAAS,EAAEC,MAAM,CAACX,QAAvB;MAAA;IAAA,EAdJ;EAAA,EADF;AAsBD,CArC0D,CAAtD;AAwCPI,cAAc,CAACiB,WAAf,GAA6B,gBAA7B"},"metadata":{},"sourceType":"module"}