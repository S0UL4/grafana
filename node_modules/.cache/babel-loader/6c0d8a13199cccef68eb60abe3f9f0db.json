{"ast":null,"code":"import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useEffect, useRef } from 'react';\nimport { InlineField, Input, QueryField } from '@grafana/ui';\nimport { useDispatch, useStatelessReducer } from '../../../../../hooks/useStatelessReducer';\nimport { AddRemove } from '../../../../AddRemove';\nimport { changeBucketAggregationSetting } from '../../state/actions';\nimport { addFilter, changeFilter, removeFilter } from './state/actions';\nimport { reducer as filtersReducer } from './state/reducer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const FiltersSettingsEditor = ({\n  bucketAgg\n}) => {\n  var _bucketAgg$settings, _bucketAgg$settings3, _bucketAgg$settings3$, _bucketAgg$settings4;\n\n  const {\n    current: baseId\n  } = useRef(uniqueId('es-filters-'));\n  const upperStateDispatch = useDispatch();\n  const dispatch = useStatelessReducer(newValue => upperStateDispatch(changeBucketAggregationSetting({\n    bucketAgg,\n    settingName: 'filters',\n    newValue\n  })), (_bucketAgg$settings = bucketAgg.settings) === null || _bucketAgg$settings === void 0 ? void 0 : _bucketAgg$settings.filters, filtersReducer); // The model might not have filters (or an empty array of filters) in it because of the way it was built in previous versions of the datasource.\n  // If this is the case we add a default one.\n\n  useEffect(() => {\n    var _bucketAgg$settings2, _bucketAgg$settings2$;\n\n    if (!((_bucketAgg$settings2 = bucketAgg.settings) !== null && _bucketAgg$settings2 !== void 0 && (_bucketAgg$settings2$ = _bucketAgg$settings2.filters) !== null && _bucketAgg$settings2$ !== void 0 && _bucketAgg$settings2$.length)) {\n      dispatch(addFilter());\n    }\n  }, [dispatch, (_bucketAgg$settings3 = bucketAgg.settings) === null || _bucketAgg$settings3 === void 0 ? void 0 : (_bucketAgg$settings3$ = _bucketAgg$settings3.filters) === null || _bucketAgg$settings3$ === void 0 ? void 0 : _bucketAgg$settings3$.length]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: css`\n          display: flex;\n          flex-direction: column;\n        `,\n      children: (_bucketAgg$settings4 = bucketAgg.settings) === null || _bucketAgg$settings4 === void 0 ? void 0 : _bucketAgg$settings4.filters.map((filter, index) => {\n        var _bucketAgg$settings5;\n\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: css`\n              display: flex;\n            `,\n          children: [/*#__PURE__*/_jsx(InlineField, {\n            label: \"Query\",\n            labelWidth: 8,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: css`\n                  width: 150px;\n                `,\n              children: /*#__PURE__*/_jsx(QueryField, {\n                placeholder: \"Lucene Query\",\n                portalOrigin: \"elasticsearch\",\n                onBlur: () => {},\n                onChange: query => dispatch(changeFilter({\n                  index,\n                  filter: Object.assign({}, filter, {\n                    query\n                  })\n                })),\n                query: filter.query\n              })\n            })\n          }), /*#__PURE__*/_jsx(InlineField, {\n            label: \"Label\",\n            labelWidth: 8,\n            children: /*#__PURE__*/_jsx(Input, {\n              width: 16,\n              id: `${baseId}-label-${index}`,\n              placeholder: \"Label\",\n              onBlur: e => dispatch(changeFilter({\n                index,\n                filter: Object.assign({}, filter, {\n                  label: e.target.value\n                })\n              })),\n              defaultValue: filter.label\n            })\n          }), /*#__PURE__*/_jsx(AddRemove, {\n            index: index,\n            elements: ((_bucketAgg$settings5 = bucketAgg.settings) === null || _bucketAgg$settings5 === void 0 ? void 0 : _bucketAgg$settings5.filters) || [],\n            onAdd: () => dispatch(addFilter()),\n            onRemove: () => dispatch(removeFilter(index))\n          })]\n        }, index);\n      })\n    })\n  });\n};","map":{"version":3,"names":["css","uniqueId","React","useEffect","useRef","InlineField","Input","QueryField","useDispatch","useStatelessReducer","AddRemove","changeBucketAggregationSetting","addFilter","changeFilter","removeFilter","reducer","filtersReducer","FiltersSettingsEditor","bucketAgg","current","baseId","upperStateDispatch","dispatch","newValue","settingName","settings","filters","length","map","filter","index","query","e","label","target","value"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/FiltersSettingsEditor/index.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useEffect, useRef } from 'react';\n\nimport { InlineField, Input, QueryField } from '@grafana/ui';\n\nimport { useDispatch, useStatelessReducer } from '../../../../../hooks/useStatelessReducer';\nimport { AddRemove } from '../../../../AddRemove';\nimport { Filters } from '../../aggregations';\nimport { changeBucketAggregationSetting } from '../../state/actions';\n\nimport { addFilter, changeFilter, removeFilter } from './state/actions';\nimport { reducer as filtersReducer } from './state/reducer';\n\ninterface Props {\n  bucketAgg: Filters;\n}\n\nexport const FiltersSettingsEditor = ({ bucketAgg }: Props) => {\n  const { current: baseId } = useRef(uniqueId('es-filters-'));\n\n  const upperStateDispatch = useDispatch();\n\n  const dispatch = useStatelessReducer(\n    (newValue) => upperStateDispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'filters', newValue })),\n    bucketAgg.settings?.filters,\n    filtersReducer\n  );\n\n  // The model might not have filters (or an empty array of filters) in it because of the way it was built in previous versions of the datasource.\n  // If this is the case we add a default one.\n  useEffect(() => {\n    if (!bucketAgg.settings?.filters?.length) {\n      dispatch(addFilter());\n    }\n  }, [dispatch, bucketAgg.settings?.filters?.length]);\n\n  return (\n    <>\n      <div\n        className={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        {bucketAgg.settings?.filters!.map((filter, index) => (\n          <div\n            key={index}\n            className={css`\n              display: flex;\n            `}\n          >\n            <InlineField label=\"Query\" labelWidth={8}>\n              <div\n                className={css`\n                  width: 150px;\n                `}\n              >\n                <QueryField\n                  placeholder=\"Lucene Query\"\n                  portalOrigin=\"elasticsearch\"\n                  onBlur={() => {}}\n                  onChange={(query) => dispatch(changeFilter({ index, filter: { ...filter, query } }))}\n                  query={filter.query}\n                />\n              </div>\n            </InlineField>\n            <InlineField label=\"Label\" labelWidth={8}>\n              <Input\n                width={16}\n                id={`${baseId}-label-${index}`}\n                placeholder=\"Label\"\n                onBlur={(e) => dispatch(changeFilter({ index, filter: { ...filter, label: e.target.value } }))}\n                defaultValue={filter.label}\n              />\n            </InlineField>\n            <AddRemove\n              index={index}\n              elements={bucketAgg.settings?.filters || []}\n              onAdd={() => dispatch(addFilter())}\n              onRemove={() => dispatch(removeFilter(index))}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}