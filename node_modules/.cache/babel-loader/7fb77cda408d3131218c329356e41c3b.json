{"ast":null,"code":"import React, { useState } from 'react';\nimport { Button } from '../../Button';\nimport { Modal } from '../../Modal/Modal';\nimport { DataLinkEditor } from '../DataLinkEditor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const DataLinkEditorModalContent = ({\n  link,\n  index,\n  getSuggestions,\n  onSave,\n  onCancel\n}) => {\n  const [dirtyLink, setDirtyLink] = useState(link);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DataLinkEditor, {\n      value: dirtyLink,\n      index: index,\n      isLast: false,\n      suggestions: getSuggestions(),\n      onChange: (index, link) => {\n        setDirtyLink(link);\n      }\n    }), /*#__PURE__*/_jsxs(Modal.ButtonRow, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        onClick: () => onCancel(index),\n        fill: \"outline\",\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: () => {\n          onSave(index, dirtyLink);\n        },\n        children: \"Save\"\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Button","Modal","DataLinkEditor","DataLinkEditorModalContent","link","index","getSuggestions","onSave","onCancel","dirtyLink","setDirtyLink"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataLinks/DataLinksInlineEditor/DataLinkEditorModalContent.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\n\nimport { DataFrame, DataLink, VariableSuggestion } from '@grafana/data';\n\nimport { Button } from '../../Button';\nimport { Modal } from '../../Modal/Modal';\nimport { DataLinkEditor } from '../DataLinkEditor';\n\ninterface DataLinkEditorModalContentProps {\n  link: DataLink;\n  index: number;\n  data: DataFrame[];\n  getSuggestions: () => VariableSuggestion[];\n  onSave: (index: number, ink: DataLink) => void;\n  onCancel: (index: number) => void;\n}\n\nexport const DataLinkEditorModalContent: FC<DataLinkEditorModalContentProps> = ({\n  link,\n  index,\n  getSuggestions,\n  onSave,\n  onCancel,\n}) => {\n  const [dirtyLink, setDirtyLink] = useState(link);\n  return (\n    <>\n      <DataLinkEditor\n        value={dirtyLink}\n        index={index}\n        isLast={false}\n        suggestions={getSuggestions()}\n        onChange={(index, link) => {\n          setDirtyLink(link);\n        }}\n      />\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={() => onCancel(index)} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            onSave(index, dirtyLink);\n          }}\n        >\n          Save\n        </Button>\n      </Modal.ButtonRow>\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAIA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;;AAWA,OAAO,MAAMC,0BAA+D,GAAG,CAAC;EAC9EC,IAD8E;EAE9EC,KAF8E;EAG9EC,cAH8E;EAI9EC,MAJ8E;EAK9EC;AAL8E,CAAD,KAMzE;EACJ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACK,IAAD,CAA1C;EACA,oBACE;IAAA,wBACE,KAAC,cAAD;MACE,KAAK,EAAEK,SADT;MAEE,KAAK,EAAEJ,KAFT;MAGE,MAAM,EAAE,KAHV;MAIE,WAAW,EAAEC,cAAc,EAJ7B;MAKE,QAAQ,EAAE,CAACD,KAAD,EAAQD,IAAR,KAAiB;QACzBM,YAAY,CAACN,IAAD,CAAZ;MACD;IAPH,EADF,eAUE,MAAC,KAAD,CAAO,SAAP;MAAA,wBACE,KAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,OAAO,EAAE,MAAMI,QAAQ,CAACH,KAAD,CAAnD;QAA4D,IAAI,EAAC,SAAjE;QAAA;MAAA,EADF,eAIE,KAAC,MAAD;QACE,OAAO,EAAE,MAAM;UACbE,MAAM,CAACF,KAAD,EAAQI,SAAR,CAAN;QACD,CAHH;QAAA;MAAA,EAJF;IAAA,EAVF;EAAA,EADF;AAyBD,CAjCM"},"metadata":{},"sourceType":"module"}