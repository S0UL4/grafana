{"ast":null,"code":"import React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useClickAway } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Menu } from '../Menu/Menu';\nimport { Portal } from '../Portal/Portal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const ContextMenu = /*#__PURE__*/React.memo(({\n  x,\n  y,\n  onClose,\n  focusOnOpen = true,\n  renderMenuItems,\n  renderHeader\n}) => {\n  const menuRef = useRef(null);\n  const [positionStyles, setPositionStyles] = useState({});\n  useLayoutEffect(() => {\n    const menuElement = menuRef.current;\n\n    if (menuElement) {\n      const rect = menuElement.getBoundingClientRect();\n      const OFFSET = 5;\n      const collisions = {\n        right: window.innerWidth < x + rect.width,\n        bottom: window.innerHeight < rect.bottom + rect.height + OFFSET\n      };\n      setPositionStyles({\n        position: 'fixed',\n        left: collisions.right ? x - rect.width - OFFSET : x - OFFSET,\n        top: collisions.bottom ? y - rect.height - OFFSET : y + OFFSET\n      });\n    }\n  }, [x, y]);\n  useClickAway(menuRef, () => {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  });\n  const header = renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader();\n  const menuItems = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems();\n\n  const onOpen = setFocusedItem => {\n    if (focusOnOpen) {\n      setFocusedItem(0);\n    }\n  };\n\n  const onKeyDown = e => {\n    if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Portal, {\n    children: /*#__PURE__*/_jsx(Menu, {\n      header: header,\n      ref: menuRef,\n      style: positionStyles,\n      ariaLabel: selectors.components.Menu.MenuComponent('Context'),\n      onOpen: onOpen,\n      onClick: onClose,\n      onKeyDown: onKeyDown,\n      children: menuItems\n    })\n  });\n});\nContextMenu.displayName = 'ContextMenu';","map":{"version":3,"names":["React","useRef","useState","useLayoutEffect","useClickAway","selectors","Menu","Portal","ContextMenu","memo","x","y","onClose","focusOnOpen","renderMenuItems","renderHeader","menuRef","positionStyles","setPositionStyles","menuElement","current","rect","getBoundingClientRect","OFFSET","collisions","right","window","innerWidth","width","bottom","innerHeight","height","position","left","top","header","menuItems","onOpen","setFocusedItem","onKeyDown","e","key","preventDefault","stopPropagation","components","MenuComponent","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ContextMenu/ContextMenu.tsx"],"sourcesContent":["import React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useClickAway } from 'react-use';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Menu } from '../Menu/Menu';\nimport { Portal } from '../Portal/Portal';\n\nexport interface ContextMenuProps {\n  /** Starting horizontal position for the menu */\n  x: number;\n  /** Starting vertical position for the menu */\n  y: number;\n  /** Callback for closing the menu */\n  onClose?: () => void;\n  /** On menu open focus the first element */\n  focusOnOpen?: boolean;\n  /** RenderProp function that returns menu items to display */\n  renderMenuItems?: () => React.ReactNode;\n  /** A function that returns header element */\n  renderHeader?: () => React.ReactNode;\n}\n\nexport const ContextMenu: React.FC<ContextMenuProps> = React.memo(\n  ({ x, y, onClose, focusOnOpen = true, renderMenuItems, renderHeader }) => {\n    const menuRef = useRef<HTMLDivElement>(null);\n    const [positionStyles, setPositionStyles] = useState({});\n\n    useLayoutEffect(() => {\n      const menuElement = menuRef.current;\n      if (menuElement) {\n        const rect = menuElement.getBoundingClientRect();\n        const OFFSET = 5;\n        const collisions = {\n          right: window.innerWidth < x + rect.width,\n          bottom: window.innerHeight < rect.bottom + rect.height + OFFSET,\n        };\n\n        setPositionStyles({\n          position: 'fixed',\n          left: collisions.right ? x - rect.width - OFFSET : x - OFFSET,\n          top: collisions.bottom ? y - rect.height - OFFSET : y + OFFSET,\n        });\n      }\n    }, [x, y]);\n\n    useClickAway(menuRef, () => {\n      onClose?.();\n    });\n    const header = renderHeader?.();\n    const menuItems = renderMenuItems?.();\n    const onOpen = (setFocusedItem: (a: number) => void) => {\n      if (focusOnOpen) {\n        setFocusedItem(0);\n      }\n    };\n    const onKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        e.stopPropagation();\n        onClose?.();\n      }\n    };\n\n    return (\n      <Portal>\n        <Menu\n          header={header}\n          ref={menuRef}\n          style={positionStyles}\n          ariaLabel={selectors.components.Menu.MenuComponent('Context')}\n          onOpen={onOpen}\n          onClick={onClose}\n          onKeyDown={onKeyDown}\n        >\n          {menuItems}\n        </Menu>\n      </Portal>\n    );\n  }\n);\n\nContextMenu.displayName = 'ContextMenu';\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,eAAlC,QAAyD,OAAzD;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAiBA,OAAO,MAAMC,WAAuC,gBAAGR,KAAK,CAACS,IAAN,CACrD,CAAC;EAAEC,CAAF;EAAKC,CAAL;EAAQC,OAAR;EAAiBC,WAAW,GAAG,IAA/B;EAAqCC,eAArC;EAAsDC;AAAtD,CAAD,KAA0E;EACxE,MAAMC,OAAO,GAAGf,MAAM,CAAiB,IAAjB,CAAtB;EACA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;EAEAC,eAAe,CAAC,MAAM;IACpB,MAAMgB,WAAW,GAAGH,OAAO,CAACI,OAA5B;;IACA,IAAID,WAAJ,EAAiB;MACf,MAAME,IAAI,GAAGF,WAAW,CAACG,qBAAZ,EAAb;MACA,MAAMC,MAAM,GAAG,CAAf;MACA,MAAMC,UAAU,GAAG;QACjBC,KAAK,EAAEC,MAAM,CAACC,UAAP,GAAoBjB,CAAC,GAAGW,IAAI,CAACO,KADnB;QAEjBC,MAAM,EAAEH,MAAM,CAACI,WAAP,GAAqBT,IAAI,CAACQ,MAAL,GAAcR,IAAI,CAACU,MAAnB,GAA4BR;MAFxC,CAAnB;MAKAL,iBAAiB,CAAC;QAChBc,QAAQ,EAAE,OADM;QAEhBC,IAAI,EAAET,UAAU,CAACC,KAAX,GAAmBf,CAAC,GAAGW,IAAI,CAACO,KAAT,GAAiBL,MAApC,GAA6Cb,CAAC,GAAGa,MAFvC;QAGhBW,GAAG,EAAEV,UAAU,CAACK,MAAX,GAAoBlB,CAAC,GAAGU,IAAI,CAACU,MAAT,GAAkBR,MAAtC,GAA+CZ,CAAC,GAAGY;MAHxC,CAAD,CAAjB;IAKD;EACF,CAhBc,EAgBZ,CAACb,CAAD,EAAIC,CAAJ,CAhBY,CAAf;EAkBAP,YAAY,CAACY,OAAD,EAAU,MAAM;IAC1BJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EACR,CAFW,CAAZ;EAGA,MAAMuB,MAAM,GAAGpB,YAAH,aAAGA,YAAH,uBAAGA,YAAY,EAA3B;EACA,MAAMqB,SAAS,GAAGtB,eAAH,aAAGA,eAAH,uBAAGA,eAAe,EAAjC;;EACA,MAAMuB,MAAM,GAAIC,cAAD,IAAyC;IACtD,IAAIzB,WAAJ,EAAiB;MACfyB,cAAc,CAAC,CAAD,CAAd;IACD;EACF,CAJD;;EAKA,MAAMC,SAAS,GAAIC,CAAD,IAA4B;IAC5C,IAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;MACtBD,CAAC,CAACE,cAAF;MACAF,CAAC,CAACG,eAAF;MACA/B,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;IACR;EACF,CAND;;EAQA,oBACE,KAAC,MAAD;IAAA,uBACE,KAAC,IAAD;MACE,MAAM,EAAEuB,MADV;MAEE,GAAG,EAAEnB,OAFP;MAGE,KAAK,EAAEC,cAHT;MAIE,SAAS,EAAEZ,SAAS,CAACuC,UAAV,CAAqBtC,IAArB,CAA0BuC,aAA1B,CAAwC,SAAxC,CAJb;MAKE,MAAM,EAAER,MALV;MAME,OAAO,EAAEzB,OANX;MAOE,SAAS,EAAE2B,SAPb;MAAA,UASGH;IATH;EADF,EADF;AAeD,CAxDoD,CAAhD;AA2DP5B,WAAW,CAACsC,WAAZ,GAA0B,aAA1B"},"metadata":{},"sourceType":"module"}