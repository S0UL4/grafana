{"ast":null,"code":"import { css } from '@emotion/css';\nimport { formatDistanceToNow } from 'date-fns';\nimport React from 'react';\nimport { config } from '@grafana/runtime';\nimport { Card, Checkbox, useTheme2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const StoredNotificationItem = ({\n  children,\n  className,\n  isSelected,\n  onClick,\n  severity = 'error',\n  title,\n  traceId,\n  timestamp\n}) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const showTraceId = config.featureToggles.tracing && traceId;\n  return /*#__PURE__*/_jsxs(Card, {\n    className: className,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsx(Card.Heading, {\n      children: title\n    }), /*#__PURE__*/_jsx(Card.Description, {\n      children: children\n    }), /*#__PURE__*/_jsx(Card.Figure, {\n      children: /*#__PURE__*/_jsx(Checkbox, {\n        onChange: onClick,\n        tabIndex: -1,\n        value: isSelected\n      })\n    }), /*#__PURE__*/_jsxs(Card.Tags, {\n      className: styles.trace,\n      children: [showTraceId && /*#__PURE__*/_jsx(\"span\", {\n        children: `Trace ID: ${traceId}`\n      }), timestamp && formatDistanceToNow(timestamp, {\n        addSuffix: true\n      })]\n    })]\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    trace: css({\n      alignItems: 'flex-end',\n      alignSelf: 'flex-end',\n      color: theme.colors.text.secondary,\n      display: 'flex',\n      flexDirection: 'column',\n      fontSize: theme.typography.pxToRem(10),\n      justifySelf: 'flex-end'\n    })\n  };\n};","map":{"version":3,"names":["css","formatDistanceToNow","React","config","Card","Checkbox","useTheme2","StoredNotificationItem","children","className","isSelected","onClick","severity","title","traceId","timestamp","theme","styles","getStyles","showTraceId","featureToggles","tracing","trace","addSuffix","alignItems","alignSelf","color","colors","text","secondary","display","flexDirection","fontSize","typography","pxToRem","justifySelf"],"sources":["/home/soula/grafana/public/app/core/components/AppNotifications/StoredNotificationItem.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { formatDistanceToNow } from 'date-fns';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Card, Checkbox, useTheme2 } from '@grafana/ui';\n\nexport type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\nexport interface Props {\n  children?: ReactNode;\n  className?: string;\n  isSelected: boolean;\n  onClick: () => void;\n  severity?: AlertVariant;\n  title: string;\n  timestamp?: number;\n  traceId?: string;\n}\n\nexport const StoredNotificationItem = ({\n  children,\n  className,\n  isSelected,\n  onClick,\n  severity = 'error',\n  title,\n  traceId,\n  timestamp,\n}: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const showTraceId = config.featureToggles.tracing && traceId;\n\n  return (\n    <Card className={className} onClick={onClick}>\n      <Card.Heading>{title}</Card.Heading>\n      <Card.Description>{children}</Card.Description>\n      <Card.Figure>\n        <Checkbox onChange={onClick} tabIndex={-1} value={isSelected} />\n      </Card.Figure>\n      <Card.Tags className={styles.trace}>\n        {showTraceId && <span>{`Trace ID: ${traceId}`}</span>}\n        {timestamp && formatDistanceToNow(timestamp, { addSuffix: true })}\n      </Card.Tags>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    trace: css({\n      alignItems: 'flex-end',\n      alignSelf: 'flex-end',\n      color: theme.colors.text.secondary,\n      display: 'flex',\n      flexDirection: 'column',\n      fontSize: theme.typography.pxToRem(10),\n      justifySelf: 'flex-end',\n    }),\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAGA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,aAA1C;;;AAeA,OAAO,MAAMC,sBAAsB,GAAG,CAAC;EACrCC,QADqC;EAErCC,SAFqC;EAGrCC,UAHqC;EAIrCC,OAJqC;EAKrCC,QAAQ,GAAG,OAL0B;EAMrCC,KANqC;EAOrCC,OAPqC;EAQrCC;AARqC,CAAD,KASzB;EACX,MAAMC,KAAK,GAAGV,SAAS,EAAvB;EACA,MAAMW,MAAM,GAAGC,SAAS,CAACF,KAAD,CAAxB;EACA,MAAMG,WAAW,GAAGhB,MAAM,CAACiB,cAAP,CAAsBC,OAAtB,IAAiCP,OAArD;EAEA,oBACE,MAAC,IAAD;IAAM,SAAS,EAAEL,SAAjB;IAA4B,OAAO,EAAEE,OAArC;IAAA,wBACE,KAAC,IAAD,CAAM,OAAN;MAAA,UAAeE;IAAf,EADF,eAEE,KAAC,IAAD,CAAM,WAAN;MAAA,UAAmBL;IAAnB,EAFF,eAGE,KAAC,IAAD,CAAM,MAAN;MAAA,uBACE,KAAC,QAAD;QAAU,QAAQ,EAAEG,OAApB;QAA6B,QAAQ,EAAE,CAAC,CAAxC;QAA2C,KAAK,EAAED;MAAlD;IADF,EAHF,eAME,MAAC,IAAD,CAAM,IAAN;MAAW,SAAS,EAAEO,MAAM,CAACK,KAA7B;MAAA,WACGH,WAAW,iBAAI;QAAA,UAAQ,aAAYL,OAAQ;MAA5B,EADlB,EAEGC,SAAS,IAAId,mBAAmB,CAACc,SAAD,EAAY;QAAEQ,SAAS,EAAE;MAAb,CAAZ,CAFnC;IAAA,EANF;EAAA,EADF;AAaD,CA3BM;;AA6BP,MAAML,SAAS,GAAIF,KAAD,IAA0B;EAC1C,OAAO;IACLM,KAAK,EAAEtB,GAAG,CAAC;MACTwB,UAAU,EAAE,UADH;MAETC,SAAS,EAAE,UAFF;MAGTC,KAAK,EAAEV,KAAK,CAACW,MAAN,CAAaC,IAAb,CAAkBC,SAHhB;MAITC,OAAO,EAAE,MAJA;MAKTC,aAAa,EAAE,QALN;MAMTC,QAAQ,EAAEhB,KAAK,CAACiB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAND;MAOTC,WAAW,EAAE;IAPJ,CAAD;EADL,CAAP;AAWD,CAZD"},"metadata":{},"sourceType":"module"}