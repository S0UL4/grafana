{"ast":null,"code":"//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// NOTE: This file will be auto generated from models.cue\n// It is currenty hand written but will serve as the target for cuetsy\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nimport { AxisPlacement, VisibilityMode } from '@grafana/schema';\nimport { HeatmapCellLayout } from 'app/features/transformers/calculateHeatmap/models.gen';\nexport const modelVersion = Object.freeze([1, 0]);\nexport let HeatmapColorMode;\n\n(function (HeatmapColorMode) {\n  HeatmapColorMode[\"Opacity\"] = \"opacity\";\n  HeatmapColorMode[\"Scheme\"] = \"scheme\";\n})(HeatmapColorMode || (HeatmapColorMode = {}));\n\nexport let HeatmapColorScale;\n\n(function (HeatmapColorScale) {\n  HeatmapColorScale[\"Linear\"] = \"linear\";\n  HeatmapColorScale[\"Exponential\"] = \"exponential\";\n})(HeatmapColorScale || (HeatmapColorScale = {}));\n\nexport const defaultPanelOptions = {\n  calculate: false,\n  color: {\n    mode: HeatmapColorMode.Scheme,\n    scheme: 'Oranges',\n    fill: 'dark-orange',\n    scale: HeatmapColorScale.Exponential,\n    exponent: 0.5,\n    steps: 64\n  },\n  rowsFrame: {\n    layout: HeatmapCellLayout.auto\n  },\n  yAxis: {\n    axisPlacement: AxisPlacement.Left\n  },\n  cellValues: {},\n  showValue: VisibilityMode.Auto,\n  tooltip: {\n    show: true,\n    yHistogram: false\n  },\n  legend: {\n    show: true\n  },\n  exemplars: {\n    color: 'rgba(255,0,255,0.7)'\n  },\n  filterValues: {\n    le: 1e-9\n  },\n  cellGap: 1\n};\nexport const defaultPanelFieldConfig = {};","map":{"version":3,"names":["AxisPlacement","VisibilityMode","HeatmapCellLayout","modelVersion","Object","freeze","HeatmapColorMode","HeatmapColorScale","defaultPanelOptions","calculate","color","mode","Scheme","scheme","fill","scale","Exponential","exponent","steps","rowsFrame","layout","auto","yAxis","axisPlacement","Left","cellValues","showValue","Auto","tooltip","show","yHistogram","legend","exemplars","filterValues","le","cellGap","defaultPanelFieldConfig"],"sources":["/home/soula/grafana/public/app/plugins/panel/heatmap/models.gen.ts"],"sourcesContent":["//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// NOTE: This file will be auto generated from models.cue\n// It is currenty hand written but will serve as the target for cuetsy\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { AxisConfig, AxisPlacement, HideableFieldConfig, ScaleDistributionConfig, VisibilityMode } from '@grafana/schema';\nimport { HeatmapCellLayout, HeatmapCalculationOptions } from 'app/features/transformers/calculateHeatmap/models.gen';\n\nexport const modelVersion = Object.freeze([1, 0]);\n\nexport enum HeatmapColorMode {\n  Opacity = 'opacity',\n  Scheme = 'scheme',\n}\n\nexport enum HeatmapColorScale {\n  Linear = 'linear',\n  Exponential = 'exponential',\n}\n\nexport interface HeatmapColorOptions {\n  mode: HeatmapColorMode;\n  scheme: string; // when in scheme mode -- the d3 scheme name\n  fill: string; // when opacity mode, the target color\n  scale: HeatmapColorScale; // for opacity mode\n  exponent: number; // when scale== sqrt\n  steps: number; // 2-128\n\n  // Clamp the colors to the value range\n  min?: number;\n  max?: number;\n}\nexport interface YAxisConfig extends AxisConfig {\n  unit?: string;\n  reverse?: boolean; \n  decimals?: number;\n  // Only used when the axis is not ordinal\n  min?: number;\n  max?: number;\n}\n\nexport interface CellValues {\n  unit?: string;\n  decimals?: number;\n}\n\nexport interface FilterValueRange {\n  le?: number;\n  ge?: number;\n}\n\nexport interface HeatmapTooltip {\n  show: boolean;\n  yHistogram?: boolean;\n}\nexport interface HeatmapLegend {\n  show: boolean;\n}\n\nexport interface ExemplarConfig {\n  color: string;\n}\n\nexport interface RowsHeatmapOptions {\n  value?: string; // value field name\n  layout?: HeatmapCellLayout;\n}\n\nexport interface PanelOptions {\n  calculate?: boolean;\n  calculation?: HeatmapCalculationOptions;\n\n  color: HeatmapColorOptions;\n  filterValues?: FilterValueRange; // was hideZeroBuckets\n  rowsFrame?: RowsHeatmapOptions;\n  showValue: VisibilityMode;\n\n  cellGap?: number; // was cardPadding\n  cellRadius?: number; // was cardRadius (not used, but migrated from angular)\n  cellValues?: CellValues;\n  \n  yAxis: YAxisConfig;\n  \n  legend: HeatmapLegend;\n\n  tooltip: HeatmapTooltip;\n  exemplars: ExemplarConfig;\n}\n\nexport const defaultPanelOptions: PanelOptions = {\n  calculate: false,\n  color: {\n    mode: HeatmapColorMode.Scheme,\n    scheme: 'Oranges',\n    fill: 'dark-orange',\n    scale: HeatmapColorScale.Exponential,\n    exponent: 0.5,\n    steps: 64,\n  },\n  rowsFrame: {\n    layout: HeatmapCellLayout.auto,\n  },\n  yAxis: {\n    axisPlacement: AxisPlacement.Left,\n  },\n  cellValues: {\n\n  },\n  showValue: VisibilityMode.Auto,\n  tooltip: {\n    show: true,\n    yHistogram: false,\n  },\n  legend: {\n    show: true,\n  },\n  exemplars: {\n    color: 'rgba(255,0,255,0.7)',\n  },\n  filterValues: {\n    le: 1e-9,\n  },\n  cellGap: 1,\n};\n\nexport interface PanelFieldConfig extends HideableFieldConfig {\n  scaleDistribution?: ScaleDistributionConfig;\n}\n\nexport const defaultPanelFieldConfig: PanelFieldConfig = {};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAqBA,aAArB,EAAkFC,cAAlF,QAAwG,iBAAxG;AACA,SAASC,iBAAT,QAA6D,uDAA7D;AAEA,OAAO,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,CAAC,CAAD,EAAI,CAAJ,CAAd,CAArB;AAEP,WAAYC,gBAAZ;;WAAYA,gB;EAAAA,gB;EAAAA,gB;GAAAA,gB,KAAAA,gB;;AAKZ,WAAYC,iBAAZ;;WAAYA,iB;EAAAA,iB;EAAAA,iB;GAAAA,iB,KAAAA,iB;;AA0EZ,OAAO,MAAMC,mBAAiC,GAAG;EAC/CC,SAAS,EAAE,KADoC;EAE/CC,KAAK,EAAE;IACLC,IAAI,EAAEL,gBAAgB,CAACM,MADlB;IAELC,MAAM,EAAE,SAFH;IAGLC,IAAI,EAAE,aAHD;IAILC,KAAK,EAAER,iBAAiB,CAACS,WAJpB;IAKLC,QAAQ,EAAE,GALL;IAMLC,KAAK,EAAE;EANF,CAFwC;EAU/CC,SAAS,EAAE;IACTC,MAAM,EAAElB,iBAAiB,CAACmB;EADjB,CAVoC;EAa/CC,KAAK,EAAE;IACLC,aAAa,EAAEvB,aAAa,CAACwB;EADxB,CAbwC;EAgB/CC,UAAU,EAAE,EAhBmC;EAmB/CC,SAAS,EAAEzB,cAAc,CAAC0B,IAnBqB;EAoB/CC,OAAO,EAAE;IACPC,IAAI,EAAE,IADC;IAEPC,UAAU,EAAE;EAFL,CApBsC;EAwB/CC,MAAM,EAAE;IACNF,IAAI,EAAE;EADA,CAxBuC;EA2B/CG,SAAS,EAAE;IACTtB,KAAK,EAAE;EADE,CA3BoC;EA8B/CuB,YAAY,EAAE;IACZC,EAAE,EAAE;EADQ,CA9BiC;EAiC/CC,OAAO,EAAE;AAjCsC,CAA1C;AAwCP,OAAO,MAAMC,uBAAyC,GAAG,EAAlD"},"metadata":{},"sourceType":"module"}