{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components } from 'react-select';\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { focusCss } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input'; // isFocus prop is actually available, but its not in the types for the version we have.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SelectContainer = props => {\n  const {\n    isDisabled,\n    isFocused,\n    children\n  } = props;\n  const theme = useTheme2();\n  const styles = getSelectContainerStyles(theme, isFocused, isDisabled);\n  return /*#__PURE__*/_jsx(components.SelectContainer, Object.assign({}, props, {\n    className: cx(styles.wrapper, props.className),\n    children: children\n  }));\n};\nconst getSelectContainerStyles = stylesFactory((theme, focused, disabled) => {\n  const styles = getInputStyles({\n    theme,\n    invalid: false\n  });\n  return {\n    wrapper: cx(styles.wrapper, sharedInputStyle(theme, false), focused && css`\n          ${focusCss(theme.v1)}\n        `, disabled && styles.inputDisabled, css`\n        position: relative;\n        box-sizing: border-box;\n        /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: stretch;\n        justify-content: space-between;\n\n        min-height: 32px;\n        height: auto;\n        max-width: 100%;\n\n        /* Input padding is applied to the InputControl so the menu is aligned correctly */\n        padding: 0;\n        cursor: ${disabled ? 'not-allowed' : 'pointer'};\n      `)\n  };\n});","map":{"version":3,"names":["css","cx","React","components","stylesFactory","useTheme2","focusCss","sharedInputStyle","getInputStyles","SelectContainer","props","isDisabled","isFocused","children","theme","styles","getSelectContainerStyles","wrapper","className","focused","disabled","invalid","v1","inputDisabled"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Select/SelectContainer.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, ContainerProps as BaseContainerProps, GroupBase } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { focusCss } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\n// isFocus prop is actually available, but its not in the types for the version we have.\nexport interface SelectContainerProps<Option, isMulti extends boolean, Group extends GroupBase<Option>>\n  extends BaseContainerProps<Option, isMulti, Group> {\n  isFocused: boolean;\n}\n\nexport const SelectContainer = <Option, isMulti extends boolean, Group extends GroupBase<Option>>(\n  props: SelectContainerProps<Option, isMulti, Group>\n) => {\n  const { isDisabled, isFocused, children } = props;\n\n  const theme = useTheme2();\n  const styles = getSelectContainerStyles(theme, isFocused, isDisabled);\n\n  return (\n    <components.SelectContainer {...props} className={cx(styles.wrapper, props.className)}>\n      {children}\n    </components.SelectContainer>\n  );\n};\n\nconst getSelectContainerStyles = stylesFactory((theme: GrafanaTheme2, focused: boolean, disabled: boolean) => {\n  const styles = getInputStyles({ theme, invalid: false });\n\n  return {\n    wrapper: cx(\n      styles.wrapper,\n      sharedInputStyle(theme, false),\n      focused &&\n        css`\n          ${focusCss(theme.v1)}\n        `,\n      disabled && styles.inputDisabled,\n      css`\n        position: relative;\n        box-sizing: border-box;\n        /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: stretch;\n        justify-content: space-between;\n\n        min-height: 32px;\n        height: auto;\n        max-width: 100%;\n\n        /* Input padding is applied to the InputControl so the menu is aligned correctly */\n        padding: 0;\n        cursor: ${disabled ? 'not-allowed' : 'pointer'};\n      `\n    ),\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA4E,cAA5E;AAIA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B,C,CAEA;;;AAMA,OAAO,MAAMC,eAAe,GAC1BC,KAD6B,IAE1B;EACH,MAAM;IAAEC,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,IAAsCH,KAA5C;EAEA,MAAMI,KAAK,GAAGT,SAAS,EAAvB;EACA,MAAMU,MAAM,GAAGC,wBAAwB,CAACF,KAAD,EAAQF,SAAR,EAAmBD,UAAnB,CAAvC;EAEA,oBACE,KAAC,UAAD,CAAY,eAAZ,oBAAgCD,KAAhC;IAAuC,SAAS,EAAET,EAAE,CAACc,MAAM,CAACE,OAAR,EAAiBP,KAAK,CAACQ,SAAvB,CAApD;IAAA,UACGL;EADH,GADF;AAKD,CAbM;AAeP,MAAMG,wBAAwB,GAAGZ,aAAa,CAAC,CAACU,KAAD,EAAuBK,OAAvB,EAAyCC,QAAzC,KAA+D;EAC5G,MAAML,MAAM,GAAGP,cAAc,CAAC;IAAEM,KAAF;IAASO,OAAO,EAAE;EAAlB,CAAD,CAA7B;EAEA,OAAO;IACLJ,OAAO,EAAEhB,EAAE,CACTc,MAAM,CAACE,OADE,EAETV,gBAAgB,CAACO,KAAD,EAAQ,KAAR,CAFP,EAGTK,OAAO,IACLnB,GAAI;AACZ,YAAYM,QAAQ,CAACQ,KAAK,CAACQ,EAAP,CAAW;AAC/B,SANe,EAOTF,QAAQ,IAAIL,MAAM,CAACQ,aAPV,EAQTvB,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBoB,QAAQ,GAAG,aAAH,GAAmB,SAAU;AACvD,OAxBe;EADN,CAAP;AA4BD,CA/B6C,CAA9C"},"metadata":{},"sourceType":"module"}