{"ast":null,"code":"var _h, _div;\n\nimport { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { Button, CodeEditor, HorizontalGroup, useStyles2 } from '@grafana/ui';\nimport { dashboardWatcher } from 'app/features/live/dashboard/dashboardWatcher';\nimport { getDashboardSrv } from '../../services/DashboardSrv';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const JsonEditorSettings = ({\n  dashboard\n}) => {\n  const [dashboardJson, setDashboardJson] = useState(JSON.stringify(dashboard.getSaveModelClone(), null, 2));\n\n  const onBlur = value => {\n    setDashboardJson(value);\n  };\n\n  const onClick = () => {\n    getDashboardSrv().saveJSONDashboard(dashboardJson).then(() => {\n      dashboardWatcher.reloadPage();\n    });\n  };\n\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n      className: \"dashboard-settings__header\",\n      children: \"JSON Model\"\n    })), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"dashboard-settings__subheader\",\n      children: \"The JSON model below is the data structure that defines the dashboard. This includes dashboard settings, panel settings, layout, queries, and so on.\"\n    })), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.editWrapper,\n      children: /*#__PURE__*/_jsx(AutoSizer, {\n        children: ({\n          width,\n          height\n        }) => /*#__PURE__*/_jsx(CodeEditor, {\n          value: dashboardJson,\n          language: \"json\",\n          width: width,\n          height: height,\n          showMiniMap: true,\n          showLineNumbers: true,\n          onBlur: onBlur\n        })\n      })\n    }), dashboard.meta.canSave && /*#__PURE__*/_jsx(HorizontalGroup, {\n      children: /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        onClick: onClick,\n        children: \"Save changes\"\n      })\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  editWrapper: css`\n    height: calc(100vh - 250px);\n    margin-bottom: 10px;\n  `\n});","map":{"version":3,"names":["css","React","useState","AutoSizer","Button","CodeEditor","HorizontalGroup","useStyles2","dashboardWatcher","getDashboardSrv","JsonEditorSettings","dashboard","dashboardJson","setDashboardJson","JSON","stringify","getSaveModelClone","onBlur","value","onClick","saveJSONDashboard","then","reloadPage","styles","getStyles","editWrapper","width","height","meta","canSave","theme"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/DashboardSettings/JsonEditorSettings.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, CodeEditor, HorizontalGroup, useStyles2 } from '@grafana/ui';\nimport { dashboardWatcher } from 'app/features/live/dashboard/dashboardWatcher';\n\nimport { getDashboardSrv } from '../../services/DashboardSrv';\nimport { DashboardModel } from '../../state/DashboardModel';\n\ninterface Props {\n  dashboard: DashboardModel;\n}\n\nexport const JsonEditorSettings: React.FC<Props> = ({ dashboard }) => {\n  const [dashboardJson, setDashboardJson] = useState<string>(JSON.stringify(dashboard.getSaveModelClone(), null, 2));\n  const onBlur = (value: string) => {\n    setDashboardJson(value);\n  };\n\n  const onClick = () => {\n    getDashboardSrv()\n      .saveJSONDashboard(dashboardJson)\n      .then(() => {\n        dashboardWatcher.reloadPage();\n      });\n  };\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div>\n      <h3 className=\"dashboard-settings__header\">JSON Model</h3>\n      <div className=\"dashboard-settings__subheader\">\n        The JSON model below is the data structure that defines the dashboard. This includes dashboard settings, panel\n        settings, layout, queries, and so on.\n      </div>\n\n      <div className={styles.editWrapper}>\n        <AutoSizer>\n          {({ width, height }) => (\n            <CodeEditor\n              value={dashboardJson}\n              language=\"json\"\n              width={width}\n              height={height}\n              showMiniMap={true}\n              showLineNumbers={true}\n              onBlur={onBlur}\n            />\n          )}\n        </AutoSizer>\n      </div>\n      {dashboard.meta.canSave && (\n        <HorizontalGroup>\n          <Button type=\"submit\" onClick={onClick}>\n            Save changes\n          </Button>\n        </HorizontalGroup>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  editWrapper: css`\n    height: calc(100vh - 250px);\n    margin-bottom: 10px;\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAGA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,eAA7B,EAA8CC,UAA9C,QAAgE,aAAhE;AACA,SAASC,gBAAT,QAAiC,8CAAjC;AAEA,SAASC,eAAT,QAAgC,6BAAhC;;;AAOA,OAAO,MAAMC,kBAAmC,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAmB;EACpE,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAASY,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAACK,iBAAV,EAAf,EAA8C,IAA9C,EAAoD,CAApD,CAAT,CAAlD;;EACA,MAAMC,MAAM,GAAIC,KAAD,IAAmB;IAChCL,gBAAgB,CAACK,KAAD,CAAhB;EACD,CAFD;;EAIA,MAAMC,OAAO,GAAG,MAAM;IACpBV,eAAe,GACZW,iBADH,CACqBR,aADrB,EAEGS,IAFH,CAEQ,MAAM;MACVb,gBAAgB,CAACc,UAAjB;IACD,CAJH;EAKD,CAND;;EAQA,MAAMC,MAAM,GAAGhB,UAAU,CAACiB,SAAD,CAAzB;EAEA,oBACE;IAAA,oCACE;MAAI,SAAS,EAAC,4BAAd;MAAA;IAAA,EADF,gCAEE;MAAK,SAAS,EAAC,+BAAf;MAAA;IAAA,EAFF,gBAOE;MAAK,SAAS,EAAED,MAAM,CAACE,WAAvB;MAAA,uBACE,KAAC,SAAD;QAAA,UACG,CAAC;UAAEC,KAAF;UAASC;QAAT,CAAD,kBACC,KAAC,UAAD;UACE,KAAK,EAAEf,aADT;UAEE,QAAQ,EAAC,MAFX;UAGE,KAAK,EAAEc,KAHT;UAIE,MAAM,EAAEC,MAJV;UAKE,WAAW,EAAE,IALf;UAME,eAAe,EAAE,IANnB;UAOE,MAAM,EAAEV;QAPV;MAFJ;IADF,EAPF,EAsBGN,SAAS,CAACiB,IAAV,CAAeC,OAAf,iBACC,KAAC,eAAD;MAAA,uBACE,KAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEV,OAA/B;QAAA;MAAA;IADF,EAvBJ;EAAA,EADF;AAgCD,CAhDM;;AAkDP,MAAMK,SAAS,GAAIM,KAAD,KAA2B;EAC3CL,WAAW,EAAEzB,GAAI;AACnB;AACA;AACA;AAJ6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}