{"ast":null,"code":"import './transferHandlers';\nimport * as comlink from 'comlink';\nimport { remoteObservableAsObservable } from './remoteObservable';\nimport { CentrifugeService } from './service';\nlet centrifuge;\n\nconst initialize = (deps, remoteDataStreamSubscriberReadiness) => {\n  centrifuge = new CentrifugeService(Object.assign({}, deps, {\n    dataStreamSubscriberReadiness: remoteObservableAsObservable(remoteDataStreamSubscriberReadiness)\n  }));\n};\n\nconst getConnectionState = () => {\n  return comlink.proxy(centrifuge.getConnectionState());\n};\n\nconst getDataStream = options => {\n  return comlink.proxy(centrifuge.getDataStream(options));\n};\n\nconst getQueryData = async options => {\n  return await centrifuge.getQueryData(options);\n};\n\nconst getStream = address => {\n  return comlink.proxy(centrifuge.getStream(address));\n};\n\nconst getPresence = async address => {\n  return await centrifuge.getPresence(address);\n};\n\nconst workObj = {\n  initialize,\n  getConnectionState,\n  getDataStream,\n  getStream,\n  getQueryData,\n  getPresence\n};\ncomlink.expose(workObj);\nexport default class {\n  constructor() {}\n\n}","map":{"version":3,"names":["comlink","remoteObservableAsObservable","CentrifugeService","centrifuge","initialize","deps","remoteDataStreamSubscriberReadiness","dataStreamSubscriberReadiness","getConnectionState","proxy","getDataStream","options","getQueryData","getStream","address","getPresence","workObj","expose","constructor"],"sources":["/home/soula/grafana/public/app/features/live/centrifuge/service.worker.ts"],"sourcesContent":["import './transferHandlers';\n\nimport * as comlink from 'comlink';\n\nimport { LiveChannelAddress } from '@grafana/data';\nimport { LiveDataStreamOptions, LiveQueryDataOptions } from '@grafana/runtime';\n\nimport { remoteObservableAsObservable } from './remoteObservable';\nimport { CentrifugeService, CentrifugeSrvDeps } from './service';\n\nlet centrifuge: CentrifugeService;\n\nconst initialize = (\n  deps: CentrifugeSrvDeps,\n  remoteDataStreamSubscriberReadiness: comlink.RemoteObject<\n    CentrifugeSrvDeps['dataStreamSubscriberReadiness'] & comlink.ProxyMarked\n  >\n) => {\n  centrifuge = new CentrifugeService({\n    ...deps,\n    dataStreamSubscriberReadiness: remoteObservableAsObservable(remoteDataStreamSubscriberReadiness),\n  });\n};\n\nconst getConnectionState = () => {\n  return comlink.proxy(centrifuge.getConnectionState());\n};\n\nconst getDataStream = (options: LiveDataStreamOptions) => {\n  return comlink.proxy(centrifuge.getDataStream(options));\n};\n\nconst getQueryData = async (options: LiveQueryDataOptions) => {\n  return await centrifuge.getQueryData(options);\n};\n\nconst getStream = (address: LiveChannelAddress) => {\n  return comlink.proxy(centrifuge.getStream(address));\n};\n\nconst getPresence = async (address: LiveChannelAddress) => {\n  return await centrifuge.getPresence(address);\n};\n\nconst workObj = {\n  initialize,\n  getConnectionState,\n  getDataStream,\n  getStream,\n  getQueryData,\n  getPresence,\n};\n\nexport type RemoteCentrifugeService = typeof workObj;\n\ncomlink.expose(workObj);\n\nexport default class {\n  constructor() {}\n}\n"],"mappings":"AAAA,OAAO,oBAAP;AAEA,OAAO,KAAKA,OAAZ,MAAyB,SAAzB;AAKA,SAASC,4BAAT,QAA6C,oBAA7C;AACA,SAASC,iBAAT,QAAqD,WAArD;AAEA,IAAIC,UAAJ;;AAEA,MAAMC,UAAU,GAAG,CACjBC,IADiB,EAEjBC,mCAFiB,KAKd;EACHH,UAAU,GAAG,IAAID,iBAAJ,mBACRG,IADQ;IAEXE,6BAA6B,EAAEN,4BAA4B,CAACK,mCAAD;EAFhD,GAAb;AAID,CAVD;;AAYA,MAAME,kBAAkB,GAAG,MAAM;EAC/B,OAAOR,OAAO,CAACS,KAAR,CAAcN,UAAU,CAACK,kBAAX,EAAd,CAAP;AACD,CAFD;;AAIA,MAAME,aAAa,GAAIC,OAAD,IAAoC;EACxD,OAAOX,OAAO,CAACS,KAAR,CAAcN,UAAU,CAACO,aAAX,CAAyBC,OAAzB,CAAd,CAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAOD,OAAP,IAAyC;EAC5D,OAAO,MAAMR,UAAU,CAACS,YAAX,CAAwBD,OAAxB,CAAb;AACD,CAFD;;AAIA,MAAME,SAAS,GAAIC,OAAD,IAAiC;EACjD,OAAOd,OAAO,CAACS,KAAR,CAAcN,UAAU,CAACU,SAAX,CAAqBC,OAArB,CAAd,CAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG,MAAOD,OAAP,IAAuC;EACzD,OAAO,MAAMX,UAAU,CAACY,WAAX,CAAuBD,OAAvB,CAAb;AACD,CAFD;;AAIA,MAAME,OAAO,GAAG;EACdZ,UADc;EAEdI,kBAFc;EAGdE,aAHc;EAIdG,SAJc;EAKdD,YALc;EAMdG;AANc,CAAhB;AAWAf,OAAO,CAACiB,MAAR,CAAeD,OAAf;AAEA,eAAe,MAAM;EACnBE,WAAW,GAAG,CAAE;;AADG"},"metadata":{},"sourceType":"module"}