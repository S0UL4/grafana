{"ast":null,"code":"var _p;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { saveAs } from 'file-saver';\nimport React, { PureComponent } from 'react';\nimport { config } from '@grafana/runtime';\nimport { Button, Field, Modal, Switch } from '@grafana/ui';\nimport { appEvents } from 'app/core/core';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardExporter } from 'app/features/dashboard/components/DashExportModal';\nimport { ShowModalReactEvent } from 'app/types/events';\nimport { ViewJsonModal } from './ViewJsonModal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport class ShareExport extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"exporter\", void 0);\n\n    _defineProperty(this, \"onShareExternallyChange\", () => {\n      this.setState({\n        shareExternally: !this.state.shareExternally\n      });\n    });\n\n    _defineProperty(this, \"onTrimDefaultsChange\", () => {\n      this.setState({\n        trimDefaults: !this.state.trimDefaults\n      });\n    });\n\n    _defineProperty(this, \"onSaveAsFile\", () => {\n      const {\n        dashboard\n      } = this.props;\n      const {\n        shareExternally\n      } = this.state;\n      const {\n        trimDefaults\n      } = this.state;\n\n      if (shareExternally) {\n        this.exporter.makeExportable(dashboard).then(dashboardJson => {\n          if (trimDefaults) {\n            getBackendSrv().post('/api/dashboards/trim', {\n              dashboard: dashboardJson\n            }).then(resp => {\n              this.openSaveAsDialog(resp.dashboard);\n            });\n          } else {\n            this.openSaveAsDialog(dashboardJson);\n          }\n        });\n      } else {\n        if (trimDefaults) {\n          getBackendSrv().post('/api/dashboards/trim', {\n            dashboard: dashboard.getSaveModelClone()\n          }).then(resp => {\n            this.openSaveAsDialog(resp.dashboard);\n          });\n        } else {\n          this.openSaveAsDialog(dashboard.getSaveModelClone());\n        }\n      }\n    });\n\n    _defineProperty(this, \"onViewJson\", () => {\n      const {\n        dashboard\n      } = this.props;\n      const {\n        shareExternally\n      } = this.state;\n      const {\n        trimDefaults\n      } = this.state;\n\n      if (shareExternally) {\n        this.exporter.makeExportable(dashboard).then(dashboardJson => {\n          if (trimDefaults) {\n            getBackendSrv().post('/api/dashboards/trim', {\n              dashboard: dashboardJson\n            }).then(resp => {\n              this.openJsonModal(resp.dashboard);\n            });\n          } else {\n            this.openJsonModal(dashboardJson);\n          }\n        });\n      } else {\n        if (trimDefaults) {\n          getBackendSrv().post('/api/dashboards/trim', {\n            dashboard: dashboard.getSaveModelClone()\n          }).then(resp => {\n            this.openJsonModal(resp.dashboard);\n          });\n        } else {\n          this.openJsonModal(dashboard.getSaveModelClone());\n        }\n      }\n    });\n\n    _defineProperty(this, \"openSaveAsDialog\", dash => {\n      const dashboardJsonPretty = JSON.stringify(dash, null, 2);\n      const blob = new Blob([dashboardJsonPretty], {\n        type: 'application/json;charset=utf-8'\n      });\n      const time = new Date().getTime();\n      saveAs(blob, `${dash.title}-${time}.json`);\n    });\n\n    _defineProperty(this, \"openJsonModal\", clone => {\n      var _this$props$onDismiss, _this$props;\n\n      appEvents.publish(new ShowModalReactEvent({\n        props: {\n          json: JSON.stringify(clone, null, 2)\n        },\n        component: ViewJsonModal\n      }));\n      (_this$props$onDismiss = (_this$props = this.props).onDismiss) === null || _this$props$onDismiss === void 0 ? void 0 : _this$props$onDismiss.call(_this$props);\n    });\n\n    this.state = {\n      shareExternally: false,\n      trimDefaults: false\n    };\n    this.exporter = new DashboardExporter();\n  }\n\n  render() {\n    const {\n      onDismiss\n    } = this.props;\n    const {\n      shareExternally\n    } = this.state;\n    const {\n      trimDefaults\n    } = this.state;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_p || (_p = /*#__PURE__*/_jsx(\"p\", {\n        className: \"share-modal-info-text\",\n        children: \"Export this dashboard.\"\n      })), /*#__PURE__*/_jsx(Field, {\n        label: \"Export for sharing externally\",\n        children: /*#__PURE__*/_jsx(Switch, {\n          id: \"share-externally-toggle\",\n          value: shareExternally,\n          onChange: this.onShareExternallyChange\n        })\n      }), config.featureToggles.trimDefaults && /*#__PURE__*/_jsx(Field, {\n        label: \"Export with default values removed\",\n        children: /*#__PURE__*/_jsx(Switch, {\n          id: \"trim-defaults-toggle\",\n          value: trimDefaults,\n          onChange: this.onTrimDefaultsChange\n        })\n      }), /*#__PURE__*/_jsxs(Modal.ButtonRow, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          onClick: onDismiss,\n          fill: \"outline\",\n          children: \"Cancel\"\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          onClick: this.onViewJson,\n          children: \"View JSON\"\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"primary\",\n          onClick: this.onSaveAsFile,\n          children: \"Save to file\"\n        })]\n      })]\n    });\n  }\n\n}","map":{"version":3,"names":["saveAs","React","PureComponent","config","Button","Field","Modal","Switch","appEvents","getBackendSrv","DashboardExporter","ShowModalReactEvent","ViewJsonModal","ShareExport","constructor","props","setState","shareExternally","state","trimDefaults","dashboard","exporter","makeExportable","then","dashboardJson","post","resp","openSaveAsDialog","getSaveModelClone","openJsonModal","dash","dashboardJsonPretty","JSON","stringify","blob","Blob","type","time","Date","getTime","title","clone","publish","json","component","onDismiss","render","onShareExternallyChange","featureToggles","onTrimDefaultsChange","onViewJson","onSaveAsFile"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/ShareModal/ShareExport.tsx"],"sourcesContent":["import { saveAs } from 'file-saver';\nimport React, { PureComponent } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { Button, Field, Modal, Switch } from '@grafana/ui';\nimport { appEvents } from 'app/core/core';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardExporter } from 'app/features/dashboard/components/DashExportModal';\nimport { ShowModalReactEvent } from 'app/types/events';\n\nimport { ViewJsonModal } from './ViewJsonModal';\nimport { ShareModalTabProps } from './types';\n\ninterface Props extends ShareModalTabProps {}\n\ninterface State {\n  shareExternally: boolean;\n  trimDefaults: boolean;\n}\n\nexport class ShareExport extends PureComponent<Props, State> {\n  private exporter: DashboardExporter;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      shareExternally: false,\n      trimDefaults: false,\n    };\n\n    this.exporter = new DashboardExporter();\n  }\n\n  onShareExternallyChange = () => {\n    this.setState({\n      shareExternally: !this.state.shareExternally,\n    });\n  };\n\n  onTrimDefaultsChange = () => {\n    this.setState({\n      trimDefaults: !this.state.trimDefaults,\n    });\n  };\n\n  onSaveAsFile = () => {\n    const { dashboard } = this.props;\n    const { shareExternally } = this.state;\n    const { trimDefaults } = this.state;\n\n    if (shareExternally) {\n      this.exporter.makeExportable(dashboard).then((dashboardJson: any) => {\n        if (trimDefaults) {\n          getBackendSrv()\n            .post('/api/dashboards/trim', { dashboard: dashboardJson })\n            .then((resp: any) => {\n              this.openSaveAsDialog(resp.dashboard);\n            });\n        } else {\n          this.openSaveAsDialog(dashboardJson);\n        }\n      });\n    } else {\n      if (trimDefaults) {\n        getBackendSrv()\n          .post('/api/dashboards/trim', { dashboard: dashboard.getSaveModelClone() })\n          .then((resp: any) => {\n            this.openSaveAsDialog(resp.dashboard);\n          });\n      } else {\n        this.openSaveAsDialog(dashboard.getSaveModelClone());\n      }\n    }\n  };\n\n  onViewJson = () => {\n    const { dashboard } = this.props;\n    const { shareExternally } = this.state;\n    const { trimDefaults } = this.state;\n\n    if (shareExternally) {\n      this.exporter.makeExportable(dashboard).then((dashboardJson: any) => {\n        if (trimDefaults) {\n          getBackendSrv()\n            .post('/api/dashboards/trim', { dashboard: dashboardJson })\n            .then((resp: any) => {\n              this.openJsonModal(resp.dashboard);\n            });\n        } else {\n          this.openJsonModal(dashboardJson);\n        }\n      });\n    } else {\n      if (trimDefaults) {\n        getBackendSrv()\n          .post('/api/dashboards/trim', { dashboard: dashboard.getSaveModelClone() })\n          .then((resp: any) => {\n            this.openJsonModal(resp.dashboard);\n          });\n      } else {\n        this.openJsonModal(dashboard.getSaveModelClone());\n      }\n    }\n  };\n\n  openSaveAsDialog = (dash: any) => {\n    const dashboardJsonPretty = JSON.stringify(dash, null, 2);\n    const blob = new Blob([dashboardJsonPretty], {\n      type: 'application/json;charset=utf-8',\n    });\n    const time = new Date().getTime();\n    saveAs(blob, `${dash.title}-${time}.json`);\n  };\n\n  openJsonModal = (clone: object) => {\n    appEvents.publish(\n      new ShowModalReactEvent({\n        props: {\n          json: JSON.stringify(clone, null, 2),\n        },\n        component: ViewJsonModal,\n      })\n    );\n\n    this.props.onDismiss?.();\n  };\n\n  render() {\n    const { onDismiss } = this.props;\n    const { shareExternally } = this.state;\n    const { trimDefaults } = this.state;\n\n    return (\n      <>\n        <p className=\"share-modal-info-text\">Export this dashboard.</p>\n        <Field label=\"Export for sharing externally\">\n          <Switch id=\"share-externally-toggle\" value={shareExternally} onChange={this.onShareExternallyChange} />\n        </Field>\n        {config.featureToggles.trimDefaults && (\n          <Field label=\"Export with default values removed\">\n            <Switch id=\"trim-defaults-toggle\" value={trimDefaults} onChange={this.onTrimDefaultsChange} />\n          </Field>\n        )}\n        <Modal.ButtonRow>\n          <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n            Cancel\n          </Button>\n          <Button variant=\"secondary\" onClick={this.onViewJson}>\n            View JSON\n          </Button>\n          <Button variant=\"primary\" onClick={this.onSaveAsFile}>\n            Save to file\n          </Button>\n        </Modal.ButtonRow>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,aAA7C;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,iBAAT,QAAkC,mDAAlC;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAEA,SAASC,aAAT,QAA8B,iBAA9B;;;;AAUA,OAAO,MAAMC,WAAN,SAA0BX,aAA1B,CAAsD;EAG3DY,WAAW,CAACC,KAAD,EAAe;IACxB,MAAMA,KAAN;;IADwB;;IAAA,iDAUA,MAAM;MAC9B,KAAKC,QAAL,CAAc;QACZC,eAAe,EAAE,CAAC,KAAKC,KAAL,CAAWD;MADjB,CAAd;IAGD,CAdyB;;IAAA,8CAgBH,MAAM;MAC3B,KAAKD,QAAL,CAAc;QACZG,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;MADd,CAAd;IAGD,CApByB;;IAAA,sCAsBX,MAAM;MACnB,MAAM;QAAEC;MAAF,IAAgB,KAAKL,KAA3B;MACA,MAAM;QAAEE;MAAF,IAAsB,KAAKC,KAAjC;MACA,MAAM;QAAEC;MAAF,IAAmB,KAAKD,KAA9B;;MAEA,IAAID,eAAJ,EAAqB;QACnB,KAAKI,QAAL,CAAcC,cAAd,CAA6BF,SAA7B,EAAwCG,IAAxC,CAA8CC,aAAD,IAAwB;UACnE,IAAIL,YAAJ,EAAkB;YAChBV,aAAa,GACVgB,IADH,CACQ,sBADR,EACgC;cAAEL,SAAS,EAAEI;YAAb,CADhC,EAEGD,IAFH,CAESG,IAAD,IAAe;cACnB,KAAKC,gBAAL,CAAsBD,IAAI,CAACN,SAA3B;YACD,CAJH;UAKD,CAND,MAMO;YACL,KAAKO,gBAAL,CAAsBH,aAAtB;UACD;QACF,CAVD;MAWD,CAZD,MAYO;QACL,IAAIL,YAAJ,EAAkB;UAChBV,aAAa,GACVgB,IADH,CACQ,sBADR,EACgC;YAAEL,SAAS,EAAEA,SAAS,CAACQ,iBAAV;UAAb,CADhC,EAEGL,IAFH,CAESG,IAAD,IAAe;YACnB,KAAKC,gBAAL,CAAsBD,IAAI,CAACN,SAA3B;UACD,CAJH;QAKD,CAND,MAMO;UACL,KAAKO,gBAAL,CAAsBP,SAAS,CAACQ,iBAAV,EAAtB;QACD;MACF;IACF,CAlDyB;;IAAA,oCAoDb,MAAM;MACjB,MAAM;QAAER;MAAF,IAAgB,KAAKL,KAA3B;MACA,MAAM;QAAEE;MAAF,IAAsB,KAAKC,KAAjC;MACA,MAAM;QAAEC;MAAF,IAAmB,KAAKD,KAA9B;;MAEA,IAAID,eAAJ,EAAqB;QACnB,KAAKI,QAAL,CAAcC,cAAd,CAA6BF,SAA7B,EAAwCG,IAAxC,CAA8CC,aAAD,IAAwB;UACnE,IAAIL,YAAJ,EAAkB;YAChBV,aAAa,GACVgB,IADH,CACQ,sBADR,EACgC;cAAEL,SAAS,EAAEI;YAAb,CADhC,EAEGD,IAFH,CAESG,IAAD,IAAe;cACnB,KAAKG,aAAL,CAAmBH,IAAI,CAACN,SAAxB;YACD,CAJH;UAKD,CAND,MAMO;YACL,KAAKS,aAAL,CAAmBL,aAAnB;UACD;QACF,CAVD;MAWD,CAZD,MAYO;QACL,IAAIL,YAAJ,EAAkB;UAChBV,aAAa,GACVgB,IADH,CACQ,sBADR,EACgC;YAAEL,SAAS,EAAEA,SAAS,CAACQ,iBAAV;UAAb,CADhC,EAEGL,IAFH,CAESG,IAAD,IAAe;YACnB,KAAKG,aAAL,CAAmBH,IAAI,CAACN,SAAxB;UACD,CAJH;QAKD,CAND,MAMO;UACL,KAAKS,aAAL,CAAmBT,SAAS,CAACQ,iBAAV,EAAnB;QACD;MACF;IACF,CAhFyB;;IAAA,0CAkFNE,IAAD,IAAe;MAChC,MAAMC,mBAAmB,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA5B;MACA,MAAMI,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,mBAAD,CAAT,EAAgC;QAC3CK,IAAI,EAAE;MADqC,CAAhC,CAAb;MAGA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;MACAvC,MAAM,CAACkC,IAAD,EAAQ,GAAEJ,IAAI,CAACU,KAAM,IAAGH,IAAK,OAA7B,CAAN;IACD,CAzFyB;;IAAA,uCA2FTI,KAAD,IAAmB;MAAA;;MACjCjC,SAAS,CAACkC,OAAV,CACE,IAAI/B,mBAAJ,CAAwB;QACtBI,KAAK,EAAE;UACL4B,IAAI,EAAEX,IAAI,CAACC,SAAL,CAAeQ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B;QADD,CADe;QAItBG,SAAS,EAAEhC;MAJW,CAAxB,CADF;MASA,6CAAKG,KAAL,EAAW8B,SAAX;IACD,CAtGyB;;IAExB,KAAK3B,KAAL,GAAa;MACXD,eAAe,EAAE,KADN;MAEXE,YAAY,EAAE;IAFH,CAAb;IAKA,KAAKE,QAAL,GAAgB,IAAIX,iBAAJ,EAAhB;EACD;;EAgGDoC,MAAM,GAAG;IACP,MAAM;MAAED;IAAF,IAAgB,KAAK9B,KAA3B;IACA,MAAM;MAAEE;IAAF,IAAsB,KAAKC,KAAjC;IACA,MAAM;MAAEC;IAAF,IAAmB,KAAKD,KAA9B;IAEA,oBACE;MAAA,oCACE;QAAG,SAAS,EAAC,uBAAb;QAAA;MAAA,EADF,gBAEE,KAAC,KAAD;QAAO,KAAK,EAAC,+BAAb;QAAA,uBACE,KAAC,MAAD;UAAQ,EAAE,EAAC,yBAAX;UAAqC,KAAK,EAAED,eAA5C;UAA6D,QAAQ,EAAE,KAAK8B;QAA5E;MADF,EAFF,EAKG5C,MAAM,CAAC6C,cAAP,CAAsB7B,YAAtB,iBACC,KAAC,KAAD;QAAO,KAAK,EAAC,oCAAb;QAAA,uBACE,KAAC,MAAD;UAAQ,EAAE,EAAC,sBAAX;UAAkC,KAAK,EAAEA,YAAzC;UAAuD,QAAQ,EAAE,KAAK8B;QAAtE;MADF,EANJ,eAUE,MAAC,KAAD,CAAO,SAAP;QAAA,wBACE,KAAC,MAAD;UAAQ,OAAO,EAAC,WAAhB;UAA4B,OAAO,EAAEJ,SAArC;UAAgD,IAAI,EAAC,SAArD;UAAA;QAAA,EADF,eAIE,KAAC,MAAD;UAAQ,OAAO,EAAC,WAAhB;UAA4B,OAAO,EAAE,KAAKK,UAA1C;UAAA;QAAA,EAJF,eAOE,KAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,OAAO,EAAE,KAAKC,YAAxC;UAAA;QAAA,EAPF;MAAA,EAVF;IAAA,EADF;EAwBD;;AAxI0D"},"metadata":{},"sourceType":"module"}