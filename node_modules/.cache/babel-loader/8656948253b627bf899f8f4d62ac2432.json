{"ast":null,"code":"const _excluded = [\"children\", \"className\", \"tooltip\", \"width\", \"transparent\", \"interactive\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useTheme } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const InlineLabel = _ref => {\n  let {\n    children,\n    className,\n    tooltip,\n    width,\n    transparent,\n    interactive,\n    as: Component = 'label'\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme();\n  const styles = getInlineLabelStyles(theme, transparent, width);\n  return /*#__PURE__*/_jsxs(Component, Object.assign({\n    className: cx(styles.label, className)\n  }, rest, {\n    children: [children, tooltip && /*#__PURE__*/_jsx(Tooltip, {\n      interactive: interactive,\n      placement: \"top\",\n      content: tooltip,\n      theme: \"info\",\n      children: /*#__PURE__*/_jsx(Icon, {\n        tabIndex: 0,\n        name: \"info-circle\",\n        size: \"sm\",\n        className: styles.icon\n      })\n    })]\n  }));\n};\nexport const getInlineLabelStyles = (theme, transparent = false, width) => {\n  return {\n    label: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-shrink: 0;\n      padding: 0 ${theme.spacing.sm};\n      font-weight: ${theme.typography.weight.semibold};\n      font-size: ${theme.typography.size.sm};\n      background-color: ${transparent ? 'transparent' : theme.colors.bg2};\n      height: ${theme.height.md}px;\n      line-height: ${theme.height.md}px;\n      margin-right: ${theme.spacing.xs};\n      border-radius: ${theme.border.radius.md};\n      border: none;\n      width: ${width ? width !== 'auto' ? `${8 * width}px` : width : '100%'};\n      color: ${theme.colors.textHeading};\n    `,\n    icon: css`\n      color: ${theme.colors.textWeak};\n      margin-left: 10px;\n\n      :hover {\n        color: ${theme.colors.text};\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","cx","React","useTheme","Icon","Tooltip","InlineLabel","children","className","tooltip","width","transparent","interactive","as","Component","rest","theme","styles","getInlineLabelStyles","label","icon","spacing","sm","typography","weight","semibold","size","colors","bg2","height","md","xs","border","radius","textHeading","textWeak","text"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Forms/InlineLabel.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FunctionComponent } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { useTheme } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip } from '../Tooltip';\n\nimport { LabelProps } from './Label';\n\nexport interface Props extends Omit<LabelProps, 'css' | 'description' | 'category'> {\n  /** Content for the labels tooltip. If provided, an info icon with the tooltip content\n   * will be displayed */\n  tooltip?: PopoverContent;\n  /** Custom width for the label */\n  width?: number | 'auto';\n  /** Make labels's background transparent */\n  transparent?: boolean;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n  /** @beta */\n  /** Controls which element the InlineLabel should be rendered into */\n  as?: React.ElementType;\n}\n\nexport const InlineLabel: FunctionComponent<Props> = ({\n  children,\n  className,\n  tooltip,\n  width,\n  transparent,\n  interactive,\n  as: Component = 'label',\n  ...rest\n}) => {\n  const theme = useTheme();\n  const styles = getInlineLabelStyles(theme, transparent, width);\n  return (\n    <Component className={cx(styles.label, className)} {...rest}>\n      {children}\n      {tooltip && (\n        <Tooltip interactive={interactive} placement=\"top\" content={tooltip} theme=\"info\">\n          <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" className={styles.icon} />\n        </Tooltip>\n      )}\n    </Component>\n  );\n};\n\nexport const getInlineLabelStyles = (theme: GrafanaTheme, transparent = false, width?: number | 'auto') => {\n  return {\n    label: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-shrink: 0;\n      padding: 0 ${theme.spacing.sm};\n      font-weight: ${theme.typography.weight.semibold};\n      font-size: ${theme.typography.size.sm};\n      background-color: ${transparent ? 'transparent' : theme.colors.bg2};\n      height: ${theme.height.md}px;\n      line-height: ${theme.height.md}px;\n      margin-right: ${theme.spacing.xs};\n      border-radius: ${theme.border.radius.md};\n      border: none;\n      width: ${width ? (width !== 'auto' ? `${8 * width}px` : width) : '100%'};\n      color: ${theme.colors.textHeading};\n    `,\n    icon: css`\n      color: ${theme.colors.textWeak};\n      margin-left: 10px;\n\n      :hover {\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n};\n"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAIA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAAyBC,OAAzB,QAAwC,YAAxC;;;AAmBA,OAAO,MAAMC,WAAqC,GAAG,QAS/C;EAAA,IATgD;IACpDC,QADoD;IAEpDC,SAFoD;IAGpDC,OAHoD;IAIpDC,KAJoD;IAKpDC,WALoD;IAMpDC,WANoD;IAOpDC,EAAE,EAAEC,SAAS,GAAG;EAPoC,CAShD;EAAA,IADDC,IACC;;EACJ,MAAMC,KAAK,GAAGb,QAAQ,EAAtB;EACA,MAAMc,MAAM,GAAGC,oBAAoB,CAACF,KAAD,EAAQL,WAAR,EAAqBD,KAArB,CAAnC;EACA,oBACE,MAAC,SAAD;IAAW,SAAS,EAAET,EAAE,CAACgB,MAAM,CAACE,KAAR,EAAeX,SAAf;EAAxB,GAAuDO,IAAvD;IAAA,WACGR,QADH,EAEGE,OAAO,iBACN,KAAC,OAAD;MAAS,WAAW,EAAEG,WAAtB;MAAmC,SAAS,EAAC,KAA7C;MAAmD,OAAO,EAAEH,OAA5D;MAAqE,KAAK,EAAC,MAA3E;MAAA,uBACE,KAAC,IAAD;QAAM,QAAQ,EAAE,CAAhB;QAAmB,IAAI,EAAC,aAAxB;QAAsC,IAAI,EAAC,IAA3C;QAAgD,SAAS,EAAEQ,MAAM,CAACG;MAAlE;IADF,EAHJ;EAAA,GADF;AAUD,CAtBM;AAwBP,OAAO,MAAMF,oBAAoB,GAAG,CAACF,KAAD,EAAsBL,WAAW,GAAG,KAApC,EAA2CD,KAA3C,KAAuE;EACzG,OAAO;IACLS,KAAK,EAAEnB,GAAI;AACf;AACA;AACA;AACA;AACA,mBAAmBgB,KAAK,CAACK,OAAN,CAAcC,EAAG;AACpC,qBAAqBN,KAAK,CAACO,UAAN,CAAiBC,MAAjB,CAAwBC,QAAS;AACtD,mBAAmBT,KAAK,CAACO,UAAN,CAAiBG,IAAjB,CAAsBJ,EAAG;AAC5C,0BAA0BX,WAAW,GAAG,aAAH,GAAmBK,KAAK,CAACW,MAAN,CAAaC,GAAI;AACzE,gBAAgBZ,KAAK,CAACa,MAAN,CAAaC,EAAG;AAChC,qBAAqBd,KAAK,CAACa,MAAN,CAAaC,EAAG;AACrC,sBAAsBd,KAAK,CAACK,OAAN,CAAcU,EAAG;AACvC,uBAAuBf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoBH,EAAG;AAC9C;AACA,eAAepB,KAAK,GAAIA,KAAK,KAAK,MAAV,GAAoB,GAAE,IAAIA,KAAM,IAAhC,GAAsCA,KAA1C,GAAmD,MAAO;AAC9E,eAAeM,KAAK,CAACW,MAAN,CAAaO,WAAY;AACxC,KAjBS;IAkBLd,IAAI,EAAEpB,GAAI;AACd,eAAegB,KAAK,CAACW,MAAN,CAAaQ,QAAS;AACrC;AACA;AACA;AACA,iBAAiBnB,KAAK,CAACW,MAAN,CAAaS,IAAK;AACnC;AACA;EAzBS,CAAP;AA2BD,CA5BM"},"metadata":{},"sourceType":"module"}