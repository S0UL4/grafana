{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { OptionsPaneCategory } from './OptionsPaneCategory';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * This is not a real React component but an intermediary to enable deep option search without traversing a React node tree.\n */\nexport class OptionsPaneCategoryDescriptor {\n  constructor(props) {\n    _defineProperty(this, \"items\", []);\n\n    _defineProperty(this, \"categories\", []);\n\n    _defineProperty(this, \"parent\", void 0);\n\n    this.props = props;\n  }\n\n  addItem(item) {\n    item.parent = this;\n    this.items.push(item);\n    return this;\n  }\n\n  addCategory(category) {\n    category.props.isNested = true;\n    category.parent = this;\n    this.categories.push(category);\n    return this;\n  }\n\n  getCategory(name) {\n    let sub = this.categories.find(c => c.props.id === name);\n\n    if (sub) {\n      return sub;\n    }\n\n    sub = new OptionsPaneCategoryDescriptor({\n      title: name,\n      id: name\n    });\n    this.addCategory(sub);\n    return sub;\n  }\n\n  render(searchQuery) {\n    if (this.props.customRender) {\n      return this.props.customRender();\n    }\n\n    return /*#__PURE__*/_jsxs(OptionsPaneCategory, Object.assign({}, this.props, {\n      children: [this.items.map(item => item.render(searchQuery)), this.categories.map(category => category.render(searchQuery))]\n    }), this.props.title);\n  }\n\n}","map":{"version":3,"names":["React","OptionsPaneCategory","OptionsPaneCategoryDescriptor","constructor","props","addItem","item","parent","items","push","addCategory","category","isNested","categories","getCategory","name","sub","find","c","id","title","render","searchQuery","customRender","map"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/OptionsPaneCategoryDescriptor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { OptionsPaneCategory } from './OptionsPaneCategory';\nimport { OptionsPaneItemDescriptor } from './OptionsPaneItemDescriptor';\n\nexport interface OptionsPaneCategoryDescriptorProps {\n  id: string;\n  title: string;\n  renderTitle?: (isExpanded: boolean) => React.ReactNode;\n  isOpenDefault?: boolean;\n  forceOpen?: number;\n  className?: string;\n  isNested?: boolean;\n  itemsCount?: number;\n  customRender?: () => React.ReactNode;\n}\n/**\n * This is not a real React component but an intermediary to enable deep option search without traversing a React node tree.\n */\n\nexport class OptionsPaneCategoryDescriptor {\n  items: OptionsPaneItemDescriptor[] = [];\n  categories: OptionsPaneCategoryDescriptor[] = [];\n  parent?: OptionsPaneCategoryDescriptor;\n\n  constructor(public props: OptionsPaneCategoryDescriptorProps) {}\n\n  addItem(item: OptionsPaneItemDescriptor) {\n    item.parent = this;\n    this.items.push(item);\n    return this;\n  }\n\n  addCategory(category: OptionsPaneCategoryDescriptor) {\n    category.props.isNested = true;\n    category.parent = this;\n    this.categories.push(category);\n    return this;\n  }\n\n  getCategory(name: string): OptionsPaneCategoryDescriptor {\n    let sub = this.categories.find((c) => c.props.id === name);\n    if (sub) {\n      return sub;\n    }\n    sub = new OptionsPaneCategoryDescriptor({\n      title: name,\n      id: name,\n    });\n    this.addCategory(sub);\n    return sub;\n  }\n\n  render(searchQuery?: string) {\n    if (this.props.customRender) {\n      return this.props.customRender();\n    }\n\n    return (\n      <OptionsPaneCategory key={this.props.title} {...this.props}>\n        {this.items.map((item) => item.render(searchQuery))}\n        {this.categories.map((category) => category.render(searchQuery))}\n      </OptionsPaneCategory>\n    );\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,uBAApC;;;AAcA;AACA;AACA;AAEA,OAAO,MAAMC,6BAAN,CAAoC;EAKzCC,WAAW,CAAQC,KAAR,EAAmD;IAAA,+BAJzB,EAIyB;;IAAA,oCAHhB,EAGgB;;IAAA;;IAAA,KAA3CA,KAA2C,GAA3CA,KAA2C;EAAE;;EAEhEC,OAAO,CAACC,IAAD,EAAkC;IACvCA,IAAI,CAACC,MAAL,GAAc,IAAd;IACA,KAAKC,KAAL,CAAWC,IAAX,CAAgBH,IAAhB;IACA,OAAO,IAAP;EACD;;EAEDI,WAAW,CAACC,QAAD,EAA0C;IACnDA,QAAQ,CAACP,KAAT,CAAeQ,QAAf,GAA0B,IAA1B;IACAD,QAAQ,CAACJ,MAAT,GAAkB,IAAlB;IACA,KAAKM,UAAL,CAAgBJ,IAAhB,CAAqBE,QAArB;IACA,OAAO,IAAP;EACD;;EAEDG,WAAW,CAACC,IAAD,EAA8C;IACvD,IAAIC,GAAG,GAAG,KAAKH,UAAL,CAAgBI,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACd,KAAF,CAAQe,EAAR,KAAeJ,IAA3C,CAAV;;IACA,IAAIC,GAAJ,EAAS;MACP,OAAOA,GAAP;IACD;;IACDA,GAAG,GAAG,IAAId,6BAAJ,CAAkC;MACtCkB,KAAK,EAAEL,IAD+B;MAEtCI,EAAE,EAAEJ;IAFkC,CAAlC,CAAN;IAIA,KAAKL,WAAL,CAAiBM,GAAjB;IACA,OAAOA,GAAP;EACD;;EAEDK,MAAM,CAACC,WAAD,EAAuB;IAC3B,IAAI,KAAKlB,KAAL,CAAWmB,YAAf,EAA6B;MAC3B,OAAO,KAAKnB,KAAL,CAAWmB,YAAX,EAAP;IACD;;IAED,oBACE,MAAC,mBAAD,oBAAgD,KAAKnB,KAArD;MAAA,WACG,KAAKI,KAAL,CAAWgB,GAAX,CAAgBlB,IAAD,IAAUA,IAAI,CAACe,MAAL,CAAYC,WAAZ,CAAzB,CADH,EAEG,KAAKT,UAAL,CAAgBW,GAAhB,CAAqBb,QAAD,IAAcA,QAAQ,CAACU,MAAT,CAAgBC,WAAhB,CAAlC,CAFH;IAAA,IAA0B,KAAKlB,KAAL,CAAWgB,KAArC,CADF;EAMD;;AA5CwC"},"metadata":{},"sourceType":"module"}