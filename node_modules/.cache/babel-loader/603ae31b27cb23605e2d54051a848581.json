{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport { DataHoverClearEvent, DataHoverEvent, FALLBACK_COLOR, formattedValueToString, getFieldDisplayValues } from '@grafana/data';\nimport { PanelDataErrorView } from '@grafana/runtime';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport { SeriesVisibilityChangeBehavior, usePanelContext, useTheme2, VizLayout, VizLegend } from '@grafana/ui';\nimport { PieChart } from './PieChart';\nimport { PieChartLegendValues } from './types';\nimport { filterDisplayItems, sumDisplayItemsReducer } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultLegendOptions = {\n  displayMode: LegendDisplayMode.List,\n  placement: 'right',\n  calcs: [],\n  values: [PieChartLegendValues.Percent]\n};\n\n/**\n * @beta\n */\nexport function PieChartPanel(props) {\n  const {\n    data,\n    timeZone,\n    fieldConfig,\n    replaceVariables,\n    width,\n    height,\n    options,\n    id\n  } = props;\n  const theme = useTheme2();\n  const highlightedTitle = useSliceHighlightState();\n  const fieldDisplayValues = getFieldDisplayValues({\n    fieldConfig,\n    reduceOptions: options.reduceOptions,\n    data: data.series,\n    theme: theme,\n    replaceVariables,\n    timeZone\n  });\n\n  if (!hasFrames(fieldDisplayValues)) {\n    return /*#__PURE__*/_jsx(PanelDataErrorView, {\n      panelId: id,\n      fieldConfig: fieldConfig,\n      data: data\n    });\n  }\n\n  return /*#__PURE__*/_jsx(VizLayout, {\n    width: width,\n    height: height,\n    legend: getLegend(props, fieldDisplayValues),\n    children: (vizWidth, vizHeight) => {\n      return /*#__PURE__*/_jsx(PieChart, {\n        width: vizWidth,\n        height: vizHeight,\n        highlightedTitle: highlightedTitle,\n        fieldDisplayValues: fieldDisplayValues,\n        tooltipOptions: options.tooltip,\n        pieType: options.pieType,\n        displayLabels: options.displayLabels\n      });\n    }\n  });\n}\n\nfunction getLegend(props, displayValues) {\n  var _props$options$legend;\n\n  const legendOptions = (_props$options$legend = props.options.legend) !== null && _props$options$legend !== void 0 ? _props$options$legend : defaultLegendOptions;\n\n  if (legendOptions.displayMode === LegendDisplayMode.Hidden) {\n    return undefined;\n  }\n\n  const total = displayValues.filter(filterDisplayItems).reduce(sumDisplayItemsReducer, 0);\n  const legendItems = displayValues // Since the pie chart is always sorted, let's sort the legend as well.\n  .sort((a, b) => {\n    if (isNaN(a.display.numeric)) {\n      return 1;\n    } else if (isNaN(b.display.numeric)) {\n      return -1;\n    } else {\n      return b.display.numeric - a.display.numeric;\n    }\n  }).map((value, idx) => {\n    var _display$title, _display$color;\n\n    const hidden = value.field.custom.hideFrom.viz;\n    const display = value.display;\n    return {\n      label: (_display$title = display.title) !== null && _display$title !== void 0 ? _display$title : '',\n      color: (_display$color = display.color) !== null && _display$color !== void 0 ? _display$color : FALLBACK_COLOR,\n      yAxis: 1,\n      disabled: hidden,\n      getItemKey: () => {\n        var _display$title2;\n\n        return ((_display$title2 = display.title) !== null && _display$title2 !== void 0 ? _display$title2 : '') + idx;\n      },\n      getDisplayValues: () => {\n        var _legendOptions$values;\n\n        const valuesToShow = (_legendOptions$values = legendOptions.values) !== null && _legendOptions$values !== void 0 ? _legendOptions$values : [];\n        let displayValues = [];\n\n        if (valuesToShow.includes(PieChartLegendValues.Value)) {\n          displayValues.push({\n            numeric: display.numeric,\n            text: formattedValueToString(display),\n            title: 'Value'\n          });\n        }\n\n        if (valuesToShow.includes(PieChartLegendValues.Percent)) {\n          var _props$fieldConfig$de, _value$field$decimals;\n\n          const fractionOfTotal = hidden ? 0 : display.numeric / total;\n          const percentOfTotal = fractionOfTotal * 100;\n          displayValues.push({\n            numeric: fractionOfTotal,\n            percent: percentOfTotal,\n            text: hidden || isNaN(fractionOfTotal) ? (_props$fieldConfig$de = props.fieldConfig.defaults.noValue) !== null && _props$fieldConfig$de !== void 0 ? _props$fieldConfig$de : '-' : percentOfTotal.toFixed((_value$field$decimals = value.field.decimals) !== null && _value$field$decimals !== void 0 ? _value$field$decimals : 0) + '%',\n            title: valuesToShow.length > 1 ? 'Percent' : ''\n          });\n        }\n\n        return displayValues;\n      }\n    };\n  });\n  return /*#__PURE__*/_jsx(VizLegend, {\n    items: legendItems,\n    seriesVisibilityChangeBehavior: SeriesVisibilityChangeBehavior.Hide,\n    placement: legendOptions.placement,\n    displayMode: legendOptions.displayMode\n  });\n}\n\nfunction hasFrames(fieldDisplayValues) {\n  return fieldDisplayValues.some(fd => {\n    var _fd$view;\n\n    return (_fd$view = fd.view) === null || _fd$view === void 0 ? void 0 : _fd$view.dataFrame.length;\n  });\n}\n\nfunction useSliceHighlightState() {\n  const [highlightedTitle, setHighlightedTitle] = useState();\n  const {\n    eventBus\n  } = usePanelContext();\n  useEffect(() => {\n    const setHighlightedSlice = event => {\n      setHighlightedTitle(event.payload.dataId);\n    };\n\n    const resetHighlightedSlice = event => {\n      setHighlightedTitle(undefined);\n    };\n\n    const subs = new Subscription();\n    subs.add(eventBus.getStream(DataHoverEvent).subscribe({\n      next: setHighlightedSlice\n    }));\n    subs.add(eventBus.getStream(DataHoverClearEvent).subscribe({\n      next: resetHighlightedSlice\n    }));\n    return () => {\n      subs.unsubscribe();\n    };\n  }, [setHighlightedTitle, eventBus]);\n  return highlightedTitle;\n}","map":{"version":3,"names":["React","useEffect","useState","Subscription","DataHoverClearEvent","DataHoverEvent","FALLBACK_COLOR","formattedValueToString","getFieldDisplayValues","PanelDataErrorView","LegendDisplayMode","SeriesVisibilityChangeBehavior","usePanelContext","useTheme2","VizLayout","VizLegend","PieChart","PieChartLegendValues","filterDisplayItems","sumDisplayItemsReducer","defaultLegendOptions","displayMode","List","placement","calcs","values","Percent","PieChartPanel","props","data","timeZone","fieldConfig","replaceVariables","width","height","options","id","theme","highlightedTitle","useSliceHighlightState","fieldDisplayValues","reduceOptions","series","hasFrames","getLegend","vizWidth","vizHeight","tooltip","pieType","displayLabels","displayValues","legendOptions","legend","Hidden","undefined","total","filter","reduce","legendItems","sort","a","b","isNaN","display","numeric","map","value","idx","hidden","field","custom","hideFrom","viz","label","title","color","yAxis","disabled","getItemKey","getDisplayValues","valuesToShow","includes","Value","push","text","fractionOfTotal","percentOfTotal","percent","defaults","noValue","toFixed","decimals","length","Hide","some","fd","view","dataFrame","setHighlightedTitle","eventBus","setHighlightedSlice","event","payload","dataId","resetHighlightedSlice","subs","add","getStream","subscribe","next","unsubscribe"],"sources":["/home/soula/grafana/public/app/plugins/panel/piechart/PieChartPanel.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\n\nimport {\n  DataHoverClearEvent,\n  DataHoverEvent,\n  FALLBACK_COLOR,\n  FieldDisplay,\n  formattedValueToString,\n  getFieldDisplayValues,\n  PanelProps,\n} from '@grafana/data';\nimport { PanelDataErrorView } from '@grafana/runtime';\nimport { LegendDisplayMode } from '@grafana/schema';\nimport {\n  SeriesVisibilityChangeBehavior,\n  usePanelContext,\n  useTheme2,\n  VizLayout,\n  VizLegend,\n  VizLegendItem,\n} from '@grafana/ui';\n\nimport { PieChart } from './PieChart';\nimport { PieChartLegendOptions, PieChartLegendValues, PieChartOptions } from './types';\nimport { filterDisplayItems, sumDisplayItemsReducer } from './utils';\n\nconst defaultLegendOptions: PieChartLegendOptions = {\n  displayMode: LegendDisplayMode.List,\n  placement: 'right',\n  calcs: [],\n  values: [PieChartLegendValues.Percent],\n};\n\ninterface Props extends PanelProps<PieChartOptions> {}\n\n/**\n * @beta\n */\nexport function PieChartPanel(props: Props) {\n  const { data, timeZone, fieldConfig, replaceVariables, width, height, options, id } = props;\n\n  const theme = useTheme2();\n  const highlightedTitle = useSliceHighlightState();\n  const fieldDisplayValues = getFieldDisplayValues({\n    fieldConfig,\n    reduceOptions: options.reduceOptions,\n    data: data.series,\n    theme: theme,\n    replaceVariables,\n    timeZone,\n  });\n\n  if (!hasFrames(fieldDisplayValues)) {\n    return <PanelDataErrorView panelId={id} fieldConfig={fieldConfig} data={data} />;\n  }\n\n  return (\n    <VizLayout width={width} height={height} legend={getLegend(props, fieldDisplayValues)}>\n      {(vizWidth: number, vizHeight: number) => {\n        return (\n          <PieChart\n            width={vizWidth}\n            height={vizHeight}\n            highlightedTitle={highlightedTitle}\n            fieldDisplayValues={fieldDisplayValues}\n            tooltipOptions={options.tooltip}\n            pieType={options.pieType}\n            displayLabels={options.displayLabels}\n          />\n        );\n      }}\n    </VizLayout>\n  );\n}\n\nfunction getLegend(props: Props, displayValues: FieldDisplay[]) {\n  const legendOptions = props.options.legend ?? defaultLegendOptions;\n\n  if (legendOptions.displayMode === LegendDisplayMode.Hidden) {\n    return undefined;\n  }\n  const total = displayValues.filter(filterDisplayItems).reduce(sumDisplayItemsReducer, 0);\n\n  const legendItems = displayValues\n    // Since the pie chart is always sorted, let's sort the legend as well.\n    .sort((a, b) => {\n      if (isNaN(a.display.numeric)) {\n        return 1;\n      } else if (isNaN(b.display.numeric)) {\n        return -1;\n      } else {\n        return b.display.numeric - a.display.numeric;\n      }\n    })\n    .map<VizLegendItem>((value, idx) => {\n      const hidden = value.field.custom.hideFrom.viz;\n      const display = value.display;\n      return {\n        label: display.title ?? '',\n        color: display.color ?? FALLBACK_COLOR,\n        yAxis: 1,\n        disabled: hidden,\n        getItemKey: () => (display.title ?? '') + idx,\n        getDisplayValues: () => {\n          const valuesToShow = legendOptions.values ?? [];\n          let displayValues = [];\n\n          if (valuesToShow.includes(PieChartLegendValues.Value)) {\n            displayValues.push({ numeric: display.numeric, text: formattedValueToString(display), title: 'Value' });\n          }\n\n          if (valuesToShow.includes(PieChartLegendValues.Percent)) {\n            const fractionOfTotal = hidden ? 0 : display.numeric / total;\n            const percentOfTotal = fractionOfTotal * 100;\n\n            displayValues.push({\n              numeric: fractionOfTotal,\n              percent: percentOfTotal,\n              text:\n                hidden || isNaN(fractionOfTotal)\n                  ? props.fieldConfig.defaults.noValue ?? '-'\n                  : percentOfTotal.toFixed(value.field.decimals ?? 0) + '%',\n              title: valuesToShow.length > 1 ? 'Percent' : '',\n            });\n          }\n\n          return displayValues;\n        },\n      };\n    });\n\n  return (\n    <VizLegend\n      items={legendItems}\n      seriesVisibilityChangeBehavior={SeriesVisibilityChangeBehavior.Hide}\n      placement={legendOptions.placement}\n      displayMode={legendOptions.displayMode}\n    />\n  );\n}\n\nfunction hasFrames(fieldDisplayValues: FieldDisplay[]) {\n  return fieldDisplayValues.some((fd) => fd.view?.dataFrame.length);\n}\n\nfunction useSliceHighlightState() {\n  const [highlightedTitle, setHighlightedTitle] = useState<string>();\n  const { eventBus } = usePanelContext();\n\n  useEffect(() => {\n    const setHighlightedSlice = (event: DataHoverEvent) => {\n      setHighlightedTitle(event.payload.dataId);\n    };\n\n    const resetHighlightedSlice = (event: DataHoverClearEvent) => {\n      setHighlightedTitle(undefined);\n    };\n\n    const subs = new Subscription();\n    subs.add(eventBus.getStream(DataHoverEvent).subscribe({ next: setHighlightedSlice }));\n    subs.add(eventBus.getStream(DataHoverClearEvent).subscribe({ next: resetHighlightedSlice }));\n\n    return () => {\n      subs.unsubscribe();\n    };\n  }, [setHighlightedTitle, eventBus]);\n\n  return highlightedTitle;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}