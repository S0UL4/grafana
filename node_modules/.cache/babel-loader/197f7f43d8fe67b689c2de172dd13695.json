{"ast":null,"code":"var _div;\n\nimport React from 'react';\nimport { rangeUtil } from '@grafana/data';\nimport { HorizontalGroup, Input, RadioButtonGroup } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GAPS_OPTIONS = [{\n  label: 'Never',\n  value: false\n}, {\n  label: 'Always',\n  value: true\n}, {\n  label: 'Threshold',\n  value: 3600000 // 1h\n\n}];\nexport const SpanNullsEditor = ({\n  value,\n  onChange\n}) => {\n  const isThreshold = typeof value === 'number';\n  const formattedTime = isThreshold ? rangeUtil.secondsToHms(value / 1000) : undefined;\n  GAPS_OPTIONS[2].value = isThreshold ? value : 3600000; // 1h\n\n  const checkAndUpdate = txt => {\n    let val = false;\n\n    if (txt) {\n      try {\n        val = rangeUtil.intervalToSeconds(txt) * 1000;\n      } catch (err) {\n        console.warn('ERROR', err);\n      }\n    }\n\n    onChange(val);\n  };\n\n  const handleEnterKey = e => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    checkAndUpdate(e.target.value);\n  };\n\n  const handleBlur = e => {\n    checkAndUpdate(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxs(HorizontalGroup, {\n    children: [/*#__PURE__*/_jsx(RadioButtonGroup, {\n      value: value,\n      options: GAPS_OPTIONS,\n      onChange: onChange\n    }), isThreshold && /*#__PURE__*/_jsx(Input, {\n      autoFocus: false,\n      placeholder: \"never\",\n      width: 10,\n      defaultValue: formattedTime,\n      onKeyDown: handleEnterKey,\n      onBlur: handleBlur,\n      prefix: _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        children: \"<\"\n      })),\n      spellCheck: false\n    })]\n  });\n};","map":{"version":3,"names":["React","rangeUtil","HorizontalGroup","Input","RadioButtonGroup","GAPS_OPTIONS","label","value","SpanNullsEditor","onChange","isThreshold","formattedTime","secondsToHms","undefined","checkAndUpdate","txt","val","intervalToSeconds","err","console","warn","handleEnterKey","e","key","target","handleBlur"],"sources":["/home/soula/grafana/public/app/plugins/panel/timeseries/SpanNullsEditor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { FieldOverrideEditorProps, rangeUtil, SelectableValue } from '@grafana/data';\nimport { HorizontalGroup, Input, RadioButtonGroup } from '@grafana/ui';\n\nconst GAPS_OPTIONS: Array<SelectableValue<boolean | number>> = [\n  {\n    label: 'Never',\n    value: false,\n  },\n  {\n    label: 'Always',\n    value: true,\n  },\n  {\n    label: 'Threshold',\n    value: 3600000, // 1h\n  },\n];\n\nexport const SpanNullsEditor: React.FC<FieldOverrideEditorProps<boolean | number, any>> = ({ value, onChange }) => {\n  const isThreshold = typeof value === 'number';\n  const formattedTime = isThreshold ? rangeUtil.secondsToHms((value as number) / 1000) : undefined;\n  GAPS_OPTIONS[2].value = isThreshold ? (value as number) : 3600000; // 1h\n\n  const checkAndUpdate = (txt: string) => {\n    let val: boolean | number = false;\n    if (txt) {\n      try {\n        val = rangeUtil.intervalToSeconds(txt) * 1000;\n      } catch (err) {\n        console.warn('ERROR', err);\n      }\n    }\n    onChange(val);\n  };\n\n  const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n    checkAndUpdate((e.target as any).value);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    checkAndUpdate(e.target.value);\n  };\n\n  return (\n    <HorizontalGroup>\n      <RadioButtonGroup value={value} options={GAPS_OPTIONS} onChange={onChange} />\n      {isThreshold && (\n        <Input\n          autoFocus={false}\n          placeholder=\"never\"\n          width={10}\n          defaultValue={formattedTime}\n          onKeyDown={handleEnterKey}\n          onBlur={handleBlur}\n          prefix={<div>&lt;</div>}\n          spellCheck={false}\n        />\n      )}\n    </HorizontalGroup>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAmCC,SAAnC,QAAqE,eAArE;AACA,SAASC,eAAT,EAA0BC,KAA1B,EAAiCC,gBAAjC,QAAyD,aAAzD;;;AAEA,MAAMC,YAAsD,GAAG,CAC7D;EACEC,KAAK,EAAE,OADT;EAEEC,KAAK,EAAE;AAFT,CAD6D,EAK7D;EACED,KAAK,EAAE,QADT;EAEEC,KAAK,EAAE;AAFT,CAL6D,EAS7D;EACED,KAAK,EAAE,WADT;EAEEC,KAAK,EAAE,OAFT,CAEkB;;AAFlB,CAT6D,CAA/D;AAeA,OAAO,MAAMC,eAA0E,GAAG,CAAC;EAAED,KAAF;EAASE;AAAT,CAAD,KAAyB;EACjH,MAAMC,WAAW,GAAG,OAAOH,KAAP,KAAiB,QAArC;EACA,MAAMI,aAAa,GAAGD,WAAW,GAAGT,SAAS,CAACW,YAAV,CAAwBL,KAAD,GAAoB,IAA3C,CAAH,GAAsDM,SAAvF;EACAR,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwBG,WAAW,GAAIH,KAAJ,GAAuB,OAA1D,CAHiH,CAG9C;;EAEnE,MAAMO,cAAc,GAAIC,GAAD,IAAiB;IACtC,IAAIC,GAAqB,GAAG,KAA5B;;IACA,IAAID,GAAJ,EAAS;MACP,IAAI;QACFC,GAAG,GAAGf,SAAS,CAACgB,iBAAV,CAA4BF,GAA5B,IAAmC,IAAzC;MACD,CAFD,CAEE,OAAOG,GAAP,EAAY;QACZC,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsBF,GAAtB;MACD;IACF;;IACDT,QAAQ,CAACO,GAAD,CAAR;EACD,CAVD;;EAYA,MAAMK,cAAc,GAAIC,CAAD,IAA8C;IACnE,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACrB;IACD;;IACDT,cAAc,CAAEQ,CAAC,CAACE,MAAH,CAAkBjB,KAAnB,CAAd;EACD,CALD;;EAOA,MAAMkB,UAAU,GAAIH,CAAD,IAA2C;IAC5DR,cAAc,CAACQ,CAAC,CAACE,MAAF,CAASjB,KAAV,CAAd;EACD,CAFD;;EAIA,oBACE,MAAC,eAAD;IAAA,wBACE,KAAC,gBAAD;MAAkB,KAAK,EAAEA,KAAzB;MAAgC,OAAO,EAAEF,YAAzC;MAAuD,QAAQ,EAAEI;IAAjE,EADF,EAEGC,WAAW,iBACV,KAAC,KAAD;MACE,SAAS,EAAE,KADb;MAEE,WAAW,EAAC,OAFd;MAGE,KAAK,EAAE,EAHT;MAIE,YAAY,EAAEC,aAJhB;MAKE,SAAS,EAAEU,cALb;MAME,MAAM,EAAEI,UANV;MAOE,MAAM,+BAAE;QAAA;MAAA,EAAF,CAPR;MAQE,UAAU,EAAE;IARd,EAHJ;EAAA,EADF;AAiBD,CA7CM"},"metadata":{},"sourceType":"module"}