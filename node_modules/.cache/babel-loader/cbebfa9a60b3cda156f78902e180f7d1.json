{"ast":null,"code":"var _Icon, _IoIosArrowDown, _IoIosArrowRight, _strong;\n\n// Copyright (c) 2019 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css, cx } from '@emotion/css';\nimport * as React from 'react';\nimport IoIosArrowDown from 'react-icons/lib/io/ios-arrow-down';\nimport IoIosArrowRight from 'react-icons/lib/io/ios-arrow-right';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../../Theme';\nimport { uAlignIcon, ubMb1 } from '../../uberUtilityStyles';\nimport ReferenceLink from '../../url/ReferenceLink';\nimport AccordianKeyValues from './AccordianKeyValues';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst getStyles = theme => {\n  return {\n    AccordianReferenceItem: css`\n      border-bottom: 1px solid ${autoColor(theme, '#d8d8d8')};\n    `,\n    AccordianKeyValues: css`\n      margin-left: 10px;\n    `,\n    AccordianReferences: css`\n      label: AccordianReferences;\n      border: 1px solid ${autoColor(theme, '#d8d8d8')};\n      position: relative;\n      margin-bottom: 0.25rem;\n    `,\n    AccordianReferencesHeader: css`\n      label: AccordianReferencesHeader;\n      background: ${autoColor(theme, '#e4e4e4')};\n      color: inherit;\n      display: block;\n      padding: 0.25rem 0.5rem;\n      &:hover {\n        background: ${autoColor(theme, '#dadada')};\n      }\n    `,\n    AccordianReferencesContent: css`\n      label: AccordianReferencesContent;\n      background: ${autoColor(theme, '#f0f0f0')};\n      border-top: 1px solid ${autoColor(theme, '#d8d8d8')};\n      padding: 0.5rem 0.5rem 0.25rem 0.5rem;\n    `,\n    AccordianReferencesFooter: css`\n      label: AccordianReferencesFooter;\n      color: ${autoColor(theme, '#999')};\n    `,\n    ReferencesList: css`\n      background: #fff;\n      border: 1px solid #ddd;\n      margin-bottom: 0.7em;\n      max-height: 450px;\n      overflow: auto;\n    `,\n    list: css`\n      width: 100%;\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      background: #fff;\n    `,\n    itemContent: css`\n      padding: 0.25rem 0.5rem;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n    `,\n    item: css`\n      &:nth-child(2n) {\n        background: #f5f5f5;\n      }\n    `,\n    debugInfo: css`\n      letter-spacing: 0.25px;\n      margin: 0.5em 0 0;\n      flex-wrap: wrap;\n      display: flex;\n      justify-content: flex-end;\n    `,\n    debugLabel: css`\n      margin: 0 5px 0 5px;\n      &::before {\n        color: #bbb;\n        content: attr(data-label);\n      }\n    `,\n    serviceName: css`\n      margin-right: 8px;\n    `,\n    title: css`\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    `\n  };\n};\n\n// export for test\nexport function References(props) {\n  const {\n    data,\n    createFocusSpanLink,\n    openedItems,\n    onItemToggle,\n    interactive\n  } = props;\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.AccordianReferencesContent,\n    children: data.map((reference, i) => {\n      var _reference$tags;\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: i < data.length - 1 ? styles.AccordianReferenceItem : undefined,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.item,\n          children: /*#__PURE__*/_jsx(ReferenceLink, {\n            reference: reference,\n            createFocusSpanLink: createFocusSpanLink,\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: styles.itemContent,\n              children: [reference.span ? /*#__PURE__*/_jsxs(\"span\", {\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  className: cx('span-svc-name', styles.serviceName),\n                  children: reference.span.process.serviceName\n                }), /*#__PURE__*/_jsx(\"small\", {\n                  className: \"endpoint-name\",\n                  children: reference.span.operationName\n                })]\n              }) : /*#__PURE__*/_jsxs(\"span\", {\n                className: cx('span-svc-name', styles.title),\n                children: [\"View Linked Span \", _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n                  name: \"external-link-alt\"\n                }))]\n              }), /*#__PURE__*/_jsxs(\"small\", {\n                className: styles.debugInfo,\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  className: styles.debugLabel,\n                  \"data-label\": \"TraceID:\",\n                  children: reference.traceID\n                }), /*#__PURE__*/_jsx(\"span\", {\n                  className: styles.debugLabel,\n                  \"data-label\": \"SpanID:\",\n                  children: reference.spanID\n                })]\n              })]\n            })\n          })\n        }, `${reference.spanID}`), !!((_reference$tags = reference.tags) !== null && _reference$tags !== void 0 && _reference$tags.length) && /*#__PURE__*/_jsx(\"div\", {\n          className: styles.AccordianKeyValues,\n          children: /*#__PURE__*/_jsx(AccordianKeyValues, {\n            className: i < data.length - 1 ? ubMb1 : null,\n            data: reference.tags || [],\n            highContrast: true,\n            interactive: interactive,\n            isOpen: openedItems ? openedItems.has(reference) : false,\n            label: 'attributes',\n            linksGetter: null,\n            onToggle: interactive && onItemToggle ? () => onItemToggle(reference) : null\n          })\n        })]\n      }, i);\n    })\n  });\n}\n\nconst AccordianReferences = ({\n  data,\n  interactive = true,\n  isOpen,\n  onToggle,\n  onItemToggle,\n  openedItems,\n  createFocusSpanLink\n}) => {\n  const isEmpty = !Array.isArray(data) || !data.length;\n  let arrow = null;\n  let HeaderComponent = 'span';\n  let headerProps = null;\n\n  if (interactive) {\n    arrow = isOpen ? _IoIosArrowDown || (_IoIosArrowDown = /*#__PURE__*/_jsx(IoIosArrowDown, {\n      className: uAlignIcon\n    })) : _IoIosArrowRight || (_IoIosArrowRight = /*#__PURE__*/_jsx(IoIosArrowRight, {\n      className: uAlignIcon\n    }));\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: isEmpty ? null : onToggle,\n      role: 'switch'\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.AccordianReferences,\n    children: [/*#__PURE__*/_jsxs(HeaderComponent, Object.assign({\n      className: styles.AccordianReferencesHeader\n    }, headerProps, {\n      children: [arrow, _strong || (_strong = /*#__PURE__*/_jsx(\"strong\", {\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: \"References\"\n        })\n      })), ' ', \"(\", data.length, \")\"]\n    })), isOpen && /*#__PURE__*/_jsx(References, {\n      data: data,\n      openedItems: openedItems,\n      createFocusSpanLink: createFocusSpanLink,\n      onItemToggle: onItemToggle,\n      interactive: interactive\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(AccordianReferences);","map":{"version":3,"names":["css","cx","React","IoIosArrowDown","IoIosArrowRight","Icon","useStyles2","autoColor","uAlignIcon","ubMb1","ReferenceLink","AccordianKeyValues","getStyles","theme","AccordianReferenceItem","AccordianReferences","AccordianReferencesHeader","AccordianReferencesContent","AccordianReferencesFooter","ReferencesList","list","itemContent","item","debugInfo","debugLabel","serviceName","title","References","props","data","createFocusSpanLink","openedItems","onItemToggle","interactive","styles","map","reference","i","length","undefined","span","process","operationName","traceID","spanID","tags","has","isOpen","onToggle","isEmpty","Array","isArray","arrow","HeaderComponent","headerProps","onClick","role","memo"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanDetail/AccordianReferences.tsx"],"sourcesContent":["// Copyright (c) 2019 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, cx } from '@emotion/css';\nimport * as React from 'react';\nimport IoIosArrowDown from 'react-icons/lib/io/ios-arrow-down';\nimport IoIosArrowRight from 'react-icons/lib/io/ios-arrow-right';\n\nimport { Field, GrafanaTheme2, LinkModel } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TraceSpanReference } from '../../types/trace';\nimport { uAlignIcon, ubMb1 } from '../../uberUtilityStyles';\nimport ReferenceLink from '../../url/ReferenceLink';\n\nimport AccordianKeyValues from './AccordianKeyValues';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    AccordianReferenceItem: css`\n      border-bottom: 1px solid ${autoColor(theme, '#d8d8d8')};\n    `,\n    AccordianKeyValues: css`\n      margin-left: 10px;\n    `,\n    AccordianReferences: css`\n      label: AccordianReferences;\n      border: 1px solid ${autoColor(theme, '#d8d8d8')};\n      position: relative;\n      margin-bottom: 0.25rem;\n    `,\n    AccordianReferencesHeader: css`\n      label: AccordianReferencesHeader;\n      background: ${autoColor(theme, '#e4e4e4')};\n      color: inherit;\n      display: block;\n      padding: 0.25rem 0.5rem;\n      &:hover {\n        background: ${autoColor(theme, '#dadada')};\n      }\n    `,\n    AccordianReferencesContent: css`\n      label: AccordianReferencesContent;\n      background: ${autoColor(theme, '#f0f0f0')};\n      border-top: 1px solid ${autoColor(theme, '#d8d8d8')};\n      padding: 0.5rem 0.5rem 0.25rem 0.5rem;\n    `,\n    AccordianReferencesFooter: css`\n      label: AccordianReferencesFooter;\n      color: ${autoColor(theme, '#999')};\n    `,\n    ReferencesList: css`\n      background: #fff;\n      border: 1px solid #ddd;\n      margin-bottom: 0.7em;\n      max-height: 450px;\n      overflow: auto;\n    `,\n    list: css`\n      width: 100%;\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      background: #fff;\n    `,\n    itemContent: css`\n      padding: 0.25rem 0.5rem;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n    `,\n    item: css`\n      &:nth-child(2n) {\n        background: #f5f5f5;\n      }\n    `,\n    debugInfo: css`\n      letter-spacing: 0.25px;\n      margin: 0.5em 0 0;\n      flex-wrap: wrap;\n      display: flex;\n      justify-content: flex-end;\n    `,\n    debugLabel: css`\n      margin: 0 5px 0 5px;\n      &::before {\n        color: #bbb;\n        content: attr(data-label);\n      }\n    `,\n    serviceName: css`\n      margin-right: 8px;\n    `,\n    title: css`\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    `,\n  };\n};\n\ntype AccordianReferencesProps = {\n  data: TraceSpanReference[];\n  highContrast?: boolean;\n  interactive?: boolean;\n  isOpen: boolean;\n  openedItems?: Set<TraceSpanReference>;\n  onItemToggle?: (reference: TraceSpanReference) => void;\n  onToggle?: null | (() => void);\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\ntype ReferenceItemProps = {\n  data: TraceSpanReference[];\n  interactive?: boolean;\n  openedItems?: Set<TraceSpanReference>;\n  onItemToggle?: (reference: TraceSpanReference) => void;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\n// export for test\nexport function References(props: ReferenceItemProps) {\n  const { data, createFocusSpanLink, openedItems, onItemToggle, interactive } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.AccordianReferencesContent}>\n      {data.map((reference, i) => (\n        <div className={i < data.length - 1 ? styles.AccordianReferenceItem : undefined} key={i}>\n          <div className={styles.item} key={`${reference.spanID}`}>\n            <ReferenceLink reference={reference} createFocusSpanLink={createFocusSpanLink}>\n              <span className={styles.itemContent}>\n                {reference.span ? (\n                  <span>\n                    <span className={cx('span-svc-name', styles.serviceName)}>\n                      {reference.span.process.serviceName}\n                    </span>\n                    <small className=\"endpoint-name\">{reference.span.operationName}</small>\n                  </span>\n                ) : (\n                  <span className={cx('span-svc-name', styles.title)}>\n                    View Linked Span <Icon name=\"external-link-alt\" />\n                  </span>\n                )}\n                <small className={styles.debugInfo}>\n                  <span className={styles.debugLabel} data-label=\"TraceID:\">\n                    {reference.traceID}\n                  </span>\n                  <span className={styles.debugLabel} data-label=\"SpanID:\">\n                    {reference.spanID}\n                  </span>\n                </small>\n              </span>\n            </ReferenceLink>\n          </div>\n          {!!reference.tags?.length && (\n            <div className={styles.AccordianKeyValues}>\n              <AccordianKeyValues\n                className={i < data.length - 1 ? ubMb1 : null}\n                data={reference.tags || []}\n                highContrast\n                interactive={interactive}\n                isOpen={openedItems ? openedItems.has(reference) : false}\n                label={'attributes'}\n                linksGetter={null}\n                onToggle={interactive && onItemToggle ? () => onItemToggle(reference) : null}\n              />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst AccordianReferences: React.FC<AccordianReferencesProps> = ({\n  data,\n  interactive = true,\n  isOpen,\n  onToggle,\n  onItemToggle,\n  openedItems,\n  createFocusSpanLink,\n}) => {\n  const isEmpty = !Array.isArray(data) || !data.length;\n  let arrow: React.ReactNode | null = null;\n  let HeaderComponent: 'span' | 'a' = 'span';\n  let headerProps: {} | null = null;\n  if (interactive) {\n    arrow = isOpen ? <IoIosArrowDown className={uAlignIcon} /> : <IoIosArrowRight className={uAlignIcon} />;\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: isEmpty ? null : onToggle,\n      role: 'switch',\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={styles.AccordianReferences}>\n      <HeaderComponent className={styles.AccordianReferencesHeader} {...headerProps}>\n        {arrow}\n        <strong>\n          <span>References</span>\n        </strong>{' '}\n        ({data.length})\n      </HeaderComponent>\n      {isOpen && (\n        <References\n          data={data}\n          openedItems={openedItems}\n          createFocusSpanLink={createFocusSpanLink}\n          onItemToggle={onItemToggle}\n          interactive={interactive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(AccordianReferences);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}