{"ast":null,"code":"const _excluded = [\"refId\"];\n\nvar _Alert;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { dateTime, urlUtil } from '@grafana/data';\nimport { config, getDataSourceSrv, PanelRenderer } from '@grafana/runtime';\nimport { Alert, CodeEditor, DateTimePicker, LinkButton, useStyles2, useTheme2 } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { AccessControlAction } from 'app/types';\nimport { TABLE, TIMESERIES } from '../../utils/constants';\nimport { Authorize } from '../Authorize';\nimport { PanelPluginsButtonGroup } from '../PanelPluginsButtonGroup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst headerHeight = 4;\nexport function RuleViewerVisualization(props) {\n  var _PanelPluginsButtonGr;\n\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const {\n    data,\n    query,\n    onChangeQuery\n  } = props;\n  const defaultPanel = isExpressionQuery(query.model) ? TABLE : TIMESERIES;\n  const [panel, setPanel] = useState(defaultPanel);\n  const dsSettings = getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n  const relativeTimeRange = query.relativeTimeRange;\n  const [options, setOptions] = useState({\n    frameIndex: 0,\n    showHeader: true\n  });\n  const onTimeChange = useCallback(newDateTime => {\n    const now = dateTime().unix() - newDateTime.unix();\n\n    if (relativeTimeRange) {\n      const interval = relativeTimeRange.from - relativeTimeRange.to;\n      onChangeQuery(Object.assign({}, query, {\n        relativeTimeRange: {\n          from: now + interval,\n          to: now\n        }\n      }));\n    }\n  }, [onChangeQuery, query, relativeTimeRange]);\n  const setDateTime = useCallback(relativeTimeRangeTo => {\n    return relativeTimeRangeTo === 0 ? dateTime() : dateTime().subtract(relativeTimeRangeTo, 'seconds');\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  if (!dsSettings) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.content,\n      children: [_Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n        title: \"Could not find datasource for query\"\n      })), /*#__PURE__*/_jsx(CodeEditor, {\n        width: \"100%\",\n        height: \"250px\",\n        language: \"json\",\n        showLineNumbers: false,\n        showMiniMap: false,\n        value: JSON.stringify(query, null, '\\t'),\n        readOnly: true\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.content,\n    children: /*#__PURE__*/_jsx(AutoSizer, {\n      children: ({\n        width,\n        height\n      }) => {\n        return /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width,\n            height\n          },\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.header,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [`Query ${query.refId}`, /*#__PURE__*/_jsxs(\"span\", {\n                className: styles.dataSource,\n                children: [\"(\", dsSettings.name, \")\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.actions,\n              children: [!isExpressionQuery(query.model) && relativeTimeRange ? /*#__PURE__*/_jsx(DateTimePicker, {\n                date: setDateTime(relativeTimeRange.to),\n                onChange: onTimeChange,\n                maxDate: new Date()\n              }) : null, _PanelPluginsButtonGr || (_PanelPluginsButtonGr = /*#__PURE__*/_jsx(PanelPluginsButtonGroup, {\n                onChange: setPanel,\n                value: panel,\n                size: \"md\"\n              })), /*#__PURE__*/_jsx(Authorize, {\n                actions: [AccessControlAction.DataSourcesExplore],\n                children: !isExpressionQuery(query.model) && /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: styles.spacing\n                  }), /*#__PURE__*/_jsx(LinkButton, {\n                    size: \"md\",\n                    variant: \"secondary\",\n                    icon: \"compass\",\n                    target: \"_blank\",\n                    href: createExploreLink(dsSettings, query),\n                    children: \"View in Explore\"\n                  })]\n                })\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(PanelRenderer, {\n            height: height - theme.spacing.gridSize * headerHeight,\n            width: width,\n            data: data,\n            pluginId: panel,\n            title: \"\",\n            onOptionsChange: setOptions,\n            options: options\n          })]\n        });\n      }\n    })\n  });\n}\n\nfunction createExploreLink(settings, query) {\n  const {\n    name\n  } = settings;\n\n  const _query$model = query.model,\n        rest = _objectWithoutPropertiesLoose(_query$model, _excluded);\n\n  const queryParams = Object.assign({}, rest, {\n    datasource: name\n  });\n  return urlUtil.renderUrl(`${config.appSubUrl}/explore`, {\n    left: JSON.stringify(['now-1h', 'now', name, queryParams])\n  });\n}\n\nconst getStyles = theme => {\n  return {\n    content: css`\n      width: 100%;\n      height: 250px;\n    `,\n    header: css`\n      height: ${theme.spacing(headerHeight)};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      white-space: nowrap;\n    `,\n    refId: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      color: ${theme.colors.text.link};\n      overflow: hidden;\n    `,\n    dataSource: css`\n      margin-left: ${theme.spacing(1)};\n      font-style: italic;\n      color: ${theme.colors.text.secondary};\n    `,\n    actions: css`\n      display: flex;\n      align-items: center;\n    `,\n    spacing: css`\n      padding: ${theme.spacing(0, 1, 0, 0)};\n    `,\n    errorMessage: css`\n      white-space: pre-wrap;\n    `\n  };\n};","map":{"version":3,"names":["css","React","useCallback","useState","AutoSizer","dateTime","urlUtil","config","getDataSourceSrv","PanelRenderer","Alert","CodeEditor","DateTimePicker","LinkButton","useStyles2","useTheme2","isExpressionQuery","AccessControlAction","TABLE","TIMESERIES","Authorize","PanelPluginsButtonGroup","headerHeight","RuleViewerVisualization","props","theme","styles","getStyles","data","query","onChangeQuery","defaultPanel","model","panel","setPanel","dsSettings","getInstanceSettings","datasourceUid","relativeTimeRange","options","setOptions","frameIndex","showHeader","onTimeChange","newDateTime","now","unix","interval","from","to","setDateTime","relativeTimeRangeTo","subtract","content","JSON","stringify","width","height","header","refId","dataSource","name","actions","Date","DataSourcesExplore","spacing","createExploreLink","gridSize","settings","rest","queryParams","datasource","renderUrl","appSubUrl","left","typography","fontWeightMedium","colors","text","link","secondary","errorMessage"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-viewer/RuleViewerVisualization.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { DataSourceInstanceSettings, DateTime, dateTime, GrafanaTheme2, PanelData, urlUtil } from '@grafana/data';\nimport { config, getDataSourceSrv, PanelRenderer } from '@grafana/runtime';\nimport { Alert, CodeEditor, DateTimePicker, LinkButton, useStyles2, useTheme2 } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { PanelOptions } from 'app/plugins/panel/table/models.gen';\nimport { AccessControlAction } from 'app/types';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { TABLE, TIMESERIES } from '../../utils/constants';\nimport { Authorize } from '../Authorize';\nimport { PanelPluginsButtonGroup, SupportedPanelPlugins } from '../PanelPluginsButtonGroup';\n\ntype RuleViewerVisualizationProps = {\n  data?: PanelData;\n  query: AlertQuery;\n  onChangeQuery: (query: AlertQuery) => void;\n};\n\nconst headerHeight = 4;\n\nexport function RuleViewerVisualization(props: RuleViewerVisualizationProps): JSX.Element | null {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const { data, query, onChangeQuery } = props;\n  const defaultPanel = isExpressionQuery(query.model) ? TABLE : TIMESERIES;\n  const [panel, setPanel] = useState<SupportedPanelPlugins>(defaultPanel);\n  const dsSettings = getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n  const relativeTimeRange = query.relativeTimeRange;\n  const [options, setOptions] = useState<PanelOptions>({\n    frameIndex: 0,\n    showHeader: true,\n  });\n\n  const onTimeChange = useCallback(\n    (newDateTime: DateTime) => {\n      const now = dateTime().unix() - newDateTime.unix();\n\n      if (relativeTimeRange) {\n        const interval = relativeTimeRange.from - relativeTimeRange.to;\n        onChangeQuery({\n          ...query,\n          relativeTimeRange: { from: now + interval, to: now },\n        });\n      }\n    },\n    [onChangeQuery, query, relativeTimeRange]\n  );\n\n  const setDateTime = useCallback((relativeTimeRangeTo: number) => {\n    return relativeTimeRangeTo === 0 ? dateTime() : dateTime().subtract(relativeTimeRangeTo, 'seconds');\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  if (!dsSettings) {\n    return (\n      <div className={styles.content}>\n        <Alert title=\"Could not find datasource for query\" />\n        <CodeEditor\n          width=\"100%\"\n          height=\"250px\"\n          language=\"json\"\n          showLineNumbers={false}\n          showMiniMap={false}\n          value={JSON.stringify(query, null, '\\t')}\n          readOnly={true}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.content}>\n      <AutoSizer>\n        {({ width, height }) => {\n          return (\n            <div style={{ width, height }}>\n              <div className={styles.header}>\n                <div>\n                  {`Query ${query.refId}`}\n                  <span className={styles.dataSource}>({dsSettings.name})</span>\n                </div>\n                <div className={styles.actions}>\n                  {!isExpressionQuery(query.model) && relativeTimeRange ? (\n                    <DateTimePicker\n                      date={setDateTime(relativeTimeRange.to)}\n                      onChange={onTimeChange}\n                      maxDate={new Date()}\n                    />\n                  ) : null}\n                  <PanelPluginsButtonGroup onChange={setPanel} value={panel} size=\"md\" />\n                  <Authorize actions={[AccessControlAction.DataSourcesExplore]}>\n                    {!isExpressionQuery(query.model) && (\n                      <>\n                        <div className={styles.spacing} />\n                        <LinkButton\n                          size=\"md\"\n                          variant=\"secondary\"\n                          icon=\"compass\"\n                          target=\"_blank\"\n                          href={createExploreLink(dsSettings, query)}\n                        >\n                          View in Explore\n                        </LinkButton>\n                      </>\n                    )}\n                  </Authorize>\n                </div>\n              </div>\n              <PanelRenderer\n                height={height - theme.spacing.gridSize * headerHeight}\n                width={width}\n                data={data}\n                pluginId={panel}\n                title=\"\"\n                onOptionsChange={setOptions}\n                options={options}\n              />\n            </div>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n}\n\nfunction createExploreLink(settings: DataSourceInstanceSettings, query: AlertQuery): string {\n  const { name } = settings;\n  const { refId, ...rest } = query.model;\n  const queryParams = { ...rest, datasource: name };\n\n  return urlUtil.renderUrl(`${config.appSubUrl}/explore`, {\n    left: JSON.stringify(['now-1h', 'now', name, queryParams]),\n  });\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    content: css`\n      width: 100%;\n      height: 250px;\n    `,\n    header: css`\n      height: ${theme.spacing(headerHeight)};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      white-space: nowrap;\n    `,\n    refId: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      color: ${theme.colors.text.link};\n      overflow: hidden;\n    `,\n    dataSource: css`\n      margin-left: ${theme.spacing(1)};\n      font-style: italic;\n      color: ${theme.colors.text.secondary};\n    `,\n    actions: css`\n      display: flex;\n      align-items: center;\n    `,\n    spacing: css`\n      padding: ${theme.spacing(0, 1, 0, 0)};\n    `,\n    errorMessage: css`\n      white-space: pre-wrap;\n    `,\n  };\n};\n"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,SAA+CC,QAA/C,EAAmFC,OAAnF,QAAkG,eAAlG;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,aAAnC,QAAwD,kBAAxD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,cAA5B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAoEC,SAApE,QAAqF,aAArF;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,SAASC,mBAAT,QAAoC,WAApC;AAGA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,uBAAlC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,uBAAT,QAA+D,4BAA/D;;;;AAQA,MAAMC,YAAY,GAAG,CAArB;AAEA,OAAO,SAASC,uBAAT,CAAiCC,KAAjC,EAA0F;EAAA;;EAC/F,MAAMC,KAAK,GAAGV,SAAS,EAAvB;EACA,MAAMW,MAAM,GAAGZ,UAAU,CAACa,SAAD,CAAzB;EACA,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAAiCN,KAAvC;EACA,MAAMO,YAAY,GAAGf,iBAAiB,CAACa,KAAK,CAACG,KAAP,CAAjB,GAAiCd,KAAjC,GAAyCC,UAA9D;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAwB4B,YAAxB,CAAlC;EACA,MAAMI,UAAU,GAAG3B,gBAAgB,GAAG4B,mBAAnB,CAAuCP,KAAK,CAACQ,aAA7C,CAAnB;EACA,MAAMC,iBAAiB,GAAGT,KAAK,CAACS,iBAAhC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAe;IACnDsC,UAAU,EAAE,CADuC;IAEnDC,UAAU,EAAE;EAFuC,CAAf,CAAtC;EAKA,MAAMC,YAAY,GAAGzC,WAAW,CAC7B0C,WAAD,IAA2B;IACzB,MAAMC,GAAG,GAAGxC,QAAQ,GAAGyC,IAAX,KAAoBF,WAAW,CAACE,IAAZ,EAAhC;;IAEA,IAAIR,iBAAJ,EAAuB;MACrB,MAAMS,QAAQ,GAAGT,iBAAiB,CAACU,IAAlB,GAAyBV,iBAAiB,CAACW,EAA5D;MACAnB,aAAa,mBACRD,KADQ;QAEXS,iBAAiB,EAAE;UAAEU,IAAI,EAAEH,GAAG,GAAGE,QAAd;UAAwBE,EAAE,EAAEJ;QAA5B;MAFR,GAAb;IAID;EACF,CAX6B,EAY9B,CAACf,aAAD,EAAgBD,KAAhB,EAAuBS,iBAAvB,CAZ8B,CAAhC;EAeA,MAAMY,WAAW,GAAGhD,WAAW,CAAEiD,mBAAD,IAAiC;IAC/D,OAAOA,mBAAmB,KAAK,CAAxB,GAA4B9C,QAAQ,EAApC,GAAyCA,QAAQ,GAAG+C,QAAX,CAAoBD,mBAApB,EAAyC,SAAzC,CAAhD;EACD,CAF8B,EAE5B,EAF4B,CAA/B;;EAIA,IAAI,CAACvB,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EAED,IAAI,CAACO,UAAL,EAAiB;IACf,oBACE;MAAK,SAAS,EAAET,MAAM,CAAC2B,OAAvB;MAAA,4CACE,KAAC,KAAD;QAAO,KAAK,EAAC;MAAb,EADF,gBAEE,KAAC,UAAD;QACE,KAAK,EAAC,MADR;QAEE,MAAM,EAAC,OAFT;QAGE,QAAQ,EAAC,MAHX;QAIE,eAAe,EAAE,KAJnB;QAKE,WAAW,EAAE,KALf;QAME,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe1B,KAAf,EAAsB,IAAtB,EAA4B,IAA5B,CANT;QAOE,QAAQ,EAAE;MAPZ,EAFF;IAAA,EADF;EAcD;;EAED,oBACE;IAAK,SAAS,EAAEH,MAAM,CAAC2B,OAAvB;IAAA,uBACE,KAAC,SAAD;MAAA,UACG,CAAC;QAAEG,KAAF;QAASC;MAAT,CAAD,KAAuB;QACtB,oBACE;UAAK,KAAK,EAAE;YAAED,KAAF;YAASC;UAAT,CAAZ;UAAA,wBACE;YAAK,SAAS,EAAE/B,MAAM,CAACgC,MAAvB;YAAA,wBACE;cAAA,WACI,SAAQ7B,KAAK,CAAC8B,KAAM,EADxB,eAEE;gBAAM,SAAS,EAAEjC,MAAM,CAACkC,UAAxB;gBAAA,gBAAsCzB,UAAU,CAAC0B,IAAjD;cAAA,EAFF;YAAA,EADF,eAKE;cAAK,SAAS,EAAEnC,MAAM,CAACoC,OAAvB;cAAA,WACG,CAAC9C,iBAAiB,CAACa,KAAK,CAACG,KAAP,CAAlB,IAAmCM,iBAAnC,gBACC,KAAC,cAAD;gBACE,IAAI,EAAEY,WAAW,CAACZ,iBAAiB,CAACW,EAAnB,CADnB;gBAEE,QAAQ,EAAEN,YAFZ;gBAGE,OAAO,EAAE,IAAIoB,IAAJ;cAHX,EADD,GAMG,IAPN,iEAQE,KAAC,uBAAD;gBAAyB,QAAQ,EAAE7B,QAAnC;gBAA6C,KAAK,EAAED,KAApD;gBAA2D,IAAI,EAAC;cAAhE,EARF,gBASE,KAAC,SAAD;gBAAW,OAAO,EAAE,CAAChB,mBAAmB,CAAC+C,kBAArB,CAApB;gBAAA,UACG,CAAChD,iBAAiB,CAACa,KAAK,CAACG,KAAP,CAAlB,iBACC;kBAAA,wBACE;oBAAK,SAAS,EAAEN,MAAM,CAACuC;kBAAvB,EADF,eAEE,KAAC,UAAD;oBACE,IAAI,EAAC,IADP;oBAEE,OAAO,EAAC,WAFV;oBAGE,IAAI,EAAC,SAHP;oBAIE,MAAM,EAAC,QAJT;oBAKE,IAAI,EAAEC,iBAAiB,CAAC/B,UAAD,EAAaN,KAAb,CALzB;oBAAA;kBAAA,EAFF;gBAAA;cAFJ,EATF;YAAA,EALF;UAAA,EADF,eAiCE,KAAC,aAAD;YACE,MAAM,EAAE4B,MAAM,GAAGhC,KAAK,CAACwC,OAAN,CAAcE,QAAd,GAAyB7C,YAD5C;YAEE,KAAK,EAAEkC,KAFT;YAGE,IAAI,EAAE5B,IAHR;YAIE,QAAQ,EAAEK,KAJZ;YAKE,KAAK,EAAC,EALR;YAME,eAAe,EAAEO,UANnB;YAOE,OAAO,EAAED;UAPX,EAjCF;QAAA,EADF;MA6CD;IA/CH;EADF,EADF;AAqDD;;AAED,SAAS2B,iBAAT,CAA2BE,QAA3B,EAAiEvC,KAAjE,EAA4F;EAC1F,MAAM;IAAEgC;EAAF,IAAWO,QAAjB;;EACA,qBAA2BvC,KAAK,CAACG,KAAjC;EAAA,MAAkBqC,IAAlB;;EACA,MAAMC,WAAW,qBAAQD,IAAR;IAAcE,UAAU,EAAEV;EAA1B,EAAjB;EAEA,OAAOvD,OAAO,CAACkE,SAAR,CAAmB,GAAEjE,MAAM,CAACkE,SAAU,UAAtC,EAAiD;IACtDC,IAAI,EAAEpB,IAAI,CAACC,SAAL,CAAe,CAAC,QAAD,EAAW,KAAX,EAAkBM,IAAlB,EAAwBS,WAAxB,CAAf;EADgD,CAAjD,CAAP;AAGD;;AAED,MAAM3C,SAAS,GAAIF,KAAD,IAA0B;EAC1C,OAAO;IACL4B,OAAO,EAAErD,GAAI;AACjB;AACA;AACA,KAJS;IAKL0D,MAAM,EAAE1D,GAAI;AAChB,gBAAgByB,KAAK,CAACwC,OAAN,CAAc3C,YAAd,CAA4B;AAC5C;AACA;AACA;AACA;AACA,KAXS;IAYLqC,KAAK,EAAE3D,GAAI;AACf,qBAAqByB,KAAK,CAACkD,UAAN,CAAiBC,gBAAiB;AACvD,eAAenD,KAAK,CAACoD,MAAN,CAAaC,IAAb,CAAkBC,IAAK;AACtC;AACA,KAhBS;IAiBLnB,UAAU,EAAE5D,GAAI;AACpB,qBAAqByB,KAAK,CAACwC,OAAN,CAAc,CAAd,CAAiB;AACtC;AACA,eAAexC,KAAK,CAACoD,MAAN,CAAaC,IAAb,CAAkBE,SAAU;AAC3C,KArBS;IAsBLlB,OAAO,EAAE9D,GAAI;AACjB;AACA;AACA,KAzBS;IA0BLiE,OAAO,EAAEjE,GAAI;AACjB,iBAAiByB,KAAK,CAACwC,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAA0B;AAC3C,KA5BS;IA6BLgB,YAAY,EAAEjF,GAAI;AACtB;AACA;EA/BS,CAAP;AAiCD,CAlCD"},"metadata":{},"sourceType":"module"}