{"ast":null,"code":"import { default as calculateSize } from 'calculate-size';\nimport { CompletionItemKind } from '../types/completion';\nexport const flattenGroupItems = groupedItems => {\n  return groupedItems.reduce((all, {\n    items,\n    label\n  }) => {\n    all.push({\n      label,\n      kind: CompletionItemKind.GroupTitle\n    });\n    return items.reduce((all, item) => {\n      all.push(item);\n      return all;\n    }, all);\n  }, []);\n};\nexport const calculateLongestLabel = allItems => {\n  return allItems.reduce((longest, current) => {\n    return longest.length < current.label.length ? current.label : longest;\n  }, '');\n};\nexport const calculateListSizes = (theme, allItems, longestLabel) => {\n  const size = calculateSize(longestLabel, {\n    font: theme.typography.fontFamily.monospace,\n    fontSize: theme.typography.size.sm,\n    fontWeight: 'normal'\n  });\n  const listWidth = calculateListWidth(size.width, theme);\n  const itemHeight = calculateItemHeight(size.height, theme);\n  const listHeight = calculateListHeight(itemHeight, allItems);\n  return {\n    listWidth,\n    listHeight,\n    itemHeight\n  };\n};\nexport const calculateItemHeight = (longestLabelHeight, theme) => {\n  const horizontalPadding = parseInt(theme.spacing.sm, 10) * 2;\n  const itemHeight = longestLabelHeight + horizontalPadding;\n  return itemHeight;\n};\nexport const calculateListWidth = (longestLabelWidth, theme) => {\n  const verticalPadding = parseInt(theme.spacing.sm, 10) + parseInt(theme.spacing.md, 10);\n  const maxWidth = 800;\n  const listWidth = Math.min(Math.max(longestLabelWidth + verticalPadding, 200), maxWidth);\n  return listWidth;\n};\nexport const calculateListHeight = (itemHeight, allItems) => {\n  const numberOfItemsToShow = Math.min(allItems.length, 10);\n  const minHeight = 100;\n  const totalHeight = numberOfItemsToShow * itemHeight;\n  const listHeight = Math.max(totalHeight, minHeight);\n  return listHeight;\n};","map":{"version":3,"names":["default","calculateSize","CompletionItemKind","flattenGroupItems","groupedItems","reduce","all","items","label","push","kind","GroupTitle","item","calculateLongestLabel","allItems","longest","current","length","calculateListSizes","theme","longestLabel","size","font","typography","fontFamily","monospace","fontSize","sm","fontWeight","listWidth","calculateListWidth","width","itemHeight","calculateItemHeight","height","listHeight","calculateListHeight","longestLabelHeight","horizontalPadding","parseInt","spacing","longestLabelWidth","verticalPadding","md","maxWidth","Math","min","max","numberOfItemsToShow","minHeight","totalHeight"],"sources":["/home/soula/grafana/packages/grafana-ui/src/utils/typeahead.ts"],"sourcesContent":["import { default as calculateSize } from 'calculate-size';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { CompletionItemGroup, CompletionItem, CompletionItemKind } from '../types/completion';\n\nexport const flattenGroupItems = (groupedItems: CompletionItemGroup[]): CompletionItem[] => {\n  return groupedItems.reduce((all: CompletionItem[], { items, label }) => {\n    all.push({\n      label,\n      kind: CompletionItemKind.GroupTitle,\n    });\n    return items.reduce((all, item) => {\n      all.push(item);\n      return all;\n    }, all);\n  }, []);\n};\n\nexport const calculateLongestLabel = (allItems: CompletionItem[]): string => {\n  return allItems.reduce((longest, current) => {\n    return longest.length < current.label.length ? current.label : longest;\n  }, '');\n};\n\nexport const calculateListSizes = (theme: GrafanaTheme, allItems: CompletionItem[], longestLabel: string) => {\n  const size = calculateSize(longestLabel, {\n    font: theme.typography.fontFamily.monospace,\n    fontSize: theme.typography.size.sm,\n    fontWeight: 'normal',\n  });\n\n  const listWidth = calculateListWidth(size.width, theme);\n  const itemHeight = calculateItemHeight(size.height, theme);\n  const listHeight = calculateListHeight(itemHeight, allItems);\n\n  return {\n    listWidth,\n    listHeight,\n    itemHeight,\n  };\n};\n\nexport const calculateItemHeight = (longestLabelHeight: number, theme: GrafanaTheme) => {\n  const horizontalPadding = parseInt(theme.spacing.sm, 10) * 2;\n  const itemHeight = longestLabelHeight + horizontalPadding;\n\n  return itemHeight;\n};\n\nexport const calculateListWidth = (longestLabelWidth: number, theme: GrafanaTheme) => {\n  const verticalPadding = parseInt(theme.spacing.sm, 10) + parseInt(theme.spacing.md, 10);\n  const maxWidth = 800;\n  const listWidth = Math.min(Math.max(longestLabelWidth + verticalPadding, 200), maxWidth);\n\n  return listWidth;\n};\n\nexport const calculateListHeight = (itemHeight: number, allItems: CompletionItem[]) => {\n  const numberOfItemsToShow = Math.min(allItems.length, 10);\n  const minHeight = 100;\n  const totalHeight = numberOfItemsToShow * itemHeight;\n  const listHeight = Math.max(totalHeight, minHeight);\n\n  return listHeight;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}