{"ast":null,"code":"var _span;\n\nimport { css } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { urlUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { AsyncSelect, Button, Modal, useStyles2 } from '@grafana/ui';\nimport { getConnectedDashboards, getLibraryPanelConnectedDashboards } from '../../state/api';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function OpenLibraryPanelModal({\n  libraryPanel,\n  onDismiss\n}) {\n  const styles = useStyles2(getStyles);\n  const [loading, setLoading] = useState(false);\n  const [connected, setConnected] = useState(0);\n  const [option, setOption] = useState(undefined);\n  useEffect(() => {\n    const getConnected = async () => {\n      const connectedDashboards = await getLibraryPanelConnectedDashboards(libraryPanel.uid);\n      setConnected(connectedDashboards.length);\n    };\n\n    getConnected();\n  }, [libraryPanel.uid]);\n  const loadOptions = useCallback(searchString => loadOptionsAsync(libraryPanel.uid, searchString, setLoading), [libraryPanel.uid]);\n  const debouncedLoadOptions = useMemo(() => debounce(loadOptions, 300, {\n    leading: true,\n    trailing: true\n  }), [loadOptions]);\n\n  const onViewPanel = e => {\n    var _option$value;\n\n    e.preventDefault();\n    locationService.push(urlUtil.renderUrl(`/d/${option === null || option === void 0 ? void 0 : (_option$value = option.value) === null || _option$value === void 0 ? void 0 : _option$value.uid}`, {}));\n  };\n\n  return /*#__PURE__*/_jsxs(Modal, {\n    title: \"View panel in dashboard\",\n    onDismiss: onDismiss,\n    onClickBackdrop: onDismiss,\n    isOpen: true,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      children: [connected === 0 ? _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        children: \"Panel is not linked to a dashboard. Add the panel to a dashboard and retry.\"\n      })) : null, connected > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"p\", {\n          children: [\"This panel is being used in\", ' ', /*#__PURE__*/_jsxs(\"strong\", {\n            children: [connected, \" \", connected > 1 ? 'dashboards' : 'dashboard']\n          }), \".Please choose which dashboard to view the panel in:\"]\n        }), /*#__PURE__*/_jsx(AsyncSelect, {\n          isClearable: true,\n          isLoading: loading,\n          defaultOptions: true,\n          loadOptions: debouncedLoadOptions,\n          onChange: setOption,\n          placeholder: \"Start typing to search for dashboard\",\n          noOptionsMessage: \"No dashboards found\"\n        })]\n      }) : null]\n    }), /*#__PURE__*/_jsxs(Modal.ButtonRow, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        fill: \"outline\",\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onViewPanel,\n        disabled: !Boolean(option),\n        children: option ? `View panel in ${option === null || option === void 0 ? void 0 : option.label}...` : 'View panel in dashboard...'\n      })]\n    })]\n  });\n}\n\nasync function loadOptionsAsync(uid, searchString, setLoading) {\n  setLoading(true);\n  const searchHits = await getConnectedDashboards(uid);\n  const options = searchHits.filter(d => d.title.toLowerCase().includes(searchString.toLowerCase())).map(d => ({\n    label: d.title,\n    value: d\n  }));\n  setLoading(false);\n  return options;\n}\n\nfunction getStyles(theme) {\n  return {\n    container: css``\n  };\n}","map":{"version":3,"names":["css","debounce","React","useCallback","useEffect","useMemo","useState","urlUtil","locationService","AsyncSelect","Button","Modal","useStyles2","getConnectedDashboards","getLibraryPanelConnectedDashboards","OpenLibraryPanelModal","libraryPanel","onDismiss","styles","getStyles","loading","setLoading","connected","setConnected","option","setOption","undefined","getConnected","connectedDashboards","uid","length","loadOptions","searchString","loadOptionsAsync","debouncedLoadOptions","leading","trailing","onViewPanel","e","preventDefault","push","renderUrl","value","container","Boolean","label","searchHits","options","filter","d","title","toLowerCase","includes","map","theme"],"sources":["/home/soula/grafana/public/app/features/library-panels/components/OpenLibraryPanelModal/OpenLibraryPanelModal.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport React, { MouseEvent, useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue, urlUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { AsyncSelect, Button, Modal, useStyles2 } from '@grafana/ui';\n\nimport { DashboardSearchHit } from '../../../search/types';\nimport { getConnectedDashboards, getLibraryPanelConnectedDashboards } from '../../state/api';\nimport { LibraryElementDTO } from '../../types';\n\nexport interface OpenLibraryPanelModalProps {\n  onDismiss: () => void;\n  libraryPanel: LibraryElementDTO;\n}\n\nexport function OpenLibraryPanelModal({ libraryPanel, onDismiss }: OpenLibraryPanelModalProps): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const [loading, setLoading] = useState(false);\n  const [connected, setConnected] = useState(0);\n  const [option, setOption] = useState<SelectableValue<DashboardSearchHit> | undefined>(undefined);\n  useEffect(() => {\n    const getConnected = async () => {\n      const connectedDashboards = await getLibraryPanelConnectedDashboards(libraryPanel.uid);\n      setConnected(connectedDashboards.length);\n    };\n    getConnected();\n  }, [libraryPanel.uid]);\n  const loadOptions = useCallback(\n    (searchString: string) => loadOptionsAsync(libraryPanel.uid, searchString, setLoading),\n    [libraryPanel.uid]\n  );\n  const debouncedLoadOptions = useMemo(\n    () => debounce(loadOptions, 300, { leading: true, trailing: true }),\n    [loadOptions]\n  );\n  const onViewPanel = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    locationService.push(urlUtil.renderUrl(`/d/${option?.value?.uid}`, {}));\n  };\n\n  return (\n    <Modal title=\"View panel in dashboard\" onDismiss={onDismiss} onClickBackdrop={onDismiss} isOpen>\n      <div className={styles.container}>\n        {connected === 0 ? (\n          <span>Panel is not linked to a dashboard. Add the panel to a dashboard and retry.</span>\n        ) : null}\n        {connected > 0 ? (\n          <>\n            <p>\n              This panel is being used in{' '}\n              <strong>\n                {connected} {connected > 1 ? 'dashboards' : 'dashboard'}\n              </strong>\n              .Please choose which dashboard to view the panel in:\n            </p>\n            <AsyncSelect\n              isClearable\n              isLoading={loading}\n              defaultOptions={true}\n              loadOptions={debouncedLoadOptions}\n              onChange={setOption}\n              placeholder=\"Start typing to search for dashboard\"\n              noOptionsMessage=\"No dashboards found\"\n            />\n          </>\n        ) : null}\n      </div>\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button onClick={onViewPanel} disabled={!Boolean(option)}>\n          {option ? `View panel in ${option?.label}...` : 'View panel in dashboard...'}\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n}\n\nasync function loadOptionsAsync(uid: string, searchString: string, setLoading: (loading: boolean) => void) {\n  setLoading(true);\n  const searchHits = await getConnectedDashboards(uid);\n  const options = searchHits\n    .filter((d) => d.title.toLowerCase().includes(searchString.toLowerCase()))\n    .map((d) => ({ label: d.title, value: d }));\n  setLoading(false);\n\n  return options;\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css``,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}