{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { eventFactory } from '../events/eventFactory';\nimport { BusEventBase, BusEventWithPayload } from '../events/types';\nexport const AppEvents = {\n  alertSuccess: eventFactory('alert-success'),\n  alertWarning: eventFactory('alert-warning'),\n  alertError: eventFactory('alert-error')\n};\nexport const PanelEvents = {\n  refresh: eventFactory('refresh'),\n  componentDidMount: eventFactory('component-did-mount'),\n  dataReceived: eventFactory('data-received'),\n  dataError: eventFactory('data-error'),\n  dataFramesReceived: eventFactory('data-frames-received'),\n  dataSnapshotLoad: eventFactory('data-snapshot-load'),\n  editModeInitialized: eventFactory('init-edit-mode'),\n  initPanelActions: eventFactory('init-panel-actions'),\n  initialized: eventFactory('panel-initialized'),\n  panelTeardown: eventFactory('panel-teardown'),\n  render: eventFactory('render')\n};\n/** @public */\n\n/** @alpha */\nexport class LegacyGraphHoverEvent extends BusEventWithPayload {}\n/** @alpha */\n\n_defineProperty(LegacyGraphHoverEvent, \"type\", 'graph-hover');\n\nexport class LegacyGraphHoverClearEvent extends BusEventBase {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"payload\", {\n      point: {}\n    });\n  }\n\n}\n\n_defineProperty(LegacyGraphHoverClearEvent, \"type\", 'graph-hover-clear');","map":{"version":3,"names":["eventFactory","BusEventBase","BusEventWithPayload","AppEvents","alertSuccess","alertWarning","alertError","PanelEvents","refresh","componentDidMount","dataReceived","dataError","dataFramesReceived","dataSnapshotLoad","editModeInitialized","initPanelActions","initialized","panelTeardown","render","LegacyGraphHoverEvent","LegacyGraphHoverClearEvent","point"],"sources":["/home/soula/grafana/packages/grafana-data/src/types/legacyEvents.ts"],"sourcesContent":["import { DataHoverPayload } from '../events';\nimport { eventFactory } from '../events/eventFactory';\nimport { BusEventBase, BusEventWithPayload } from '../events/types';\n\nimport { DataFrame } from './dataFrame';\nimport { DataQueryError, DataQueryResponseData } from './datasource';\nimport { AngularPanelMenuItem } from './panel';\n\nexport type AlertPayload = [string, string?, string?];\nexport type AlertErrorPayload = [string, (string | Error)?, string?];\n\nexport const AppEvents = {\n  alertSuccess: eventFactory<AlertPayload>('alert-success'),\n  alertWarning: eventFactory<AlertPayload>('alert-warning'),\n  alertError: eventFactory<AlertErrorPayload>('alert-error'),\n};\n\nexport const PanelEvents = {\n  refresh: eventFactory('refresh'),\n  componentDidMount: eventFactory('component-did-mount'),\n  dataReceived: eventFactory<DataQueryResponseData[]>('data-received'),\n  dataError: eventFactory<DataQueryError>('data-error'),\n  dataFramesReceived: eventFactory<DataFrame[]>('data-frames-received'),\n  dataSnapshotLoad: eventFactory<DataQueryResponseData[]>('data-snapshot-load'),\n  editModeInitialized: eventFactory('init-edit-mode'),\n  initPanelActions: eventFactory<AngularPanelMenuItem[]>('init-panel-actions'),\n  initialized: eventFactory('panel-initialized'),\n  panelTeardown: eventFactory('panel-teardown'),\n  render: eventFactory<any>('render'),\n};\n\n/** @public */\nexport interface LegacyGraphHoverEventPayload extends DataHoverPayload {\n  pos: any;\n  panel: {\n    id: number;\n  };\n}\n\n/** @alpha */\nexport class LegacyGraphHoverEvent extends BusEventWithPayload<LegacyGraphHoverEventPayload> {\n  static type = 'graph-hover';\n}\n\n/** @alpha */\nexport class LegacyGraphHoverClearEvent extends BusEventBase {\n  static type = 'graph-hover-clear';\n  payload: DataHoverPayload = { point: {} };\n}\n"],"mappings":";;AACA,SAASA,YAAT,QAA6B,wBAA7B;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,iBAAlD;AASA,OAAO,MAAMC,SAAS,GAAG;EACvBC,YAAY,EAAEJ,YAAY,CAAe,eAAf,CADH;EAEvBK,YAAY,EAAEL,YAAY,CAAe,eAAf,CAFH;EAGvBM,UAAU,EAAEN,YAAY,CAAoB,aAApB;AAHD,CAAlB;AAMP,OAAO,MAAMO,WAAW,GAAG;EACzBC,OAAO,EAAER,YAAY,CAAC,SAAD,CADI;EAEzBS,iBAAiB,EAAET,YAAY,CAAC,qBAAD,CAFN;EAGzBU,YAAY,EAAEV,YAAY,CAA0B,eAA1B,CAHD;EAIzBW,SAAS,EAAEX,YAAY,CAAiB,YAAjB,CAJE;EAKzBY,kBAAkB,EAAEZ,YAAY,CAAc,sBAAd,CALP;EAMzBa,gBAAgB,EAAEb,YAAY,CAA0B,oBAA1B,CANL;EAOzBc,mBAAmB,EAAEd,YAAY,CAAC,gBAAD,CAPR;EAQzBe,gBAAgB,EAAEf,YAAY,CAAyB,oBAAzB,CARL;EASzBgB,WAAW,EAAEhB,YAAY,CAAC,mBAAD,CATA;EAUzBiB,aAAa,EAAEjB,YAAY,CAAC,gBAAD,CAVF;EAWzBkB,MAAM,EAAElB,YAAY,CAAM,QAAN;AAXK,CAApB;AAcP;;AAQA;AACA,OAAO,MAAMmB,qBAAN,SAAoCjB,mBAApC,CAAsF;AAI7F;;gBAJaiB,qB,UACG,a;;AAIhB,OAAO,MAAMC,0BAAN,SAAyCnB,YAAzC,CAAsD;EAAA;IAAA;;IAAA,iCAE/B;MAAEoB,KAAK,EAAE;IAAT,CAF+B;EAAA;;AAAA;;gBAAhDD,0B,UACG,mB"},"metadata":{},"sourceType":"module"}