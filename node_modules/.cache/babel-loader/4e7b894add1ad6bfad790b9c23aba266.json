{"ast":null,"code":"import React from 'react';\nimport { VariableSuggestionsScope } from '@grafana/data';\nimport { DataLinksInlineEditor } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DataLinksValueEditor = ({\n  value,\n  onChange,\n  context\n}) => {\n  return /*#__PURE__*/_jsx(DataLinksInlineEditor, {\n    links: value,\n    onChange: onChange,\n    data: context.data,\n    getSuggestions: () => context.getSuggestions ? context.getSuggestions(VariableSuggestionsScope.Values) : []\n  });\n};","map":{"version":3,"names":["React","VariableSuggestionsScope","DataLinksInlineEditor","DataLinksValueEditor","value","onChange","context","data","getSuggestions","Values"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/links.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  DataLink,\n  DataLinksFieldConfigSettings,\n  FieldConfigEditorProps,\n  VariableSuggestionsScope,\n} from '@grafana/data';\nimport { DataLinksInlineEditor } from '@grafana/ui';\n\nexport const DataLinksValueEditor: React.FC<FieldConfigEditorProps<DataLink[], DataLinksFieldConfigSettings>> = ({\n  value,\n  onChange,\n  context,\n}) => {\n  return (\n    <DataLinksInlineEditor\n      links={value}\n      onChange={onChange}\n      data={context.data}\n      getSuggestions={() => (context.getSuggestions ? context.getSuggestions(VariableSuggestionsScope.Values) : [])}\n    />\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAIEC,wBAJF,QAKO,eALP;AAMA,SAASC,qBAAT,QAAsC,aAAtC;;AAEA,OAAO,MAAMC,oBAAgG,GAAG,CAAC;EAC/GC,KAD+G;EAE/GC,QAF+G;EAG/GC;AAH+G,CAAD,KAI1G;EACJ,oBACE,KAAC,qBAAD;IACE,KAAK,EAAEF,KADT;IAEE,QAAQ,EAAEC,QAFZ;IAGE,IAAI,EAAEC,OAAO,CAACC,IAHhB;IAIE,cAAc,EAAE,MAAOD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACE,cAAR,CAAuBP,wBAAwB,CAACQ,MAAhD,CAAzB,GAAmF;EAJ5G,EADF;AAQD,CAbM"},"metadata":{},"sourceType":"module"}