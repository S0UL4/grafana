{"ast":null,"code":"import pluralize from 'pluralize';\nimport React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { getNotificationsTextColors } from '../../styles/notifications';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AlertGroupHeader = ({\n  group\n}) => {\n  const textStyles = useStyles2(getNotificationsTextColors);\n  const total = group.alerts.length;\n  const countByStatus = group.alerts.reduce((statusObj, alert) => {\n    if (statusObj[alert.status.state]) {\n      statusObj[alert.status.state] += 1;\n    } else {\n      statusObj[alert.status.state] = 1;\n    }\n\n    return statusObj;\n  }, {});\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [`${total} ${pluralize('alert', total)}: `, Object.entries(countByStatus).map(([state, count], index) => {\n      return /*#__PURE__*/_jsxs(\"span\", {\n        className: textStyles[state],\n        children: [index > 0 && ', ', `${count} ${state}`]\n      }, `${JSON.stringify(group.labels)}-notifications-${index}`);\n    })]\n  });\n};","map":{"version":3,"names":["pluralize","React","useStyles2","getNotificationsTextColors","AlertGroupHeader","group","textStyles","total","alerts","length","countByStatus","reduce","statusObj","alert","status","state","Object","entries","map","count","index","JSON","stringify","labels"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/alert-groups/AlertGroupHeader.tsx"],"sourcesContent":["import pluralize from 'pluralize';\nimport React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertmanagerGroup, AlertState } from 'app/plugins/datasource/alertmanager/types';\n\nimport { getNotificationsTextColors } from '../../styles/notifications';\n\ninterface Props {\n  group: AlertmanagerGroup;\n}\n\nexport const AlertGroupHeader = ({ group }: Props) => {\n  const textStyles = useStyles2(getNotificationsTextColors);\n  const total = group.alerts.length;\n  const countByStatus = group.alerts.reduce((statusObj, alert) => {\n    if (statusObj[alert.status.state]) {\n      statusObj[alert.status.state] += 1;\n    } else {\n      statusObj[alert.status.state] = 1;\n    }\n    return statusObj;\n  }, {} as Record<AlertState, number>);\n\n  return (\n    <div>\n      {`${total} ${pluralize('alert', total)}: `}\n      {Object.entries(countByStatus).map(([state, count], index) => {\n        return (\n          <span\n            key={`${JSON.stringify(group.labels)}-notifications-${index}`}\n            className={textStyles[state as AlertState]}\n          >\n            {index > 0 && ', '}\n            {`${count} ${state}`}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,aAA3B;AAGA,SAASC,0BAAT,QAA2C,4BAA3C;;AAMA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAsB;EACpD,MAAMC,UAAU,GAAGJ,UAAU,CAACC,0BAAD,CAA7B;EACA,MAAMI,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,MAA3B;EACA,MAAMC,aAAa,GAAGL,KAAK,CAACG,MAAN,CAAaG,MAAb,CAAoB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;IAC9D,IAAID,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,EAAmC;MACjCH,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,IAAiC,CAAjC;IACD,CAFD,MAEO;MACLH,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,GAAgC,CAAhC;IACD;;IACD,OAAOH,SAAP;EACD,CAPqB,EAOnB,EAPmB,CAAtB;EASA,oBACE;IAAA,WACI,GAAEL,KAAM,IAAGP,SAAS,CAAC,OAAD,EAAUO,KAAV,CAAiB,IADzC,EAEGS,MAAM,CAACC,OAAP,CAAeP,aAAf,EAA8BQ,GAA9B,CAAkC,CAAC,CAACH,KAAD,EAAQI,KAAR,CAAD,EAAiBC,KAAjB,KAA2B;MAC5D,oBACE;QAEE,SAAS,EAAEd,UAAU,CAACS,KAAD,CAFvB;QAAA,WAIGK,KAAK,GAAG,CAAR,IAAa,IAJhB,EAKI,GAAED,KAAM,IAAGJ,KAAM,EALrB;MAAA,GACQ,GAAEM,IAAI,CAACC,SAAL,CAAejB,KAAK,CAACkB,MAArB,CAA6B,kBAAiBH,KAAM,EAD9D,CADF;IASD,CAVA,CAFH;EAAA,EADF;AAgBD,CA5BM"},"metadata":{},"sourceType":"module"}