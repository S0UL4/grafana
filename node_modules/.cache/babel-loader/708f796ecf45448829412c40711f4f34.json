{"ast":null,"code":"var _Icon, _Icon2;\n\nimport { css } from '@emotion/css';\nimport React, { memo } from 'react';\nimport Calendar from 'react-calendar';\nimport { useStyles2 } from '../../../themes';\nimport { ClickOutsideWrapper } from '../../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Icon } from '../../Icon/Icon';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\n/** @public */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/** @public */\nexport const DatePicker = /*#__PURE__*/memo(props => {\n  const styles = useStyles2(getStyles);\n  const {\n    isOpen,\n    onClose\n  } = props;\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickOutsideWrapper, {\n    useCapture: true,\n    includeButtonPress: false,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: styles.modal,\n      \"data-testid\": \"date-picker\",\n      children: /*#__PURE__*/_jsx(Body, Object.assign({}, props))\n    })\n  });\n});\nDatePicker.displayName = 'DatePicker';\nconst Body = /*#__PURE__*/memo(({\n  value,\n  minDate,\n  onChange\n}) => {\n  const styles = useStyles2(getBodyStyles);\n  return /*#__PURE__*/_jsx(Calendar, {\n    className: styles.body,\n    tileClassName: styles.title,\n    value: value || new Date(),\n    minDate: minDate,\n    nextLabel: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: \"angle-right\"\n    })),\n    prevLabel: _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n      name: \"angle-left\"\n    })),\n    onChange: ev => {\n      if (!Array.isArray(ev)) {\n        onChange(ev);\n      }\n    },\n    locale: \"en\"\n  });\n});\nBody.displayName = 'Body';\nexport const getStyles = theme => {\n  return {\n    modal: css`\n      z-index: ${theme.zIndex.modal};\n      position: absolute;\n      box-shadow: ${theme.shadows.z3};\n      background-color: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: 2px 0 0 2px;\n\n      button:disabled {\n        color: ${theme.colors.text.disabled};\n      }\n    `\n  };\n};","map":{"version":3,"names":["css","React","memo","Calendar","useStyles2","ClickOutsideWrapper","Icon","getBodyStyles","DatePicker","props","styles","getStyles","isOpen","onClose","modal","displayName","Body","value","minDate","onChange","body","title","Date","ev","Array","isArray","theme","zIndex","shadows","z3","colors","background","primary","border","weak","text","disabled"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/DatePicker/DatePicker.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { memo } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { ClickOutsideWrapper } from '../../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Icon } from '../../Icon/Icon';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\n\n/** @public */\nexport interface DatePickerProps {\n  isOpen?: boolean;\n  onClose: () => void;\n  onChange: (value: Date) => void;\n  value?: Date;\n  minDate?: Date;\n}\n\n/** @public */\nexport const DatePicker = memo<DatePickerProps>((props) => {\n  const styles = useStyles2(getStyles);\n  const { isOpen, onClose } = props;\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <ClickOutsideWrapper useCapture={true} includeButtonPress={false} onClick={onClose}>\n      <div className={styles.modal} data-testid=\"date-picker\">\n        <Body {...props} />\n      </div>\n    </ClickOutsideWrapper>\n  );\n});\n\nDatePicker.displayName = 'DatePicker';\n\nconst Body = memo<DatePickerProps>(({ value, minDate, onChange }) => {\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value || new Date()}\n      minDate={minDate}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={(ev: Date | Date[]) => {\n        if (!Array.isArray(ev)) {\n          onChange(ev);\n        }\n      }}\n      locale=\"en\"\n    />\n  );\n});\n\nBody.displayName = 'Body';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    modal: css`\n      z-index: ${theme.zIndex.modal};\n      position: absolute;\n      box-shadow: ${theme.shadows.z3};\n      background-color: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: 2px 0 0 2px;\n\n      button:disabled {\n        color: ${theme.colors.text.disabled};\n      }\n    `,\n  };\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAIA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,mBAAT,QAAoC,+CAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AAEA;;;;AASA;AACA,OAAO,MAAMC,UAAU,gBAAGN,IAAI,CAAmBO,KAAD,IAAW;EACzD,MAAMC,MAAM,GAAGN,UAAU,CAACO,SAAD,CAAzB;EACA,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBJ,KAA5B;;EAEA,IAAI,CAACG,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,oBACE,KAAC,mBAAD;IAAqB,UAAU,EAAE,IAAjC;IAAuC,kBAAkB,EAAE,KAA3D;IAAkE,OAAO,EAAEC,OAA3E;IAAA,uBACE;MAAK,SAAS,EAAEH,MAAM,CAACI,KAAvB;MAA8B,eAAY,aAA1C;MAAA,uBACE,KAAC,IAAD,oBAAUL,KAAV;IADF;EADF,EADF;AAOD,CAf6B,CAAvB;AAiBPD,UAAU,CAACO,WAAX,GAAyB,YAAzB;AAEA,MAAMC,IAAI,gBAAGd,IAAI,CAAkB,CAAC;EAAEe,KAAF;EAASC,OAAT;EAAkBC;AAAlB,CAAD,KAAkC;EACnE,MAAMT,MAAM,GAAGN,UAAU,CAACG,aAAD,CAAzB;EAEA,oBACE,KAAC,QAAD;IACE,SAAS,EAAEG,MAAM,CAACU,IADpB;IAEE,aAAa,EAAEV,MAAM,CAACW,KAFxB;IAGE,KAAK,EAAEJ,KAAK,IAAI,IAAIK,IAAJ,EAHlB;IAIE,OAAO,EAAEJ,OAJX;IAKE,SAAS,iCAAE,KAAC,IAAD;MAAM,IAAI,EAAC;IAAX,EAAF,CALX;IAME,SAAS,mCAAE,KAAC,IAAD;MAAM,IAAI,EAAC;IAAX,EAAF,CANX;IAOE,QAAQ,EAAGK,EAAD,IAAuB;MAC/B,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,EAAd,CAAL,EAAwB;QACtBJ,QAAQ,CAACI,EAAD,CAAR;MACD;IACF,CAXH;IAYE,MAAM,EAAC;EAZT,EADF;AAgBD,CAnBgB,CAAjB;AAqBAP,IAAI,CAACD,WAAL,GAAmB,MAAnB;AAEA,OAAO,MAAMJ,SAAS,GAAIe,KAAD,IAA0B;EACjD,OAAO;IACLZ,KAAK,EAAEd,GAAI;AACf,iBAAiB0B,KAAK,CAACC,MAAN,CAAab,KAAM;AACpC;AACA,oBAAoBY,KAAK,CAACE,OAAN,CAAcC,EAAG;AACrC,0BAA0BH,KAAK,CAACI,MAAN,CAAaC,UAAb,CAAwBC,OAAQ;AAC1D,0BAA0BN,KAAK,CAACI,MAAN,CAAaG,MAAb,CAAoBC,IAAK;AACnD;AACA;AACA;AACA,iBAAiBR,KAAK,CAACI,MAAN,CAAaK,IAAb,CAAkBC,QAAS;AAC5C;AACA;EAZS,CAAP;AAcD,CAfM"},"metadata":{},"sourceType":"module"}