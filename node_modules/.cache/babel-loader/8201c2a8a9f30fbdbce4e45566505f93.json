{"ast":null,"code":"var _Icon;\n\nimport { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { Popover } from '..';\nimport { stylesFactory, useStyles } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { FilterPopup } from './FilterPopup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const Filter = ({\n  column,\n  field,\n  tableStyles\n}) => {\n  var _field$config$custom;\n\n  const ref = useRef(null);\n  const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const styles = useStyles(getStyles);\n  const filterEnabled = useMemo(() => Boolean(column.filterValue), [column.filterValue]);\n  const onShowPopover = useCallback(() => setPopoverVisible(true), [setPopoverVisible]);\n  const onClosePopover = useCallback(() => setPopoverVisible(false), [setPopoverVisible]);\n\n  if (!field || !((_field$config$custom = field.config.custom) !== null && _field$config$custom !== void 0 && _field$config$custom.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"span\", {\n    className: cx(tableStyles.headerFilter, filterEnabled ? styles.filterIconEnabled : styles.filterIconDisabled),\n    ref: ref,\n    role: \"filterIcon\",\n    onClick: onShowPopover,\n    children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: \"filter\"\n    })), isPopoverVisible && ref.current && /*#__PURE__*/_jsx(Popover, {\n      content: /*#__PURE__*/_jsx(FilterPopup, {\n        column: column,\n        tableStyles: tableStyles,\n        field: field,\n        onClose: onClosePopover\n      }),\n      placement: \"bottom-start\",\n      referenceElement: ref.current,\n      show: true\n    })]\n  });\n};\nconst getStyles = stylesFactory(theme => ({\n  filterIconEnabled: css`\n    label: filterIconEnabled;\n    color: ${theme.colors.textBlue};\n  `,\n  filterIconDisabled: css`\n    label: filterIconDisabled;\n    color: ${theme.colors.textFaint};\n  `\n}));","map":{"version":3,"names":["css","cx","React","useCallback","useMemo","useRef","useState","Popover","stylesFactory","useStyles","Icon","FilterPopup","Filter","column","field","tableStyles","ref","isPopoverVisible","setPopoverVisible","styles","getStyles","filterEnabled","Boolean","filterValue","onShowPopover","onClosePopover","config","custom","filterable","headerFilter","filterIconEnabled","filterIconDisabled","current","theme","colors","textBlue","textFaint"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/Filter.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, useCallback, useMemo, useRef, useState } from 'react';\n\nimport { Field, GrafanaTheme } from '@grafana/data';\n\nimport { Popover } from '..';\nimport { stylesFactory, useStyles } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { FilterPopup } from './FilterPopup';\nimport { TableStyles } from './styles';\n\ninterface Props {\n  column: any;\n  tableStyles: TableStyles;\n  field?: Field;\n}\n\nexport const Filter: FC<Props> = ({ column, field, tableStyles }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [isPopoverVisible, setPopoverVisible] = useState<boolean>(false);\n  const styles = useStyles(getStyles);\n  const filterEnabled = useMemo(() => Boolean(column.filterValue), [column.filterValue]);\n  const onShowPopover = useCallback(() => setPopoverVisible(true), [setPopoverVisible]);\n  const onClosePopover = useCallback(() => setPopoverVisible(false), [setPopoverVisible]);\n\n  if (!field || !field.config.custom?.filterable) {\n    return null;\n  }\n\n  return (\n    <span\n      className={cx(tableStyles.headerFilter, filterEnabled ? styles.filterIconEnabled : styles.filterIconDisabled)}\n      ref={ref}\n      role=\"filterIcon\"\n      onClick={onShowPopover}\n    >\n      <Icon name=\"filter\" />\n      {isPopoverVisible && ref.current && (\n        <Popover\n          content={<FilterPopup column={column} tableStyles={tableStyles} field={field} onClose={onClosePopover} />}\n          placement=\"bottom-start\"\n          referenceElement={ref.current}\n          show\n        />\n      )}\n    </span>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  filterIconEnabled: css`\n    label: filterIconEnabled;\n    color: ${theme.colors.textBlue};\n  `,\n  filterIconDisabled: css`\n    label: filterIconDisabled;\n    color: ${theme.colors.textFaint};\n  `,\n}));\n"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAoBC,WAApB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,OAAlE;AAIA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,cAAzC;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,SAASC,WAAT,QAA4B,eAA5B;;;AASA,OAAO,MAAMC,MAAiB,GAAG,CAAC;EAAEC,MAAF;EAAUC,KAAV;EAAiBC;AAAjB,CAAD,KAAoC;EAAA;;EACnE,MAAMC,GAAG,GAAGX,MAAM,CAAiB,IAAjB,CAAlB;EACA,MAAM,CAACY,gBAAD,EAAmBC,iBAAnB,IAAwCZ,QAAQ,CAAU,KAAV,CAAtD;EACA,MAAMa,MAAM,GAAGV,SAAS,CAACW,SAAD,CAAxB;EACA,MAAMC,aAAa,GAAGjB,OAAO,CAAC,MAAMkB,OAAO,CAACT,MAAM,CAACU,WAAR,CAAd,EAAoC,CAACV,MAAM,CAACU,WAAR,CAApC,CAA7B;EACA,MAAMC,aAAa,GAAGrB,WAAW,CAAC,MAAMe,iBAAiB,CAAC,IAAD,CAAxB,EAAgC,CAACA,iBAAD,CAAhC,CAAjC;EACA,MAAMO,cAAc,GAAGtB,WAAW,CAAC,MAAMe,iBAAiB,CAAC,KAAD,CAAxB,EAAiC,CAACA,iBAAD,CAAjC,CAAlC;;EAEA,IAAI,CAACJ,KAAD,IAAU,0BAACA,KAAK,CAACY,MAAN,CAAaC,MAAd,iDAAC,qBAAqBC,UAAtB,CAAd,EAAgD;IAC9C,OAAO,IAAP;EACD;;EAED,oBACE;IACE,SAAS,EAAE3B,EAAE,CAACc,WAAW,CAACc,YAAb,EAA2BR,aAAa,GAAGF,MAAM,CAACW,iBAAV,GAA8BX,MAAM,CAACY,kBAA7E,CADf;IAEE,GAAG,EAAEf,GAFP;IAGE,IAAI,EAAC,YAHP;IAIE,OAAO,EAAEQ,aAJX;IAAA,0CAME,KAAC,IAAD;MAAM,IAAI,EAAC;IAAX,EANF,GAOGP,gBAAgB,IAAID,GAAG,CAACgB,OAAxB,iBACC,KAAC,OAAD;MACE,OAAO,eAAE,KAAC,WAAD;QAAa,MAAM,EAAEnB,MAArB;QAA6B,WAAW,EAAEE,WAA1C;QAAuD,KAAK,EAAED,KAA9D;QAAqE,OAAO,EAAEW;MAA9E,EADX;MAEE,SAAS,EAAC,cAFZ;MAGE,gBAAgB,EAAET,GAAG,CAACgB,OAHxB;MAIE,IAAI;IAJN,EARJ;EAAA,EADF;AAkBD,CA9BM;AAgCP,MAAMZ,SAAS,GAAGZ,aAAa,CAAEyB,KAAD,KAA0B;EACxDH,iBAAiB,EAAE9B,GAAI;AACzB;AACA,aAAaiC,KAAK,CAACC,MAAN,CAAaC,QAAS;AACnC,GAJ0D;EAKxDJ,kBAAkB,EAAE/B,GAAI;AAC1B;AACA,aAAaiC,KAAK,CAACC,MAAN,CAAaE,SAAU;AACpC;AAR0D,CAA1B,CAAD,CAA/B"},"metadata":{},"sourceType":"module"}