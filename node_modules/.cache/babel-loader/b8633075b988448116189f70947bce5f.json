{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport React, { memo } from 'react';\nimport { Button, useStyles2 } from '@grafana/ui';\nimport UiFindInput from '../common/UiFindInput';\nimport { ubFlexAuto, ubJustifyEnd } from '../uberUtilityStyles'; // eslint-disable-next-line no-duplicate-imports\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const getStyles = theme => {\n  return {\n    TracePageSearchBar: css`\n      label: TracePageSearchBar;\n      float: right;\n      position: sticky;\n      top: 8px;\n      right: 0;\n      z-index: ${theme.zIndex.navbarFixed};\n      background: ${theme.colors.background.primary};\n      margin-top: 8px;\n      margin-bottom: -48px;\n      padding: 8px;\n      margin-right: 2px;\n      border-radius: 4px;\n      box-shadow: ${theme.shadows.z2};\n    `,\n    TracePageSearchBarBar: css`\n      label: TracePageSearchBarBar;\n      max-width: 20rem;\n      transition: max-width 0.5s;\n      &:focus-within {\n        max-width: 100%;\n      }\n    `,\n    TracePageSearchBarSuffix: css`\n      label: TracePageSearchBarSuffix;\n      opacity: 0.6;\n    `,\n    TracePageSearchBarBtn: css`\n      label: TracePageSearchBarBtn;\n      transition: 0.2s;\n      margin-left: 8px;\n    `,\n    TracePageSearchBarBtnDisabled: css`\n      label: TracePageSearchBarBtnDisabled;\n      opacity: 0.5;\n    `,\n    TracePageSearchBarLocateBtn: css`\n      label: TracePageSearchBarLocateBtn;\n      padding: 1px 8px 4px;\n    `\n  };\n};\nexport default /*#__PURE__*/memo(function TracePageSearchBar(props) {\n  const {\n    navigable,\n    setSearch,\n    searchValue,\n    searchBarSuffix,\n    spanFindMatches,\n    focusedSpanIdForSearch,\n    setSearchBarSuffix,\n    setFocusedSpanIdForSearch\n  } = props;\n  const styles = useStyles2(getStyles);\n  const suffix = searchValue ? /*#__PURE__*/_jsx(\"span\", {\n    className: styles.TracePageSearchBarSuffix,\n    \"aria-label\": \"Search bar suffix\",\n    children: searchBarSuffix\n  }) : null;\n  const btnClass = cx(styles.TracePageSearchBarBtn, {\n    [styles.TracePageSearchBarBtnDisabled]: !searchValue\n  });\n  const uiFindInputInputProps = {\n    className: cx(styles.TracePageSearchBarBar, ubFlexAuto),\n    name: 'search',\n    suffix\n  };\n\n  const setTraceSearch = value => {\n    setFocusedSpanIdForSearch('');\n    setSearchBarSuffix('');\n    setSearch(value);\n  };\n\n  const nextResult = () => {\n    const spanMatches = Array.from(spanFindMatches);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch) ? spanMatches.indexOf(focusedSpanIdForSearch) : 0; // new query || at end, go to start\n\n    if (prevMatchedIndex === -1 || prevMatchedIndex === spanMatches.length - 1) {\n      setFocusedSpanIdForSearch(spanMatches[0]);\n      setSearchBarSuffix(getSearchBarSuffix(1));\n      return;\n    } // get next\n\n\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex + 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex + 2));\n  };\n\n  const prevResult = () => {\n    const spanMatches = Array.from(spanFindMatches);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch) ? spanMatches.indexOf(focusedSpanIdForSearch) : 0; // new query || at start, go to end\n\n    if (prevMatchedIndex === -1 || prevMatchedIndex === 0) {\n      setFocusedSpanIdForSearch(spanMatches[spanMatches.length - 1]);\n      setSearchBarSuffix(getSearchBarSuffix(spanMatches.length));\n      return;\n    } // get prev\n\n\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex - 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex));\n  };\n\n  const getSearchBarSuffix = index => {\n    if (spanFindMatches !== null && spanFindMatches !== void 0 && spanFindMatches.size && (spanFindMatches === null || spanFindMatches === void 0 ? void 0 : spanFindMatches.size) > 0) {\n      return index + ' of ' + (spanFindMatches === null || spanFindMatches === void 0 ? void 0 : spanFindMatches.size);\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.TracePageSearchBar,\n    children: /*#__PURE__*/_jsxs(\"span\", {\n      className: ubJustifyEnd,\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsx(UiFindInput, {\n        onChange: setTraceSearch,\n        value: searchValue,\n        inputProps: uiFindInputInputProps,\n        allowClear: true\n      }), /*#__PURE__*/_jsx(_Fragment, {\n        children: navigable && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            className: btnClass,\n            variant: \"secondary\",\n            disabled: !searchValue,\n            type: \"button\",\n            icon: \"arrow-down\",\n            \"aria-label\": \"Next results button\",\n            onClick: nextResult\n          }), /*#__PURE__*/_jsx(Button, {\n            className: btnClass,\n            variant: \"secondary\",\n            disabled: !searchValue,\n            type: \"button\",\n            icon: \"arrow-up\",\n            \"aria-label\": \"Prev results button\",\n            onClick: prevResult\n          })]\n        })\n      })]\n    })\n  });\n});","map":{"version":3,"names":["css","cx","React","memo","Button","useStyles2","UiFindInput","ubFlexAuto","ubJustifyEnd","getStyles","theme","TracePageSearchBar","zIndex","navbarFixed","colors","background","primary","shadows","z2","TracePageSearchBarBar","TracePageSearchBarSuffix","TracePageSearchBarBtn","TracePageSearchBarBtnDisabled","TracePageSearchBarLocateBtn","props","navigable","setSearch","searchValue","searchBarSuffix","spanFindMatches","focusedSpanIdForSearch","setSearchBarSuffix","setFocusedSpanIdForSearch","styles","suffix","btnClass","uiFindInputInputProps","className","name","setTraceSearch","value","nextResult","spanMatches","Array","from","prevMatchedIndex","indexOf","length","getSearchBarSuffix","prevResult","index","size","display"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar.tsx"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport React, { memo, Dispatch, SetStateAction } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport UiFindInput from '../common/UiFindInput';\nimport { ubFlexAuto, ubJustifyEnd } from '../uberUtilityStyles';\n\n// eslint-disable-next-line no-duplicate-imports\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TracePageSearchBar: css`\n      label: TracePageSearchBar;\n      float: right;\n      position: sticky;\n      top: 8px;\n      right: 0;\n      z-index: ${theme.zIndex.navbarFixed};\n      background: ${theme.colors.background.primary};\n      margin-top: 8px;\n      margin-bottom: -48px;\n      padding: 8px;\n      margin-right: 2px;\n      border-radius: 4px;\n      box-shadow: ${theme.shadows.z2};\n    `,\n    TracePageSearchBarBar: css`\n      label: TracePageSearchBarBar;\n      max-width: 20rem;\n      transition: max-width 0.5s;\n      &:focus-within {\n        max-width: 100%;\n      }\n    `,\n    TracePageSearchBarSuffix: css`\n      label: TracePageSearchBarSuffix;\n      opacity: 0.6;\n    `,\n    TracePageSearchBarBtn: css`\n      label: TracePageSearchBarBtn;\n      transition: 0.2s;\n      margin-left: 8px;\n    `,\n    TracePageSearchBarBtnDisabled: css`\n      label: TracePageSearchBarBtnDisabled;\n      opacity: 0.5;\n    `,\n    TracePageSearchBarLocateBtn: css`\n      label: TracePageSearchBarLocateBtn;\n      padding: 1px 8px 4px;\n    `,\n  };\n};\n\ntype TracePageSearchBarProps = {\n  navigable: boolean;\n  searchValue: string;\n  setSearch: (value: string) => void;\n  searchBarSuffix: string;\n  spanFindMatches: Set<string> | undefined;\n  focusedSpanIdForSearch: string;\n  setSearchBarSuffix: Dispatch<SetStateAction<string>>;\n  setFocusedSpanIdForSearch: Dispatch<SetStateAction<string>>;\n};\n\nexport default memo(function TracePageSearchBar(props: TracePageSearchBarProps) {\n  const {\n    navigable,\n    setSearch,\n    searchValue,\n    searchBarSuffix,\n    spanFindMatches,\n    focusedSpanIdForSearch,\n    setSearchBarSuffix,\n    setFocusedSpanIdForSearch,\n  } = props;\n  const styles = useStyles2(getStyles);\n\n  const suffix = searchValue ? (\n    <span className={styles.TracePageSearchBarSuffix} aria-label=\"Search bar suffix\">\n      {searchBarSuffix}\n    </span>\n  ) : null;\n\n  const btnClass = cx(styles.TracePageSearchBarBtn, { [styles.TracePageSearchBarBtnDisabled]: !searchValue });\n  const uiFindInputInputProps = {\n    className: cx(styles.TracePageSearchBarBar, ubFlexAuto),\n    name: 'search',\n    suffix,\n  };\n\n  const setTraceSearch = (value: string) => {\n    setFocusedSpanIdForSearch('');\n    setSearchBarSuffix('');\n    setSearch(value);\n  };\n\n  const nextResult = () => {\n    const spanMatches = Array.from(spanFindMatches!);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch)\n      ? spanMatches.indexOf(focusedSpanIdForSearch)\n      : 0;\n\n    // new query || at end, go to start\n    if (prevMatchedIndex === -1 || prevMatchedIndex === spanMatches.length - 1) {\n      setFocusedSpanIdForSearch(spanMatches[0]);\n      setSearchBarSuffix(getSearchBarSuffix(1));\n      return;\n    }\n\n    // get next\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex + 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex + 2));\n  };\n\n  const prevResult = () => {\n    const spanMatches = Array.from(spanFindMatches!);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch)\n      ? spanMatches.indexOf(focusedSpanIdForSearch)\n      : 0;\n\n    // new query || at start, go to end\n    if (prevMatchedIndex === -1 || prevMatchedIndex === 0) {\n      setFocusedSpanIdForSearch(spanMatches[spanMatches.length - 1]);\n      setSearchBarSuffix(getSearchBarSuffix(spanMatches.length));\n      return;\n    }\n\n    // get prev\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex - 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex));\n  };\n\n  const getSearchBarSuffix = (index: number): string => {\n    if (spanFindMatches?.size && spanFindMatches?.size > 0) {\n      return index + ' of ' + spanFindMatches?.size;\n    }\n    return '';\n  };\n\n  return (\n    <div className={styles.TracePageSearchBar}>\n      <span className={ubJustifyEnd} style={{ display: 'flex' }}>\n        <UiFindInput\n          onChange={setTraceSearch}\n          value={searchValue}\n          inputProps={uiFindInputInputProps}\n          allowClear={true}\n        />\n        <>\n          {navigable && (\n            <>\n              <Button\n                className={btnClass}\n                variant=\"secondary\"\n                disabled={!searchValue}\n                type=\"button\"\n                icon=\"arrow-down\"\n                aria-label=\"Next results button\"\n                onClick={nextResult}\n              />\n              <Button\n                className={btnClass}\n                variant=\"secondary\"\n                disabled={!searchValue}\n                type=\"button\"\n                icon=\"arrow-up\"\n                aria-label=\"Prev results button\"\n                onClick={prevResult}\n              />\n            </>\n          )}\n        </>\n      </span>\n    </div>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}