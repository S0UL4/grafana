{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { Icon, Spinner } from '..';\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const CollapsableSection = ({\n  label,\n  isOpen,\n  onToggle,\n  className,\n  contentClassName,\n  children,\n  labelId,\n  loading = false\n}) => {\n  const [open, toggleOpen] = useState(isOpen);\n  const styles = useStyles2(collapsableSectionStyles);\n\n  const onClick = e => {\n    if (e.target instanceof HTMLElement && e.target.tagName === 'A') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    onToggle === null || onToggle === void 0 ? void 0 : onToggle(!open);\n    toggleOpen(!open);\n  };\n\n  const {\n    current: id\n  } = useRef(uniqueId());\n  const buttonLabelId = labelId !== null && labelId !== void 0 ? labelId : `collapse-label-${id}`;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      onClick: onClick,\n      className: cx(styles.header, className),\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        id: `collapse-button-${id}`,\n        className: styles.button,\n        onClick: onClick,\n        \"aria-expanded\": open && !loading,\n        \"aria-controls\": `collapse-content-${id}`,\n        \"aria-labelledby\": buttonLabelId,\n        children: loading ? /*#__PURE__*/_jsx(Spinner, {\n          className: styles.spinner\n        }) : /*#__PURE__*/_jsx(Icon, {\n          name: open ? 'angle-up' : 'angle-down',\n          className: styles.icon\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.label,\n        id: `collapse-label-${id}`,\n        children: label\n      })]\n    }), open && /*#__PURE__*/_jsx(\"div\", {\n      id: `collapse-content-${id}`,\n      className: cx(styles.content, contentClassName),\n      children: children\n    })]\n  });\n};\n\nconst collapsableSectionStyles = theme => ({\n  header: css({\n    display: 'flex',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    flexDirection: 'row-reverse',\n    position: 'relative',\n    justifyContent: 'space-between',\n    fontSize: theme.typography.size.lg,\n    padding: `${theme.spacing(0.5)} 0`,\n    '&:focus-within': getFocusStyles(theme)\n  }),\n  button: css({\n    all: 'unset',\n    '&:focus-visible': {\n      outline: 'none',\n      outlineOffset: 'unset',\n      transition: 'none',\n      boxShadow: 'none'\n    }\n  }),\n  icon: css({\n    color: theme.colors.text.secondary\n  }),\n  content: css({\n    padding: `${theme.spacing(2)} 0`\n  }),\n  spinner: css({\n    display: 'flex',\n    alignItems: 'center',\n    width: theme.v1.spacing.md\n  }),\n  label: css({\n    display: 'flex'\n  })\n});","map":{"version":3,"names":["css","cx","uniqueId","React","useRef","useState","Icon","Spinner","useStyles2","getFocusStyles","CollapsableSection","label","isOpen","onToggle","className","contentClassName","children","labelId","loading","open","toggleOpen","styles","collapsableSectionStyles","onClick","e","target","HTMLElement","tagName","preventDefault","stopPropagation","current","id","buttonLabelId","header","button","spinner","icon","content","theme","display","cursor","boxSizing","flexDirection","position","justifyContent","fontSize","typography","size","lg","padding","spacing","all","outline","outlineOffset","transition","boxShadow","color","colors","text","secondary","alignItems","width","v1","md"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Collapse/CollapsableSection.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { FC, ReactNode, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { Icon, Spinner } from '..';\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\n\nexport interface Props {\n  label: ReactNode;\n  isOpen: boolean;\n  /** Callback for the toggle functionality */\n  onToggle?: (isOpen: boolean) => void;\n  children: ReactNode;\n  className?: string;\n  contentClassName?: string;\n  loading?: boolean;\n  labelId?: string;\n}\n\nexport const CollapsableSection: FC<Props> = ({\n  label,\n  isOpen,\n  onToggle,\n  className,\n  contentClassName,\n  children,\n  labelId,\n  loading = false,\n}) => {\n  const [open, toggleOpen] = useState<boolean>(isOpen);\n  const styles = useStyles2(collapsableSectionStyles);\n\n  const onClick = (e: React.MouseEvent) => {\n    if (e.target instanceof HTMLElement && e.target.tagName === 'A') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    onToggle?.(!open);\n    toggleOpen(!open);\n  };\n  const { current: id } = useRef(uniqueId());\n\n  const buttonLabelId = labelId ?? `collapse-label-${id}`;\n\n  return (\n    <>\n      <div onClick={onClick} className={cx(styles.header, className)}>\n        <button\n          id={`collapse-button-${id}`}\n          className={styles.button}\n          onClick={onClick}\n          aria-expanded={open && !loading}\n          aria-controls={`collapse-content-${id}`}\n          aria-labelledby={buttonLabelId}\n        >\n          {loading ? (\n            <Spinner className={styles.spinner} />\n          ) : (\n            <Icon name={open ? 'angle-up' : 'angle-down'} className={styles.icon} />\n          )}\n        </button>\n        <div className={styles.label} id={`collapse-label-${id}`}>\n          {label}\n        </div>\n      </div>\n      {open && (\n        <div id={`collapse-content-${id}`} className={cx(styles.content, contentClassName)}>\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst collapsableSectionStyles = (theme: GrafanaTheme2) => ({\n  header: css({\n    display: 'flex',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    flexDirection: 'row-reverse',\n    position: 'relative',\n    justifyContent: 'space-between',\n    fontSize: theme.typography.size.lg,\n    padding: `${theme.spacing(0.5)} 0`,\n    '&:focus-within': getFocusStyles(theme),\n  }),\n  button: css({\n    all: 'unset',\n    '&:focus-visible': {\n      outline: 'none',\n      outlineOffset: 'unset',\n      transition: 'none',\n      boxShadow: 'none',\n    },\n  }),\n  icon: css({\n    color: theme.colors.text.secondary,\n  }),\n  content: css({\n    padding: `${theme.spacing(2)} 0`,\n  }),\n  spinner: css({\n    display: 'flex',\n    alignItems: 'center',\n    width: theme.v1.spacing.md,\n  }),\n  label: css({\n    display: 'flex',\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}