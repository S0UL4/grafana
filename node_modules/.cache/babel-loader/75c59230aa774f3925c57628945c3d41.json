{"ast":null,"code":"import { initialKeyedVariablesState } from 'app/features/variables/state/keyedVariablesReducer';\nexport let store;\nexport function setStore(newStore) {\n  store = newStore;\n}\nexport function getState() {\n  if (!store || !store.getState) {\n    return {\n      templating: Object.assign({}, initialKeyedVariablesState, {\n        lastKey: 'key'\n      })\n    }; // used by tests\n  }\n\n  return store.getState();\n}\nexport function dispatch(action) {\n  if (!store || !store.getState) {\n    return;\n  }\n\n  return store.dispatch(action);\n}","map":{"version":3,"names":["initialKeyedVariablesState","store","setStore","newStore","getState","templating","lastKey","dispatch","action"],"sources":["/home/soula/grafana/public/app/store/store.ts"],"sourcesContent":["import { Store } from 'redux';\n\nimport { initialKeyedVariablesState } from 'app/features/variables/state/keyedVariablesReducer';\nimport { StoreState } from 'app/types';\n\nexport let store: Store<StoreState>;\n\nexport function setStore(newStore: Store<StoreState>) {\n  store = newStore;\n}\n\nexport function getState(): StoreState {\n  if (!store || !store.getState) {\n    return { templating: { ...initialKeyedVariablesState, lastKey: 'key' } } as StoreState; // used by tests\n  }\n\n  return store.getState();\n}\n\nexport function dispatch(action: any) {\n  if (!store || !store.getState) {\n    return;\n  }\n\n  return store.dispatch(action);\n}\n"],"mappings":"AAEA,SAASA,0BAAT,QAA2C,oDAA3C;AAGA,OAAO,IAAIC,KAAJ;AAEP,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA+C;EACpDF,KAAK,GAAGE,QAAR;AACD;AAED,OAAO,SAASC,QAAT,GAAgC;EACrC,IAAI,CAACH,KAAD,IAAU,CAACA,KAAK,CAACG,QAArB,EAA+B;IAC7B,OAAO;MAAEC,UAAU,oBAAOL,0BAAP;QAAmCM,OAAO,EAAE;MAA5C;IAAZ,CAAP,CAD6B,CAC2D;EACzF;;EAED,OAAOL,KAAK,CAACG,QAAN,EAAP;AACD;AAED,OAAO,SAASG,QAAT,CAAkBC,MAAlB,EAA+B;EACpC,IAAI,CAACP,KAAD,IAAU,CAACA,KAAK,CAACG,QAArB,EAA+B;IAC7B;EACD;;EAED,OAAOH,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAP;AACD"},"metadata":{},"sourceType":"module"}