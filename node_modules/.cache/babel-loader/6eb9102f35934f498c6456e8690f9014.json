{"ast":null,"code":"const _excluded = [\"primary\", \"secondary\", \"info\", \"warning\", \"success\", \"error\", \"tonalOffset\", \"hoverFactor\", \"contrastThreshold\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { alpha, darken, emphasize, getContrastRatio, lighten } from './colorManipulator';\nimport { palette } from './palette';\n\nclass DarkColors {\n  constructor() {\n    _defineProperty(this, \"mode\", 'dark');\n\n    _defineProperty(this, \"whiteBase\", '204, 204, 220');\n\n    _defineProperty(this, \"border\", {\n      weak: `rgba(${this.whiteBase}, 0.07)`,\n      medium: `rgba(${this.whiteBase}, 0.15)`,\n      strong: `rgba(${this.whiteBase}, 0.25)`\n    });\n\n    _defineProperty(this, \"text\", {\n      primary: `rgb(${this.whiteBase})`,\n      secondary: `rgba(${this.whiteBase}, 0.65)`,\n      disabled: `rgba(${this.whiteBase}, 0.6)`,\n      link: palette.blueDarkText,\n      maxContrast: palette.white\n    });\n\n    _defineProperty(this, \"primary\", {\n      main: palette.blueDarkMain,\n      text: palette.blueDarkText,\n      border: palette.blueDarkText\n    });\n\n    _defineProperty(this, \"secondary\", {\n      main: `rgba(${this.whiteBase}, 0.16)`,\n      shade: `rgba(${this.whiteBase}, 0.20)`,\n      text: this.text.primary,\n      contrastText: `rgb(${this.whiteBase})`,\n      border: this.border.strong\n    });\n\n    _defineProperty(this, \"info\", this.primary);\n\n    _defineProperty(this, \"error\", {\n      main: palette.redDarkMain,\n      text: palette.redDarkText\n    });\n\n    _defineProperty(this, \"success\", {\n      main: palette.greenDarkMain,\n      text: palette.greenDarkText\n    });\n\n    _defineProperty(this, \"warning\", {\n      main: palette.orangeDarkMain,\n      text: palette.orangeDarkText\n    });\n\n    _defineProperty(this, \"background\", {\n      canvas: palette.gray05,\n      primary: palette.gray10,\n      secondary: palette.gray15\n    });\n\n    _defineProperty(this, \"action\", {\n      hover: `rgba(${this.whiteBase}, 0.16)`,\n      selected: `rgba(${this.whiteBase}, 0.12)`,\n      focus: `rgba(${this.whiteBase}, 0.16)`,\n      hoverOpacity: 0.08,\n      disabledText: this.text.disabled,\n      disabledBackground: `rgba(${this.whiteBase}, 0.04)`,\n      disabledOpacity: 0.38\n    });\n\n    _defineProperty(this, \"gradients\", {\n      brandHorizontal: 'linear-gradient(270deg, #F55F3E 0%, #FF8833 100%)',\n      brandVertical: 'linear-gradient(0.01deg, #F55F3E 0.01%, #FF8833 99.99%)'\n    });\n\n    _defineProperty(this, \"contrastThreshold\", 3);\n\n    _defineProperty(this, \"hoverFactor\", 0.03);\n\n    _defineProperty(this, \"tonalOffset\", 0.15);\n  }\n\n}\n\nclass LightColors {\n  constructor() {\n    _defineProperty(this, \"mode\", 'light');\n\n    _defineProperty(this, \"blackBase\", '36, 41, 46');\n\n    _defineProperty(this, \"primary\", {\n      main: palette.blueLightMain,\n      border: palette.blueLightText,\n      text: palette.blueLightText\n    });\n\n    _defineProperty(this, \"text\", {\n      primary: `rgba(${this.blackBase}, 1)`,\n      secondary: `rgba(${this.blackBase}, 0.75)`,\n      disabled: `rgba(${this.blackBase}, 0.50)`,\n      link: this.primary.text,\n      maxContrast: palette.black\n    });\n\n    _defineProperty(this, \"border\", {\n      weak: `rgba(${this.blackBase}, 0.12)`,\n      medium: `rgba(${this.blackBase}, 0.30)`,\n      strong: `rgba(${this.blackBase}, 0.40)`\n    });\n\n    _defineProperty(this, \"secondary\", {\n      main: `rgba(${this.blackBase}, 0.16)`,\n      shade: `rgba(${this.blackBase}, 0.20)`,\n      contrastText: `rgba(${this.blackBase},  1)`,\n      text: this.text.primary,\n      border: this.border.strong\n    });\n\n    _defineProperty(this, \"info\", {\n      main: palette.blueLightMain,\n      text: palette.blueLightText\n    });\n\n    _defineProperty(this, \"error\", {\n      main: palette.redLightMain,\n      text: palette.redLightText,\n      border: palette.redLightText\n    });\n\n    _defineProperty(this, \"success\", {\n      main: palette.greenLightMain,\n      text: palette.greenLightText\n    });\n\n    _defineProperty(this, \"warning\", {\n      main: palette.orangeLightMain,\n      text: palette.orangeLightText\n    });\n\n    _defineProperty(this, \"background\", {\n      canvas: palette.gray90,\n      primary: palette.white,\n      secondary: palette.gray100\n    });\n\n    _defineProperty(this, \"action\", {\n      hover: `rgba(${this.blackBase}, 0.12)`,\n      selected: `rgba(${this.blackBase}, 0.08)`,\n      hoverOpacity: 0.08,\n      focus: `rgba(${this.blackBase}, 0.12)`,\n      disabledBackground: `rgba(${this.blackBase}, 0.04)`,\n      disabledText: this.text.disabled,\n      disabledOpacity: 0.38\n    });\n\n    _defineProperty(this, \"gradients\", {\n      brandHorizontal: 'linear-gradient(90deg, #FF8833 0%, #F53E4C 100%)',\n      brandVertical: 'linear-gradient(0.01deg, #F53E4C -31.2%, #FF8833 113.07%)'\n    });\n\n    _defineProperty(this, \"contrastThreshold\", 3);\n\n    _defineProperty(this, \"hoverFactor\", 0.03);\n\n    _defineProperty(this, \"tonalOffset\", 0.2);\n  }\n\n}\n\nexport function createColors(colors) {\n  var _colors$mode;\n\n  const dark = new DarkColors();\n  const light = new LightColors();\n  const base = ((_colors$mode = colors.mode) !== null && _colors$mode !== void 0 ? _colors$mode : 'dark') === 'dark' ? dark : light;\n\n  const {\n    primary = base.primary,\n    secondary = base.secondary,\n    info = base.info,\n    warning = base.warning,\n    success = base.success,\n    error = base.error,\n    tonalOffset = base.tonalOffset,\n    hoverFactor = base.hoverFactor,\n    contrastThreshold = base.contrastThreshold\n  } = colors,\n        other = _objectWithoutPropertiesLoose(colors, _excluded);\n\n  function getContrastText(background, threshold = contrastThreshold) {\n    const contrastText = getContrastRatio(dark.text.maxContrast, background, base.background.primary) >= threshold ? dark.text.maxContrast : light.text.maxContrast; // todo, need color framework\n\n    return contrastText;\n  }\n\n  const getRichColor = ({\n    color,\n    name\n  }) => {\n    color = Object.assign({}, color, {\n      name\n    });\n\n    if (!color.main) {\n      throw new Error(`Missing main color for ${name}`);\n    }\n\n    if (!color.text) {\n      color.text = color.main;\n    }\n\n    if (!color.border) {\n      color.border = color.text;\n    }\n\n    if (!color.shade) {\n      color.shade = base.mode === 'light' ? darken(color.main, tonalOffset) : lighten(color.main, tonalOffset);\n    }\n\n    if (!color.transparent) {\n      color.transparent = base.mode === 'light' ? alpha(color.main, 0.08) : alpha(color.main, 0.15);\n    }\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  return merge(Object.assign({}, base, {\n    primary: getRichColor({\n      color: primary,\n      name: 'primary'\n    }),\n    secondary: getRichColor({\n      color: secondary,\n      name: 'secondary'\n    }),\n    info: getRichColor({\n      color: info,\n      name: 'info'\n    }),\n    error: getRichColor({\n      color: error,\n      name: 'error'\n    }),\n    success: getRichColor({\n      color: success,\n      name: 'success'\n    }),\n    warning: getRichColor({\n      color: warning,\n      name: 'warning'\n    }),\n    getContrastText,\n    emphasize: (color, factor) => {\n      return emphasize(color, factor !== null && factor !== void 0 ? factor : hoverFactor);\n    }\n  }), other);\n}","map":{"version":3,"names":["merge","alpha","darken","emphasize","getContrastRatio","lighten","palette","DarkColors","weak","whiteBase","medium","strong","primary","secondary","disabled","link","blueDarkText","maxContrast","white","main","blueDarkMain","text","border","shade","contrastText","redDarkMain","redDarkText","greenDarkMain","greenDarkText","orangeDarkMain","orangeDarkText","canvas","gray05","gray10","gray15","hover","selected","focus","hoverOpacity","disabledText","disabledBackground","disabledOpacity","brandHorizontal","brandVertical","LightColors","blueLightMain","blueLightText","blackBase","black","redLightMain","redLightText","greenLightMain","greenLightText","orangeLightMain","orangeLightText","gray90","gray100","createColors","colors","dark","light","base","mode","info","warning","success","error","tonalOffset","hoverFactor","contrastThreshold","other","getContrastText","background","threshold","getRichColor","color","name","Error","transparent","factor"],"sources":["/home/soula/grafana/packages/grafana-data/src/themes/createColors.ts"],"sourcesContent":["import { merge } from 'lodash';\n\nimport { alpha, darken, emphasize, getContrastRatio, lighten } from './colorManipulator';\nimport { palette } from './palette';\nimport { DeepPartial, ThemeRichColor } from './types';\n\n/** @internal */\nexport type ThemeColorsMode = 'light' | 'dark';\n\n/** @internal */\nexport interface ThemeColorsBase<TColor> {\n  mode: ThemeColorsMode;\n\n  primary: TColor;\n  secondary: TColor;\n  info: TColor;\n  error: TColor;\n  success: TColor;\n  warning: TColor;\n\n  text: {\n    primary: string;\n    secondary: string;\n    disabled: string;\n    link: string;\n    /** Used for auto white or dark text on colored backgrounds */\n    maxContrast: string;\n  };\n\n  background: {\n    /** Dashboard and body background */\n    canvas: string;\n    /** Primary content pane background (panels etc) */\n    primary: string;\n    /** Cards and elements that need to stand out on the primary background */\n    secondary: string;\n  };\n\n  border: {\n    weak: string;\n    medium: string;\n    strong: string;\n  };\n\n  gradients: {\n    brandVertical: string;\n    brandHorizontal: string;\n  };\n\n  action: {\n    /** Used for selected menu item / select option */\n    selected: string;\n    /** Used for hovered menu item / select option */\n    hover: string;\n    /** Used for button/colored background hover opacity */\n    hoverOpacity: number;\n    /** Used focused menu item / select option */\n    focus: string;\n    /** Used for disabled buttons and inputs */\n    disabledBackground: string;\n    /** Disabled text */\n    disabledText: string;\n    /** Disablerd opacity */\n    disabledOpacity: number;\n  };\n\n  hoverFactor: number;\n  contrastThreshold: number;\n  tonalOffset: number;\n}\n\nexport interface ThemeHoverStrengh {}\n\n/** @beta */\nexport interface ThemeColors extends ThemeColorsBase<ThemeRichColor> {\n  /** Returns a text color for the background */\n  getContrastText(background: string, threshold?: number): string;\n  /* Brighten or darken a color by specified factor (0-1) */\n  emphasize(color: string, amount?: number): string;\n}\n\n/** @internal */\nexport type ThemeColorsInput = DeepPartial<ThemeColorsBase<ThemeRichColor>>;\n\nclass DarkColors implements ThemeColorsBase<Partial<ThemeRichColor>> {\n  mode: ThemeColorsMode = 'dark';\n\n  // Used to get more white opacity colors\n  whiteBase = '204, 204, 220';\n\n  border = {\n    weak: `rgba(${this.whiteBase}, 0.07)`,\n    medium: `rgba(${this.whiteBase}, 0.15)`,\n    strong: `rgba(${this.whiteBase}, 0.25)`,\n  };\n\n  text = {\n    primary: `rgb(${this.whiteBase})`,\n    secondary: `rgba(${this.whiteBase}, 0.65)`,\n    disabled: `rgba(${this.whiteBase}, 0.6)`,\n    link: palette.blueDarkText,\n    maxContrast: palette.white,\n  };\n\n  primary = {\n    main: palette.blueDarkMain,\n    text: palette.blueDarkText,\n    border: palette.blueDarkText,\n  };\n\n  secondary = {\n    main: `rgba(${this.whiteBase}, 0.16)`,\n    shade: `rgba(${this.whiteBase}, 0.20)`,\n    text: this.text.primary,\n    contrastText: `rgb(${this.whiteBase})`,\n    border: this.border.strong,\n  };\n\n  info = this.primary;\n\n  error = {\n    main: palette.redDarkMain,\n    text: palette.redDarkText,\n  };\n\n  success = {\n    main: palette.greenDarkMain,\n    text: palette.greenDarkText,\n  };\n\n  warning = {\n    main: palette.orangeDarkMain,\n    text: palette.orangeDarkText,\n  };\n\n  background = {\n    canvas: palette.gray05,\n    primary: palette.gray10,\n    secondary: palette.gray15,\n  };\n\n  action = {\n    hover: `rgba(${this.whiteBase}, 0.16)`,\n    selected: `rgba(${this.whiteBase}, 0.12)`,\n    focus: `rgba(${this.whiteBase}, 0.16)`,\n    hoverOpacity: 0.08,\n    disabledText: this.text.disabled,\n    disabledBackground: `rgba(${this.whiteBase}, 0.04)`,\n    disabledOpacity: 0.38,\n  };\n\n  gradients = {\n    brandHorizontal: 'linear-gradient(270deg, #F55F3E 0%, #FF8833 100%)',\n    brandVertical: 'linear-gradient(0.01deg, #F55F3E 0.01%, #FF8833 99.99%)',\n  };\n\n  contrastThreshold = 3;\n  hoverFactor = 0.03;\n  tonalOffset = 0.15;\n}\n\nclass LightColors implements ThemeColorsBase<Partial<ThemeRichColor>> {\n  mode: ThemeColorsMode = 'light';\n\n  blackBase = '36, 41, 46';\n\n  primary = {\n    main: palette.blueLightMain,\n    border: palette.blueLightText,\n    text: palette.blueLightText,\n  };\n\n  text = {\n    primary: `rgba(${this.blackBase}, 1)`,\n    secondary: `rgba(${this.blackBase}, 0.75)`,\n    disabled: `rgba(${this.blackBase}, 0.50)`,\n    link: this.primary.text,\n    maxContrast: palette.black,\n  };\n\n  border = {\n    weak: `rgba(${this.blackBase}, 0.12)`,\n    medium: `rgba(${this.blackBase}, 0.30)`,\n    strong: `rgba(${this.blackBase}, 0.40)`,\n  };\n\n  secondary = {\n    main: `rgba(${this.blackBase}, 0.16)`,\n    shade: `rgba(${this.blackBase}, 0.20)`,\n    contrastText: `rgba(${this.blackBase},  1)`,\n    text: this.text.primary,\n    border: this.border.strong,\n  };\n\n  info = {\n    main: palette.blueLightMain,\n    text: palette.blueLightText,\n  };\n\n  error = {\n    main: palette.redLightMain,\n    text: palette.redLightText,\n    border: palette.redLightText,\n  };\n\n  success = {\n    main: palette.greenLightMain,\n    text: palette.greenLightText,\n  };\n\n  warning = {\n    main: palette.orangeLightMain,\n    text: palette.orangeLightText,\n  };\n\n  background = {\n    canvas: palette.gray90,\n    primary: palette.white,\n    secondary: palette.gray100,\n  };\n\n  action = {\n    hover: `rgba(${this.blackBase}, 0.12)`,\n    selected: `rgba(${this.blackBase}, 0.08)`,\n    hoverOpacity: 0.08,\n    focus: `rgba(${this.blackBase}, 0.12)`,\n    disabledBackground: `rgba(${this.blackBase}, 0.04)`,\n    disabledText: this.text.disabled,\n    disabledOpacity: 0.38,\n  };\n\n  gradients = {\n    brandHorizontal: 'linear-gradient(90deg, #FF8833 0%, #F53E4C 100%)',\n    brandVertical: 'linear-gradient(0.01deg, #F53E4C -31.2%, #FF8833 113.07%)',\n  };\n\n  contrastThreshold = 3;\n  hoverFactor = 0.03;\n  tonalOffset = 0.2;\n}\n\nexport function createColors(colors: ThemeColorsInput): ThemeColors {\n  const dark = new DarkColors();\n  const light = new LightColors();\n  const base = (colors.mode ?? 'dark') === 'dark' ? dark : light;\n  const {\n    primary = base.primary,\n    secondary = base.secondary,\n    info = base.info,\n    warning = base.warning,\n    success = base.success,\n    error = base.error,\n    tonalOffset = base.tonalOffset,\n    hoverFactor = base.hoverFactor,\n    contrastThreshold = base.contrastThreshold,\n    ...other\n  } = colors;\n\n  function getContrastText(background: string, threshold: number = contrastThreshold) {\n    const contrastText =\n      getContrastRatio(dark.text.maxContrast, background, base.background.primary) >= threshold\n        ? dark.text.maxContrast\n        : light.text.maxContrast;\n    // todo, need color framework\n    return contrastText;\n  }\n\n  const getRichColor = ({ color, name }: GetRichColorProps): ThemeRichColor => {\n    color = { ...color, name };\n    if (!color.main) {\n      throw new Error(`Missing main color for ${name}`);\n    }\n    if (!color.text) {\n      color.text = color.main;\n    }\n    if (!color.border) {\n      color.border = color.text;\n    }\n    if (!color.shade) {\n      color.shade = base.mode === 'light' ? darken(color.main, tonalOffset) : lighten(color.main, tonalOffset);\n    }\n    if (!color.transparent) {\n      color.transparent = base.mode === 'light' ? alpha(color.main, 0.08) : alpha(color.main, 0.15);\n    }\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color as ThemeRichColor;\n  };\n\n  return merge(\n    {\n      ...base,\n      primary: getRichColor({ color: primary, name: 'primary' }),\n      secondary: getRichColor({ color: secondary, name: 'secondary' }),\n      info: getRichColor({ color: info, name: 'info' }),\n      error: getRichColor({ color: error, name: 'error' }),\n      success: getRichColor({ color: success, name: 'success' }),\n      warning: getRichColor({ color: warning, name: 'warning' }),\n      getContrastText,\n      emphasize: (color: string, factor?: number) => {\n        return emphasize(color, factor ?? hoverFactor);\n      },\n    },\n    other\n  );\n}\n\ninterface GetRichColorProps {\n  color: Partial<ThemeRichColor>;\n  name: string;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}