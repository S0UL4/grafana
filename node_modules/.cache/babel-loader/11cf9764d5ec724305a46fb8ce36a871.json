{"ast":null,"code":"import React, { useState } from 'react';\nimport { AppEvents } from '@grafana/data';\nimport { Button, HorizontalGroup, ConfirmModal } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { useInstallStatus, useUninstallStatus, useInstall, useUninstall } from '../../state/hooks';\nimport { PluginStatus } from '../../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function InstallControlsButton({\n  plugin,\n  pluginStatus,\n  latestCompatibleVersion\n}) {\n  const {\n    isInstalling,\n    error: errorInstalling\n  } = useInstallStatus();\n  const {\n    isUninstalling,\n    error: errorUninstalling\n  } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n\n  const onInstall = async () => {\n    await install(plugin.id, latestCompatibleVersion === null || latestCompatibleVersion === void 0 ? void 0 : latestCompatibleVersion.version);\n\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Installed ${plugin.name}`]);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    await uninstall(plugin.id);\n\n    if (!errorUninstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Uninstalled ${plugin.name}`]);\n    }\n  };\n\n  const onUpdate = async () => {\n    await install(plugin.id, latestCompatibleVersion === null || latestCompatibleVersion === void 0 ? void 0 : latestCompatibleVersion.version, true);\n\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(ConfirmModal, {\n        isOpen: isConfirmModalVisible,\n        title: `Uninstall ${plugin.name}`,\n        body: \"Are you sure you want to uninstall this plugin?\",\n        confirmText: \"Confirm\",\n        icon: \"exclamation-triangle\",\n        onConfirm: onUninstall,\n        onDismiss: hideConfirmModal\n      }), /*#__PURE__*/_jsx(HorizontalGroup, {\n        height: \"auto\",\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"destructive\",\n          disabled: isUninstalling,\n          onClick: showConfirmModal,\n          children: uninstallBtnText\n        })\n      })]\n    });\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return /*#__PURE__*/_jsxs(HorizontalGroup, {\n      height: \"auto\",\n      children: [/*#__PURE__*/_jsx(Button, {\n        disabled: isInstalling,\n        onClick: onUpdate,\n        children: isInstalling ? 'Updating' : 'Update'\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"destructive\",\n        disabled: isUninstalling,\n        onClick: onUninstall,\n        children: uninstallBtnText\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    disabled: isInstalling,\n    onClick: onInstall,\n    children: isInstalling ? 'Installing' : 'Install'\n  });\n}","map":{"version":3,"names":["React","useState","AppEvents","Button","HorizontalGroup","ConfirmModal","appEvents","useInstallStatus","useUninstallStatus","useInstall","useUninstall","PluginStatus","InstallControlsButton","plugin","pluginStatus","latestCompatibleVersion","isInstalling","error","errorInstalling","isUninstalling","errorUninstalling","install","uninstall","isConfirmModalVisible","setIsConfirmModalVisible","showConfirmModal","hideConfirmModal","uninstallBtnText","onInstall","id","version","emit","alertSuccess","name","onUninstall","onUpdate","UNINSTALL","UPDATE"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/InstallControls/InstallControlsButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { AppEvents } from '@grafana/data';\nimport { Button, HorizontalGroup, ConfirmModal } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\n\nimport { useInstallStatus, useUninstallStatus, useInstall, useUninstall } from '../../state/hooks';\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\n\ntype InstallControlsButtonProps = {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n};\n\nexport function InstallControlsButton({ plugin, pluginStatus, latestCompatibleVersion }: InstallControlsButtonProps) {\n  const { isInstalling, error: errorInstalling } = useInstallStatus();\n  const { isUninstalling, error: errorUninstalling } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n\n  const onInstall = async () => {\n    await install(plugin.id, latestCompatibleVersion?.version);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Installed ${plugin.name}`]);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    await uninstall(plugin.id);\n    if (!errorUninstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Uninstalled ${plugin.name}`]);\n    }\n  };\n\n  const onUpdate = async () => {\n    await install(plugin.id, latestCompatibleVersion?.version, true);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <>\n        <ConfirmModal\n          isOpen={isConfirmModalVisible}\n          title={`Uninstall ${plugin.name}`}\n          body=\"Are you sure you want to uninstall this plugin?\"\n          confirmText=\"Confirm\"\n          icon=\"exclamation-triangle\"\n          onConfirm={onUninstall}\n          onDismiss={hideConfirmModal}\n        />\n        <HorizontalGroup height=\"auto\">\n          <Button variant=\"destructive\" disabled={isUninstalling} onClick={showConfirmModal}>\n            {uninstallBtnText}\n          </Button>\n        </HorizontalGroup>\n      </>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        <Button disabled={isInstalling} onClick={onUpdate}>\n          {isInstalling ? 'Updating' : 'Update'}\n        </Button>\n        <Button variant=\"destructive\" disabled={isUninstalling} onClick={onUninstall}>\n          {uninstallBtnText}\n        </Button>\n      </HorizontalGroup>\n    );\n  }\n\n  return (\n    <Button disabled={isInstalling} onClick={onInstall}>\n      {isInstalling ? 'Installing' : 'Install'}\n    </Button>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}