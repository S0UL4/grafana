{"ast":null,"code":"var _td, _Label, _th, _th2, _th3, _th4, _th5, _th6;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FilterInput, Label } from '@grafana/ui';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\nimport { UserPicker } from 'app/core/components/Select/UserPicker';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { WithFeatureToggle } from 'app/core/components/WithFeatureToggle';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport TeamMemberRow from './TeamMemberRow';\nimport { addTeamMember } from './state/actions';\nimport { setSearchMemberQuery } from './state/reducers';\nimport { getSearchMemberQuery, isSignedInUserTeamAdmin } from './state/selectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state) {\n  return {\n    searchMemberQuery: getSearchMemberQuery(state.team),\n    editorsCanAdmin: config.editorsCanAdmin,\n    // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user // this makes the feature toggle mockable/controllable from tests,\n\n  };\n}\n\nconst mapDispatchToProps = {\n  addTeamMember,\n  setSearchMemberQuery\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport class TeamMembers extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSearchQueryChange\", value => {\n      this.props.setSearchMemberQuery(value);\n    });\n\n    _defineProperty(this, \"onToggleAdding\", () => {\n      this.setState({\n        isAdding: !this.state.isAdding\n      });\n    });\n\n    _defineProperty(this, \"onUserSelected\", user => {\n      this.setState({\n        newTeamMember: user\n      });\n    });\n\n    _defineProperty(this, \"onAddUserToTeam\", async () => {\n      this.props.addTeamMember(this.state.newTeamMember.id);\n      this.setState({\n        newTeamMember: null\n      });\n    });\n\n    this.state = {\n      isAdding: false,\n      newTeamMember: null\n    };\n  }\n\n  renderLabels(labels) {\n    if (!labels) {\n      return _td || (_td = /*#__PURE__*/_jsx(\"td\", {}));\n    }\n\n    return /*#__PURE__*/_jsx(\"td\", {\n      children: labels.map(label => /*#__PURE__*/_jsx(TagBadge, {\n        label: label,\n        removeIcon: false,\n        count: 0,\n        onClick: () => {}\n      }, label))\n    });\n  }\n\n  render() {\n    const {\n      isAdding\n    } = this.state;\n    const {\n      searchMemberQuery,\n      members,\n      syncEnabled,\n      editorsCanAdmin,\n      signedInUser\n    } = this.props;\n    const isTeamAdmin = isSignedInUserTeamAdmin({\n      members,\n      editorsCanAdmin,\n      signedInUser\n    });\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"page-action-bar\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form gf-form--grow\",\n          children: /*#__PURE__*/_jsx(FilterInput, {\n            placeholder: \"Search members\",\n            value: searchMemberQuery,\n            onChange: this.onSearchQueryChange\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          className: \"pull-right\",\n          onClick: this.onToggleAdding,\n          disabled: isAdding || !isTeamAdmin,\n          children: \"Add member\"\n        })]\n      }), /*#__PURE__*/_jsx(SlideDown, {\n        in: isAdding,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"cta-form\",\n          children: [/*#__PURE__*/_jsx(CloseButton, {\n            \"aria-label\": \"Close 'Add team member' dialogue\",\n            onClick: this.onToggleAdding\n          }), _Label || (_Label = /*#__PURE__*/_jsx(Label, {\n            htmlFor: \"user-picker\",\n            children: \"Add team member\"\n          })), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"gf-form-inline\",\n            children: [/*#__PURE__*/_jsx(UserPicker, {\n              inputId: \"user-picker\",\n              onSelected: this.onUserSelected,\n              className: \"min-width-30\"\n            }), this.state.newTeamMember && /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              onClick: this.onAddUserToTeam,\n              children: \"Add to team\"\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"admin-list-table\",\n        children: /*#__PURE__*/_jsxs(\"table\", {\n          className: \"filter-table filter-table--hover form-inline\",\n          children: [/*#__PURE__*/_jsx(\"thead\", {\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              children: [_th || (_th = /*#__PURE__*/_jsx(\"th\", {})), _th2 || (_th2 = /*#__PURE__*/_jsx(\"th\", {\n                children: \"Login\"\n              })), _th3 || (_th3 = /*#__PURE__*/_jsx(\"th\", {\n                children: \"Email\"\n              })), _th4 || (_th4 = /*#__PURE__*/_jsx(\"th\", {\n                children: \"Name\"\n              })), /*#__PURE__*/_jsx(WithFeatureToggle, {\n                featureToggle: editorsCanAdmin,\n                children: _th5 || (_th5 = /*#__PURE__*/_jsx(\"th\", {\n                  children: \"Permission\"\n                }))\n              }), syncEnabled && (_th6 || (_th6 = /*#__PURE__*/_jsx(\"th\", {}))), /*#__PURE__*/_jsx(\"th\", {\n                style: {\n                  width: '1%'\n                }\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"tbody\", {\n            children: members && members.map(member => /*#__PURE__*/_jsx(TeamMemberRow, {\n              member: member,\n              syncEnabled: syncEnabled,\n              editorsCanAdmin: editorsCanAdmin,\n              signedInUserIsTeamAdmin: isTeamAdmin\n            }, member.userId))\n          })]\n        })\n      })]\n    });\n  }\n\n}\nexport default connector(TeamMembers);","map":{"version":3,"names":["React","PureComponent","connect","Button","FilterInput","Label","SlideDown","CloseButton","UserPicker","TagBadge","WithFeatureToggle","config","contextSrv","TeamMemberRow","addTeamMember","setSearchMemberQuery","getSearchMemberQuery","isSignedInUserTeamAdmin","mapStateToProps","state","searchMemberQuery","team","editorsCanAdmin","signedInUser","user","mapDispatchToProps","connector","TeamMembers","constructor","props","value","setState","isAdding","newTeamMember","id","renderLabels","labels","map","label","render","members","syncEnabled","isTeamAdmin","onSearchQueryChange","onToggleAdding","onUserSelected","onAddUserToTeam","width","member","userId"],"sources":["/home/soula/grafana/public/app/features/teams/TeamMembers.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Button, FilterInput, Label } from '@grafana/ui';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { CloseButton } from 'app/core/components/CloseButton/CloseButton';\nimport { UserPicker } from 'app/core/components/Select/UserPicker';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { WithFeatureToggle } from 'app/core/components/WithFeatureToggle';\nimport { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { TeamMember, OrgUser } from 'app/types';\n\nimport TeamMemberRow from './TeamMemberRow';\nimport { addTeamMember } from './state/actions';\nimport { setSearchMemberQuery } from './state/reducers';\nimport { getSearchMemberQuery, isSignedInUserTeamAdmin } from './state/selectors';\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchMemberQuery: getSearchMemberQuery(state.team),\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  addTeamMember,\n  setSearchMemberQuery,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  members: TeamMember[];\n  syncEnabled: boolean;\n}\n\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport interface State {\n  isAdding: boolean;\n  newTeamMember?: SelectableValue<OrgUser['userId']> | null;\n}\n\nexport class TeamMembers extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { isAdding: false, newTeamMember: null };\n  }\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchMemberQuery(value);\n  };\n\n  onToggleAdding = () => {\n    this.setState({ isAdding: !this.state.isAdding });\n  };\n\n  onUserSelected = (user: SelectableValue<OrgUser['userId']>) => {\n    this.setState({ newTeamMember: user });\n  };\n\n  onAddUserToTeam = async () => {\n    this.props.addTeamMember(this.state.newTeamMember!.id);\n    this.setState({ newTeamMember: null });\n  };\n\n  renderLabels(labels: string[]) {\n    if (!labels) {\n      return <td />;\n    }\n\n    return (\n      <td>\n        {labels.map((label) => (\n          <TagBadge key={label} label={label} removeIcon={false} count={0} onClick={() => {}} />\n        ))}\n      </td>\n    );\n  }\n\n  render() {\n    const { isAdding } = this.state;\n    const { searchMemberQuery, members, syncEnabled, editorsCanAdmin, signedInUser } = this.props;\n    const isTeamAdmin = isSignedInUserTeamAdmin({ members, editorsCanAdmin, signedInUser });\n\n    return (\n      <div>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput placeholder=\"Search members\" value={searchMemberQuery} onChange={this.onSearchQueryChange} />\n          </div>\n          <Button className=\"pull-right\" onClick={this.onToggleAdding} disabled={isAdding || !isTeamAdmin}>\n            Add member\n          </Button>\n        </div>\n\n        <SlideDown in={isAdding}>\n          <div className=\"cta-form\">\n            <CloseButton aria-label=\"Close 'Add team member' dialogue\" onClick={this.onToggleAdding} />\n            <Label htmlFor=\"user-picker\">Add team member</Label>\n            <div className=\"gf-form-inline\">\n              <UserPicker inputId=\"user-picker\" onSelected={this.onUserSelected} className=\"min-width-30\" />\n              {this.state.newTeamMember && (\n                <Button type=\"submit\" onClick={this.onAddUserToTeam}>\n                  Add to team\n                </Button>\n              )}\n            </div>\n          </div>\n        </SlideDown>\n\n        <div className=\"admin-list-table\">\n          <table className=\"filter-table filter-table--hover form-inline\">\n            <thead>\n              <tr>\n                <th />\n                <th>Login</th>\n                <th>Email</th>\n                <th>Name</th>\n                <WithFeatureToggle featureToggle={editorsCanAdmin}>\n                  <th>Permission</th>\n                </WithFeatureToggle>\n                {syncEnabled && <th />}\n                <th style={{ width: '1%' }} />\n              </tr>\n            </thead>\n            <tbody>\n              {members &&\n                members.map((member) => (\n                  <TeamMemberRow\n                    key={member.userId}\n                    member={member}\n                    syncEnabled={syncEnabled}\n                    editorsCanAdmin={editorsCanAdmin}\n                    signedInUserIsTeamAdmin={isTeamAdmin}\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(TeamMembers);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}