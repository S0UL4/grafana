{"ast":null,"code":"import { FunctionalVector } from './FunctionalVector';\n/**\n * This will force all values to be numbers\n *\n * @public\n */\n\nexport class AsNumberVector extends FunctionalVector {\n  constructor(field) {\n    super();\n    this.field = field;\n  }\n\n  get length() {\n    return this.field.length;\n  }\n\n  get(index) {\n    return +this.field.get(index);\n  }\n\n}","map":{"version":3,"names":["FunctionalVector","AsNumberVector","constructor","field","length","get","index"],"sources":["/home/soula/grafana/packages/grafana-data/src/vector/AsNumberVector.ts"],"sourcesContent":["import { Vector } from '../types';\n\nimport { FunctionalVector } from './FunctionalVector';\n\n/**\n * This will force all values to be numbers\n *\n * @public\n */\nexport class AsNumberVector extends FunctionalVector<number> {\n  constructor(private field: Vector) {\n    super();\n  }\n\n  get length() {\n    return this.field.length;\n  }\n\n  get(index: number) {\n    return +this.field.get(index);\n  }\n}\n"],"mappings":"AAEA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAN,SAA6BD,gBAA7B,CAAsD;EAC3DE,WAAW,CAASC,KAAT,EAAwB;IACjC;IADiC,KAAfA,KAAe,GAAfA,KAAe;EAElC;;EAES,IAANC,MAAM,GAAG;IACX,OAAO,KAAKD,KAAL,CAAWC,MAAlB;EACD;;EAEDC,GAAG,CAACC,KAAD,EAAgB;IACjB,OAAO,CAAC,KAAKH,KAAL,CAAWE,GAAX,CAAeC,KAAf,CAAR;EACD;;AAX0D"},"metadata":{},"sourceType":"module"}