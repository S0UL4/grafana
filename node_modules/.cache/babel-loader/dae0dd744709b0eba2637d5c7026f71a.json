{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { textUtil } from '@grafana/data';\nimport { CopyPanelEvent } from '@grafana/runtime';\nimport { ConfirmModal } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { copyPanel } from 'app/features/dashboard/utils/panel';\nimport { ShowConfirmModalEvent, ShowModalReactEvent } from '../../types/events';\nimport { AngularModalProxy } from '../components/modals/AngularModalProxy';\nimport { provideTheme } from '../utils/ConfigProvider';\nexport class ModalManager {\n  constructor() {\n    _defineProperty(this, \"reactModalRoot\", document.body);\n\n    _defineProperty(this, \"reactModalNode\", document.createElement('div'));\n\n    _defineProperty(this, \"onReactModalDismiss\", () => {\n      ReactDOM.unmountComponentAtNode(this.reactModalNode);\n      this.reactModalRoot.removeChild(this.reactModalNode);\n    });\n  }\n\n  init() {\n    appEvents.subscribe(ShowConfirmModalEvent, e => this.showConfirmModal(e.payload));\n    appEvents.subscribe(ShowModalReactEvent, e => this.showModalReact(e.payload));\n    appEvents.subscribe(CopyPanelEvent, e => copyPanel(e.payload));\n  }\n\n  showModalReact(options) {\n    const {\n      component,\n      props\n    } = options;\n    const modalProps = {\n      component,\n      props: Object.assign({}, props, {\n        isOpen: true,\n        onDismiss: this.onReactModalDismiss\n      })\n    };\n    const elem = /*#__PURE__*/React.createElement(provideTheme(AngularModalProxy), modalProps);\n    this.reactModalRoot.appendChild(this.reactModalNode);\n    ReactDOM.render(elem, this.reactModalNode);\n  }\n\n  showConfirmModal(payload) {\n    const {\n      confirmText,\n      onConfirm = () => undefined,\n      text2,\n      altActionText,\n      onAltAction,\n      noText,\n      text,\n      text2htmlBind,\n      yesText = 'Yes',\n      icon,\n      title = 'Confirm'\n    } = payload;\n    const props = {\n      confirmText: yesText,\n      confirmationText: confirmText,\n      icon,\n      title,\n      body: text,\n      description: text2 && text2htmlBind ? textUtil.sanitize(text2) : text2,\n      isOpen: true,\n      dismissText: noText,\n      onConfirm: () => {\n        onConfirm();\n        this.onReactModalDismiss();\n      },\n      onDismiss: this.onReactModalDismiss,\n      onAlternative: onAltAction ? () => {\n        onAltAction();\n        this.onReactModalDismiss();\n      } : undefined,\n      alternativeText: altActionText\n    };\n    const modalProps = {\n      component: ConfirmModal,\n      props\n    };\n    const elem = /*#__PURE__*/React.createElement(provideTheme(AngularModalProxy), modalProps);\n    this.reactModalRoot.appendChild(this.reactModalNode);\n    ReactDOM.render(elem, this.reactModalNode);\n  }\n\n}","map":{"version":3,"names":["React","ReactDOM","textUtil","CopyPanelEvent","ConfirmModal","appEvents","copyPanel","ShowConfirmModalEvent","ShowModalReactEvent","AngularModalProxy","provideTheme","ModalManager","document","body","createElement","unmountComponentAtNode","reactModalNode","reactModalRoot","removeChild","init","subscribe","e","showConfirmModal","payload","showModalReact","options","component","props","modalProps","isOpen","onDismiss","onReactModalDismiss","elem","appendChild","render","confirmText","onConfirm","undefined","text2","altActionText","onAltAction","noText","text","text2htmlBind","yesText","icon","title","confirmationText","description","sanitize","dismissText","onAlternative","alternativeText"],"sources":["/home/soula/grafana/public/app/core/services/ModalManager.ts"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { textUtil } from '@grafana/data';\nimport { CopyPanelEvent } from '@grafana/runtime';\nimport { ConfirmModal, ConfirmModalProps } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { copyPanel } from 'app/features/dashboard/utils/panel';\n\nimport { ShowConfirmModalEvent, ShowConfirmModalPayload, ShowModalReactEvent } from '../../types/events';\nimport { AngularModalProxy } from '../components/modals/AngularModalProxy';\nimport { provideTheme } from '../utils/ConfigProvider';\n\nexport class ModalManager {\n  reactModalRoot = document.body;\n  reactModalNode = document.createElement('div');\n\n  init() {\n    appEvents.subscribe(ShowConfirmModalEvent, (e) => this.showConfirmModal(e.payload));\n    appEvents.subscribe(ShowModalReactEvent, (e) => this.showModalReact(e.payload));\n    appEvents.subscribe(CopyPanelEvent, (e) => copyPanel(e.payload));\n  }\n\n  showModalReact(options: any) {\n    const { component, props } = options;\n    const modalProps = {\n      component,\n      props: {\n        ...props,\n        isOpen: true,\n        onDismiss: this.onReactModalDismiss,\n      },\n    };\n\n    const elem = React.createElement(provideTheme(AngularModalProxy), modalProps);\n    this.reactModalRoot.appendChild(this.reactModalNode);\n    ReactDOM.render(elem, this.reactModalNode);\n  }\n\n  onReactModalDismiss = () => {\n    ReactDOM.unmountComponentAtNode(this.reactModalNode);\n    this.reactModalRoot.removeChild(this.reactModalNode);\n  };\n\n  showConfirmModal(payload: ShowConfirmModalPayload) {\n    const {\n      confirmText,\n      onConfirm = () => undefined,\n      text2,\n      altActionText,\n      onAltAction,\n      noText,\n      text,\n      text2htmlBind,\n      yesText = 'Yes',\n      icon,\n      title = 'Confirm',\n    } = payload;\n    const props: ConfirmModalProps = {\n      confirmText: yesText,\n      confirmationText: confirmText,\n      icon,\n      title,\n      body: text,\n      description: text2 && text2htmlBind ? textUtil.sanitize(text2) : text2,\n      isOpen: true,\n      dismissText: noText,\n      onConfirm: () => {\n        onConfirm();\n        this.onReactModalDismiss();\n      },\n      onDismiss: this.onReactModalDismiss,\n      onAlternative: onAltAction\n        ? () => {\n            onAltAction();\n            this.onReactModalDismiss();\n          }\n        : undefined,\n      alternativeText: altActionText,\n    };\n    const modalProps = {\n      component: ConfirmModal,\n      props,\n    };\n\n    const elem = React.createElement(provideTheme(AngularModalProxy), modalProps);\n    this.reactModalRoot.appendChild(this.reactModalNode);\n    ReactDOM.render(elem, this.reactModalNode);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}