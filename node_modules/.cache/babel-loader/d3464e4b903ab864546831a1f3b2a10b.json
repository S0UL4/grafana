{"ast":null,"code":"import { getDataSourceSrv, locationService } from '@grafana/runtime';\nimport config from 'app/core/config';\nimport { addLibraryPanel, copyPanel, duplicatePanel, removePanel, sharePanel, unlinkLibraryPanel } from 'app/features/dashboard/utils/panel';\nimport { isPanelModelLibraryPanel } from 'app/features/library-panels/guard';\nimport { store } from 'app/store/store';\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { getExploreUrl } from '../../../core/utils/explore';\nimport { navigateToExplore } from '../../explore/state/main';\nimport { getTimeSrv } from '../services/TimeSrv';\nexport function getPanelMenu(dashboard, panel, angularComponent) {\n  const onViewPanel = event => {\n    event.preventDefault();\n    locationService.partial({\n      viewPanel: panel.id\n    });\n  };\n\n  const onEditPanel = event => {\n    event.preventDefault();\n    locationService.partial({\n      editPanel: panel.id\n    });\n  };\n\n  const onSharePanel = event => {\n    event.preventDefault();\n    sharePanel(dashboard, panel);\n  };\n\n  const onAddLibraryPanel = event => {\n    event.preventDefault();\n    addLibraryPanel(dashboard, panel);\n  };\n\n  const onUnlinkLibraryPanel = event => {\n    event.preventDefault();\n    unlinkLibraryPanel(panel);\n  };\n\n  const onInspectPanel = tab => {\n    locationService.partial({\n      inspect: panel.id,\n      inspectTab: tab\n    });\n  };\n\n  const onMore = event => {\n    event.preventDefault();\n  };\n\n  const onDuplicatePanel = event => {\n    event.preventDefault();\n    duplicatePanel(dashboard, panel);\n  };\n\n  const onCopyPanel = event => {\n    event.preventDefault();\n    copyPanel(panel);\n  };\n\n  const onRemovePanel = event => {\n    event.preventDefault();\n    removePanel(dashboard, panel, true);\n  };\n\n  const onNavigateToExplore = event => {\n    event.preventDefault();\n    const openInNewWindow = event.ctrlKey || event.metaKey ? url => window.open(`${config.appSubUrl}${url}`) : undefined;\n    store.dispatch(navigateToExplore(panel, {\n      getDataSourceSrv,\n      getTimeSrv,\n      getExploreUrl,\n      openInNewWindow\n    }));\n  };\n\n  const menu = [];\n\n  if (!panel.isEditing) {\n    menu.push({\n      text: 'View',\n      iconClassName: 'eye',\n      onClick: onViewPanel,\n      shortcut: 'v'\n    });\n  }\n\n  if (dashboard.canEditPanel(panel) && !panel.isEditing) {\n    menu.push({\n      text: 'Edit',\n      iconClassName: 'edit',\n      onClick: onEditPanel,\n      shortcut: 'e'\n    });\n  }\n\n  menu.push({\n    text: 'Share',\n    iconClassName: 'share-alt',\n    onClick: onSharePanel,\n    shortcut: 'p s'\n  });\n\n  if (contextSrv.hasAccessToExplore() && !(panel.plugin && panel.plugin.meta.skipDataQuery)) {\n    menu.push({\n      text: 'Explore',\n      iconClassName: 'compass',\n      shortcut: 'x',\n      onClick: onNavigateToExplore\n    });\n  }\n\n  const inspectMenu = []; // Only show these inspect actions for data plugins\n\n  if (panel.plugin && !panel.plugin.meta.skipDataQuery) {\n    inspectMenu.push({\n      text: 'Data',\n      onClick: e => onInspectPanel('data')\n    });\n\n    if (dashboard.meta.canEdit) {\n      inspectMenu.push({\n        text: 'Query',\n        onClick: e => onInspectPanel('query')\n      });\n    }\n  }\n\n  inspectMenu.push({\n    text: 'Panel JSON',\n    onClick: e => onInspectPanel('json')\n  });\n  menu.push({\n    type: 'submenu',\n    text: 'Inspect',\n    iconClassName: 'info-circle',\n    onClick: e => onInspectPanel(),\n    shortcut: 'i',\n    subMenu: inspectMenu\n  });\n  const subMenu = [];\n\n  if (dashboard.canEditPanel(panel) && !(panel.isViewing || panel.isEditing)) {\n    subMenu.push({\n      text: 'Duplicate',\n      onClick: onDuplicatePanel,\n      shortcut: 'p d'\n    });\n    subMenu.push({\n      text: 'Copy',\n      onClick: onCopyPanel\n    });\n\n    if (isPanelModelLibraryPanel(panel)) {\n      subMenu.push({\n        text: 'Unlink library panel',\n        onClick: onUnlinkLibraryPanel\n      });\n    } else {\n      subMenu.push({\n        text: 'Create library panel',\n        onClick: onAddLibraryPanel\n      });\n    }\n  } // add old angular panel options\n\n\n  if (angularComponent) {\n    const scope = angularComponent.getScope();\n    const panelCtrl = scope.$$childHead.ctrl;\n    const angularMenuItems = panelCtrl.getExtendedMenu();\n\n    for (const item of angularMenuItems) {\n      const reactItem = {\n        text: item.text,\n        href: item.href,\n        shortcut: item.shortcut\n      };\n\n      if (item.click) {\n        reactItem.onClick = () => {\n          scope.$eval(item.click, {\n            ctrl: panelCtrl\n          });\n        };\n      }\n\n      subMenu.push(reactItem);\n    }\n  }\n\n  if (!panel.isEditing && subMenu.length) {\n    menu.push({\n      type: 'submenu',\n      text: 'More...',\n      iconClassName: 'cube',\n      subMenu,\n      onClick: onMore\n    });\n  }\n\n  if (dashboard.canEditPanel(panel) && !panel.isEditing && !panel.isViewing) {\n    menu.push({\n      type: 'divider',\n      text: ''\n    });\n    menu.push({\n      text: 'Remove',\n      iconClassName: 'trash-alt',\n      onClick: onRemovePanel,\n      shortcut: 'p r'\n    });\n  }\n\n  return menu;\n}","map":{"version":3,"names":["getDataSourceSrv","locationService","config","addLibraryPanel","copyPanel","duplicatePanel","removePanel","sharePanel","unlinkLibraryPanel","isPanelModelLibraryPanel","store","contextSrv","getExploreUrl","navigateToExplore","getTimeSrv","getPanelMenu","dashboard","panel","angularComponent","onViewPanel","event","preventDefault","partial","viewPanel","id","onEditPanel","editPanel","onSharePanel","onAddLibraryPanel","onUnlinkLibraryPanel","onInspectPanel","tab","inspect","inspectTab","onMore","onDuplicatePanel","onCopyPanel","onRemovePanel","onNavigateToExplore","openInNewWindow","ctrlKey","metaKey","url","window","open","appSubUrl","undefined","dispatch","menu","isEditing","push","text","iconClassName","onClick","shortcut","canEditPanel","hasAccessToExplore","plugin","meta","skipDataQuery","inspectMenu","e","canEdit","type","subMenu","isViewing","scope","getScope","panelCtrl","$$childHead","ctrl","angularMenuItems","getExtendedMenu","item","reactItem","href","click","$eval","length"],"sources":["/home/soula/grafana/public/app/features/dashboard/utils/getPanelMenu.ts"],"sourcesContent":["import { PanelMenuItem } from '@grafana/data';\nimport { AngularComponent, getDataSourceSrv, locationService } from '@grafana/runtime';\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport config from 'app/core/config';\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\nimport { PanelModel } from 'app/features/dashboard/state/PanelModel';\nimport {\n  addLibraryPanel,\n  copyPanel,\n  duplicatePanel,\n  removePanel,\n  sharePanel,\n  unlinkLibraryPanel,\n} from 'app/features/dashboard/utils/panel';\nimport { isPanelModelLibraryPanel } from 'app/features/library-panels/guard';\nimport { store } from 'app/store/store';\n\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { getExploreUrl } from '../../../core/utils/explore';\nimport { navigateToExplore } from '../../explore/state/main';\nimport { getTimeSrv } from '../services/TimeSrv';\n\nexport function getPanelMenu(\n  dashboard: DashboardModel,\n  panel: PanelModel,\n  angularComponent?: AngularComponent | null\n): PanelMenuItem[] {\n  const onViewPanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    locationService.partial({\n      viewPanel: panel.id,\n    });\n  };\n\n  const onEditPanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    locationService.partial({\n      editPanel: panel.id,\n    });\n  };\n\n  const onSharePanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    sharePanel(dashboard, panel);\n  };\n\n  const onAddLibraryPanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    addLibraryPanel(dashboard, panel);\n  };\n\n  const onUnlinkLibraryPanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    unlinkLibraryPanel(panel);\n  };\n\n  const onInspectPanel = (tab?: string) => {\n    locationService.partial({\n      inspect: panel.id,\n      inspectTab: tab,\n    });\n  };\n\n  const onMore = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n  };\n\n  const onDuplicatePanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    duplicatePanel(dashboard, panel);\n  };\n\n  const onCopyPanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    copyPanel(panel);\n  };\n\n  const onRemovePanel = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    removePanel(dashboard, panel, true);\n  };\n\n  const onNavigateToExplore = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    const openInNewWindow =\n      event.ctrlKey || event.metaKey ? (url: string) => window.open(`${config.appSubUrl}${url}`) : undefined;\n    store.dispatch(navigateToExplore(panel, { getDataSourceSrv, getTimeSrv, getExploreUrl, openInNewWindow }) as any);\n  };\n\n  const menu: PanelMenuItem[] = [];\n\n  if (!panel.isEditing) {\n    menu.push({\n      text: 'View',\n      iconClassName: 'eye',\n      onClick: onViewPanel,\n      shortcut: 'v',\n    });\n  }\n\n  if (dashboard.canEditPanel(panel) && !panel.isEditing) {\n    menu.push({\n      text: 'Edit',\n      iconClassName: 'edit',\n      onClick: onEditPanel,\n      shortcut: 'e',\n    });\n  }\n\n  menu.push({\n    text: 'Share',\n    iconClassName: 'share-alt',\n    onClick: onSharePanel,\n    shortcut: 'p s',\n  });\n\n  if (contextSrv.hasAccessToExplore() && !(panel.plugin && panel.plugin.meta.skipDataQuery)) {\n    menu.push({\n      text: 'Explore',\n      iconClassName: 'compass',\n      shortcut: 'x',\n      onClick: onNavigateToExplore,\n    });\n  }\n\n  const inspectMenu: PanelMenuItem[] = [];\n\n  // Only show these inspect actions for data plugins\n  if (panel.plugin && !panel.plugin.meta.skipDataQuery) {\n    inspectMenu.push({\n      text: 'Data',\n      onClick: (e: React.MouseEvent<any>) => onInspectPanel('data'),\n    });\n\n    if (dashboard.meta.canEdit) {\n      inspectMenu.push({\n        text: 'Query',\n        onClick: (e: React.MouseEvent<any>) => onInspectPanel('query'),\n      });\n    }\n  }\n\n  inspectMenu.push({\n    text: 'Panel JSON',\n    onClick: (e: React.MouseEvent<any>) => onInspectPanel('json'),\n  });\n\n  menu.push({\n    type: 'submenu',\n    text: 'Inspect',\n    iconClassName: 'info-circle',\n    onClick: (e: React.MouseEvent<any>) => onInspectPanel(),\n    shortcut: 'i',\n    subMenu: inspectMenu,\n  });\n\n  const subMenu: PanelMenuItem[] = [];\n\n  if (dashboard.canEditPanel(panel) && !(panel.isViewing || panel.isEditing)) {\n    subMenu.push({\n      text: 'Duplicate',\n      onClick: onDuplicatePanel,\n      shortcut: 'p d',\n    });\n\n    subMenu.push({\n      text: 'Copy',\n      onClick: onCopyPanel,\n    });\n\n    if (isPanelModelLibraryPanel(panel)) {\n      subMenu.push({\n        text: 'Unlink library panel',\n        onClick: onUnlinkLibraryPanel,\n      });\n    } else {\n      subMenu.push({\n        text: 'Create library panel',\n        onClick: onAddLibraryPanel,\n      });\n    }\n  }\n\n  // add old angular panel options\n  if (angularComponent) {\n    const scope = angularComponent.getScope();\n    const panelCtrl: PanelCtrl = scope.$$childHead.ctrl;\n    const angularMenuItems = panelCtrl.getExtendedMenu();\n\n    for (const item of angularMenuItems) {\n      const reactItem: PanelMenuItem = {\n        text: item.text,\n        href: item.href,\n        shortcut: item.shortcut,\n      };\n\n      if (item.click) {\n        reactItem.onClick = () => {\n          scope.$eval(item.click, { ctrl: panelCtrl });\n        };\n      }\n\n      subMenu.push(reactItem);\n    }\n  }\n\n  if (!panel.isEditing && subMenu.length) {\n    menu.push({\n      type: 'submenu',\n      text: 'More...',\n      iconClassName: 'cube',\n      subMenu,\n      onClick: onMore,\n    });\n  }\n\n  if (dashboard.canEditPanel(panel) && !panel.isEditing && !panel.isViewing) {\n    menu.push({ type: 'divider', text: '' });\n\n    menu.push({\n      text: 'Remove',\n      iconClassName: 'trash-alt',\n      onClick: onRemovePanel,\n      shortcut: 'p r',\n    });\n  }\n\n  return menu;\n}\n"],"mappings":"AACA,SAA2BA,gBAA3B,EAA6CC,eAA7C,QAAoE,kBAApE;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,SACEC,eADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,kBANF,QAOO,oCAPP;AAQA,SAASC,wBAAT,QAAyC,mCAAzC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAO,SAASC,YAAT,CACLC,SADK,EAELC,KAFK,EAGLC,gBAHK,EAIY;EACjB,MAAMC,WAAW,GAAIC,KAAD,IAAkC;IACpDA,KAAK,CAACC,cAAN;IACApB,eAAe,CAACqB,OAAhB,CAAwB;MACtBC,SAAS,EAAEN,KAAK,CAACO;IADK,CAAxB;EAGD,CALD;;EAOA,MAAMC,WAAW,GAAIL,KAAD,IAAkC;IACpDA,KAAK,CAACC,cAAN;IACApB,eAAe,CAACqB,OAAhB,CAAwB;MACtBI,SAAS,EAAET,KAAK,CAACO;IADK,CAAxB;EAGD,CALD;;EAOA,MAAMG,YAAY,GAAIP,KAAD,IAAkC;IACrDA,KAAK,CAACC,cAAN;IACAd,UAAU,CAACS,SAAD,EAAYC,KAAZ,CAAV;EACD,CAHD;;EAKA,MAAMW,iBAAiB,GAAIR,KAAD,IAAkC;IAC1DA,KAAK,CAACC,cAAN;IACAlB,eAAe,CAACa,SAAD,EAAYC,KAAZ,CAAf;EACD,CAHD;;EAKA,MAAMY,oBAAoB,GAAIT,KAAD,IAAkC;IAC7DA,KAAK,CAACC,cAAN;IACAb,kBAAkB,CAACS,KAAD,CAAlB;EACD,CAHD;;EAKA,MAAMa,cAAc,GAAIC,GAAD,IAAkB;IACvC9B,eAAe,CAACqB,OAAhB,CAAwB;MACtBU,OAAO,EAAEf,KAAK,CAACO,EADO;MAEtBS,UAAU,EAAEF;IAFU,CAAxB;EAID,CALD;;EAOA,MAAMG,MAAM,GAAId,KAAD,IAAkC;IAC/CA,KAAK,CAACC,cAAN;EACD,CAFD;;EAIA,MAAMc,gBAAgB,GAAIf,KAAD,IAAkC;IACzDA,KAAK,CAACC,cAAN;IACAhB,cAAc,CAACW,SAAD,EAAYC,KAAZ,CAAd;EACD,CAHD;;EAKA,MAAMmB,WAAW,GAAIhB,KAAD,IAAkC;IACpDA,KAAK,CAACC,cAAN;IACAjB,SAAS,CAACa,KAAD,CAAT;EACD,CAHD;;EAKA,MAAMoB,aAAa,GAAIjB,KAAD,IAAkC;IACtDA,KAAK,CAACC,cAAN;IACAf,WAAW,CAACU,SAAD,EAAYC,KAAZ,EAAmB,IAAnB,CAAX;EACD,CAHD;;EAKA,MAAMqB,mBAAmB,GAAIlB,KAAD,IAAkC;IAC5DA,KAAK,CAACC,cAAN;IACA,MAAMkB,eAAe,GACnBnB,KAAK,CAACoB,OAAN,IAAiBpB,KAAK,CAACqB,OAAvB,GAAkCC,GAAD,IAAiBC,MAAM,CAACC,IAAP,CAAa,GAAE1C,MAAM,CAAC2C,SAAU,GAAEH,GAAI,EAAtC,CAAlD,GAA6FI,SAD/F;IAEApC,KAAK,CAACqC,QAAN,CAAelC,iBAAiB,CAACI,KAAD,EAAQ;MAAEjB,gBAAF;MAAoBc,UAApB;MAAgCF,aAAhC;MAA+C2B;IAA/C,CAAR,CAAhC;EACD,CALD;;EAOA,MAAMS,IAAqB,GAAG,EAA9B;;EAEA,IAAI,CAAC/B,KAAK,CAACgC,SAAX,EAAsB;IACpBD,IAAI,CAACE,IAAL,CAAU;MACRC,IAAI,EAAE,MADE;MAERC,aAAa,EAAE,KAFP;MAGRC,OAAO,EAAElC,WAHD;MAIRmC,QAAQ,EAAE;IAJF,CAAV;EAMD;;EAED,IAAItC,SAAS,CAACuC,YAAV,CAAuBtC,KAAvB,KAAiC,CAACA,KAAK,CAACgC,SAA5C,EAAuD;IACrDD,IAAI,CAACE,IAAL,CAAU;MACRC,IAAI,EAAE,MADE;MAERC,aAAa,EAAE,MAFP;MAGRC,OAAO,EAAE5B,WAHD;MAIR6B,QAAQ,EAAE;IAJF,CAAV;EAMD;;EAEDN,IAAI,CAACE,IAAL,CAAU;IACRC,IAAI,EAAE,OADE;IAERC,aAAa,EAAE,WAFP;IAGRC,OAAO,EAAE1B,YAHD;IAIR2B,QAAQ,EAAE;EAJF,CAAV;;EAOA,IAAI3C,UAAU,CAAC6C,kBAAX,MAAmC,EAAEvC,KAAK,CAACwC,MAAN,IAAgBxC,KAAK,CAACwC,MAAN,CAAaC,IAAb,CAAkBC,aAApC,CAAvC,EAA2F;IACzFX,IAAI,CAACE,IAAL,CAAU;MACRC,IAAI,EAAE,SADE;MAERC,aAAa,EAAE,SAFP;MAGRE,QAAQ,EAAE,GAHF;MAIRD,OAAO,EAAEf;IAJD,CAAV;EAMD;;EAED,MAAMsB,WAA4B,GAAG,EAArC,CAnGiB,CAqGjB;;EACA,IAAI3C,KAAK,CAACwC,MAAN,IAAgB,CAACxC,KAAK,CAACwC,MAAN,CAAaC,IAAb,CAAkBC,aAAvC,EAAsD;IACpDC,WAAW,CAACV,IAAZ,CAAiB;MACfC,IAAI,EAAE,MADS;MAEfE,OAAO,EAAGQ,CAAD,IAA8B/B,cAAc,CAAC,MAAD;IAFtC,CAAjB;;IAKA,IAAId,SAAS,CAAC0C,IAAV,CAAeI,OAAnB,EAA4B;MAC1BF,WAAW,CAACV,IAAZ,CAAiB;QACfC,IAAI,EAAE,OADS;QAEfE,OAAO,EAAGQ,CAAD,IAA8B/B,cAAc,CAAC,OAAD;MAFtC,CAAjB;IAID;EACF;;EAED8B,WAAW,CAACV,IAAZ,CAAiB;IACfC,IAAI,EAAE,YADS;IAEfE,OAAO,EAAGQ,CAAD,IAA8B/B,cAAc,CAAC,MAAD;EAFtC,CAAjB;EAKAkB,IAAI,CAACE,IAAL,CAAU;IACRa,IAAI,EAAE,SADE;IAERZ,IAAI,EAAE,SAFE;IAGRC,aAAa,EAAE,aAHP;IAIRC,OAAO,EAAGQ,CAAD,IAA8B/B,cAAc,EAJ7C;IAKRwB,QAAQ,EAAE,GALF;IAMRU,OAAO,EAAEJ;EAND,CAAV;EASA,MAAMI,OAAwB,GAAG,EAAjC;;EAEA,IAAIhD,SAAS,CAACuC,YAAV,CAAuBtC,KAAvB,KAAiC,EAAEA,KAAK,CAACgD,SAAN,IAAmBhD,KAAK,CAACgC,SAA3B,CAArC,EAA4E;IAC1Ee,OAAO,CAACd,IAAR,CAAa;MACXC,IAAI,EAAE,WADK;MAEXE,OAAO,EAAElB,gBAFE;MAGXmB,QAAQ,EAAE;IAHC,CAAb;IAMAU,OAAO,CAACd,IAAR,CAAa;MACXC,IAAI,EAAE,MADK;MAEXE,OAAO,EAAEjB;IAFE,CAAb;;IAKA,IAAI3B,wBAAwB,CAACQ,KAAD,CAA5B,EAAqC;MACnC+C,OAAO,CAACd,IAAR,CAAa;QACXC,IAAI,EAAE,sBADK;QAEXE,OAAO,EAAExB;MAFE,CAAb;IAID,CALD,MAKO;MACLmC,OAAO,CAACd,IAAR,CAAa;QACXC,IAAI,EAAE,sBADK;QAEXE,OAAO,EAAEzB;MAFE,CAAb;IAID;EACF,CA3JgB,CA6JjB;;;EACA,IAAIV,gBAAJ,EAAsB;IACpB,MAAMgD,KAAK,GAAGhD,gBAAgB,CAACiD,QAAjB,EAAd;IACA,MAAMC,SAAoB,GAAGF,KAAK,CAACG,WAAN,CAAkBC,IAA/C;IACA,MAAMC,gBAAgB,GAAGH,SAAS,CAACI,eAAV,EAAzB;;IAEA,KAAK,MAAMC,IAAX,IAAmBF,gBAAnB,EAAqC;MACnC,MAAMG,SAAwB,GAAG;QAC/BvB,IAAI,EAAEsB,IAAI,CAACtB,IADoB;QAE/BwB,IAAI,EAAEF,IAAI,CAACE,IAFoB;QAG/BrB,QAAQ,EAAEmB,IAAI,CAACnB;MAHgB,CAAjC;;MAMA,IAAImB,IAAI,CAACG,KAAT,EAAgB;QACdF,SAAS,CAACrB,OAAV,GAAoB,MAAM;UACxBa,KAAK,CAACW,KAAN,CAAYJ,IAAI,CAACG,KAAjB,EAAwB;YAAEN,IAAI,EAAEF;UAAR,CAAxB;QACD,CAFD;MAGD;;MAEDJ,OAAO,CAACd,IAAR,CAAawB,SAAb;IACD;EACF;;EAED,IAAI,CAACzD,KAAK,CAACgC,SAAP,IAAoBe,OAAO,CAACc,MAAhC,EAAwC;IACtC9B,IAAI,CAACE,IAAL,CAAU;MACRa,IAAI,EAAE,SADE;MAERZ,IAAI,EAAE,SAFE;MAGRC,aAAa,EAAE,MAHP;MAIRY,OAJQ;MAKRX,OAAO,EAAEnB;IALD,CAAV;EAOD;;EAED,IAAIlB,SAAS,CAACuC,YAAV,CAAuBtC,KAAvB,KAAiC,CAACA,KAAK,CAACgC,SAAxC,IAAqD,CAAChC,KAAK,CAACgD,SAAhE,EAA2E;IACzEjB,IAAI,CAACE,IAAL,CAAU;MAAEa,IAAI,EAAE,SAAR;MAAmBZ,IAAI,EAAE;IAAzB,CAAV;IAEAH,IAAI,CAACE,IAAL,CAAU;MACRC,IAAI,EAAE,QADE;MAERC,aAAa,EAAE,WAFP;MAGRC,OAAO,EAAEhB,aAHD;MAIRiB,QAAQ,EAAE;IAJF,CAAV;EAMD;;EAED,OAAON,IAAP;AACD"},"metadata":{},"sourceType":"module"}