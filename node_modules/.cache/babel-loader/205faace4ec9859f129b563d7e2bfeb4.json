{"ast":null,"code":"var _br, _br2;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Libraries\nimport { css } from '@emotion/css';\nimport { cloneDeep, extend } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { deprecationWarning } from '@grafana/data';\nimport { getAngularLoader, getBackendSrv } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport class AppConfigCtrlWrapper extends PureComponent {\n  //@ts-ignore\n  // Needed for angular scope\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"element\", null);\n\n    _defineProperty(this, \"model\", void 0);\n\n    _defineProperty(this, \"preUpdateHook\", () => Promise.resolve());\n\n    _defineProperty(this, \"postUpdateHook\", () => Promise.resolve());\n\n    _defineProperty(this, \"update\", () => {\n      const pluginId = this.model.id;\n      this.preUpdateHook().then(() => {\n        const updateCmd = extend({\n          enabled: this.model.enabled,\n          pinned: this.model.pinned,\n          jsonData: this.model.jsonData,\n          secureJsonData: this.model.secureJsonData\n        }, {});\n        return getBackendSrv().post(`/api/plugins/${pluginId}/settings`, updateCmd);\n      }).then(this.postUpdateHook).then(res => {\n        window.location.href = window.location.href;\n      });\n    });\n\n    _defineProperty(this, \"setPreUpdateHook\", callback => {\n      this.preUpdateHook = callback;\n    });\n\n    _defineProperty(this, \"setPostUpdateHook\", callback => {\n      this.postUpdateHook = callback;\n    });\n\n    _defineProperty(this, \"importDashboards\", () => {\n      deprecationWarning('AppConfig', 'importDashboards()');\n      return Promise.resolve();\n    });\n\n    _defineProperty(this, \"enable\", () => {\n      this.model.enabled = true;\n      this.model.pinned = true;\n      this.update();\n    });\n\n    _defineProperty(this, \"disable\", () => {\n      this.model.enabled = false;\n      this.model.pinned = false;\n      this.update();\n    });\n\n    this.state = {\n      angularCtrl: null,\n      refresh: 0\n    };\n  }\n\n  componentDidMount() {\n    // Force a reload after the first mount -- is there a better way to do this?\n    setTimeout(() => {\n      this.setState({\n        refresh: this.state.refresh + 1\n      });\n    }, 5);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.element || this.state.angularCtrl) {\n      return;\n    } // Set a copy of the meta\n\n\n    this.model = cloneDeep(this.props.app.meta);\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"app-config-ctrl\"></plugin-component>';\n    const scopeProps = {\n      ctrl: this,\n      // used by angular injectorMonkeyPatch to detect this scenario\n      isAppConfigCtrl: true\n    };\n    const angularCtrl = loader.load(this.element, scopeProps, template);\n    this.setState({\n      angularCtrl\n    });\n  }\n\n  render() {\n    const model = this.model;\n    const withRightMargin = css({\n      marginRight: '8px'\n    });\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        ref: element => this.element = element\n      }), _br || (_br = /*#__PURE__*/_jsx(\"br\", {})), _br2 || (_br2 = /*#__PURE__*/_jsx(\"br\", {})), model && /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form\",\n        children: [!model.enabled && /*#__PURE__*/_jsx(Button, {\n          variant: \"primary\",\n          onClick: this.enable,\n          className: withRightMargin,\n          children: \"Enable\"\n        }), model.enabled && /*#__PURE__*/_jsx(Button, {\n          variant: \"primary\",\n          onClick: this.update,\n          className: withRightMargin,\n          children: \"Update\"\n        }), model.enabled && /*#__PURE__*/_jsx(Button, {\n          variant: \"destructive\",\n          onClick: this.disable,\n          className: withRightMargin,\n          children: \"Disable\"\n        })]\n      })]\n    });\n  } //-----------------------------------------------------------\n  // Copied from plugin_edit_ctrl\n  //-----------------------------------------------------------\n\n\n}","map":{"version":3,"names":["css","cloneDeep","extend","React","PureComponent","deprecationWarning","getAngularLoader","getBackendSrv","Button","AppConfigCtrlWrapper","constructor","props","Promise","resolve","pluginId","model","id","preUpdateHook","then","updateCmd","enabled","pinned","jsonData","secureJsonData","post","postUpdateHook","res","window","location","href","callback","update","state","angularCtrl","refresh","componentDidMount","setTimeout","setState","componentDidUpdate","prevProps","element","app","meta","loader","template","scopeProps","ctrl","isAppConfigCtrl","load","render","withRightMargin","marginRight","enable","disable"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/AppConfigWrapper.tsx"],"sourcesContent":["// Libraries\nimport { css } from '@emotion/css';\nimport { cloneDeep, extend } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { PluginMeta, AppPlugin, deprecationWarning } from '@grafana/data';\nimport { AngularComponent, getAngularLoader, getBackendSrv } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\n\ninterface Props {\n  app: AppPlugin;\n}\n\ninterface State {\n  angularCtrl: AngularComponent | null;\n  refresh: number;\n}\n\nexport class AppConfigCtrlWrapper extends PureComponent<Props, State> {\n  element: HTMLElement | null = null;\n  //@ts-ignore\n  model: PluginMeta;\n\n  // Needed for angular scope\n  preUpdateHook = () => Promise.resolve();\n  postUpdateHook = () => Promise.resolve();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      angularCtrl: null,\n      refresh: 0,\n    };\n  }\n\n  componentDidMount() {\n    // Force a reload after the first mount -- is there a better way to do this?\n    setTimeout(() => {\n      this.setState({ refresh: this.state.refresh + 1 });\n    }, 5);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.element || this.state.angularCtrl) {\n      return;\n    }\n\n    // Set a copy of the meta\n    this.model = cloneDeep(this.props.app.meta);\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"app-config-ctrl\"></plugin-component>';\n    const scopeProps = {\n      ctrl: this,\n      // used by angular injectorMonkeyPatch to detect this scenario\n      isAppConfigCtrl: true,\n    };\n    const angularCtrl = loader.load(this.element, scopeProps, template);\n\n    this.setState({ angularCtrl });\n  }\n\n  render() {\n    const model = this.model;\n\n    const withRightMargin = css({ marginRight: '8px' });\n\n    return (\n      <div>\n        <div ref={(element) => (this.element = element)} />\n        <br />\n        <br />\n        {model && (\n          <div className=\"gf-form\">\n            {!model.enabled && (\n              <Button variant=\"primary\" onClick={this.enable} className={withRightMargin}>\n                Enable\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"primary\" onClick={this.update} className={withRightMargin}>\n                Update\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"destructive\" onClick={this.disable} className={withRightMargin}>\n                Disable\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  //-----------------------------------------------------------\n  // Copied from plugin_edit_ctrl\n  //-----------------------------------------------------------\n\n  update = () => {\n    const pluginId = this.model.id;\n\n    this.preUpdateHook()\n      .then(() => {\n        const updateCmd = extend(\n          {\n            enabled: this.model.enabled,\n            pinned: this.model.pinned,\n            jsonData: this.model.jsonData,\n            secureJsonData: this.model.secureJsonData,\n          },\n          {}\n        );\n        return getBackendSrv().post(`/api/plugins/${pluginId}/settings`, updateCmd);\n      })\n      .then(this.postUpdateHook)\n      .then((res) => {\n        window.location.href = window.location.href;\n      });\n  };\n\n  setPreUpdateHook = (callback: () => any) => {\n    this.preUpdateHook = callback;\n  };\n\n  setPostUpdateHook = (callback: () => any) => {\n    this.postUpdateHook = callback;\n  };\n\n  // Stub to avoid unknown function in legacy code\n  importDashboards = (): Promise<void> => {\n    deprecationWarning('AppConfig', 'importDashboards()');\n    return Promise.resolve();\n  };\n\n  enable = () => {\n    this.model.enabled = true;\n    this.model.pinned = true;\n    this.update();\n  };\n\n  disable = () => {\n    this.model.enabled = false;\n    this.model.pinned = false;\n    this.update();\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}