{"ast":null,"code":"var _Icon, _span, _div;\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { Stack } from '@grafana/experimental';\nimport { Label, Tooltip, Input, Icon, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const MatcherFilter = ({\n  className,\n  onFilterChange,\n  defaultQueryString,\n  queryString\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const handleSearchChange = e => {\n    const target = e.target;\n    onFilterChange(target.value);\n  };\n\n  const searchIcon = _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n    name: 'search'\n  }));\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsx(Label, {\n      children: /*#__PURE__*/_jsxs(Stack, {\n        gap: 0.5,\n        children: [_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          children: \"Search by label\"\n        })), /*#__PURE__*/_jsx(Tooltip, {\n          content: _div || (_div = /*#__PURE__*/_jsxs(\"div\", {\n            children: [\"Filter alerts using label querying, ex:\", /*#__PURE__*/_jsx(\"pre\", {\n              children: `{severity=\"critical\", instance=~\"cluster-us-.+\"}`\n            })]\n          })),\n          children: /*#__PURE__*/_jsx(Icon, {\n            className: styles.icon,\n            name: \"info-circle\",\n            size: \"sm\"\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Input, {\n      placeholder: \"Search\",\n      defaultValue: defaultQueryString,\n      value: queryString,\n      onChange: handleSearchChange,\n      \"data-testid\": \"search-query-input\",\n      prefix: searchIcon,\n      className: styles.inputWidth\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  icon: css`\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  inputWidth: css`\n    width: 340px;\n    flex-grow: 0;\n  `\n});","map":{"version":3,"names":["css","React","Stack","Label","Tooltip","Input","Icon","useStyles2","MatcherFilter","className","onFilterChange","defaultQueryString","queryString","styles","getStyles","handleSearchChange","e","target","value","searchIcon","icon","inputWidth","theme","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/alert-groups/MatcherFilter.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FormEvent } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Label, Tooltip, Input, Icon, useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  className?: string;\n  queryString?: string;\n  defaultQueryString?: string;\n  onFilterChange: (filterString: string) => void;\n}\n\nexport const MatcherFilter = ({ className, onFilterChange, defaultQueryString, queryString }: Props) => {\n  const styles = useStyles2(getStyles);\n  const handleSearchChange = (e: FormEvent<HTMLInputElement>) => {\n    const target = e.target as HTMLInputElement;\n    onFilterChange(target.value);\n  };\n  const searchIcon = <Icon name={'search'} />;\n  return (\n    <div className={className}>\n      <Label>\n        <Stack gap={0.5}>\n          <span>Search by label</span>\n          <Tooltip\n            content={\n              <div>\n                Filter alerts using label querying, ex:\n                <pre>{`{severity=\"critical\", instance=~\"cluster-us-.+\"}`}</pre>\n              </div>\n            }\n          >\n            <Icon className={styles.icon} name=\"info-circle\" size=\"sm\" />\n          </Tooltip>\n        </Stack>\n      </Label>\n      <Input\n        placeholder=\"Search\"\n        defaultValue={defaultQueryString}\n        value={queryString}\n        onChange={handleSearchChange}\n        data-testid=\"search-query-input\"\n        prefix={searchIcon}\n        className={styles.inputWidth}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  icon: css`\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  inputWidth: css`\n    width: 340px;\n    flex-grow: 0;\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAGA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,UAAtC,QAAwD,aAAxD;;;AASA,OAAO,MAAMC,aAAa,GAAG,CAAC;EAAEC,SAAF;EAAaC,cAAb;EAA6BC,kBAA7B;EAAiDC;AAAjD,CAAD,KAA2E;EACtG,MAAMC,MAAM,GAAGN,UAAU,CAACO,SAAD,CAAzB;;EACA,MAAMC,kBAAkB,GAAIC,CAAD,IAAoC;IAC7D,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;IACAP,cAAc,CAACO,MAAM,CAACC,KAAR,CAAd;EACD,CAHD;;EAIA,MAAMC,UAAU,kCAAG,KAAC,IAAD;IAAM,IAAI,EAAE;EAAZ,EAAH,CAAhB;;EACA,oBACE;IAAK,SAAS,EAAEV,SAAhB;IAAA,wBACE,KAAC,KAAD;MAAA,uBACE,MAAC,KAAD;QAAO,GAAG,EAAE,GAAZ;QAAA,0CACE;UAAA;QAAA,EADF,gBAEE,KAAC,OAAD;UACE,OAAO,+BACL;YAAA,mEAEE;cAAA,UAAO;YAAP,EAFF;UAAA,EADK,CADT;UAAA,uBAQE,KAAC,IAAD;YAAM,SAAS,EAAEI,MAAM,CAACO,IAAxB;YAA8B,IAAI,EAAC,aAAnC;YAAiD,IAAI,EAAC;UAAtD;QARF,EAFF;MAAA;IADF,EADF,eAgBE,KAAC,KAAD;MACE,WAAW,EAAC,QADd;MAEE,YAAY,EAAET,kBAFhB;MAGE,KAAK,EAAEC,WAHT;MAIE,QAAQ,EAAEG,kBAJZ;MAKE,eAAY,oBALd;MAME,MAAM,EAAEI,UANV;MAOE,SAAS,EAAEN,MAAM,CAACQ;IAPpB,EAhBF;EAAA,EADF;AA4BD,CAnCM;;AAqCP,MAAMP,SAAS,GAAIQ,KAAD,KAA2B;EAC3CF,IAAI,EAAEpB,GAAI;AACZ,oBAAoBsB,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACvC,GAH6C;EAI3CF,UAAU,EAAErB,GAAI;AAClB;AACA;AACA;AAP6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}