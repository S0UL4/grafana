{"ast":null,"code":"var _span;\n\nimport { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertState } from 'app/plugins/datasource/alertmanager/types';\nimport { AlertLabels } from '../AlertLabels';\nimport { CollapseToggle } from '../CollapseToggle';\nimport { AlertGroupAlertsTable } from './AlertGroupAlertsTable';\nimport { AlertGroupHeader } from './AlertGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const AlertGroup = ({\n  alertManagerSourceName,\n  group\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.group,\n        \"data-testid\": \"alert-group\",\n        children: [/*#__PURE__*/_jsx(CollapseToggle, {\n          isCollapsed: isCollapsed,\n          onToggle: () => setIsCollapsed(!isCollapsed),\n          \"data-testid\": \"alert-group-collapse-toggle\"\n        }), Object.keys(group.labels).length ? /*#__PURE__*/_jsx(AlertLabels, {\n          className: styles.headerLabels,\n          labels: group.labels\n        }) : _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          children: \"No grouping\"\n        }))]\n      }), /*#__PURE__*/_jsx(AlertGroupHeader, {\n        group: group\n      })]\n    }), !isCollapsed && /*#__PURE__*/_jsx(AlertGroupAlertsTable, {\n      alertManagerSourceName: alertManagerSourceName,\n      alerts: group.alerts\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  wrapper: css`\n    & + & {\n      margin-top: ${theme.spacing(2)};\n    }\n  `,\n  headerLabels: css`\n    padding-bottom: 0 !important;\n    margin-bottom: -${theme.spacing(0.5)};\n  `,\n  header: css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${theme.spacing(1, 1, 1, 0)};\n    background-color: ${theme.colors.background.secondary};\n    width: 100%;\n  `,\n  group: css`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  `,\n  summary: css``,\n  spanElement: css`\n    margin-left: ${theme.spacing(0.5)};\n  `,\n  [AlertState.Active]: css`\n    color: ${theme.colors.error.main};\n  `,\n  [AlertState.Suppressed]: css`\n    color: ${theme.colors.primary.main};\n  `,\n  [AlertState.Unprocessed]: css`\n    color: ${theme.colors.secondary.main};\n  `\n});","map":{"version":3,"names":["css","React","useState","useStyles2","AlertState","AlertLabels","CollapseToggle","AlertGroupAlertsTable","AlertGroupHeader","AlertGroup","alertManagerSourceName","group","isCollapsed","setIsCollapsed","styles","getStyles","wrapper","header","Object","keys","labels","length","headerLabels","alerts","theme","spacing","colors","background","secondary","summary","spanElement","Active","error","main","Suppressed","primary","Unprocessed"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/alert-groups/AlertGroup.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertmanagerGroup, AlertState } from 'app/plugins/datasource/alertmanager/types';\n\nimport { AlertLabels } from '../AlertLabels';\nimport { CollapseToggle } from '../CollapseToggle';\n\nimport { AlertGroupAlertsTable } from './AlertGroupAlertsTable';\nimport { AlertGroupHeader } from './AlertGroupHeader';\n\ninterface Props {\n  group: AlertmanagerGroup;\n  alertManagerSourceName: string;\n}\n\nexport const AlertGroup = ({ alertManagerSourceName, group }: Props) => {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(true);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <div className={styles.group} data-testid=\"alert-group\">\n          <CollapseToggle\n            isCollapsed={isCollapsed}\n            onToggle={() => setIsCollapsed(!isCollapsed)}\n            data-testid=\"alert-group-collapse-toggle\"\n          />\n          {Object.keys(group.labels).length ? (\n            <AlertLabels className={styles.headerLabels} labels={group.labels} />\n          ) : (\n            <span>No grouping</span>\n          )}\n        </div>\n        <AlertGroupHeader group={group} />\n      </div>\n      {!isCollapsed && <AlertGroupAlertsTable alertManagerSourceName={alertManagerSourceName} alerts={group.alerts} />}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    & + & {\n      margin-top: ${theme.spacing(2)};\n    }\n  `,\n  headerLabels: css`\n    padding-bottom: 0 !important;\n    margin-bottom: -${theme.spacing(0.5)};\n  `,\n  header: css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${theme.spacing(1, 1, 1, 0)};\n    background-color: ${theme.colors.background.secondary};\n    width: 100%;\n  `,\n  group: css`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  `,\n  summary: css``,\n  spanElement: css`\n    margin-left: ${theme.spacing(0.5)};\n  `,\n  [AlertState.Active]: css`\n    color: ${theme.colors.error.main};\n  `,\n  [AlertState.Suppressed]: css`\n    color: ${theme.colors.primary.main};\n  `,\n  [AlertState.Unprocessed]: css`\n    color: ${theme.colors.secondary.main};\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAA4BC,UAA5B,QAA8C,2CAA9C;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;;AAOA,OAAO,MAAMC,UAAU,GAAG,CAAC;EAAEC,sBAAF;EAA0BC;AAA1B,CAAD,KAA8C;EACtE,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAU,IAAV,CAA9C;EACA,MAAMY,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EAEA,oBACE;IAAK,SAAS,EAAED,MAAM,CAACE,OAAvB;IAAA,wBACE;MAAK,SAAS,EAAEF,MAAM,CAACG,MAAvB;MAAA,wBACE;QAAK,SAAS,EAAEH,MAAM,CAACH,KAAvB;QAA8B,eAAY,aAA1C;QAAA,wBACE,KAAC,cAAD;UACE,WAAW,EAAEC,WADf;UAEE,QAAQ,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAFhC;UAGE,eAAY;QAHd,EADF,EAMGM,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,MAAlB,EAA0BC,MAA1B,gBACC,KAAC,WAAD;UAAa,SAAS,EAAEP,MAAM,CAACQ,YAA/B;UAA6C,MAAM,EAAEX,KAAK,CAACS;QAA3D,EADD,kCAGC;UAAA;QAAA,EAHD,CANH;MAAA,EADF,eAaE,KAAC,gBAAD;QAAkB,KAAK,EAAET;MAAzB,EAbF;IAAA,EADF,EAgBG,CAACC,WAAD,iBAAgB,KAAC,qBAAD;MAAuB,sBAAsB,EAAEF,sBAA/C;MAAuE,MAAM,EAAEC,KAAK,CAACY;IAArF,EAhBnB;EAAA,EADF;AAoBD,CAxBM;;AA0BP,MAAMR,SAAS,GAAIS,KAAD,KAA2B;EAC3CR,OAAO,EAAEhB,GAAI;AACf;AACA,oBAAoBwB,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACrC;AACA,GAL6C;EAM3CH,YAAY,EAAEtB,GAAI;AACpB;AACA,sBAAsBwB,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACzC,GAT6C;EAU3CR,MAAM,EAAEjB,GAAI;AACd;AACA;AACA;AACA;AACA;AACA,eAAewB,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAA0B;AACzC,wBAAwBD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,SAAU;AAC1D;AACA,GAnB6C;EAoB3CjB,KAAK,EAAEX,GAAI;AACb;AACA;AACA;AACA,GAxB6C;EAyB3C6B,OAAO,EAAE7B,GAAI,EAzB8B;EA0B3C8B,WAAW,EAAE9B,GAAI;AACnB,mBAAmBwB,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACtC,GA5B6C;EA6B3C,CAACrB,UAAU,CAAC2B,MAAZ,GAAqB/B,GAAI;AAC3B,aAAawB,KAAK,CAACE,MAAN,CAAaM,KAAb,CAAmBC,IAAK;AACrC,GA/B6C;EAgC3C,CAAC7B,UAAU,CAAC8B,UAAZ,GAAyBlC,GAAI;AAC/B,aAAawB,KAAK,CAACE,MAAN,CAAaS,OAAb,CAAqBF,IAAK;AACvC,GAlC6C;EAmC3C,CAAC7B,UAAU,CAACgC,WAAZ,GAA0BpC,GAAI;AAChC,aAAawB,KAAK,CAACE,MAAN,CAAaE,SAAb,CAAuBK,IAAK;AACzC;AArC6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}