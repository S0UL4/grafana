{"ast":null,"code":"import { PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nexport function buildCategories(plugins) {\n  const categories = [{\n    id: 'tsdb',\n    title: 'Time series databases',\n    plugins: []\n  }, {\n    id: 'logging',\n    title: 'Logging & document databases',\n    plugins: []\n  }, {\n    id: 'tracing',\n    title: 'Distributed tracing',\n    plugins: []\n  }, {\n    id: 'sql',\n    title: 'SQL',\n    plugins: []\n  }, {\n    id: 'cloud',\n    title: 'Cloud',\n    plugins: []\n  }, {\n    id: 'enterprise',\n    title: 'Enterprise plugins',\n    plugins: []\n  }, {\n    id: 'iot',\n    title: 'Industrial & IoT',\n    plugins: []\n  }, {\n    id: 'other',\n    title: 'Others',\n    plugins: []\n  }].filter(item => item);\n  const categoryIndex = {};\n  const pluginIndex = {};\n  const enterprisePlugins = getEnterprisePhantomPlugins(); // build indices\n\n  for (const category of categories) {\n    categoryIndex[category.id] = category;\n  }\n\n  for (const plugin of plugins) {\n    const enterprisePlugin = enterprisePlugins.find(item => item.id === plugin.id); // Force category for enterprise plugins\n\n    if (plugin.enterprise || enterprisePlugin) {\n      var _enterprisePlugin$inf;\n\n      plugin.category = 'enterprise';\n      plugin.unlicensed = !featureEnabled('enterprise.plugins');\n      plugin.info.links = (enterprisePlugin === null || enterprisePlugin === void 0 ? void 0 : (_enterprisePlugin$inf = enterprisePlugin.info) === null || _enterprisePlugin$inf === void 0 ? void 0 : _enterprisePlugin$inf.links) || plugin.info.links;\n    } // Fix link name\n\n\n    if (plugin.info.links) {\n      for (const link of plugin.info.links) {\n        link.name = 'Learn more';\n      }\n    }\n\n    const category = categories.find(item => item.id === plugin.category) || categoryIndex['other'];\n    category.plugins.push(plugin); // add to plugin index\n\n    pluginIndex[plugin.id] = plugin;\n  }\n\n  for (const category of categories) {\n    // add phantom plugin\n    if (category.id === 'cloud') {\n      category.plugins.push(getGrafanaCloudPhantomPlugin());\n    } // add phantom plugins\n\n\n    if (category.id === 'enterprise') {\n      for (const plugin of enterprisePlugins) {\n        if (!pluginIndex[plugin.id]) {\n          category.plugins.push(plugin);\n        }\n      }\n    }\n\n    sortPlugins(category.plugins);\n  } // Only show categories with plugins\n\n\n  return categories.filter(c => c.plugins.length > 0);\n}\n\nfunction sortPlugins(plugins) {\n  const sortingRules = {\n    prometheus: 100,\n    graphite: 95,\n    loki: 90,\n    mysql: 80,\n    jaeger: 100,\n    postgres: 79,\n    gcloud: -1\n  };\n  plugins.sort((a, b) => {\n    const aSort = sortingRules[a.id] || 0;\n    const bSort = sortingRules[b.id] || 0;\n\n    if (aSort > bSort) {\n      return -1;\n    }\n\n    if (aSort < bSort) {\n      return 1;\n    }\n\n    return a.name > b.name ? 1 : -1;\n  });\n}\n\nfunction getEnterprisePhantomPlugins() {\n  return [getPhantomPlugin({\n    id: 'grafana-splunk-datasource',\n    name: 'Splunk',\n    description: 'Visualize and explore Splunk logs',\n    imgUrl: 'public/img/plugins/splunk_logo_128.png'\n  }), getPhantomPlugin({\n    id: 'grafana-oracle-datasource',\n    name: 'Oracle',\n    description: 'Visualize and explore Oracle SQL',\n    imgUrl: 'public/img/plugins/oracle.png'\n  }), getPhantomPlugin({\n    id: 'grafana-dynatrace-datasource',\n    name: 'Dynatrace',\n    description: 'Visualize and explore Dynatrace data',\n    imgUrl: 'public/img/plugins/dynatrace.png'\n  }), getPhantomPlugin({\n    id: 'grafana-servicenow-datasource',\n    description: 'ServiceNow integration and data source',\n    name: 'ServiceNow',\n    imgUrl: 'public/img/plugins/servicenow.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-datadog-datasource',\n    description: 'DataDog integration and data source',\n    name: 'DataDog',\n    imgUrl: 'public/img/plugins/datadog.png'\n  }), getPhantomPlugin({\n    id: 'grafana-newrelic-datasource',\n    description: 'New Relic integration and data source',\n    name: 'New Relic',\n    imgUrl: 'public/img/plugins/newrelic.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-mongodb-datasource',\n    description: 'MongoDB integration and data source',\n    name: 'MongoDB',\n    imgUrl: 'public/img/plugins/mongodb.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-snowflake-datasource',\n    description: 'Snowflake integration and data source',\n    name: 'Snowflake',\n    imgUrl: 'public/img/plugins/snowflake.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-wavefront-datasource',\n    description: 'Wavefront integration and data source',\n    name: 'Wavefront',\n    imgUrl: 'public/img/plugins/wavefront.svg'\n  }), getPhantomPlugin({\n    id: 'dlopes7-appdynamics-datasource',\n    description: 'AppDynamics integration and data source',\n    name: 'AppDynamics',\n    imgUrl: 'public/img/plugins/appdynamics.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-saphana-datasource',\n    description: 'SAP HANA® integration and data source',\n    name: 'SAP HANA®',\n    imgUrl: 'public/img/plugins/sap_hana.png'\n  }), getPhantomPlugin({\n    id: 'grafana-honeycomb-datasource',\n    description: 'Honeycomb integration and datasource',\n    name: 'Honeycomb',\n    imgUrl: 'public/img/plugins/honeycomb.png'\n  }), getPhantomPlugin({\n    id: 'grafana-salesforce-datasource',\n    description: 'Salesforce integration and datasource',\n    name: 'Salesforce',\n    imgUrl: 'public/img/plugins/salesforce.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-jira-datasource',\n    description: 'Jira integration and datasource',\n    name: 'Jira',\n    imgUrl: 'public/img/plugins/jira_logo.png'\n  }), getPhantomPlugin({\n    id: 'grafana-gitlab-datasource',\n    description: 'GitLab integration and datasource',\n    name: 'GitLab',\n    imgUrl: 'public/img/plugins/gitlab.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-splunk-monitoring-datasource',\n    description: 'SignalFx integration and datasource',\n    name: 'Splunk Infrastructure Monitoring',\n    imgUrl: 'public/img/plugins/signalfx-logo.svg'\n  }), getPhantomPlugin({\n    id: 'grafana-azuredevops-datasource',\n    description: 'Azure Devops datasource',\n    name: 'Azure Devops',\n    imgUrl: 'public/img/plugins/azure-devops.png'\n  })];\n}\n\nfunction getGrafanaCloudPhantomPlugin() {\n  return {\n    id: 'gcloud',\n    name: 'Grafana Cloud',\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: 'Hosted Graphite, Prometheus, and Loki',\n      logos: {\n        small: 'public/img/grafana_icon.svg',\n        large: 'asd'\n      },\n      author: {\n        name: 'Grafana Labs'\n      },\n      links: [{\n        url: 'https://grafana.com/products/cloud/',\n        name: 'Learn more'\n      }],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0'\n    }\n  };\n}\n\nfunction getPhantomPlugin(options) {\n  return {\n    id: options.id,\n    name: options.name,\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: options.description,\n      logos: {\n        small: options.imgUrl,\n        large: options.imgUrl\n      },\n      author: {\n        name: 'Grafana Labs'\n      },\n      links: [{\n        url: config.pluginCatalogURL + options.id,\n        name: 'Install now'\n      }],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0'\n    }\n  };\n}","map":{"version":3,"names":["PluginType","config","featureEnabled","buildCategories","plugins","categories","id","title","filter","item","categoryIndex","pluginIndex","enterprisePlugins","getEnterprisePhantomPlugins","category","plugin","enterprisePlugin","find","enterprise","unlicensed","info","links","link","name","push","getGrafanaCloudPhantomPlugin","sortPlugins","c","length","sortingRules","prometheus","graphite","loki","mysql","jaeger","postgres","gcloud","sort","a","b","aSort","bSort","getPhantomPlugin","description","imgUrl","type","datasource","module","baseUrl","logos","small","large","author","url","screenshots","updated","version","options","pluginCatalogURL"],"sources":["/home/soula/grafana/public/app/features/datasources/state/buildCategories.ts"],"sourcesContent":["import { DataSourcePluginMeta, PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nimport { DataSourcePluginCategory } from 'app/types';\n\nexport function buildCategories(plugins: DataSourcePluginMeta[]): DataSourcePluginCategory[] {\n  const categories: DataSourcePluginCategory[] = [\n    { id: 'tsdb', title: 'Time series databases', plugins: [] },\n    { id: 'logging', title: 'Logging & document databases', plugins: [] },\n    { id: 'tracing', title: 'Distributed tracing', plugins: [] },\n    { id: 'sql', title: 'SQL', plugins: [] },\n    { id: 'cloud', title: 'Cloud', plugins: [] },\n    { id: 'enterprise', title: 'Enterprise plugins', plugins: [] },\n    { id: 'iot', title: 'Industrial & IoT', plugins: [] },\n    { id: 'other', title: 'Others', plugins: [] },\n  ].filter((item) => item);\n\n  const categoryIndex: Record<string, DataSourcePluginCategory> = {};\n  const pluginIndex: Record<string, DataSourcePluginMeta> = {};\n  const enterprisePlugins = getEnterprisePhantomPlugins();\n\n  // build indices\n  for (const category of categories) {\n    categoryIndex[category.id] = category;\n  }\n\n  for (const plugin of plugins) {\n    const enterprisePlugin = enterprisePlugins.find((item) => item.id === plugin.id);\n    // Force category for enterprise plugins\n    if (plugin.enterprise || enterprisePlugin) {\n      plugin.category = 'enterprise';\n      plugin.unlicensed = !featureEnabled('enterprise.plugins');\n      plugin.info.links = enterprisePlugin?.info?.links || plugin.info.links;\n    }\n\n    // Fix link name\n    if (plugin.info.links) {\n      for (const link of plugin.info.links) {\n        link.name = 'Learn more';\n      }\n    }\n\n    const category = categories.find((item) => item.id === plugin.category) || categoryIndex['other'];\n    category.plugins.push(plugin);\n    // add to plugin index\n    pluginIndex[plugin.id] = plugin;\n  }\n\n  for (const category of categories) {\n    // add phantom plugin\n    if (category.id === 'cloud') {\n      category.plugins.push(getGrafanaCloudPhantomPlugin());\n    }\n\n    // add phantom plugins\n    if (category.id === 'enterprise') {\n      for (const plugin of enterprisePlugins) {\n        if (!pluginIndex[plugin.id]) {\n          category.plugins.push(plugin);\n        }\n      }\n    }\n\n    sortPlugins(category.plugins);\n  }\n\n  // Only show categories with plugins\n  return categories.filter((c) => c.plugins.length > 0);\n}\n\nfunction sortPlugins(plugins: DataSourcePluginMeta[]) {\n  const sortingRules: { [id: string]: number } = {\n    prometheus: 100,\n    graphite: 95,\n    loki: 90,\n    mysql: 80,\n    jaeger: 100,\n    postgres: 79,\n    gcloud: -1,\n  };\n\n  plugins.sort((a, b) => {\n    const aSort = sortingRules[a.id] || 0;\n    const bSort = sortingRules[b.id] || 0;\n    if (aSort > bSort) {\n      return -1;\n    }\n    if (aSort < bSort) {\n      return 1;\n    }\n\n    return a.name > b.name ? 1 : -1;\n  });\n}\n\nfunction getEnterprisePhantomPlugins(): DataSourcePluginMeta[] {\n  return [\n    getPhantomPlugin({\n      id: 'grafana-splunk-datasource',\n      name: 'Splunk',\n      description: 'Visualize and explore Splunk logs',\n      imgUrl: 'public/img/plugins/splunk_logo_128.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-oracle-datasource',\n      name: 'Oracle',\n      description: 'Visualize and explore Oracle SQL',\n      imgUrl: 'public/img/plugins/oracle.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-dynatrace-datasource',\n      name: 'Dynatrace',\n      description: 'Visualize and explore Dynatrace data',\n      imgUrl: 'public/img/plugins/dynatrace.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-servicenow-datasource',\n      description: 'ServiceNow integration and data source',\n      name: 'ServiceNow',\n      imgUrl: 'public/img/plugins/servicenow.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-datadog-datasource',\n      description: 'DataDog integration and data source',\n      name: 'DataDog',\n      imgUrl: 'public/img/plugins/datadog.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-newrelic-datasource',\n      description: 'New Relic integration and data source',\n      name: 'New Relic',\n      imgUrl: 'public/img/plugins/newrelic.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-mongodb-datasource',\n      description: 'MongoDB integration and data source',\n      name: 'MongoDB',\n      imgUrl: 'public/img/plugins/mongodb.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-snowflake-datasource',\n      description: 'Snowflake integration and data source',\n      name: 'Snowflake',\n      imgUrl: 'public/img/plugins/snowflake.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-wavefront-datasource',\n      description: 'Wavefront integration and data source',\n      name: 'Wavefront',\n      imgUrl: 'public/img/plugins/wavefront.svg',\n    }),\n    getPhantomPlugin({\n      id: 'dlopes7-appdynamics-datasource',\n      description: 'AppDynamics integration and data source',\n      name: 'AppDynamics',\n      imgUrl: 'public/img/plugins/appdynamics.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-saphana-datasource',\n      description: 'SAP HANA® integration and data source',\n      name: 'SAP HANA®',\n      imgUrl: 'public/img/plugins/sap_hana.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-honeycomb-datasource',\n      description: 'Honeycomb integration and datasource',\n      name: 'Honeycomb',\n      imgUrl: 'public/img/plugins/honeycomb.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-salesforce-datasource',\n      description: 'Salesforce integration and datasource',\n      name: 'Salesforce',\n      imgUrl: 'public/img/plugins/salesforce.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-jira-datasource',\n      description: 'Jira integration and datasource',\n      name: 'Jira',\n      imgUrl: 'public/img/plugins/jira_logo.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-gitlab-datasource',\n      description: 'GitLab integration and datasource',\n      name: 'GitLab',\n      imgUrl: 'public/img/plugins/gitlab.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-splunk-monitoring-datasource',\n      description: 'SignalFx integration and datasource',\n      name: 'Splunk Infrastructure Monitoring',\n      imgUrl: 'public/img/plugins/signalfx-logo.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-azuredevops-datasource',\n      description: 'Azure Devops datasource',\n      name: 'Azure Devops',\n      imgUrl: 'public/img/plugins/azure-devops.png',\n    }),\n  ];\n}\n\nfunction getGrafanaCloudPhantomPlugin(): DataSourcePluginMeta {\n  return {\n    id: 'gcloud',\n    name: 'Grafana Cloud',\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: 'Hosted Graphite, Prometheus, and Loki',\n      logos: { small: 'public/img/grafana_icon.svg', large: 'asd' },\n      author: { name: 'Grafana Labs' },\n      links: [\n        {\n          url: 'https://grafana.com/products/cloud/',\n          name: 'Learn more',\n        },\n      ],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0',\n    },\n  };\n}\n\ninterface GetPhantomPluginOptions {\n  id: string;\n  name: string;\n  description: string;\n  imgUrl: string;\n}\n\nfunction getPhantomPlugin(options: GetPhantomPluginOptions): DataSourcePluginMeta {\n  return {\n    id: options.id,\n    name: options.name,\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: options.description,\n      logos: { small: options.imgUrl, large: options.imgUrl },\n      author: { name: 'Grafana Labs' },\n      links: [\n        {\n          url: config.pluginCatalogURL + options.id,\n          name: 'Install now',\n        },\n      ],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0',\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}