{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { CollapseToggle } from '../../CollapseToggle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const CollapsibleSection = ({\n  label,\n  description,\n  children,\n  className,\n  size = 'xl'\n}) => {\n  const styles = useStyles2(getStyles);\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const toggleCollapse = () => setIsCollapsed(!isCollapsed);\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.wrapper, className),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.heading,\n      onClick: toggleCollapse,\n      children: [/*#__PURE__*/_jsx(CollapseToggle, {\n        className: styles.caret,\n        size: size,\n        onToggle: toggleCollapse,\n        isCollapsed: isCollapsed\n      }), /*#__PURE__*/_jsx(\"h6\", {\n        children: label\n      })]\n    }), description && /*#__PURE__*/_jsx(\"p\", {\n      className: styles.description,\n      children: description\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: isCollapsed ? styles.hidden : undefined,\n      children: children\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  wrapper: css`\n    margin-top: ${theme.spacing(1)};\n    padding-bottom: ${theme.spacing(1)};\n  `,\n  caret: css`\n    margin-left: -${theme.spacing(0.5)}; // make it align with fields despite icon size\n  `,\n  heading: css`\n    cursor: pointer;\n    h6 {\n      display: inline-block;\n    }\n  `,\n  hidden: css`\n    display: none;\n  `,\n  description: css`\n    color: ${theme.colors.text.secondary};\n    font-size: ${theme.typography.size.sm};\n    font-weight: ${theme.typography.fontWeightRegular};\n    margin: 0;\n  `\n});","map":{"version":3,"names":["css","cx","React","useState","useStyles2","CollapseToggle","CollapsibleSection","label","description","children","className","size","styles","getStyles","isCollapsed","setIsCollapsed","toggleCollapse","wrapper","heading","caret","hidden","undefined","theme","spacing","colors","text","secondary","typography","sm","fontWeightRegular"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/receivers/form/CollapsibleSection.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconSize, useStyles2 } from '@grafana/ui';\n\nimport { CollapseToggle } from '../../CollapseToggle';\n\ninterface Props {\n  label: string;\n  description?: string;\n  className?: string;\n  size?: IconSize;\n}\n\nexport const CollapsibleSection: FC<Props> = ({ label, description, children, className, size = 'xl' }) => {\n  const styles = useStyles2(getStyles);\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const toggleCollapse = () => setIsCollapsed(!isCollapsed);\n\n  return (\n    <div className={cx(styles.wrapper, className)}>\n      <div className={styles.heading} onClick={toggleCollapse}>\n        <CollapseToggle className={styles.caret} size={size} onToggle={toggleCollapse} isCollapsed={isCollapsed} />\n        <h6>{label}</h6>\n      </div>\n      {description && <p className={styles.description}>{description}</p>}\n      <div className={isCollapsed ? styles.hidden : undefined}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    margin-top: ${theme.spacing(1)};\n    padding-bottom: ${theme.spacing(1)};\n  `,\n  caret: css`\n    margin-left: -${theme.spacing(0.5)}; // make it align with fields despite icon size\n  `,\n  heading: css`\n    cursor: pointer;\n    h6 {\n      display: inline-block;\n    }\n  `,\n  hidden: css`\n    display: none;\n  `,\n  description: css`\n    color: ${theme.colors.text.secondary};\n    font-size: ${theme.typography.size.sm};\n    font-weight: ${theme.typography.fontWeightRegular};\n    margin: 0;\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAGA,SAAmBC,UAAnB,QAAqC,aAArC;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;;AASA,OAAO,MAAMC,kBAA6B,GAAG,CAAC;EAAEC,KAAF;EAASC,WAAT;EAAsBC,QAAtB;EAAgCC,SAAhC;EAA2CC,IAAI,GAAG;AAAlD,CAAD,KAA8D;EACzG,MAAMC,MAAM,GAAGR,UAAU,CAACS,SAAD,CAAzB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;;EAEA,MAAMa,cAAc,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAA3C;;EAEA,oBACE;IAAK,SAAS,EAAEb,EAAE,CAACW,MAAM,CAACK,OAAR,EAAiBP,SAAjB,CAAlB;IAAA,wBACE;MAAK,SAAS,EAAEE,MAAM,CAACM,OAAvB;MAAgC,OAAO,EAAEF,cAAzC;MAAA,wBACE,KAAC,cAAD;QAAgB,SAAS,EAAEJ,MAAM,CAACO,KAAlC;QAAyC,IAAI,EAAER,IAA/C;QAAqD,QAAQ,EAAEK,cAA/D;QAA+E,WAAW,EAAEF;MAA5F,EADF,eAEE;QAAA,UAAKP;MAAL,EAFF;IAAA,EADF,EAKGC,WAAW,iBAAI;MAAG,SAAS,EAAEI,MAAM,CAACJ,WAArB;MAAA,UAAmCA;IAAnC,EALlB,eAME;MAAK,SAAS,EAAEM,WAAW,GAAGF,MAAM,CAACQ,MAAV,GAAmBC,SAA9C;MAAA,UAA0DZ;IAA1D,EANF;EAAA,EADF;AAUD,CAhBM;;AAkBP,MAAMI,SAAS,GAAIS,KAAD,KAA2B;EAC3CL,OAAO,EAAEjB,GAAI;AACf,kBAAkBsB,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACnC,sBAAsBD,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AACvC,GAJ6C;EAK3CJ,KAAK,EAAEnB,GAAI;AACb,oBAAoBsB,KAAK,CAACC,OAAN,CAAc,GAAd,CAAmB;AACvC,GAP6C;EAQ3CL,OAAO,EAAElB,GAAI;AACf;AACA;AACA;AACA;AACA,GAb6C;EAc3CoB,MAAM,EAAEpB,GAAI;AACd;AACA,GAhB6C;EAiB3CQ,WAAW,EAAER,GAAI;AACnB,aAAasB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AACzC,iBAAiBJ,KAAK,CAACK,UAAN,CAAiBhB,IAAjB,CAAsBiB,EAAG;AAC1C,mBAAmBN,KAAK,CAACK,UAAN,CAAiBE,iBAAkB;AACtD;AACA;AAtB6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}