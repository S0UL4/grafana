{"ast":null,"code":"import { renderMarkdown } from '@grafana/data';\nimport { getBackendSrv, isFetchError } from '@grafana/runtime';\nimport { API_ROOT, GCOM_API_ROOT } from './constants';\nimport { isLocalPluginVisible, isRemotePluginVisible } from './helpers';\nexport async function getPluginDetails(id) {\n  var _remote$json, _ref, _dependencies$grafana, _remote$json2;\n\n  const remote = await getRemotePlugin(id);\n  const isPublished = Boolean(remote);\n  const [localPlugins, versions, localReadme] = await Promise.all([getLocalPlugins(), getPluginVersions(id, isPublished), getLocalPluginReadme(id)]);\n  const local = localPlugins.find(p => p.id === id);\n  const dependencies = (local === null || local === void 0 ? void 0 : local.dependencies) || (remote === null || remote === void 0 ? void 0 : (_remote$json = remote.json) === null || _remote$json === void 0 ? void 0 : _remote$json.dependencies);\n  return {\n    grafanaDependency: (_ref = (_dependencies$grafana = dependencies === null || dependencies === void 0 ? void 0 : dependencies.grafanaDependency) !== null && _dependencies$grafana !== void 0 ? _dependencies$grafana : dependencies === null || dependencies === void 0 ? void 0 : dependencies.grafanaVersion) !== null && _ref !== void 0 ? _ref : '',\n    pluginDependencies: (dependencies === null || dependencies === void 0 ? void 0 : dependencies.plugins) || [],\n    links: (local === null || local === void 0 ? void 0 : local.info.links) || (remote === null || remote === void 0 ? void 0 : (_remote$json2 = remote.json) === null || _remote$json2 === void 0 ? void 0 : _remote$json2.info.links) || [],\n    readme: localReadme || (remote === null || remote === void 0 ? void 0 : remote.readme),\n    versions\n  };\n}\nexport async function getRemotePlugins() {\n  const {\n    items: remotePlugins\n  } = await getBackendSrv().get(`${GCOM_API_ROOT}/plugins`);\n  return remotePlugins.filter(isRemotePluginVisible);\n}\nexport async function getPluginErrors() {\n  try {\n    return await getBackendSrv().get(`${API_ROOT}/errors`);\n  } catch (error) {\n    return [];\n  }\n}\n\nasync function getRemotePlugin(id) {\n  try {\n    return await getBackendSrv().get(`${GCOM_API_ROOT}/plugins/${id}`, {});\n  } catch (error) {\n    if (isFetchError(error)) {\n      // It can happen that GCOM is not available, in that case we show a limited set of information to the user.\n      error.isHandled = true;\n    }\n\n    return;\n  }\n}\n\nasync function getPluginVersions(id, isPublished) {\n  try {\n    if (!isPublished) {\n      return [];\n    }\n\n    const versions = await getBackendSrv().get(`${GCOM_API_ROOT}/plugins/${id}/versions`);\n    return (versions.items || []).map(v => ({\n      version: v.version,\n      createdAt: v.createdAt,\n      isCompatible: v.isCompatible,\n      grafanaDependency: v.grafanaDependency\n    }));\n  } catch (error) {\n    if (isFetchError(error)) {\n      // It can happen that GCOM is not available, in that case we show a limited set of information to the user.\n      error.isHandled = true;\n    }\n\n    return [];\n  }\n}\n\nasync function getLocalPluginReadme(id) {\n  try {\n    const markdown = await getBackendSrv().get(`${API_ROOT}/${id}/markdown/help`);\n    const markdownAsHtml = markdown ? renderMarkdown(markdown) : '';\n    return markdownAsHtml;\n  } catch (error) {\n    if (isFetchError(error)) {\n      error.isHandled = true;\n    }\n\n    return '';\n  }\n}\n\nexport async function getLocalPlugins() {\n  const localPlugins = await getBackendSrv().get(`${API_ROOT}`, {\n    embedded: 0\n  });\n  return localPlugins.filter(isLocalPluginVisible);\n}\nexport async function installPlugin(id) {\n  // This will install the latest compatible version based on the logic\n  // on the backend.\n  return await getBackendSrv().post(`${API_ROOT}/${id}/install`);\n}\nexport async function uninstallPlugin(id) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/uninstall`);\n}\nexport async function updatePluginSettings(id, data) {\n  const response = await getBackendSrv().datasourceRequest({\n    url: `/api/plugins/${id}/settings`,\n    method: 'POST',\n    data\n  });\n  return response === null || response === void 0 ? void 0 : response.data;\n}\nexport const api = {\n  getRemotePlugins,\n  getInstalledPlugins: getLocalPlugins,\n  installPlugin,\n  uninstallPlugin\n};","map":{"version":3,"names":["renderMarkdown","getBackendSrv","isFetchError","API_ROOT","GCOM_API_ROOT","isLocalPluginVisible","isRemotePluginVisible","getPluginDetails","id","remote","getRemotePlugin","isPublished","Boolean","localPlugins","versions","localReadme","Promise","all","getLocalPlugins","getPluginVersions","getLocalPluginReadme","local","find","p","dependencies","json","grafanaDependency","grafanaVersion","pluginDependencies","plugins","links","info","readme","getRemotePlugins","items","remotePlugins","get","filter","getPluginErrors","error","isHandled","map","v","version","createdAt","isCompatible","markdown","markdownAsHtml","embedded","installPlugin","post","uninstallPlugin","updatePluginSettings","data","response","datasourceRequest","url","method","api","getInstalledPlugins"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/api.ts"],"sourcesContent":["import { PluginError, PluginMeta, renderMarkdown } from '@grafana/data';\nimport { getBackendSrv, isFetchError } from '@grafana/runtime';\n\nimport { API_ROOT, GCOM_API_ROOT } from './constants';\nimport { isLocalPluginVisible, isRemotePluginVisible } from './helpers';\nimport { LocalPlugin, RemotePlugin, CatalogPluginDetails, Version, PluginVersion } from './types';\n\nexport async function getPluginDetails(id: string): Promise<CatalogPluginDetails> {\n  const remote = await getRemotePlugin(id);\n  const isPublished = Boolean(remote);\n\n  const [localPlugins, versions, localReadme] = await Promise.all([\n    getLocalPlugins(),\n    getPluginVersions(id, isPublished),\n    getLocalPluginReadme(id),\n  ]);\n\n  const local = localPlugins.find((p) => p.id === id);\n  const dependencies = local?.dependencies || remote?.json?.dependencies;\n\n  return {\n    grafanaDependency: dependencies?.grafanaDependency ?? dependencies?.grafanaVersion ?? '',\n    pluginDependencies: dependencies?.plugins || [],\n    links: local?.info.links || remote?.json?.info.links || [],\n    readme: localReadme || remote?.readme,\n    versions,\n  };\n}\n\nexport async function getRemotePlugins(): Promise<RemotePlugin[]> {\n  const { items: remotePlugins }: { items: RemotePlugin[] } = await getBackendSrv().get(`${GCOM_API_ROOT}/plugins`);\n\n  return remotePlugins.filter(isRemotePluginVisible);\n}\n\nexport async function getPluginErrors(): Promise<PluginError[]> {\n  try {\n    return await getBackendSrv().get(`${API_ROOT}/errors`);\n  } catch (error) {\n    return [];\n  }\n}\n\nasync function getRemotePlugin(id: string): Promise<RemotePlugin | undefined> {\n  try {\n    return await getBackendSrv().get(`${GCOM_API_ROOT}/plugins/${id}`, {});\n  } catch (error) {\n    if (isFetchError(error)) {\n      // It can happen that GCOM is not available, in that case we show a limited set of information to the user.\n      error.isHandled = true;\n    }\n    return;\n  }\n}\n\nasync function getPluginVersions(id: string, isPublished: boolean): Promise<Version[]> {\n  try {\n    if (!isPublished) {\n      return [];\n    }\n\n    const versions: { items: PluginVersion[] } = await getBackendSrv().get(`${GCOM_API_ROOT}/plugins/${id}/versions`);\n\n    return (versions.items || []).map((v) => ({\n      version: v.version,\n      createdAt: v.createdAt,\n      isCompatible: v.isCompatible,\n      grafanaDependency: v.grafanaDependency,\n    }));\n  } catch (error) {\n    if (isFetchError(error)) {\n      // It can happen that GCOM is not available, in that case we show a limited set of information to the user.\n      error.isHandled = true;\n    }\n    return [];\n  }\n}\n\nasync function getLocalPluginReadme(id: string): Promise<string> {\n  try {\n    const markdown: string = await getBackendSrv().get(`${API_ROOT}/${id}/markdown/help`);\n    const markdownAsHtml = markdown ? renderMarkdown(markdown) : '';\n\n    return markdownAsHtml;\n  } catch (error) {\n    if (isFetchError(error)) {\n      error.isHandled = true;\n    }\n    return '';\n  }\n}\n\nexport async function getLocalPlugins(): Promise<LocalPlugin[]> {\n  const localPlugins: LocalPlugin[] = await getBackendSrv().get(`${API_ROOT}`, { embedded: 0 });\n\n  return localPlugins.filter(isLocalPluginVisible);\n}\n\nexport async function installPlugin(id: string) {\n  // This will install the latest compatible version based on the logic\n  // on the backend.\n  return await getBackendSrv().post(`${API_ROOT}/${id}/install`);\n}\n\nexport async function uninstallPlugin(id: string) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/uninstall`);\n}\n\nexport async function updatePluginSettings(id: string, data: Partial<PluginMeta>) {\n  const response = await getBackendSrv().datasourceRequest({\n    url: `/api/plugins/${id}/settings`,\n    method: 'POST',\n    data,\n  });\n\n  return response?.data;\n}\n\nexport const api = {\n  getRemotePlugins,\n  getInstalledPlugins: getLocalPlugins,\n  installPlugin,\n  uninstallPlugin,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}