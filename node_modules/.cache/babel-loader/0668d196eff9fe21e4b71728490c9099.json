{"ast":null,"code":"import React from 'react';\nimport { InlineField } from '../..';\nimport { FormField } from '../FormField/FormField';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const BasicAuthSettings = ({\n  dataSourceConfig,\n  onChange\n}) => {\n  const password = dataSourceConfig.secureJsonData ? dataSourceConfig.secureJsonData.basicAuthPassword : '';\n\n  const onPasswordReset = () => {\n    onChange(Object.assign({}, dataSourceConfig, {\n      secureJsonData: Object.assign({}, dataSourceConfig.secureJsonData, {\n        basicAuthPassword: ''\n      }),\n      secureJsonFields: Object.assign({}, dataSourceConfig.secureJsonFields, {\n        basicAuthPassword: false\n      })\n    }));\n  };\n\n  const onPasswordChange = event => {\n    onChange(Object.assign({}, dataSourceConfig, {\n      secureJsonData: Object.assign({}, dataSourceConfig.secureJsonData, {\n        basicAuthPassword: event.currentTarget.value\n      })\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(InlineField, {\n      children: /*#__PURE__*/_jsx(FormField, {\n        label: \"User\",\n        labelWidth: 10,\n        inputWidth: 18,\n        placeholder: \"user\",\n        value: dataSourceConfig.basicAuthUser,\n        onChange: event => onChange(Object.assign({}, dataSourceConfig, {\n          basicAuthUser: event.currentTarget.value\n        }))\n      })\n    }), /*#__PURE__*/_jsx(InlineField, {\n      children: /*#__PURE__*/_jsx(SecretFormField, {\n        isConfigured: !!(dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.basicAuthPassword),\n        value: password || '',\n        inputWidth: 18,\n        labelWidth: 10,\n        onReset: onPasswordReset,\n        onChange: onPasswordChange\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","InlineField","FormField","SecretFormField","BasicAuthSettings","dataSourceConfig","onChange","password","secureJsonData","basicAuthPassword","onPasswordReset","secureJsonFields","onPasswordChange","event","currentTarget","value","basicAuthUser"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DataSourceSettings/BasicAuthSettings.tsx"],"sourcesContent":["import React from 'react';\n\nimport { InlineField } from '../..';\nimport { FormField } from '../FormField/FormField';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\n\nimport { HttpSettingsProps } from './types';\n\nexport const BasicAuthSettings: React.FC<HttpSettingsProps> = ({ dataSourceConfig, onChange }) => {\n  const password = dataSourceConfig.secureJsonData ? dataSourceConfig.secureJsonData.basicAuthPassword : '';\n\n  const onPasswordReset = () => {\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: {\n        ...dataSourceConfig.secureJsonData,\n        basicAuthPassword: '',\n      },\n      secureJsonFields: {\n        ...dataSourceConfig.secureJsonFields,\n        basicAuthPassword: false,\n      },\n    });\n  };\n\n  const onPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: {\n        ...dataSourceConfig.secureJsonData,\n        basicAuthPassword: event.currentTarget.value,\n      },\n    });\n  };\n\n  return (\n    <>\n      <InlineField>\n        <FormField\n          label=\"User\"\n          labelWidth={10}\n          inputWidth={18}\n          placeholder=\"user\"\n          value={dataSourceConfig.basicAuthUser}\n          onChange={(event) => onChange({ ...dataSourceConfig, basicAuthUser: event.currentTarget.value })}\n        />\n      </InlineField>\n      <InlineField>\n        <SecretFormField\n          isConfigured={!!(dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.basicAuthPassword)}\n          value={password || ''}\n          inputWidth={18}\n          labelWidth={10}\n          onReset={onPasswordReset}\n          onChange={onPasswordChange}\n        />\n      </InlineField>\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,eAAT,QAAgC,oCAAhC;;;;AAIA,OAAO,MAAMC,iBAA8C,GAAG,CAAC;EAAEC,gBAAF;EAAoBC;AAApB,CAAD,KAAoC;EAChG,MAAMC,QAAQ,GAAGF,gBAAgB,CAACG,cAAjB,GAAkCH,gBAAgB,CAACG,cAAjB,CAAgCC,iBAAlE,GAAsF,EAAvG;;EAEA,MAAMC,eAAe,GAAG,MAAM;IAC5BJ,QAAQ,mBACHD,gBADG;MAENG,cAAc,oBACTH,gBAAgB,CAACG,cADR;QAEZC,iBAAiB,EAAE;MAFP,EAFR;MAMNE,gBAAgB,oBACXN,gBAAgB,CAACM,gBADN;QAEdF,iBAAiB,EAAE;MAFL;IANV,GAAR;EAWD,CAZD;;EAcA,MAAMG,gBAAgB,GAAIC,KAAD,IAAmD;IAC1EP,QAAQ,mBACHD,gBADG;MAENG,cAAc,oBACTH,gBAAgB,CAACG,cADR;QAEZC,iBAAiB,EAAEI,KAAK,CAACC,aAAN,CAAoBC;MAF3B;IAFR,GAAR;EAOD,CARD;;EAUA,oBACE;IAAA,wBACE,KAAC,WAAD;MAAA,uBACE,KAAC,SAAD;QACE,KAAK,EAAC,MADR;QAEE,UAAU,EAAE,EAFd;QAGE,UAAU,EAAE,EAHd;QAIE,WAAW,EAAC,MAJd;QAKE,KAAK,EAAEV,gBAAgB,CAACW,aAL1B;QAME,QAAQ,EAAGH,KAAD,IAAWP,QAAQ,mBAAMD,gBAAN;UAAwBW,aAAa,EAAEH,KAAK,CAACC,aAAN,CAAoBC;QAA3D;MAN/B;IADF,EADF,eAWE,KAAC,WAAD;MAAA,uBACE,KAAC,eAAD;QACE,YAAY,EAAE,CAAC,EAAEV,gBAAgB,CAACM,gBAAjB,IAAqCN,gBAAgB,CAACM,gBAAjB,CAAkCF,iBAAzE,CADjB;QAEE,KAAK,EAAEF,QAAQ,IAAI,EAFrB;QAGE,UAAU,EAAE,EAHd;QAIE,UAAU,EAAE,EAJd;QAKE,OAAO,EAAEG,eALX;QAME,QAAQ,EAAEE;MANZ;IADF,EAXF;EAAA,EADF;AAwBD,CAnDM"},"metadata":{},"sourceType":"module"}