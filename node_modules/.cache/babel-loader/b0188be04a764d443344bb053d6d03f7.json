{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sortPlugins, Sorters } from '../helpers';\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall } from './actions';\nimport { setDisplayMode } from './reducer';\nimport { find, selectAll, selectById, selectIsRequestPending, selectRequestError, selectIsRequestNotFetched, selectDisplayMode, selectPluginErrors } from './selectors';\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc\n}) => {\n  useFetchAll();\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const {\n    isLoading,\n    error\n  } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered\n  };\n};\nexport const useGetAll = () => {\n  useFetchAll();\n  return useSelector(selectAll);\n};\nexport const useGetSingle = id => {\n  useFetchAll();\n  useFetchDetails(id);\n  return useSelector(state => selectById(state, id));\n};\nexport const useGetErrors = () => {\n  useFetchAll();\n  return useSelector(selectPluginErrors);\n};\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id, version, isUpdating) => dispatch(install({\n    id,\n    version,\n    isUpdating\n  }));\n};\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n  return id => dispatch(uninstall(id));\n};\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n  return {\n    isLoading,\n    error\n  };\n};\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n  return {\n    isLoading,\n    error\n  };\n};\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n  return {\n    isInstalling,\n    error\n  };\n};\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n  return {\n    isUninstalling,\n    error\n  };\n}; // Only fetches in case they were not fetched yet\n\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\nexport const useFetchDetails = id => {\n  const dispatch = useDispatch();\n  const plugin = useSelector(state => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n  return {\n    displayMode,\n    setDisplayMode: v => dispatch(setDisplayMode(v))\n  };\n};","map":{"version":3,"names":["useEffect","useDispatch","useSelector","sortPlugins","Sorters","fetchAll","fetchDetails","fetchRemotePlugins","install","uninstall","setDisplayMode","find","selectAll","selectById","selectIsRequestPending","selectRequestError","selectIsRequestNotFetched","selectDisplayMode","selectPluginErrors","useGetAllWithFilters","query","filterBy","filterByType","sortBy","nameAsc","useFetchAll","filtered","isLoading","error","useFetchStatus","sortedAndFiltered","plugins","useGetAll","useGetSingle","id","useFetchDetails","state","useGetErrors","useInstall","dispatch","version","isUpdating","useUninstall","useIsRemotePluginsAvailable","typePrefix","useFetchDetailsStatus","useInstallStatus","isInstalling","useUninstallStatus","isUninstalling","isNotFetched","plugin","isNotFetching","shouldFetch","details","useDisplayMode","displayMode","v"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { PluginError } from '@grafana/data';\n\nimport { sortPlugins, Sorters } from '../helpers';\nimport { CatalogPlugin, PluginCatalogStoreState, PluginListDisplayMode } from '../types';\n\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall } from './actions';\nimport { setDisplayMode } from './reducer';\nimport {\n  find,\n  selectAll,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n  selectPluginErrors,\n} from './selectors';\n\ntype Filters = {\n  query?: string;\n  filterBy?: string;\n  filterByType?: string;\n  sortBy?: Sorters;\n};\n\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc,\n}: Filters) => {\n  useFetchAll();\n\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const { isLoading, error } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered,\n  };\n};\n\nexport const useGetAll = (): CatalogPlugin[] => {\n  useFetchAll();\n\n  return useSelector(selectAll);\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n};\n\nexport const useGetErrors = (): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors);\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,YAArC;AAGA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,kBAAjC,EAAqDC,OAArD,EAA8DC,SAA9D,QAA+E,WAA/E;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,sBAJF,EAKEC,kBALF,EAMEC,yBANF,EAOEC,iBAPF,EAQEC,kBARF,QASO,aATP;AAkBA,OAAO,MAAMC,oBAAoB,GAAG,CAAC;EACnCC,KAAK,GAAG,EAD2B;EAEnCC,QAAQ,GAAG,WAFwB;EAGnCC,YAAY,GAAG,KAHoB;EAInCC,MAAM,GAAGnB,OAAO,CAACoB;AAJkB,CAAD,KAKrB;EACbC,WAAW;EAEX,MAAMC,QAAQ,GAAGxB,WAAW,CAACS,IAAI,CAACS,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,CAAL,CAA5B;EACA,MAAM;IAAEK,SAAF;IAAaC;EAAb,IAAuBC,cAAc,EAA3C;EACA,MAAMC,iBAAiB,GAAG3B,WAAW,CAACuB,QAAD,EAAWH,MAAX,CAArC;EAEA,OAAO;IACLI,SADK;IAELC,KAFK;IAGLG,OAAO,EAAED;EAHJ,CAAP;AAKD,CAjBM;AAmBP,OAAO,MAAME,SAAS,GAAG,MAAuB;EAC9CP,WAAW;EAEX,OAAOvB,WAAW,CAACU,SAAD,CAAlB;AACD,CAJM;AAMP,OAAO,MAAMqB,YAAY,GAAIC,EAAD,IAA2C;EACrET,WAAW;EACXU,eAAe,CAACD,EAAD,CAAf;EAEA,OAAOhC,WAAW,CAAEkC,KAAD,IAAoCvB,UAAU,CAACuB,KAAD,EAAQF,EAAR,CAA/C,CAAlB;AACD,CALM;AAOP,OAAO,MAAMG,YAAY,GAAG,MAAqB;EAC/CZ,WAAW;EAEX,OAAOvB,WAAW,CAACgB,kBAAD,CAAlB;AACD,CAJM;AAMP,OAAO,MAAMoB,UAAU,GAAG,MAAM;EAC9B,MAAMC,QAAQ,GAAGtC,WAAW,EAA5B;EACA,OAAO,CAACiC,EAAD,EAAaM,OAAb,EAA+BC,UAA/B,KAAwDF,QAAQ,CAAC/B,OAAO,CAAC;IAAE0B,EAAF;IAAMM,OAAN;IAAeC;EAAf,CAAD,CAAR,CAAvE;AACD,CAHM;AAKP,OAAO,MAAMC,YAAY,GAAG,MAAM;EAChC,MAAMH,QAAQ,GAAGtC,WAAW,EAA5B;EAEA,OAAQiC,EAAD,IAAgBK,QAAQ,CAAC9B,SAAS,CAACyB,EAAD,CAAV,CAA/B;AACD,CAJM;AAMP,OAAO,MAAMS,2BAA2B,GAAG,MAAM;EAC/C,MAAMf,KAAK,GAAG1B,WAAW,CAACa,kBAAkB,CAACR,kBAAkB,CAACqC,UAApB,CAAnB,CAAzB;EACA,OAAOhB,KAAK,KAAK,IAAjB;AACD,CAHM;AAKP,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,MAAMF,SAAS,GAAGzB,WAAW,CAACY,sBAAsB,CAACT,QAAQ,CAACuC,UAAV,CAAvB,CAA7B;EACA,MAAMhB,KAAK,GAAG1B,WAAW,CAACa,kBAAkB,CAACV,QAAQ,CAACuC,UAAV,CAAnB,CAAzB;EAEA,OAAO;IAAEjB,SAAF;IAAaC;EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMiB,qBAAqB,GAAG,MAAM;EACzC,MAAMlB,SAAS,GAAGzB,WAAW,CAACY,sBAAsB,CAACR,YAAY,CAACsC,UAAd,CAAvB,CAA7B;EACA,MAAMhB,KAAK,GAAG1B,WAAW,CAACa,kBAAkB,CAACT,YAAY,CAACsC,UAAd,CAAnB,CAAzB;EAEA,OAAO;IAAEjB,SAAF;IAAaC;EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMkB,gBAAgB,GAAG,MAAM;EACpC,MAAMC,YAAY,GAAG7C,WAAW,CAACY,sBAAsB,CAACN,OAAO,CAACoC,UAAT,CAAvB,CAAhC;EACA,MAAMhB,KAAK,GAAG1B,WAAW,CAACa,kBAAkB,CAACP,OAAO,CAACoC,UAAT,CAAnB,CAAzB;EAEA,OAAO;IAAEG,YAAF;IAAgBnB;EAAhB,CAAP;AACD,CALM;AAOP,OAAO,MAAMoB,kBAAkB,GAAG,MAAM;EACtC,MAAMC,cAAc,GAAG/C,WAAW,CAACY,sBAAsB,CAACL,SAAS,CAACmC,UAAX,CAAvB,CAAlC;EACA,MAAMhB,KAAK,GAAG1B,WAAW,CAACa,kBAAkB,CAACN,SAAS,CAACmC,UAAX,CAAnB,CAAzB;EAEA,OAAO;IAAEK,cAAF;IAAkBrB;EAAlB,CAAP;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMH,WAAW,GAAG,MAAM;EAC/B,MAAMc,QAAQ,GAAGtC,WAAW,EAA5B;EACA,MAAMiD,YAAY,GAAGhD,WAAW,CAACc,yBAAyB,CAACX,QAAQ,CAACuC,UAAV,CAA1B,CAAhC;EAEA5C,SAAS,CAAC,MAAM;IACdkD,YAAY,IAAIX,QAAQ,CAAClC,QAAQ,EAAT,CAAxB;EACD,CAFQ,EAEN,EAFM,CAAT,CAJ+B,CAMvB;AACT,CAPM;AASP,OAAO,MAAM8B,eAAe,GAAID,EAAD,IAAgB;EAC7C,MAAMK,QAAQ,GAAGtC,WAAW,EAA5B;EACA,MAAMkD,MAAM,GAAGjD,WAAW,CAAEkC,KAAD,IAAoCvB,UAAU,CAACuB,KAAD,EAAQF,EAAR,CAA/C,CAA1B;EACA,MAAMkB,aAAa,GAAG,CAAClD,WAAW,CAACY,sBAAsB,CAACR,YAAY,CAACsC,UAAd,CAAvB,CAAlC;EACA,MAAMS,WAAW,GAAGD,aAAa,IAAID,MAAjB,IAA2B,CAACA,MAAM,CAACG,OAAvD;EAEAtD,SAAS,CAAC,MAAM;IACdqD,WAAW,IAAId,QAAQ,CAACjC,YAAY,CAAC4B,EAAD,CAAb,CAAvB;EACD,CAFQ,EAEN,CAACiB,MAAD,CAFM,CAAT,CAN6C,CAQ/B;AACf,CATM;AAWP,OAAO,MAAMI,cAAc,GAAG,MAAM;EAClC,MAAMhB,QAAQ,GAAGtC,WAAW,EAA5B;EACA,MAAMuD,WAAW,GAAGtD,WAAW,CAACe,iBAAD,CAA/B;EAEA,OAAO;IACLuC,WADK;IAEL9C,cAAc,EAAG+C,CAAD,IAA8BlB,QAAQ,CAAC7B,cAAc,CAAC+C,CAAD,CAAf;EAFjD,CAAP;AAID,CARM"},"metadata":{},"sourceType":"module"}