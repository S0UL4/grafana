{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport SVG from 'react-inlinesvg';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { areEqual, FixedSizeGrid as Grid } from 'react-window';\nimport { useTheme2, stylesFactory } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Cell(props) {\n  const {\n    columnIndex,\n    rowIndex,\n    style,\n    data\n  } = props;\n  const {\n    cards,\n    columnCount,\n    onChange,\n    selected\n  } = data;\n  const singleColumnIndex = columnIndex + rowIndex * columnCount;\n  const card = cards[singleColumnIndex];\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: style,\n    children: card && /*#__PURE__*/_jsxs(\"div\", {\n      className: selected === card.value ? cx(styles.card, styles.selected) : styles.card,\n      onClick: () => onChange(card.value),\n      children: [card.imgUrl.endsWith('.svg') ? /*#__PURE__*/_jsx(SVG, {\n        src: card.imgUrl,\n        className: styles.img\n      }) : /*#__PURE__*/_jsx(\"img\", {\n        src: card.imgUrl,\n        className: styles.img\n      }), /*#__PURE__*/_jsx(\"h6\", {\n        className: styles.text,\n        children: card.label.slice(0, -4)\n      })]\n    }, card.value)\n  });\n}\n\nconst getStyles = stylesFactory(theme => {\n  return {\n    card: css`\n      display: inline-block;\n      width: 90px;\n      height: 90px;\n      margin: 0.75rem;\n      margin-left: 15px;\n      text-align: center;\n      cursor: pointer;\n      position: relative;\n      background-color: transparent;\n      border: 1px solid transparent;\n      border-radius: 8px;\n      padding-top: 6px;\n      :hover {\n        border-color: ${theme.colors.action.hover};\n        box-shadow: ${theme.shadows.z2};\n      }\n    `,\n    selected: css`\n      border: 2px solid ${theme.colors.primary.main};\n      :hover {\n        border-color: ${theme.colors.primary.main};\n      }\n    `,\n    img: css`\n      width: 40px;\n      height: 40px;\n      object-fit: cover;\n      vertical-align: middle;\n      fill: ${theme.colors.text.primary};\n    `,\n    text: css`\n      color: ${theme.colors.text.primary};\n      white-space: nowrap;\n      font-size: 12px;\n      text-overflow: ellipsis;\n      display: block;\n      overflow: hidden;\n    `,\n    grid: css`\n      border: 1px solid ${theme.colors.border.medium};\n    `\n  };\n});\nexport const ResourceCards = props => {\n  const {\n    onChange,\n    cards,\n    value\n  } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return /*#__PURE__*/_jsx(AutoSizer, {\n    defaultWidth: 680,\n    children: ({\n      width,\n      height\n    }) => {\n      const cardWidth = 90;\n      const cardHeight = 90;\n      const columnCount = Math.floor(width / cardWidth);\n      const rowCount = Math.ceil(cards.length / columnCount);\n      return /*#__PURE__*/_jsx(Grid, {\n        width: width,\n        height: height,\n        columnCount: columnCount,\n        columnWidth: cardWidth,\n        rowCount: rowCount,\n        rowHeight: cardHeight,\n        itemData: {\n          cards,\n          columnCount,\n          onChange,\n          selected: value\n        },\n        className: styles.grid,\n        children: /*#__PURE__*/memo(Cell, areEqual)\n      });\n    }\n  });\n};","map":{"version":3,"names":["css","cx","React","memo","SVG","AutoSizer","areEqual","FixedSizeGrid","Grid","useTheme2","stylesFactory","Cell","props","columnIndex","rowIndex","style","data","cards","columnCount","onChange","selected","singleColumnIndex","card","theme","styles","getStyles","value","imgUrl","endsWith","img","text","label","slice","colors","action","hover","shadows","z2","primary","main","grid","border","medium","ResourceCards","width","height","cardWidth","cardHeight","Math","floor","rowCount","ceil","length"],"sources":["/home/soula/grafana/public/app/features/dimensions/editors/ResourceCards.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { memo, CSSProperties } from 'react';\nimport SVG from 'react-inlinesvg';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { areEqual, FixedSizeGrid as Grid } from 'react-window';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2, stylesFactory } from '@grafana/ui';\n\nimport { ResourceItem } from './FolderPickerTab';\n\ninterface CellProps {\n  columnIndex: number;\n  rowIndex: number;\n  style: CSSProperties;\n  data: {\n    cards: ResourceItem[];\n    columnCount: number;\n    onChange: (value: string) => void;\n    selected?: string;\n  };\n}\n\nfunction Cell(props: CellProps) {\n  const { columnIndex, rowIndex, style, data } = props;\n  const { cards, columnCount, onChange, selected } = data;\n  const singleColumnIndex = columnIndex + rowIndex * columnCount;\n  const card = cards[singleColumnIndex];\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div style={style}>\n      {card && (\n        <div\n          key={card.value}\n          className={selected === card.value ? cx(styles.card, styles.selected) : styles.card}\n          onClick={() => onChange(card.value)}\n        >\n          {card.imgUrl.endsWith('.svg') ? (\n            <SVG src={card.imgUrl} className={styles.img} />\n          ) : (\n            <img src={card.imgUrl} className={styles.img} />\n          )}\n          <h6 className={styles.text}>{card.label.slice(0, -4)}</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    card: css`\n      display: inline-block;\n      width: 90px;\n      height: 90px;\n      margin: 0.75rem;\n      margin-left: 15px;\n      text-align: center;\n      cursor: pointer;\n      position: relative;\n      background-color: transparent;\n      border: 1px solid transparent;\n      border-radius: 8px;\n      padding-top: 6px;\n      :hover {\n        border-color: ${theme.colors.action.hover};\n        box-shadow: ${theme.shadows.z2};\n      }\n    `,\n    selected: css`\n      border: 2px solid ${theme.colors.primary.main};\n      :hover {\n        border-color: ${theme.colors.primary.main};\n      }\n    `,\n    img: css`\n      width: 40px;\n      height: 40px;\n      object-fit: cover;\n      vertical-align: middle;\n      fill: ${theme.colors.text.primary};\n    `,\n    text: css`\n      color: ${theme.colors.text.primary};\n      white-space: nowrap;\n      font-size: 12px;\n      text-overflow: ellipsis;\n      display: block;\n      overflow: hidden;\n    `,\n    grid: css`\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n  };\n});\n\ninterface CardProps {\n  onChange: (value: string) => void;\n  cards: ResourceItem[];\n  value?: string;\n}\n\nexport const ResourceCards = (props: CardProps) => {\n  const { onChange, cards, value } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <AutoSizer defaultWidth={680}>\n      {({ width, height }) => {\n        const cardWidth = 90;\n        const cardHeight = 90;\n        const columnCount = Math.floor(width / cardWidth);\n        const rowCount = Math.ceil(cards.length / columnCount);\n        return (\n          <Grid\n            width={width}\n            height={height}\n            columnCount={columnCount}\n            columnWidth={cardWidth}\n            rowCount={rowCount}\n            rowHeight={cardHeight}\n            itemData={{ cards, columnCount, onChange, selected: value }}\n            className={styles.grid}\n          >\n            {memo(Cell, areEqual)}\n          </Grid>\n        );\n      }}\n    </AutoSizer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}