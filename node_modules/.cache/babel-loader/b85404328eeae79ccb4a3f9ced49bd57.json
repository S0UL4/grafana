{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { TabsBar, Tab, IconButton, CustomScrollbar, TabContent } from '../..';\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getStyles = stylesFactory(theme => {\n  return {\n    container: css`\n      height: 100%;\n    `,\n    tabContent: css`\n      padding: ${theme.spacing(2)};\n      background-color: ${theme.colors.background.primary};\n      height: calc(100% - ${theme.components.menuTabs.height}px);\n    `,\n    close: css`\n      position: absolute;\n      right: 16px;\n      top: 5px;\n      cursor: pointer;\n      font-size: ${theme.typography.size.lg};\n    `,\n    tabs: css`\n      padding-top: ${theme.spacing(1)};\n      border-color: ${theme.colors.border.weak};\n      ul {\n        margin-left: ${theme.spacing(2)};\n      }\n    `\n  };\n});\nexport function TabbedContainer(props) {\n  var _props$tabs, _tabs$find;\n\n  const [activeTab, setActiveTab] = useState(props.tabs.some(tab => tab.value === props.defaultTab) ? props.defaultTab : (_props$tabs = props.tabs) === null || _props$tabs === void 0 ? void 0 : _props$tabs[0].value);\n\n  const onSelectTab = item => {\n    setActiveTab(item.value);\n  };\n\n  const {\n    tabs,\n    onClose,\n    closeIconTooltip\n  } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(TabsBar, {\n      className: styles.tabs,\n      children: [tabs.map(t => /*#__PURE__*/_jsx(Tab, {\n        label: t.label,\n        active: t.value === activeTab,\n        onChangeTab: () => onSelectTab(t),\n        icon: t.icon\n      }, t.value)), /*#__PURE__*/_jsx(IconButton, {\n        className: styles.close,\n        onClick: onClose,\n        name: \"times\",\n        title: closeIconTooltip !== null && closeIconTooltip !== void 0 ? closeIconTooltip : 'Close'\n      })]\n    }), /*#__PURE__*/_jsx(CustomScrollbar, {\n      autoHeightMin: \"100%\",\n      children: /*#__PURE__*/_jsx(TabContent, {\n        className: styles.tabContent,\n        children: (_tabs$find = tabs.find(t => t.value === activeTab)) === null || _tabs$find === void 0 ? void 0 : _tabs$find.content\n      })\n    })]\n  });\n}","map":{"version":3,"names":["css","React","useState","TabsBar","Tab","IconButton","CustomScrollbar","TabContent","stylesFactory","useTheme2","getStyles","theme","container","tabContent","spacing","colors","background","primary","components","menuTabs","height","close","typography","size","lg","tabs","border","weak","TabbedContainer","props","activeTab","setActiveTab","some","tab","value","defaultTab","onSelectTab","item","onClose","closeIconTooltip","styles","map","t","label","icon","find","content"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/TabbedContainer/TabbedContainer.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { SelectableValue, GrafanaTheme2 } from '@grafana/data';\n\nimport { IconName, TabsBar, Tab, IconButton, CustomScrollbar, TabContent } from '../..';\nimport { stylesFactory, useTheme2 } from '../../themes';\n\nexport interface TabConfig {\n  label: string;\n  value: string;\n  content: React.ReactNode;\n  icon: IconName;\n}\n\nexport interface TabbedContainerProps {\n  tabs: TabConfig[];\n  defaultTab?: string;\n  closeIconTooltip?: string;\n  onClose: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      height: 100%;\n    `,\n    tabContent: css`\n      padding: ${theme.spacing(2)};\n      background-color: ${theme.colors.background.primary};\n      height: calc(100% - ${theme.components.menuTabs.height}px);\n    `,\n    close: css`\n      position: absolute;\n      right: 16px;\n      top: 5px;\n      cursor: pointer;\n      font-size: ${theme.typography.size.lg};\n    `,\n    tabs: css`\n      padding-top: ${theme.spacing(1)};\n      border-color: ${theme.colors.border.weak};\n      ul {\n        margin-left: ${theme.spacing(2)};\n      }\n    `,\n  };\n});\n\nexport function TabbedContainer(props: TabbedContainerProps) {\n  const [activeTab, setActiveTab] = useState(\n    props.tabs.some((tab) => tab.value === props.defaultTab) ? props.defaultTab : props.tabs?.[0].value\n  );\n\n  const onSelectTab = (item: SelectableValue<string>) => {\n    setActiveTab(item.value!);\n  };\n\n  const { tabs, onClose, closeIconTooltip } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <TabsBar className={styles.tabs}>\n        {tabs.map((t) => (\n          <Tab\n            key={t.value}\n            label={t.label}\n            active={t.value === activeTab}\n            onChangeTab={() => onSelectTab(t)}\n            icon={t.icon}\n          />\n        ))}\n        <IconButton className={styles.close} onClick={onClose} name=\"times\" title={closeIconTooltip ?? 'Close'} />\n      </TabsBar>\n      <CustomScrollbar autoHeightMin=\"100%\">\n        <TabContent className={styles.tabContent}>{tabs.find((t) => t.value === activeTab)?.content}</TabContent>\n      </CustomScrollbar>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}