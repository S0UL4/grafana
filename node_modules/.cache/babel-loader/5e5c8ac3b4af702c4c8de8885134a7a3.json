{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  organization: {},\n  userOrgs: []\n};\nconst organizationSlice = createSlice({\n  name: 'organization',\n  initialState,\n  reducers: {\n    organizationLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        organization: action.payload\n      });\n    },\n    setOrganizationName: (state, action) => {\n      return Object.assign({}, state, {\n        organization: Object.assign({}, state.organization, {\n          name: action.payload\n        })\n      });\n    },\n    userOrganizationsLoaded: (state, action) => {\n      return Object.assign({}, state, {\n        userOrgs: action.payload\n      });\n    }\n  }\n});\nexport const {\n  setOrganizationName,\n  organizationLoaded,\n  userOrganizationsLoaded\n} = organizationSlice.actions;\nexport const organizationReducer = organizationSlice.reducer;\nexport default {\n  organization: organizationReducer\n};","map":{"version":3,"names":["createSlice","initialState","organization","userOrgs","organizationSlice","name","reducers","organizationLoaded","state","action","payload","setOrganizationName","userOrganizationsLoaded","actions","organizationReducer","reducer"],"sources":["/home/soula/grafana/public/app/features/org/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Organization, OrganizationState, UserOrg } from 'app/types';\n\nexport const initialState: OrganizationState = {\n  organization: {} as Organization,\n  userOrgs: [] as UserOrg[],\n};\n\nconst organizationSlice = createSlice({\n  name: 'organization',\n  initialState,\n  reducers: {\n    organizationLoaded: (state, action: PayloadAction<Organization>): OrganizationState => {\n      return { ...state, organization: action.payload };\n    },\n    setOrganizationName: (state, action: PayloadAction<string>): OrganizationState => {\n      return { ...state, organization: { ...state.organization, name: action.payload } };\n    },\n    userOrganizationsLoaded: (state, action: PayloadAction<UserOrg[]>): OrganizationState => {\n      return { ...state, userOrgs: action.payload };\n    },\n  },\n});\n\nexport const { setOrganizationName, organizationLoaded, userOrganizationsLoaded } = organizationSlice.actions;\n\nexport const organizationReducer = organizationSlice.reducer;\n\nexport default {\n  organization: organizationReducer,\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,OAAO,MAAMC,YAA+B,GAAG;EAC7CC,YAAY,EAAE,EAD+B;EAE7CC,QAAQ,EAAE;AAFmC,CAAxC;AAKP,MAAMC,iBAAiB,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,cAD8B;EAEpCJ,YAFoC;EAGpCK,QAAQ,EAAE;IACRC,kBAAkB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmE;MACrF,yBAAYD,KAAZ;QAAmBN,YAAY,EAAEO,MAAM,CAACC;MAAxC;IACD,CAHO;IAIRC,mBAAmB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA6D;MAChF,yBAAYD,KAAZ;QAAmBN,YAAY,oBAAOM,KAAK,CAACN,YAAb;UAA2BG,IAAI,EAAEI,MAAM,CAACC;QAAxC;MAA/B;IACD,CANO;IAORE,uBAAuB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAgE;MACvF,yBAAYD,KAAZ;QAAmBL,QAAQ,EAAEM,MAAM,CAACC;MAApC;IACD;EATO;AAH0B,CAAD,CAArC;AAgBA,OAAO,MAAM;EAAEC,mBAAF;EAAuBJ,kBAAvB;EAA2CK;AAA3C,IAAuER,iBAAiB,CAACS,OAA/F;AAEP,OAAO,MAAMC,mBAAmB,GAAGV,iBAAiB,CAACW,OAA9C;AAEP,eAAe;EACbb,YAAY,EAAEY;AADD,CAAf"},"metadata":{},"sourceType":"module"}