{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { intervalToAbbreviatedDurationString } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { alertStateToReadable, alertStateToState, getFirstActiveAt } from 'app/features/alerting/unified/utils/rules';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\nimport { AlertInstances } from '../AlertInstances';\nimport { getStyles } from '../UnifiedAlertList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst UngroupedModeView = ({\n  rules,\n  options\n}) => {\n  const styles = useStyles2(getStyles);\n  const stateStyle = useStyles2(getStateTagStyles);\n  const rulesToDisplay = rules.length <= options.maxItems ? rules : rules.slice(0, options.maxItems);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"ol\", {\n      className: styles.alertRuleList,\n      children: rulesToDisplay.map((ruleWithLocation, index) => {\n        var _ruleWithLocation$rul;\n\n        const {\n          rule,\n          namespaceName,\n          groupName\n        } = ruleWithLocation;\n        const firstActiveAt = getFirstActiveAt(rule);\n        return /*#__PURE__*/_jsxs(\"li\", {\n          className: styles.alertRuleItem,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: stateStyle.icon,\n            children: /*#__PURE__*/_jsx(Icon, {\n              name: alertDef.getStateDisplayModel(rule.state).iconClass,\n              className: stateStyle[alertStateToState(rule.state)],\n              size: 'lg'\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.instanceDetails,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.alertName,\n                title: rule.name,\n                children: rule.name\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.alertDuration,\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  className: stateStyle[alertStateToState(rule.state)],\n                  children: alertStateToReadable(rule.state)\n                }), ' ', firstActiveAt && rule.state !== PromAlertingRuleState.Inactive && /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [\"for\", ' ', /*#__PURE__*/_jsx(\"span\", {\n                    children: intervalToAbbreviatedDurationString({\n                      start: firstActiveAt,\n                      end: Date.now()\n                    })\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(AlertInstances, {\n              alerts: (_ruleWithLocation$rul = ruleWithLocation.rule.alerts) !== null && _ruleWithLocation$rul !== void 0 ? _ruleWithLocation$rul : [],\n              options: options\n            })]\n          })]\n        }, `alert-${namespaceName}-${groupName}-${rule.name}-${index}`);\n      })\n    })\n  });\n};\n\nconst getStateTagStyles = theme => ({\n  common: css`\n    width: 70px;\n    text-align: center;\n    align-self: stretch;\n\n    display: inline-block;\n    color: white;\n    border-radius: ${theme.shape.borderRadius()};\n    font-size: ${theme.v1.typography.size.sm};\n    text-transform: capitalize;\n    line-height: 1.2;\n    flex-shrink: 0;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  `,\n  icon: css`\n    margin-top: ${theme.spacing(2.5)};\n    align-self: flex-start;\n  `,\n  good: css`\n    color: ${theme.colors.success.main};\n  `,\n  bad: css`\n    color: ${theme.colors.error.main};\n  `,\n  warning: css`\n    color: ${theme.colors.warning.main};\n  `,\n  neutral: css`\n    color: ${theme.colors.secondary.main};\n  `,\n  info: css`\n    color: ${theme.colors.primary.main};\n  `\n});\n\nexport default UngroupedModeView;","map":{"version":3,"names":["css","React","intervalToAbbreviatedDurationString","Icon","useStyles2","alertDef","alertStateToReadable","alertStateToState","getFirstActiveAt","PromAlertingRuleState","AlertInstances","getStyles","UngroupedModeView","rules","options","styles","stateStyle","getStateTagStyles","rulesToDisplay","length","maxItems","slice","alertRuleList","map","ruleWithLocation","index","rule","namespaceName","groupName","firstActiveAt","alertRuleItem","icon","getStateDisplayModel","state","iconClass","instanceDetails","alertName","name","alertDuration","Inactive","start","end","Date","now","alerts","theme","common","shape","borderRadius","v1","typography","size","sm","spacing","good","colors","success","main","bad","error","warning","neutral","secondary","info","primary"],"sources":["/home/soula/grafana/public/app/plugins/panel/alertlist/unified-alerting/UngroupedView.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2, intervalToAbbreviatedDurationString } from '@grafana/data';\nimport { Icon, IconName, useStyles2 } from '@grafana/ui';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { alertStateToReadable, alertStateToState, getFirstActiveAt } from 'app/features/alerting/unified/utils/rules';\nimport { PromRuleWithLocation } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { AlertInstances } from '../AlertInstances';\nimport { getStyles } from '../UnifiedAlertList';\nimport { UnifiedAlertListOptions } from '../types';\n\ntype UngroupedModeProps = {\n  rules: PromRuleWithLocation[];\n  options: UnifiedAlertListOptions;\n};\n\nconst UngroupedModeView: FC<UngroupedModeProps> = ({ rules, options }) => {\n  const styles = useStyles2(getStyles);\n  const stateStyle = useStyles2(getStateTagStyles);\n\n  const rulesToDisplay = rules.length <= options.maxItems ? rules : rules.slice(0, options.maxItems);\n\n  return (\n    <>\n      <ol className={styles.alertRuleList}>\n        {rulesToDisplay.map((ruleWithLocation, index) => {\n          const { rule, namespaceName, groupName } = ruleWithLocation;\n          const firstActiveAt = getFirstActiveAt(rule);\n          return (\n            <li className={styles.alertRuleItem} key={`alert-${namespaceName}-${groupName}-${rule.name}-${index}`}>\n              <div className={stateStyle.icon}>\n                <Icon\n                  name={alertDef.getStateDisplayModel(rule.state).iconClass as IconName}\n                  className={stateStyle[alertStateToState(rule.state)]}\n                  size={'lg'}\n                />\n              </div>\n              <div>\n                <div className={styles.instanceDetails}>\n                  <div className={styles.alertName} title={rule.name}>\n                    {rule.name}\n                  </div>\n                  <div className={styles.alertDuration}>\n                    <span className={stateStyle[alertStateToState(rule.state)]}>\n                      {alertStateToReadable(rule.state)}\n                    </span>{' '}\n                    {firstActiveAt && rule.state !== PromAlertingRuleState.Inactive && (\n                      <>\n                        for{' '}\n                        <span>\n                          {intervalToAbbreviatedDurationString({\n                            start: firstActiveAt,\n                            end: Date.now(),\n                          })}\n                        </span>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <AlertInstances alerts={ruleWithLocation.rule.alerts ?? []} options={options} />\n              </div>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n};\n\nconst getStateTagStyles = (theme: GrafanaTheme2) => ({\n  common: css`\n    width: 70px;\n    text-align: center;\n    align-self: stretch;\n\n    display: inline-block;\n    color: white;\n    border-radius: ${theme.shape.borderRadius()};\n    font-size: ${theme.v1.typography.size.sm};\n    text-transform: capitalize;\n    line-height: 1.2;\n    flex-shrink: 0;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  `,\n  icon: css`\n    margin-top: ${theme.spacing(2.5)};\n    align-self: flex-start;\n  `,\n  good: css`\n    color: ${theme.colors.success.main};\n  `,\n  bad: css`\n    color: ${theme.colors.error.main};\n  `,\n  warning: css`\n    color: ${theme.colors.warning.main};\n  `,\n  neutral: css`\n    color: ${theme.colors.secondary.main};\n  `,\n  info: css`\n    color: ${theme.colors.primary.main};\n  `,\n});\n\nexport default UngroupedModeView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}