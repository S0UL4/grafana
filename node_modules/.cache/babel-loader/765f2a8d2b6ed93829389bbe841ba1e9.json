{"ast":null,"code":"const _excluded = [\"onChange\", \"ref\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { useFormContext, useFieldArray } from 'react-hook-form';\nimport { Button, Field, Input, IconButton, InputControl, useStyles2, Select } from '@grafana/ui';\nimport { MatcherOperator } from 'app/plugins/datasource/alertmanager/types';\nimport { matcherFieldOptions } from '../../utils/alertmanager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst MatchersField = ({\n  className\n}) => {\n  const styles = useStyles2(getStyles);\n  const formApi = useFormContext();\n  const {\n    control,\n    register,\n    formState: {\n      errors\n    }\n  } = formApi;\n  const {\n    fields: matchers = [],\n    append,\n    remove\n  } = useFieldArray({\n    name: 'matchers'\n  });\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: cx(className, styles.wrapper),\n    children: /*#__PURE__*/_jsx(Field, {\n      label: \"Matching labels\",\n      required: true,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.matchers,\n          children: matchers.map((matcher, index) => {\n            var _errors$matchers, _errors$matchers$inde, _errors$matchers2, _errors$matchers2$ind, _errors$matchers2$ind2, _errors$matchers3, _errors$matchers3$ind, _errors$matchers4, _errors$matchers4$ind, _errors$matchers4$ind2;\n\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.row,\n              \"data-testid\": \"matcher\",\n              children: [/*#__PURE__*/_jsx(Field, {\n                label: \"Label\",\n                invalid: !!(errors !== null && errors !== void 0 && (_errors$matchers = errors.matchers) !== null && _errors$matchers !== void 0 && (_errors$matchers$inde = _errors$matchers[index]) !== null && _errors$matchers$inde !== void 0 && _errors$matchers$inde.name),\n                error: errors === null || errors === void 0 ? void 0 : (_errors$matchers2 = errors.matchers) === null || _errors$matchers2 === void 0 ? void 0 : (_errors$matchers2$ind = _errors$matchers2[index]) === null || _errors$matchers2$ind === void 0 ? void 0 : (_errors$matchers2$ind2 = _errors$matchers2$ind.name) === null || _errors$matchers2$ind2 === void 0 ? void 0 : _errors$matchers2$ind2.message,\n                children: /*#__PURE__*/_jsx(Input, Object.assign({}, register(`matchers.${index}.name`, {\n                  required: {\n                    value: true,\n                    message: 'Required.'\n                  }\n                }), {\n                  defaultValue: matcher.name,\n                  placeholder: \"label\"\n                }))\n              }), /*#__PURE__*/_jsx(Field, {\n                label: 'Operator',\n                children: /*#__PURE__*/_jsx(InputControl, {\n                  control: control,\n                  render: _ref => {\n                    let {\n                      field: {\n                        onChange\n                      }\n                    } = _ref,\n                        field = _objectWithoutPropertiesLoose(_ref.field, _excluded);\n\n                    return /*#__PURE__*/_jsx(Select, Object.assign({}, field, {\n                      onChange: value => onChange(value.value),\n                      className: styles.matcherOptions,\n                      options: matcherFieldOptions,\n                      \"aria-label\": \"operator\"\n                    }));\n                  },\n                  defaultValue: matcher.operator || matcherFieldOptions[0].value,\n                  name: `matchers.${index}.operator`,\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Required.'\n                    }\n                  }\n                })\n              }), /*#__PURE__*/_jsx(Field, {\n                label: \"Value\",\n                invalid: !!(errors !== null && errors !== void 0 && (_errors$matchers3 = errors.matchers) !== null && _errors$matchers3 !== void 0 && (_errors$matchers3$ind = _errors$matchers3[index]) !== null && _errors$matchers3$ind !== void 0 && _errors$matchers3$ind.value),\n                error: errors === null || errors === void 0 ? void 0 : (_errors$matchers4 = errors.matchers) === null || _errors$matchers4 === void 0 ? void 0 : (_errors$matchers4$ind = _errors$matchers4[index]) === null || _errors$matchers4$ind === void 0 ? void 0 : (_errors$matchers4$ind2 = _errors$matchers4$ind.value) === null || _errors$matchers4$ind2 === void 0 ? void 0 : _errors$matchers4$ind2.message,\n                children: /*#__PURE__*/_jsx(Input, Object.assign({}, register(`matchers.${index}.value`, {\n                  required: {\n                    value: true,\n                    message: 'Required.'\n                  }\n                }), {\n                  defaultValue: matcher.value,\n                  placeholder: \"value\"\n                }))\n              }), matchers.length > 1 && /*#__PURE__*/_jsx(IconButton, {\n                className: styles.removeButton,\n                tooltip: \"Remove matcher\",\n                name: 'trash-alt',\n                onClick: () => remove(index),\n                children: \"Remove\"\n              })]\n            }, `${matcher.id}`);\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"button\",\n          icon: \"plus\",\n          variant: \"secondary\",\n          onClick: () => {\n            const newMatcher = {\n              name: '',\n              value: '',\n              operator: MatcherOperator.equal\n            };\n            append(newMatcher);\n          },\n          children: \"Add matcher\"\n        })]\n      })\n    })\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    wrapper: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n    row: css`\n      display: flex;\n      align-items: flex-start;\n      flex-direction: row;\n      background-color: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(1)} ${theme.spacing(1)} 0 ${theme.spacing(1)};\n      & > * + * {\n        margin-left: ${theme.spacing(2)};\n      }\n    `,\n    removeButton: css`\n      margin-left: ${theme.spacing(1)};\n      margin-top: ${theme.spacing(2.5)};\n    `,\n    matcherOptions: css`\n      min-width: 140px;\n    `,\n    matchers: css`\n      max-width: ${theme.breakpoints.values.sm}px;\n      margin: ${theme.spacing(1)} 0;\n      padding-top: ${theme.spacing(0.5)};\n    `\n  };\n};\n\nexport default MatchersField;","map":{"version":3,"names":["css","cx","React","useFormContext","useFieldArray","Button","Field","Input","IconButton","InputControl","useStyles2","Select","MatcherOperator","matcherFieldOptions","MatchersField","className","styles","getStyles","formApi","control","register","formState","errors","fields","matchers","append","remove","name","wrapper","map","matcher","index","row","message","required","value","field","onChange","matcherOptions","operator","length","removeButton","id","newMatcher","equal","theme","spacing","colors","background","secondary","breakpoints","values","sm"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/silences/MatchersField.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC } from 'react';\nimport { useFormContext, useFieldArray } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Field, Input, IconButton, InputControl, useStyles2, Select } from '@grafana/ui';\nimport { MatcherOperator } from 'app/plugins/datasource/alertmanager/types';\n\nimport { SilenceFormFields } from '../../types/silence-form';\nimport { matcherFieldOptions } from '../../utils/alertmanager';\n\ninterface Props {\n  className?: string;\n}\n\nconst MatchersField: FC<Props> = ({ className }) => {\n  const styles = useStyles2(getStyles);\n  const formApi = useFormContext<SilenceFormFields>();\n  const {\n    control,\n    register,\n    formState: { errors },\n  } = formApi;\n\n  const { fields: matchers = [], append, remove } = useFieldArray<SilenceFormFields>({ name: 'matchers' });\n\n  return (\n    <div className={cx(className, styles.wrapper)}>\n      <Field label=\"Matching labels\" required>\n        <div>\n          <div className={styles.matchers}>\n            {matchers.map((matcher, index) => {\n              return (\n                <div className={styles.row} key={`${matcher.id}`} data-testid=\"matcher\">\n                  <Field\n                    label=\"Label\"\n                    invalid={!!errors?.matchers?.[index]?.name}\n                    error={errors?.matchers?.[index]?.name?.message}\n                  >\n                    <Input\n                      {...register(`matchers.${index}.name` as const, {\n                        required: { value: true, message: 'Required.' },\n                      })}\n                      defaultValue={matcher.name}\n                      placeholder=\"label\"\n                    />\n                  </Field>\n                  <Field label={'Operator'}>\n                    <InputControl\n                      control={control}\n                      render={({ field: { onChange, ref, ...field } }) => (\n                        <Select\n                          {...field}\n                          onChange={(value) => onChange(value.value)}\n                          className={styles.matcherOptions}\n                          options={matcherFieldOptions}\n                          aria-label=\"operator\"\n                        />\n                      )}\n                      defaultValue={matcher.operator || matcherFieldOptions[0].value}\n                      name={`matchers.${index}.operator` as const}\n                      rules={{ required: { value: true, message: 'Required.' } }}\n                    />\n                  </Field>\n                  <Field\n                    label=\"Value\"\n                    invalid={!!errors?.matchers?.[index]?.value}\n                    error={errors?.matchers?.[index]?.value?.message}\n                  >\n                    <Input\n                      {...register(`matchers.${index}.value` as const, {\n                        required: { value: true, message: 'Required.' },\n                      })}\n                      defaultValue={matcher.value}\n                      placeholder=\"value\"\n                    />\n                  </Field>\n                  {matchers.length > 1 && (\n                    <IconButton\n                      className={styles.removeButton}\n                      tooltip=\"Remove matcher\"\n                      name={'trash-alt'}\n                      onClick={() => remove(index)}\n                    >\n                      Remove\n                    </IconButton>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n          <Button\n            type=\"button\"\n            icon=\"plus\"\n            variant=\"secondary\"\n            onClick={() => {\n              const newMatcher = { name: '', value: '', operator: MatcherOperator.equal };\n              append(newMatcher);\n            }}\n          >\n            Add matcher\n          </Button>\n        </div>\n      </Field>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n    row: css`\n      display: flex;\n      align-items: flex-start;\n      flex-direction: row;\n      background-color: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(1)} ${theme.spacing(1)} 0 ${theme.spacing(1)};\n      & > * + * {\n        margin-left: ${theme.spacing(2)};\n      }\n    `,\n    removeButton: css`\n      margin-left: ${theme.spacing(1)};\n      margin-top: ${theme.spacing(2.5)};\n    `,\n    matcherOptions: css`\n      min-width: 140px;\n    `,\n    matchers: css`\n      max-width: ${theme.breakpoints.values.sm}px;\n      margin: ${theme.spacing(1)} 0;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport default MatchersField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}