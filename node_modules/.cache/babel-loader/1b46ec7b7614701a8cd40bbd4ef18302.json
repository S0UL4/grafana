{"ast":null,"code":"var _LabelsField, _Card$Heading, _Card$Description;\n\nimport { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { Card, Link, useStyles2, useTheme2 } from '@grafana/ui';\nimport LabelsField from './LabelsField';\nimport { RuleEditorSection } from './RuleEditorSection';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const NotificationsStep = () => {\n  const [hideFlowChart, setHideFlowChart] = useState(false);\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  return /*#__PURE__*/_jsxs(RuleEditorSection, {\n    stepNo: 4,\n    title: \"Notifications\",\n    description: \"Grafana handles the notifications for alerts by assigning labels to alerts. These labels connect alerts to contact points and silence alert instances that have matching labels.\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.hideButton,\n        onClick: () => setHideFlowChart(!hideFlowChart),\n        children: `${!hideFlowChart ? 'Hide' : 'Show'} flow chart`\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.contentWrapper,\n      children: [!hideFlowChart && /*#__PURE__*/_jsx(\"img\", {\n        className: styles.flowChart,\n        src: `/public/img/alerting/notification_policy_${theme.name.toLowerCase()}.svg`,\n        alt: \"notification policy flow chart\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [_LabelsField || (_LabelsField = /*#__PURE__*/_jsx(LabelsField, {})), /*#__PURE__*/_jsxs(Card, {\n          className: styles.card,\n          children: [_Card$Heading || (_Card$Heading = /*#__PURE__*/_jsx(Card.Heading, {\n            children: \"Root route \\u2013 default for all alerts\"\n          })), _Card$Description || (_Card$Description = /*#__PURE__*/_jsxs(Card.Description, {\n            children: [\"Without custom labels, your alert will be routed through the root route. To view and edit the root route, go to \", /*#__PURE__*/_jsx(Link, {\n              href: \"/alerting/routes\",\n              children: \"notification policies\"\n            }), \" or contact your admin in case you are using non-Grafana alert management.\"]\n          }))]\n        })]\n      })]\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  contentWrapper: css`\n    display: flex;\n    align-items: center;\n  `,\n  hideButton: css`\n    color: ${theme.colors.text.secondary};\n    cursor: pointer;\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  card: css`\n    max-width: 500px;\n  `,\n  flowChart: css`\n    margin-right: ${theme.spacing(3)};\n  `\n});","map":{"version":3,"names":["css","React","useState","Card","Link","useStyles2","useTheme2","LabelsField","RuleEditorSection","NotificationsStep","hideFlowChart","setHideFlowChart","styles","getStyles","theme","hideButton","contentWrapper","flowChart","name","toLowerCase","display","flexDirection","card","colors","text","secondary","spacing"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-editor/NotificationsStep.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Link, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport LabelsField from './LabelsField';\nimport { RuleEditorSection } from './RuleEditorSection';\n\nexport const NotificationsStep: FC = () => {\n  const [hideFlowChart, setHideFlowChart] = useState(false);\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  return (\n    <RuleEditorSection\n      stepNo={4}\n      title=\"Notifications\"\n      description=\"Grafana handles the notifications for alerts by assigning labels to alerts. These labels connect alerts to contact points and silence alert instances that have matching labels.\"\n    >\n      <div>\n        <div className={styles.hideButton} onClick={() => setHideFlowChart(!hideFlowChart)}>\n          {`${!hideFlowChart ? 'Hide' : 'Show'} flow chart`}\n        </div>\n      </div>\n      <div className={styles.contentWrapper}>\n        {!hideFlowChart && (\n          <img\n            className={styles.flowChart}\n            src={`/public/img/alerting/notification_policy_${theme.name.toLowerCase()}.svg`}\n            alt=\"notification policy flow chart\"\n          />\n        )}\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <LabelsField />\n          <Card className={styles.card}>\n            <Card.Heading>Root route â€“ default for all alerts</Card.Heading>\n            <Card.Description>\n              Without custom labels, your alert will be routed through the root route. To view and edit the root route,\n              go to <Link href=\"/alerting/routes\">notification policies</Link> or contact your admin in case you are\n              using non-Grafana alert management.\n            </Card.Description>\n          </Card>\n        </div>\n      </div>\n    </RuleEditorSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  contentWrapper: css`\n    display: flex;\n    align-items: center;\n  `,\n  hideButton: css`\n    color: ${theme.colors.text.secondary};\n    cursor: pointer;\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  card: css`\n    max-width: 500px;\n  `,\n  flowChart: css`\n    margin-right: ${theme.spacing(3)};\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAGA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,aAAlD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;AAEA,OAAO,MAAMC,iBAAqB,GAAG,MAAM;EACzC,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;EACA,MAAMU,MAAM,GAAGP,UAAU,CAACQ,SAAD,CAAzB;EACA,MAAMC,KAAK,GAAGR,SAAS,EAAvB;EAEA,oBACE,MAAC,iBAAD;IACE,MAAM,EAAE,CADV;IAEE,KAAK,EAAC,eAFR;IAGE,WAAW,EAAC,kLAHd;IAAA,wBAKE;MAAA,uBACE;QAAK,SAAS,EAAEM,MAAM,CAACG,UAAvB;QAAmC,OAAO,EAAE,MAAMJ,gBAAgB,CAAC,CAACD,aAAF,CAAlE;QAAA,UACI,GAAE,CAACA,aAAD,GAAiB,MAAjB,GAA0B,MAAO;MADvC;IADF,EALF,eAUE;MAAK,SAAS,EAAEE,MAAM,CAACI,cAAvB;MAAA,WACG,CAACN,aAAD,iBACC;QACE,SAAS,EAAEE,MAAM,CAACK,SADpB;QAEE,GAAG,EAAG,4CAA2CH,KAAK,CAACI,IAAN,CAAWC,WAAX,EAAyB,MAF5E;QAGE,GAAG,EAAC;MAHN,EAFJ,eAQE;QAAK,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAX;UAAmBC,aAAa,EAAE;QAAlC,CAAZ;QAAA,wDACE,KAAC,WAAD,KADF,gBAEE,MAAC,IAAD;UAAM,SAAS,EAAET,MAAM,CAACU,IAAxB;UAAA,0DACE,KAAC,IAAD,CAAM,OAAN;YAAA;UAAA,EADF,0DAEE,MAAC,IAAD,CAAM,WAAN;YAAA,4IAEQ,KAAC,IAAD;cAAM,IAAI,EAAC,kBAAX;cAAA;YAAA,EAFR;UAAA,EAFF;QAAA,EAFF;MAAA,EARF;IAAA,EAVF;EAAA,EADF;AAiCD,CAtCM;;AAwCP,MAAMT,SAAS,GAAIC,KAAD,KAA2B;EAC3CE,cAAc,EAAEhB,GAAI;AACtB;AACA;AACA,GAJ6C;EAK3Ce,UAAU,EAAEf,GAAI;AAClB,aAAac,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkBC,SAAU;AACzC;AACA,qBAAqBX,KAAK,CAACY,OAAN,CAAc,CAAd,CAAiB;AACtC,GAT6C;EAU3CJ,IAAI,EAAEtB,GAAI;AACZ;AACA,GAZ6C;EAa3CiB,SAAS,EAAEjB,GAAI;AACjB,oBAAoBc,KAAK,CAACY,OAAN,CAAc,CAAd,CAAiB;AACrC;AAf6C,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}