{"ast":null,"code":"var _h, _ExternalUserTooltip, _Icon, _Icon2;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { Button, ConfirmButton, Field, HorizontalGroup, Icon, Modal, stylesFactory, Tooltip, useStyles2, useTheme, withTheme } from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { fetchRoleOptions, updateUserRoles } from 'app/core/components/RolePicker/api';\nimport { OrgPicker } from 'app/core/components/Select/OrgPicker';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, OrgRole } from 'app/types';\nimport { OrgRolePicker } from './OrgRolePicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport class UserOrgs extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"addToOrgButtonRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      showAddOrgModal: false\n    });\n\n    _defineProperty(this, \"showOrgAddModal\", () => {\n      this.setState({\n        showAddOrgModal: true\n      });\n    });\n\n    _defineProperty(this, \"dismissOrgAddModal\", () => {\n      this.setState({\n        showAddOrgModal: false\n      }, () => {\n        var _this$addToOrgButtonR;\n\n        (_this$addToOrgButtonR = this.addToOrgButtonRef.current) === null || _this$addToOrgButtonR === void 0 ? void 0 : _this$addToOrgButtonR.focus();\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      orgs,\n      isExternalUser,\n      onOrgRoleChange,\n      onOrgRemove,\n      onOrgAdd\n    } = this.props;\n    const {\n      showAddOrgModal\n    } = this.state;\n    const addToOrgContainerClass = css`\n      margin-top: 0.8rem;\n    `;\n    const canAddToOrg = contextSrv.hasPermission(AccessControlAction.OrgUsersAdd);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n        className: \"page-heading\",\n        children: \"Organizations\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"gf-form\",\n          children: /*#__PURE__*/_jsx(\"table\", {\n            className: \"filter-table form-inline\",\n            children: /*#__PURE__*/_jsx(\"tbody\", {\n              children: orgs.map((org, index) => /*#__PURE__*/_jsx(OrgRow, {\n                isExternalUser: isExternalUser,\n                user: user,\n                org: org,\n                onOrgRoleChange: onOrgRoleChange,\n                onOrgRemove: onOrgRemove\n              }, `${org.orgId}-${index}`))\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: addToOrgContainerClass,\n          children: canAddToOrg && /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: this.showOrgAddModal,\n            ref: this.addToOrgButtonRef,\n            children: \"Add user to organization\"\n          })\n        }), /*#__PURE__*/_jsx(AddToOrgModal, {\n          user: user,\n          userOrgs: orgs,\n          isOpen: showAddOrgModal,\n          onOrgAdd: onOrgAdd,\n          onDismiss: this.dismissOrgAddModal\n        })]\n      })]\n    });\n  }\n\n}\nconst getOrgRowStyles = stylesFactory(theme => {\n  return {\n    removeButton: css`\n      margin-right: 0.6rem;\n      text-decoration: underline;\n      color: ${theme.palette.blue95};\n    `,\n    label: css`\n      font-weight: 500;\n    `,\n    disabledTooltip: css`\n      display: flex;\n    `,\n    tooltipItem: css`\n      margin-left: 5px;\n    `,\n    tooltipItemLink: css`\n      color: ${theme.palette.blue95};\n    `,\n    rolePickerWrapper: css`\n      display: flex;\n    `,\n    rolePicker: css`\n      flex: auto;\n      margin-right: ${theme.spacing.sm};\n    `\n  };\n});\n\nclass UnThemedOrgRow extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentRole: this.props.org.role,\n      isChangingRole: false,\n      roleOptions: [],\n      builtInRoles: {}\n    });\n\n    _defineProperty(this, \"onOrgRemove\", async () => {\n      const {\n        org,\n        user\n      } = this.props;\n      user && (await updateUserRoles([], user.id, org.orgId));\n      this.props.onOrgRemove(org.orgId);\n    });\n\n    _defineProperty(this, \"onChangeRoleClick\", () => {\n      const {\n        org\n      } = this.props;\n      this.setState({\n        isChangingRole: true,\n        currentRole: org.role\n      });\n    });\n\n    _defineProperty(this, \"onOrgRoleChange\", newRole => {\n      this.setState({\n        currentRole: newRole\n      });\n    });\n\n    _defineProperty(this, \"onOrgRoleSave\", () => {\n      this.props.onOrgRoleChange(this.props.org.orgId, this.state.currentRole);\n    });\n\n    _defineProperty(this, \"onCancelClick\", () => {\n      this.setState({\n        isChangingRole: false\n      });\n    });\n\n    _defineProperty(this, \"onBuiltinRoleChange\", newRole => {\n      this.props.onOrgRoleChange(this.props.org.orgId, newRole);\n    });\n  }\n\n  componentDidMount() {\n    if (contextSrv.licensedAccessControlEnabled()) {\n      if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n        fetchRoleOptions(this.props.org.orgId).then(roles => this.setState({\n          roleOptions: roles\n        })).catch(e => console.error(e));\n      }\n\n      if (contextSrv.hasPermission(AccessControlAction.ActionBuiltinRolesList)) {\n        fetchRoleOptions(this.props.org.orgId).then(roles => this.setState({\n          builtInRoles: roles\n        })).catch(e => console.error(e));\n      }\n    }\n  }\n\n  render() {\n    const {\n      user,\n      org,\n      isExternalUser,\n      theme\n    } = this.props;\n    const {\n      currentRole,\n      isChangingRole\n    } = this.state;\n    const styles = getOrgRowStyles(theme);\n    const labelClass = cx('width-16', styles.label);\n    const canChangeRole = contextSrv.hasPermission(AccessControlAction.OrgUsersWrite);\n    const canRemoveFromOrg = contextSrv.hasPermission(AccessControlAction.OrgUsersRemove);\n    const rolePickerDisabled = isExternalUser || !canChangeRole;\n    const inputId = `${org.name}-input`;\n    return /*#__PURE__*/_jsxs(\"tr\", {\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        className: labelClass,\n        children: /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: inputId,\n          children: org.name\n        })\n      }), contextSrv.licensedAccessControlEnabled() ? /*#__PURE__*/_jsx(\"td\", {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.rolePickerWrapper,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.rolePicker,\n            children: /*#__PURE__*/_jsx(UserRolePicker, {\n              userId: (user === null || user === void 0 ? void 0 : user.id) || 0,\n              orgId: org.orgId,\n              builtInRole: org.role,\n              roleOptions: this.state.roleOptions,\n              builtInRoles: this.state.builtInRoles,\n              onBuiltinRoleChange: this.onBuiltinRoleChange,\n              builtinRolesDisabled: rolePickerDisabled\n            })\n          }), isExternalUser && (_ExternalUserTooltip || (_ExternalUserTooltip = /*#__PURE__*/_jsx(ExternalUserTooltip, {})))]\n        })\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [isChangingRole ? /*#__PURE__*/_jsx(\"td\", {\n          children: /*#__PURE__*/_jsx(OrgRolePicker, {\n            inputId: inputId,\n            value: currentRole,\n            onChange: this.onOrgRoleChange,\n            autoFocus: true\n          })\n        }) : /*#__PURE__*/_jsx(\"td\", {\n          className: \"width-25\",\n          children: org.role\n        }), /*#__PURE__*/_jsx(\"td\", {\n          colSpan: 1,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"pull-right\",\n            children: canChangeRole && /*#__PURE__*/_jsx(ChangeOrgButton, {\n              isExternalUser: isExternalUser,\n              onChangeRoleClick: this.onChangeRoleClick,\n              onCancelClick: this.onCancelClick,\n              onOrgRoleSave: this.onOrgRoleSave\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"td\", {\n        colSpan: 1,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"pull-right\",\n          children: canRemoveFromOrg && /*#__PURE__*/_jsx(ConfirmButton, {\n            confirmText: \"Confirm removal\",\n            confirmVariant: \"destructive\",\n            onCancel: this.onCancelClick,\n            onConfirm: this.onOrgRemove,\n            autoFocus: true,\n            children: \"Remove from organization\"\n          })\n        })\n      })]\n    });\n  }\n\n}\n\nconst OrgRow = withTheme(UnThemedOrgRow);\nconst getAddToOrgModalStyles = stylesFactory(() => ({\n  modal: css`\n    width: 500px;\n  `,\n  buttonRow: css`\n    text-align: center;\n  `,\n  modalContent: css`\n    overflow: visible;\n  `\n}));\nexport class AddToOrgModal extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedOrg: null,\n      role: OrgRole.Viewer,\n      roleOptions: [],\n      pendingOrgId: null,\n      pendingUserId: null,\n      pendingRoles: []\n    });\n\n    _defineProperty(this, \"onOrgSelect\", org => {\n      const userOrg = this.props.userOrgs.find(userOrg => {\n        var _org$value;\n\n        return userOrg.orgId === ((_org$value = org.value) === null || _org$value === void 0 ? void 0 : _org$value.id);\n      });\n      this.setState({\n        selectedOrg: org.value,\n        role: (userOrg === null || userOrg === void 0 ? void 0 : userOrg.role) || OrgRole.Viewer\n      });\n\n      if (contextSrv.licensedAccessControlEnabled()) {\n        if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n          var _org$value2;\n\n          fetchRoleOptions((_org$value2 = org.value) === null || _org$value2 === void 0 ? void 0 : _org$value2.id).then(roles => this.setState({\n            roleOptions: roles\n          })).catch(e => console.error(e));\n        }\n      }\n    });\n\n    _defineProperty(this, \"onOrgRoleChange\", newRole => {\n      this.setState({\n        role: newRole\n      });\n    });\n\n    _defineProperty(this, \"onAddUserToOrg\", async () => {\n      const {\n        selectedOrg,\n        role\n      } = this.state;\n      this.props.onOrgAdd(selectedOrg.id, role); // add the stored userRoles also\n\n      if (contextSrv.licensedAccessControlEnabled()) {\n        if (contextSrv.hasPermission(AccessControlAction.OrgUsersWrite)) {\n          if (this.state.pendingUserId) {\n            await updateUserRoles(this.state.pendingRoles, this.state.pendingUserId, this.state.pendingOrgId); // clear pending state\n\n            this.state.pendingOrgId = null;\n            this.state.pendingRoles = [];\n            this.state.pendingUserId = null;\n          }\n        }\n      }\n    });\n\n    _defineProperty(this, \"onCancel\", () => {\n      // clear selectedOrg when modal is canceled\n      this.setState({\n        selectedOrg: null,\n        pendingRoles: [],\n        pendingOrgId: null,\n        pendingUserId: null\n      });\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    });\n\n    _defineProperty(this, \"onRoleUpdate\", async (roles, userId, orgId) => {\n      // keep the new role assignments for user\n      this.setState({\n        pendingRoles: roles,\n        pendingOrgId: orgId,\n        pendingUserId: userId\n      });\n    });\n  }\n\n  render() {\n    const {\n      isOpen,\n      user,\n      userOrgs\n    } = this.props;\n    const {\n      role,\n      roleOptions,\n      selectedOrg\n    } = this.state;\n    const styles = getAddToOrgModalStyles();\n    return /*#__PURE__*/_jsxs(Modal, {\n      className: styles.modal,\n      contentClassName: styles.modalContent,\n      title: \"Add to an organization\",\n      isOpen: isOpen,\n      onDismiss: this.onCancel,\n      children: [/*#__PURE__*/_jsx(Field, {\n        label: \"Organization\",\n        children: /*#__PURE__*/_jsx(OrgPicker, {\n          inputId: \"new-org-input\",\n          onSelected: this.onOrgSelect,\n          excludeOrgs: userOrgs,\n          autoFocus: true\n        })\n      }), /*#__PURE__*/_jsx(Field, {\n        label: \"Role\",\n        disabled: selectedOrg === null,\n        children: contextSrv.accessControlEnabled() ? /*#__PURE__*/_jsx(UserRolePicker, {\n          userId: (user === null || user === void 0 ? void 0 : user.id) || 0,\n          orgId: selectedOrg === null || selectedOrg === void 0 ? void 0 : selectedOrg.id,\n          builtInRole: role,\n          onBuiltinRoleChange: this.onOrgRoleChange,\n          builtinRolesDisabled: false,\n          roleOptions: roleOptions,\n          updateDisabled: true,\n          onApplyRoles: this.onRoleUpdate,\n          pendingRoles: this.state.pendingRoles\n        }) : /*#__PURE__*/_jsx(OrgRolePicker, {\n          inputId: \"new-org-role-input\",\n          value: role,\n          onChange: this.onOrgRoleChange\n        })\n      }), /*#__PURE__*/_jsx(Modal.ButtonRow, {\n        children: /*#__PURE__*/_jsxs(HorizontalGroup, {\n          spacing: \"md\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            fill: \"outline\",\n            onClick: this.onCancel,\n            children: \"Cancel\"\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"primary\",\n            disabled: selectedOrg === null,\n            onClick: this.onAddUserToOrg,\n            children: \"Add to organization\"\n          })]\n        })\n      })]\n    });\n  }\n\n}\n\nconst getChangeOrgButtonTheme = theme => ({\n  disabledTooltip: css`\n    display: flex;\n  `,\n  tooltipItemLink: css`\n    color: ${theme.v1.palette.blue95};\n  `\n});\n\nexport function ChangeOrgButton({\n  onChangeRoleClick,\n  isExternalUser,\n  onOrgRoleSave,\n  onCancelClick\n}) {\n  const styles = useStyles2(getChangeOrgButtonTheme);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.disabledTooltip,\n    children: [/*#__PURE__*/_jsx(ConfirmButton, {\n      confirmText: \"Save\",\n      onClick: onChangeRoleClick,\n      onCancel: onCancelClick,\n      onConfirm: onOrgRoleSave,\n      disabled: isExternalUser,\n      children: \"Change role\"\n    }), isExternalUser && /*#__PURE__*/_jsx(Tooltip, {\n      placement: \"right-end\",\n      content: /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"This user's role is not editable because it is synchronized from your auth provider. Refer to the\\xA0\", /*#__PURE__*/_jsx(\"a\", {\n          className: styles.tooltipItemLink,\n          href: 'https://grafana.com/docs/grafana/latest/auth',\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          children: \"Grafana authentication docs\"\n        }), \"\\xA0for details.\"]\n      }),\n      children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"question-circle\"\n      }))\n    })]\n  });\n}\n\nconst ExternalUserTooltip = () => {\n  const theme = useTheme();\n  const styles = getTooltipStyles(theme);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.disabledTooltip,\n    children: /*#__PURE__*/_jsx(Tooltip, {\n      placement: \"right-end\",\n      content: /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"This user's built-in role is not editable because it is synchronized from your auth provider. Refer to the\\xA0\", /*#__PURE__*/_jsx(\"a\", {\n          className: styles.tooltipItemLink,\n          href: 'https://grafana.com/docs/grafana/latest/auth',\n          rel: \"noreferrer noopener\",\n          target: \"_blank\",\n          children: \"Grafana authentication docs\"\n        }), \"\\xA0for details.\"]\n      }),\n      children: _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n        name: \"question-circle\"\n      }))\n    })\n  });\n};\n\nconst getTooltipStyles = stylesFactory(theme => ({\n  disabledTooltip: css`\n    display: flex;\n  `,\n  tooltipItemLink: css`\n    color: ${theme.palette.blue95};\n  `\n}));","map":{"version":3,"names":["css","cx","React","PureComponent","Button","ConfirmButton","Field","HorizontalGroup","Icon","Modal","stylesFactory","Tooltip","useStyles2","useTheme","withTheme","UserRolePicker","fetchRoleOptions","updateUserRoles","OrgPicker","contextSrv","AccessControlAction","OrgRole","OrgRolePicker","UserOrgs","createRef","showAddOrgModal","setState","addToOrgButtonRef","current","focus","render","user","orgs","isExternalUser","onOrgRoleChange","onOrgRemove","onOrgAdd","props","state","addToOrgContainerClass","canAddToOrg","hasPermission","OrgUsersAdd","map","org","index","orgId","showOrgAddModal","dismissOrgAddModal","getOrgRowStyles","theme","removeButton","palette","blue95","label","disabledTooltip","tooltipItem","tooltipItemLink","rolePickerWrapper","rolePicker","spacing","sm","UnThemedOrgRow","currentRole","role","isChangingRole","roleOptions","builtInRoles","id","newRole","componentDidMount","licensedAccessControlEnabled","ActionRolesList","then","roles","catch","e","console","error","ActionBuiltinRolesList","styles","labelClass","canChangeRole","OrgUsersWrite","canRemoveFromOrg","OrgUsersRemove","rolePickerDisabled","inputId","name","onBuiltinRoleChange","onChangeRoleClick","onCancelClick","onOrgRoleSave","OrgRow","getAddToOrgModalStyles","modal","buttonRow","modalContent","AddToOrgModal","selectedOrg","Viewer","pendingOrgId","pendingUserId","pendingRoles","userOrg","userOrgs","find","value","onDismiss","userId","isOpen","onCancel","onOrgSelect","accessControlEnabled","onRoleUpdate","onAddUserToOrg","getChangeOrgButtonTheme","v1","ChangeOrgButton","ExternalUserTooltip","getTooltipStyles"],"sources":["/home/soula/grafana/public/app/features/admin/UserOrgs.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { PureComponent, ReactElement } from 'react';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\nimport {\n  Button,\n  ConfirmButton,\n  Field,\n  HorizontalGroup,\n  Icon,\n  Modal,\n  stylesFactory,\n  Themeable,\n  Tooltip,\n  useStyles2,\n  useTheme,\n  withTheme,\n} from '@grafana/ui';\nimport { UserRolePicker } from 'app/core/components/RolePicker/UserRolePicker';\nimport { fetchRoleOptions, updateUserRoles } from 'app/core/components/RolePicker/api';\nimport { OrgPicker, OrgSelectItem } from 'app/core/components/Select/OrgPicker';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, Organization, OrgRole, Role, UserDTO, UserOrg } from 'app/types';\n\nimport { OrgRolePicker } from './OrgRolePicker';\n\ninterface Props {\n  orgs: UserOrg[];\n  user?: UserDTO;\n  isExternalUser?: boolean;\n\n  onOrgRemove: (orgId: number) => void;\n  onOrgRoleChange: (orgId: number, newRole: OrgRole) => void;\n  onOrgAdd: (orgId: number, role: OrgRole) => void;\n}\n\ninterface State {\n  showAddOrgModal: boolean;\n}\n\nexport class UserOrgs extends PureComponent<Props, State> {\n  addToOrgButtonRef = React.createRef<HTMLButtonElement>();\n  state = {\n    showAddOrgModal: false,\n  };\n\n  showOrgAddModal = () => {\n    this.setState({ showAddOrgModal: true });\n  };\n\n  dismissOrgAddModal = () => {\n    this.setState({ showAddOrgModal: false }, () => {\n      this.addToOrgButtonRef.current?.focus();\n    });\n  };\n\n  render() {\n    const { user, orgs, isExternalUser, onOrgRoleChange, onOrgRemove, onOrgAdd } = this.props;\n    const { showAddOrgModal } = this.state;\n    const addToOrgContainerClass = css`\n      margin-top: 0.8rem;\n    `;\n    const canAddToOrg = contextSrv.hasPermission(AccessControlAction.OrgUsersAdd);\n    return (\n      <>\n        <h3 className=\"page-heading\">Organizations</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <tbody>\n                {orgs.map((org, index) => (\n                  <OrgRow\n                    key={`${org.orgId}-${index}`}\n                    isExternalUser={isExternalUser}\n                    user={user}\n                    org={org}\n                    onOrgRoleChange={onOrgRoleChange}\n                    onOrgRemove={onOrgRemove}\n                  />\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className={addToOrgContainerClass}>\n            {canAddToOrg && (\n              <Button variant=\"secondary\" onClick={this.showOrgAddModal} ref={this.addToOrgButtonRef}>\n                Add user to organization\n              </Button>\n            )}\n          </div>\n          <AddToOrgModal\n            user={user}\n            userOrgs={orgs}\n            isOpen={showAddOrgModal}\n            onOrgAdd={onOrgAdd}\n            onDismiss={this.dismissOrgAddModal}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nconst getOrgRowStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    removeButton: css`\n      margin-right: 0.6rem;\n      text-decoration: underline;\n      color: ${theme.palette.blue95};\n    `,\n    label: css`\n      font-weight: 500;\n    `,\n    disabledTooltip: css`\n      display: flex;\n    `,\n    tooltipItem: css`\n      margin-left: 5px;\n    `,\n    tooltipItemLink: css`\n      color: ${theme.palette.blue95};\n    `,\n    rolePickerWrapper: css`\n      display: flex;\n    `,\n    rolePicker: css`\n      flex: auto;\n      margin-right: ${theme.spacing.sm};\n    `,\n  };\n});\n\ninterface OrgRowProps extends Themeable {\n  user?: UserDTO;\n  org: UserOrg;\n  isExternalUser?: boolean;\n  onOrgRemove: (orgId: number) => void;\n  onOrgRoleChange: (orgId: number, newRole: OrgRole) => void;\n}\n\nclass UnThemedOrgRow extends PureComponent<OrgRowProps> {\n  state = {\n    currentRole: this.props.org.role,\n    isChangingRole: false,\n    roleOptions: [],\n    builtInRoles: {},\n  };\n\n  componentDidMount() {\n    if (contextSrv.licensedAccessControlEnabled()) {\n      if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n        fetchRoleOptions(this.props.org.orgId)\n          .then((roles) => this.setState({ roleOptions: roles }))\n          .catch((e) => console.error(e));\n      }\n      if (contextSrv.hasPermission(AccessControlAction.ActionBuiltinRolesList)) {\n        fetchRoleOptions(this.props.org.orgId)\n          .then((roles) => this.setState({ builtInRoles: roles }))\n          .catch((e) => console.error(e));\n      }\n    }\n  }\n\n  onOrgRemove = async () => {\n    const { org, user } = this.props;\n    user && (await updateUserRoles([], user.id, org.orgId));\n    this.props.onOrgRemove(org.orgId);\n  };\n\n  onChangeRoleClick = () => {\n    const { org } = this.props;\n    this.setState({ isChangingRole: true, currentRole: org.role });\n  };\n\n  onOrgRoleChange = (newRole: OrgRole) => {\n    this.setState({ currentRole: newRole });\n  };\n\n  onOrgRoleSave = () => {\n    this.props.onOrgRoleChange(this.props.org.orgId, this.state.currentRole);\n  };\n\n  onCancelClick = () => {\n    this.setState({ isChangingRole: false });\n  };\n\n  onBuiltinRoleChange = (newRole: OrgRole) => {\n    this.props.onOrgRoleChange(this.props.org.orgId, newRole);\n  };\n\n  render() {\n    const { user, org, isExternalUser, theme } = this.props;\n    const { currentRole, isChangingRole } = this.state;\n    const styles = getOrgRowStyles(theme);\n    const labelClass = cx('width-16', styles.label);\n    const canChangeRole = contextSrv.hasPermission(AccessControlAction.OrgUsersWrite);\n    const canRemoveFromOrg = contextSrv.hasPermission(AccessControlAction.OrgUsersRemove);\n    const rolePickerDisabled = isExternalUser || !canChangeRole;\n\n    const inputId = `${org.name}-input`;\n    return (\n      <tr>\n        <td className={labelClass}>\n          <label htmlFor={inputId}>{org.name}</label>\n        </td>\n        {contextSrv.licensedAccessControlEnabled() ? (\n          <td>\n            <div className={styles.rolePickerWrapper}>\n              <div className={styles.rolePicker}>\n                <UserRolePicker\n                  userId={user?.id || 0}\n                  orgId={org.orgId}\n                  builtInRole={org.role}\n                  roleOptions={this.state.roleOptions}\n                  builtInRoles={this.state.builtInRoles}\n                  onBuiltinRoleChange={this.onBuiltinRoleChange}\n                  builtinRolesDisabled={rolePickerDisabled}\n                />\n              </div>\n              {isExternalUser && <ExternalUserTooltip />}\n            </div>\n          </td>\n        ) : (\n          <>\n            {isChangingRole ? (\n              <td>\n                <OrgRolePicker inputId={inputId} value={currentRole} onChange={this.onOrgRoleChange} autoFocus />\n              </td>\n            ) : (\n              <td className=\"width-25\">{org.role}</td>\n            )}\n            <td colSpan={1}>\n              <div className=\"pull-right\">\n                {canChangeRole && (\n                  <ChangeOrgButton\n                    isExternalUser={isExternalUser}\n                    onChangeRoleClick={this.onChangeRoleClick}\n                    onCancelClick={this.onCancelClick}\n                    onOrgRoleSave={this.onOrgRoleSave}\n                  />\n                )}\n              </div>\n            </td>\n          </>\n        )}\n        <td colSpan={1}>\n          <div className=\"pull-right\">\n            {canRemoveFromOrg && (\n              <ConfirmButton\n                confirmText=\"Confirm removal\"\n                confirmVariant=\"destructive\"\n                onCancel={this.onCancelClick}\n                onConfirm={this.onOrgRemove}\n                autoFocus\n              >\n                Remove from organization\n              </ConfirmButton>\n            )}\n          </div>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst OrgRow = withTheme(UnThemedOrgRow);\n\nconst getAddToOrgModalStyles = stylesFactory(() => ({\n  modal: css`\n    width: 500px;\n  `,\n  buttonRow: css`\n    text-align: center;\n  `,\n  modalContent: css`\n    overflow: visible;\n  `,\n}));\n\ninterface AddToOrgModalProps {\n  isOpen: boolean;\n  user?: UserDTO;\n  userOrgs: UserOrg[];\n  onOrgAdd(orgId: number, role: string): void;\n\n  onDismiss?(): void;\n}\n\ninterface AddToOrgModalState {\n  selectedOrg: Organization | null;\n  role: OrgRole;\n  roleOptions: Role[];\n  pendingOrgId: number | null;\n  pendingUserId: number | null;\n  pendingRoles: Role[];\n}\n\nexport class AddToOrgModal extends PureComponent<AddToOrgModalProps, AddToOrgModalState> {\n  state: AddToOrgModalState = {\n    selectedOrg: null,\n    role: OrgRole.Viewer,\n    roleOptions: [],\n    pendingOrgId: null,\n    pendingUserId: null,\n    pendingRoles: [],\n  };\n\n  onOrgSelect = (org: OrgSelectItem) => {\n    const userOrg = this.props.userOrgs.find((userOrg) => userOrg.orgId === org.value?.id);\n    this.setState({ selectedOrg: org.value!, role: userOrg?.role || OrgRole.Viewer });\n    if (contextSrv.licensedAccessControlEnabled()) {\n      if (contextSrv.hasPermission(AccessControlAction.ActionRolesList)) {\n        fetchRoleOptions(org.value?.id)\n          .then((roles) => this.setState({ roleOptions: roles }))\n          .catch((e) => console.error(e));\n      }\n    }\n  };\n\n  onOrgRoleChange = (newRole: OrgRole) => {\n    this.setState({\n      role: newRole,\n    });\n  };\n\n  onAddUserToOrg = async () => {\n    const { selectedOrg, role } = this.state;\n    this.props.onOrgAdd(selectedOrg!.id, role);\n    // add the stored userRoles also\n    if (contextSrv.licensedAccessControlEnabled()) {\n      if (contextSrv.hasPermission(AccessControlAction.OrgUsersWrite)) {\n        if (this.state.pendingUserId) {\n          await updateUserRoles(this.state.pendingRoles, this.state.pendingUserId!, this.state.pendingOrgId!);\n          // clear pending state\n          this.state.pendingOrgId = null;\n          this.state.pendingRoles = [];\n          this.state.pendingUserId = null;\n        }\n      }\n    }\n  };\n\n  onCancel = () => {\n    // clear selectedOrg when modal is canceled\n    this.setState({\n      selectedOrg: null,\n      pendingRoles: [],\n      pendingOrgId: null,\n      pendingUserId: null,\n    });\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  onRoleUpdate = async (roles: Role[], userId: number, orgId: number | undefined) => {\n    // keep the new role assignments for user\n    this.setState({\n      pendingRoles: roles,\n      pendingOrgId: orgId!,\n      pendingUserId: userId,\n    });\n  };\n\n  render() {\n    const { isOpen, user, userOrgs } = this.props;\n    const { role, roleOptions, selectedOrg } = this.state;\n    const styles = getAddToOrgModalStyles();\n    return (\n      <Modal\n        className={styles.modal}\n        contentClassName={styles.modalContent}\n        title=\"Add to an organization\"\n        isOpen={isOpen}\n        onDismiss={this.onCancel}\n      >\n        <Field label=\"Organization\">\n          <OrgPicker inputId=\"new-org-input\" onSelected={this.onOrgSelect} excludeOrgs={userOrgs} autoFocus />\n        </Field>\n        <Field label=\"Role\" disabled={selectedOrg === null}>\n          {contextSrv.accessControlEnabled() ? (\n            <UserRolePicker\n              userId={user?.id || 0}\n              orgId={selectedOrg?.id}\n              builtInRole={role}\n              onBuiltinRoleChange={this.onOrgRoleChange}\n              builtinRolesDisabled={false}\n              roleOptions={roleOptions}\n              updateDisabled={true}\n              onApplyRoles={this.onRoleUpdate}\n              pendingRoles={this.state.pendingRoles}\n            />\n          ) : (\n            <OrgRolePicker inputId=\"new-org-role-input\" value={role} onChange={this.onOrgRoleChange} />\n          )}\n        </Field>\n        <Modal.ButtonRow>\n          <HorizontalGroup spacing=\"md\" justify=\"center\">\n            <Button variant=\"secondary\" fill=\"outline\" onClick={this.onCancel}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" disabled={selectedOrg === null} onClick={this.onAddUserToOrg}>\n              Add to organization\n            </Button>\n          </HorizontalGroup>\n        </Modal.ButtonRow>\n      </Modal>\n    );\n  }\n}\n\ninterface ChangeOrgButtonProps {\n  isExternalUser?: boolean;\n  onChangeRoleClick: () => void;\n  onCancelClick: () => void;\n  onOrgRoleSave: () => void;\n}\n\nconst getChangeOrgButtonTheme = (theme: GrafanaTheme2) => ({\n  disabledTooltip: css`\n    display: flex;\n  `,\n  tooltipItemLink: css`\n    color: ${theme.v1.palette.blue95};\n  `,\n});\n\nexport function ChangeOrgButton({\n  onChangeRoleClick,\n  isExternalUser,\n  onOrgRoleSave,\n  onCancelClick,\n}: ChangeOrgButtonProps): ReactElement {\n  const styles = useStyles2(getChangeOrgButtonTheme);\n  return (\n    <div className={styles.disabledTooltip}>\n      <ConfirmButton\n        confirmText=\"Save\"\n        onClick={onChangeRoleClick}\n        onCancel={onCancelClick}\n        onConfirm={onOrgRoleSave}\n        disabled={isExternalUser}\n      >\n        Change role\n      </ConfirmButton>\n      {isExternalUser && (\n        <Tooltip\n          placement=\"right-end\"\n          content={\n            <div>\n              This user&apos;s role is not editable because it is synchronized from your auth provider. Refer to\n              the&nbsp;\n              <a\n                className={styles.tooltipItemLink}\n                href={'https://grafana.com/docs/grafana/latest/auth'}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Grafana authentication docs\n              </a>\n              &nbsp;for details.\n            </div>\n          }\n        >\n          <Icon name=\"question-circle\" />\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst ExternalUserTooltip: React.FC = () => {\n  const theme = useTheme();\n  const styles = getTooltipStyles(theme);\n\n  return (\n    <div className={styles.disabledTooltip}>\n      <Tooltip\n        placement=\"right-end\"\n        content={\n          <div>\n            This user&apos;s built-in role is not editable because it is synchronized from your auth provider. Refer to\n            the&nbsp;\n            <a\n              className={styles.tooltipItemLink}\n              href={'https://grafana.com/docs/grafana/latest/auth'}\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n            >\n              Grafana authentication docs\n            </a>\n            &nbsp;for details.\n          </div>\n        }\n      >\n        <Icon name=\"question-circle\" />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst getTooltipStyles = stylesFactory((theme: GrafanaTheme) => ({\n  disabledTooltip: css`\n    display: flex;\n  `,\n  tooltipItemLink: css`\n    color: ${theme.palette.blue95};\n  `,\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}