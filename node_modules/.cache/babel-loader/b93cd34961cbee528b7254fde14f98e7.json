{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertLabels } from '../AlertLabels';\nimport { DetailsField } from '../DetailsField';\nimport { RuleDetailsActionButtons } from './RuleDetailsActionButtons';\nimport { RuleDetailsAnnotations } from './RuleDetailsAnnotations';\nimport { RuleDetailsDataSources } from './RuleDetailsDataSources';\nimport { RuleDetailsExpression } from './RuleDetailsExpression';\nimport { RuleDetailsMatchingInstances } from './RuleDetailsMatchingInstances';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// The limit is set to 15 in order to upkeep the good performance\n// and to encourage users to go to the rule details page to see the rest of the instances\n// We don't want to paginate the instances list on the alert list page\nconst INSTANCES_DISPLAY_LIMIT = 15;\nexport const RuleDetails = ({\n  rule\n}) => {\n  const styles = useStyles2(getStyles);\n  const {\n    namespace: {\n      rulesSource\n    }\n  } = rule;\n  const annotations = Object.entries(rule.annotations).filter(([_, value]) => !!value.trim());\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(RuleDetailsActionButtons, {\n      rule: rule,\n      rulesSource: rulesSource\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.leftSide,\n        children: [!!rule.labels && !!Object.keys(rule.labels).length && /*#__PURE__*/_jsx(DetailsField, {\n          label: \"Labels\",\n          horizontal: true,\n          children: /*#__PURE__*/_jsx(AlertLabels, {\n            labels: rule.labels\n          })\n        }), /*#__PURE__*/_jsx(RuleDetailsExpression, {\n          rulesSource: rulesSource,\n          rule: rule,\n          annotations: annotations\n        }), /*#__PURE__*/_jsx(RuleDetailsAnnotations, {\n          annotations: annotations\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.rightSide,\n        children: /*#__PURE__*/_jsx(RuleDetailsDataSources, {\n          rulesSource: rulesSource,\n          rule: rule\n        })\n      })]\n    }), /*#__PURE__*/_jsx(RuleDetailsMatchingInstances, {\n      rule: rule,\n      itemsDisplayLimit: INSTANCES_DISPLAY_LIMIT\n    })]\n  });\n};\nexport const getStyles = theme => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: row;\n\n    ${theme.breakpoints.down('md')} {\n      flex-direction: column;\n    }\n  `,\n  leftSide: css`\n    flex: 1;\n  `,\n  rightSide: css`\n    ${theme.breakpoints.up('md')} {\n      padding-left: 90px;\n      width: 300px;\n    }\n  `\n});","map":{"version":3,"names":["css","React","useStyles2","AlertLabels","DetailsField","RuleDetailsActionButtons","RuleDetailsAnnotations","RuleDetailsDataSources","RuleDetailsExpression","RuleDetailsMatchingInstances","INSTANCES_DISPLAY_LIMIT","RuleDetails","rule","styles","getStyles","namespace","rulesSource","annotations","Object","entries","filter","_","value","trim","wrapper","leftSide","labels","keys","length","rightSide","theme","breakpoints","down","up"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rules/RuleDetails.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { CombinedRule } from 'app/types/unified-alerting';\n\nimport { AlertLabels } from '../AlertLabels';\nimport { DetailsField } from '../DetailsField';\n\nimport { RuleDetailsActionButtons } from './RuleDetailsActionButtons';\nimport { RuleDetailsAnnotations } from './RuleDetailsAnnotations';\nimport { RuleDetailsDataSources } from './RuleDetailsDataSources';\nimport { RuleDetailsExpression } from './RuleDetailsExpression';\nimport { RuleDetailsMatchingInstances } from './RuleDetailsMatchingInstances';\n\ninterface Props {\n  rule: CombinedRule;\n}\n\n// The limit is set to 15 in order to upkeep the good performance\n// and to encourage users to go to the rule details page to see the rest of the instances\n// We don't want to paginate the instances list on the alert list page\nconst INSTANCES_DISPLAY_LIMIT = 15;\n\nexport const RuleDetails: FC<Props> = ({ rule }) => {\n  const styles = useStyles2(getStyles);\n  const {\n    namespace: { rulesSource },\n  } = rule;\n\n  const annotations = Object.entries(rule.annotations).filter(([_, value]) => !!value.trim());\n\n  return (\n    <div>\n      <RuleDetailsActionButtons rule={rule} rulesSource={rulesSource} />\n      <div className={styles.wrapper}>\n        <div className={styles.leftSide}>\n          {!!rule.labels && !!Object.keys(rule.labels).length && (\n            <DetailsField label=\"Labels\" horizontal={true}>\n              <AlertLabels labels={rule.labels} />\n            </DetailsField>\n          )}\n          <RuleDetailsExpression rulesSource={rulesSource} rule={rule} annotations={annotations} />\n          <RuleDetailsAnnotations annotations={annotations} />\n        </div>\n        <div className={styles.rightSide}>\n          <RuleDetailsDataSources rulesSource={rulesSource} rule={rule} />\n        </div>\n      </div>\n      <RuleDetailsMatchingInstances rule={rule} itemsDisplayLimit={INSTANCES_DISPLAY_LIMIT} />\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: row;\n\n    ${theme.breakpoints.down('md')} {\n      flex-direction: column;\n    }\n  `,\n  leftSide: css`\n    flex: 1;\n  `,\n  rightSide: css`\n    ${theme.breakpoints.up('md')} {\n      padding-left: 90px;\n      width: 300px;\n    }\n  `,\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAGA,SAASC,UAAT,QAA2B,aAA3B;AAGA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,4BAAT,QAA6C,gCAA7C;;;AAMA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG,EAAhC;AAEA,OAAO,MAAMC,WAAsB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAClD,MAAMC,MAAM,GAAGX,UAAU,CAACY,SAAD,CAAzB;EACA,MAAM;IACJC,SAAS,EAAE;MAAEC;IAAF;EADP,IAEFJ,IAFJ;EAIA,MAAMK,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeP,IAAI,CAACK,WAApB,EAAiCG,MAAjC,CAAwC,CAAC,CAACC,CAAD,EAAIC,KAAJ,CAAD,KAAgB,CAAC,CAACA,KAAK,CAACC,IAAN,EAA1D,CAApB;EAEA,oBACE;IAAA,wBACE,KAAC,wBAAD;MAA0B,IAAI,EAAEX,IAAhC;MAAsC,WAAW,EAAEI;IAAnD,EADF,eAEE;MAAK,SAAS,EAAEH,MAAM,CAACW,OAAvB;MAAA,wBACE;QAAK,SAAS,EAAEX,MAAM,CAACY,QAAvB;QAAA,WACG,CAAC,CAACb,IAAI,CAACc,MAAP,IAAiB,CAAC,CAACR,MAAM,CAACS,IAAP,CAAYf,IAAI,CAACc,MAAjB,EAAyBE,MAA5C,iBACC,KAAC,YAAD;UAAc,KAAK,EAAC,QAApB;UAA6B,UAAU,EAAE,IAAzC;UAAA,uBACE,KAAC,WAAD;YAAa,MAAM,EAAEhB,IAAI,CAACc;UAA1B;QADF,EAFJ,eAME,KAAC,qBAAD;UAAuB,WAAW,EAAEV,WAApC;UAAiD,IAAI,EAAEJ,IAAvD;UAA6D,WAAW,EAAEK;QAA1E,EANF,eAOE,KAAC,sBAAD;UAAwB,WAAW,EAAEA;QAArC,EAPF;MAAA,EADF,eAUE;QAAK,SAAS,EAAEJ,MAAM,CAACgB,SAAvB;QAAA,uBACE,KAAC,sBAAD;UAAwB,WAAW,EAAEb,WAArC;UAAkD,IAAI,EAAEJ;QAAxD;MADF,EAVF;IAAA,EAFF,eAgBE,KAAC,4BAAD;MAA8B,IAAI,EAAEA,IAApC;MAA0C,iBAAiB,EAAEF;IAA7D,EAhBF;EAAA,EADF;AAoBD,CA5BM;AA8BP,OAAO,MAAMI,SAAS,GAAIgB,KAAD,KAA2B;EAClDN,OAAO,EAAExB,GAAI;AACf;AACA;AACA;AACA,MAAM8B,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAA6B;AACnC;AACA;AACA,GARoD;EASlDP,QAAQ,EAAEzB,GAAI;AAChB;AACA,GAXoD;EAYlD6B,SAAS,EAAE7B,GAAI;AACjB,MAAM8B,KAAK,CAACC,WAAN,CAAkBE,EAAlB,CAAqB,IAArB,CAA2B;AACjC;AACA;AACA;AACA;AAjBoD,CAA3B,CAAlB"},"metadata":{},"sourceType":"module"}