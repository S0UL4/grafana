{"ast":null,"code":"import { isFunction } from 'lodash';\nimport React from 'react';\nimport { ThresholdsMode, VizOrientation, getFieldConfigWithMinMax } from '@grafana/data';\nimport { BarGauge, BarGaugeDisplayMode } from '../BarGauge/BarGauge';\nimport { DataLinksContextMenu } from '../DataLinks/DataLinksContextMenu';\nimport { TableCellDisplayMode } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultScale = {\n  mode: ThresholdsMode.Absolute,\n  steps: [{\n    color: 'blue',\n    value: -Infinity\n  }, {\n    color: 'green',\n    value: 20\n  }]\n};\nexport const BarGaugeCell = props => {\n  const {\n    field,\n    innerWidth,\n    tableStyles,\n    cell,\n    cellProps,\n    row\n  } = props;\n  let config = getFieldConfigWithMinMax(field, false);\n\n  if (!config.thresholds) {\n    config = Object.assign({}, config, {\n      thresholds: defaultScale\n    });\n  }\n\n  const displayValue = field.display(cell.value);\n  let barGaugeMode = BarGaugeDisplayMode.Gradient;\n\n  if (field.config.custom && field.config.custom.displayMode === TableCellDisplayMode.LcdGauge) {\n    barGaugeMode = BarGaugeDisplayMode.Lcd;\n  } else if (field.config.custom && field.config.custom.displayMode === TableCellDisplayMode.BasicGauge) {\n    barGaugeMode = BarGaugeDisplayMode.Basic;\n  }\n\n  const getLinks = () => {\n    if (!isFunction(field.getLinks)) {\n      return [];\n    }\n\n    return field.getLinks({\n      valueRowIndex: row.index\n    });\n  };\n\n  const hasLinks = !!getLinks().length;\n\n  const renderComponent = menuProps => {\n    const {\n      openMenu,\n      targetClassName\n    } = menuProps;\n    return /*#__PURE__*/_jsx(BarGauge, {\n      width: innerWidth,\n      height: tableStyles.cellHeightInner,\n      field: config,\n      display: field.display,\n      text: {\n        valueSize: 14\n      },\n      value: displayValue,\n      orientation: VizOrientation.Horizontal,\n      theme: tableStyles.theme,\n      onClick: openMenu,\n      className: targetClassName,\n      itemSpacing: 1,\n      lcdCellWidth: 8,\n      displayMode: barGaugeMode\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", Object.assign({}, cellProps, {\n    className: tableStyles.cellContainer,\n    children: [hasLinks && /*#__PURE__*/_jsx(DataLinksContextMenu, {\n      links: getLinks,\n      config: config,\n      children: api => renderComponent(api)\n    }), !hasLinks && /*#__PURE__*/_jsx(BarGauge, {\n      width: innerWidth,\n      height: tableStyles.cellHeightInner,\n      field: config,\n      display: field.display,\n      text: {\n        valueSize: 14\n      },\n      value: displayValue,\n      orientation: VizOrientation.Horizontal,\n      theme: tableStyles.theme,\n      itemSpacing: 1,\n      lcdCellWidth: 8,\n      displayMode: barGaugeMode\n    })]\n  }));\n};","map":{"version":3,"names":["isFunction","React","ThresholdsMode","VizOrientation","getFieldConfigWithMinMax","BarGauge","BarGaugeDisplayMode","DataLinksContextMenu","TableCellDisplayMode","defaultScale","mode","Absolute","steps","color","value","Infinity","BarGaugeCell","props","field","innerWidth","tableStyles","cell","cellProps","row","config","thresholds","displayValue","display","barGaugeMode","Gradient","custom","displayMode","LcdGauge","Lcd","BasicGauge","Basic","getLinks","valueRowIndex","index","hasLinks","length","renderComponent","menuProps","openMenu","targetClassName","cellHeightInner","valueSize","Horizontal","theme","cellContainer","api"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Table/BarGaugeCell.tsx"],"sourcesContent":["import { isFunction } from 'lodash';\nimport React, { FC } from 'react';\n\nimport { ThresholdsConfig, ThresholdsMode, VizOrientation, getFieldConfigWithMinMax, LinkModel } from '@grafana/data';\n\nimport { BarGauge, BarGaugeDisplayMode } from '../BarGauge/BarGauge';\nimport { DataLinksContextMenu, DataLinksContextMenuApi } from '../DataLinks/DataLinksContextMenu';\n\nimport { TableCellProps, TableCellDisplayMode } from './types';\n\nconst defaultScale: ThresholdsConfig = {\n  mode: ThresholdsMode.Absolute,\n  steps: [\n    {\n      color: 'blue',\n      value: -Infinity,\n    },\n    {\n      color: 'green',\n      value: 20,\n    },\n  ],\n};\n\nexport const BarGaugeCell: FC<TableCellProps> = (props) => {\n  const { field, innerWidth, tableStyles, cell, cellProps, row } = props;\n\n  let config = getFieldConfigWithMinMax(field, false);\n  if (!config.thresholds) {\n    config = {\n      ...config,\n      thresholds: defaultScale,\n    };\n  }\n\n  const displayValue = field.display!(cell.value);\n  let barGaugeMode = BarGaugeDisplayMode.Gradient;\n\n  if (field.config.custom && field.config.custom.displayMode === TableCellDisplayMode.LcdGauge) {\n    barGaugeMode = BarGaugeDisplayMode.Lcd;\n  } else if (field.config.custom && field.config.custom.displayMode === TableCellDisplayMode.BasicGauge) {\n    barGaugeMode = BarGaugeDisplayMode.Basic;\n  }\n\n  const getLinks = () => {\n    if (!isFunction(field.getLinks)) {\n      return [] as LinkModel[];\n    }\n\n    return field.getLinks({ valueRowIndex: row.index });\n  };\n\n  const hasLinks = !!getLinks().length;\n\n  const renderComponent = (menuProps: DataLinksContextMenuApi) => {\n    const { openMenu, targetClassName } = menuProps;\n\n    return (\n      <BarGauge\n        width={innerWidth}\n        height={tableStyles.cellHeightInner}\n        field={config}\n        display={field.display}\n        text={{ valueSize: 14 }}\n        value={displayValue}\n        orientation={VizOrientation.Horizontal}\n        theme={tableStyles.theme}\n        onClick={openMenu}\n        className={targetClassName}\n        itemSpacing={1}\n        lcdCellWidth={8}\n        displayMode={barGaugeMode}\n      />\n    );\n  };\n\n  return (\n    <div {...cellProps} className={tableStyles.cellContainer}>\n      {hasLinks && (\n        <DataLinksContextMenu links={getLinks} config={config}>\n          {(api) => renderComponent(api)}\n        </DataLinksContextMenu>\n      )}\n      {!hasLinks && (\n        <BarGauge\n          width={innerWidth}\n          height={tableStyles.cellHeightInner}\n          field={config}\n          display={field.display}\n          text={{ valueSize: 14 }}\n          value={displayValue}\n          orientation={VizOrientation.Horizontal}\n          theme={tableStyles.theme}\n          itemSpacing={1}\n          lcdCellWidth={8}\n          displayMode={barGaugeMode}\n        />\n      )}\n    </div>\n  );\n};\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAEA,SAA2BC,cAA3B,EAA2CC,cAA3C,EAA2DC,wBAA3D,QAAsG,eAAtG;AAEA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,sBAA9C;AACA,SAASC,oBAAT,QAA8D,mCAA9D;AAEA,SAAyBC,oBAAzB,QAAqD,SAArD;;;AAEA,MAAMC,YAA8B,GAAG;EACrCC,IAAI,EAAER,cAAc,CAACS,QADgB;EAErCC,KAAK,EAAE,CACL;IACEC,KAAK,EAAE,MADT;IAEEC,KAAK,EAAE,CAACC;EAFV,CADK,EAKL;IACEF,KAAK,EAAE,OADT;IAEEC,KAAK,EAAE;EAFT,CALK;AAF8B,CAAvC;AAcA,OAAO,MAAME,YAAgC,GAAIC,KAAD,IAAW;EACzD,MAAM;IAAEC,KAAF;IAASC,UAAT;IAAqBC,WAArB;IAAkCC,IAAlC;IAAwCC,SAAxC;IAAmDC;EAAnD,IAA2DN,KAAjE;EAEA,IAAIO,MAAM,GAAGpB,wBAAwB,CAACc,KAAD,EAAQ,KAAR,CAArC;;EACA,IAAI,CAACM,MAAM,CAACC,UAAZ,EAAwB;IACtBD,MAAM,qBACDA,MADC;MAEJC,UAAU,EAAEhB;IAFR,EAAN;EAID;;EAED,MAAMiB,YAAY,GAAGR,KAAK,CAACS,OAAN,CAAeN,IAAI,CAACP,KAApB,CAArB;EACA,IAAIc,YAAY,GAAGtB,mBAAmB,CAACuB,QAAvC;;EAEA,IAAIX,KAAK,CAACM,MAAN,CAAaM,MAAb,IAAuBZ,KAAK,CAACM,MAAN,CAAaM,MAAb,CAAoBC,WAApB,KAAoCvB,oBAAoB,CAACwB,QAApF,EAA8F;IAC5FJ,YAAY,GAAGtB,mBAAmB,CAAC2B,GAAnC;EACD,CAFD,MAEO,IAAIf,KAAK,CAACM,MAAN,CAAaM,MAAb,IAAuBZ,KAAK,CAACM,MAAN,CAAaM,MAAb,CAAoBC,WAApB,KAAoCvB,oBAAoB,CAAC0B,UAApF,EAAgG;IACrGN,YAAY,GAAGtB,mBAAmB,CAAC6B,KAAnC;EACD;;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrB,IAAI,CAACpC,UAAU,CAACkB,KAAK,CAACkB,QAAP,CAAf,EAAiC;MAC/B,OAAO,EAAP;IACD;;IAED,OAAOlB,KAAK,CAACkB,QAAN,CAAe;MAAEC,aAAa,EAAEd,GAAG,CAACe;IAArB,CAAf,CAAP;EACD,CAND;;EAQA,MAAMC,QAAQ,GAAG,CAAC,CAACH,QAAQ,GAAGI,MAA9B;;EAEA,MAAMC,eAAe,GAAIC,SAAD,IAAwC;IAC9D,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAAgCF,SAAtC;IAEA,oBACE,KAAC,QAAD;MACE,KAAK,EAAEvB,UADT;MAEE,MAAM,EAAEC,WAAW,CAACyB,eAFtB;MAGE,KAAK,EAAErB,MAHT;MAIE,OAAO,EAAEN,KAAK,CAACS,OAJjB;MAKE,IAAI,EAAE;QAAEmB,SAAS,EAAE;MAAb,CALR;MAME,KAAK,EAAEpB,YANT;MAOE,WAAW,EAAEvB,cAAc,CAAC4C,UAP9B;MAQE,KAAK,EAAE3B,WAAW,CAAC4B,KARrB;MASE,OAAO,EAAEL,QATX;MAUE,SAAS,EAAEC,eAVb;MAWE,WAAW,EAAE,CAXf;MAYE,YAAY,EAAE,CAZhB;MAaE,WAAW,EAAEhB;IAbf,EADF;EAiBD,CApBD;;EAsBA,oBACE,+BAASN,SAAT;IAAoB,SAAS,EAAEF,WAAW,CAAC6B,aAA3C;IAAA,WACGV,QAAQ,iBACP,KAAC,oBAAD;MAAsB,KAAK,EAAEH,QAA7B;MAAuC,MAAM,EAAEZ,MAA/C;MAAA,UACI0B,GAAD,IAAST,eAAe,CAACS,GAAD;IAD3B,EAFJ,EAMG,CAACX,QAAD,iBACC,KAAC,QAAD;MACE,KAAK,EAAEpB,UADT;MAEE,MAAM,EAAEC,WAAW,CAACyB,eAFtB;MAGE,KAAK,EAAErB,MAHT;MAIE,OAAO,EAAEN,KAAK,CAACS,OAJjB;MAKE,IAAI,EAAE;QAAEmB,SAAS,EAAE;MAAb,CALR;MAME,KAAK,EAAEpB,YANT;MAOE,WAAW,EAAEvB,cAAc,CAAC4C,UAP9B;MAQE,KAAK,EAAE3B,WAAW,CAAC4B,KARrB;MASE,WAAW,EAAE,CATf;MAUE,YAAY,EAAE,CAVhB;MAWE,WAAW,EAAEpB;IAXf,EAPJ;EAAA,GADF;AAwBD,CA5EM"},"metadata":{},"sourceType":"module"}