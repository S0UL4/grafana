{"ast":null,"code":"import { FieldType } from '../../types/dataFrame';\nimport { FieldMatcherID } from './ids'; // General Field matcher\n\nconst fieldTypeMatcher = {\n  id: FieldMatcherID.byType,\n  name: 'Field Type',\n  description: 'match based on the field type',\n  defaultOptions: FieldType.number,\n  get: type => {\n    return (field, frame, allFrames) => {\n      return type === field.type;\n    };\n  },\n  getOptionsDisplayText: type => {\n    return `Field type: ${type}`;\n  }\n}; // Numeric Field matcher\n// This gets its own entry so it shows up in the dropdown\n\nconst numericMatcher = {\n  id: FieldMatcherID.numeric,\n  name: 'Numeric Fields',\n  description: 'Fields with type number',\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.number);\n  },\n  getOptionsDisplayText: () => {\n    return 'Numeric Fields';\n  }\n}; // Time Field matcher\n\nconst timeMatcher = {\n  id: FieldMatcherID.time,\n  name: 'Time Fields',\n  description: 'Fields with type time',\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.time);\n  },\n  getOptionsDisplayText: () => {\n    return 'Time Fields';\n  }\n};\n/**\n * Registry Initialization\n */\n\nexport function getFieldTypeMatchers() {\n  return [fieldTypeMatcher, numericMatcher, timeMatcher];\n}","map":{"version":3,"names":["FieldType","FieldMatcherID","fieldTypeMatcher","id","byType","name","description","defaultOptions","number","get","type","field","frame","allFrames","getOptionsDisplayText","numericMatcher","numeric","timeMatcher","time","getFieldTypeMatchers"],"sources":["/home/soula/grafana/packages/grafana-data/src/transformations/matchers/fieldTypeMatcher.ts"],"sourcesContent":["import { Field, FieldType, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID } from './ids';\n\n// General Field matcher\nconst fieldTypeMatcher: FieldMatcherInfo<FieldType> = {\n  id: FieldMatcherID.byType,\n  name: 'Field Type',\n  description: 'match based on the field type',\n  defaultOptions: FieldType.number,\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return type === field.type;\n    };\n  },\n\n  getOptionsDisplayText: (type: FieldType) => {\n    return `Field type: ${type}`;\n  },\n};\n\n// Numeric Field matcher\n// This gets its own entry so it shows up in the dropdown\nconst numericMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.numeric,\n  name: 'Numeric Fields',\n  description: 'Fields with type number',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.number);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Numeric Fields';\n  },\n};\n\n// Time Field matcher\nconst timeMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.time,\n  name: 'Time Fields',\n  description: 'Fields with type time',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.time);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Time Fields';\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getFieldTypeMatchers(): FieldMatcherInfo[] {\n  return [fieldTypeMatcher, numericMatcher, timeMatcher];\n}\n"],"mappings":"AAAA,SAAgBA,SAAhB,QAA4C,uBAA5C;AAGA,SAASC,cAAT,QAA+B,OAA/B,C,CAEA;;AACA,MAAMC,gBAA6C,GAAG;EACpDC,EAAE,EAAEF,cAAc,CAACG,MADiC;EAEpDC,IAAI,EAAE,YAF8C;EAGpDC,WAAW,EAAE,+BAHuC;EAIpDC,cAAc,EAAEP,SAAS,CAACQ,MAJ0B;EAMpDC,GAAG,EAAGC,IAAD,IAAqB;IACxB,OAAO,CAACC,KAAD,EAAeC,KAAf,EAAiCC,SAAjC,KAA4D;MACjE,OAAOH,IAAI,KAAKC,KAAK,CAACD,IAAtB;IACD,CAFD;EAGD,CAVmD;EAYpDI,qBAAqB,EAAGJ,IAAD,IAAqB;IAC1C,OAAQ,eAAcA,IAAK,EAA3B;EACD;AAdmD,CAAtD,C,CAiBA;AACA;;AACA,MAAMK,cAAgC,GAAG;EACvCZ,EAAE,EAAEF,cAAc,CAACe,OADoB;EAEvCX,IAAI,EAAE,gBAFiC;EAGvCC,WAAW,EAAE,yBAH0B;EAKvCG,GAAG,EAAE,MAAM;IACT,OAAOP,gBAAgB,CAACO,GAAjB,CAAqBT,SAAS,CAACQ,MAA/B,CAAP;EACD,CAPsC;EASvCM,qBAAqB,EAAE,MAAM;IAC3B,OAAO,gBAAP;EACD;AAXsC,CAAzC,C,CAcA;;AACA,MAAMG,WAA6B,GAAG;EACpCd,EAAE,EAAEF,cAAc,CAACiB,IADiB;EAEpCb,IAAI,EAAE,aAF8B;EAGpCC,WAAW,EAAE,uBAHuB;EAKpCG,GAAG,EAAE,MAAM;IACT,OAAOP,gBAAgB,CAACO,GAAjB,CAAqBT,SAAS,CAACkB,IAA/B,CAAP;EACD,CAPmC;EASpCJ,qBAAqB,EAAE,MAAM;IAC3B,OAAO,aAAP;EACD;AAXmC,CAAtC;AAcA;AACA;AACA;;AACA,OAAO,SAASK,oBAAT,GAAoD;EACzD,OAAO,CAACjB,gBAAD,EAAmBa,cAAnB,EAAmCE,WAAnC,CAAP;AACD"},"metadata":{},"sourceType":"module"}