{"ast":null,"code":"import React from 'react';\nimport { Segment } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst options = ['=', '!=', '<', '>', '=~', '!~'].map(value => ({\n  label: value,\n  value\n}));\nexport const OperatorSegment = ({\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsx(Segment, {\n    className: \"query-segment-operator\",\n    value: value,\n    options: options,\n    onChange: onChange\n  });\n};","map":{"version":3,"names":["React","Segment","options","map","value","label","OperatorSegment","onChange"],"sources":["/home/soula/grafana/public/app/features/variables/adhoc/picker/OperatorSegment.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Segment } from '@grafana/ui';\n\ninterface Props {\n  value: string;\n  onChange: (item: SelectableValue<string>) => void;\n}\n\nconst options = ['=', '!=', '<', '>', '=~', '!~'].map<SelectableValue<string>>((value) => ({\n  label: value,\n  value,\n}));\n\nexport const OperatorSegment: FC<Props> = ({ value, onChange }) => {\n  return <Segment className=\"query-segment-operator\" value={value} options={options} onChange={onChange} />;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;;AAOA,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkCC,GAAlC,CAAgEC,KAAD,KAAY;EACzFC,KAAK,EAAED,KADkF;EAEzFA;AAFyF,CAAZ,CAA/D,CAAhB;AAKA,OAAO,MAAME,eAA0B,GAAG,CAAC;EAAEF,KAAF;EAASG;AAAT,CAAD,KAAyB;EACjE,oBAAO,KAAC,OAAD;IAAS,SAAS,EAAC,wBAAnB;IAA4C,KAAK,EAAEH,KAAnD;IAA0D,OAAO,EAAEF,OAAnE;IAA4E,QAAQ,EAAEK;EAAtF,EAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}