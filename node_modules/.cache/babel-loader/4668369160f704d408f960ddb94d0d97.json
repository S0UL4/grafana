{"ast":null,"code":"var _Alert, _LoadingPlaceholder;\n\nimport { css } from '@emotion/css';\nimport { sortBy } from 'lodash';\nimport React, { useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Alert, CustomScrollbar, LoadingPlaceholder, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { useUnifiedAlertingSelector } from 'app/features/alerting/unified/hooks/useUnifiedAlertingSelector';\nimport { fetchAllPromRulesAction } from 'app/features/alerting/unified/state/actions';\nimport { labelsMatchMatchers, parseMatchers } from 'app/features/alerting/unified/utils/alertmanager';\nimport { Annotation, RULE_LIST_POLL_INTERVAL_MS } from 'app/features/alerting/unified/utils/constants';\nimport { getAllRulesSourceNames, GRAFANA_DATASOURCE_NAME, GRAFANA_RULES_SOURCE_NAME } from 'app/features/alerting/unified/utils/datasource';\nimport { flattenRules, getFirstActiveAt } from 'app/features/alerting/unified/utils/rules';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { AccessControlAction } from 'app/types';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\nimport { GroupMode, SortOrder } from './types';\nimport GroupedModeView from './unified-alerting/GroupedView';\nimport UngroupedModeView from './unified-alerting/UngroupedView';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function UnifiedAlertList(props) {\n  const dispatch = useDispatch();\n  const rulesDataSourceNames = useMemo(getAllRulesSourceNames, []); // backwards compat for \"Inactive\" state filter\n\n  useEffect(() => {\n    if (props.options.stateFilter.inactive === true) {\n      props.options.stateFilter.normal = true; // enable the normal filter\n    }\n\n    props.options.stateFilter.inactive = undefined; // now disable inactive\n  }, [props.options.stateFilter]);\n  useEffect(() => {\n    dispatch(fetchAllPromRulesAction());\n    const interval = setInterval(() => dispatch(fetchAllPromRulesAction()), RULE_LIST_POLL_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [dispatch]);\n  const promRulesRequests = useUnifiedAlertingSelector(state => state.promRules);\n  const dispatched = rulesDataSourceNames.some(name => {\n    var _promRulesRequests$na;\n\n    return (_promRulesRequests$na = promRulesRequests[name]) === null || _promRulesRequests$na === void 0 ? void 0 : _promRulesRequests$na.dispatched;\n  });\n  const loading = rulesDataSourceNames.some(name => {\n    var _promRulesRequests$na2;\n\n    return (_promRulesRequests$na2 = promRulesRequests[name]) === null || _promRulesRequests$na2 === void 0 ? void 0 : _promRulesRequests$na2.loading;\n  });\n  const haveResults = rulesDataSourceNames.some(name => {\n    var _promRulesRequests$na3, _promRulesRequests$na4, _promRulesRequests$na5;\n\n    return ((_promRulesRequests$na3 = promRulesRequests[name]) === null || _promRulesRequests$na3 === void 0 ? void 0 : (_promRulesRequests$na4 = _promRulesRequests$na3.result) === null || _promRulesRequests$na4 === void 0 ? void 0 : _promRulesRequests$na4.length) && !((_promRulesRequests$na5 = promRulesRequests[name]) !== null && _promRulesRequests$na5 !== void 0 && _promRulesRequests$na5.error);\n  });\n  const styles = useStyles2(getStyles);\n  const rules = useMemo(() => filterRules(props, sortRules(props.options.sortOrder, Object.values(promRulesRequests).flatMap(({\n    result = []\n  }) => flattenRules(result)))), [props, promRulesRequests]);\n  const noAlertsMessage = rules.length === 0 ? 'No alerts matching filters' : undefined;\n\n  if (!contextSrv.hasPermission(AccessControlAction.AlertingRuleRead) && !contextSrv.hasPermission(AccessControlAction.AlertingRuleExternalRead)) {\n    return _Alert || (_Alert = /*#__PURE__*/_jsx(Alert, {\n      title: \"Permission required\",\n      children: \"Sorry, you do not have the required permissions to read alert rules\"\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(CustomScrollbar, {\n    autoHeightMin: \"100%\",\n    autoHeightMax: \"100%\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      children: [dispatched && loading && !haveResults && (_LoadingPlaceholder || (_LoadingPlaceholder = /*#__PURE__*/_jsx(LoadingPlaceholder, {\n        text: \"Loading...\"\n      }))), noAlertsMessage && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.noAlertsMessage,\n        children: noAlertsMessage\n      }), /*#__PURE__*/_jsxs(\"section\", {\n        children: [props.options.groupMode === GroupMode.Custom && haveResults && /*#__PURE__*/_jsx(GroupedModeView, {\n          rules: rules,\n          options: props.options\n        }), props.options.groupMode === GroupMode.Default && haveResults && /*#__PURE__*/_jsx(UngroupedModeView, {\n          rules: rules,\n          options: props.options\n        })]\n      })]\n    })\n  });\n}\n\nfunction sortRules(sortOrder, rules) {\n  if (sortOrder === SortOrder.Importance) {\n    // @ts-ignore\n    return sortBy(rules, rule => alertDef.alertStateSortScore[rule.state]);\n  } else if (sortOrder === SortOrder.TimeAsc) {\n    return sortBy(rules, rule => getFirstActiveAt(rule.rule) || new Date());\n  } else if (sortOrder === SortOrder.TimeDesc) {\n    return sortBy(rules, rule => getFirstActiveAt(rule.rule) || new Date()).reverse();\n  }\n\n  const result = sortBy(rules, rule => rule.rule.name.toLowerCase());\n\n  if (sortOrder === SortOrder.AlphaDesc) {\n    result.reverse();\n  }\n\n  return result;\n}\n\nfunction filterRules(props, rules) {\n  const {\n    options,\n    replaceVariables\n  } = props;\n  let filteredRules = [...rules];\n\n  if (options.dashboardAlerts) {\n    var _getDashboardSrv$getC;\n\n    const dashboardUid = (_getDashboardSrv$getC = getDashboardSrv().getCurrent()) === null || _getDashboardSrv$getC === void 0 ? void 0 : _getDashboardSrv$getC.uid;\n    filteredRules = filteredRules.filter(({\n      rule: {\n        annotations = {}\n      }\n    }) => Object.entries(annotations).some(([key, value]) => key === Annotation.dashboardUID && value === dashboardUid));\n  }\n\n  if (options.alertName) {\n    const replacedName = replaceVariables(options.alertName);\n    filteredRules = filteredRules.filter(({\n      rule: {\n        name\n      }\n    }) => name.toLocaleLowerCase().includes(replacedName.toLocaleLowerCase()));\n  }\n\n  filteredRules = filteredRules.filter(rule => {\n    return options.stateFilter.firing && rule.rule.state === PromAlertingRuleState.Firing || options.stateFilter.pending && rule.rule.state === PromAlertingRuleState.Pending || options.stateFilter.normal && rule.rule.state === PromAlertingRuleState.Inactive;\n  });\n\n  if (options.alertInstanceLabelFilter) {\n    const replacedLabelFilter = replaceVariables(options.alertInstanceLabelFilter);\n    const matchers = parseMatchers(replacedLabelFilter); // Reduce rules and instances to only those that match\n\n    filteredRules = filteredRules.reduce((rules, rule) => {\n      var _rule$rule$alerts;\n\n      const filteredAlerts = ((_rule$rule$alerts = rule.rule.alerts) !== null && _rule$rule$alerts !== void 0 ? _rule$rule$alerts : []).filter(({\n        labels\n      }) => labelsMatchMatchers(labels, matchers));\n\n      if (filteredAlerts.length) {\n        rules.push(Object.assign({}, rule, {\n          rule: Object.assign({}, rule.rule, {\n            alerts: filteredAlerts\n          })\n        }));\n      }\n\n      return rules;\n    }, []);\n  }\n\n  if (options.folder) {\n    filteredRules = filteredRules.filter(rule => {\n      return rule.namespaceName === options.folder.title;\n    });\n  }\n\n  if (options.datasource) {\n    const isGrafanaDS = options.datasource === GRAFANA_DATASOURCE_NAME;\n    filteredRules = filteredRules.filter(isGrafanaDS ? ({\n      dataSourceName\n    }) => dataSourceName === GRAFANA_RULES_SOURCE_NAME : ({\n      dataSourceName\n    }) => dataSourceName === options.datasource);\n  }\n\n  return filteredRules;\n}\n\nexport const getStyles = theme => ({\n  cardContainer: css`\n    padding: ${theme.v1.spacing.xs} 0 ${theme.v1.spacing.xxs} 0;\n    line-height: ${theme.v1.typography.lineHeight.md};\n    margin-bottom: 0px;\n  `,\n  container: css`\n    overflow-y: auto;\n    height: 100%;\n  `,\n  alertRuleList: css`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    list-style-type: none;\n  `,\n  alertRuleItem: css`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: ${theme.v1.colors.bg2};\n    padding: ${theme.v1.spacing.xs} ${theme.v1.spacing.sm};\n    border-radius: ${theme.v1.border.radius.md};\n    margin-bottom: ${theme.v1.spacing.xs};\n\n    & > * {\n      margin-right: ${theme.v1.spacing.sm};\n    }\n  `,\n  alertName: css`\n    font-size: ${theme.v1.typography.size.md};\n    font-weight: ${theme.v1.typography.weight.bold};\n  `,\n  alertLabels: css`\n    > * {\n      margin-right: ${theme.v1.spacing.xs};\n    }\n  `,\n  alertDuration: css`\n    font-size: ${theme.v1.typography.size.sm};\n  `,\n  alertRuleItemText: css`\n    font-weight: ${theme.v1.typography.weight.bold};\n    font-size: ${theme.v1.typography.size.sm};\n    margin: 0;\n  `,\n  alertRuleItemTime: css`\n    color: ${theme.v1.colors.textWeak};\n    font-weight: normal;\n    white-space: nowrap;\n  `,\n  alertRuleItemInfo: css`\n    font-weight: normal;\n    flex-grow: 2;\n    display: flex;\n    align-items: flex-end;\n  `,\n  noAlertsMessage: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  `,\n  alertIcon: css`\n    margin-right: ${theme.v1.spacing.xs};\n  `,\n  instanceDetails: css`\n    min-width: 1px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n  customGroupDetails: css`\n    margin-bottom: ${theme.v1.spacing.xs};\n  `\n});","map":{"version":3,"names":["css","sortBy","React","useEffect","useMemo","useDispatch","Alert","CustomScrollbar","LoadingPlaceholder","useStyles2","contextSrv","alertDef","useUnifiedAlertingSelector","fetchAllPromRulesAction","labelsMatchMatchers","parseMatchers","Annotation","RULE_LIST_POLL_INTERVAL_MS","getAllRulesSourceNames","GRAFANA_DATASOURCE_NAME","GRAFANA_RULES_SOURCE_NAME","flattenRules","getFirstActiveAt","getDashboardSrv","AccessControlAction","PromAlertingRuleState","GroupMode","SortOrder","GroupedModeView","UngroupedModeView","UnifiedAlertList","props","dispatch","rulesDataSourceNames","options","stateFilter","inactive","normal","undefined","interval","setInterval","clearInterval","promRulesRequests","state","promRules","dispatched","some","name","loading","haveResults","result","length","error","styles","getStyles","rules","filterRules","sortRules","sortOrder","Object","values","flatMap","noAlertsMessage","hasPermission","AlertingRuleRead","AlertingRuleExternalRead","container","groupMode","Custom","Default","Importance","rule","alertStateSortScore","TimeAsc","Date","TimeDesc","reverse","toLowerCase","AlphaDesc","replaceVariables","filteredRules","dashboardAlerts","dashboardUid","getCurrent","uid","filter","annotations","entries","key","value","dashboardUID","alertName","replacedName","toLocaleLowerCase","includes","firing","Firing","pending","Pending","Inactive","alertInstanceLabelFilter","replacedLabelFilter","matchers","reduce","filteredAlerts","alerts","labels","push","folder","namespaceName","title","datasource","isGrafanaDS","dataSourceName","theme","cardContainer","v1","spacing","xs","xxs","typography","lineHeight","md","alertRuleList","alertRuleItem","colors","bg2","sm","border","radius","size","weight","bold","alertLabels","alertDuration","alertRuleItemText","alertRuleItemTime","textWeak","alertRuleItemInfo","alertIcon","instanceDetails","customGroupDetails"],"sources":["/home/soula/grafana/public/app/plugins/panel/alertlist/UnifiedAlertList.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { sortBy } from 'lodash';\nimport React, { useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { GrafanaTheme2, PanelProps } from '@grafana/data';\nimport { Alert, CustomScrollbar, LoadingPlaceholder, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { useUnifiedAlertingSelector } from 'app/features/alerting/unified/hooks/useUnifiedAlertingSelector';\nimport { fetchAllPromRulesAction } from 'app/features/alerting/unified/state/actions';\nimport { labelsMatchMatchers, parseMatchers } from 'app/features/alerting/unified/utils/alertmanager';\nimport { Annotation, RULE_LIST_POLL_INTERVAL_MS } from 'app/features/alerting/unified/utils/constants';\nimport {\n  getAllRulesSourceNames,\n  GRAFANA_DATASOURCE_NAME,\n  GRAFANA_RULES_SOURCE_NAME,\n} from 'app/features/alerting/unified/utils/datasource';\nimport { flattenRules, getFirstActiveAt } from 'app/features/alerting/unified/utils/rules';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { AccessControlAction } from 'app/types';\nimport { PromRuleWithLocation } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { GroupMode, SortOrder, UnifiedAlertListOptions } from './types';\nimport GroupedModeView from './unified-alerting/GroupedView';\nimport UngroupedModeView from './unified-alerting/UngroupedView';\n\nexport function UnifiedAlertList(props: PanelProps<UnifiedAlertListOptions>) {\n  const dispatch = useDispatch();\n  const rulesDataSourceNames = useMemo(getAllRulesSourceNames, []);\n\n  // backwards compat for \"Inactive\" state filter\n  useEffect(() => {\n    if (props.options.stateFilter.inactive === true) {\n      props.options.stateFilter.normal = true; // enable the normal filter\n    }\n    props.options.stateFilter.inactive = undefined; // now disable inactive\n  }, [props.options.stateFilter]);\n\n  useEffect(() => {\n    dispatch(fetchAllPromRulesAction());\n    const interval = setInterval(() => dispatch(fetchAllPromRulesAction()), RULE_LIST_POLL_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [dispatch]);\n\n  const promRulesRequests = useUnifiedAlertingSelector((state) => state.promRules);\n\n  const dispatched = rulesDataSourceNames.some((name) => promRulesRequests[name]?.dispatched);\n  const loading = rulesDataSourceNames.some((name) => promRulesRequests[name]?.loading);\n  const haveResults = rulesDataSourceNames.some(\n    (name) => promRulesRequests[name]?.result?.length && !promRulesRequests[name]?.error\n  );\n\n  const styles = useStyles2(getStyles);\n\n  const rules = useMemo(\n    () =>\n      filterRules(\n        props,\n        sortRules(\n          props.options.sortOrder,\n          Object.values(promRulesRequests).flatMap(({ result = [] }) => flattenRules(result))\n        )\n      ),\n    [props, promRulesRequests]\n  );\n\n  const noAlertsMessage = rules.length === 0 ? 'No alerts matching filters' : undefined;\n\n  if (\n    !contextSrv.hasPermission(AccessControlAction.AlertingRuleRead) &&\n    !contextSrv.hasPermission(AccessControlAction.AlertingRuleExternalRead)\n  ) {\n    return (\n      <Alert title=\"Permission required\">Sorry, you do not have the required permissions to read alert rules</Alert>\n    );\n  }\n\n  return (\n    <CustomScrollbar autoHeightMin=\"100%\" autoHeightMax=\"100%\">\n      <div className={styles.container}>\n        {dispatched && loading && !haveResults && <LoadingPlaceholder text=\"Loading...\" />}\n        {noAlertsMessage && <div className={styles.noAlertsMessage}>{noAlertsMessage}</div>}\n        <section>\n          {props.options.groupMode === GroupMode.Custom && haveResults && (\n            <GroupedModeView rules={rules} options={props.options} />\n          )}\n          {props.options.groupMode === GroupMode.Default && haveResults && (\n            <UngroupedModeView rules={rules} options={props.options} />\n          )}\n        </section>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nfunction sortRules(sortOrder: SortOrder, rules: PromRuleWithLocation[]) {\n  if (sortOrder === SortOrder.Importance) {\n    // @ts-ignore\n    return sortBy(rules, (rule) => alertDef.alertStateSortScore[rule.state]);\n  } else if (sortOrder === SortOrder.TimeAsc) {\n    return sortBy(rules, (rule) => getFirstActiveAt(rule.rule) || new Date());\n  } else if (sortOrder === SortOrder.TimeDesc) {\n    return sortBy(rules, (rule) => getFirstActiveAt(rule.rule) || new Date()).reverse();\n  }\n  const result = sortBy(rules, (rule) => rule.rule.name.toLowerCase());\n  if (sortOrder === SortOrder.AlphaDesc) {\n    result.reverse();\n  }\n\n  return result;\n}\n\nfunction filterRules(props: PanelProps<UnifiedAlertListOptions>, rules: PromRuleWithLocation[]) {\n  const { options, replaceVariables } = props;\n\n  let filteredRules = [...rules];\n  if (options.dashboardAlerts) {\n    const dashboardUid = getDashboardSrv().getCurrent()?.uid;\n    filteredRules = filteredRules.filter(({ rule: { annotations = {} } }) =>\n      Object.entries(annotations).some(([key, value]) => key === Annotation.dashboardUID && value === dashboardUid)\n    );\n  }\n  if (options.alertName) {\n    const replacedName = replaceVariables(options.alertName);\n    filteredRules = filteredRules.filter(({ rule: { name } }) =>\n      name.toLocaleLowerCase().includes(replacedName.toLocaleLowerCase())\n    );\n  }\n\n  filteredRules = filteredRules.filter((rule) => {\n    return (\n      (options.stateFilter.firing && rule.rule.state === PromAlertingRuleState.Firing) ||\n      (options.stateFilter.pending && rule.rule.state === PromAlertingRuleState.Pending) ||\n      (options.stateFilter.normal && rule.rule.state === PromAlertingRuleState.Inactive)\n    );\n  });\n\n  if (options.alertInstanceLabelFilter) {\n    const replacedLabelFilter = replaceVariables(options.alertInstanceLabelFilter);\n    const matchers = parseMatchers(replacedLabelFilter);\n    // Reduce rules and instances to only those that match\n    filteredRules = filteredRules.reduce((rules, rule) => {\n      const filteredAlerts = (rule.rule.alerts ?? []).filter(({ labels }) => labelsMatchMatchers(labels, matchers));\n      if (filteredAlerts.length) {\n        rules.push({ ...rule, rule: { ...rule.rule, alerts: filteredAlerts } });\n      }\n      return rules;\n    }, [] as PromRuleWithLocation[]);\n  }\n  if (options.folder) {\n    filteredRules = filteredRules.filter((rule) => {\n      return rule.namespaceName === options.folder.title;\n    });\n  }\n  if (options.datasource) {\n    const isGrafanaDS = options.datasource === GRAFANA_DATASOURCE_NAME;\n\n    filteredRules = filteredRules.filter(\n      isGrafanaDS\n        ? ({ dataSourceName }) => dataSourceName === GRAFANA_RULES_SOURCE_NAME\n        : ({ dataSourceName }) => dataSourceName === options.datasource\n    );\n  }\n\n  return filteredRules;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  cardContainer: css`\n    padding: ${theme.v1.spacing.xs} 0 ${theme.v1.spacing.xxs} 0;\n    line-height: ${theme.v1.typography.lineHeight.md};\n    margin-bottom: 0px;\n  `,\n  container: css`\n    overflow-y: auto;\n    height: 100%;\n  `,\n  alertRuleList: css`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    list-style-type: none;\n  `,\n  alertRuleItem: css`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: ${theme.v1.colors.bg2};\n    padding: ${theme.v1.spacing.xs} ${theme.v1.spacing.sm};\n    border-radius: ${theme.v1.border.radius.md};\n    margin-bottom: ${theme.v1.spacing.xs};\n\n    & > * {\n      margin-right: ${theme.v1.spacing.sm};\n    }\n  `,\n  alertName: css`\n    font-size: ${theme.v1.typography.size.md};\n    font-weight: ${theme.v1.typography.weight.bold};\n  `,\n  alertLabels: css`\n    > * {\n      margin-right: ${theme.v1.spacing.xs};\n    }\n  `,\n  alertDuration: css`\n    font-size: ${theme.v1.typography.size.sm};\n  `,\n  alertRuleItemText: css`\n    font-weight: ${theme.v1.typography.weight.bold};\n    font-size: ${theme.v1.typography.size.sm};\n    margin: 0;\n  `,\n  alertRuleItemTime: css`\n    color: ${theme.v1.colors.textWeak};\n    font-weight: normal;\n    white-space: nowrap;\n  `,\n  alertRuleItemInfo: css`\n    font-weight: normal;\n    flex-grow: 2;\n    display: flex;\n    align-items: flex-end;\n  `,\n  noAlertsMessage: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  `,\n  alertIcon: css`\n    margin-right: ${theme.v1.spacing.xs};\n  `,\n  instanceDetails: css`\n    min-width: 1px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n  customGroupDetails: css`\n    margin-bottom: ${theme.v1.spacing.xs};\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}