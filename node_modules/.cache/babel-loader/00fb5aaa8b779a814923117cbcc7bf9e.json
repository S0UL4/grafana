{"ast":null,"code":"import { map, sortBy, flattenDeep, chunk, zip } from 'lodash';\nimport tinycolor from 'tinycolor2';\nconst PALETTE_ROWS = 4;\n/**\n * @alpha\n */\n\nexport const DEFAULT_ANNOTATION_COLOR = 'rgba(0, 211, 255, 1)';\n/**\n * @alpha\n */\n\nexport const OK_COLOR = 'rgba(11, 237, 50, 1)';\n/**\n * @alpha\n */\n\nexport const ALERTING_COLOR = 'rgba(237, 46, 24, 1)';\n/**\n * @alpha\n */\n\nexport const NO_DATA_COLOR = 'rgba(150, 150, 150, 1)';\n/**\n * @alpha\n */\n\nexport const PENDING_COLOR = 'rgba(247, 149, 32, 1)';\n/**\n * @alpha\n */\n\nexport const REGION_FILL_ALPHA = 0.09;\nexport const colors = ['#7EB26D', // 0: pale green\n'#EAB839', // 1: mustard\n'#6ED0E0', // 2: light blue\n'#EF843C', // 3: orange\n'#E24D42', // 4: red\n'#1F78C1', // 5: ocean\n'#BA43A9', // 6: purple\n'#705DA0', // 7: violet\n'#508642', // 8: dark green\n'#CCA300', // 9: dark sand\n'#447EBC', '#C15C17', '#890F02', '#0A437C', '#6D1F62', '#584477', '#B7DBAB', '#F4D598', '#70DBED', '#F9BA8F', '#F29191', '#82B5D8', '#E5A8E2', '#AEA2E0', '#629E51', '#E5AC0E', '#64B0C8', '#E0752D', '#BF1B00', '#0A50A1', '#962D82', '#614D93', '#9AC48A', '#F2C96D', '#65C5DB', '#F9934E', '#EA6460', '#5195CE', '#D683CE', '#806EB7', '#3F6833', '#967302', '#2F575E', '#99440A', '#58140C', '#052B51', '#511749', '#3F2B5B', '#E0F9D7', '#FCEACA', '#CFFAFF', '#F9E2D2', '#FCE2DE', '#BADFF4', '#F9D9F9', '#DEDAF7'];\n\nfunction sortColorsByHue(hexColors) {\n  const hslColors = map(hexColors, hexToHsl);\n  const sortedHSLColors = sortBy(hslColors, ['h']);\n  const chunkedHSLColors = chunk(sortedHSLColors, PALETTE_ROWS);\n  const sortedChunkedHSLColors = map(chunkedHSLColors, chunk => {\n    return sortBy(chunk, 'l');\n  });\n  const flattenedZippedSortedChunkedHSLColors = flattenDeep(zip(...sortedChunkedHSLColors));\n  return map(flattenedZippedSortedChunkedHSLColors, hslToHex);\n}\n\nfunction hexToHsl(color) {\n  return tinycolor(color).toHsl();\n}\n\nfunction hslToHex(color) {\n  return tinycolor(color).toHexString();\n}\n\nexport function getTextColorForBackground(color) {\n  const b = tinycolor(color).getBrightness();\n  return b > 180 ? 'rgb(32, 34, 38)' : 'rgb(247, 248, 250)';\n}\nexport let sortedColors = sortColorsByHue(colors);","map":{"version":3,"names":["map","sortBy","flattenDeep","chunk","zip","tinycolor","PALETTE_ROWS","DEFAULT_ANNOTATION_COLOR","OK_COLOR","ALERTING_COLOR","NO_DATA_COLOR","PENDING_COLOR","REGION_FILL_ALPHA","colors","sortColorsByHue","hexColors","hslColors","hexToHsl","sortedHSLColors","chunkedHSLColors","sortedChunkedHSLColors","flattenedZippedSortedChunkedHSLColors","hslToHex","color","toHsl","toHexString","getTextColorForBackground","b","getBrightness","sortedColors"],"sources":["/home/soula/grafana/packages/grafana-ui/src/utils/colors.ts"],"sourcesContent":["import { map, sortBy, flattenDeep, chunk, zip } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nconst PALETTE_ROWS = 4;\n\n/**\n * @alpha\n */\nexport const DEFAULT_ANNOTATION_COLOR = 'rgba(0, 211, 255, 1)';\n\n/**\n * @alpha\n */\nexport const OK_COLOR = 'rgba(11, 237, 50, 1)';\n\n/**\n * @alpha\n */\nexport const ALERTING_COLOR = 'rgba(237, 46, 24, 1)';\n\n/**\n * @alpha\n */\nexport const NO_DATA_COLOR = 'rgba(150, 150, 150, 1)';\n\n/**\n * @alpha\n */\nexport const PENDING_COLOR = 'rgba(247, 149, 32, 1)';\n\n/**\n * @alpha\n */\nexport const REGION_FILL_ALPHA = 0.09;\nexport const colors = [\n  '#7EB26D', // 0: pale green\n  '#EAB839', // 1: mustard\n  '#6ED0E0', // 2: light blue\n  '#EF843C', // 3: orange\n  '#E24D42', // 4: red\n  '#1F78C1', // 5: ocean\n  '#BA43A9', // 6: purple\n  '#705DA0', // 7: violet\n  '#508642', // 8: dark green\n  '#CCA300', // 9: dark sand\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#B7DBAB',\n  '#F4D598',\n  '#70DBED',\n  '#F9BA8F',\n  '#F29191',\n  '#82B5D8',\n  '#E5A8E2',\n  '#AEA2E0',\n  '#629E51',\n  '#E5AC0E',\n  '#64B0C8',\n  '#E0752D',\n  '#BF1B00',\n  '#0A50A1',\n  '#962D82',\n  '#614D93',\n  '#9AC48A',\n  '#F2C96D',\n  '#65C5DB',\n  '#F9934E',\n  '#EA6460',\n  '#5195CE',\n  '#D683CE',\n  '#806EB7',\n  '#3F6833',\n  '#967302',\n  '#2F575E',\n  '#99440A',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n  '#E0F9D7',\n  '#FCEACA',\n  '#CFFAFF',\n  '#F9E2D2',\n  '#FCE2DE',\n  '#BADFF4',\n  '#F9D9F9',\n  '#DEDAF7',\n];\n\nfunction sortColorsByHue(hexColors: string[]) {\n  const hslColors = map(hexColors, hexToHsl);\n\n  const sortedHSLColors = sortBy(hslColors, ['h']);\n  const chunkedHSLColors = chunk(sortedHSLColors, PALETTE_ROWS);\n  const sortedChunkedHSLColors = map(chunkedHSLColors, (chunk) => {\n    return sortBy(chunk, 'l');\n  });\n  const flattenedZippedSortedChunkedHSLColors = flattenDeep(zip(...sortedChunkedHSLColors));\n\n  return map(flattenedZippedSortedChunkedHSLColors, hslToHex);\n}\n\nfunction hexToHsl(color: string) {\n  return tinycolor(color).toHsl();\n}\n\nfunction hslToHex(color: any) {\n  return tinycolor(color).toHexString();\n}\n\nexport function getTextColorForBackground(color: string) {\n  const b = tinycolor(color).getBrightness();\n  return b > 180 ? 'rgb(32, 34, 38)' : 'rgb(247, 248, 250)';\n}\n\nexport let sortedColors = sortColorsByHue(colors);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}