{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport coreModule from 'app/angular/core_module';\nimport { getColorModes } from './time_region_manager';\nexport class TimeRegionFormCtrl {\n  /** @ngInject */\n  constructor($scope) {\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"disabled\", false);\n\n    _defineProperty(this, \"colorModes\", void 0);\n\n    this.$scope = $scope;\n  }\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)'\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index) {\n    return newColor => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index) {\n    return newColor => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n\n}\nTimeRegionFormCtrl.$inject = [\"$scope\"];\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '='\n    }\n  };\n});","map":{"version":3,"names":["coreModule","getColorModes","TimeRegionFormCtrl","constructor","$scope","$onInit","panel","panelCtrl","unbindDestroy","$on","editingTimeRegions","render","colorModes","addTimeRegion","timeRegions","push","op","fromDayOfWeek","undefined","from","toDayOfWeek","to","colorMode","fill","line","fillColor","lineColor","removeTimeRegion","index","splice","onFillColorChange","newColor","onLineColorChange","directive","restrict","templateUrl","controller","bindToController","controllerAs","scope"],"sources":["/home/soula/grafana/public/app/plugins/panel/graph/time_regions_form.ts"],"sourcesContent":["import coreModule from 'app/angular/core_module';\n\nimport { getColorModes } from './time_region_manager';\n\nexport class TimeRegionFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n  colorModes: any;\n\n  /** @ngInject */\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index: number) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAO,MAAMC,kBAAN,CAAyB;EAM9B;EACAC,WAAW,CAASC,MAAT,EAAsB;IAAA;;IAAA;;IAAA,kCAJtB,KAIsB;;IAAA;;IAAA,KAAbA,MAAa,GAAbA,MAAa;EAAE;;EAEnCC,OAAO,GAAG;IACR,KAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeD,KAA5B;IAEA,MAAME,aAAa,GAAG,KAAKJ,MAAL,CAAYK,GAAZ,CAAgB,UAAhB,EAA4B,MAAM;MACtD,KAAKF,SAAL,CAAeG,kBAAf,GAAoC,KAApC;MACA,KAAKH,SAAL,CAAeI,MAAf;MACAH,aAAa;IACd,CAJqB,CAAtB;IAMA,KAAKI,UAAL,GAAkBX,aAAa,EAA/B;IACA,KAAKM,SAAL,CAAeG,kBAAf,GAAoC,IAApC;EACD;;EAEDC,MAAM,GAAG;IACP,KAAKJ,SAAL,CAAeI,MAAf;EACD;;EAEDE,aAAa,GAAG;IACd,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,IAAvB,CAA4B;MAC1BC,EAAE,EAAE,MADsB;MAE1BC,aAAa,EAAEC,SAFW;MAG1BC,IAAI,EAAED,SAHoB;MAI1BE,WAAW,EAAEF,SAJa;MAK1BG,EAAE,EAAEH,SALsB;MAM1BI,SAAS,EAAE,aANe;MAO1BC,IAAI,EAAE,IAPoB;MAQ1BC,IAAI,EAAE,KARoB;MAS1B;MACAC,SAAS,EAAE,2BAVe;MAW1BC,SAAS,EAAE;IAXe,CAA5B;IAaA,KAAKnB,SAAL,CAAeI,MAAf;EACD;;EAEDgB,gBAAgB,CAACC,KAAD,EAAgB;IAC9B,KAAKtB,KAAL,CAAWQ,WAAX,CAAuBe,MAAvB,CAA8BD,KAA9B,EAAqC,CAArC;IACA,KAAKrB,SAAL,CAAeI,MAAf;EACD;;EAEDmB,iBAAiB,CAACF,KAAD,EAAgB;IAC/B,OAAQG,QAAD,IAAsB;MAC3B,KAAKzB,KAAL,CAAWQ,WAAX,CAAuBc,KAAvB,EAA8BH,SAA9B,GAA0CM,QAA1C;MACA,KAAKpB,MAAL;IACD,CAHD;EAID;;EAEDqB,iBAAiB,CAACJ,KAAD,EAAgB;IAC/B,OAAQG,QAAD,IAAsB;MAC3B,KAAKzB,KAAL,CAAWQ,WAAX,CAAuBc,KAAvB,EAA8BF,SAA9B,GAA0CK,QAA1C;MACA,KAAKpB,MAAL;IACD,CAHD;EAID;;AA5D6B;;AA+DhCX,UAAU,CAACiC,SAAX,CAAqB,qBAArB,EAA4C,MAAM;EAChD,OAAO;IACLC,QAAQ,EAAE,GADL;IAELC,WAAW,EAAE,uDAFR;IAGLC,UAAU,EAAElC,kBAHP;IAILmC,gBAAgB,EAAE,IAJb;IAKLC,YAAY,EAAE,MALT;IAMLC,KAAK,EAAE;MACLhC,SAAS,EAAE;IADN;EANF,CAAP;AAUD,CAXD"},"metadata":{},"sourceType":"module"}