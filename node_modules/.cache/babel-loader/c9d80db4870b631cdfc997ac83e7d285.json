{"ast":null,"code":"import { PanelPlugin } from '@grafana/data';\nimport { TextPanel } from './TextPanel';\nimport { TextPanelEditor } from './TextPanelEditor';\nimport { defaultPanelOptions, TextMode } from './models.gen';\nimport { textPanelMigrationHandler } from './textPanelMigrationHandler';\nexport const plugin = new PanelPlugin(TextPanel).setPanelOptions(builder => {\n  builder.addRadio({\n    path: 'mode',\n    name: 'Mode',\n    description: 'text mode of the panel',\n    settings: {\n      options: [{\n        value: TextMode.Markdown,\n        label: 'Markdown'\n      }, {\n        value: TextMode.HTML,\n        label: 'HTML'\n      }]\n    },\n    defaultValue: defaultPanelOptions.mode\n  }).addCustomEditor({\n    id: 'content',\n    path: 'content',\n    name: 'Content',\n    description: 'Content of the panel',\n    editor: TextPanelEditor,\n    defaultValue: defaultPanelOptions.content\n  });\n}).setMigrationHandler(textPanelMigrationHandler);","map":{"version":3,"names":["PanelPlugin","TextPanel","TextPanelEditor","defaultPanelOptions","TextMode","textPanelMigrationHandler","plugin","setPanelOptions","builder","addRadio","path","name","description","settings","options","value","Markdown","label","HTML","defaultValue","mode","addCustomEditor","id","editor","content","setMigrationHandler"],"sources":["/home/soula/grafana/public/app/plugins/panel/text/module.tsx"],"sourcesContent":["import { PanelPlugin } from '@grafana/data';\n\nimport { TextPanel } from './TextPanel';\nimport { TextPanelEditor } from './TextPanelEditor';\nimport { defaultPanelOptions, PanelOptions, TextMode } from './models.gen';\nimport { textPanelMigrationHandler } from './textPanelMigrationHandler';\n\nexport const plugin = new PanelPlugin<PanelOptions>(TextPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addRadio({\n        path: 'mode',\n        name: 'Mode',\n        description: 'text mode of the panel',\n        settings: {\n          options: [\n            { value: TextMode.Markdown, label: 'Markdown' },\n            { value: TextMode.HTML, label: 'HTML' },\n          ],\n        },\n        defaultValue: defaultPanelOptions.mode,\n      })\n      .addCustomEditor({\n        id: 'content',\n        path: 'content',\n        name: 'Content',\n        description: 'Content of the panel',\n        editor: TextPanelEditor,\n        defaultValue: defaultPanelOptions.content,\n      });\n  })\n  .setMigrationHandler(textPanelMigrationHandler);\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,mBAAT,EAA4CC,QAA5C,QAA4D,cAA5D;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AAEA,OAAO,MAAMC,MAAM,GAAG,IAAIN,WAAJ,CAA8BC,SAA9B,EACnBM,eADmB,CACFC,OAAD,IAAa;EAC5BA,OAAO,CACJC,QADH,CACY;IACRC,IAAI,EAAE,MADE;IAERC,IAAI,EAAE,MAFE;IAGRC,WAAW,EAAE,wBAHL;IAIRC,QAAQ,EAAE;MACRC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAEX,QAAQ,CAACY,QAAlB;QAA4BC,KAAK,EAAE;MAAnC,CADO,EAEP;QAAEF,KAAK,EAAEX,QAAQ,CAACc,IAAlB;QAAwBD,KAAK,EAAE;MAA/B,CAFO;IADD,CAJF;IAURE,YAAY,EAAEhB,mBAAmB,CAACiB;EAV1B,CADZ,EAaGC,eAbH,CAamB;IACfC,EAAE,EAAE,SADW;IAEfZ,IAAI,EAAE,SAFS;IAGfC,IAAI,EAAE,SAHS;IAIfC,WAAW,EAAE,sBAJE;IAKfW,MAAM,EAAErB,eALO;IAMfiB,YAAY,EAAEhB,mBAAmB,CAACqB;EANnB,CAbnB;AAqBD,CAvBmB,EAwBnBC,mBAxBmB,CAwBCpB,yBAxBD,CAAf"},"metadata":{},"sourceType":"module"}