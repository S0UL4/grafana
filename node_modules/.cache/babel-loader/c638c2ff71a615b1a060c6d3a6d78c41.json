{"ast":null,"code":"import { debounce, trim } from 'lodash';\nimport { variableAdapters } from '../../adapters';\nimport { toKeyedAction } from '../../state/keyedVariablesReducer';\nimport { getVariable, getVariablesState } from '../../state/selectors';\nimport { changeVariableProp, setCurrentVariableValue } from '../../state/sharedReducer';\nimport { containsSearchFilter, getCurrentText, toVariablePayload } from '../../utils';\nimport { NavigationKey } from '../types';\nimport { hideOptions, moveOptionsHighlight, showOptions, toggleOption, updateOptionsAndFilter, updateOptionsFromSearch, updateSearchQuery } from './reducer';\nexport const navigateOptions = (rootStateKey, key, clearOthers) => {\n  return async (dispatch, getState) => {\n    if (key === NavigationKey.cancel) {\n      return await dispatch(commitChangesToVariable(rootStateKey));\n    }\n\n    if (key === NavigationKey.select) {\n      return dispatch(toggleOptionByHighlight(rootStateKey, clearOthers));\n    }\n\n    if (key === NavigationKey.selectAndClose) {\n      dispatch(toggleOptionByHighlight(rootStateKey, clearOthers, true));\n      return await dispatch(commitChangesToVariable(rootStateKey));\n    }\n\n    if (key === NavigationKey.moveDown) {\n      return dispatch(toKeyedAction(rootStateKey, moveOptionsHighlight(1)));\n    }\n\n    if (key === NavigationKey.moveUp) {\n      return dispatch(toKeyedAction(rootStateKey, moveOptionsHighlight(-1)));\n    }\n\n    return undefined;\n  };\n};\nexport const filterOrSearchOptions = (passedIdentifier, searchQuery = '') => {\n  return async (dispatch, getState) => {\n    const {\n      rootStateKey\n    } = passedIdentifier;\n    const {\n      id,\n      queryValue\n    } = getVariablesState(rootStateKey, getState()).optionsPicker;\n    const identifier = {\n      id,\n      rootStateKey: rootStateKey,\n      type: 'query'\n    };\n    const {\n      query,\n      options\n    } = getVariable(identifier, getState());\n    dispatch(toKeyedAction(rootStateKey, updateSearchQuery(searchQuery)));\n\n    if (trim(queryValue) === trim(searchQuery)) {\n      return;\n    }\n\n    if (containsSearchFilter(query)) {\n      return searchForOptionsWithDebounce(dispatch, getState, searchQuery, rootStateKey);\n    }\n\n    return dispatch(toKeyedAction(rootStateKey, updateOptionsAndFilter(options)));\n  };\n};\n\nconst setVariable = async updated => {\n  const adapter = variableAdapters.get(updated.type);\n  await adapter.setValue(updated, updated.current, true);\n  return;\n};\n\nexport const commitChangesToVariable = (key, callback) => {\n  return async (dispatch, getState) => {\n    const picker = getVariablesState(key, getState()).optionsPicker;\n    const identifier = {\n      id: picker.id,\n      rootStateKey: key,\n      type: 'query'\n    };\n    const existing = getVariable(identifier, getState());\n    const currentPayload = {\n      option: mapToCurrent(picker)\n    };\n    const searchQueryPayload = {\n      propName: 'queryValue',\n      propValue: picker.queryValue\n    };\n    dispatch(toKeyedAction(key, setCurrentVariableValue(toVariablePayload(existing, currentPayload))));\n    dispatch(toKeyedAction(key, changeVariableProp(toVariablePayload(existing, searchQueryPayload))));\n    const updated = getVariable(identifier, getState());\n    dispatch(toKeyedAction(key, hideOptions()));\n\n    if (getCurrentText(existing) === getCurrentText(updated)) {\n      return;\n    }\n\n    if (callback) {\n      return callback(updated);\n    }\n\n    return await setVariable(updated);\n  };\n};\nexport const openOptions = (identifier, callback) => async (dispatch, getState) => {\n  const {\n    id,\n    rootStateKey: uid\n  } = identifier;\n  const picker = getVariablesState(uid, getState()).optionsPicker;\n\n  if (picker.id && picker.id !== id) {\n    await dispatch(commitChangesToVariable(uid, callback));\n  }\n\n  const variable = getVariable(identifier, getState());\n  dispatch(toKeyedAction(uid, showOptions(variable)));\n};\nexport const toggleOptionByHighlight = (key, clearOthers, forceSelect = false) => {\n  return (dispatch, getState) => {\n    const {\n      highlightIndex,\n      options\n    } = getVariablesState(key, getState()).optionsPicker;\n    const option = options[highlightIndex];\n    dispatch(toKeyedAction(key, toggleOption({\n      option,\n      forceSelect,\n      clearOthers\n    })));\n  };\n};\n\nconst searchForOptions = async (dispatch, getState, searchQuery, key) => {\n  try {\n    const {\n      id\n    } = getVariablesState(key, getState()).optionsPicker;\n    const identifier = {\n      id,\n      rootStateKey: key,\n      type: 'query'\n    };\n    const existing = getVariable(identifier, getState());\n    const adapter = variableAdapters.get(existing.type);\n    await adapter.updateOptions(existing, searchQuery);\n    const updated = getVariable(identifier, getState());\n    dispatch(toKeyedAction(key, updateOptionsFromSearch(updated.options)));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst searchForOptionsWithDebounce = debounce(searchForOptions, 500);\nexport function mapToCurrent(picker) {\n  const {\n    options,\n    selectedValues,\n    queryValue: searchQuery,\n    multi\n  } = picker;\n\n  if (options.length === 0 && searchQuery && searchQuery.length > 0) {\n    return {\n      text: searchQuery,\n      value: searchQuery,\n      selected: false\n    };\n  }\n\n  if (!multi) {\n    return selectedValues.find(o => o.selected);\n  }\n\n  const texts = [];\n  const values = [];\n\n  for (const option of selectedValues) {\n    if (!option.selected) {\n      continue;\n    }\n\n    texts.push(option.text.toString());\n    values.push(option.value.toString());\n  }\n\n  return {\n    value: values,\n    text: texts,\n    selected: true\n  };\n}","map":{"version":3,"names":["debounce","trim","variableAdapters","toKeyedAction","getVariable","getVariablesState","changeVariableProp","setCurrentVariableValue","containsSearchFilter","getCurrentText","toVariablePayload","NavigationKey","hideOptions","moveOptionsHighlight","showOptions","toggleOption","updateOptionsAndFilter","updateOptionsFromSearch","updateSearchQuery","navigateOptions","rootStateKey","key","clearOthers","dispatch","getState","cancel","commitChangesToVariable","select","toggleOptionByHighlight","selectAndClose","moveDown","moveUp","undefined","filterOrSearchOptions","passedIdentifier","searchQuery","id","queryValue","optionsPicker","identifier","type","query","options","searchForOptionsWithDebounce","setVariable","updated","adapter","get","setValue","current","callback","picker","existing","currentPayload","option","mapToCurrent","searchQueryPayload","propName","propValue","openOptions","uid","variable","forceSelect","highlightIndex","searchForOptions","updateOptions","error","console","selectedValues","multi","length","text","value","selected","find","o","texts","values","push","toString"],"sources":["/home/soula/grafana/public/app/features/variables/pickers/OptionsPicker/actions.ts"],"sourcesContent":["import { debounce, trim } from 'lodash';\n\nimport { StoreState, ThunkDispatch, ThunkResult } from 'app/types';\n\nimport { variableAdapters } from '../../adapters';\nimport { toKeyedAction } from '../../state/keyedVariablesReducer';\nimport { getVariable, getVariablesState } from '../../state/selectors';\nimport { changeVariableProp, setCurrentVariableValue } from '../../state/sharedReducer';\nimport { KeyedVariableIdentifier } from '../../state/types';\nimport { VariableOption, VariableWithMultiSupport, VariableWithOptions } from '../../types';\nimport { containsSearchFilter, getCurrentText, toVariablePayload } from '../../utils';\nimport { NavigationKey } from '../types';\n\nimport {\n  hideOptions,\n  moveOptionsHighlight,\n  OptionsPickerState,\n  showOptions,\n  toggleOption,\n  updateOptionsAndFilter,\n  updateOptionsFromSearch,\n  updateSearchQuery,\n} from './reducer';\n\nexport const navigateOptions = (rootStateKey: string, key: NavigationKey, clearOthers: boolean): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    if (key === NavigationKey.cancel) {\n      return await dispatch(commitChangesToVariable(rootStateKey));\n    }\n\n    if (key === NavigationKey.select) {\n      return dispatch(toggleOptionByHighlight(rootStateKey, clearOthers));\n    }\n\n    if (key === NavigationKey.selectAndClose) {\n      dispatch(toggleOptionByHighlight(rootStateKey, clearOthers, true));\n      return await dispatch(commitChangesToVariable(rootStateKey));\n    }\n\n    if (key === NavigationKey.moveDown) {\n      return dispatch(toKeyedAction(rootStateKey, moveOptionsHighlight(1)));\n    }\n\n    if (key === NavigationKey.moveUp) {\n      return dispatch(toKeyedAction(rootStateKey, moveOptionsHighlight(-1)));\n    }\n\n    return undefined;\n  };\n};\n\nexport const filterOrSearchOptions = (\n  passedIdentifier: KeyedVariableIdentifier,\n  searchQuery = ''\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const { rootStateKey } = passedIdentifier;\n    const { id, queryValue } = getVariablesState(rootStateKey, getState()).optionsPicker;\n    const identifier: KeyedVariableIdentifier = { id, rootStateKey: rootStateKey, type: 'query' };\n    const { query, options } = getVariable<VariableWithOptions>(identifier, getState());\n    dispatch(toKeyedAction(rootStateKey, updateSearchQuery(searchQuery)));\n\n    if (trim(queryValue) === trim(searchQuery)) {\n      return;\n    }\n\n    if (containsSearchFilter(query)) {\n      return searchForOptionsWithDebounce(dispatch, getState, searchQuery, rootStateKey);\n    }\n    return dispatch(toKeyedAction(rootStateKey, updateOptionsAndFilter(options)));\n  };\n};\n\nconst setVariable = async (updated: VariableWithMultiSupport) => {\n  const adapter = variableAdapters.get(updated.type);\n  await adapter.setValue(updated, updated.current, true);\n  return;\n};\n\nexport const commitChangesToVariable = (key: string, callback?: (updated: any) => void): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const picker = getVariablesState(key, getState()).optionsPicker;\n    const identifier: KeyedVariableIdentifier = { id: picker.id, rootStateKey: key, type: 'query' };\n    const existing = getVariable<VariableWithMultiSupport>(identifier, getState());\n    const currentPayload = { option: mapToCurrent(picker) };\n    const searchQueryPayload = { propName: 'queryValue', propValue: picker.queryValue };\n\n    dispatch(toKeyedAction(key, setCurrentVariableValue(toVariablePayload(existing, currentPayload))));\n    dispatch(toKeyedAction(key, changeVariableProp(toVariablePayload(existing, searchQueryPayload))));\n    const updated = getVariable<VariableWithMultiSupport>(identifier, getState());\n    dispatch(toKeyedAction(key, hideOptions()));\n\n    if (getCurrentText(existing) === getCurrentText(updated)) {\n      return;\n    }\n\n    if (callback) {\n      return callback(updated);\n    }\n\n    return await setVariable(updated);\n  };\n};\n\nexport const openOptions =\n  (identifier: KeyedVariableIdentifier, callback?: (updated: any) => void): ThunkResult<void> =>\n  async (dispatch, getState) => {\n    const { id, rootStateKey: uid } = identifier;\n    const picker = getVariablesState(uid, getState()).optionsPicker;\n\n    if (picker.id && picker.id !== id) {\n      await dispatch(commitChangesToVariable(uid, callback));\n    }\n\n    const variable = getVariable<VariableWithMultiSupport>(identifier, getState());\n    dispatch(toKeyedAction(uid, showOptions(variable)));\n  };\n\nexport const toggleOptionByHighlight = (key: string, clearOthers: boolean, forceSelect = false): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    const { highlightIndex, options } = getVariablesState(key, getState()).optionsPicker;\n    const option = options[highlightIndex];\n    dispatch(toKeyedAction(key, toggleOption({ option, forceSelect, clearOthers })));\n  };\n};\n\nconst searchForOptions = async (\n  dispatch: ThunkDispatch,\n  getState: () => StoreState,\n  searchQuery: string,\n  key: string\n) => {\n  try {\n    const { id } = getVariablesState(key, getState()).optionsPicker;\n    const identifier: KeyedVariableIdentifier = { id, rootStateKey: key, type: 'query' };\n    const existing = getVariable<VariableWithOptions>(identifier, getState());\n\n    const adapter = variableAdapters.get(existing.type);\n    await adapter.updateOptions(existing, searchQuery);\n\n    const updated = getVariable<VariableWithOptions>(identifier, getState());\n    dispatch(toKeyedAction(key, updateOptionsFromSearch(updated.options)));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst searchForOptionsWithDebounce = debounce(searchForOptions, 500);\n\nexport function mapToCurrent(picker: OptionsPickerState): VariableOption | undefined {\n  const { options, selectedValues, queryValue: searchQuery, multi } = picker;\n\n  if (options.length === 0 && searchQuery && searchQuery.length > 0) {\n    return { text: searchQuery, value: searchQuery, selected: false };\n  }\n\n  if (!multi) {\n    return selectedValues.find((o) => o.selected);\n  }\n\n  const texts: string[] = [];\n  const values: string[] = [];\n\n  for (const option of selectedValues) {\n    if (!option.selected) {\n      continue;\n    }\n\n    texts.push(option.text.toString());\n    values.push(option.value.toString());\n  }\n\n  return {\n    value: values,\n    text: texts,\n    selected: true,\n  };\n}\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,QAA+B,QAA/B;AAIA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,uBAA/C;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA4D,2BAA5D;AAGA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,iBAA/C,QAAwE,aAAxE;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,SACEC,WADF,EAEEC,oBAFF,EAIEC,WAJF,EAKEC,YALF,EAMEC,sBANF,EAOEC,uBAPF,EAQEC,iBARF,QASO,WATP;AAWA,OAAO,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAuBC,GAAvB,EAA2CC,WAA3C,KAAuF;EACpH,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,IAAIH,GAAG,KAAKV,aAAa,CAACc,MAA1B,EAAkC;MAChC,OAAO,MAAMF,QAAQ,CAACG,uBAAuB,CAACN,YAAD,CAAxB,CAArB;IACD;;IAED,IAAIC,GAAG,KAAKV,aAAa,CAACgB,MAA1B,EAAkC;MAChC,OAAOJ,QAAQ,CAACK,uBAAuB,CAACR,YAAD,EAAeE,WAAf,CAAxB,CAAf;IACD;;IAED,IAAID,GAAG,KAAKV,aAAa,CAACkB,cAA1B,EAA0C;MACxCN,QAAQ,CAACK,uBAAuB,CAACR,YAAD,EAAeE,WAAf,EAA4B,IAA5B,CAAxB,CAAR;MACA,OAAO,MAAMC,QAAQ,CAACG,uBAAuB,CAACN,YAAD,CAAxB,CAArB;IACD;;IAED,IAAIC,GAAG,KAAKV,aAAa,CAACmB,QAA1B,EAAoC;MAClC,OAAOP,QAAQ,CAACpB,aAAa,CAACiB,YAAD,EAAeP,oBAAoB,CAAC,CAAD,CAAnC,CAAd,CAAf;IACD;;IAED,IAAIQ,GAAG,KAAKV,aAAa,CAACoB,MAA1B,EAAkC;MAChC,OAAOR,QAAQ,CAACpB,aAAa,CAACiB,YAAD,EAAeP,oBAAoB,CAAC,CAAC,CAAF,CAAnC,CAAd,CAAf;IACD;;IAED,OAAOmB,SAAP;EACD,CAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMC,qBAAqB,GAAG,CACnCC,gBADmC,EAEnCC,WAAW,GAAG,EAFqB,KAGb;EACtB,OAAO,OAAOZ,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,MAAM;MAAEJ;IAAF,IAAmBc,gBAAzB;IACA,MAAM;MAAEE,EAAF;MAAMC;IAAN,IAAqBhC,iBAAiB,CAACe,YAAD,EAAeI,QAAQ,EAAvB,CAAjB,CAA4Cc,aAAvE;IACA,MAAMC,UAAmC,GAAG;MAAEH,EAAF;MAAMhB,YAAY,EAAEA,YAApB;MAAkCoB,IAAI,EAAE;IAAxC,CAA5C;IACA,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAqBtC,WAAW,CAAsBmC,UAAtB,EAAkCf,QAAQ,EAA1C,CAAtC;IACAD,QAAQ,CAACpB,aAAa,CAACiB,YAAD,EAAeF,iBAAiB,CAACiB,WAAD,CAAhC,CAAd,CAAR;;IAEA,IAAIlC,IAAI,CAACoC,UAAD,CAAJ,KAAqBpC,IAAI,CAACkC,WAAD,CAA7B,EAA4C;MAC1C;IACD;;IAED,IAAI3B,oBAAoB,CAACiC,KAAD,CAAxB,EAAiC;MAC/B,OAAOE,4BAA4B,CAACpB,QAAD,EAAWC,QAAX,EAAqBW,WAArB,EAAkCf,YAAlC,CAAnC;IACD;;IACD,OAAOG,QAAQ,CAACpB,aAAa,CAACiB,YAAD,EAAeJ,sBAAsB,CAAC0B,OAAD,CAArC,CAAd,CAAf;EACD,CAfD;AAgBD,CApBM;;AAsBP,MAAME,WAAW,GAAG,MAAOC,OAAP,IAA6C;EAC/D,MAAMC,OAAO,GAAG5C,gBAAgB,CAAC6C,GAAjB,CAAqBF,OAAO,CAACL,IAA7B,CAAhB;EACA,MAAMM,OAAO,CAACE,QAAR,CAAiBH,OAAjB,EAA0BA,OAAO,CAACI,OAAlC,EAA2C,IAA3C,CAAN;EACA;AACD,CAJD;;AAMA,OAAO,MAAMvB,uBAAuB,GAAG,CAACL,GAAD,EAAc6B,QAAd,KAAuE;EAC5G,OAAO,OAAO3B,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,MAAM2B,MAAM,GAAG9C,iBAAiB,CAACgB,GAAD,EAAMG,QAAQ,EAAd,CAAjB,CAAmCc,aAAlD;IACA,MAAMC,UAAmC,GAAG;MAAEH,EAAE,EAAEe,MAAM,CAACf,EAAb;MAAiBhB,YAAY,EAAEC,GAA/B;MAAoCmB,IAAI,EAAE;IAA1C,CAA5C;IACA,MAAMY,QAAQ,GAAGhD,WAAW,CAA2BmC,UAA3B,EAAuCf,QAAQ,EAA/C,CAA5B;IACA,MAAM6B,cAAc,GAAG;MAAEC,MAAM,EAAEC,YAAY,CAACJ,MAAD;IAAtB,CAAvB;IACA,MAAMK,kBAAkB,GAAG;MAAEC,QAAQ,EAAE,YAAZ;MAA0BC,SAAS,EAAEP,MAAM,CAACd;IAA5C,CAA3B;IAEAd,QAAQ,CAACpB,aAAa,CAACkB,GAAD,EAAMd,uBAAuB,CAACG,iBAAiB,CAAC0C,QAAD,EAAWC,cAAX,CAAlB,CAA7B,CAAd,CAAR;IACA9B,QAAQ,CAACpB,aAAa,CAACkB,GAAD,EAAMf,kBAAkB,CAACI,iBAAiB,CAAC0C,QAAD,EAAWI,kBAAX,CAAlB,CAAxB,CAAd,CAAR;IACA,MAAMX,OAAO,GAAGzC,WAAW,CAA2BmC,UAA3B,EAAuCf,QAAQ,EAA/C,CAA3B;IACAD,QAAQ,CAACpB,aAAa,CAACkB,GAAD,EAAMT,WAAW,EAAjB,CAAd,CAAR;;IAEA,IAAIH,cAAc,CAAC2C,QAAD,CAAd,KAA6B3C,cAAc,CAACoC,OAAD,CAA/C,EAA0D;MACxD;IACD;;IAED,IAAIK,QAAJ,EAAc;MACZ,OAAOA,QAAQ,CAACL,OAAD,CAAf;IACD;;IAED,OAAO,MAAMD,WAAW,CAACC,OAAD,CAAxB;EACD,CArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMc,WAAW,GACtB,CAACpB,UAAD,EAAsCW,QAAtC,KACA,OAAO3B,QAAP,EAAiBC,QAAjB,KAA8B;EAC5B,MAAM;IAAEY,EAAF;IAAMhB,YAAY,EAAEwC;EAApB,IAA4BrB,UAAlC;EACA,MAAMY,MAAM,GAAG9C,iBAAiB,CAACuD,GAAD,EAAMpC,QAAQ,EAAd,CAAjB,CAAmCc,aAAlD;;EAEA,IAAIa,MAAM,CAACf,EAAP,IAAae,MAAM,CAACf,EAAP,KAAcA,EAA/B,EAAmC;IACjC,MAAMb,QAAQ,CAACG,uBAAuB,CAACkC,GAAD,EAAMV,QAAN,CAAxB,CAAd;EACD;;EAED,MAAMW,QAAQ,GAAGzD,WAAW,CAA2BmC,UAA3B,EAAuCf,QAAQ,EAA/C,CAA5B;EACAD,QAAQ,CAACpB,aAAa,CAACyD,GAAD,EAAM9C,WAAW,CAAC+C,QAAD,CAAjB,CAAd,CAAR;AACD,CAZI;AAcP,OAAO,MAAMjC,uBAAuB,GAAG,CAACP,GAAD,EAAcC,WAAd,EAAoCwC,WAAW,GAAG,KAAlD,KAA+E;EACpH,OAAO,CAACvC,QAAD,EAAWC,QAAX,KAAwB;IAC7B,MAAM;MAAEuC,cAAF;MAAkBrB;IAAlB,IAA8BrC,iBAAiB,CAACgB,GAAD,EAAMG,QAAQ,EAAd,CAAjB,CAAmCc,aAAvE;IACA,MAAMgB,MAAM,GAAGZ,OAAO,CAACqB,cAAD,CAAtB;IACAxC,QAAQ,CAACpB,aAAa,CAACkB,GAAD,EAAMN,YAAY,CAAC;MAAEuC,MAAF;MAAUQ,WAAV;MAAuBxC;IAAvB,CAAD,CAAlB,CAAd,CAAR;EACD,CAJD;AAKD,CANM;;AAQP,MAAM0C,gBAAgB,GAAG,OACvBzC,QADuB,EAEvBC,QAFuB,EAGvBW,WAHuB,EAIvBd,GAJuB,KAKpB;EACH,IAAI;IACF,MAAM;MAAEe;IAAF,IAAS/B,iBAAiB,CAACgB,GAAD,EAAMG,QAAQ,EAAd,CAAjB,CAAmCc,aAAlD;IACA,MAAMC,UAAmC,GAAG;MAAEH,EAAF;MAAMhB,YAAY,EAAEC,GAApB;MAAyBmB,IAAI,EAAE;IAA/B,CAA5C;IACA,MAAMY,QAAQ,GAAGhD,WAAW,CAAsBmC,UAAtB,EAAkCf,QAAQ,EAA1C,CAA5B;IAEA,MAAMsB,OAAO,GAAG5C,gBAAgB,CAAC6C,GAAjB,CAAqBK,QAAQ,CAACZ,IAA9B,CAAhB;IACA,MAAMM,OAAO,CAACmB,aAAR,CAAsBb,QAAtB,EAAgCjB,WAAhC,CAAN;IAEA,MAAMU,OAAO,GAAGzC,WAAW,CAAsBmC,UAAtB,EAAkCf,QAAQ,EAA1C,CAA3B;IACAD,QAAQ,CAACpB,aAAa,CAACkB,GAAD,EAAMJ,uBAAuB,CAAC4B,OAAO,CAACH,OAAT,CAA7B,CAAd,CAAR;EACD,CAVD,CAUE,OAAOwB,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACD;AACF,CAnBD;;AAqBA,MAAMvB,4BAA4B,GAAG3C,QAAQ,CAACgE,gBAAD,EAAmB,GAAnB,CAA7C;AAEA,OAAO,SAAST,YAAT,CAAsBJ,MAAtB,EAA8E;EACnF,MAAM;IAAET,OAAF;IAAW0B,cAAX;IAA2B/B,UAAU,EAAEF,WAAvC;IAAoDkC;EAApD,IAA8DlB,MAApE;;EAEA,IAAIT,OAAO,CAAC4B,MAAR,KAAmB,CAAnB,IAAwBnC,WAAxB,IAAuCA,WAAW,CAACmC,MAAZ,GAAqB,CAAhE,EAAmE;IACjE,OAAO;MAAEC,IAAI,EAAEpC,WAAR;MAAqBqC,KAAK,EAAErC,WAA5B;MAAyCsC,QAAQ,EAAE;IAAnD,CAAP;EACD;;EAED,IAAI,CAACJ,KAAL,EAAY;IACV,OAAOD,cAAc,CAACM,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACF,QAA7B,CAAP;EACD;;EAED,MAAMG,KAAe,GAAG,EAAxB;EACA,MAAMC,MAAgB,GAAG,EAAzB;;EAEA,KAAK,MAAMvB,MAAX,IAAqBc,cAArB,EAAqC;IACnC,IAAI,CAACd,MAAM,CAACmB,QAAZ,EAAsB;MACpB;IACD;;IAEDG,KAAK,CAACE,IAAN,CAAWxB,MAAM,CAACiB,IAAP,CAAYQ,QAAZ,EAAX;IACAF,MAAM,CAACC,IAAP,CAAYxB,MAAM,CAACkB,KAAP,CAAaO,QAAb,EAAZ;EACD;;EAED,OAAO;IACLP,KAAK,EAAEK,MADF;IAELN,IAAI,EAAEK,KAFD;IAGLH,QAAQ,EAAE;EAHL,CAAP;AAKD"},"metadata":{},"sourceType":"module"}