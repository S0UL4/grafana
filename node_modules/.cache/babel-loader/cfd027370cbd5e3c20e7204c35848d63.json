{"ast":null,"code":"import React from 'react';\nimport { Seg } from './Seg';\nimport { unwrap } from './unwrap';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AddButton = ({\n  loadOptions,\n  allowCustomValue,\n  onAdd\n}) => {\n  return /*#__PURE__*/_jsx(Seg, {\n    value: \"+\",\n    loadOptions: loadOptions,\n    allowCustomValue: allowCustomValue,\n    onChange: v => {\n      onAdd(unwrap(v.value));\n    }\n  });\n};","map":{"version":3,"names":["React","Seg","unwrap","AddButton","loadOptions","allowCustomValue","onAdd","v","value"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/VisualInfluxQLEditor/AddButton.tsx"],"sourcesContent":["import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { Seg } from './Seg';\nimport { unwrap } from './unwrap';\n\ntype Props = {\n  loadOptions: () => Promise<SelectableValue[]>;\n  allowCustomValue?: boolean;\n  onAdd: (v: string) => void;\n};\n\nexport const AddButton = ({ loadOptions, allowCustomValue, onAdd }: Props): JSX.Element => {\n  return (\n    <Seg\n      value=\"+\"\n      loadOptions={loadOptions}\n      allowCustomValue={allowCustomValue}\n      onChange={(v) => {\n        onAdd(unwrap(v.value));\n      }}\n    />\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAQA,OAAO,MAAMC,SAAS,GAAG,CAAC;EAAEC,WAAF;EAAeC,gBAAf;EAAiCC;AAAjC,CAAD,KAAkE;EACzF,oBACE,KAAC,GAAD;IACE,KAAK,EAAC,GADR;IAEE,WAAW,EAAEF,WAFf;IAGE,gBAAgB,EAAEC,gBAHpB;IAIE,QAAQ,EAAGE,CAAD,IAAO;MACfD,KAAK,CAACJ,MAAM,CAACK,CAAC,CAACC,KAAH,CAAP,CAAL;IACD;EANH,EADF;AAUD,CAXM"},"metadata":{},"sourceType":"module"}