{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Icon, stylesFactory, useTheme } from '@grafana/ui';\nimport store from 'app/core/store';\nimport { cardContent, cardStyle, iconStyle } from './sharedStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TutorialCard = ({\n  card\n}) => {\n  const theme = useTheme();\n  const styles = getStyles(theme, card.done);\n  return /*#__PURE__*/_jsx(\"a\", {\n    className: styles.card,\n    onClick: event => handleTutorialClick(event, card),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: cardContent,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.type,\n        children: card.type\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.heading,\n        children: card.done ? 'complete' : card.heading\n      }), /*#__PURE__*/_jsx(\"h4\", {\n        className: styles.cardTitle,\n        children: card.title\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.info,\n        children: card.info\n      }), /*#__PURE__*/_jsx(Icon, {\n        className: iconStyle(theme, card.done),\n        name: card.icon,\n        size: \"xxl\"\n      })]\n    })\n  });\n};\n\nconst handleTutorialClick = (event, card) => {\n  event.preventDefault();\n  const isSet = store.get(card.key);\n\n  if (!isSet) {\n    store.set(card.key, true);\n  }\n\n  window.open(`${card.href}?utm_source=grafana_gettingstarted`, '_blank');\n};\n\nconst getStyles = stylesFactory((theme, complete) => {\n  return {\n    card: css`\n      ${cardStyle(theme, complete)}\n      width: 460px;\n      min-width: 460px;\n\n      @media only screen and (max-width: ${theme.breakpoints.xl}) {\n        min-width: 368px;\n      }\n\n      @media only screen and (max-width: ${theme.breakpoints.lg}) {\n        min-width: 272px;\n      }\n    `,\n    type: css`\n      color: ${theme.colors.textBlue};\n      text-transform: uppercase;\n    `,\n    heading: css`\n      text-transform: uppercase;\n      color: ${theme.colors.textBlue};\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    cardTitle: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    info: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    status: css`\n      display: flex;\n      justify-content: flex-end;\n    `\n  };\n});","map":{"version":3,"names":["css","React","Icon","stylesFactory","useTheme","store","cardContent","cardStyle","iconStyle","TutorialCard","card","theme","styles","getStyles","done","event","handleTutorialClick","type","heading","cardTitle","title","info","icon","preventDefault","isSet","get","key","set","window","open","href","complete","breakpoints","xl","lg","colors","textBlue","spacing","sm","md","status"],"sources":["/home/soula/grafana/public/app/plugins/panel/gettingstarted/components/TutorialCard.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FC, MouseEvent } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Icon, stylesFactory, useTheme } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { TutorialCardType } from '../types';\n\nimport { cardContent, cardStyle, iconStyle } from './sharedStyles';\n\ninterface Props {\n  card: TutorialCardType;\n}\n\nexport const TutorialCard: FC<Props> = ({ card }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme, card.done);\n\n  return (\n    <a className={styles.card} onClick={(event: MouseEvent<HTMLAnchorElement>) => handleTutorialClick(event, card)}>\n      <div className={cardContent}>\n        <div className={styles.type}>{card.type}</div>\n        <div className={styles.heading}>{card.done ? 'complete' : card.heading}</div>\n        <h4 className={styles.cardTitle}>{card.title}</h4>\n        <div className={styles.info}>{card.info}</div>\n        <Icon className={iconStyle(theme, card.done)} name={card.icon} size=\"xxl\" />\n      </div>\n    </a>\n  );\n};\n\nconst handleTutorialClick = (event: MouseEvent<HTMLAnchorElement>, card: TutorialCardType) => {\n  event.preventDefault();\n  const isSet = store.get(card.key);\n  if (!isSet) {\n    store.set(card.key, true);\n  }\n  window.open(`${card.href}?utm_source=grafana_gettingstarted`, '_blank');\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, complete: boolean) => {\n  return {\n    card: css`\n      ${cardStyle(theme, complete)}\n      width: 460px;\n      min-width: 460px;\n\n      @media only screen and (max-width: ${theme.breakpoints.xl}) {\n        min-width: 368px;\n      }\n\n      @media only screen and (max-width: ${theme.breakpoints.lg}) {\n        min-width: 272px;\n      }\n    `,\n    type: css`\n      color: ${theme.colors.textBlue};\n      text-transform: uppercase;\n    `,\n    heading: css`\n      text-transform: uppercase;\n      color: ${theme.colors.textBlue};\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    cardTitle: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    info: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    status: css`\n      display: flex;\n      justify-content: flex-end;\n    `,\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}