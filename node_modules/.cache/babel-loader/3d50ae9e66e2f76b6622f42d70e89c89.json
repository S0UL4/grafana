{"ast":null,"code":"import { getBackendSrv } from '@grafana/runtime';\nimport { updateNavIndex } from 'app/core/actions';\nimport { contextSrv } from 'app/core/core';\nimport { accessControlQueryParam } from 'app/core/utils/accessControl';\nimport { AccessControlAction } from 'app/types';\nimport { buildNavModel } from './navModel';\nimport { teamGroupsLoaded, teamLoaded, teamMembersLoaded, teamsLoaded } from './reducers';\nexport function loadTeams() {\n  return async dispatch => {\n    // Early return if the user cannot list teams\n    if (!contextSrv.hasPermission(AccessControlAction.ActionTeamsRead)) {\n      dispatch(teamsLoaded([]));\n      return;\n    }\n\n    const response = await getBackendSrv().get('/api/teams/search', accessControlQueryParam({\n      perpage: 1000,\n      page: 1\n    }));\n    dispatch(teamsLoaded(response.teams));\n  };\n}\nexport function loadTeam(id) {\n  return async dispatch => {\n    const response = await getBackendSrv().get(`/api/teams/${id}`, accessControlQueryParam());\n    dispatch(teamLoaded(response));\n    dispatch(updateNavIndex(buildNavModel(response)));\n  };\n}\nexport function loadTeamMembers() {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/members`);\n    dispatch(teamMembersLoaded(response));\n  };\n}\nexport function addTeamMember(id) {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/members`, {\n      userId: id\n    });\n    dispatch(loadTeamMembers());\n  };\n}\nexport function removeTeamMember(id) {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/members/${id}`);\n    dispatch(loadTeamMembers());\n  };\n}\nexport function updateTeam(name, email) {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().put(`/api/teams/${team.id}`, {\n      name,\n      email\n    });\n    dispatch(loadTeam(team.id));\n  };\n}\nexport function loadTeamGroups() {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/groups`);\n    dispatch(teamGroupsLoaded(response));\n  };\n}\nexport function addTeamGroup(groupId) {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/groups`, {\n      groupId: groupId\n    });\n    dispatch(loadTeamGroups());\n  };\n}\nexport function removeTeamGroup(groupId) {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/groups/${encodeURIComponent(groupId)}`);\n    dispatch(loadTeamGroups());\n  };\n}\nexport function deleteTeam(id) {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/teams/${id}`); // Update users permissions in case they lost teams.read with the deletion\n\n    await contextSrv.fetchUserPermissions();\n    dispatch(loadTeams());\n  };\n}\nexport function updateTeamMember(member) {\n  return async dispatch => {\n    await getBackendSrv().put(`/api/teams/${member.teamId}/members/${member.userId}`, {\n      permission: member.permission\n    });\n    dispatch(loadTeamMembers());\n  };\n}","map":{"version":3,"names":["getBackendSrv","updateNavIndex","contextSrv","accessControlQueryParam","AccessControlAction","buildNavModel","teamGroupsLoaded","teamLoaded","teamMembersLoaded","teamsLoaded","loadTeams","dispatch","hasPermission","ActionTeamsRead","response","get","perpage","page","teams","loadTeam","id","loadTeamMembers","getStore","team","addTeamMember","post","userId","removeTeamMember","delete","updateTeam","name","email","put","loadTeamGroups","addTeamGroup","groupId","removeTeamGroup","encodeURIComponent","deleteTeam","fetchUserPermissions","updateTeamMember","member","teamId","permission"],"sources":["/home/soula/grafana/public/app/features/teams/state/actions.ts"],"sourcesContent":["import { getBackendSrv } from '@grafana/runtime';\nimport { updateNavIndex } from 'app/core/actions';\nimport { contextSrv } from 'app/core/core';\nimport { accessControlQueryParam } from 'app/core/utils/accessControl';\nimport { AccessControlAction, TeamMember, ThunkResult } from 'app/types';\n\nimport { buildNavModel } from './navModel';\nimport { teamGroupsLoaded, teamLoaded, teamMembersLoaded, teamsLoaded } from './reducers';\n\nexport function loadTeams(): ThunkResult<void> {\n  return async (dispatch) => {\n    // Early return if the user cannot list teams\n    if (!contextSrv.hasPermission(AccessControlAction.ActionTeamsRead)) {\n      dispatch(teamsLoaded([]));\n      return;\n    }\n\n    const response = await getBackendSrv().get(\n      '/api/teams/search',\n      accessControlQueryParam({ perpage: 1000, page: 1 })\n    );\n    dispatch(teamsLoaded(response.teams));\n  };\n}\n\nexport function loadTeam(id: number): ThunkResult<void> {\n  return async (dispatch) => {\n    const response = await getBackendSrv().get(`/api/teams/${id}`, accessControlQueryParam());\n    dispatch(teamLoaded(response));\n    dispatch(updateNavIndex(buildNavModel(response)));\n  };\n}\n\nexport function loadTeamMembers(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/members`);\n    dispatch(teamMembersLoaded(response));\n  };\n}\n\nexport function addTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/members`, { userId: id });\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function removeTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/members/${id}`);\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function updateTeam(name: string, email: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().put(`/api/teams/${team.id}`, { name, email });\n    dispatch(loadTeam(team.id));\n  };\n}\n\nexport function loadTeamGroups(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/groups`);\n    dispatch(teamGroupsLoaded(response));\n  };\n}\n\nexport function addTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/groups`, { groupId: groupId });\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function removeTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/groups/${encodeURIComponent(groupId)}`);\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function deleteTeam(id: number): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().delete(`/api/teams/${id}`);\n    // Update users permissions in case they lost teams.read with the deletion\n    await contextSrv.fetchUserPermissions();\n    dispatch(loadTeams());\n  };\n}\n\nexport function updateTeamMember(member: TeamMember): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().put(`/api/teams/${member.teamId}/members/${member.userId}`, {\n      permission: member.permission,\n    });\n    dispatch(loadTeamMembers());\n  };\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,mBAAT,QAA6D,WAA7D;AAEA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,iBAAvC,EAA0DC,WAA1D,QAA6E,YAA7E;AAEA,OAAO,SAASC,SAAT,GAAwC;EAC7C,OAAO,MAAOC,QAAP,IAAoB;IACzB;IACA,IAAI,CAACT,UAAU,CAACU,aAAX,CAAyBR,mBAAmB,CAACS,eAA7C,CAAL,EAAoE;MAClEF,QAAQ,CAACF,WAAW,CAAC,EAAD,CAAZ,CAAR;MACA;IACD;;IAED,MAAMK,QAAQ,GAAG,MAAMd,aAAa,GAAGe,GAAhB,CACrB,mBADqB,EAErBZ,uBAAuB,CAAC;MAAEa,OAAO,EAAE,IAAX;MAAiBC,IAAI,EAAE;IAAvB,CAAD,CAFF,CAAvB;IAIAN,QAAQ,CAACF,WAAW,CAACK,QAAQ,CAACI,KAAV,CAAZ,CAAR;EACD,CAZD;AAaD;AAED,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAiD;EACtD,OAAO,MAAOT,QAAP,IAAoB;IACzB,MAAMG,QAAQ,GAAG,MAAMd,aAAa,GAAGe,GAAhB,CAAqB,cAAaK,EAAG,EAArC,EAAwCjB,uBAAuB,EAA/D,CAAvB;IACAQ,QAAQ,CAACJ,UAAU,CAACO,QAAD,CAAX,CAAR;IACAH,QAAQ,CAACV,cAAc,CAACI,aAAa,CAACS,QAAD,CAAd,CAAf,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASO,eAAT,GAA8C;EACnD,OAAO,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMT,QAAQ,GAAG,MAAMd,aAAa,GAAGe,GAAhB,CAAqB,cAAaQ,IAAI,CAACH,EAAG,UAA1C,CAAvB;IACAT,QAAQ,CAACH,iBAAiB,CAACM,QAAD,CAAlB,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASU,aAAT,CAAuBJ,EAAvB,EAAsD;EAC3D,OAAO,OAAOT,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMvB,aAAa,GAAGyB,IAAhB,CAAsB,cAAaF,IAAI,CAACH,EAAG,UAA3C,EAAsD;MAAEM,MAAM,EAAEN;IAAV,CAAtD,CAAN;IACAT,QAAQ,CAACU,eAAe,EAAhB,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASM,gBAAT,CAA0BP,EAA1B,EAAyD;EAC9D,OAAO,OAAOT,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMvB,aAAa,GAAG4B,MAAhB,CAAwB,cAAaL,IAAI,CAACH,EAAG,YAAWA,EAAG,EAA3D,CAAN;IACAT,QAAQ,CAACU,eAAe,EAAhB,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASQ,UAAT,CAAoBC,IAApB,EAAkCC,KAAlC,EAAoE;EACzE,OAAO,OAAOpB,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMvB,aAAa,GAAGgC,GAAhB,CAAqB,cAAaT,IAAI,CAACH,EAAG,EAA1C,EAA6C;MAAEU,IAAF;MAAQC;IAAR,CAA7C,CAAN;IACApB,QAAQ,CAACQ,QAAQ,CAACI,IAAI,CAACH,EAAN,CAAT,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASa,cAAT,GAA6C;EAClD,OAAO,OAAOtB,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMT,QAAQ,GAAG,MAAMd,aAAa,GAAGe,GAAhB,CAAqB,cAAaQ,IAAI,CAACH,EAAG,SAA1C,CAAvB;IACAT,QAAQ,CAACL,gBAAgB,CAACQ,QAAD,CAAjB,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASoB,YAAT,CAAsBC,OAAtB,EAA0D;EAC/D,OAAO,OAAOxB,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMvB,aAAa,GAAGyB,IAAhB,CAAsB,cAAaF,IAAI,CAACH,EAAG,SAA3C,EAAqD;MAAEe,OAAO,EAAEA;IAAX,CAArD,CAAN;IACAxB,QAAQ,CAACsB,cAAc,EAAf,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASG,eAAT,CAAyBD,OAAzB,EAA6D;EAClE,OAAO,OAAOxB,QAAP,EAAiBW,QAAjB,KAA8B;IACnC,MAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBA,IAA7B;IACA,MAAMvB,aAAa,GAAG4B,MAAhB,CAAwB,cAAaL,IAAI,CAACH,EAAG,WAAUiB,kBAAkB,CAACF,OAAD,CAAU,EAAnF,CAAN;IACAxB,QAAQ,CAACsB,cAAc,EAAf,CAAR;EACD,CAJD;AAKD;AAED,OAAO,SAASK,UAAT,CAAoBlB,EAApB,EAAmD;EACxD,OAAO,MAAOT,QAAP,IAAoB;IACzB,MAAMX,aAAa,GAAG4B,MAAhB,CAAwB,cAAaR,EAAG,EAAxC,CAAN,CADyB,CAEzB;;IACA,MAAMlB,UAAU,CAACqC,oBAAX,EAAN;IACA5B,QAAQ,CAACD,SAAS,EAAV,CAAR;EACD,CALD;AAMD;AAED,OAAO,SAAS8B,gBAAT,CAA0BC,MAA1B,EAAiE;EACtE,OAAO,MAAO9B,QAAP,IAAoB;IACzB,MAAMX,aAAa,GAAGgC,GAAhB,CAAqB,cAAaS,MAAM,CAACC,MAAO,YAAWD,MAAM,CAACf,MAAO,EAAzE,EAA4E;MAChFiB,UAAU,EAAEF,MAAM,CAACE;IAD6D,CAA5E,CAAN;IAGAhC,QAAQ,CAACU,eAAe,EAAhB,CAAR;EACD,CALD;AAMD"},"metadata":{},"sourceType":"module"}