{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { renderMarkdown } from '@grafana/data';\nimport { HorizontalGroup, Pagination, VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport InviteesTable from '../invites/InviteesTable';\nimport { fetchInvitees } from '../invites/state/actions';\nimport { selectInvitesMatchingQuery } from '../invites/state/selectors';\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport { loadUsers, removeUser, updateUser } from './state/actions';\nimport { setUsersSearchQuery, setUsersSearchPage } from './state/reducers';\nimport { getUsers, getUsersSearchQuery, getUsersSearchPage } from './state/selectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction mapStateToProps(state) {\n  const searchQuery = getUsersSearchQuery(state.users);\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    searchPage: getUsersSearchPage(state.users),\n    invitees: selectInvitesMatchingQuery(state.invites, searchQuery),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  fetchInvitees,\n  setUsersSearchQuery,\n  setUsersSearchPage,\n  updateUser,\n  removeUser\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nconst pageLimit = 30;\nexport class UsersListPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onRoleChange\", (role, user) => {\n      const updatedUser = Object.assign({}, user, {\n        role: role\n      });\n      this.props.updateUser(updatedUser);\n    });\n\n    _defineProperty(this, \"onShowInvites\", () => {\n      this.setState(prevState => ({\n        showInvites: !prevState.showInvites\n      }));\n    });\n\n    _defineProperty(this, \"getPaginatedUsers\", users => {\n      const offset = (this.props.searchPage - 1) * pageLimit;\n      return users.slice(offset, offset + pageLimit);\n    });\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.fetchInvitees();\n  }\n\n  renderTable() {\n    const {\n      invitees,\n      users,\n      setUsersSearchPage\n    } = this.props;\n    const paginatedUsers = this.getPaginatedUsers(users);\n    const totalPages = Math.ceil(users.length / pageLimit);\n\n    if (this.state.showInvites) {\n      return /*#__PURE__*/_jsx(InviteesTable, {\n        invitees: invitees\n      });\n    } else {\n      return /*#__PURE__*/_jsxs(VerticalGroup, {\n        spacing: \"md\",\n        children: [/*#__PURE__*/_jsx(UsersTable, {\n          users: paginatedUsers,\n          orgId: contextSrv.user.orgId,\n          onRoleChange: (role, user) => this.onRoleChange(role, user),\n          onRemoveUser: user => this.props.removeUser(user.userId)\n        }), /*#__PURE__*/_jsx(HorizontalGroup, {\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsx(Pagination, {\n            onNavigate: setUsersSearchPage,\n            currentPage: this.props.searchPage,\n            numberOfPages: totalPages,\n            hideWhenSinglePage: true\n          })\n        })]\n      });\n    }\n  }\n\n  render() {\n    const {\n      navModel,\n      hasFetched\n    } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n    return /*#__PURE__*/_jsx(Page, {\n      navModel: navModel,\n      children: /*#__PURE__*/_jsx(Page.Contents, {\n        isLoading: !hasFetched,\n        children: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(UsersActionBar, {\n            onShowInvites: this.onShowInvites,\n            showInvites: this.state.showInvites\n          }), externalUserMngInfoHtml && /*#__PURE__*/_jsx(\"div\", {\n            className: \"grafana-info-box\",\n            dangerouslySetInnerHTML: {\n              __html: externalUserMngInfoHtml\n            }\n          }), hasFetched && this.renderTable()]\n        })\n      })\n    });\n  }\n\n}\nexport default connector(UsersListPage);","map":{"version":3,"names":["React","PureComponent","connect","renderMarkdown","HorizontalGroup","Pagination","VerticalGroup","Page","contextSrv","getNavModel","InviteesTable","fetchInvitees","selectInvitesMatchingQuery","UsersActionBar","UsersTable","loadUsers","removeUser","updateUser","setUsersSearchQuery","setUsersSearchPage","getUsers","getUsersSearchQuery","getUsersSearchPage","mapStateToProps","state","searchQuery","users","navModel","navIndex","searchPage","invitees","invites","externalUserMngInfo","hasFetched","mapDispatchToProps","connector","pageLimit","UsersListPage","constructor","props","role","user","updatedUser","setState","prevState","showInvites","offset","slice","externalUserMngInfoHtml","componentDidMount","fetchUsers","renderTable","paginatedUsers","getPaginatedUsers","totalPages","Math","ceil","length","orgId","onRoleChange","userId","render","onShowInvites","__html"],"sources":["/home/soula/grafana/public/app/features/users/UsersListPage.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { renderMarkdown } from '@grafana/data';\nimport { HorizontalGroup, Pagination, VerticalGroup } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { OrgUser, OrgRole, StoreState } from 'app/types';\n\nimport InviteesTable from '../invites/InviteesTable';\nimport { fetchInvitees } from '../invites/state/actions';\nimport { selectInvitesMatchingQuery } from '../invites/state/selectors';\n\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport { loadUsers, removeUser, updateUser } from './state/actions';\nimport { setUsersSearchQuery, setUsersSearchPage } from './state/reducers';\nimport { getUsers, getUsersSearchQuery, getUsersSearchPage } from './state/selectors';\n\nfunction mapStateToProps(state: StoreState) {\n  const searchQuery = getUsersSearchQuery(state.users);\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    searchPage: getUsersSearchPage(state.users),\n    invitees: selectInvitesMatchingQuery(state.invites, searchQuery),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  fetchInvitees,\n  setUsersSearchQuery,\n  setUsersSearchPage,\n  updateUser,\n  removeUser,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport type Props = ConnectedProps<typeof connector>;\n\nexport interface State {\n  showInvites: boolean;\n}\n\nconst pageLimit = 30;\n\nexport class UsersListPage extends PureComponent<Props, State> {\n  declare externalUserMngInfoHtml: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.fetchInvitees();\n  }\n\n  onRoleChange = (role: OrgRole, user: OrgUser) => {\n    const updatedUser = { ...user, role: role };\n\n    this.props.updateUser(updatedUser);\n  };\n\n  onShowInvites = () => {\n    this.setState((prevState) => ({\n      showInvites: !prevState.showInvites,\n    }));\n  };\n\n  getPaginatedUsers = (users: OrgUser[]) => {\n    const offset = (this.props.searchPage - 1) * pageLimit;\n    return users.slice(offset, offset + pageLimit);\n  };\n\n  renderTable() {\n    const { invitees, users, setUsersSearchPage } = this.props;\n    const paginatedUsers = this.getPaginatedUsers(users);\n    const totalPages = Math.ceil(users.length / pageLimit);\n\n    if (this.state.showInvites) {\n      return <InviteesTable invitees={invitees} />;\n    } else {\n      return (\n        <VerticalGroup spacing=\"md\">\n          <UsersTable\n            users={paginatedUsers}\n            orgId={contextSrv.user.orgId}\n            onRoleChange={(role, user) => this.onRoleChange(role, user)}\n            onRemoveUser={(user) => this.props.removeUser(user.userId)}\n          />\n          <HorizontalGroup justify=\"flex-end\">\n            <Pagination\n              onNavigate={setUsersSearchPage}\n              currentPage={this.props.searchPage}\n              numberOfPages={totalPages}\n              hideWhenSinglePage={true}\n            />\n          </HorizontalGroup>\n        </VerticalGroup>\n      );\n    }\n  }\n\n  render() {\n    const { navModel, hasFetched } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>\n          <>\n            <UsersActionBar onShowInvites={this.onShowInvites} showInvites={this.state.showInvites} />\n            {externalUserMngInfoHtml && (\n              <div className=\"grafana-info-box\" dangerouslySetInnerHTML={{ __html: externalUserMngInfoHtml }} />\n            )}\n            {hasFetched && this.renderTable()}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nexport default connector(UsersListPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}