{"ast":null,"code":"var _Icon, _Icon2, _Icon3, _Icon4;\n\nimport React from 'react';\nimport { Icon } from '@grafana/ui';\nimport { ResourceRowType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const EntryIcon = ({\n  isOpen,\n  entry: {\n    type\n  }\n}) => {\n  switch (type) {\n    case ResourceRowType.Subscription:\n      return _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"layer-group\"\n      }));\n\n    case ResourceRowType.ResourceGroup:\n      return /*#__PURE__*/_jsx(Icon, {\n        name: isOpen ? 'folder-open' : 'folder'\n      });\n\n    case ResourceRowType.Resource:\n      return _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n        name: \"cube\"\n      }));\n\n    case ResourceRowType.VariableGroup:\n      return _Icon3 || (_Icon3 = /*#__PURE__*/_jsx(Icon, {\n        name: \"x\"\n      }));\n\n    case ResourceRowType.Variable:\n      return _Icon4 || (_Icon4 = /*#__PURE__*/_jsx(Icon, {\n        name: \"x\"\n      }));\n\n    default:\n      return null;\n  }\n};","map":{"version":3,"names":["React","Icon","ResourceRowType","EntryIcon","isOpen","entry","type","Subscription","ResourceGroup","Resource","VariableGroup","Variable"],"sources":["/home/soula/grafana/public/app/plugins/datasource/grafana-azure-monitor-datasource/components/ResourcePicker/EntryIcon.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Icon } from '@grafana/ui';\n\nimport { ResourceRow, ResourceRowType } from './types';\n\ninterface EntryIconProps {\n  entry: ResourceRow;\n  isOpen: boolean;\n}\n\nexport const EntryIcon: React.FC<EntryIconProps> = ({ isOpen, entry: { type } }) => {\n  switch (type) {\n    case ResourceRowType.Subscription:\n      return <Icon name=\"layer-group\" />;\n\n    case ResourceRowType.ResourceGroup:\n      return <Icon name={isOpen ? 'folder-open' : 'folder'} />;\n\n    case ResourceRowType.Resource:\n      return <Icon name=\"cube\" />;\n\n    case ResourceRowType.VariableGroup:\n      return <Icon name=\"x\" />;\n\n    case ResourceRowType.Variable:\n      return <Icon name=\"x\" />;\n\n    default:\n      return null;\n  }\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,aAArB;AAEA,SAAsBC,eAAtB,QAA6C,SAA7C;;AAOA,OAAO,MAAMC,SAAmC,GAAG,CAAC;EAAEC,MAAF;EAAUC,KAAK,EAAE;IAAEC;EAAF;AAAjB,CAAD,KAAiC;EAClF,QAAQA,IAAR;IACE,KAAKJ,eAAe,CAACK,YAArB;MACE,sCAAO,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EAAP;;IAEF,KAAKL,eAAe,CAACM,aAArB;MACE,oBAAO,KAAC,IAAD;QAAM,IAAI,EAAEJ,MAAM,GAAG,aAAH,GAAmB;MAArC,EAAP;;IAEF,KAAKF,eAAe,CAACO,QAArB;MACE,wCAAO,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EAAP;;IAEF,KAAKP,eAAe,CAACQ,aAArB;MACE,wCAAO,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EAAP;;IAEF,KAAKR,eAAe,CAACS,QAArB;MACE,wCAAO,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EAAP;;IAEF;MACE,OAAO,IAAP;EAjBJ;AAmBD,CApBM"},"metadata":{},"sourceType":"module"}