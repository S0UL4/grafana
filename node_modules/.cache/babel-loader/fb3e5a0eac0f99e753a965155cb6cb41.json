{"ast":null,"code":"const _excluded = [\"data\", \"config\", \"placement\", \"calcs\", \"displayMode\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { fieldReducers, getDisplayProcessor, getFieldDisplayName, getFieldSeriesColor, reduceField, ReducerID } from '@grafana/data';\nimport { AxisPlacement } from '@grafana/schema';\nimport { useTheme2 } from '../../themes';\nimport { VizLayout } from '../VizLayout/VizLayout';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst defaultFormatter = v => v == null ? '-' : v.toFixed(1);\n\nexport const PlotLegend = _ref => {\n  let {\n    data,\n    config,\n    placement,\n    calcs,\n    displayMode\n  } = _ref,\n      vizLayoutLegendProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const theme = useTheme2();\n  const legendItems = config.getSeries().map(s => {\n    var _data$fieldIndex$fram, _field$config$custom, _field$config$custom$, _seriesConfig$show;\n\n    const seriesConfig = s.props;\n    const fieldIndex = seriesConfig.dataFrameFieldIndex;\n    const axisPlacement = config.getAxisPlacement(s.props.scaleKey);\n\n    if (!fieldIndex) {\n      return undefined;\n    }\n\n    const field = (_data$fieldIndex$fram = data[fieldIndex.frameIndex]) === null || _data$fieldIndex$fram === void 0 ? void 0 : _data$fieldIndex$fram.fields[fieldIndex.fieldIndex];\n\n    if (!field || (_field$config$custom = field.config.custom) !== null && _field$config$custom !== void 0 && (_field$config$custom$ = _field$config$custom.hideFrom) !== null && _field$config$custom$ !== void 0 && _field$config$custom$.legend) {\n      return undefined;\n    }\n\n    const label = getFieldDisplayName(field, data[fieldIndex.frameIndex], data);\n    const scaleColor = getFieldSeriesColor(field, theme);\n    const seriesColor = scaleColor.color;\n    return {\n      disabled: !((_seriesConfig$show = seriesConfig.show) !== null && _seriesConfig$show !== void 0 ? _seriesConfig$show : true),\n      fieldIndex,\n      color: seriesColor,\n      label,\n      yAxis: axisPlacement === AxisPlacement.Left ? 1 : 2,\n      getDisplayValues: () => {\n        var _field$display;\n\n        if (!(calcs !== null && calcs !== void 0 && calcs.length)) {\n          return [];\n        }\n\n        const fmt = (_field$display = field.display) !== null && _field$display !== void 0 ? _field$display : defaultFormatter;\n        let countFormatter = null;\n        const fieldCalcs = reduceField({\n          field,\n          reducers: calcs\n        });\n        return calcs.map(reducerId => {\n          const fieldReducer = fieldReducers.get(reducerId);\n          let formatter = fmt;\n\n          if (fieldReducer.id === ReducerID.diffperc) {\n            formatter = getDisplayProcessor({\n              field: Object.assign({}, field, {\n                config: Object.assign({}, field.config, {\n                  unit: 'percent'\n                })\n              }),\n              theme\n            });\n          }\n\n          if (fieldReducer.id === ReducerID.count || fieldReducer.id === ReducerID.changeCount || fieldReducer.id === ReducerID.distinctCount) {\n            if (!countFormatter) {\n              countFormatter = getDisplayProcessor({\n                field: Object.assign({}, field, {\n                  config: Object.assign({}, field.config, {\n                    unit: 'none'\n                  })\n                }),\n                theme\n              });\n            }\n\n            formatter = countFormatter;\n          }\n\n          return Object.assign({}, formatter(fieldCalcs[reducerId]), {\n            title: fieldReducer.name,\n            description: fieldReducer.description\n          });\n        });\n      },\n      getItemKey: () => `${label}-${fieldIndex.frameIndex}-${fieldIndex.fieldIndex}`\n    };\n  }).filter(i => i !== undefined);\n  return /*#__PURE__*/_jsx(VizLayout.Legend, Object.assign({\n    placement: placement\n  }, vizLayoutLegendProps, {\n    children: /*#__PURE__*/_jsx(VizLegend, {\n      placement: placement,\n      items: legendItems,\n      displayMode: displayMode,\n      sortBy: vizLayoutLegendProps.sortBy,\n      sortDesc: vizLayoutLegendProps.sortDesc\n    })\n  }));\n};\nPlotLegend.displayName = 'PlotLegend';","map":{"version":3,"names":["React","fieldReducers","getDisplayProcessor","getFieldDisplayName","getFieldSeriesColor","reduceField","ReducerID","AxisPlacement","useTheme2","VizLayout","VizLegend","defaultFormatter","v","toFixed","PlotLegend","data","config","placement","calcs","displayMode","vizLayoutLegendProps","theme","legendItems","getSeries","map","s","seriesConfig","props","fieldIndex","dataFrameFieldIndex","axisPlacement","getAxisPlacement","scaleKey","undefined","field","frameIndex","fields","custom","hideFrom","legend","label","scaleColor","seriesColor","color","disabled","show","yAxis","Left","getDisplayValues","length","fmt","display","countFormatter","fieldCalcs","reducers","reducerId","fieldReducer","get","formatter","id","diffperc","unit","count","changeCount","distinctCount","title","name","description","getItemKey","filter","i","sortBy","sortDesc","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/uPlot/PlotLegend.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  DataFrame,\n  DisplayProcessor,\n  DisplayValue,\n  fieldReducers,\n  getDisplayProcessor,\n  getFieldDisplayName,\n  getFieldSeriesColor,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\nimport { VizLegendOptions, AxisPlacement } from '@grafana/schema';\n\nimport { useTheme2 } from '../../themes';\nimport { VizLayout, VizLayoutLegendProps } from '../VizLayout/VizLayout';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { VizLegendItem } from '../VizLegend/types';\n\nimport { UPlotConfigBuilder } from './config/UPlotConfigBuilder';\n\nconst defaultFormatter = (v: any) => (v == null ? '-' : v.toFixed(1));\n\ninterface PlotLegendProps extends VizLegendOptions, Omit<VizLayoutLegendProps, 'children'> {\n  data: DataFrame[];\n  config: UPlotConfigBuilder;\n}\n\nexport const PlotLegend: React.FC<PlotLegendProps> = ({\n  data,\n  config,\n  placement,\n  calcs,\n  displayMode,\n  ...vizLayoutLegendProps\n}) => {\n  const theme = useTheme2();\n  const legendItems = config\n    .getSeries()\n    .map<VizLegendItem | undefined>((s) => {\n      const seriesConfig = s.props;\n      const fieldIndex = seriesConfig.dataFrameFieldIndex;\n      const axisPlacement = config.getAxisPlacement(s.props.scaleKey);\n\n      if (!fieldIndex) {\n        return undefined;\n      }\n\n      const field = data[fieldIndex.frameIndex]?.fields[fieldIndex.fieldIndex];\n\n      if (!field || field.config.custom?.hideFrom?.legend) {\n        return undefined;\n      }\n\n      const label = getFieldDisplayName(field, data[fieldIndex.frameIndex]!, data);\n      const scaleColor = getFieldSeriesColor(field, theme);\n      const seriesColor = scaleColor.color;\n\n      return {\n        disabled: !(seriesConfig.show ?? true),\n        fieldIndex,\n        color: seriesColor,\n        label,\n        yAxis: axisPlacement === AxisPlacement.Left ? 1 : 2,\n        getDisplayValues: () => {\n          if (!calcs?.length) {\n            return [];\n          }\n\n          const fmt = field.display ?? defaultFormatter;\n          let countFormatter: DisplayProcessor | null = null;\n\n          const fieldCalcs = reduceField({\n            field,\n            reducers: calcs,\n          });\n\n          return calcs.map<DisplayValue>((reducerId) => {\n            const fieldReducer = fieldReducers.get(reducerId);\n            let formatter = fmt;\n\n            if (fieldReducer.id === ReducerID.diffperc) {\n              formatter = getDisplayProcessor({\n                field: {\n                  ...field,\n                  config: {\n                    ...field.config,\n                    unit: 'percent',\n                  },\n                },\n                theme,\n              });\n            }\n\n            if (\n              fieldReducer.id === ReducerID.count ||\n              fieldReducer.id === ReducerID.changeCount ||\n              fieldReducer.id === ReducerID.distinctCount\n            ) {\n              if (!countFormatter) {\n                countFormatter = getDisplayProcessor({\n                  field: {\n                    ...field,\n                    config: {\n                      ...field.config,\n                      unit: 'none',\n                    },\n                  },\n                  theme,\n                });\n              }\n              formatter = countFormatter;\n            }\n\n            return {\n              ...formatter(fieldCalcs[reducerId]),\n              title: fieldReducer.name,\n              description: fieldReducer.description,\n            };\n          });\n        },\n        getItemKey: () => `${label}-${fieldIndex.frameIndex}-${fieldIndex.fieldIndex}`,\n      };\n    })\n    .filter((i) => i !== undefined) as VizLegendItem[];\n\n  return (\n    <VizLayout.Legend placement={placement} {...vizLayoutLegendProps}>\n      <VizLegend\n        placement={placement}\n        items={legendItems}\n        displayMode={displayMode}\n        sortBy={vizLayoutLegendProps.sortBy}\n        sortDesc={vizLayoutLegendProps.sortDesc}\n      />\n    </VizLayout.Legend>\n  );\n};\n\nPlotLegend.displayName = 'PlotLegend';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}