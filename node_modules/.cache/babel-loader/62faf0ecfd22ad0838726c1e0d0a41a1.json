{"ast":null,"code":"var _div;\n\nimport { css } from '@emotion/css';\nimport TracePageSearchBar from '@jaegertracing/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar';\nimport { TopOfViewRefType } from '@jaegertracing/jaeger-ui-components/src/TraceTimelineViewer/VirtualizedTraceView';\nimport React, { useMemo, useState, createRef } from 'react';\nimport { useAsync } from 'react-use';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { TraceView } from 'app/features/explore/TraceView/TraceView';\nimport { useSearch } from 'app/features/explore/TraceView/useSearch';\nimport { transformDataFrames } from 'app/features/explore/TraceView/utils/transform';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `\n};\nexport const TracesPanel = ({\n  data\n}) => {\n  var _data$series$, _data$series$$meta;\n\n  const topOfViewRef = /*#__PURE__*/createRef();\n  const traceProp = useMemo(() => transformDataFrames(data.series[0]), [data.series]);\n  const {\n    search,\n    setSearch,\n    spanFindMatches\n  } = useSearch(traceProp === null || traceProp === void 0 ? void 0 : traceProp.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n  const dataSource = useAsync(async () => {\n    var _data$request, _data$request$targets;\n\n    return await getDataSourceSrv().get((_data$request = data.request) === null || _data$request === void 0 ? void 0 : (_data$request$targets = _data$request.targets[0].datasource) === null || _data$request$targets === void 0 ? void 0 : _data$request$targets.uid);\n  });\n  const scrollElement = document.getElementsByClassName(styles.wrapper)[0];\n\n  if (!data || !data.series.length || !traceProp) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-empty\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: \"No data found in response\"\n      })\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      ref: topOfViewRef\n    }), ((_data$series$ = data.series[0]) === null || _data$series$ === void 0 ? void 0 : (_data$series$$meta = _data$series$.meta) === null || _data$series$$meta === void 0 ? void 0 : _data$series$$meta.preferredVisualisationType) === 'trace' ? /*#__PURE__*/_jsx(TracePageSearchBar, {\n      navigable: true,\n      searchValue: search,\n      setSearch: setSearch,\n      spanFindMatches: spanFindMatches,\n      searchBarSuffix: searchBarSuffix,\n      setSearchBarSuffix: setSearchBarSuffix,\n      focusedSpanIdForSearch: focusedSpanIdForSearch,\n      setFocusedSpanIdForSearch: setFocusedSpanIdForSearch\n    }) : null, /*#__PURE__*/_jsx(TraceView, {\n      dataFrames: data.series,\n      scrollElement: scrollElement,\n      traceProp: traceProp,\n      spanFindMatches: spanFindMatches,\n      search: search,\n      focusedSpanIdForSearch: focusedSpanIdForSearch,\n      queryResponse: data,\n      datasource: dataSource.value,\n      topOfViewRef: topOfViewRef,\n      topOfViewRefType: TopOfViewRefType.Panel\n    })]\n  });\n};","map":{"version":3,"names":["css","TracePageSearchBar","TopOfViewRefType","React","useMemo","useState","createRef","useAsync","getDataSourceSrv","TraceView","useSearch","transformDataFrames","styles","wrapper","TracesPanel","data","topOfViewRef","traceProp","series","search","setSearch","spanFindMatches","spans","focusedSpanIdForSearch","setFocusedSpanIdForSearch","searchBarSuffix","setSearchBarSuffix","dataSource","get","request","targets","datasource","uid","scrollElement","document","getElementsByClassName","length","meta","preferredVisualisationType","value","Panel"],"sources":["/home/soula/grafana/public/app/plugins/panel/traces/TracesPanel.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport TracePageSearchBar from '@jaegertracing/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar';\nimport { TopOfViewRefType } from '@jaegertracing/jaeger-ui-components/src/TraceTimelineViewer/VirtualizedTraceView';\nimport React, { useMemo, useState, createRef } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { PanelProps } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { TraceView } from 'app/features/explore/TraceView/TraceView';\nimport { useSearch } from 'app/features/explore/TraceView/useSearch';\nimport { transformDataFrames } from 'app/features/explore/TraceView/utils/transform';\n\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `,\n};\n\nexport const TracesPanel: React.FunctionComponent<PanelProps> = ({ data }) => {\n  const topOfViewRef = createRef<HTMLDivElement>();\n  const traceProp = useMemo(() => transformDataFrames(data.series[0]), [data.series]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n  const dataSource = useAsync(async () => {\n    return await getDataSourceSrv().get(data.request?.targets[0].datasource?.uid);\n  });\n  const scrollElement = document.getElementsByClassName(styles.wrapper)[0];\n\n  if (!data || !data.series.length || !traceProp) {\n    return (\n      <div className=\"panel-empty\">\n        <p>No data found in response</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div ref={topOfViewRef}></div>\n      {data.series[0]?.meta?.preferredVisualisationType === 'trace' ? (\n        <TracePageSearchBar\n          navigable={true}\n          searchValue={search}\n          setSearch={setSearch}\n          spanFindMatches={spanFindMatches}\n          searchBarSuffix={searchBarSuffix}\n          setSearchBarSuffix={setSearchBarSuffix}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n        />\n      ) : null}\n\n      <TraceView\n        dataFrames={data.series}\n        scrollElement={scrollElement}\n        traceProp={traceProp}\n        spanFindMatches={spanFindMatches}\n        search={search}\n        focusedSpanIdForSearch={focusedSpanIdForSearch}\n        queryResponse={data}\n        datasource={dataSource.value}\n        topOfViewRef={topOfViewRef}\n        topOfViewRefType={TopOfViewRefType.Panel}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,kBAAP,MAA+B,4EAA/B;AACA,SAASC,gBAAT,QAAiC,kFAAjC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,SAAT,QAA0B,0CAA1B;AACA,SAASC,SAAT,QAA0B,0CAA1B;AACA,SAASC,mBAAT,QAAoC,gDAApC;;;AAEA,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAEb,GAAI;AACf;AACA;AACA;AAJe,CAAf;AAOA,OAAO,MAAMc,WAAgD,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAAA;;EAC5E,MAAMC,YAAY,gBAAGV,SAAS,EAA9B;EACA,MAAMW,SAAS,GAAGb,OAAO,CAAC,MAAMO,mBAAmB,CAACI,IAAI,CAACG,MAAL,CAAY,CAAZ,CAAD,CAA1B,EAA4C,CAACH,IAAI,CAACG,MAAN,CAA5C,CAAzB;EACA,MAAM;IAAEC,MAAF;IAAUC,SAAV;IAAqBC;EAArB,IAAyCX,SAAS,CAACO,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEK,KAAZ,CAAxD;EACA,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDnB,QAAQ,CAAC,EAAD,CAApE;EACA,MAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAMsB,UAAU,GAAGpB,QAAQ,CAAC,YAAY;IAAA;;IACtC,OAAO,MAAMC,gBAAgB,GAAGoB,GAAnB,kBAAuBb,IAAI,CAACc,OAA5B,2EAAuB,cAAcC,OAAd,CAAsB,CAAtB,EAAyBC,UAAhD,0DAAuB,sBAAqCC,GAA5D,CAAb;EACD,CAF0B,CAA3B;EAGA,MAAMC,aAAa,GAAGC,QAAQ,CAACC,sBAAT,CAAgCvB,MAAM,CAACC,OAAvC,EAAgD,CAAhD,CAAtB;;EAEA,IAAI,CAACE,IAAD,IAAS,CAACA,IAAI,CAACG,MAAL,CAAYkB,MAAtB,IAAgC,CAACnB,SAArC,EAAgD;IAC9C,oCACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA;MAAA;IADF,EADF;EAKD;;EAED,oBACE;IAAK,SAAS,EAAEL,MAAM,CAACC,OAAvB;IAAA,wBACE;MAAK,GAAG,EAAEG;IAAV,EADF,EAEG,kBAAAD,IAAI,CAACG,MAAL,CAAY,CAAZ,uFAAgBmB,IAAhB,0EAAsBC,0BAAtB,MAAqD,OAArD,gBACC,KAAC,kBAAD;MACE,SAAS,EAAE,IADb;MAEE,WAAW,EAAEnB,MAFf;MAGE,SAAS,EAAEC,SAHb;MAIE,eAAe,EAAEC,eAJnB;MAKE,eAAe,EAAEI,eALnB;MAME,kBAAkB,EAAEC,kBANtB;MAOE,sBAAsB,EAAEH,sBAP1B;MAQE,yBAAyB,EAAEC;IAR7B,EADD,GAWG,IAbN,eAeE,KAAC,SAAD;MACE,UAAU,EAAET,IAAI,CAACG,MADnB;MAEE,aAAa,EAAEe,aAFjB;MAGE,SAAS,EAAEhB,SAHb;MAIE,eAAe,EAAEI,eAJnB;MAKE,MAAM,EAAEF,MALV;MAME,sBAAsB,EAAEI,sBAN1B;MAOE,aAAa,EAAER,IAPjB;MAQE,UAAU,EAAEY,UAAU,CAACY,KARzB;MASE,YAAY,EAAEvB,YAThB;MAUE,gBAAgB,EAAEd,gBAAgB,CAACsC;IAVrC,EAfF;EAAA,EADF;AA8BD,CAjDM"},"metadata":{},"sourceType":"module"}