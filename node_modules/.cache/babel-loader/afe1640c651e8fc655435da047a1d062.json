{"ast":null,"code":"import { bucketAggregationConfig } from './utils';\nexport const isBucketAggregationWithField = bucketAgg => bucketAggregationConfig[bucketAgg.type].requiresField;\nexport const BUCKET_AGGREGATION_TYPES = ['date_histogram', 'histogram', 'terms', 'filters', 'geohash_grid'];\nexport const isBucketAggregationType = s => BUCKET_AGGREGATION_TYPES.includes(s);","map":{"version":3,"names":["bucketAggregationConfig","isBucketAggregationWithField","bucketAgg","type","requiresField","BUCKET_AGGREGATION_TYPES","isBucketAggregationType","s","includes"],"sources":["/home/soula/grafana/public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/aggregations.ts"],"sourcesContent":["import { bucketAggregationConfig } from './utils';\n\nexport type BucketAggregationType = 'terms' | 'filters' | 'geohash_grid' | 'date_histogram' | 'histogram';\n\ninterface BaseBucketAggregation {\n  id: string;\n  type: BucketAggregationType;\n  settings?: Record<string, unknown>;\n}\n\nexport interface BucketAggregationWithField extends BaseBucketAggregation {\n  field?: string;\n}\n\nexport interface DateHistogram extends BucketAggregationWithField {\n  type: 'date_histogram';\n  settings?: {\n    interval?: string;\n    min_doc_count?: string;\n    trimEdges?: string;\n    offset?: string;\n    timeZone?: string;\n  };\n}\n\nexport interface Histogram extends BucketAggregationWithField {\n  type: 'histogram';\n  settings?: {\n    interval?: string;\n    min_doc_count?: string;\n  };\n}\n\ntype TermsOrder = 'desc' | 'asc';\n\nexport interface Terms extends BucketAggregationWithField {\n  type: 'terms';\n  settings?: {\n    order?: TermsOrder;\n    size?: string;\n    min_doc_count?: string;\n    orderBy?: string;\n    missing?: string;\n  };\n}\n\nexport type Filter = {\n  query: string;\n  label: string;\n};\nexport interface Filters extends BaseBucketAggregation {\n  type: 'filters';\n  settings?: {\n    filters?: Filter[];\n  };\n}\n\ninterface GeoHashGrid extends BucketAggregationWithField {\n  type: 'geohash_grid';\n  settings?: {\n    precision?: string;\n  };\n}\n\nexport type BucketAggregation = DateHistogram | Histogram | Terms | Filters | GeoHashGrid;\n\nexport const isBucketAggregationWithField = (\n  bucketAgg: BucketAggregation | BucketAggregationWithField\n): bucketAgg is BucketAggregationWithField => bucketAggregationConfig[bucketAgg.type].requiresField;\n\nexport const BUCKET_AGGREGATION_TYPES: BucketAggregationType[] = [\n  'date_histogram',\n  'histogram',\n  'terms',\n  'filters',\n  'geohash_grid',\n];\n\nexport const isBucketAggregationType = (s: BucketAggregationType | string): s is BucketAggregationType =>\n  BUCKET_AGGREGATION_TYPES.includes(s as BucketAggregationType);\n"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,SAAxC;AAkEA,OAAO,MAAMC,4BAA4B,GACvCC,SAD0C,IAEEF,uBAAuB,CAACE,SAAS,CAACC,IAAX,CAAvB,CAAwCC,aAF/E;AAIP,OAAO,MAAMC,wBAAiD,GAAG,CAC/D,gBAD+D,EAE/D,WAF+D,EAG/D,OAH+D,EAI/D,SAJ+D,EAK/D,cAL+D,CAA1D;AAQP,OAAO,MAAMC,uBAAuB,GAAIC,CAAD,IACrCF,wBAAwB,CAACG,QAAzB,CAAkCD,CAAlC,CADK"},"metadata":{},"sourceType":"module"}