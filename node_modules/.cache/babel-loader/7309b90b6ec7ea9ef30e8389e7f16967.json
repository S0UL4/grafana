{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles, useTheme } from '../../themes/ThemeContext';\nimport { Alert } from '../Alert/Alert';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { List } from '../List/List';\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getLogRowContextStyles = (theme, wrapLogMessage) => {\n  /**\n   * This is workaround for displaying uncropped context when we have unwrapping log messages.\n   * We are using margins to correctly position context. Because non-wrapped logs have always 1 line of log\n   * and 1 line of Show/Hide context switch. Therefore correct position can be reliably achieved by margins.\n   * We also adjust width to 75%.\n   */\n  const afterContext = wrapLogMessage ? css`\n        top: -250px;\n      ` : css`\n        margin-top: -250px;\n        width: 75%;\n      `;\n  const beforeContext = wrapLogMessage ? css`\n        top: 100%;\n      ` : css`\n        margin-top: 40px;\n        width: 75%;\n      `;\n  return {\n    commonStyles: css`\n      position: absolute;\n      height: 250px;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      background: ${theme.colors.bg1};\n      box-shadow: 0 0 10px ${theme.colors.dropdownShadow};\n      border: 1px solid ${theme.colors.bg2};\n      border-radius: ${theme.border.radius.md};\n      width: 100%;\n    `,\n    header: css`\n      height: 30px;\n      padding: 0 10px;\n      display: flex;\n      align-items: center;\n      background: ${theme.colors.bg2};\n    `,\n    logs: css`\n      height: 220px;\n      padding: 10px;\n    `,\n    afterContext,\n    beforeContext\n  };\n};\n\nconst LogRowContextGroupHeader = ({\n  row,\n  rows,\n  onLoadMoreContext,\n  canLoadMoreRows\n}) => {\n  const {\n    header\n  } = useStyles(getLogRowContextStyles);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: header,\n    children: [/*#__PURE__*/_jsxs(\"span\", {\n      className: css`\n          opacity: 0.6;\n        `,\n      children: [\"Found \", rows.length, \" rows.\"]\n    }), (rows.length >= 10 || rows.length > 10 && rows.length % 10 !== 0) && canLoadMoreRows && /*#__PURE__*/_jsx(\"span\", {\n      className: css`\n            margin-left: 10px;\n            &:hover {\n              text-decoration: underline;\n              cursor: pointer;\n            }\n          `,\n      onClick: onLoadMoreContext,\n      children: \"Load 10 more\"\n    })]\n  });\n};\n\nexport const LogRowContextGroup = ({\n  row,\n  rows,\n  error,\n  className,\n  shouldScrollToBottom,\n  canLoadMoreRows,\n  onLoadMoreContext\n}) => {\n  const {\n    commonStyles,\n    logs\n  } = useStyles(getLogRowContextStyles);\n  const [scrollTop, setScrollTop] = useState(0);\n  const listContainerRef = useRef();\n  useLayoutEffect(() => {\n    // We want to scroll to bottom only when we receive first 10 log lines\n    const shouldScrollRows = rows.length > 0 && rows.length <= 10;\n\n    if (shouldScrollToBottom && shouldScrollRows && listContainerRef.current) {\n      setScrollTop(listContainerRef.current.offsetHeight);\n    }\n  }, [shouldScrollToBottom, rows]);\n  const headerProps = {\n    row,\n    rows,\n    onLoadMoreContext,\n    canLoadMoreRows\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(commonStyles, className),\n    children: [shouldScrollToBottom && !error && /*#__PURE__*/_jsx(LogRowContextGroupHeader, Object.assign({}, headerProps)), /*#__PURE__*/_jsx(\"div\", {\n      className: logs,\n      children: /*#__PURE__*/_jsx(CustomScrollbar, {\n        autoHide: true,\n        scrollTop: scrollTop,\n        autoHeightMin: '210px',\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          ref: listContainerRef,\n          children: [!error && /*#__PURE__*/_jsx(List, {\n            items: rows,\n            renderItem: item => {\n              return /*#__PURE__*/_jsx(\"div\", {\n                className: css`\n                        padding: 5px 0;\n                      `,\n                children: typeof item === 'string' && textUtil.hasAnsiCodes(item) ? /*#__PURE__*/_jsx(LogMessageAnsi, {\n                  value: item\n                }) : item\n              });\n            }\n          }), error && /*#__PURE__*/_jsx(Alert, {\n            title: error\n          })]\n        })\n      })\n    }), !shouldScrollToBottom && !error && /*#__PURE__*/_jsx(LogRowContextGroupHeader, Object.assign({}, headerProps))]\n  });\n};\nexport const LogRowContext = ({\n  row,\n  context,\n  errors,\n  onOutsideClick,\n  onLoadMoreContext,\n  hasMoreContextRows,\n  wrapLogMessage\n}) => {\n  useEffect(() => {\n    const handleEscKeyDown = e => {\n      if (e.keyCode === 27) {\n        onOutsideClick();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKeyDown, false);\n    return () => {\n      document.removeEventListener('keydown', handleEscKeyDown, false);\n    };\n  }, [onOutsideClick]);\n  const theme = useTheme();\n  const {\n    afterContext,\n    beforeContext\n  } = getLogRowContextStyles(theme, wrapLogMessage);\n  return /*#__PURE__*/_jsx(ClickOutsideWrapper, {\n    onClick: onOutsideClick,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: [context.after && /*#__PURE__*/_jsx(LogRowContextGroup, {\n        rows: context.after,\n        error: errors && errors.after,\n        row: row,\n        className: afterContext,\n        shouldScrollToBottom: true,\n        canLoadMoreRows: hasMoreContextRows ? hasMoreContextRows.after : false,\n        onLoadMoreContext: onLoadMoreContext\n      }), context.before && /*#__PURE__*/_jsx(LogRowContextGroup, {\n        onLoadMoreContext: onLoadMoreContext,\n        canLoadMoreRows: hasMoreContextRows ? hasMoreContextRows.before : false,\n        row: row,\n        rows: context.before,\n        error: errors && errors.before,\n        className: beforeContext\n      })]\n    })\n  });\n};","map":{"version":3,"names":["css","cx","React","useRef","useState","useLayoutEffect","useEffect","textUtil","useStyles","useTheme","Alert","ClickOutsideWrapper","CustomScrollbar","List","LogMessageAnsi","getLogRowContextStyles","theme","wrapLogMessage","afterContext","beforeContext","commonStyles","zIndex","dropdown","colors","bg1","dropdownShadow","bg2","border","radius","md","header","logs","LogRowContextGroupHeader","row","rows","onLoadMoreContext","canLoadMoreRows","length","LogRowContextGroup","error","className","shouldScrollToBottom","scrollTop","setScrollTop","listContainerRef","shouldScrollRows","current","offsetHeight","headerProps","item","hasAnsiCodes","LogRowContext","context","errors","onOutsideClick","hasMoreContextRows","handleEscKeyDown","e","keyCode","document","addEventListener","removeEventListener","stopPropagation","after","before"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Logs/LogRowContext.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\n\nimport { GrafanaTheme, DataQueryError, LogRowModel, textUtil } from '@grafana/data';\n\nimport { useStyles, useTheme } from '../../themes/ThemeContext';\nimport { Alert } from '../Alert/Alert';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { List } from '../List/List';\n\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { LogRowContextRows, LogRowContextQueryErrors, HasMoreContextRows } from './LogRowContextProvider';\n\ninterface LogRowContextProps {\n  row: LogRowModel;\n  context: LogRowContextRows;\n  wrapLogMessage: boolean;\n  errors?: LogRowContextQueryErrors;\n  hasMoreContextRows?: HasMoreContextRows;\n  onOutsideClick: () => void;\n  onLoadMoreContext: () => void;\n}\n\nconst getLogRowContextStyles = (theme: GrafanaTheme, wrapLogMessage?: boolean) => {\n  /**\n   * This is workaround for displaying uncropped context when we have unwrapping log messages.\n   * We are using margins to correctly position context. Because non-wrapped logs have always 1 line of log\n   * and 1 line of Show/Hide context switch. Therefore correct position can be reliably achieved by margins.\n   * We also adjust width to 75%.\n   */\n\n  const afterContext = wrapLogMessage\n    ? css`\n        top: -250px;\n      `\n    : css`\n        margin-top: -250px;\n        width: 75%;\n      `;\n\n  const beforeContext = wrapLogMessage\n    ? css`\n        top: 100%;\n      `\n    : css`\n        margin-top: 40px;\n        width: 75%;\n      `;\n  return {\n    commonStyles: css`\n      position: absolute;\n      height: 250px;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      background: ${theme.colors.bg1};\n      box-shadow: 0 0 10px ${theme.colors.dropdownShadow};\n      border: 1px solid ${theme.colors.bg2};\n      border-radius: ${theme.border.radius.md};\n      width: 100%;\n    `,\n    header: css`\n      height: 30px;\n      padding: 0 10px;\n      display: flex;\n      align-items: center;\n      background: ${theme.colors.bg2};\n    `,\n    logs: css`\n      height: 220px;\n      padding: 10px;\n    `,\n    afterContext,\n    beforeContext,\n  };\n};\n\ninterface LogRowContextGroupHeaderProps {\n  row: LogRowModel;\n  rows: Array<string | DataQueryError>;\n  onLoadMoreContext: () => void;\n  shouldScrollToBottom?: boolean;\n  canLoadMoreRows?: boolean;\n}\ninterface LogRowContextGroupProps extends LogRowContextGroupHeaderProps {\n  rows: Array<string | DataQueryError>;\n  className?: string;\n  error?: string;\n}\n\nconst LogRowContextGroupHeader: React.FunctionComponent<LogRowContextGroupHeaderProps> = ({\n  row,\n  rows,\n  onLoadMoreContext,\n  canLoadMoreRows,\n}) => {\n  const { header } = useStyles(getLogRowContextStyles);\n\n  return (\n    <div className={header}>\n      <span\n        className={css`\n          opacity: 0.6;\n        `}\n      >\n        Found {rows.length} rows.\n      </span>\n      {(rows.length >= 10 || (rows.length > 10 && rows.length % 10 !== 0)) && canLoadMoreRows && (\n        <span\n          className={css`\n            margin-left: 10px;\n            &:hover {\n              text-decoration: underline;\n              cursor: pointer;\n            }\n          `}\n          onClick={onLoadMoreContext}\n        >\n          Load 10 more\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport const LogRowContextGroup: React.FunctionComponent<LogRowContextGroupProps> = ({\n  row,\n  rows,\n  error,\n  className,\n  shouldScrollToBottom,\n  canLoadMoreRows,\n  onLoadMoreContext,\n}) => {\n  const { commonStyles, logs } = useStyles(getLogRowContextStyles);\n  const [scrollTop, setScrollTop] = useState(0);\n  const listContainerRef = useRef<HTMLDivElement>() as React.RefObject<HTMLDivElement>;\n\n  useLayoutEffect(() => {\n    // We want to scroll to bottom only when we receive first 10 log lines\n    const shouldScrollRows = rows.length > 0 && rows.length <= 10;\n    if (shouldScrollToBottom && shouldScrollRows && listContainerRef.current) {\n      setScrollTop(listContainerRef.current.offsetHeight);\n    }\n  }, [shouldScrollToBottom, rows]);\n\n  const headerProps = {\n    row,\n    rows,\n    onLoadMoreContext,\n    canLoadMoreRows,\n  };\n\n  return (\n    <div className={cx(commonStyles, className)}>\n      {/* When displaying \"after\" context */}\n      {shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n      <div className={logs}>\n        <CustomScrollbar autoHide scrollTop={scrollTop} autoHeightMin={'210px'}>\n          <div ref={listContainerRef}>\n            {!error && (\n              <List\n                items={rows}\n                renderItem={(item) => {\n                  return (\n                    <div\n                      className={css`\n                        padding: 5px 0;\n                      `}\n                    >\n                      {typeof item === 'string' && textUtil.hasAnsiCodes(item) ? <LogMessageAnsi value={item} /> : item}\n                    </div>\n                  );\n                }}\n              />\n            )}\n            {error && <Alert title={error} />}\n          </div>\n        </CustomScrollbar>\n      </div>\n      {/* When displaying \"before\" context */}\n      {!shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n    </div>\n  );\n};\n\nexport const LogRowContext: React.FunctionComponent<LogRowContextProps> = ({\n  row,\n  context,\n  errors,\n  onOutsideClick,\n  onLoadMoreContext,\n  hasMoreContextRows,\n  wrapLogMessage,\n}) => {\n  useEffect(() => {\n    const handleEscKeyDown = (e: KeyboardEvent): void => {\n      if (e.keyCode === 27) {\n        onOutsideClick();\n      }\n    };\n    document.addEventListener('keydown', handleEscKeyDown, false);\n    return () => {\n      document.removeEventListener('keydown', handleEscKeyDown, false);\n    };\n  }, [onOutsideClick]);\n  const theme = useTheme();\n  const { afterContext, beforeContext } = getLogRowContextStyles(theme, wrapLogMessage);\n\n  return (\n    <ClickOutsideWrapper onClick={onOutsideClick}>\n      {/* e.stopPropagation is necessary so the log details doesn't open when clicked on log line in context\n       * and/or when context log line is being highlighted */}\n      <div onClick={(e) => e.stopPropagation()}>\n        {context.after && (\n          <LogRowContextGroup\n            rows={context.after}\n            error={errors && errors.after}\n            row={row}\n            className={afterContext}\n            shouldScrollToBottom\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.after : false}\n            onLoadMoreContext={onLoadMoreContext}\n          />\n        )}\n\n        {context.before && (\n          <LogRowContextGroup\n            onLoadMoreContext={onLoadMoreContext}\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.before : false}\n            row={row}\n            rows={context.before}\n            error={errors && errors.before}\n            className={beforeContext}\n          />\n        )}\n      </div>\n    </ClickOutsideWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}