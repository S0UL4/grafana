{"ast":null,"code":"var _Icon;\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport jsonMarkup from 'json-markup';\nimport * as React from 'react';\nimport { Icon, useStyles2 } from '@grafana/ui';\nimport { autoColor } from '../../Theme';\nimport CopyIcon from '../../common/CopyIcon';\nimport { ubInlineBlock, uWidth100 } from '../../uberUtilityStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst copyIconClassName = 'copyIcon';\nexport const getStyles = theme => {\n  return {\n    KeyValueTable: css`\n      label: KeyValueTable;\n      background: ${autoColor(theme, '#fff')};\n      border: 1px solid ${autoColor(theme, '#ddd')};\n      margin-bottom: 0.5rem;\n      max-height: 450px;\n      overflow: auto;\n    `,\n    body: css`\n      label: body;\n      vertical-align: baseline;\n    `,\n    row: css`\n      label: row;\n      & > td {\n        padding: 0rem 0.5rem;\n        height: 30px;\n      }\n      &:nth-child(2n) > td {\n        background: ${autoColor(theme, '#f5f5f5')};\n      }\n      &:not(:hover) .${copyIconClassName} {\n        visibility: hidden;\n      }\n    `,\n    keyColumn: css`\n      label: keyColumn;\n      color: ${autoColor(theme, '#888')};\n      white-space: pre;\n      width: 125px;\n    `,\n    copyColumn: css`\n      label: copyColumn;\n      text-align: right;\n    `,\n    linkIcon: css`\n      label: linkIcon;\n      vertical-align: middle;\n      font-weight: bold;\n    `\n  };\n};\nconst jsonObjectOrArrayStartRegex = /^(\\[|\\{)/;\n\nfunction parseIfComplexJson(value) {\n  // if the value is a string representing actual json object or array, then use json-markup\n  if (typeof value === 'string' && jsonObjectOrArrayStartRegex.test(value)) {\n    // otherwise just return as is\n    try {\n      return JSON.parse(value); // eslint-disable-next-line no-empty\n    } catch (_) {}\n  }\n\n  return value;\n}\n\nexport const LinkValue = props => {\n  return /*#__PURE__*/_jsxs(\"a\", {\n    href: props.href,\n    title: props.title,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: [props.children, \" \", _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n      name: \"external-link-alt\"\n    }))]\n  });\n};\nLinkValue.defaultProps = {\n  title: ''\n};\nexport default function KeyValuesTable(props) {\n  const {\n    data,\n    linksGetter\n  } = props;\n  const styles = useStyles2(getStyles);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: cx(styles.KeyValueTable),\n    \"data-test-id\": \"KeyValueTable\",\n    children: /*#__PURE__*/_jsx(\"table\", {\n      className: uWidth100,\n      children: /*#__PURE__*/_jsx(\"tbody\", {\n        className: styles.body,\n        children: data.map((row, i) => {\n          const markup = {\n            __html: jsonMarkup(parseIfComplexJson(row.value))\n          };\n\n          const jsonTable = /*#__PURE__*/_jsx(\"div\", {\n            className: ubInlineBlock,\n            dangerouslySetInnerHTML: markup\n          });\n\n          const links = linksGetter ? linksGetter(data, i) : null;\n          let valueMarkup;\n\n          if (links && links.length) {\n            // TODO: handle multiple items\n            valueMarkup = /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(LinkValue, {\n                href: links[0].url,\n                title: links[0].text,\n                children: jsonTable\n              })\n            });\n          } else {\n            valueMarkup = jsonTable;\n          }\n\n          return (\n            /*#__PURE__*/\n            // `i` is necessary in the key because row.key can repeat\n            _jsxs(\"tr\", {\n              className: styles.row,\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                className: styles.keyColumn,\n                \"data-test-id\": \"KeyValueTable--keyColumn\",\n                children: row.key\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: valueMarkup\n              }), /*#__PURE__*/_jsx(\"td\", {\n                className: styles.copyColumn,\n                children: /*#__PURE__*/_jsx(CopyIcon, {\n                  className: copyIconClassName,\n                  copyText: JSON.stringify(row, null, 2),\n                  tooltipTitle: \"Copy JSON\"\n                })\n              })]\n            }, `${row.key}-${i}`)\n          );\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["css","cx","jsonMarkup","React","Icon","useStyles2","autoColor","CopyIcon","ubInlineBlock","uWidth100","copyIconClassName","getStyles","theme","KeyValueTable","body","row","keyColumn","copyColumn","linkIcon","jsonObjectOrArrayStartRegex","parseIfComplexJson","value","test","JSON","parse","_","LinkValue","props","href","title","children","defaultProps","KeyValuesTable","data","linksGetter","styles","map","i","markup","__html","jsonTable","links","valueMarkup","length","url","text","key","stringify"],"sources":["/home/soula/grafana/packages/jaeger-ui-components/src/TraceTimelineViewer/SpanDetail/KeyValuesTable.tsx"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport jsonMarkup from 'json-markup';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport CopyIcon from '../../common/CopyIcon';\nimport { TNil } from '../../types';\nimport { TraceKeyValuePair, TraceLink } from '../../types/trace';\nimport { ubInlineBlock, uWidth100 } from '../../uberUtilityStyles';\n\nconst copyIconClassName = 'copyIcon';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    KeyValueTable: css`\n      label: KeyValueTable;\n      background: ${autoColor(theme, '#fff')};\n      border: 1px solid ${autoColor(theme, '#ddd')};\n      margin-bottom: 0.5rem;\n      max-height: 450px;\n      overflow: auto;\n    `,\n    body: css`\n      label: body;\n      vertical-align: baseline;\n    `,\n    row: css`\n      label: row;\n      & > td {\n        padding: 0rem 0.5rem;\n        height: 30px;\n      }\n      &:nth-child(2n) > td {\n        background: ${autoColor(theme, '#f5f5f5')};\n      }\n      &:not(:hover) .${copyIconClassName} {\n        visibility: hidden;\n      }\n    `,\n    keyColumn: css`\n      label: keyColumn;\n      color: ${autoColor(theme, '#888')};\n      white-space: pre;\n      width: 125px;\n    `,\n    copyColumn: css`\n      label: copyColumn;\n      text-align: right;\n    `,\n    linkIcon: css`\n      label: linkIcon;\n      vertical-align: middle;\n      font-weight: bold;\n    `,\n  };\n};\n\nconst jsonObjectOrArrayStartRegex = /^(\\[|\\{)/;\n\nfunction parseIfComplexJson(value: any) {\n  // if the value is a string representing actual json object or array, then use json-markup\n  if (typeof value === 'string' && jsonObjectOrArrayStartRegex.test(value)) {\n    // otherwise just return as is\n    try {\n      return JSON.parse(value);\n      // eslint-disable-next-line no-empty\n    } catch (_) {}\n  }\n  return value;\n}\n\nexport const LinkValue = (props: { href: string; title?: string; children: React.ReactNode }) => {\n  return (\n    <a href={props.href} title={props.title} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children} <Icon name=\"external-link-alt\" />\n    </a>\n  );\n};\n\nLinkValue.defaultProps = {\n  title: '',\n};\n\ntype KeyValuesTableProps = {\n  data: TraceKeyValuePair[];\n  linksGetter: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n};\n\nexport default function KeyValuesTable(props: KeyValuesTableProps) {\n  const { data, linksGetter } = props;\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.KeyValueTable)} data-test-id=\"KeyValueTable\">\n      <table className={uWidth100}>\n        <tbody className={styles.body}>\n          {data.map((row, i) => {\n            const markup = {\n              __html: jsonMarkup(parseIfComplexJson(row.value)),\n            };\n            const jsonTable = <div className={ubInlineBlock} dangerouslySetInnerHTML={markup} />;\n            const links = linksGetter ? linksGetter(data, i) : null;\n            let valueMarkup;\n            if (links && links.length) {\n              // TODO: handle multiple items\n              valueMarkup = (\n                <div>\n                  <LinkValue href={links[0].url} title={links[0].text}>\n                    {jsonTable}\n                  </LinkValue>\n                </div>\n              );\n            } else {\n              valueMarkup = jsonTable;\n            }\n            return (\n              // `i` is necessary in the key because row.key can repeat\n              <tr className={styles.row} key={`${row.key}-${i}`}>\n                <td className={styles.keyColumn} data-test-id=\"KeyValueTable--keyColumn\">\n                  {row.key}\n                </td>\n                <td>{valueMarkup}</td>\n                <td className={styles.copyColumn}>\n                  <CopyIcon\n                    className={copyIconClassName}\n                    copyText={JSON.stringify(row, null, 2)}\n                    tooltipTitle=\"Copy JSON\"\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}