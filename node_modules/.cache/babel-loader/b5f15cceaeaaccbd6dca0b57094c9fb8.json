{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { Field, Input } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * This is an Input field that will call `onChange` for blur and enter\n *\n * @internal this is not exported to the `@grafana/ui` library, it is used\n * by options editor (number and slider), and direclty with in grafana core\n */\nexport class NumberInput extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      text: '',\n      inputCorrected: false\n    });\n\n    _defineProperty(this, \"inputRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"updateValue\", () => {\n      var _this$inputRef$curren;\n\n      let value = undefined;\n      const txt = (_this$inputRef$curren = this.inputRef.current) === null || _this$inputRef$curren === void 0 ? void 0 : _this$inputRef$curren.value;\n\n      if (txt !== null && txt !== void 0 && txt.length) {\n        value = +txt;\n\n        if (isNaN(value)) {\n          return;\n        }\n      }\n\n      if (value !== this.props.value) {\n        this.props.onChange(value);\n      }\n\n      if (this.state.inputCorrected) {\n        this.setState({\n          inputCorrected: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"updateValueDebounced\", debounce(this.updateValue, 500));\n\n    _defineProperty(this, \"onChange\", e => {\n      let newValue = undefined;\n      let corrected = false;\n      const min = this.props.min;\n      const max = this.props.max;\n      const currValue = e.currentTarget.valueAsNumber;\n\n      if (!Number.isNaN(currValue)) {\n        if (min != null && currValue < min) {\n          newValue = min.toString();\n          corrected = true;\n        } else if (max != null && currValue > max) {\n          newValue = max.toString();\n          corrected = true;\n        } else {\n          newValue = e.currentTarget.value;\n        }\n      }\n\n      this.setState({\n        text: newValue ? newValue : '',\n        inputCorrected: corrected\n      });\n      this.updateValueDebounced();\n    });\n\n    _defineProperty(this, \"onKeyPress\", e => {\n      if (e.key === 'Enter') {\n        this.updateValue();\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      text: isNaN(this.props.value) ? '' : `${this.props.value}`\n    });\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.value !== oldProps.value) {\n      const text = isNaN(this.props.value) ? '' : `${this.props.value}`;\n\n      if (text !== this.state.text) {\n        this.setState({\n          text\n        });\n      }\n    }\n  }\n\n  renderInput() {\n    return /*#__PURE__*/_jsx(Input, {\n      type: \"number\",\n      ref: this.inputRef,\n      min: this.props.min,\n      max: this.props.max,\n      step: this.props.step,\n      autoFocus: this.props.autoFocus,\n      value: this.state.text,\n      onChange: this.onChange,\n      onBlur: this.updateValue,\n      onKeyPress: this.onKeyPress,\n      placeholder: this.props.placeholder\n    });\n  }\n\n  render() {\n    const {\n      inputCorrected\n    } = this.state;\n\n    if (inputCorrected) {\n      let range = '';\n      let {\n        min,\n        max\n      } = this.props;\n\n      if (max == null) {\n        if (min != null) {\n          range = `< ${min}`;\n        }\n      } else if (min != null) {\n        range = `${min} < > ${max}`;\n      } else {\n        range = `> ${max}`;\n      }\n\n      return /*#__PURE__*/_jsx(Field, {\n        invalid: inputCorrected,\n        error: `Value out of range ${range} `,\n        children: this.renderInput()\n      });\n    }\n\n    return this.renderInput();\n  }\n\n}","map":{"version":3,"names":["debounce","React","PureComponent","Field","Input","NumberInput","text","inputCorrected","createRef","value","undefined","txt","inputRef","current","length","isNaN","props","onChange","state","setState","updateValue","e","newValue","corrected","min","max","currValue","currentTarget","valueAsNumber","Number","toString","updateValueDebounced","key","componentDidMount","componentDidUpdate","oldProps","renderInput","step","autoFocus","onKeyPress","placeholder","render","range"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/NumberInput.tsx"],"sourcesContent":["import { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { Field, Input } from '@grafana/ui';\n\ninterface Props {\n  value?: number;\n  placeholder?: string;\n  autoFocus?: boolean;\n  onChange: (number?: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\ninterface State {\n  text: string;\n  inputCorrected: boolean;\n}\n\n/**\n * This is an Input field that will call `onChange` for blur and enter\n *\n * @internal this is not exported to the `@grafana/ui` library, it is used\n * by options editor (number and slider), and direclty with in grafana core\n */\n\nexport class NumberInput extends PureComponent<Props, State> {\n  state: State = { text: '', inputCorrected: false };\n  inputRef = React.createRef<HTMLInputElement>();\n\n  componentDidMount() {\n    this.setState({\n      text: isNaN(this.props.value!) ? '' : `${this.props.value}`,\n    });\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    if (this.props.value !== oldProps.value) {\n      const text = isNaN(this.props.value!) ? '' : `${this.props.value}`;\n      if (text !== this.state.text) {\n        this.setState({ text });\n      }\n    }\n  }\n\n  updateValue = () => {\n    let value: number | undefined = undefined;\n    const txt = this.inputRef.current?.value;\n    if (txt?.length) {\n      value = +txt;\n      if (isNaN(value)) {\n        return;\n      }\n    }\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    if (this.state.inputCorrected) {\n      this.setState({ inputCorrected: false });\n    }\n  };\n\n  updateValueDebounced = debounce(this.updateValue, 500); // 1/2 second delay\n\n  onChange = (e: React.FocusEvent<HTMLInputElement>) => {\n    let newValue: string | undefined = undefined;\n    let corrected = false;\n    const min = this.props.min;\n    const max = this.props.max;\n    const currValue = e.currentTarget.valueAsNumber;\n    if (!Number.isNaN(currValue)) {\n      if (min != null && currValue < min) {\n        newValue = min.toString();\n        corrected = true;\n      } else if (max != null && currValue > max) {\n        newValue = max.toString();\n        corrected = true;\n      } else {\n        newValue = e.currentTarget.value;\n      }\n    }\n    this.setState({\n      text: newValue ? newValue : '',\n      inputCorrected: corrected,\n    });\n    this.updateValueDebounced();\n  };\n\n  onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      this.updateValue();\n    }\n  };\n\n  renderInput() {\n    return (\n      <Input\n        type=\"number\"\n        ref={this.inputRef}\n        min={this.props.min}\n        max={this.props.max}\n        step={this.props.step}\n        autoFocus={this.props.autoFocus}\n        value={this.state.text}\n        onChange={this.onChange}\n        onBlur={this.updateValue}\n        onKeyPress={this.onKeyPress}\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n\n  render() {\n    const { inputCorrected } = this.state;\n    if (inputCorrected) {\n      let range = '';\n      let { min, max } = this.props;\n      if (max == null) {\n        if (min != null) {\n          range = `< ${min}`;\n        }\n      } else if (min != null) {\n        range = `${min} < > ${max}`;\n      } else {\n        range = `> ${max}`;\n      }\n      return (\n        <Field invalid={inputCorrected} error={`Value out of range ${range} `}>\n          {this.renderInput()}\n        </Field>\n      );\n    }\n\n    return this.renderInput();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}