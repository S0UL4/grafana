{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { buildRawQuery } from '../queryUtils';\nimport { FluxQueryEditor } from './FluxQueryEditor';\nimport { QueryEditorModeSwitcher } from './QueryEditorModeSwitcher';\nimport { RawInfluxQLEditor } from './RawInfluxQLEditor';\nimport { Editor as VisualInfluxQLEditor } from './VisualInfluxQLEditor/Editor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const QueryEditor = ({\n  query,\n  onChange,\n  onRunQuery,\n  datasource,\n  range,\n  data\n}) => {\n  var _query$rawQuery;\n\n  if (datasource.isFlux) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"gf-form-query-content\",\n      children: /*#__PURE__*/_jsx(FluxQueryEditor, {\n        query: query,\n        onChange: onChange,\n        onRunQuery: onRunQuery,\n        datasource: datasource\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: css({\n      display: 'flex'\n    }),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: css({\n        flexGrow: 1\n      }),\n      children: query.rawQuery ? /*#__PURE__*/_jsx(RawInfluxQLEditor, {\n        query: query,\n        onChange: onChange,\n        onRunQuery: onRunQuery\n      }) : /*#__PURE__*/_jsx(VisualInfluxQLEditor, {\n        query: query,\n        onChange: onChange,\n        onRunQuery: onRunQuery,\n        datasource: datasource\n      })\n    }), /*#__PURE__*/_jsx(QueryEditorModeSwitcher, {\n      isRaw: (_query$rawQuery = query.rawQuery) !== null && _query$rawQuery !== void 0 ? _query$rawQuery : false,\n      onChange: value => {\n        onChange(Object.assign({}, query, {\n          query: buildRawQuery(query),\n          rawQuery: value\n        }));\n        onRunQuery();\n      }\n    })]\n  });\n};","map":{"version":3,"names":["css","React","buildRawQuery","FluxQueryEditor","QueryEditorModeSwitcher","RawInfluxQLEditor","Editor","VisualInfluxQLEditor","QueryEditor","query","onChange","onRunQuery","datasource","range","data","isFlux","display","flexGrow","rawQuery","value"],"sources":["/home/soula/grafana/public/app/plugins/datasource/influxdb/components/QueryEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { QueryEditorProps } from '@grafana/data';\n\nimport InfluxDatasource from '../datasource';\nimport { buildRawQuery } from '../queryUtils';\nimport { InfluxOptions, InfluxQuery } from '../types';\n\nimport { FluxQueryEditor } from './FluxQueryEditor';\nimport { QueryEditorModeSwitcher } from './QueryEditorModeSwitcher';\nimport { RawInfluxQLEditor } from './RawInfluxQLEditor';\nimport { Editor as VisualInfluxQLEditor } from './VisualInfluxQLEditor/Editor';\n\ntype Props = QueryEditorProps<InfluxDatasource, InfluxQuery, InfluxOptions>;\n\nexport const QueryEditor = ({ query, onChange, onRunQuery, datasource, range, data }: Props): JSX.Element => {\n  if (datasource.isFlux) {\n    return (\n      <div className=\"gf-form-query-content\">\n        <FluxQueryEditor query={query} onChange={onChange} onRunQuery={onRunQuery} datasource={datasource} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={css({ display: 'flex' })}>\n      <div className={css({ flexGrow: 1 })}>\n        {query.rawQuery ? (\n          <RawInfluxQLEditor query={query} onChange={onChange} onRunQuery={onRunQuery} />\n        ) : (\n          <VisualInfluxQLEditor query={query} onChange={onChange} onRunQuery={onRunQuery} datasource={datasource} />\n        )}\n      </div>\n      <QueryEditorModeSwitcher\n        isRaw={query.rawQuery ?? false}\n        onChange={(value) => {\n          onChange({ ...query, query: buildRawQuery(query), rawQuery: value });\n          onRunQuery();\n        }}\n      />\n    </div>\n  );\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,SAASC,aAAT,QAA8B,eAA9B;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,MAAM,IAAIC,oBAAnB,QAA+C,+BAA/C;;;AAIA,OAAO,MAAMC,WAAW,GAAG,CAAC;EAAEC,KAAF;EAASC,QAAT;EAAmBC,UAAnB;EAA+BC,UAA/B;EAA2CC,KAA3C;EAAkDC;AAAlD,CAAD,KAAkF;EAAA;;EAC3G,IAAIF,UAAU,CAACG,MAAf,EAAuB;IACrB,oBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,uBACE,KAAC,eAAD;QAAiB,KAAK,EAAEN,KAAxB;QAA+B,QAAQ,EAAEC,QAAzC;QAAmD,UAAU,EAAEC,UAA/D;QAA2E,UAAU,EAAEC;MAAvF;IADF,EADF;EAKD;;EAED,oBACE;IAAK,SAAS,EAAEZ,GAAG,CAAC;MAAEgB,OAAO,EAAE;IAAX,CAAD,CAAnB;IAAA,wBACE;MAAK,SAAS,EAAEhB,GAAG,CAAC;QAAEiB,QAAQ,EAAE;MAAZ,CAAD,CAAnB;MAAA,UACGR,KAAK,CAACS,QAAN,gBACC,KAAC,iBAAD;QAAmB,KAAK,EAAET,KAA1B;QAAiC,QAAQ,EAAEC,QAA3C;QAAqD,UAAU,EAAEC;MAAjE,EADD,gBAGC,KAAC,oBAAD;QAAsB,KAAK,EAAEF,KAA7B;QAAoC,QAAQ,EAAEC,QAA9C;QAAwD,UAAU,EAAEC,UAApE;QAAgF,UAAU,EAAEC;MAA5F;IAJJ,EADF,eAQE,KAAC,uBAAD;MACE,KAAK,qBAAEH,KAAK,CAACS,QAAR,6DAAoB,KAD3B;MAEE,QAAQ,EAAGC,KAAD,IAAW;QACnBT,QAAQ,mBAAMD,KAAN;UAAaA,KAAK,EAAEP,aAAa,CAACO,KAAD,CAAjC;UAA0CS,QAAQ,EAAEC;QAApD,GAAR;QACAR,UAAU;MACX;IALH,EARF;EAAA,EADF;AAkBD,CA3BM"},"metadata":{},"sourceType":"module"}