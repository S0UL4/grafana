{"ast":null,"code":"var _div;\n\nimport React, { useMemo } from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Tooltip } from '@grafana/ui';\nimport { variableAdapters } from '../adapters';\nimport { VariableHide } from '../types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const PickerRenderer = props => {\n  const PickerToRender = useMemo(() => variableAdapters.get(props.variable.type).picker, [props.variable]);\n\n  if (!props.variable) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      children: \"Couldn't load variable\"\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"gf-form\",\n    children: [/*#__PURE__*/_jsx(PickerLabel, {\n      variable: props.variable\n    }), props.variable.hide !== VariableHide.hideVariable && PickerToRender && /*#__PURE__*/_jsx(PickerToRender, {\n      variable: props.variable\n    })]\n  });\n};\n\nfunction PickerLabel({\n  variable\n}) {\n  const labelOrName = useMemo(() => variable.label || variable.name, [variable]);\n\n  if (variable.hide !== VariableHide.dontHide) {\n    return null;\n  }\n\n  const elementId = `var-${variable.id}`;\n\n  if (variable.description) {\n    return /*#__PURE__*/_jsx(Tooltip, {\n      content: variable.description,\n      placement: 'bottom',\n      children: /*#__PURE__*/_jsx(\"label\", {\n        className: \"gf-form-label gf-form-label--variable\",\n        \"data-testid\": selectors.pages.Dashboard.SubMenu.submenuItemLabels(labelOrName),\n        htmlFor: elementId,\n        children: labelOrName\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"label\", {\n    className: \"gf-form-label gf-form-label--variable\",\n    \"data-testid\": selectors.pages.Dashboard.SubMenu.submenuItemLabels(labelOrName),\n    htmlFor: elementId,\n    children: labelOrName\n  });\n}","map":{"version":3,"names":["React","useMemo","selectors","Tooltip","variableAdapters","VariableHide","PickerRenderer","props","PickerToRender","get","variable","type","picker","hide","hideVariable","PickerLabel","labelOrName","label","name","dontHide","elementId","id","description","pages","Dashboard","SubMenu","submenuItemLabels"],"sources":["/home/soula/grafana/public/app/features/variables/pickers/PickerRenderer.tsx"],"sourcesContent":["import React, { FunctionComponent, PropsWithChildren, ReactElement, useMemo } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Tooltip } from '@grafana/ui';\n\nimport { variableAdapters } from '../adapters';\nimport { VariableHide, VariableModel } from '../types';\n\ninterface Props {\n  variable: VariableModel;\n}\n\nexport const PickerRenderer: FunctionComponent<Props> = (props) => {\n  const PickerToRender = useMemo(() => variableAdapters.get(props.variable.type).picker, [props.variable]);\n\n  if (!props.variable) {\n    return <div>Couldn&apos;t load variable</div>;\n  }\n\n  return (\n    <div className=\"gf-form\">\n      <PickerLabel variable={props.variable} />\n      {props.variable.hide !== VariableHide.hideVariable && PickerToRender && (\n        <PickerToRender variable={props.variable} />\n      )}\n    </div>\n  );\n};\n\nfunction PickerLabel({ variable }: PropsWithChildren<Props>): ReactElement | null {\n  const labelOrName = useMemo(() => variable.label || variable.name, [variable]);\n\n  if (variable.hide !== VariableHide.dontHide) {\n    return null;\n  }\n\n  const elementId = `var-${variable.id}`;\n  if (variable.description) {\n    return (\n      <Tooltip content={variable.description} placement={'bottom'}>\n        <label\n          className=\"gf-form-label gf-form-label--variable\"\n          data-testid={selectors.pages.Dashboard.SubMenu.submenuItemLabels(labelOrName)}\n          htmlFor={elementId}\n        >\n          {labelOrName}\n        </label>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <label\n      className=\"gf-form-label gf-form-label--variable\"\n      data-testid={selectors.pages.Dashboard.SubMenu.submenuItemLabels(labelOrName)}\n      htmlFor={elementId}\n    >\n      {labelOrName}\n    </label>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAoEC,OAApE,QAAmF,OAAnF;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,YAAT,QAA4C,UAA5C;;;AAMA,OAAO,MAAMC,cAAwC,GAAIC,KAAD,IAAW;EACjE,MAAMC,cAAc,GAAGP,OAAO,CAAC,MAAMG,gBAAgB,CAACK,GAAjB,CAAqBF,KAAK,CAACG,QAAN,CAAeC,IAApC,EAA0CC,MAAjD,EAAyD,CAACL,KAAK,CAACG,QAAP,CAAzD,CAA9B;;EAEA,IAAI,CAACH,KAAK,CAACG,QAAX,EAAqB;IACnB,oCAAO;MAAA;IAAA,EAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE,KAAC,WAAD;MAAa,QAAQ,EAAEH,KAAK,CAACG;IAA7B,EADF,EAEGH,KAAK,CAACG,QAAN,CAAeG,IAAf,KAAwBR,YAAY,CAACS,YAArC,IAAqDN,cAArD,iBACC,KAAC,cAAD;MAAgB,QAAQ,EAAED,KAAK,CAACG;IAAhC,EAHJ;EAAA,EADF;AAQD,CAfM;;AAiBP,SAASK,WAAT,CAAqB;EAAEL;AAAF,CAArB,EAAkF;EAChF,MAAMM,WAAW,GAAGf,OAAO,CAAC,MAAMS,QAAQ,CAACO,KAAT,IAAkBP,QAAQ,CAACQ,IAAlC,EAAwC,CAACR,QAAD,CAAxC,CAA3B;;EAEA,IAAIA,QAAQ,CAACG,IAAT,KAAkBR,YAAY,CAACc,QAAnC,EAA6C;IAC3C,OAAO,IAAP;EACD;;EAED,MAAMC,SAAS,GAAI,OAAMV,QAAQ,CAACW,EAAG,EAArC;;EACA,IAAIX,QAAQ,CAACY,WAAb,EAA0B;IACxB,oBACE,KAAC,OAAD;MAAS,OAAO,EAAEZ,QAAQ,CAACY,WAA3B;MAAwC,SAAS,EAAE,QAAnD;MAAA,uBACE;QACE,SAAS,EAAC,uCADZ;QAEE,eAAapB,SAAS,CAACqB,KAAV,CAAgBC,SAAhB,CAA0BC,OAA1B,CAAkCC,iBAAlC,CAAoDV,WAApD,CAFf;QAGE,OAAO,EAAEI,SAHX;QAAA,UAKGJ;MALH;IADF,EADF;EAWD;;EAED,oBACE;IACE,SAAS,EAAC,uCADZ;IAEE,eAAad,SAAS,CAACqB,KAAV,CAAgBC,SAAhB,CAA0BC,OAA1B,CAAkCC,iBAAlC,CAAoDV,WAApD,CAFf;IAGE,OAAO,EAAEI,SAHX;IAAA,UAKGJ;EALH,EADF;AASD"},"metadata":{},"sourceType":"module"}