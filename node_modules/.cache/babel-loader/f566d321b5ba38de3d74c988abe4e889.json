{"ast":null,"code":"var _thead;\n\nimport React from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { reportInteraction } from '@grafana/runtime';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { VariableEditorListRow } from './VariableEditorListRow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function VariableEditorList({\n  variables,\n  usages,\n  usagesNetwork,\n  onChangeOrder,\n  onAdd,\n  onEdit,\n  onDelete,\n  onDuplicate\n}) {\n  const onDragEnd = result => {\n    if (!result.destination || !result.source) {\n      return;\n    }\n\n    reportInteraction('Variable drag and drop');\n    const identifier = JSON.parse(result.draggableId);\n    onChangeOrder(identifier, result.source.index, result.destination.index);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [variables.length === 0 && /*#__PURE__*/_jsx(EmptyVariablesList, {\n        onAdd: onAdd\n      }), variables.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(\"table\", {\n          className: \"filter-table filter-table--hover\",\n          \"aria-label\": selectors.pages.Dashboard.Settings.Variables.List.table,\n          children: [_thead || (_thead = /*#__PURE__*/_jsx(\"thead\", {\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: \"Variable\"\n              }), /*#__PURE__*/_jsx(\"th\", {\n                children: \"Definition\"\n              }), /*#__PURE__*/_jsx(\"th\", {\n                colSpan: 5\n              })]\n            })\n          })), /*#__PURE__*/_jsx(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: /*#__PURE__*/_jsx(Droppable, {\n              droppableId: \"variables-list\",\n              direction: \"vertical\",\n              children: provided => /*#__PURE__*/_jsxs(\"tbody\", Object.assign({\n                ref: provided.innerRef\n              }, provided.droppableProps, {\n                children: [variables.map((variable, index) => /*#__PURE__*/_jsx(VariableEditorListRow, {\n                  index: index,\n                  variable: variable,\n                  usageTree: usages,\n                  usagesNetwork: usagesNetwork,\n                  onDelete: onDelete,\n                  onDuplicate: onDuplicate,\n                  onEdit: onEdit\n                }, `${variable.name}-${index}`)), provided.placeholder]\n              }))\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction EmptyVariablesList({\n  onAdd\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(EmptyListCTA, {\n      title: \"There are no variables yet\",\n      buttonIcon: \"calculator-alt\",\n      buttonTitle: \"Add variable\",\n      infoBox: {\n        __html: ` <p>\n                    Variables enable more interactive and dynamic dashboards. Instead of hard-coding things like server\n                    or sensor names in your metric queries you can use variables in their place. Variables are shown as\n                    list boxes at the top of the dashboard. These drop-down lists make it easy to change the data\n                    being displayed in your dashboard. Check out the\n                    <a class=\"external-link\" href=\"https://grafana.com/docs/grafana/latest/variables/\" target=\"_blank\">\n                      Templates and variables documentation\n                    </a>\n                    for more information.\n                  </p>`\n      },\n      infoBoxTitle: \"What do variables do?\",\n      onClick: event => {\n        event.preventDefault();\n        onAdd();\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","DragDropContext","Droppable","selectors","reportInteraction","EmptyListCTA","VariableEditorListRow","VariableEditorList","variables","usages","usagesNetwork","onChangeOrder","onAdd","onEdit","onDelete","onDuplicate","onDragEnd","result","destination","source","identifier","JSON","parse","draggableId","index","length","pages","Dashboard","Settings","Variables","List","table","provided","innerRef","droppableProps","map","variable","name","placeholder","EmptyVariablesList","__html","event","preventDefault"],"sources":["/home/soula/grafana/public/app/features/variables/editor/VariableEditorList.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { reportInteraction } from '@grafana/runtime';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\n\nimport { UsagesToNetwork, VariableUsageTree } from '../inspect/utils';\nimport { KeyedVariableIdentifier } from '../state/types';\nimport { VariableModel } from '../types';\n\nimport { VariableEditorListRow } from './VariableEditorListRow';\n\nexport interface Props {\n  variables: VariableModel[];\n  usages: VariableUsageTree[];\n  usagesNetwork: UsagesToNetwork[];\n  onAdd: () => void;\n  onEdit: (identifier: KeyedVariableIdentifier) => void;\n  onChangeOrder: (identifier: KeyedVariableIdentifier, fromIndex: number, toIndex: number) => void;\n  onDuplicate: (identifier: KeyedVariableIdentifier) => void;\n  onDelete: (identifier: KeyedVariableIdentifier) => void;\n}\n\nexport function VariableEditorList({\n  variables,\n  usages,\n  usagesNetwork,\n  onChangeOrder,\n  onAdd,\n  onEdit,\n  onDelete,\n  onDuplicate,\n}: Props): ReactElement {\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination || !result.source) {\n      return;\n    }\n    reportInteraction('Variable drag and drop');\n    const identifier = JSON.parse(result.draggableId);\n    onChangeOrder(identifier, result.source.index, result.destination.index);\n  };\n\n  return (\n    <div>\n      <div>\n        {variables.length === 0 && <EmptyVariablesList onAdd={onAdd} />}\n\n        {variables.length > 0 && (\n          <div>\n            <table\n              className=\"filter-table filter-table--hover\"\n              aria-label={selectors.pages.Dashboard.Settings.Variables.List.table}\n            >\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Definition</th>\n                  <th colSpan={5} />\n                </tr>\n              </thead>\n              <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"variables-list\" direction=\"vertical\">\n                  {(provided) => (\n                    <tbody ref={provided.innerRef} {...provided.droppableProps}>\n                      {variables.map((variable, index) => (\n                        <VariableEditorListRow\n                          index={index}\n                          key={`${variable.name}-${index}`}\n                          variable={variable}\n                          usageTree={usages}\n                          usagesNetwork={usagesNetwork}\n                          onDelete={onDelete}\n                          onDuplicate={onDuplicate}\n                          onEdit={onEdit}\n                        />\n                      ))}\n                      {provided.placeholder}\n                    </tbody>\n                  )}\n                </Droppable>\n              </DragDropContext>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction EmptyVariablesList({ onAdd }: { onAdd: () => void }): ReactElement {\n  return (\n    <div>\n      <EmptyListCTA\n        title=\"There are no variables yet\"\n        buttonIcon=\"calculator-alt\"\n        buttonTitle=\"Add variable\"\n        infoBox={{\n          __html: ` <p>\n                    Variables enable more interactive and dynamic dashboards. Instead of hard-coding things like server\n                    or sensor names in your metric queries you can use variables in their place. Variables are shown as\n                    list boxes at the top of the dashboard. These drop-down lists make it easy to change the data\n                    being displayed in your dashboard. Check out the\n                    <a class=\"external-link\" href=\"https://grafana.com/docs/grafana/latest/variables/\" target=\"_blank\">\n                      Templates and variables documentation\n                    </a>\n                    for more information.\n                  </p>`,\n        }}\n        infoBoxTitle=\"What do variables do?\"\n        onClick={(event) => {\n          event.preventDefault();\n          onAdd();\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAAuD,qBAAvD;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AAMA,SAASC,qBAAT,QAAsC,yBAAtC;;;AAaA,OAAO,SAASC,kBAAT,CAA4B;EACjCC,SADiC;EAEjCC,MAFiC;EAGjCC,aAHiC;EAIjCC,aAJiC;EAKjCC,KALiC;EAMjCC,MANiC;EAOjCC,QAPiC;EAQjCC;AARiC,CAA5B,EASiB;EACtB,MAAMC,SAAS,GAAIC,MAAD,IAAwB;IACxC,IAAI,CAACA,MAAM,CAACC,WAAR,IAAuB,CAACD,MAAM,CAACE,MAAnC,EAA2C;MACzC;IACD;;IACDf,iBAAiB,CAAC,wBAAD,CAAjB;IACA,MAAMgB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,WAAlB,CAAnB;IACAZ,aAAa,CAACS,UAAD,EAAaH,MAAM,CAACE,MAAP,CAAcK,KAA3B,EAAkCP,MAAM,CAACC,WAAP,CAAmBM,KAArD,CAAb;EACD,CAPD;;EASA,oBACE;IAAA,uBACE;MAAA,WACGhB,SAAS,CAACiB,MAAV,KAAqB,CAArB,iBAA0B,KAAC,kBAAD;QAAoB,KAAK,EAAEb;MAA3B,EAD7B,EAGGJ,SAAS,CAACiB,MAAV,GAAmB,CAAnB,iBACC;QAAA,uBACE;UACE,SAAS,EAAC,kCADZ;UAEE,cAAYtB,SAAS,CAACuB,KAAV,CAAgBC,SAAhB,CAA0BC,QAA1B,CAAmCC,SAAnC,CAA6CC,IAA7C,CAAkDC,KAFhE;UAAA,4CAIE;YAAA,uBACE;cAAA,wBACE;gBAAA;cAAA,EADF,eAEE;gBAAA;cAAA,EAFF,eAGE;gBAAI,OAAO,EAAE;cAAb,EAHF;YAAA;UADF,EAJF,gBAWE,KAAC,eAAD;YAAiB,SAAS,EAAEf,SAA5B;YAAA,uBACE,KAAC,SAAD;cAAW,WAAW,EAAC,gBAAvB;cAAwC,SAAS,EAAC,UAAlD;cAAA,UACIgB,QAAD,iBACC;gBAAO,GAAG,EAAEA,QAAQ,CAACC;cAArB,GAAmCD,QAAQ,CAACE,cAA5C;gBAAA,WACG1B,SAAS,CAAC2B,GAAV,CAAc,CAACC,QAAD,EAAWZ,KAAX,kBACb,KAAC,qBAAD;kBACE,KAAK,EAAEA,KADT;kBAGE,QAAQ,EAAEY,QAHZ;kBAIE,SAAS,EAAE3B,MAJb;kBAKE,aAAa,EAAEC,aALjB;kBAME,QAAQ,EAAEI,QANZ;kBAOE,WAAW,EAAEC,WAPf;kBAQE,MAAM,EAAEF;gBARV,GAEQ,GAAEuB,QAAQ,CAACC,IAAK,IAAGb,KAAM,EAFjC,CADD,CADH,EAaGQ,QAAQ,CAACM,WAbZ;cAAA;YAFJ;UADF,EAXF;QAAA;MADF,EAJJ;IAAA;EADF,EADF;AA6CD;;AAED,SAASC,kBAAT,CAA4B;EAAE3B;AAAF,CAA5B,EAA4E;EAC1E,oBACE;IAAA,uBACE,KAAC,YAAD;MACE,KAAK,EAAC,4BADR;MAEE,UAAU,EAAC,gBAFb;MAGE,WAAW,EAAC,cAHd;MAIE,OAAO,EAAE;QACP4B,MAAM,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAViB,CAJX;MAgBE,YAAY,EAAC,uBAhBf;MAiBE,OAAO,EAAGC,KAAD,IAAW;QAClBA,KAAK,CAACC,cAAN;QACA9B,KAAK;MACN;IApBH;EADF,EADF;AA0BD"},"metadata":{},"sourceType":"module"}