{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport { Subject } from 'rxjs';\nimport { locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nexport function useKeyNavigationListener() {\n  const eventsRef = useRef(new Subject());\n  return {\n    keyboardEvents: eventsRef.current,\n    onKeyDown: e => {\n      switch (e.code) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'Enter':\n          eventsRef.current.next(e);\n\n        default: // ignore\n\n      }\n    }\n  };\n}\nexport function useSearchKeyboardNavigation(keyboardEvents, numColumns, response) {\n  const highlightIndexRef = useRef({\n    x: 0,\n    y: -1\n  });\n  const [highlightIndex, setHighlightIndex] = useState({\n    x: 0,\n    y: -1\n  });\n  const urlsRef = useRef(); // Clear selection when the search results change\n\n  useEffect(() => {\n    urlsRef.current = response.view.fields.url;\n    highlightIndexRef.current.x = 0;\n    highlightIndexRef.current.y = -1;\n    setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n  }, [response]);\n  useEffect(() => {\n    const sub = keyboardEvents.subscribe({\n      next: keyEvent => {\n        var _urlsRef$current$valu;\n\n        switch (keyEvent === null || keyEvent === void 0 ? void 0 : keyEvent.code) {\n          case 'ArrowDown':\n            {\n              highlightIndexRef.current.y++;\n              setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n              break;\n            }\n\n          case 'ArrowUp':\n            highlightIndexRef.current.y = Math.max(0, highlightIndexRef.current.y - 1);\n            setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n            break;\n\n          case 'ArrowRight':\n            {\n              if (numColumns > 0) {\n                highlightIndexRef.current.x = Math.min(numColumns, highlightIndexRef.current.x + 1);\n                setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n              }\n\n              break;\n            }\n\n          case 'ArrowLeft':\n            {\n              if (numColumns > 0) {\n                highlightIndexRef.current.x = Math.max(0, highlightIndexRef.current.x - 1);\n                setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n              }\n\n              break;\n            }\n\n          case 'Enter':\n            if (!urlsRef.current) {\n              break;\n            }\n\n            const idx = highlightIndexRef.current.x * numColumns + highlightIndexRef.current.y;\n\n            if (idx < 0) {\n              highlightIndexRef.current.x = 0;\n              highlightIndexRef.current.y = 0;\n              setHighlightIndex(Object.assign({}, highlightIndexRef.current));\n              break;\n            }\n\n            const url = (_urlsRef$current$valu = urlsRef.current.values) === null || _urlsRef$current$valu === void 0 ? void 0 : _urlsRef$current$valu.get(idx);\n\n            if (url) {\n              locationService.push(locationUtil.stripBaseFromUrl(url));\n            }\n\n        }\n      }\n    });\n    return () => sub.unsubscribe();\n  }, [keyboardEvents, numColumns]);\n  return highlightIndex;\n}","map":{"version":3,"names":["useEffect","useRef","useState","Subject","locationUtil","locationService","useKeyNavigationListener","eventsRef","keyboardEvents","current","onKeyDown","e","code","next","useSearchKeyboardNavigation","numColumns","response","highlightIndexRef","x","y","highlightIndex","setHighlightIndex","urlsRef","view","fields","url","sub","subscribe","keyEvent","Math","max","min","idx","values","get","push","stripBaseFromUrl","unsubscribe"],"sources":["/home/soula/grafana/public/app/features/search/hooks/useSearchKeyboardSelection.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Field, locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\n\nimport { QueryResponse } from '../service';\n\nexport function useKeyNavigationListener() {\n  const eventsRef = useRef(new Subject<React.KeyboardEvent>());\n  return {\n    keyboardEvents: eventsRef.current,\n    onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => {\n      switch (e.code) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'Enter':\n          eventsRef.current.next(e);\n        default:\n        // ignore\n      }\n    },\n  };\n}\n\ninterface ItemSelection {\n  x: number;\n  y: number;\n}\n\nexport function useSearchKeyboardNavigation(\n  keyboardEvents: Observable<React.KeyboardEvent>,\n  numColumns: number,\n  response: QueryResponse\n): ItemSelection {\n  const highlightIndexRef = useRef<ItemSelection>({ x: 0, y: -1 });\n  const [highlightIndex, setHighlightIndex] = useState<ItemSelection>({ x: 0, y: -1 });\n  const urlsRef = useRef<Field>();\n\n  // Clear selection when the search results change\n  useEffect(() => {\n    urlsRef.current = response.view.fields.url;\n    highlightIndexRef.current.x = 0;\n    highlightIndexRef.current.y = -1;\n    setHighlightIndex({ ...highlightIndexRef.current });\n  }, [response]);\n\n  useEffect(() => {\n    const sub = keyboardEvents.subscribe({\n      next: (keyEvent) => {\n        switch (keyEvent?.code) {\n          case 'ArrowDown': {\n            highlightIndexRef.current.y++;\n            setHighlightIndex({ ...highlightIndexRef.current });\n            break;\n          }\n          case 'ArrowUp':\n            highlightIndexRef.current.y = Math.max(0, highlightIndexRef.current.y - 1);\n            setHighlightIndex({ ...highlightIndexRef.current });\n            break;\n          case 'ArrowRight': {\n            if (numColumns > 0) {\n              highlightIndexRef.current.x = Math.min(numColumns, highlightIndexRef.current.x + 1);\n              setHighlightIndex({ ...highlightIndexRef.current });\n            }\n            break;\n          }\n          case 'ArrowLeft': {\n            if (numColumns > 0) {\n              highlightIndexRef.current.x = Math.max(0, highlightIndexRef.current.x - 1);\n              setHighlightIndex({ ...highlightIndexRef.current });\n            }\n            break;\n          }\n          case 'Enter':\n            if (!urlsRef.current) {\n              break;\n            }\n            const idx = highlightIndexRef.current.x * numColumns + highlightIndexRef.current.y;\n            if (idx < 0) {\n              highlightIndexRef.current.x = 0;\n              highlightIndexRef.current.y = 0;\n              setHighlightIndex({ ...highlightIndexRef.current });\n              break;\n            }\n            const url = urlsRef.current.values?.get(idx) as string;\n            if (url) {\n              locationService.push(locationUtil.stripBaseFromUrl(url));\n            }\n        }\n      },\n    });\n\n    return () => sub.unsubscribe();\n  }, [keyboardEvents, numColumns]);\n\n  return highlightIndex;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}