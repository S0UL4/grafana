{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getDefaultTimeRange, LoadingState } from '@grafana/data';\nimport store from '../../../../../core/store';\nimport { PanelModel } from '../../../state/PanelModel';\nimport { DisplayMode } from '../types';\nexport const PANEL_EDITOR_UI_STATE_STORAGE_KEY = 'grafana.dashboard.editor.ui';\nexport const DEFAULT_PANEL_EDITOR_UI_STATE = {\n  isPanelOptionsVisible: true,\n  rightPaneSize: 400,\n  topPaneSize: 0.45,\n  mode: DisplayMode.Fill\n};\nexport const initialState = () => {\n  const storedUiState = store.getObject(PANEL_EDITOR_UI_STATE_STORAGE_KEY, DEFAULT_PANEL_EDITOR_UI_STATE);\n  let migratedState = Object.assign({}, storedUiState);\n\n  if (typeof storedUiState.topPaneSize === 'string') {\n    migratedState = Object.assign({}, storedUiState, {\n      topPaneSize: parseFloat(storedUiState.topPaneSize) / 100\n    });\n  }\n\n  return {\n    getPanel: () => new PanelModel({}),\n    getSourcePanel: () => new PanelModel({}),\n    getData: () => ({\n      state: LoadingState.NotStarted,\n      series: [],\n      timeRange: getDefaultTimeRange()\n    }),\n    initDone: false,\n    shouldDiscardChanges: false,\n    isOpen: false,\n    isVizPickerOpen: false,\n    tableViewEnabled: false,\n    ui: Object.assign({}, DEFAULT_PANEL_EDITOR_UI_STATE, migratedState)\n  };\n};\nconst pluginsSlice = createSlice({\n  name: 'panelEditor',\n  initialState: initialState(),\n  reducers: {\n    updateEditorInitState: (state, action) => {\n      state.getPanel = () => action.payload.panel;\n\n      state.getSourcePanel = () => action.payload.sourcePanel;\n\n      state.initDone = true;\n      state.isOpen = true;\n      state.shouldDiscardChanges = false;\n    },\n    setEditorPanelData: (state, action) => {\n      state.getData = () => action.payload;\n    },\n    setDiscardChanges: (state, action) => {\n      state.shouldDiscardChanges = action.payload;\n    },\n    setPanelEditorUIState: (state, action) => {\n      state.ui = Object.assign({}, state.ui, action.payload); // Close viz picker if closing options pane\n\n      if (!state.ui.isPanelOptionsVisible && state.isVizPickerOpen) {\n        state.isVizPickerOpen = false;\n      }\n    },\n    toggleVizPicker: (state, action) => {\n      state.isVizPickerOpen = action.payload; // Ensure options pane is opened when viz picker is open\n\n      if (state.isVizPickerOpen) {\n        state.ui.isPanelOptionsVisible = true;\n      }\n    },\n\n    toggleTableView(state) {\n      state.tableViewEnabled = !state.tableViewEnabled;\n    },\n\n    closeEditor: state => {\n      state.isOpen = false;\n      state.initDone = false;\n      state.isVizPickerOpen = false;\n      state.tableViewEnabled = false;\n    }\n  }\n});\nexport const {\n  updateEditorInitState,\n  setEditorPanelData,\n  setDiscardChanges,\n  closeEditor,\n  setPanelEditorUIState,\n  toggleVizPicker,\n  toggleTableView\n} = pluginsSlice.actions;\nexport const panelEditorReducer = pluginsSlice.reducer;\nexport default {\n  panelEditor: panelEditorReducer\n};","map":{"version":3,"names":["createSlice","getDefaultTimeRange","LoadingState","store","PanelModel","DisplayMode","PANEL_EDITOR_UI_STATE_STORAGE_KEY","DEFAULT_PANEL_EDITOR_UI_STATE","isPanelOptionsVisible","rightPaneSize","topPaneSize","mode","Fill","initialState","storedUiState","getObject","migratedState","parseFloat","getPanel","getSourcePanel","getData","state","NotStarted","series","timeRange","initDone","shouldDiscardChanges","isOpen","isVizPickerOpen","tableViewEnabled","ui","pluginsSlice","name","reducers","updateEditorInitState","action","payload","panel","sourcePanel","setEditorPanelData","setDiscardChanges","setPanelEditorUIState","toggleVizPicker","toggleTableView","closeEditor","actions","panelEditorReducer","reducer","panelEditor"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/PanelEditor/state/reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getDefaultTimeRange, LoadingState, PanelData } from '@grafana/data';\n\nimport store from '../../../../../core/store';\nimport { PanelModel } from '../../../state/PanelModel';\nimport { DisplayMode } from '../types';\n\nexport const PANEL_EDITOR_UI_STATE_STORAGE_KEY = 'grafana.dashboard.editor.ui';\n\nexport const DEFAULT_PANEL_EDITOR_UI_STATE: PanelEditorUIState = {\n  isPanelOptionsVisible: true,\n  rightPaneSize: 400,\n  topPaneSize: 0.45,\n  mode: DisplayMode.Fill,\n};\n\nexport interface PanelEditorUIState {\n  /* Visualization options pane visibility */\n  isPanelOptionsVisible: boolean;\n  /* Pixels or percentage */\n  rightPaneSize: number;\n  /* Pixels or percentage */\n  topPaneSize: number;\n  /* Visualization size mode */\n  mode: DisplayMode;\n}\n\nexport interface PanelEditorState {\n  /* These are functions as they are mutated later on and redux toolkit will Object.freeze state so\n   * we need to store these using functions instead */\n  getSourcePanel: () => PanelModel;\n  getPanel: () => PanelModel;\n  getData: () => PanelData;\n  initDone: boolean;\n  shouldDiscardChanges: boolean;\n  isOpen: boolean;\n  ui: PanelEditorUIState;\n  isVizPickerOpen: boolean;\n  tableViewEnabled: boolean;\n}\n\nexport const initialState = (): PanelEditorState => {\n  const storedUiState = store.getObject(PANEL_EDITOR_UI_STATE_STORAGE_KEY, DEFAULT_PANEL_EDITOR_UI_STATE);\n\n  let migratedState = { ...storedUiState };\n\n  if (typeof storedUiState.topPaneSize === 'string') {\n    migratedState = { ...storedUiState, topPaneSize: parseFloat(storedUiState.topPaneSize) / 100 };\n  }\n\n  return {\n    getPanel: () => new PanelModel({}),\n    getSourcePanel: () => new PanelModel({}),\n    getData: () => ({\n      state: LoadingState.NotStarted,\n      series: [],\n      timeRange: getDefaultTimeRange(),\n    }),\n    initDone: false,\n    shouldDiscardChanges: false,\n    isOpen: false,\n    isVizPickerOpen: false,\n    tableViewEnabled: false,\n    ui: {\n      ...DEFAULT_PANEL_EDITOR_UI_STATE,\n      ...migratedState,\n    },\n  };\n};\n\ninterface InitEditorPayload {\n  panel: PanelModel;\n  sourcePanel: PanelModel;\n}\n\nconst pluginsSlice = createSlice({\n  name: 'panelEditor',\n  initialState: initialState(),\n  reducers: {\n    updateEditorInitState: (state, action: PayloadAction<InitEditorPayload>) => {\n      state.getPanel = () => action.payload.panel;\n      state.getSourcePanel = () => action.payload.sourcePanel;\n      state.initDone = true;\n      state.isOpen = true;\n      state.shouldDiscardChanges = false;\n    },\n    setEditorPanelData: (state, action: PayloadAction<PanelData>) => {\n      state.getData = () => action.payload;\n    },\n    setDiscardChanges: (state, action: PayloadAction<boolean>) => {\n      state.shouldDiscardChanges = action.payload;\n    },\n    setPanelEditorUIState: (state, action: PayloadAction<Partial<PanelEditorUIState>>) => {\n      state.ui = { ...state.ui, ...action.payload };\n      // Close viz picker if closing options pane\n      if (!state.ui.isPanelOptionsVisible && state.isVizPickerOpen) {\n        state.isVizPickerOpen = false;\n      }\n    },\n    toggleVizPicker: (state, action: PayloadAction<boolean>) => {\n      state.isVizPickerOpen = action.payload;\n      // Ensure options pane is opened when viz picker is open\n      if (state.isVizPickerOpen) {\n        state.ui.isPanelOptionsVisible = true;\n      }\n    },\n    toggleTableView(state) {\n      state.tableViewEnabled = !state.tableViewEnabled;\n    },\n    closeEditor: (state) => {\n      state.isOpen = false;\n      state.initDone = false;\n      state.isVizPickerOpen = false;\n      state.tableViewEnabled = false;\n    },\n  },\n});\n\nexport const {\n  updateEditorInitState,\n  setEditorPanelData,\n  setDiscardChanges,\n  closeEditor,\n  setPanelEditorUIState,\n  toggleVizPicker,\n  toggleTableView,\n} = pluginsSlice.actions;\n\nexport const panelEditorReducer = pluginsSlice.reducer;\n\nexport default {\n  panelEditor: panelEditorReducer,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}