{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GrafanaPlugin, PluginIncludeType } from './plugin';\n/**\n * @public\n * The app container that is loading another plugin (panel or query editor)\n * */\n\nexport let CoreApp;\n\n(function (CoreApp) {\n  CoreApp[\"CloudAlerting\"] = \"cloud-alerting\";\n  CoreApp[\"UnifiedAlerting\"] = \"unified-alerting\";\n  CoreApp[\"Dashboard\"] = \"dashboard\";\n  CoreApp[\"Explore\"] = \"explore\";\n  CoreApp[\"Unknown\"] = \"unknown\";\n  CoreApp[\"PanelEditor\"] = \"panel-editor\";\n  CoreApp[\"PanelViewer\"] = \"panel-viewer\";\n})(CoreApp || (CoreApp = {}));\n\nexport class AppPlugin extends GrafanaPlugin {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"root\", void 0);\n\n    _defineProperty(this, \"rootNav\", void 0);\n  }\n\n  // Initial navigation model\n\n  /**\n   * Called after the module has loaded, and before the app is used.\n   * This function may be called multiple times on the same instance.\n   * The first time, `this.meta` will be undefined\n   */\n  init(meta) {}\n  /**\n   * Set the component displayed under:\n   *   /a/${plugin-id}/*\n   *\n   * If the NavModel is configured, the page will have a managed frame, otheriwse it has full control.\n   *\n   * NOTE: this structure will change in 7.2+ so that it is managed with a normal react router\n   */\n\n\n  setRootPage(root, rootNav) {\n    this.root = root;\n    this.rootNav = rootNav;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports) {\n    if (pluginExports.ConfigCtrl) {\n      this.angularConfigCtrl = pluginExports.ConfigCtrl;\n    }\n\n    if (this.meta && this.meta.includes) {\n      for (const include of this.meta.includes) {\n        if (include.type === PluginIncludeType.page && include.component) {\n          const exp = pluginExports[include.component];\n\n          if (!exp) {\n            console.warn('App Page uses unknown component: ', include.component, this.meta);\n            continue;\n          }\n        }\n      }\n    }\n  }\n\n}\n/**\n * Defines life cycle of a feature\n * @internal\n */\n\nexport let FeatureState;\n\n(function (FeatureState) {\n  FeatureState[\"alpha\"] = \"alpha\";\n  FeatureState[\"beta\"] = \"beta\";\n})(FeatureState || (FeatureState = {}));","map":{"version":3,"names":["GrafanaPlugin","PluginIncludeType","CoreApp","AppPlugin","init","meta","setRootPage","root","rootNav","setComponentsFromLegacyExports","pluginExports","ConfigCtrl","angularConfigCtrl","includes","include","type","page","component","exp","console","warn","FeatureState"],"sources":["/home/soula/grafana/packages/grafana-data/src/types/app.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { NavModel } from './navModel';\nimport { PluginMeta, GrafanaPlugin, PluginIncludeType } from './plugin';\n\n/**\n * @public\n * The app container that is loading another plugin (panel or query editor)\n * */\nexport enum CoreApp {\n  CloudAlerting = 'cloud-alerting',\n  UnifiedAlerting = 'unified-alerting',\n  Dashboard = 'dashboard',\n  Explore = 'explore',\n  Unknown = 'unknown',\n  PanelEditor = 'panel-editor',\n  PanelViewer = 'panel-viewer',\n}\n\nexport interface AppRootProps<T = KeyValue> {\n  meta: AppPluginMeta<T>;\n  /**\n   * base URL segment for an app, /app/pluginId\n   */\n  basename: string; // The URL path to this page\n\n  /**\n   * Pass the nav model to the container... is there a better way?\n   */\n  onNavChanged: (nav: NavModel) => void;\n\n  /**\n   * The URL query parameters\n   * @deprecated Use react-router instead\n   */\n  query: KeyValue;\n\n  /**\n   * The URL path to this page\n   * @deprecated Use react-router instead\n   */\n  path: string;\n}\n\nexport interface AppPluginMeta<T = KeyValue> extends PluginMeta<T> {\n  // TODO anything specific to apps?\n}\n\nexport class AppPlugin<T = KeyValue> extends GrafanaPlugin<AppPluginMeta<T>> {\n  // Content under: /a/${plugin-id}/*\n  root?: ComponentType<AppRootProps<T>>;\n  rootNav?: NavModel; // Initial navigation model\n\n  /**\n   * Called after the module has loaded, and before the app is used.\n   * This function may be called multiple times on the same instance.\n   * The first time, `this.meta` will be undefined\n   */\n  init(meta: AppPluginMeta) {}\n\n  /**\n   * Set the component displayed under:\n   *   /a/${plugin-id}/*\n   *\n   * If the NavModel is configured, the page will have a managed frame, otheriwse it has full control.\n   *\n   * NOTE: this structure will change in 7.2+ so that it is managed with a normal react router\n   */\n  setRootPage(root: ComponentType<AppRootProps<T>>, rootNav?: NavModel) {\n    this.root = root;\n    this.rootNav = rootNav;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    if (pluginExports.ConfigCtrl) {\n      this.angularConfigCtrl = pluginExports.ConfigCtrl;\n    }\n\n    if (this.meta && this.meta.includes) {\n      for (const include of this.meta.includes) {\n        if (include.type === PluginIncludeType.page && include.component) {\n          const exp = pluginExports[include.component];\n\n          if (!exp) {\n            console.warn('App Page uses unknown component: ', include.component, this.meta);\n            continue;\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Defines life cycle of a feature\n * @internal\n */\nexport enum FeatureState {\n  alpha = 'alpha',\n  beta = 'beta',\n}\n"],"mappings":";;AAIA,SAAqBA,aAArB,EAAoCC,iBAApC,QAA6D,UAA7D;AAEA;AACA;AACA;AACA;;AACA,WAAYC,OAAZ;;WAAYA,O;EAAAA,O;EAAAA,O;EAAAA,O;EAAAA,O;EAAAA,O;EAAAA,O;EAAAA,O;GAAAA,O,KAAAA,O;;AAuCZ,OAAO,MAAMC,SAAN,SAAsCH,aAAtC,CAAsE;EAAA;IAAA;;IAAA;;IAAA;EAAA;;EAGvD;;EAEpB;AACF;AACA;AACA;AACA;EACEI,IAAI,CAACC,IAAD,EAAsB,CAAE;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,WAAW,CAACC,IAAD,EAAuCC,OAAvC,EAA2D;IACpE,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,OAAO,IAAP;EACD;;EAEDC,8BAA8B,CAACC,aAAD,EAAqB;IACjD,IAAIA,aAAa,CAACC,UAAlB,EAA8B;MAC5B,KAAKC,iBAAL,GAAyBF,aAAa,CAACC,UAAvC;IACD;;IAED,IAAI,KAAKN,IAAL,IAAa,KAAKA,IAAL,CAAUQ,QAA3B,EAAqC;MACnC,KAAK,MAAMC,OAAX,IAAsB,KAAKT,IAAL,CAAUQ,QAAhC,EAA0C;QACxC,IAAIC,OAAO,CAACC,IAAR,KAAiBd,iBAAiB,CAACe,IAAnC,IAA2CF,OAAO,CAACG,SAAvD,EAAkE;UAChE,MAAMC,GAAG,GAAGR,aAAa,CAACI,OAAO,CAACG,SAAT,CAAzB;;UAEA,IAAI,CAACC,GAAL,EAAU;YACRC,OAAO,CAACC,IAAR,CAAa,mCAAb,EAAkDN,OAAO,CAACG,SAA1D,EAAqE,KAAKZ,IAA1E;YACA;UACD;QACF;MACF;IACF;EACF;;AA3C0E;AA8C7E;AACA;AACA;AACA;;AACA,WAAYgB,YAAZ;;WAAYA,Y;EAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y"},"metadata":{},"sourceType":"module"}