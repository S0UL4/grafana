{"ast":null,"code":"import { cx, css } from '@emotion/css';\nimport React from 'react';\nimport { stylesFactory } from '../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst getStyles = stylesFactory((inlineList = false) => ({\n  list: css`\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  `,\n  item: css`\n    display: ${inlineList && 'inline-block' || 'block'};\n  `\n}));\nexport class AbstractList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      items,\n      renderItem,\n      getItemKey,\n      className,\n      inline\n    } = this.props;\n    const styles = getStyles(inline);\n    return /*#__PURE__*/_jsx(\"ul\", {\n      className: cx(styles.list, className),\n      children: items.map((item, i) => {\n        return /*#__PURE__*/_jsx(\"li\", {\n          className: styles.item,\n          children: renderItem(item, i)\n        }, getItemKey ? getItemKey(item) : i);\n      })\n    });\n  }\n\n}","map":{"version":3,"names":["cx","css","React","stylesFactory","getStyles","inlineList","list","item","AbstractList","PureComponent","constructor","props","render","items","renderItem","getItemKey","className","inline","styles","map","i"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/List/AbstractList.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { stylesFactory } from '../../themes';\n\nexport interface ListProps<T> {\n  items: T[];\n  renderItem: (item: T, index: number) => JSX.Element;\n  getItemKey?: (item: T) => string;\n  className?: string;\n}\n\ninterface AbstractListProps<T> extends ListProps<T> {\n  inline?: boolean;\n}\n\nconst getStyles = stylesFactory((inlineList = false) => ({\n  list: css`\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  `,\n\n  item: css`\n    display: ${(inlineList && 'inline-block') || 'block'};\n  `,\n}));\n\nexport class AbstractList<T> extends React.PureComponent<AbstractListProps<T>> {\n  constructor(props: AbstractListProps<T>) {\n    super(props);\n  }\n\n  render() {\n    const { items, renderItem, getItemKey, className, inline } = this.props;\n    const styles = getStyles(inline);\n\n    return (\n      <ul className={cx(styles.list, className)}>\n        {items.map((item, i) => {\n          return (\n            <li className={styles.item} key={getItemKey ? getItemKey(item) : i}>\n              {renderItem(item, i)}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n"],"mappings":"AAAA,SAASA,EAAT,EAAaC,GAAb,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,cAA9B;;AAaA,MAAMC,SAAS,GAAGD,aAAa,CAAC,CAACE,UAAU,GAAG,KAAd,MAAyB;EACvDC,IAAI,EAAEL,GAAI;AACZ;AACA;AACA;AACA,GALyD;EAOvDM,IAAI,EAAEN,GAAI;AACZ,eAAgBI,UAAU,IAAI,cAAf,IAAkC,OAAQ;AACzD;AATyD,CAAzB,CAAD,CAA/B;AAYA,OAAO,MAAMG,YAAN,SAA8BN,KAAK,CAACO,aAApC,CAAwE;EAC7EC,WAAW,CAACC,KAAD,EAA8B;IACvC,MAAMA,KAAN;EACD;;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC,UAAT;MAAqBC,UAArB;MAAiCC,SAAjC;MAA4CC;IAA5C,IAAuD,KAAKN,KAAlE;IACA,MAAMO,MAAM,GAAGd,SAAS,CAACa,MAAD,CAAxB;IAEA,oBACE;MAAI,SAAS,EAAEjB,EAAE,CAACkB,MAAM,CAACZ,IAAR,EAAcU,SAAd,CAAjB;MAAA,UACGH,KAAK,CAACM,GAAN,CAAU,CAACZ,IAAD,EAAOa,CAAP,KAAa;QACtB,oBACE;UAAI,SAAS,EAAEF,MAAM,CAACX,IAAtB;UAAA,UACGO,UAAU,CAACP,IAAD,EAAOa,CAAP;QADb,GAAiCL,UAAU,GAAGA,UAAU,CAACR,IAAD,CAAb,GAAsBa,CAAjE,CADF;MAKD,CANA;IADH,EADF;EAWD;;AApB4E"},"metadata":{},"sourceType":"module"}