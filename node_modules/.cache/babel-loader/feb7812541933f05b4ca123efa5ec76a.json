{"ast":null,"code":"import React, { useEffect, useMemo, useState } from 'react';\nimport { Input, Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SelectWithAdd = ({\n  value,\n  onChange,\n  options,\n  className,\n  placeholder,\n  width,\n  custom,\n  onCustomChange,\n  disabled = false,\n  addLabel = '+ Add new',\n  'aria-label': ariaLabel\n}) => {\n  const [isCustom, setIsCustom] = useState(custom);\n  useEffect(() => {\n    if (custom) {\n      setIsCustom(custom);\n    }\n  }, [custom]);\n\n  const _options = useMemo(() => [...options, {\n    value: '__add__',\n    label: addLabel\n  }], [options, addLabel]);\n\n  if (isCustom) {\n    return /*#__PURE__*/_jsx(Input, {\n      \"aria-label\": ariaLabel,\n      width: width,\n      autoFocus: !custom,\n      value: value || '',\n      placeholder: placeholder,\n      className: className,\n      disabled: disabled,\n      onChange: e => onChange(e.target.value)\n    });\n  } else {\n    return /*#__PURE__*/_jsx(Select, {\n      \"aria-label\": ariaLabel,\n      width: width,\n      options: _options,\n      value: value,\n      className: className,\n      placeholder: placeholder,\n      disabled: disabled,\n      onChange: val => {\n        const value = val === null || val === void 0 ? void 0 : val.value;\n\n        if (value === '__add__') {\n          setIsCustom(true);\n\n          if (onCustomChange) {\n            onCustomChange(true);\n          }\n\n          onChange('');\n        } else {\n          onChange(value);\n        }\n      }\n    });\n  }\n};","map":{"version":3,"names":["React","useEffect","useMemo","useState","Input","Select","SelectWithAdd","value","onChange","options","className","placeholder","width","custom","onCustomChange","disabled","addLabel","ariaLabel","isCustom","setIsCustom","_options","label","e","target","val"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-editor/SelectWIthAdd.tsx"],"sourcesContent":["import React, { FC, useEffect, useMemo, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Input, Select } from '@grafana/ui';\n\ninterface Props {\n  onChange: (value: string) => void;\n  options: Array<SelectableValue<string>>;\n  value?: string;\n  addLabel?: string;\n  className?: string;\n  placeholder?: string;\n  custom?: boolean;\n  onCustomChange?: (custom: boolean) => void;\n  width?: number;\n  disabled?: boolean;\n  'aria-label'?: string;\n}\n\nexport const SelectWithAdd: FC<Props> = ({\n  value,\n  onChange,\n  options,\n  className,\n  placeholder,\n  width,\n  custom,\n  onCustomChange,\n  disabled = false,\n  addLabel = '+ Add new',\n  'aria-label': ariaLabel,\n}) => {\n  const [isCustom, setIsCustom] = useState(custom);\n\n  useEffect(() => {\n    if (custom) {\n      setIsCustom(custom);\n    }\n  }, [custom]);\n\n  const _options = useMemo(\n    (): Array<SelectableValue<string>> => [...options, { value: '__add__', label: addLabel }],\n    [options, addLabel]\n  );\n\n  if (isCustom) {\n    return (\n      <Input\n        aria-label={ariaLabel}\n        width={width}\n        autoFocus={!custom}\n        value={value || ''}\n        placeholder={placeholder}\n        className={className}\n        disabled={disabled}\n        onChange={(e) => onChange((e.target as HTMLInputElement).value)}\n      />\n    );\n  } else {\n    return (\n      <Select\n        aria-label={ariaLabel}\n        width={width}\n        options={_options}\n        value={value}\n        className={className}\n        placeholder={placeholder}\n        disabled={disabled}\n        onChange={(val: SelectableValue) => {\n          const value = val?.value;\n          if (value === '__add__') {\n            setIsCustom(true);\n            if (onCustomChange) {\n              onCustomChange(true);\n            }\n            onChange('');\n          } else {\n            onChange(value);\n          }\n        }}\n      />\n    );\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,QAAxC,QAAwD,OAAxD;AAGA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,aAA9B;;AAgBA,OAAO,MAAMC,aAAwB,GAAG,CAAC;EACvCC,KADuC;EAEvCC,QAFuC;EAGvCC,OAHuC;EAIvCC,SAJuC;EAKvCC,WALuC;EAMvCC,KANuC;EAOvCC,MAPuC;EAQvCC,cARuC;EASvCC,QAAQ,GAAG,KAT4B;EAUvCC,QAAQ,GAAG,WAV4B;EAWvC,cAAcC;AAXyB,CAAD,KAYlC;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACU,MAAD,CAAxC;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAIY,MAAJ,EAAY;MACVM,WAAW,CAACN,MAAD,CAAX;IACD;EACF,CAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;;EAMA,MAAMO,QAAQ,GAAGlB,OAAO,CACtB,MAAsC,CAAC,GAAGO,OAAJ,EAAa;IAAEF,KAAK,EAAE,SAAT;IAAoBc,KAAK,EAAEL;EAA3B,CAAb,CADhB,EAEtB,CAACP,OAAD,EAAUO,QAAV,CAFsB,CAAxB;;EAKA,IAAIE,QAAJ,EAAc;IACZ,oBACE,KAAC,KAAD;MACE,cAAYD,SADd;MAEE,KAAK,EAAEL,KAFT;MAGE,SAAS,EAAE,CAACC,MAHd;MAIE,KAAK,EAAEN,KAAK,IAAI,EAJlB;MAKE,WAAW,EAAEI,WALf;MAME,SAAS,EAAED,SANb;MAOE,QAAQ,EAAEK,QAPZ;MAQE,QAAQ,EAAGO,CAAD,IAAOd,QAAQ,CAAEc,CAAC,CAACC,MAAH,CAA+BhB,KAAhC;IAR3B,EADF;EAYD,CAbD,MAaO;IACL,oBACE,KAAC,MAAD;MACE,cAAYU,SADd;MAEE,KAAK,EAAEL,KAFT;MAGE,OAAO,EAAEQ,QAHX;MAIE,KAAK,EAAEb,KAJT;MAKE,SAAS,EAAEG,SALb;MAME,WAAW,EAAEC,WANf;MAOE,QAAQ,EAAEI,QAPZ;MAQE,QAAQ,EAAGS,GAAD,IAA0B;QAClC,MAAMjB,KAAK,GAAGiB,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEjB,KAAnB;;QACA,IAAIA,KAAK,KAAK,SAAd,EAAyB;UACvBY,WAAW,CAAC,IAAD,CAAX;;UACA,IAAIL,cAAJ,EAAoB;YAClBA,cAAc,CAAC,IAAD,CAAd;UACD;;UACDN,QAAQ,CAAC,EAAD,CAAR;QACD,CAND,MAMO;UACLA,QAAQ,CAACD,KAAD,CAAR;QACD;MACF;IAnBH,EADF;EAuBD;AACF,CAhEM"},"metadata":{},"sourceType":"module"}