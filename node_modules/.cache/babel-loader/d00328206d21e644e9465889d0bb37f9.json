{"ast":null,"code":"var _h, _Icon;\n\nimport React, { useState } from 'react';\nimport { Button, Icon, InlineField, InlineFieldRow, Input } from '@grafana/ui';\nimport MappingsHelp from './MappingsHelp';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const MappingsConfiguration = props => {\n  const [mappings, setMappings] = useState(props.mappings || []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h3\", {\n      className: \"page-heading\",\n      children: \"Label mappings\"\n    })), !props.showHelp && /*#__PURE__*/_jsx(\"p\", {\n      children: /*#__PURE__*/_jsx(Button, {\n        fill: \"text\",\n        onClick: props.onRestoreHelp,\n        children: \"Learn how label mappings work\"\n      })\n    }), props.showHelp && /*#__PURE__*/_jsx(MappingsHelp, {\n      onDismiss: props.onDismiss\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"gf-form-group\",\n      children: [mappings.map((mapping, i) => /*#__PURE__*/_jsxs(InlineFieldRow, {\n        children: [/*#__PURE__*/_jsx(InlineField, {\n          label: `Mapping (${i + 1})`,\n          children: /*#__PURE__*/_jsx(Input, {\n            width: 50,\n            onChange: changeEvent => {\n              let newMappings = mappings.concat();\n              newMappings[i] = changeEvent.target.value;\n              setMappings(newMappings);\n            },\n            onBlur: () => {\n              props.onChange(mappings);\n            },\n            placeholder: \"e.g. test.metric.(labelName).*\",\n            value: mapping\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"button\",\n          \"aria-label\": \"Remove header\",\n          variant: \"secondary\",\n          size: \"xs\",\n          onClick: _ => {\n            let newMappings = mappings.concat();\n            newMappings.splice(i, 1);\n            setMappings(newMappings);\n            props.onChange(newMappings);\n          },\n          children: _Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n            name: \"trash-alt\"\n          }))\n        })]\n      }, i)), /*#__PURE__*/_jsx(Button, {\n        variant: \"secondary\",\n        icon: \"plus\",\n        type: \"button\",\n        onClick: () => {\n          setMappings([...mappings, '']);\n        },\n        children: \"Add label mapping\"\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Button","Icon","InlineField","InlineFieldRow","Input","MappingsHelp","MappingsConfiguration","props","mappings","setMappings","showHelp","onRestoreHelp","onDismiss","map","mapping","i","changeEvent","newMappings","concat","target","value","onChange","_","splice"],"sources":["/home/soula/grafana/public/app/plugins/datasource/graphite/configuration/MappingsConfiguration.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from 'react';\n\nimport { Button, Icon, InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport MappingsHelp from './MappingsHelp';\n\ntype Props = {\n  mappings: string[];\n  onChange: (mappings: string[]) => void;\n  onDismiss: () => void;\n  onRestoreHelp: () => void;\n  showHelp: boolean;\n};\n\nexport const MappingsConfiguration = (props: Props): JSX.Element => {\n  const [mappings, setMappings] = useState(props.mappings || []);\n\n  return (\n    <div>\n      <h3 className=\"page-heading\">Label mappings</h3>\n      {!props.showHelp && (\n        <p>\n          <Button fill=\"text\" onClick={props.onRestoreHelp}>\n            Learn how label mappings work\n          </Button>\n        </p>\n      )}\n      {props.showHelp && <MappingsHelp onDismiss={props.onDismiss} />}\n\n      <div className=\"gf-form-group\">\n        {mappings.map((mapping, i) => (\n          <InlineFieldRow key={i}>\n            <InlineField label={`Mapping (${i + 1})`}>\n              <Input\n                width={50}\n                onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                  let newMappings = mappings.concat();\n                  newMappings[i] = changeEvent.target.value;\n                  setMappings(newMappings);\n                }}\n                onBlur={() => {\n                  props.onChange(mappings);\n                }}\n                placeholder=\"e.g. test.metric.(labelName).*\"\n                value={mapping}\n              />\n            </InlineField>\n            <Button\n              type=\"button\"\n              aria-label=\"Remove header\"\n              variant=\"secondary\"\n              size=\"xs\"\n              onClick={(_) => {\n                let newMappings = mappings.concat();\n                newMappings.splice(i, 1);\n                setMappings(newMappings);\n                props.onChange(newMappings);\n              }}\n            >\n              <Icon name=\"trash-alt\" />\n            </Button>\n          </InlineFieldRow>\n        ))}\n        <Button\n          variant=\"secondary\"\n          icon=\"plus\"\n          type=\"button\"\n          onClick={() => {\n            setMappings([...mappings, '']);\n          }}\n        >\n          Add label mapping\n        </Button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,cAApC,EAAoDC,KAApD,QAAiE,aAAjE;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAUA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAA+B;EAClE,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACQ,KAAK,CAACC,QAAN,IAAkB,EAAnB,CAAxC;EAEA,oBACE;IAAA,oCACE;MAAI,SAAS,EAAC,cAAd;MAAA;IAAA,EADF,GAEG,CAACD,KAAK,CAACG,QAAP,iBACC;MAAA,uBACE,KAAC,MAAD;QAAQ,IAAI,EAAC,MAAb;QAAoB,OAAO,EAAEH,KAAK,CAACI,aAAnC;QAAA;MAAA;IADF,EAHJ,EASGJ,KAAK,CAACG,QAAN,iBAAkB,KAAC,YAAD;MAAc,SAAS,EAAEH,KAAK,CAACK;IAA/B,EATrB,eAWE;MAAK,SAAS,EAAC,eAAf;MAAA,WACGJ,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ,MAAC,cAAD;QAAA,wBACE,KAAC,WAAD;UAAa,KAAK,EAAG,YAAWA,CAAC,GAAG,CAAE,GAAtC;UAAA,uBACE,KAAC,KAAD;YACE,KAAK,EAAE,EADT;YAEE,QAAQ,EAAGC,WAAD,IAAgD;cACxD,IAAIC,WAAW,GAAGT,QAAQ,CAACU,MAAT,EAAlB;cACAD,WAAW,CAACF,CAAD,CAAX,GAAiBC,WAAW,CAACG,MAAZ,CAAmBC,KAApC;cACAX,WAAW,CAACQ,WAAD,CAAX;YACD,CANH;YAOE,MAAM,EAAE,MAAM;cACZV,KAAK,CAACc,QAAN,CAAeb,QAAf;YACD,CATH;YAUE,WAAW,EAAC,gCAVd;YAWE,KAAK,EAAEM;UAXT;QADF,EADF,eAgBE,KAAC,MAAD;UACE,IAAI,EAAC,QADP;UAEE,cAAW,eAFb;UAGE,OAAO,EAAC,WAHV;UAIE,IAAI,EAAC,IAJP;UAKE,OAAO,EAAGQ,CAAD,IAAO;YACd,IAAIL,WAAW,GAAGT,QAAQ,CAACU,MAAT,EAAlB;YACAD,WAAW,CAACM,MAAZ,CAAmBR,CAAnB,EAAsB,CAAtB;YACAN,WAAW,CAACQ,WAAD,CAAX;YACAV,KAAK,CAACc,QAAN,CAAeJ,WAAf;UACD,CAVH;UAAA,yCAYE,KAAC,IAAD;YAAM,IAAI,EAAC;UAAX,EAZF;QAAA,EAhBF;MAAA,GAAqBF,CAArB,CADD,CADH,eAkCE,KAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,QAHP;QAIE,OAAO,EAAE,MAAM;UACbN,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,EAAd,CAAD,CAAX;QACD,CANH;QAAA;MAAA,EAlCF;IAAA,EAXF;EAAA,EADF;AA2DD,CA9DM"},"metadata":{},"sourceType":"module"}