{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { Card, useStyles2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst RuleType = props => {\n  const {\n    name,\n    description,\n    image,\n    selected = false,\n    value,\n    onClick,\n    disabled = false\n  } = props;\n  const styles = useStyles2(getStyles);\n  const cardStyles = cx({\n    [styles.wrapper]: true,\n    [styles.disabled]: disabled\n  });\n  return /*#__PURE__*/_jsxs(Card, {\n    className: cardStyles,\n    isSelected: selected,\n    onClick: () => onClick(value),\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(Card.Figure, {\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: image\n      })\n    }), /*#__PURE__*/_jsx(Card.Heading, {\n      children: name\n    }), /*#__PURE__*/_jsx(Card.Description, {\n      children: description\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  wrapper: css`\n    width: 380px;\n    cursor: pointer;\n    user-select: none;\n  `,\n  disabled: css`\n    opacity: 0.5;\n  `\n});\n\nexport { RuleType };","map":{"version":3,"names":["css","cx","React","Card","useStyles2","RuleType","props","name","description","image","selected","value","onClick","disabled","styles","getStyles","cardStyles","wrapper","theme"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/rule-editor/rule-types/RuleType.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { FC, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, useStyles2 } from '@grafana/ui';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\ninterface Props extends SharedProps {\n  image: string;\n  name: string;\n  description: ReactNode;\n  value: RuleFormType;\n}\n\n// these properties are shared between all Rule Types\nexport interface SharedProps {\n  selected?: boolean;\n  disabled?: boolean;\n  onClick: (value: RuleFormType) => void;\n}\n\nconst RuleType: FC<Props> = (props) => {\n  const { name, description, image, selected = false, value, onClick, disabled = false } = props;\n  const styles = useStyles2(getStyles);\n\n  const cardStyles = cx({\n    [styles.wrapper]: true,\n    [styles.disabled]: disabled,\n  });\n\n  return (\n    <Card className={cardStyles} isSelected={selected} onClick={() => onClick(value)} disabled={disabled}>\n      <Card.Figure>\n        <img src={image} />\n      </Card.Figure>\n      <Card.Heading>{name}</Card.Heading>\n      <Card.Description>{description}</Card.Description>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    width: 380px;\n    cursor: pointer;\n    user-select: none;\n  `,\n  disabled: css`\n    opacity: 0.5;\n  `,\n});\n\nexport { RuleType };\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAqC,OAArC;AAGA,SAASC,IAAT,EAAeC,UAAf,QAAiC,aAAjC;;;;AAkBA,MAAMC,QAAmB,GAAIC,KAAD,IAAW;EACrC,MAAM;IAAEC,IAAF;IAAQC,WAAR;IAAqBC,KAArB;IAA4BC,QAAQ,GAAG,KAAvC;IAA8CC,KAA9C;IAAqDC,OAArD;IAA8DC,QAAQ,GAAG;EAAzE,IAAmFP,KAAzF;EACA,MAAMQ,MAAM,GAAGV,UAAU,CAACW,SAAD,CAAzB;EAEA,MAAMC,UAAU,GAAGf,EAAE,CAAC;IACpB,CAACa,MAAM,CAACG,OAAR,GAAkB,IADE;IAEpB,CAACH,MAAM,CAACD,QAAR,GAAmBA;EAFC,CAAD,CAArB;EAKA,oBACE,MAAC,IAAD;IAAM,SAAS,EAAEG,UAAjB;IAA6B,UAAU,EAAEN,QAAzC;IAAmD,OAAO,EAAE,MAAME,OAAO,CAACD,KAAD,CAAzE;IAAkF,QAAQ,EAAEE,QAA5F;IAAA,wBACE,KAAC,IAAD,CAAM,MAAN;MAAA,uBACE;QAAK,GAAG,EAAEJ;MAAV;IADF,EADF,eAIE,KAAC,IAAD,CAAM,OAAN;MAAA,UAAeF;IAAf,EAJF,eAKE,KAAC,IAAD,CAAM,WAAN;MAAA,UAAmBC;IAAnB,EALF;EAAA,EADF;AASD,CAlBD;;AAoBA,MAAMO,SAAS,GAAIG,KAAD,KAA2B;EAC3CD,OAAO,EAAEjB,GAAI;AACf;AACA;AACA;AACA,GAL6C;EAM3Ca,QAAQ,EAAEb,GAAI;AAChB;AACA;AAR6C,CAA3B,CAAlB;;AAWA,SAASK,QAAT"},"metadata":{},"sourceType":"module"}