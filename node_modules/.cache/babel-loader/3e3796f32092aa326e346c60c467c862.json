{"ast":null,"code":"import { parseAtomFeed } from './atom';\nimport { parseRSSFeed } from './rss';\nexport async function fetchFeedText(url) {\n  const rsp = await fetch(url);\n  const txt = await rsp.text();\n  return txt;\n}\nexport function isAtomFeed(txt) {\n  const domParser = new DOMParser();\n  const doc = domParser.parseFromString(txt, 'text/xml');\n  return doc.querySelector('feed') !== null;\n}\nexport function getProperty(node, property) {\n  var _propNode$textContent;\n\n  const propNode = node.querySelector(property);\n  return (_propNode$textContent = propNode === null || propNode === void 0 ? void 0 : propNode.textContent) !== null && _propNode$textContent !== void 0 ? _propNode$textContent : '';\n}\nexport async function loadFeed(url) {\n  const res = await fetchFeedText(url);\n  const parsedFeed = isAtomFeed(res) ? parseAtomFeed(res) : parseRSSFeed(res);\n  return parsedFeed;\n}","map":{"version":3,"names":["parseAtomFeed","parseRSSFeed","fetchFeedText","url","rsp","fetch","txt","text","isAtomFeed","domParser","DOMParser","doc","parseFromString","querySelector","getProperty","node","property","propNode","textContent","loadFeed","res","parsedFeed"],"sources":["/home/soula/grafana/public/app/plugins/panel/news/feed.ts"],"sourcesContent":["import { parseAtomFeed } from './atom';\nimport { parseRSSFeed } from './rss';\n\nexport async function fetchFeedText(url: string) {\n  const rsp = await fetch(url);\n  const txt = await rsp.text();\n  return txt;\n}\n\nexport function isAtomFeed(txt: string) {\n  const domParser = new DOMParser();\n  const doc = domParser.parseFromString(txt, 'text/xml');\n  return doc.querySelector('feed') !== null;\n}\n\nexport function getProperty(node: Element, property: string): string {\n  const propNode = node.querySelector(property);\n  return propNode?.textContent ?? '';\n}\n\nexport async function loadFeed(url: string) {\n  const res = await fetchFeedText(url);\n  const parsedFeed = isAtomFeed(res) ? parseAtomFeed(res) : parseRSSFeed(res);\n  return parsedFeed;\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,QAA9B;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,OAAO,eAAeC,aAAf,CAA6BC,GAA7B,EAA0C;EAC/C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;EACA,MAAMG,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlB;EACA,OAAOD,GAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBF,GAApB,EAAiC;EACtC,MAAMG,SAAS,GAAG,IAAIC,SAAJ,EAAlB;EACA,MAAMC,GAAG,GAAGF,SAAS,CAACG,eAAV,CAA0BN,GAA1B,EAA+B,UAA/B,CAAZ;EACA,OAAOK,GAAG,CAACE,aAAJ,CAAkB,MAAlB,MAA8B,IAArC;AACD;AAED,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAAoCC,QAApC,EAA8D;EAAA;;EACnE,MAAMC,QAAQ,GAAGF,IAAI,CAACF,aAAL,CAAmBG,QAAnB,CAAjB;EACA,gCAAOC,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEC,WAAjB,yEAAgC,EAAhC;AACD;AAED,OAAO,eAAeC,QAAf,CAAwBhB,GAAxB,EAAqC;EAC1C,MAAMiB,GAAG,GAAG,MAAMlB,aAAa,CAACC,GAAD,CAA/B;EACA,MAAMkB,UAAU,GAAGb,UAAU,CAACY,GAAD,CAAV,GAAkBpB,aAAa,CAACoB,GAAD,CAA/B,GAAuCnB,YAAY,CAACmB,GAAD,CAAtE;EACA,OAAOC,UAAP;AACD"},"metadata":{},"sourceType":"module"}