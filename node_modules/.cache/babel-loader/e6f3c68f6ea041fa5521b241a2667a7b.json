{"ast":null,"code":"import React from 'react';\nimport { OperationExplainedBox } from './OperationExplainedBox';\nimport { RawQuery } from './RawQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function OperationListExplained({\n  query,\n  queryModeller,\n  stepNumber,\n  lang\n}) {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: query.operations.map((op, index) => {\n      var _def$documentation;\n\n      const def = queryModeller.getOperationDef(op.id);\n\n      if (!def) {\n        return `Operation ${op.id} not found`;\n      }\n\n      const title = def.renderer(op, def, '<expr>');\n      const body = def.explainHandler ? def.explainHandler(op, def) : (_def$documentation = def.documentation) !== null && _def$documentation !== void 0 ? _def$documentation : 'no docs';\n      return /*#__PURE__*/_jsx(OperationExplainedBox, {\n        stepNumber: index + stepNumber,\n        title: /*#__PURE__*/_jsx(RawQuery, {\n          query: title,\n          lang: lang\n        }),\n        markdown: body\n      }, index);\n    })\n  });\n}","map":{"version":3,"names":["React","OperationExplainedBox","RawQuery","OperationListExplained","query","queryModeller","stepNumber","lang","operations","map","op","index","def","getOperationDef","id","title","renderer","body","explainHandler","documentation"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/shared/OperationListExplained.tsx"],"sourcesContent":["import { Grammar } from 'prismjs';\nimport React from 'react';\n\nimport { OperationExplainedBox } from './OperationExplainedBox';\nimport { RawQuery } from './RawQuery';\nimport { QueryWithOperations, VisualQueryModeller } from './types';\n\nexport interface Props<T extends QueryWithOperations> {\n  query: T;\n  queryModeller: VisualQueryModeller;\n  explainMode?: boolean;\n  stepNumber: number;\n  lang: {\n    grammar: Grammar;\n    name: string;\n  };\n}\n\nexport function OperationListExplained<T extends QueryWithOperations>({\n  query,\n  queryModeller,\n  stepNumber,\n  lang,\n}: Props<T>) {\n  return (\n    <>\n      {query.operations.map((op, index) => {\n        const def = queryModeller.getOperationDef(op.id);\n        if (!def) {\n          return `Operation ${op.id} not found`;\n        }\n        const title = def.renderer(op, def, '<expr>');\n        const body = def.explainHandler ? def.explainHandler(op, def) : def.documentation ?? 'no docs';\n\n        return (\n          <OperationExplainedBox\n            stepNumber={index + stepNumber}\n            key={index}\n            title={<RawQuery query={title} lang={lang} />}\n            markdown={body}\n          />\n        );\n      })}\n    </>\n  );\n}\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAcA,OAAO,SAASC,sBAAT,CAA+D;EACpEC,KADoE;EAEpEC,aAFoE;EAGpEC,UAHoE;EAIpEC;AAJoE,CAA/D,EAKM;EACX,oBACE;IAAA,UACGH,KAAK,CAACI,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,EAAD,EAAKC,KAAL,KAAe;MAAA;;MACnC,MAAMC,GAAG,GAAGP,aAAa,CAACQ,eAAd,CAA8BH,EAAE,CAACI,EAAjC,CAAZ;;MACA,IAAI,CAACF,GAAL,EAAU;QACR,OAAQ,aAAYF,EAAE,CAACI,EAAG,YAA1B;MACD;;MACD,MAAMC,KAAK,GAAGH,GAAG,CAACI,QAAJ,CAAaN,EAAb,EAAiBE,GAAjB,EAAsB,QAAtB,CAAd;MACA,MAAMK,IAAI,GAAGL,GAAG,CAACM,cAAJ,GAAqBN,GAAG,CAACM,cAAJ,CAAmBR,EAAnB,EAAuBE,GAAvB,CAArB,yBAAmDA,GAAG,CAACO,aAAvD,mEAAwE,SAArF;MAEA,oBACE,KAAC,qBAAD;QACE,UAAU,EAAER,KAAK,GAAGL,UADtB;QAGE,KAAK,eAAE,KAAC,QAAD;UAAU,KAAK,EAAES,KAAjB;UAAwB,IAAI,EAAER;QAA9B,EAHT;QAIE,QAAQ,EAAEU;MAJZ,GAEON,KAFP,CADF;IAQD,CAhBA;EADH,EADF;AAqBD"},"metadata":{},"sourceType":"module"}