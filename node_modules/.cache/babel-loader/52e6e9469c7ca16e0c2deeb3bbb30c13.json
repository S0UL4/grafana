{"ast":null,"code":"import { cx } from '@emotion/css';\nimport { Global } from '@emotion/react';\nimport { Range as RangeComponent, createSliderWithTooltip } from 'rc-slider';\nimport React from 'react';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { getStyles } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * @public\n *\n * RichHistoryQueriesTab uses this Range Component\n */\nexport const RangeSlider = ({\n  min,\n  max,\n  onChange,\n  onAfterChange,\n  orientation = 'horizontal',\n  reverse,\n  step,\n  formatTooltipResult,\n  value,\n  tooltipAlwaysVisible = true\n}) => {\n  const isHorizontal = orientation === 'horizontal';\n  const theme = useTheme2();\n  const styles = getStyles(theme, isHorizontal);\n  const RangeWithTooltip = createSliderWithTooltip(RangeComponent);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cx(styles.container, styles.slider),\n    children: [/*#__PURE__*/_jsx(Global, {\n      styles: styles.tooltip\n    }), /*#__PURE__*/_jsx(RangeWithTooltip, {\n      tipProps: {\n        visible: tooltipAlwaysVisible,\n        placement: isHorizontal ? 'top' : 'right'\n      },\n      min: min,\n      max: max,\n      step: step,\n      defaultValue: value,\n      tipFormatter: value => formatTooltipResult ? formatTooltipResult(value) : value,\n      onChange: onChange,\n      onAfterChange: onAfterChange,\n      vertical: !isHorizontal,\n      reverse: reverse\n    })]\n  });\n};\nRangeSlider.displayName = 'Range';","map":{"version":3,"names":["cx","Global","Range","RangeComponent","createSliderWithTooltip","React","useTheme2","getStyles","RangeSlider","min","max","onChange","onAfterChange","orientation","reverse","step","formatTooltipResult","value","tooltipAlwaysVisible","isHorizontal","theme","styles","RangeWithTooltip","container","slider","tooltip","visible","placement","displayName"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/Slider/RangeSlider.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport { Global } from '@emotion/react';\nimport { Range as RangeComponent, createSliderWithTooltip } from 'rc-slider';\nimport React, { FunctionComponent } from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\n\nimport { getStyles } from './styles';\nimport { RangeSliderProps } from './types';\n\n/**\n * @public\n *\n * RichHistoryQueriesTab uses this Range Component\n */\nexport const RangeSlider: FunctionComponent<RangeSliderProps> = ({\n  min,\n  max,\n  onChange,\n  onAfterChange,\n  orientation = 'horizontal',\n  reverse,\n  step,\n  formatTooltipResult,\n  value,\n  tooltipAlwaysVisible = true,\n}) => {\n  const isHorizontal = orientation === 'horizontal';\n  const theme = useTheme2();\n  const styles = getStyles(theme, isHorizontal);\n  const RangeWithTooltip = createSliderWithTooltip(RangeComponent);\n  return (\n    <div className={cx(styles.container, styles.slider)}>\n      {/** Slider tooltip's parent component is body and therefore we need Global component to do css overrides for it. */}\n      <Global styles={styles.tooltip} />\n      <RangeWithTooltip\n        tipProps={{\n          visible: tooltipAlwaysVisible,\n          placement: isHorizontal ? 'top' : 'right',\n        }}\n        min={min}\n        max={max}\n        step={step}\n        defaultValue={value}\n        tipFormatter={(value: number) => (formatTooltipResult ? formatTooltipResult(value) : value)}\n        onChange={onChange}\n        onAfterChange={onAfterChange}\n        vertical={!isHorizontal}\n        reverse={reverse}\n      />\n    </div>\n  );\n};\n\nRangeSlider.displayName = 'Range';\n"],"mappings":"AAAA,SAASA,EAAT,QAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,KAAK,IAAIC,cAAlB,EAAkCC,uBAAlC,QAAiE,WAAjE;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAgD,GAAG,CAAC;EAC/DC,GAD+D;EAE/DC,GAF+D;EAG/DC,QAH+D;EAI/DC,aAJ+D;EAK/DC,WAAW,GAAG,YALiD;EAM/DC,OAN+D;EAO/DC,IAP+D;EAQ/DC,mBAR+D;EAS/DC,KAT+D;EAU/DC,oBAAoB,GAAG;AAVwC,CAAD,KAW1D;EACJ,MAAMC,YAAY,GAAGN,WAAW,KAAK,YAArC;EACA,MAAMO,KAAK,GAAGd,SAAS,EAAvB;EACA,MAAMe,MAAM,GAAGd,SAAS,CAACa,KAAD,EAAQD,YAAR,CAAxB;EACA,MAAMG,gBAAgB,GAAGlB,uBAAuB,CAACD,cAAD,CAAhD;EACA,oBACE;IAAK,SAAS,EAAEH,EAAE,CAACqB,MAAM,CAACE,SAAR,EAAmBF,MAAM,CAACG,MAA1B,CAAlB;IAAA,wBAEE,KAAC,MAAD;MAAQ,MAAM,EAAEH,MAAM,CAACI;IAAvB,EAFF,eAGE,KAAC,gBAAD;MACE,QAAQ,EAAE;QACRC,OAAO,EAAER,oBADD;QAERS,SAAS,EAAER,YAAY,GAAG,KAAH,GAAW;MAF1B,CADZ;MAKE,GAAG,EAAEV,GALP;MAME,GAAG,EAAEC,GANP;MAOE,IAAI,EAAEK,IAPR;MAQE,YAAY,EAAEE,KARhB;MASE,YAAY,EAAGA,KAAD,IAAoBD,mBAAmB,GAAGA,mBAAmB,CAACC,KAAD,CAAtB,GAAgCA,KATvF;MAUE,QAAQ,EAAEN,QAVZ;MAWE,aAAa,EAAEC,aAXjB;MAYE,QAAQ,EAAE,CAACO,YAZb;MAaE,OAAO,EAAEL;IAbX,EAHF;EAAA,EADF;AAqBD,CArCM;AAuCPN,WAAW,CAACoB,WAAZ,GAA0B,OAA1B"},"metadata":{},"sourceType":"module"}