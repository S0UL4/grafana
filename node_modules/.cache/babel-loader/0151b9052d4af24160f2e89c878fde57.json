{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { BusEventBase, BusEventWithPayload } from './types';\n/**\n * When hovering over an element this will identify\n *\n * For performance reasons, this object will usually be mutated between updates.  This\n * will avoid creating new objects for events that fire frequently (ie each mouse pixel)\n *\n * @alpha\n */\n\n/** @alpha */\nexport class DataHoverEvent extends BusEventWithPayload {}\n/** @alpha */\n\n_defineProperty(DataHoverEvent, \"type\", 'data-hover');\n\nexport class DataHoverClearEvent extends BusEventBase {}\n/** @alpha */\n\n_defineProperty(DataHoverClearEvent, \"type\", 'data-hover-clear');\n\nexport class DataSelectEvent extends BusEventWithPayload {}\n/** @alpha */\n\n_defineProperty(DataSelectEvent, \"type\", 'data-select');\n\nexport class AnnotationChangeEvent extends BusEventWithPayload {}\n\n_defineProperty(AnnotationChangeEvent, \"type\", 'annotation-event');","map":{"version":3,"names":["BusEventBase","BusEventWithPayload","DataHoverEvent","DataHoverClearEvent","DataSelectEvent","AnnotationChangeEvent"],"sources":["/home/soula/grafana/packages/grafana-data/src/events/common.ts"],"sourcesContent":["import { AnnotationEvent, DataFrame } from '../types';\n\nimport { BusEventBase, BusEventWithPayload } from './types';\n\n/**\n * When hovering over an element this will identify\n *\n * For performance reasons, this object will usually be mutated between updates.  This\n * will avoid creating new objects for events that fire frequently (ie each mouse pixel)\n *\n * @alpha\n */\nexport interface DataHoverPayload {\n  data?: DataFrame; // source data\n  rowIndex?: number; // the hover row\n  columnIndex?: number; // the hover column\n  dataId?: string; // identifying string to correlate data between publishers and subscribers\n\n  // When dragging, this will capture the point when the mouse was down\n  point: Record<string, any>; // { time: 5678, lengthft: 456 }  // each axis|scale gets a value\n  down?: Record<string, any>;\n}\n\n/** @alpha */\nexport class DataHoverEvent extends BusEventWithPayload<DataHoverPayload> {\n  static type = 'data-hover';\n}\n\n/** @alpha */\nexport class DataHoverClearEvent extends BusEventBase {\n  static type = 'data-hover-clear';\n}\n\n/** @alpha */\nexport class DataSelectEvent extends BusEventWithPayload<DataHoverPayload> {\n  static type = 'data-select';\n}\n\n/** @alpha */\nexport class AnnotationChangeEvent extends BusEventWithPayload<Partial<AnnotationEvent>> {\n  static type = 'annotation-event';\n}\n"],"mappings":";;AAEA,SAASA,YAAT,EAAuBC,mBAAvB,QAAkD,SAAlD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA,OAAO,MAAMC,cAAN,SAA6BD,mBAA7B,CAAmE;AAI1E;;gBAJaC,c,UACG,Y;;AAIhB,OAAO,MAAMC,mBAAN,SAAkCH,YAAlC,CAA+C;AAItD;;gBAJaG,mB,UACG,kB;;AAIhB,OAAO,MAAMC,eAAN,SAA8BH,mBAA9B,CAAoE;AAI3E;;gBAJaG,e,UACG,a;;AAIhB,OAAO,MAAMC,qBAAN,SAAoCJ,mBAApC,CAAkF;;gBAA5EI,qB,UACG,kB"},"metadata":{},"sourceType":"module"}