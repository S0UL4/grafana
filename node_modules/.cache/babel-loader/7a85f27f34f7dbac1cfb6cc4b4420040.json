{"ast":null,"code":"const _excluded = [\"value\", \"onChange\", \"aria-label\", \"inputId\", \"autoFocus\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { OrgRole } from '@grafana/data';\nimport { Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst options = Object.keys(OrgRole).map(key => ({\n  label: key,\n  value: key\n}));\nexport function OrgRolePicker(_ref) {\n  let {\n    value,\n    onChange,\n    'aria-label': ariaLabel,\n    inputId,\n    autoFocus\n  } = _ref,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(Select, Object.assign({\n    inputId: inputId,\n    value: value,\n    options: options,\n    onChange: val => onChange(val.value),\n    placeholder: \"Choose role...\",\n    \"aria-label\": ariaLabel,\n    autoFocus: autoFocus\n  }, restProps));\n}","map":{"version":3,"names":["React","OrgRole","Select","options","Object","keys","map","key","label","value","OrgRolePicker","onChange","ariaLabel","inputId","autoFocus","restProps","val"],"sources":["/home/soula/grafana/public/app/features/admin/OrgRolePicker.tsx"],"sourcesContent":["import React from 'react';\n\nimport { OrgRole } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface Props {\n  value: OrgRole;\n  disabled?: boolean;\n  'aria-label'?: string;\n  inputId?: string;\n  onChange: (role: OrgRole) => void;\n  autoFocus?: boolean;\n  width?: number | 'auto';\n}\n\nconst options = Object.keys(OrgRole).map((key) => ({ label: key, value: key }));\n\nexport function OrgRolePicker({ value, onChange, 'aria-label': ariaLabel, inputId, autoFocus, ...restProps }: Props) {\n  return (\n    <Select\n      inputId={inputId}\n      value={value}\n      options={options}\n      onChange={(val) => onChange(val.value as OrgRole)}\n      placeholder=\"Choose role...\"\n      aria-label={ariaLabel}\n      autoFocus={autoFocus}\n      {...restProps}\n    />\n  );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAYA,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,GAArB,CAA0BC,GAAD,KAAU;EAAEC,KAAK,EAAED,GAAT;EAAcE,KAAK,EAAEF;AAArB,CAAV,CAAzB,CAAhB;AAEA,OAAO,SAASG,aAAT,OAA8G;EAAA,IAAvF;IAAED,KAAF;IAASE,QAAT;IAAmB,cAAcC,SAAjC;IAA4CC,OAA5C;IAAqDC;EAArD,CAAuF;EAAA,IAApBC,SAAoB;;EACnH,oBACE,KAAC,MAAD;IACE,OAAO,EAAEF,OADX;IAEE,KAAK,EAAEJ,KAFT;IAGE,OAAO,EAAEN,OAHX;IAIE,QAAQ,EAAGa,GAAD,IAASL,QAAQ,CAACK,GAAG,CAACP,KAAL,CAJ7B;IAKE,WAAW,EAAC,gBALd;IAME,cAAYG,SANd;IAOE,SAAS,EAAEE;EAPb,GAQMC,SARN,EADF;AAYD"},"metadata":{},"sourceType":"module"}