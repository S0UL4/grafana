{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport $ from 'jquery';\nimport { defaults } from 'lodash';\nimport { isTableData, PanelEvents, PanelPlugin } from '@grafana/data';\nimport config from 'app/core/config';\nimport { applyFilterFromTable } from 'app/features/variables/adhoc/actions';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { dispatch } from 'app/store/store';\nimport { columnOptionsTab } from './column_options';\nimport { tablePanelEditor } from './editor';\nimport { TableRenderer } from './renderer';\nimport { transformDataToTable } from './transformers';\nexport class TablePanelCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, annotationsSrv, $sanitize) {\n    super($scope, $injector);\n\n    _defineProperty(this, \"pageIndex\", void 0);\n\n    _defineProperty(this, \"dataRaw\", void 0);\n\n    _defineProperty(this, \"table\", void 0);\n\n    _defineProperty(this, \"renderer\", void 0);\n\n    _defineProperty(this, \"panelHasRowColorMode\", void 0);\n\n    _defineProperty(this, \"panelHasLinks\", void 0);\n\n    _defineProperty(this, \"panelDefaults\", {\n      targets: [{}],\n      transform: 'timeseries_to_columns',\n      pageSize: null,\n      showHeader: true,\n      styles: [{\n        type: 'date',\n        pattern: 'Time',\n        alias: 'Time',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        align: 'auto'\n      }, {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n        align: 'right'\n      }],\n      columns: [],\n      fontSize: '100%',\n      sort: {\n        col: 0,\n        desc: true\n      }\n    });\n\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    defaults(this.panel, this.panelDefaults);\n    this.panelHasRowColorMode = Boolean(this.panel.styles.find(style => style.colorMode === 'row'));\n    this.panelHasLinks = Boolean(this.panel.styles.find(style => style.link));\n    this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  migrateToPanel(type) {\n    this.onPluginTypeChange(config.panels[type]);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      return this.annotationsSrv.getAnnotations({\n        dashboard: this.dashboard,\n        panel: this.panel,\n        range: this.range\n      }).then(anno => {\n        this.loading = false;\n        this.dataRaw = anno;\n        this.pageIndex = 0;\n        this.render();\n        return {\n          data: this.dataRaw\n        }; // Not used\n      });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0; // automatically correct transform mode based on data\n\n    if (this.dataRaw && this.dataRaw.length) {\n      if (isTableData(this.dataRaw[0])) {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n    this.renderer = new TableRenderer(this.panel, this.table, this.dashboard.getTimezone(), this.$sanitize, this.templateSrv, config.theme);\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $('<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n      elem.css({\n        'font-size': panel.fontSize\n      });\n      panelElem.addClass('table-panel-content');\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n      rootElem.css({\n        'max-height': getTableHeight()\n      });\n    } // hook up link tooltips\n\n\n    elem.tooltip({\n      selector: '[data-link-tooltip]'\n    });\n\n    function addFilterClicked(e) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator\n      };\n      dispatch(applyFilterFromTable(options));\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n    ctrl.events.on(PanelEvents.render, renderData => {\n      data = renderData || data;\n\n      if (data) {\n        renderPanel();\n      }\n\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\nTablePanelCtrl.$inject = [\"$scope\", \"$injector\", \"annotationsSrv\", \"$sanitize\"];\n\n_defineProperty(TablePanelCtrl, \"templateUrl\", 'module.html');\n\nexport const plugin = new PanelPlugin(null);\nplugin.angularPanelCtrl = TablePanelCtrl;\nplugin.setNoPadding();","map":{"version":3,"names":["$","defaults","isTableData","PanelEvents","PanelPlugin","config","applyFilterFromTable","MetricsPanelCtrl","dispatch","columnOptionsTab","tablePanelEditor","TableRenderer","transformDataToTable","TablePanelCtrl","constructor","$scope","$injector","annotationsSrv","$sanitize","targets","transform","pageSize","showHeader","styles","type","pattern","alias","dateFormat","align","unit","decimals","colors","colorMode","thresholds","columns","fontSize","sort","col","desc","pageIndex","panel","fields","panelDefaults","panelHasRowColorMode","Boolean","find","style","panelHasLinks","link","events","on","dataReceived","onDataReceived","bind","dataSnapshotLoad","editModeInitialized","onInitEditMode","addEditorTab","migrateToPanel","onPluginTypeChange","panels","issueQueries","datasource","getAnnotations","dashboard","range","then","anno","loading","dataRaw","render","data","dataList","length","table","renderer","getTimezone","templateSrv","theme","toggleColumnSort","colIndex","scope","elem","attrs","ctrl","pageCount","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","switchPage","e","el","currentTarget","parseInt","text","renderPanel","appendPaginationControls","footerElem","Math","ceil","rows","startPage","max","endPage","min","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","css","addClass","tooltip","selector","addFilterClicked","filterData","options","key","column","value","row","operator","unbindDestroy","$on","off","renderData","renderingCompleted","plugin","angularPanelCtrl","setNoPadding"],"sources":["/home/soula/grafana/public/app/plugins/panel/table-old/module.ts"],"sourcesContent":["import $ from 'jquery';\nimport { defaults } from 'lodash';\nimport { ComponentType } from 'react';\n\nimport { isTableData, PanelEvents, PanelPlugin, PanelProps } from '@grafana/data';\nimport config from 'app/core/config';\nimport { applyFilterFromTable } from 'app/features/variables/adhoc/actions';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { dispatch } from 'app/store/store';\n\nimport { columnOptionsTab } from './column_options';\nimport { tablePanelEditor } from './editor';\nimport { TableRenderer } from './renderer';\nimport { transformDataToTable } from './transformers';\n\nexport class TablePanelCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  pageIndex: number;\n  dataRaw: any;\n  table: any;\n  renderer: any;\n  panelHasRowColorMode: boolean;\n  panelHasLinks: boolean;\n\n  panelDefaults: any = {\n    targets: [{}],\n    transform: 'timeseries_to_columns',\n    pageSize: null,\n    showHeader: true,\n    styles: [\n      {\n        type: 'date',\n        pattern: 'Time',\n        alias: 'Time',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        align: 'auto',\n      },\n      {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n        align: 'right',\n      },\n    ],\n    columns: [],\n\n    fontSize: '100%',\n    sort: { col: 0, desc: true },\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any, private annotationsSrv: any, private $sanitize: any) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    defaults(this.panel, this.panelDefaults);\n\n    this.panelHasRowColorMode = Boolean(this.panel.styles.find((style: any) => style.colorMode === 'row'));\n    this.panelHasLinks = Boolean(this.panel.styles.find((style: any) => style.link));\n\n    this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  migrateToPanel(type: string) {\n    this.onPluginTypeChange(config.panels[type]);\n  }\n\n  issueQueries(datasource: any) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then((anno: any) => {\n          this.loading = false;\n          this.dataRaw = anno;\n          this.pageIndex = 0;\n          this.render();\n          return { data: this.dataRaw }; // Not used\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataReceived(dataList: any) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (isTableData(this.dataRaw[0])) {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.getTimezone(),\n      this.$sanitize,\n      this.templateSrv,\n      config.theme\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col: any, colIndex: any) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope: any, elem: JQuery, attrs: any, ctrl: TablePanelCtrl) {\n    let data: any;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem: JQuery) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e: any) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem: JQuery) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': getTableHeight() });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e: any) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      dispatch(applyFilterFromTable(options));\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on(PanelEvents.render, (renderData: any) => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nexport const plugin = new PanelPlugin(null as unknown as ComponentType<PanelProps<any>>);\nplugin.angularPanelCtrl = TablePanelCtrl;\nplugin.setNoPadding();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}