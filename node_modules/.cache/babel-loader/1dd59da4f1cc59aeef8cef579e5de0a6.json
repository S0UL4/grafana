{"ast":null,"code":"var _label;\n\nconst _excluded = [\"yaxis\", \"onToggleAxis\", \"color\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from '@emotion/css';\nimport React from 'react';\nimport { withTheme2, useStyles } from '../../themes';\nimport { Button } from '../Button';\nimport { Switch } from '../Forms/Legacy/Switch/Switch';\nimport { ColorPickerPopover } from './ColorPickerPopover';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SeriesColorPickerPopover = props => {\n  const styles = useStyles(getStyles);\n\n  const {\n    yaxis,\n    onToggleAxis,\n    color\n  } = props,\n        colorPickerProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const customPickers = onToggleAxis ? {\n    yaxis: {\n      name: 'Y-Axis',\n\n      tabComponent() {\n        return /*#__PURE__*/_jsx(Switch, {\n          label: \"Use right y-axis\",\n          className: styles.colorPickerAxisSwitch,\n          labelClass: styles.colorPickerAxisSwitchLabel,\n          checked: yaxis === 2,\n          onChange: () => {\n            if (onToggleAxis) {\n              onToggleAxis();\n            }\n          }\n        }, \"yaxisSwitch\");\n      }\n\n    }\n  } : undefined;\n  return /*#__PURE__*/_jsx(ColorPickerPopover, Object.assign({}, colorPickerProps, {\n    color: color || '#000000',\n    customPickers: customPickers\n  }));\n};\nexport class AxisSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yaxis: this.props.yaxis\n    };\n    this.onToggleAxis = this.onToggleAxis.bind(this);\n  }\n\n  onToggleAxis() {\n    this.setState({\n      yaxis: this.state.yaxis === 2 ? 1 : 2\n    });\n\n    if (this.props.onToggleAxis) {\n      this.props.onToggleAxis();\n    }\n  }\n\n  render() {\n    const leftButtonVariant = this.state.yaxis === 1 ? 'primary' : 'secondary';\n    const rightButtonVariant = this.state.yaxis === 2 ? 'primary' : 'secondary';\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"p-b-1\",\n      children: [_label || (_label = /*#__PURE__*/_jsx(\"label\", {\n        className: \"small p-r-1\",\n        children: \"Y Axis:\"\n      })), /*#__PURE__*/_jsx(Button, {\n        onClick: this.onToggleAxis,\n        size: \"sm\",\n        variant: leftButtonVariant,\n        children: \"Left\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: this.onToggleAxis,\n        size: \"sm\",\n        variant: rightButtonVariant,\n        children: \"Right\"\n      })]\n    });\n  }\n\n} // This component is to enable SeriesColorPickerPopover usage via series-color-picker-popover directive\n\nexport const SeriesColorPickerPopoverWithTheme = withTheme2(SeriesColorPickerPopover);\n\nconst getStyles = () => {\n  return {\n    colorPickerAxisSwitch: css`\n      width: 100%;\n    `,\n    colorPickerAxisSwitchLabel: css`\n      display: flex;\n      flex-grow: 1;\n    `\n  };\n};","map":{"version":3,"names":["css","React","withTheme2","useStyles","Button","Switch","ColorPickerPopover","SeriesColorPickerPopover","props","styles","getStyles","yaxis","onToggleAxis","color","colorPickerProps","customPickers","name","tabComponent","colorPickerAxisSwitch","colorPickerAxisSwitchLabel","undefined","AxisSelector","PureComponent","constructor","state","bind","setState","render","leftButtonVariant","rightButtonVariant","SeriesColorPickerPopoverWithTheme"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/ColorPicker/SeriesColorPickerPopover.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FunctionComponent } from 'react';\n\nimport { withTheme2, useStyles } from '../../themes';\nimport { Button } from '../Button';\nimport { Switch } from '../Forms/Legacy/Switch/Switch';\nimport { PopoverContentProps } from '../Tooltip';\n\nimport { ColorPickerPopover, ColorPickerProps } from './ColorPickerPopover';\n\nexport interface SeriesColorPickerPopoverProps extends ColorPickerProps, PopoverContentProps {\n  yaxis?: number;\n  onToggleAxis?: () => void;\n}\n\nexport const SeriesColorPickerPopover: FunctionComponent<SeriesColorPickerPopoverProps> = (props) => {\n  const styles = useStyles(getStyles);\n  const { yaxis, onToggleAxis, color, ...colorPickerProps } = props;\n\n  const customPickers = onToggleAxis\n    ? {\n        yaxis: {\n          name: 'Y-Axis',\n          tabComponent() {\n            return (\n              <Switch\n                key=\"yaxisSwitch\"\n                label=\"Use right y-axis\"\n                className={styles.colorPickerAxisSwitch}\n                labelClass={styles.colorPickerAxisSwitchLabel}\n                checked={yaxis === 2}\n                onChange={() => {\n                  if (onToggleAxis) {\n                    onToggleAxis();\n                  }\n                }}\n              />\n            );\n          },\n        },\n      }\n    : undefined;\n  return <ColorPickerPopover {...colorPickerProps} color={color || '#000000'} customPickers={customPickers} />;\n};\n\ninterface AxisSelectorProps {\n  yaxis: number;\n  onToggleAxis?: () => void;\n}\n\ninterface AxisSelectorState {\n  yaxis: number;\n}\n\nexport class AxisSelector extends React.PureComponent<AxisSelectorProps, AxisSelectorState> {\n  constructor(props: AxisSelectorProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.yaxis,\n    };\n    this.onToggleAxis = this.onToggleAxis.bind(this);\n  }\n\n  onToggleAxis() {\n    this.setState({\n      yaxis: this.state.yaxis === 2 ? 1 : 2,\n    });\n\n    if (this.props.onToggleAxis) {\n      this.props.onToggleAxis();\n    }\n  }\n\n  render() {\n    const leftButtonVariant = this.state.yaxis === 1 ? 'primary' : 'secondary';\n    const rightButtonVariant = this.state.yaxis === 2 ? 'primary' : 'secondary';\n\n    return (\n      <div className=\"p-b-1\">\n        <label className=\"small p-r-1\">Y Axis:</label>\n        <Button onClick={this.onToggleAxis} size=\"sm\" variant={leftButtonVariant}>\n          Left\n        </Button>\n        <Button onClick={this.onToggleAxis} size=\"sm\" variant={rightButtonVariant}>\n          Right\n        </Button>\n      </div>\n    );\n  }\n}\n\n// This component is to enable SeriesColorPickerPopover usage via series-color-picker-popover directive\nexport const SeriesColorPickerPopoverWithTheme = withTheme2(SeriesColorPickerPopover);\n\nconst getStyles = () => {\n  return {\n    colorPickerAxisSwitch: css`\n      width: 100%;\n    `,\n    colorPickerAxisSwitchLabel: css`\n      display: flex;\n      flex-grow: 1;\n    `,\n  };\n};\n"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAEA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AAGA,SAASC,kBAAT,QAAqD,sBAArD;;;AAOA,OAAO,MAAMC,wBAA0E,GAAIC,KAAD,IAAW;EACnG,MAAMC,MAAM,GAAGN,SAAS,CAACO,SAAD,CAAxB;;EACA,MAAM;IAAEC,KAAF;IAASC,YAAT;IAAuBC;EAAvB,IAAsDL,KAA5D;EAAA,MAAuCM,gBAAvC,iCAA4DN,KAA5D;;EAEA,MAAMO,aAAa,GAAGH,YAAY,GAC9B;IACED,KAAK,EAAE;MACLK,IAAI,EAAE,QADD;;MAELC,YAAY,GAAG;QACb,oBACE,KAAC,MAAD;UAEE,KAAK,EAAC,kBAFR;UAGE,SAAS,EAAER,MAAM,CAACS,qBAHpB;UAIE,UAAU,EAAET,MAAM,CAACU,0BAJrB;UAKE,OAAO,EAAER,KAAK,KAAK,CALrB;UAME,QAAQ,EAAE,MAAM;YACd,IAAIC,YAAJ,EAAkB;cAChBA,YAAY;YACb;UACF;QAVH,GACM,aADN,CADF;MAcD;;IAjBI;EADT,CAD8B,GAsB9BQ,SAtBJ;EAuBA,oBAAO,KAAC,kBAAD,oBAAwBN,gBAAxB;IAA0C,KAAK,EAAED,KAAK,IAAI,SAA1D;IAAqE,aAAa,EAAEE;EAApF,GAAP;AACD,CA5BM;AAuCP,OAAO,MAAMM,YAAN,SAA2BpB,KAAK,CAACqB,aAAjC,CAAqF;EAC1FC,WAAW,CAACf,KAAD,EAA2B;IACpC,MAAMA,KAAN;IACA,KAAKgB,KAAL,GAAa;MACXb,KAAK,EAAE,KAAKH,KAAL,CAAWG;IADP,CAAb;IAGA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;EACD;;EAEDb,YAAY,GAAG;IACb,KAAKc,QAAL,CAAc;MACZf,KAAK,EAAE,KAAKa,KAAL,CAAWb,KAAX,KAAqB,CAArB,GAAyB,CAAzB,GAA6B;IADxB,CAAd;;IAIA,IAAI,KAAKH,KAAL,CAAWI,YAAf,EAA6B;MAC3B,KAAKJ,KAAL,CAAWI,YAAX;IACD;EACF;;EAEDe,MAAM,GAAG;IACP,MAAMC,iBAAiB,GAAG,KAAKJ,KAAL,CAAWb,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,WAA/D;IACA,MAAMkB,kBAAkB,GAAG,KAAKL,KAAL,CAAWb,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,WAAhE;IAEA,oBACE;MAAK,SAAS,EAAC,OAAf;MAAA,4CACE;QAAO,SAAS,EAAC,aAAjB;QAAA;MAAA,EADF,gBAEE,KAAC,MAAD;QAAQ,OAAO,EAAE,KAAKC,YAAtB;QAAoC,IAAI,EAAC,IAAzC;QAA8C,OAAO,EAAEgB,iBAAvD;QAAA;MAAA,EAFF,eAKE,KAAC,MAAD;QAAQ,OAAO,EAAE,KAAKhB,YAAtB;QAAoC,IAAI,EAAC,IAAzC;QAA8C,OAAO,EAAEiB,kBAAvD;QAAA;MAAA,EALF;IAAA,EADF;EAWD;;AAlCyF,C,CAqC5F;;AACA,OAAO,MAAMC,iCAAiC,GAAG5B,UAAU,CAACK,wBAAD,CAApD;;AAEP,MAAMG,SAAS,GAAG,MAAM;EACtB,OAAO;IACLQ,qBAAqB,EAAElB,GAAI;AAC/B;AACA,KAHS;IAILmB,0BAA0B,EAAEnB,GAAI;AACpC;AACA;AACA;EAPS,CAAP;AASD,CAVD"},"metadata":{},"sourceType":"module"}