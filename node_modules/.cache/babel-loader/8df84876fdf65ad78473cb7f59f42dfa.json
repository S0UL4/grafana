{"ast":null,"code":"/**\n * UserPermission is a map storing permissions in a form of\n * {\n *   action: true;\n * }\n */\n// Permission actions\nexport let AccessControlAction;\n\n(function (AccessControlAction) {\n  AccessControlAction[\"UsersRead\"] = \"users:read\";\n  AccessControlAction[\"UsersWrite\"] = \"users:write\";\n  AccessControlAction[\"UsersAuthTokenList\"] = \"users.authtoken:read\";\n  AccessControlAction[\"UsersAuthTokenUpdate\"] = \"users.authtoken:write\";\n  AccessControlAction[\"UsersPasswordUpdate\"] = \"users.password:write\";\n  AccessControlAction[\"UsersDelete\"] = \"users:delete\";\n  AccessControlAction[\"UsersCreate\"] = \"users:create\";\n  AccessControlAction[\"UsersEnable\"] = \"users:enable\";\n  AccessControlAction[\"UsersDisable\"] = \"users:disable\";\n  AccessControlAction[\"UsersPermissionsUpdate\"] = \"users.permissions:write\";\n  AccessControlAction[\"UsersLogout\"] = \"users:logout\";\n  AccessControlAction[\"UsersQuotasList\"] = \"users.quotas:read\";\n  AccessControlAction[\"UsersQuotasUpdate\"] = \"users.quotas:write\";\n  AccessControlAction[\"ServiceAccountsRead\"] = \"serviceaccounts:read\";\n  AccessControlAction[\"ServiceAccountsCreate\"] = \"serviceaccounts:create\";\n  AccessControlAction[\"ServiceAccountsWrite\"] = \"serviceaccounts:write\";\n  AccessControlAction[\"ServiceAccountsDelete\"] = \"serviceaccounts:delete\";\n  AccessControlAction[\"OrgsRead\"] = \"orgs:read\";\n  AccessControlAction[\"OrgsPreferencesRead\"] = \"orgs.preferences:read\";\n  AccessControlAction[\"OrgsWrite\"] = \"orgs:write\";\n  AccessControlAction[\"OrgsPreferencesWrite\"] = \"orgs.preferences:write\";\n  AccessControlAction[\"OrgsCreate\"] = \"orgs:create\";\n  AccessControlAction[\"OrgsDelete\"] = \"orgs:delete\";\n  AccessControlAction[\"OrgUsersRead\"] = \"org.users:read\";\n  AccessControlAction[\"OrgUsersAdd\"] = \"org.users:add\";\n  AccessControlAction[\"OrgUsersRemove\"] = \"org.users:remove\";\n  AccessControlAction[\"OrgUsersWrite\"] = \"org.users:write\";\n  AccessControlAction[\"LDAPUsersRead\"] = \"ldap.user:read\";\n  AccessControlAction[\"LDAPUsersSync\"] = \"ldap.user:sync\";\n  AccessControlAction[\"LDAPStatusRead\"] = \"ldap.status:read\";\n  AccessControlAction[\"DataSourcesExplore\"] = \"datasources:explore\";\n  AccessControlAction[\"DataSourcesRead\"] = \"datasources:read\";\n  AccessControlAction[\"DataSourcesCreate\"] = \"datasources:create\";\n  AccessControlAction[\"DataSourcesWrite\"] = \"datasources:write\";\n  AccessControlAction[\"DataSourcesDelete\"] = \"datasources:delete\";\n  AccessControlAction[\"DataSourcesPermissionsRead\"] = \"datasources.permissions:read\";\n  AccessControlAction[\"ActionServerStatsRead\"] = \"server.stats:read\";\n  AccessControlAction[\"ActionTeamsCreate\"] = \"teams:create\";\n  AccessControlAction[\"ActionTeamsDelete\"] = \"teams:delete\";\n  AccessControlAction[\"ActionTeamsRead\"] = \"teams:read\";\n  AccessControlAction[\"ActionTeamsWrite\"] = \"teams:write\";\n  AccessControlAction[\"ActionTeamsPermissionsRead\"] = \"teams.permissions:read\";\n  AccessControlAction[\"ActionTeamsPermissionsWrite\"] = \"teams.permissions:write\";\n  AccessControlAction[\"ActionRolesList\"] = \"roles:read\";\n  AccessControlAction[\"ActionBuiltinRolesList\"] = \"roles.builtin:list\";\n  AccessControlAction[\"ActionTeamsRolesList\"] = \"teams.roles:read\";\n  AccessControlAction[\"ActionTeamsRolesAdd\"] = \"teams.roles:add\";\n  AccessControlAction[\"ActionTeamsRolesRemove\"] = \"teams.roles:remove\";\n  AccessControlAction[\"ActionUserRolesList\"] = \"users.roles:read\";\n  AccessControlAction[\"DashboardsRead\"] = \"dashboards:read\";\n  AccessControlAction[\"DashboardsWrite\"] = \"dashboards:write\";\n  AccessControlAction[\"DashboardsDelete\"] = \"dashboards:delete\";\n  AccessControlAction[\"DashboardsCreate\"] = \"dashboards:create\";\n  AccessControlAction[\"DashboardsPermissionsRead\"] = \"dashboards.permissions:read\";\n  AccessControlAction[\"DashboardsPermissionsWrite\"] = \"dashboards.permissions:write\";\n  AccessControlAction[\"FoldersRead\"] = \"folders:read\";\n  AccessControlAction[\"FoldersWrite\"] = \"folders:write\";\n  AccessControlAction[\"FoldersDelete\"] = \"folders:delete\";\n  AccessControlAction[\"FoldersCreate\"] = \"folders:create\";\n  AccessControlAction[\"FoldersPermissionsRead\"] = \"folders.permissions:read\";\n  AccessControlAction[\"FoldersPermissionsWrite\"] = \"folders.permissions:write\";\n  AccessControlAction[\"AlertingRuleCreate\"] = \"alert.rules:create\";\n  AccessControlAction[\"AlertingRuleRead\"] = \"alert.rules:read\";\n  AccessControlAction[\"AlertingRuleUpdate\"] = \"alert.rules:write\";\n  AccessControlAction[\"AlertingRuleDelete\"] = \"alert.rules:delete\";\n  AccessControlAction[\"AlertingInstanceCreate\"] = \"alert.instances:create\";\n  AccessControlAction[\"AlertingInstanceUpdate\"] = \"alert.instances:write\";\n  AccessControlAction[\"AlertingInstanceRead\"] = \"alert.instances:read\";\n  AccessControlAction[\"AlertingNotificationsRead\"] = \"alert.notifications:read\";\n  AccessControlAction[\"AlertingNotificationsWrite\"] = \"alert.notifications:write\";\n  AccessControlAction[\"AlertingRuleExternalWrite\"] = \"alert.rules.external:write\";\n  AccessControlAction[\"AlertingRuleExternalRead\"] = \"alert.rules.external:read\";\n  AccessControlAction[\"AlertingInstancesExternalWrite\"] = \"alert.instances.external:write\";\n  AccessControlAction[\"AlertingInstancesExternalRead\"] = \"alert.instances.external:read\";\n  AccessControlAction[\"AlertingNotificationsExternalWrite\"] = \"alert.notifications.external:write\";\n  AccessControlAction[\"AlertingNotificationsExternalRead\"] = \"alert.notifications.external:read\";\n  AccessControlAction[\"ActionAPIKeysRead\"] = \"apikeys:read\";\n  AccessControlAction[\"ActionAPIKeysCreate\"] = \"apikeys:create\";\n  AccessControlAction[\"ActionAPIKeysDelete\"] = \"apikeys:delete\";\n})(AccessControlAction || (AccessControlAction = {}));","map":{"version":3,"names":["AccessControlAction"],"sources":["/home/soula/grafana/public/app/types/accessControl.ts"],"sourcesContent":["/**\n * UserPermission is a map storing permissions in a form of\n * {\n *   action: true;\n * }\n */\nexport type UserPermission = Record<string, boolean>;\n\n// Permission actions\nexport enum AccessControlAction {\n  UsersRead = 'users:read',\n  UsersWrite = 'users:write',\n  UsersAuthTokenList = 'users.authtoken:read',\n  UsersAuthTokenUpdate = 'users.authtoken:write',\n  UsersPasswordUpdate = 'users.password:write',\n  UsersDelete = 'users:delete',\n  UsersCreate = 'users:create',\n  UsersEnable = 'users:enable',\n  UsersDisable = 'users:disable',\n  UsersPermissionsUpdate = 'users.permissions:write',\n  UsersLogout = 'users:logout',\n  UsersQuotasList = 'users.quotas:read',\n  UsersQuotasUpdate = 'users.quotas:write',\n\n  ServiceAccountsRead = 'serviceaccounts:read',\n  ServiceAccountsCreate = 'serviceaccounts:create',\n  ServiceAccountsWrite = 'serviceaccounts:write',\n  ServiceAccountsDelete = 'serviceaccounts:delete',\n\n  OrgsRead = 'orgs:read',\n  OrgsPreferencesRead = 'orgs.preferences:read',\n  OrgsWrite = 'orgs:write',\n  OrgsPreferencesWrite = 'orgs.preferences:write',\n  OrgsCreate = 'orgs:create',\n  OrgsDelete = 'orgs:delete',\n  OrgUsersRead = 'org.users:read',\n  OrgUsersAdd = 'org.users:add',\n  OrgUsersRemove = 'org.users:remove',\n  OrgUsersWrite = 'org.users:write',\n\n  LDAPUsersRead = 'ldap.user:read',\n  LDAPUsersSync = 'ldap.user:sync',\n  LDAPStatusRead = 'ldap.status:read',\n\n  DataSourcesExplore = 'datasources:explore',\n  DataSourcesRead = 'datasources:read',\n  DataSourcesCreate = 'datasources:create',\n  DataSourcesWrite = 'datasources:write',\n  DataSourcesDelete = 'datasources:delete',\n  DataSourcesPermissionsRead = 'datasources.permissions:read',\n\n  ActionServerStatsRead = 'server.stats:read',\n\n  ActionTeamsCreate = 'teams:create',\n  ActionTeamsDelete = 'teams:delete',\n  ActionTeamsRead = 'teams:read',\n  ActionTeamsWrite = 'teams:write',\n  ActionTeamsPermissionsRead = 'teams.permissions:read',\n  ActionTeamsPermissionsWrite = 'teams.permissions:write',\n\n  ActionRolesList = 'roles:read',\n  ActionBuiltinRolesList = 'roles.builtin:list',\n  ActionTeamsRolesList = 'teams.roles:read',\n  ActionTeamsRolesAdd = 'teams.roles:add',\n  ActionTeamsRolesRemove = 'teams.roles:remove',\n  ActionUserRolesList = 'users.roles:read',\n\n  DashboardsRead = 'dashboards:read',\n  DashboardsWrite = 'dashboards:write',\n  DashboardsDelete = 'dashboards:delete',\n  DashboardsCreate = 'dashboards:create',\n  DashboardsPermissionsRead = 'dashboards.permissions:read',\n  DashboardsPermissionsWrite = 'dashboards.permissions:write',\n\n  FoldersRead = 'folders:read',\n  FoldersWrite = 'folders:write',\n  FoldersDelete = 'folders:delete',\n  FoldersCreate = 'folders:create',\n  FoldersPermissionsRead = 'folders.permissions:read',\n  FoldersPermissionsWrite = 'folders.permissions:write',\n\n  // Alerting rules\n  AlertingRuleCreate = 'alert.rules:create',\n  AlertingRuleRead = 'alert.rules:read',\n  AlertingRuleUpdate = 'alert.rules:write',\n  AlertingRuleDelete = 'alert.rules:delete',\n\n  // Alerting instances (+silences)\n  AlertingInstanceCreate = 'alert.instances:create',\n  AlertingInstanceUpdate = 'alert.instances:write',\n  AlertingInstanceRead = 'alert.instances:read',\n\n  // Alerting Notification policies\n  AlertingNotificationsRead = 'alert.notifications:read',\n  AlertingNotificationsWrite = 'alert.notifications:write',\n\n  // External alerting rule actions.\n  AlertingRuleExternalWrite = 'alert.rules.external:write',\n  AlertingRuleExternalRead = 'alert.rules.external:read',\n\n  // External alerting instances actions.\n  AlertingInstancesExternalWrite = 'alert.instances.external:write',\n  AlertingInstancesExternalRead = 'alert.instances.external:read',\n\n  // External alerting notifications actions.\n  AlertingNotificationsExternalWrite = 'alert.notifications.external:write',\n  AlertingNotificationsExternalRead = 'alert.notifications.external:read',\n\n  ActionAPIKeysRead = 'apikeys:read',\n  ActionAPIKeysCreate = 'apikeys:create',\n  ActionAPIKeysDelete = 'apikeys:delete',\n}\n\nexport interface Role {\n  uid: string;\n  name: string;\n  displayName: string;\n  description: string;\n  group: string;\n  global: boolean;\n  delegatable?: boolean;\n  version: number;\n  created: string;\n  updated: string;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,WAAYA,mBAAZ;;WAAYA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;EAAAA,mB;GAAAA,mB,KAAAA,mB"},"metadata":{},"sourceType":"module"}