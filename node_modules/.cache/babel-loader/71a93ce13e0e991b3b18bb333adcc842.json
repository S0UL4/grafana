{"ast":null,"code":"import { compare } from 'fast-json-patch'; // @ts-ignore\n\nimport jsonMap from 'json-source-map';\nimport { flow, get, isArray, isEmpty, last, sortBy, tail, toNumber, isNaN } from 'lodash';\nexport const jsonDiff = (lhs, rhs) => {\n  const diffs = compare(lhs, rhs);\n  const lhsMap = jsonMap.stringify(lhs, null, 2);\n  const rhsMap = jsonMap.stringify(rhs, null, 2);\n\n  const getDiffInformation = diffs => {\n    return diffs.map(diff => {\n      let originalValue = undefined;\n      let value = undefined;\n      let startLineNumber = 0;\n      const path = tail(diff.path.split('/'));\n\n      if (diff.op === 'replace') {\n        originalValue = get(lhs, path);\n        value = diff.value;\n        startLineNumber = rhsMap.pointers[diff.path].value.line;\n      }\n\n      if (diff.op === 'add') {\n        value = diff.value;\n        startLineNumber = rhsMap.pointers[diff.path].value.line;\n      }\n\n      if (diff.op === 'remove') {\n        originalValue = get(lhs, path);\n        startLineNumber = lhsMap.pointers[diff.path].value.line;\n      }\n\n      return {\n        op: diff.op,\n        value,\n        path,\n        originalValue,\n        startLineNumber\n      };\n    });\n  };\n\n  const sortByLineNumber = diffs => sortBy(diffs, 'startLineNumber');\n\n  const groupByPath = diffs => diffs.reduce((acc, value) => {\n    const groupKey = value.path[0];\n\n    if (!acc[groupKey]) {\n      acc[groupKey] = [];\n    }\n\n    acc[groupKey].push(value);\n    return acc;\n  }, {});\n\n  return flow([getDiffInformation, sortByLineNumber, groupByPath])(diffs);\n};\nexport const getDiffText = (diff, showProp = true) => {\n  const prop = last(diff.path);\n  const propIsNumeric = isNumeric(prop);\n  const val = diff.op === 'remove' ? diff.originalValue : diff.value;\n  let text = getDiffOperationText(diff.op);\n\n  if (showProp) {\n    if (propIsNumeric) {\n      text += ` item ${prop}`;\n    } else {\n      if (isArray(val) && !isEmpty(val)) {\n        text += ` ${val.length} ${prop}`;\n      } else {\n        text += ` ${prop}`;\n      }\n    }\n  }\n\n  return text;\n};\n\nconst isNumeric = value => !isNaN(toNumber(value));\n\nexport const getDiffOperationText = operation => {\n  if (operation === 'add') {\n    return 'added';\n  }\n\n  if (operation === 'remove') {\n    return 'deleted';\n  }\n\n  return 'changed';\n};","map":{"version":3,"names":["compare","jsonMap","flow","get","isArray","isEmpty","last","sortBy","tail","toNumber","isNaN","jsonDiff","lhs","rhs","diffs","lhsMap","stringify","rhsMap","getDiffInformation","map","diff","originalValue","undefined","value","startLineNumber","path","split","op","pointers","line","sortByLineNumber","groupByPath","reduce","acc","groupKey","push","getDiffText","showProp","prop","propIsNumeric","isNumeric","val","text","getDiffOperationText","length","operation"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/VersionHistory/utils.ts"],"sourcesContent":["import { compare, Operation } from 'fast-json-patch';\n// @ts-ignore\nimport jsonMap from 'json-source-map';\nimport { flow, get, isArray, isEmpty, last, sortBy, tail, toNumber, isNaN } from 'lodash';\n\nexport type Diff = {\n  op: 'add' | 'replace' | 'remove' | 'copy' | 'test' | '_get' | 'move';\n  value: any;\n  originalValue: any;\n  path: string[];\n  startLineNumber: number;\n};\n\nexport type Diffs = {\n  [key: string]: Diff[];\n};\n\nexport const jsonDiff = (lhs: any, rhs: any): Diffs => {\n  const diffs = compare(lhs, rhs);\n  const lhsMap = jsonMap.stringify(lhs, null, 2);\n  const rhsMap = jsonMap.stringify(rhs, null, 2);\n\n  const getDiffInformation = (diffs: Operation[]): Diff[] => {\n    return diffs.map((diff) => {\n      let originalValue = undefined;\n      let value = undefined;\n      let startLineNumber = 0;\n\n      const path = tail(diff.path.split('/'));\n\n      if (diff.op === 'replace') {\n        originalValue = get(lhs, path);\n        value = diff.value;\n        startLineNumber = rhsMap.pointers[diff.path].value.line;\n      }\n      if (diff.op === 'add') {\n        value = diff.value;\n        startLineNumber = rhsMap.pointers[diff.path].value.line;\n      }\n      if (diff.op === 'remove') {\n        originalValue = get(lhs, path);\n        startLineNumber = lhsMap.pointers[diff.path].value.line;\n      }\n\n      return {\n        op: diff.op,\n        value,\n        path,\n        originalValue,\n        startLineNumber,\n      };\n    });\n  };\n\n  const sortByLineNumber = (diffs: Diff[]) => sortBy(diffs, 'startLineNumber');\n  const groupByPath = (diffs: Diff[]) =>\n    diffs.reduce<Record<string, any>>((acc, value) => {\n      const groupKey: string = value.path[0];\n      if (!acc[groupKey]) {\n        acc[groupKey] = [];\n      }\n      acc[groupKey].push(value);\n      return acc;\n    }, {});\n\n  return flow([getDiffInformation, sortByLineNumber, groupByPath])(diffs);\n};\n\nexport const getDiffText = (diff: Diff, showProp = true) => {\n  const prop = last(diff.path)!;\n  const propIsNumeric = isNumeric(prop);\n  const val = diff.op === 'remove' ? diff.originalValue : diff.value;\n  let text = getDiffOperationText(diff.op);\n\n  if (showProp) {\n    if (propIsNumeric) {\n      text += ` item ${prop}`;\n    } else {\n      if (isArray(val) && !isEmpty(val)) {\n        text += ` ${val.length} ${prop}`;\n      } else {\n        text += ` ${prop}`;\n      }\n    }\n  }\n\n  return text;\n};\n\nconst isNumeric = (value: string) => !isNaN(toNumber(value));\n\nexport const getDiffOperationText = (operation: string): string => {\n  if (operation === 'add') {\n    return 'added';\n  }\n  if (operation === 'remove') {\n    return 'deleted';\n  }\n  return 'changed';\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}