{"ast":null,"code":"import React, { Suspense } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Field = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"prom-query-field\" */\n'./MonacoQueryField'));\nexport const MonacoQueryFieldLazy = props => {\n  return /*#__PURE__*/_jsx(Suspense, {\n    fallback: null,\n    children: /*#__PURE__*/_jsx(Field, Object.assign({}, props))\n  });\n};","map":{"version":3,"names":["React","Suspense","Field","lazy","MonacoQueryFieldLazy","props"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/components/monaco-query-field/MonacoQueryFieldLazy.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\n\nimport { Props } from './MonacoQueryFieldProps';\n\nconst Field = React.lazy(() => import(/* webpackChunkName: \"prom-query-field\" */ './MonacoQueryField'));\n\nexport const MonacoQueryFieldLazy = (props: Props) => {\n  return (\n    <Suspense fallback={null}>\n      <Field {...props} />\n    </Suspense>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAIA,MAAMC,KAAK,gBAAGF,KAAK,CAACG,IAAN,CAAW,MAAM;AAAO;AAA2C,oBAAlD,CAAjB,CAAd;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAkB;EACpD,oBACE,KAAC,QAAD;IAAU,QAAQ,EAAE,IAApB;IAAA,uBACE,KAAC,KAAD,oBAAWA,KAAX;EADF,EADF;AAKD,CANM"},"metadata":{},"sourceType":"module"}