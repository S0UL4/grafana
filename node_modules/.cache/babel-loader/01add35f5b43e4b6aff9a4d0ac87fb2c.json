{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { useTheme, stylesFactory } from '../../../themes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst stopPropagation = event => event.stopPropagation();\n\nexport const TimeZoneGroup = props => {\n  const theme = useTheme();\n  const {\n    children,\n    label\n  } = props;\n  const styles = getStyles(theme);\n\n  if (!label) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      onClick: stopPropagation,\n      children: children\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    onClick: stopPropagation,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: styles.label,\n        children: label\n      })\n    }), children]\n  });\n};\nconst getStyles = stylesFactory(theme => {\n  return {\n    header: css`\n      padding: 7px 10px;\n      width: 100%;\n      border-top: 1px solid ${theme.colors.border1};\n      text-transform: capitalize;\n    `,\n    label: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      font-weight: ${theme.typography.weight.semibold};\n    `\n  };\n});","map":{"version":3,"names":["css","React","useTheme","stylesFactory","stopPropagation","event","TimeZoneGroup","props","theme","children","label","styles","getStyles","header","colors","border1","typography","size","sm","textWeak","weight","semibold"],"sources":["/home/soula/grafana/packages/grafana-ui/src/components/DateTimePickers/TimeZonePicker/TimeZoneGroup.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PropsWithChildren } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\n\nimport { useTheme, stylesFactory } from '../../../themes';\n\ninterface Props {\n  label: string | undefined;\n}\n\nconst stopPropagation = (event: React.MouseEvent) => event.stopPropagation();\n\nexport const TimeZoneGroup: React.FC<PropsWithChildren<Props>> = (props) => {\n  const theme = useTheme();\n  const { children, label } = props;\n  const styles = getStyles(theme);\n\n  if (!label) {\n    return <div onClick={stopPropagation}>{children}</div>;\n  }\n\n  return (\n    <div onClick={stopPropagation}>\n      <div className={styles.header}>\n        <span className={styles.label}>{label}</span>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    header: css`\n      padding: 7px 10px;\n      width: 100%;\n      border-top: 1px solid ${theme.colors.border1};\n      text-transform: capitalize;\n    `,\n    label: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n  };\n});\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAIA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,iBAAxC;;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAA6BA,KAAK,CAACD,eAAN,EAArD;;AAEA,OAAO,MAAME,aAAiD,GAAIC,KAAD,IAAW;EAC1E,MAAMC,KAAK,GAAGN,QAAQ,EAAtB;EACA,MAAM;IAAEO,QAAF;IAAYC;EAAZ,IAAsBH,KAA5B;EACA,MAAMI,MAAM,GAAGC,SAAS,CAACJ,KAAD,CAAxB;;EAEA,IAAI,CAACE,KAAL,EAAY;IACV,oBAAO;MAAK,OAAO,EAAEN,eAAd;MAAA,UAAgCK;IAAhC,EAAP;EACD;;EAED,oBACE;IAAK,OAAO,EAAEL,eAAd;IAAA,wBACE;MAAK,SAAS,EAAEO,MAAM,CAACE,MAAvB;MAAA,uBACE;QAAM,SAAS,EAAEF,MAAM,CAACD,KAAxB;QAAA,UAAgCA;MAAhC;IADF,EADF,EAIGD,QAJH;EAAA,EADF;AAQD,CAjBM;AAmBP,MAAMG,SAAS,GAAGT,aAAa,CAAEK,KAAD,IAAyB;EACvD,OAAO;IACLK,MAAM,EAAEb,GAAI;AAChB;AACA;AACA,8BAA8BQ,KAAK,CAACM,MAAN,CAAaC,OAAQ;AACnD;AACA,KANS;IAOLL,KAAK,EAAEV,GAAI;AACf,mBAAmBQ,KAAK,CAACQ,UAAN,CAAiBC,IAAjB,CAAsBC,EAAG;AAC5C,eAAeV,KAAK,CAACM,MAAN,CAAaK,QAAS;AACrC,qBAAqBX,KAAK,CAACQ,UAAN,CAAiBI,MAAjB,CAAwBC,QAAS;AACtD;EAXS,CAAP;AAaD,CAd8B,CAA/B"},"metadata":{},"sourceType":"module"}