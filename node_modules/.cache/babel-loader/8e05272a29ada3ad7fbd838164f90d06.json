{"ast":null,"code":"import React from 'react';\nimport { useEffectOnce } from 'react-use';\nimport { sanitizeUrl } from '@grafana/data/src/text/sanitize';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { TimeRangeUpdatedEvent } from '@grafana/runtime';\nimport { Icon, Tooltip, useForceUpdate } from '@grafana/ui';\nimport { getLinkSrv } from '../../../panel/panellinks/link_srv';\nimport { linkIconMap } from '../LinksSettings/LinkSettingsEdit';\nimport { DashboardLinksDashboard } from './DashboardLinksDashboard';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const DashboardLinks = ({\n  dashboard,\n  links\n}) => {\n  const forceUpdate = useForceUpdate();\n  useEffectOnce(() => {\n    const sub = dashboard.events.subscribe(TimeRangeUpdatedEvent, forceUpdate);\n    return () => sub.unsubscribe();\n  });\n\n  if (!links.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: links.map((link, index) => {\n      const linkInfo = getLinkSrv().getAnchorInfo(link);\n      const key = `${link.title}-$${index}`;\n\n      if (link.type === 'dashboards') {\n        return /*#__PURE__*/_jsx(DashboardLinksDashboard, {\n          link: link,\n          linkInfo: linkInfo,\n          dashboardId: dashboard.id\n        }, key);\n      }\n\n      const linkElement = /*#__PURE__*/_jsxs(\"a\", {\n        className: \"gf-form-label gf-form-label--dashlink\",\n        href: sanitizeUrl(linkInfo.href),\n        target: link.targetBlank ? '_blank' : undefined,\n        rel: \"noreferrer\",\n        \"data-testid\": selectors.components.DashboardLinks.link,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          \"aria-hidden\": true,\n          name: linkIconMap[link.icon],\n          style: {\n            marginRight: '4px'\n          }\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: linkInfo.title\n        })]\n      });\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form\",\n        \"data-testid\": selectors.components.DashboardLinks.container,\n        children: link.tooltip ? /*#__PURE__*/_jsx(Tooltip, {\n          content: linkInfo.tooltip,\n          children: linkElement\n        }) : linkElement\n      }, key);\n    })\n  });\n};","map":{"version":3,"names":["React","useEffectOnce","sanitizeUrl","selectors","TimeRangeUpdatedEvent","Icon","Tooltip","useForceUpdate","getLinkSrv","linkIconMap","DashboardLinksDashboard","DashboardLinks","dashboard","links","forceUpdate","sub","events","subscribe","unsubscribe","length","map","link","index","linkInfo","getAnchorInfo","key","title","type","id","linkElement","href","targetBlank","undefined","components","icon","marginRight","container","tooltip"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/SubMenu/DashboardLinks.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { sanitizeUrl } from '@grafana/data/src/text/sanitize';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { TimeRangeUpdatedEvent } from '@grafana/runtime';\nimport { Icon, IconName, Tooltip, useForceUpdate } from '@grafana/ui';\n\nimport { getLinkSrv } from '../../../panel/panellinks/link_srv';\nimport { DashboardModel } from '../../state';\nimport { DashboardLink } from '../../state/DashboardModel';\nimport { linkIconMap } from '../LinksSettings/LinkSettingsEdit';\n\nimport { DashboardLinksDashboard } from './DashboardLinksDashboard';\n\nexport interface Props {\n  dashboard: DashboardModel;\n  links: DashboardLink[];\n}\n\nexport const DashboardLinks: FC<Props> = ({ dashboard, links }) => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    const sub = dashboard.events.subscribe(TimeRangeUpdatedEvent, forceUpdate);\n    return () => sub.unsubscribe();\n  });\n\n  if (!links.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {links.map((link: DashboardLink, index: number) => {\n        const linkInfo = getLinkSrv().getAnchorInfo(link);\n        const key = `${link.title}-$${index}`;\n\n        if (link.type === 'dashboards') {\n          return <DashboardLinksDashboard key={key} link={link} linkInfo={linkInfo} dashboardId={dashboard.id} />;\n        }\n\n        const linkElement = (\n          <a\n            className=\"gf-form-label gf-form-label--dashlink\"\n            href={sanitizeUrl(linkInfo.href)}\n            target={link.targetBlank ? '_blank' : undefined}\n            rel=\"noreferrer\"\n            data-testid={selectors.components.DashboardLinks.link}\n          >\n            <Icon aria-hidden name={linkIconMap[link.icon] as IconName} style={{ marginRight: '4px' }} />\n            <span>{linkInfo.title}</span>\n          </a>\n        );\n\n        return (\n          <div key={key} className=\"gf-form\" data-testid={selectors.components.DashboardLinks.container}>\n            {link.tooltip ? <Tooltip content={linkInfo.tooltip}>{linkElement}</Tooltip> : linkElement}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,IAAT,EAAyBC,OAAzB,EAAkCC,cAAlC,QAAwD,aAAxD;AAEA,SAASC,UAAT,QAA2B,oCAA3B;AAGA,SAASC,WAAT,QAA4B,mCAA5B;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;;;;AAOA,OAAO,MAAMC,cAAyB,GAAG,CAAC;EAAEC,SAAF;EAAaC;AAAb,CAAD,KAA0B;EACjE,MAAMC,WAAW,GAAGP,cAAc,EAAlC;EAEAN,aAAa,CAAC,MAAM;IAClB,MAAMc,GAAG,GAAGH,SAAS,CAACI,MAAV,CAAiBC,SAAjB,CAA2Bb,qBAA3B,EAAkDU,WAAlD,CAAZ;IACA,OAAO,MAAMC,GAAG,CAACG,WAAJ,EAAb;EACD,CAHY,CAAb;;EAKA,IAAI,CAACL,KAAK,CAACM,MAAX,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,oBACE;IAAA,UACGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAsBC,KAAtB,KAAwC;MACjD,MAAMC,QAAQ,GAAGf,UAAU,GAAGgB,aAAb,CAA2BH,IAA3B,CAAjB;MACA,MAAMI,GAAG,GAAI,GAAEJ,IAAI,CAACK,KAAM,KAAIJ,KAAM,EAApC;;MAEA,IAAID,IAAI,CAACM,IAAL,KAAc,YAAlB,EAAgC;QAC9B,oBAAO,KAAC,uBAAD;UAAmC,IAAI,EAAEN,IAAzC;UAA+C,QAAQ,EAAEE,QAAzD;UAAmE,WAAW,EAAEX,SAAS,CAACgB;QAA1F,GAA8BH,GAA9B,CAAP;MACD;;MAED,MAAMI,WAAW,gBACf;QACE,SAAS,EAAC,uCADZ;QAEE,IAAI,EAAE3B,WAAW,CAACqB,QAAQ,CAACO,IAAV,CAFnB;QAGE,MAAM,EAAET,IAAI,CAACU,WAAL,GAAmB,QAAnB,GAA8BC,SAHxC;QAIE,GAAG,EAAC,YAJN;QAKE,eAAa7B,SAAS,CAAC8B,UAAV,CAAqBtB,cAArB,CAAoCU,IALnD;QAAA,wBAOE,KAAC,IAAD;UAAM,mBAAN;UAAkB,IAAI,EAAEZ,WAAW,CAACY,IAAI,CAACa,IAAN,CAAnC;UAA4D,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAf;QAAnE,EAPF,eAQE;UAAA,UAAOZ,QAAQ,CAACG;QAAhB,EARF;MAAA,EADF;;MAaA,oBACE;QAAe,SAAS,EAAC,SAAzB;QAAmC,eAAavB,SAAS,CAAC8B,UAAV,CAAqBtB,cAArB,CAAoCyB,SAApF;QAAA,UACGf,IAAI,CAACgB,OAAL,gBAAe,KAAC,OAAD;UAAS,OAAO,EAAEd,QAAQ,CAACc,OAA3B;UAAA,UAAqCR;QAArC,EAAf,GAA6EA;MADhF,GAAUJ,GAAV,CADF;IAKD,CA1BA;EADH,EADF;AA+BD,CA3CM"},"metadata":{},"sourceType":"module"}