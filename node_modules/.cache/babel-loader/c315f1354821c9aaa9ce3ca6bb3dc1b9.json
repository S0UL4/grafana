{"ast":null,"code":"import React from 'react';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst streamingClientFields = [{\n  label: 'Speed (ms)',\n  id: 'speed',\n  placeholder: 'value',\n  min: 10,\n  step: 10\n}, {\n  label: 'Spread',\n  id: 'spread',\n  placeholder: 'value',\n  min: 0.5,\n  step: 0.1\n}, {\n  label: 'Noise',\n  id: 'noise',\n  placeholder: 'value',\n  min: 0,\n  step: 0.1\n}, {\n  label: 'Bands',\n  id: 'bands',\n  placeholder: 'bands',\n  min: 0,\n  step: 1\n}];\nconst types = [{\n  value: 'signal',\n  label: 'Signal'\n}, {\n  value: 'logs',\n  label: 'Logs'\n}, {\n  value: 'fetch',\n  label: 'Fetch'\n}];\nexport const StreamingClientEditor = ({\n  onChange,\n  query\n}) => {\n  var _query$stream, _query$stream3, _query$stream4;\n\n  const onSelectChange = ({\n    value\n  }) => {\n    onChange({\n      target: {\n        name: 'type',\n        value\n      }\n    });\n  }; // Convert values to numbers before saving\n\n\n  const onInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    onChange({\n      target: {\n        name,\n        value: Number(value)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(InlineFieldRow, {\n    children: [/*#__PURE__*/_jsx(InlineField, {\n      label: \"Type\",\n      labelWidth: 14,\n      children: /*#__PURE__*/_jsx(Select, {\n        width: 32,\n        onChange: onSelectChange,\n        defaultValue: types[0],\n        options: types\n      })\n    }), (query === null || query === void 0 ? void 0 : (_query$stream = query.stream) === null || _query$stream === void 0 ? void 0 : _query$stream.type) === 'signal' && streamingClientFields.map(({\n      label,\n      id,\n      min,\n      step,\n      placeholder\n    }) => {\n      var _query$stream2;\n\n      return /*#__PURE__*/_jsx(InlineField, {\n        label: label,\n        labelWidth: 14,\n        children: /*#__PURE__*/_jsx(Input, {\n          width: 32,\n          type: \"number\",\n          id: `stream.${id}-${query.refId}`,\n          name: id,\n          min: min,\n          step: step,\n          value: (_query$stream2 = query.stream) === null || _query$stream2 === void 0 ? void 0 : _query$stream2[id],\n          placeholder: placeholder,\n          onChange: onInputChange\n        })\n      }, id);\n    }), (query === null || query === void 0 ? void 0 : (_query$stream3 = query.stream) === null || _query$stream3 === void 0 ? void 0 : _query$stream3.type) === 'fetch' && /*#__PURE__*/_jsx(InlineField, {\n      label: \"URL\",\n      labelWidth: 14,\n      grow: true,\n      children: /*#__PURE__*/_jsx(Input, {\n        type: \"text\",\n        name: \"url\",\n        id: `stream.url-${query.refId}`,\n        value: query === null || query === void 0 ? void 0 : (_query$stream4 = query.stream) === null || _query$stream4 === void 0 ? void 0 : _query$stream4.url,\n        placeholder: \"Fetch URL\",\n        onChange: onChange\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","InlineField","InlineFieldRow","Input","Select","streamingClientFields","label","id","placeholder","min","step","types","value","StreamingClientEditor","onChange","query","onSelectChange","target","name","onInputChange","e","Number","stream","type","map","refId","url"],"sources":["/home/soula/grafana/public/app/plugins/datasource/testdata/components/StreamingClientEditor.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { StreamingQuery } from '../types';\n\nconst streamingClientFields = [\n  { label: 'Speed (ms)', id: 'speed', placeholder: 'value', min: 10, step: 10 },\n  { label: 'Spread', id: 'spread', placeholder: 'value', min: 0.5, step: 0.1 },\n  { label: 'Noise', id: 'noise', placeholder: 'value', min: 0, step: 0.1 },\n  { label: 'Bands', id: 'bands', placeholder: 'bands', min: 0, step: 1 },\n];\n\nconst types = [\n  { value: 'signal', label: 'Signal' },\n  { value: 'logs', label: 'Logs' },\n  { value: 'fetch', label: 'Fetch' },\n];\n\nexport const StreamingClientEditor = ({ onChange, query }: EditorProps) => {\n  const onSelectChange = ({ value }: SelectableValue) => {\n    onChange({ target: { name: 'type', value } });\n  };\n\n  // Convert values to numbers before saving\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    onChange({ target: { name, value: Number(value) } });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Type\" labelWidth={14}>\n        <Select width={32} onChange={onSelectChange} defaultValue={types[0]} options={types} />\n      </InlineField>\n      {query?.stream?.type === 'signal' &&\n        streamingClientFields.map(({ label, id, min, step, placeholder }) => {\n          return (\n            <InlineField label={label} labelWidth={14} key={id}>\n              <Input\n                width={32}\n                type=\"number\"\n                id={`stream.${id}-${query.refId}`}\n                name={id}\n                min={min}\n                step={step}\n                value={query.stream?.[id as keyof StreamingQuery]}\n                placeholder={placeholder}\n                onChange={onInputChange}\n              />\n            </InlineField>\n          );\n        })}\n\n      {query?.stream?.type === 'fetch' && (\n        <InlineField label=\"URL\" labelWidth={14} grow>\n          <Input\n            type=\"text\"\n            name=\"url\"\n            id={`stream.url-${query.refId}`}\n            value={query?.stream?.url}\n            placeholder=\"Fetch URL\"\n            onChange={onChange}\n          />\n        </InlineField>\n      )}\n    </InlineFieldRow>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}