{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/soula/grafana/public/app/features/canvas/element.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { RegistryItem } from '@grafana/data';\nimport { PanelOptionsSupplier } from '@grafana/data/src/panel/PanelPlugin';\n\nimport { DimensionContext } from '../dimensions/context';\n\nimport { BackgroundConfig, Constraint, LineConfig, Placement } from './types';\n\n/**\n * This gets saved in panel json\n *\n * depending on the type, it may have additional config\n *\n * @alpha\n */\nexport interface CanvasElementOptions<TConfig = any> {\n  name: string; // configured unique display name\n  type: string;\n\n  // Custom options depending on the type\n  config?: TConfig;\n\n  // Standard options available for all elements\n  constraint?: Constraint; // defaults vertical - top, horizontal - left\n  placement?: Placement;\n  background?: BackgroundConfig;\n  border?: LineConfig;\n}\n\nexport interface CanvasElementProps<TConfig = any, TData = any> {\n  // Saved config\n  config: TConfig;\n\n  // Raw data\n  data?: TData;\n}\n\n/**\n * Canvas item builder\n *\n * @alpha\n */\nexport interface CanvasElementItem<TConfig = any, TData = any> extends RegistryItem {\n  /** The default width/height to use when adding  */\n  defaultSize?: Placement;\n\n  prepareData?: (ctx: DimensionContext, cfg: TConfig) => TData;\n\n  /** Component used to draw */\n  display: ComponentType<CanvasElementProps<TConfig, TData>>;\n\n  getNewOptions: (options?: CanvasElementOptions) => Omit<CanvasElementOptions<TConfig>, 'type' | 'name'>;\n\n  /** Build the configuration UI */\n  registerOptionsUI?: PanelOptionsSupplier<CanvasElementOptions<TConfig>>;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module"}