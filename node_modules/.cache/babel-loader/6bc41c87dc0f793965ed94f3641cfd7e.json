{"ast":null,"code":"import { css } from '@emotion/css';\nimport React from 'react';\nimport { Button, LinkButton, useStyles } from '@grafana/ui';\nimport { EmptyArea } from './EmptyArea';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const EmptyAreaWithCTA = ({\n  buttonIcon,\n  buttonLabel,\n  buttonSize = 'lg',\n  buttonVariant = 'primary',\n  onButtonClick,\n  text,\n  href,\n  showButton = true\n}) => {\n  const styles = useStyles(getStyles);\n  const commonProps = {\n    className: styles.button,\n    icon: buttonIcon,\n    size: buttonSize,\n    variant: buttonVariant\n  };\n  return /*#__PURE__*/_jsx(EmptyArea, {\n    children: /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.text,\n        children: text\n      }), showButton && (href ? /*#__PURE__*/_jsx(LinkButton, Object.assign({\n        href: href,\n        type: \"button\"\n      }, commonProps, {\n        children: buttonLabel\n      })) : /*#__PURE__*/_jsx(Button, Object.assign({\n        onClick: onButtonClick,\n        type: \"button\"\n      }, commonProps, {\n        children: buttonLabel\n      })))]\n    })\n  });\n};\n\nconst getStyles = theme => {\n  return {\n    container: css`\n      background-color: ${theme.colors.bg2};\n      color: ${theme.colors.textSemiWeak};\n      padding: ${theme.spacing.xl};\n      text-align: center;\n    `,\n    text: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    button: css`\n      margin: ${theme.spacing.md} 0 ${theme.spacing.sm};\n    `\n  };\n};","map":{"version":3,"names":["css","React","Button","LinkButton","useStyles","EmptyArea","EmptyAreaWithCTA","buttonIcon","buttonLabel","buttonSize","buttonVariant","onButtonClick","text","href","showButton","styles","getStyles","commonProps","className","button","icon","size","variant","theme","container","colors","bg2","textSemiWeak","spacing","xl","md","sm"],"sources":["/home/soula/grafana/public/app/features/alerting/unified/components/EmptyAreaWithCTA.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ButtonHTMLAttributes, FC } from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Button, ButtonVariant, IconName, LinkButton, useStyles } from '@grafana/ui';\n\nimport { EmptyArea } from './EmptyArea';\n\nexport interface EmptyAreaWithCTAProps {\n  buttonLabel: string;\n  href?: string;\n  onButtonClick?: ButtonHTMLAttributes<HTMLButtonElement>['onClick'];\n  text: string;\n\n  buttonIcon?: IconName;\n  buttonSize?: 'xs' | 'sm' | 'md' | 'lg';\n  buttonVariant?: ButtonVariant;\n  showButton?: boolean;\n}\n\nexport const EmptyAreaWithCTA: FC<EmptyAreaWithCTAProps> = ({\n  buttonIcon,\n  buttonLabel,\n  buttonSize = 'lg',\n  buttonVariant = 'primary',\n  onButtonClick,\n  text,\n  href,\n  showButton = true,\n}) => {\n  const styles = useStyles(getStyles);\n\n  const commonProps = {\n    className: styles.button,\n    icon: buttonIcon,\n    size: buttonSize,\n    variant: buttonVariant,\n  };\n\n  return (\n    <EmptyArea>\n      <>\n        <p className={styles.text}>{text}</p>\n        {showButton &&\n          (href ? (\n            <LinkButton href={href} type=\"button\" {...commonProps}>\n              {buttonLabel}\n            </LinkButton>\n          ) : (\n            <Button onClick={onButtonClick} type=\"button\" {...commonProps}>\n              {buttonLabel}\n            </Button>\n          ))}\n      </>\n    </EmptyArea>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    container: css`\n      background-color: ${theme.colors.bg2};\n      color: ${theme.colors.textSemiWeak};\n      padding: ${theme.spacing.xl};\n      text-align: center;\n    `,\n    text: css`\n      margin-bottom: ${theme.spacing.md};\n    `,\n    button: css`\n      margin: ${theme.spacing.md} 0 ${theme.spacing.sm};\n    `,\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAgD,OAAhD;AAGA,SAASC,MAAT,EAA0CC,UAA1C,EAAsDC,SAAtD,QAAuE,aAAvE;AAEA,SAASC,SAAT,QAA0B,aAA1B;;;;AAcA,OAAO,MAAMC,gBAA2C,GAAG,CAAC;EAC1DC,UAD0D;EAE1DC,WAF0D;EAG1DC,UAAU,GAAG,IAH6C;EAI1DC,aAAa,GAAG,SAJ0C;EAK1DC,aAL0D;EAM1DC,IAN0D;EAO1DC,IAP0D;EAQ1DC,UAAU,GAAG;AAR6C,CAAD,KASrD;EACJ,MAAMC,MAAM,GAAGX,SAAS,CAACY,SAAD,CAAxB;EAEA,MAAMC,WAAW,GAAG;IAClBC,SAAS,EAAEH,MAAM,CAACI,MADA;IAElBC,IAAI,EAAEb,UAFY;IAGlBc,IAAI,EAAEZ,UAHY;IAIlBa,OAAO,EAAEZ;EAJS,CAApB;EAOA,oBACE,KAAC,SAAD;IAAA,uBACE;MAAA,wBACE;QAAG,SAAS,EAAEK,MAAM,CAACH,IAArB;QAAA,UAA4BA;MAA5B,EADF,EAEGE,UAAU,KACRD,IAAI,gBACH,KAAC,UAAD;QAAY,IAAI,EAAEA,IAAlB;QAAwB,IAAI,EAAC;MAA7B,GAA0CI,WAA1C;QAAA,UACGT;MADH,GADG,gBAKH,KAAC,MAAD;QAAQ,OAAO,EAAEG,aAAjB;QAAgC,IAAI,EAAC;MAArC,GAAkDM,WAAlD;QAAA,UACGT;MADH,GANO,CAFb;IAAA;EADF,EADF;AAiBD,CApCM;;AAsCP,MAAMQ,SAAS,GAAIO,KAAD,IAAyB;EACzC,OAAO;IACLC,SAAS,EAAExB,GAAI;AACnB,0BAA0BuB,KAAK,CAACE,MAAN,CAAaC,GAAI;AAC3C,eAAeH,KAAK,CAACE,MAAN,CAAaE,YAAa;AACzC,iBAAiBJ,KAAK,CAACK,OAAN,CAAcC,EAAG;AAClC;AACA,KANS;IAOLjB,IAAI,EAAEZ,GAAI;AACd,uBAAuBuB,KAAK,CAACK,OAAN,CAAcE,EAAG;AACxC,KATS;IAULX,MAAM,EAAEnB,GAAI;AAChB,gBAAgBuB,KAAK,CAACK,OAAN,CAAcE,EAAG,MAAKP,KAAK,CAACK,OAAN,CAAcG,EAAG;AACvD;EAZS,CAAP;AAcD,CAfD"},"metadata":{},"sourceType":"module"}