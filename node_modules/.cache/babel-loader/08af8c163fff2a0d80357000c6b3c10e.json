{"ast":null,"code":"var _HorizontalGroup;\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { ClickOutsideWrapper, HorizontalGroup, Spinner } from '@grafana/ui';\nimport { RolePickerInput } from './RolePickerInput';\nimport { RolePickerMenu } from './RolePickerMenu';\nimport { MENU_MAX_HEIGHT, ROLE_PICKER_WIDTH } from './constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const RolePicker = ({\n  builtInRole,\n  appliedRoles,\n  roleOptions,\n  disabled,\n  isLoading,\n  builtinRolesDisabled,\n  showBuiltInRole,\n  onRolesChange,\n  onBuiltinRoleChange,\n  updateDisabled\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [selectedRoles, setSelectedRoles] = useState(appliedRoles);\n  const [selectedBuiltInRole, setSelectedBuiltInRole] = useState(builtInRole);\n  const [query, setQuery] = useState('');\n  const [offset, setOffset] = useState({\n    vertical: 0,\n    horizontal: 0\n  });\n  const ref = useRef(null);\n  useEffect(() => {\n    setSelectedBuiltInRole(builtInRole);\n    setSelectedRoles(appliedRoles);\n  }, [appliedRoles, builtInRole]);\n  useEffect(() => {\n    var _ref$current;\n\n    const dimensions = ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n\n    if (!dimensions || !isOpen) {\n      return;\n    }\n\n    const {\n      bottom,\n      top,\n      left,\n      right\n    } = dimensions;\n    const distance = window.innerHeight - bottom;\n    const offsetVertical = bottom - top + 10; // Add extra 10px to offset to account for border and outline\n\n    const offsetHorizontal = right - left;\n    let horizontal = -offsetHorizontal;\n    let vertical = -offsetVertical;\n\n    if (distance < MENU_MAX_HEIGHT + 20) {\n      vertical = offsetVertical;\n    }\n\n    if (window.innerWidth - right < ROLE_PICKER_WIDTH) {\n      horizontal = offsetHorizontal;\n    }\n\n    setOffset({\n      horizontal,\n      vertical\n    });\n  }, [isOpen, selectedRoles]);\n  const onOpen = useCallback(event => {\n    if (!disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      setOpen(true);\n    }\n  }, [setOpen, disabled]);\n  const onClose = useCallback(() => {\n    setOpen(false);\n    setQuery('');\n    setSelectedRoles(appliedRoles);\n    setSelectedBuiltInRole(builtInRole);\n  }, [appliedRoles, builtInRole]); // Only call onClose if menu is open. Prevent unnecessary calls for multiple pickers on the page.\n\n  const onClickOutside = () => isOpen && onClose();\n\n  const onInputChange = query => {\n    if (query) {\n      setQuery(query);\n    } else {\n      setQuery('');\n    }\n  };\n\n  const onSelect = roles => {\n    setSelectedRoles(roles);\n  };\n\n  const onBuiltInRoleSelect = role => {\n    setSelectedBuiltInRole(role);\n  };\n\n  const onUpdate = (newRoles, newBuiltInRole) => {\n    if (onBuiltinRoleChange && newBuiltInRole && newBuiltInRole !== builtInRole) {\n      onBuiltinRoleChange(newBuiltInRole);\n    }\n\n    onRolesChange(newRoles);\n    setOpen(false);\n    setQuery('');\n  };\n\n  const getOptions = () => {\n    if (query && query.trim() !== '') {\n      return roleOptions.filter(option => {\n        var _option$name;\n\n        return (_option$name = option.name) === null || _option$name === void 0 ? void 0 : _option$name.toLowerCase().includes(query.toLowerCase());\n      });\n    }\n\n    return roleOptions;\n  };\n\n  if (isLoading) {\n    return _HorizontalGroup || (_HorizontalGroup = /*#__PURE__*/_jsxs(HorizontalGroup, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        children: \"Loading...\"\n      }), /*#__PURE__*/_jsx(Spinner, {\n        size: 16\n      })]\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": \"role-picker\",\n    style: {\n      position: 'relative'\n    },\n    ref: ref,\n    children: /*#__PURE__*/_jsxs(ClickOutsideWrapper, {\n      onClick: onClickOutside,\n      children: [/*#__PURE__*/_jsx(RolePickerInput, {\n        builtInRole: selectedBuiltInRole,\n        appliedRoles: selectedRoles,\n        query: query,\n        onQueryChange: onInputChange,\n        onOpen: onOpen,\n        onClose: onClose,\n        isFocused: isOpen,\n        disabled: disabled,\n        showBuiltInRole: showBuiltInRole\n      }), isOpen && /*#__PURE__*/_jsx(RolePickerMenu, {\n        options: getOptions(),\n        builtInRole: selectedBuiltInRole,\n        appliedRoles: appliedRoles,\n        onBuiltInRoleSelect: onBuiltInRoleSelect,\n        onSelect: onSelect,\n        onUpdate: onUpdate,\n        showGroups: query.length === 0 || query.trim() === '',\n        builtinRolesDisabled: builtinRolesDisabled,\n        showBuiltInRole: showBuiltInRole,\n        updateDisabled: updateDisabled || false,\n        offset: offset\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRef","ClickOutsideWrapper","HorizontalGroup","Spinner","RolePickerInput","RolePickerMenu","MENU_MAX_HEIGHT","ROLE_PICKER_WIDTH","RolePicker","builtInRole","appliedRoles","roleOptions","disabled","isLoading","builtinRolesDisabled","showBuiltInRole","onRolesChange","onBuiltinRoleChange","updateDisabled","isOpen","setOpen","selectedRoles","setSelectedRoles","selectedBuiltInRole","setSelectedBuiltInRole","query","setQuery","offset","setOffset","vertical","horizontal","ref","dimensions","current","getBoundingClientRect","bottom","top","left","right","distance","window","innerHeight","offsetVertical","offsetHorizontal","innerWidth","onOpen","event","preventDefault","stopPropagation","onClose","onClickOutside","onInputChange","onSelect","roles","onBuiltInRoleSelect","role","onUpdate","newRoles","newBuiltInRole","getOptions","trim","filter","option","name","toLowerCase","includes","position","length"],"sources":["/home/soula/grafana/public/app/core/components/RolePicker/RolePicker.tsx"],"sourcesContent":["import React, { FormEvent, useCallback, useEffect, useState, useRef } from 'react';\n\nimport { ClickOutsideWrapper, HorizontalGroup, Spinner } from '@grafana/ui';\nimport { Role, OrgRole } from 'app/types';\n\nimport { RolePickerInput } from './RolePickerInput';\nimport { RolePickerMenu } from './RolePickerMenu';\nimport { MENU_MAX_HEIGHT, ROLE_PICKER_WIDTH } from './constants';\n\nexport interface Props {\n  builtInRole?: OrgRole;\n  appliedRoles: Role[];\n  roleOptions: Role[];\n  builtInRoles?: Record<string, Role[]>;\n  isLoading?: boolean;\n  disabled?: boolean;\n  builtinRolesDisabled?: boolean;\n  showBuiltInRole?: boolean;\n  onRolesChange: (newRoles: Role[]) => void;\n  onBuiltinRoleChange?: (newRole: OrgRole) => void;\n  updateDisabled?: boolean;\n}\n\nexport const RolePicker = ({\n  builtInRole,\n  appliedRoles,\n  roleOptions,\n  disabled,\n  isLoading,\n  builtinRolesDisabled,\n  showBuiltInRole,\n  onRolesChange,\n  onBuiltinRoleChange,\n  updateDisabled,\n}: Props): JSX.Element | null => {\n  const [isOpen, setOpen] = useState(false);\n  const [selectedRoles, setSelectedRoles] = useState<Role[]>(appliedRoles);\n  const [selectedBuiltInRole, setSelectedBuiltInRole] = useState<OrgRole | undefined>(builtInRole);\n  const [query, setQuery] = useState('');\n  const [offset, setOffset] = useState({ vertical: 0, horizontal: 0 });\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setSelectedBuiltInRole(builtInRole);\n    setSelectedRoles(appliedRoles);\n  }, [appliedRoles, builtInRole]);\n\n  useEffect(() => {\n    const dimensions = ref?.current?.getBoundingClientRect();\n    if (!dimensions || !isOpen) {\n      return;\n    }\n    const { bottom, top, left, right } = dimensions;\n    const distance = window.innerHeight - bottom;\n    const offsetVertical = bottom - top + 10; // Add extra 10px to offset to account for border and outline\n    const offsetHorizontal = right - left;\n    let horizontal = -offsetHorizontal;\n    let vertical = -offsetVertical;\n\n    if (distance < MENU_MAX_HEIGHT + 20) {\n      vertical = offsetVertical;\n    }\n\n    if (window.innerWidth - right < ROLE_PICKER_WIDTH) {\n      horizontal = offsetHorizontal;\n    }\n\n    setOffset({ horizontal, vertical });\n  }, [isOpen, selectedRoles]);\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      if (!disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n        setOpen(true);\n      }\n    },\n    [setOpen, disabled]\n  );\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n    setQuery('');\n    setSelectedRoles(appliedRoles);\n    setSelectedBuiltInRole(builtInRole);\n  }, [appliedRoles, builtInRole]);\n\n  // Only call onClose if menu is open. Prevent unnecessary calls for multiple pickers on the page.\n  const onClickOutside = () => isOpen && onClose();\n\n  const onInputChange = (query?: string) => {\n    if (query) {\n      setQuery(query);\n    } else {\n      setQuery('');\n    }\n  };\n\n  const onSelect = (roles: Role[]) => {\n    setSelectedRoles(roles);\n  };\n\n  const onBuiltInRoleSelect = (role: OrgRole) => {\n    setSelectedBuiltInRole(role);\n  };\n\n  const onUpdate = (newRoles: Role[], newBuiltInRole?: OrgRole) => {\n    if (onBuiltinRoleChange && newBuiltInRole && newBuiltInRole !== builtInRole) {\n      onBuiltinRoleChange(newBuiltInRole);\n    }\n    onRolesChange(newRoles);\n    setOpen(false);\n    setQuery('');\n  };\n\n  const getOptions = () => {\n    if (query && query.trim() !== '') {\n      return roleOptions.filter((option) => option.name?.toLowerCase().includes(query.toLowerCase()));\n    }\n    return roleOptions;\n  };\n\n  if (isLoading) {\n    return (\n      <HorizontalGroup justify=\"center\">\n        <span>Loading...</span>\n        <Spinner size={16} />\n      </HorizontalGroup>\n    );\n  }\n\n  return (\n    <div data-testid=\"role-picker\" style={{ position: 'relative' }} ref={ref}>\n      <ClickOutsideWrapper onClick={onClickOutside}>\n        <RolePickerInput\n          builtInRole={selectedBuiltInRole}\n          appliedRoles={selectedRoles}\n          query={query}\n          onQueryChange={onInputChange}\n          onOpen={onOpen}\n          onClose={onClose}\n          isFocused={isOpen}\n          disabled={disabled}\n          showBuiltInRole={showBuiltInRole}\n        />\n        {isOpen && (\n          <RolePickerMenu\n            options={getOptions()}\n            builtInRole={selectedBuiltInRole}\n            appliedRoles={appliedRoles}\n            onBuiltInRoleSelect={onBuiltInRoleSelect}\n            onSelect={onSelect}\n            onUpdate={onUpdate}\n            showGroups={query.length === 0 || query.trim() === ''}\n            builtinRolesDisabled={builtinRolesDisabled}\n            showBuiltInRole={showBuiltInRole}\n            updateDisabled={updateDisabled || false}\n            offset={offset}\n          />\n        )}\n      </ClickOutsideWrapper>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}