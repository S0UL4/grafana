{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { clone } from 'lodash';\nexport class SqlPartDef {\n  constructor(options) {\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"style\", void 0);\n\n    _defineProperty(this, \"label\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"defaultParams\", void 0);\n\n    _defineProperty(this, \"wrapOpen\", void 0);\n\n    _defineProperty(this, \"wrapClose\", void 0);\n\n    _defineProperty(this, \"separator\", void 0);\n\n    this.type = options.type;\n\n    if (options.label) {\n      this.label = options.label;\n    } else {\n      this.label = this.type[0].toUpperCase() + this.type.substring(1) + ':';\n    }\n\n    this.style = options.style;\n\n    if (this.style === 'function') {\n      this.wrapOpen = '(';\n      this.wrapClose = ')';\n      this.separator = ', ';\n    } else {\n      this.wrapOpen = ' ';\n      this.wrapClose = ' ';\n      this.separator = ' ';\n    }\n\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n  }\n\n}\nexport class SqlPart {\n  constructor(part, def) {\n    _defineProperty(this, \"part\", void 0);\n\n    _defineProperty(this, \"def\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"label\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"datatype\", void 0);\n\n    this.part = part;\n    this.def = def;\n\n    if (!this.def) {\n      throw {\n        message: 'Could not find sql part ' + part.type\n      };\n    }\n\n    this.datatype = part.datatype;\n\n    if (part.name) {\n      this.name = part.name;\n      this.label = def.label + ' ' + part.name;\n    } else {\n      this.name = '';\n      this.label = def.label;\n    }\n\n    part.params = part.params || clone(this.def.defaultParams);\n    this.params = part.params;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n  }\n\n}","map":{"version":3,"names":["clone","SqlPartDef","constructor","options","type","label","toUpperCase","substring","style","wrapOpen","wrapClose","separator","params","defaultParams","SqlPart","part","def","message","datatype","name","updateParam","strValue","index","optional","splice"],"sources":["/home/soula/grafana/public/app/angular/components/sql_part/sql_part.ts"],"sourcesContent":["import { clone } from 'lodash';\n\nexport class SqlPartDef {\n  type: string;\n  style: string;\n  label: string;\n  params: any[];\n  defaultParams: any[];\n  wrapOpen: string;\n  wrapClose: string;\n  separator: string;\n\n  constructor(options: any) {\n    this.type = options.type;\n    if (options.label) {\n      this.label = options.label;\n    } else {\n      this.label = this.type[0].toUpperCase() + this.type.substring(1) + ':';\n    }\n    this.style = options.style;\n    if (this.style === 'function') {\n      this.wrapOpen = '(';\n      this.wrapClose = ')';\n      this.separator = ', ';\n    } else {\n      this.wrapOpen = ' ';\n      this.wrapClose = ' ';\n      this.separator = ' ';\n    }\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n  }\n}\n\nexport class SqlPart {\n  part: any;\n  def: SqlPartDef;\n  params: any[];\n  label: string;\n  name: string;\n  datatype: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find sql part ' + part.type };\n    }\n\n    this.datatype = part.datatype;\n\n    if (part.name) {\n      this.name = part.name;\n      this.label = def.label + ' ' + part.name;\n    } else {\n      this.name = '';\n      this.label = def.label;\n    }\n\n    part.params = part.params || clone(this.def.defaultParams);\n    this.params = part.params;\n  }\n\n  updateParam(strValue: string, index: number) {\n    // handle optional parameters\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n  }\n}\n"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,QAAtB;AAEA,OAAO,MAAMC,UAAN,CAAiB;EAUtBC,WAAW,CAACC,OAAD,EAAe;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IACxB,KAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;;IACA,IAAID,OAAO,CAACE,KAAZ,EAAmB;MACjB,KAAKA,KAAL,GAAaF,OAAO,CAACE,KAArB;IACD,CAFD,MAEO;MACL,KAAKA,KAAL,GAAa,KAAKD,IAAL,CAAU,CAAV,EAAaE,WAAb,KAA6B,KAAKF,IAAL,CAAUG,SAAV,CAAoB,CAApB,CAA7B,GAAsD,GAAnE;IACD;;IACD,KAAKC,KAAL,GAAaL,OAAO,CAACK,KAArB;;IACA,IAAI,KAAKA,KAAL,KAAe,UAAnB,EAA+B;MAC7B,KAAKC,QAAL,GAAgB,GAAhB;MACA,KAAKC,SAAL,GAAiB,GAAjB;MACA,KAAKC,SAAL,GAAiB,IAAjB;IACD,CAJD,MAIO;MACL,KAAKF,QAAL,GAAgB,GAAhB;MACA,KAAKC,SAAL,GAAiB,GAAjB;MACA,KAAKC,SAAL,GAAiB,GAAjB;IACD;;IACD,KAAKC,MAAL,GAAcT,OAAO,CAACS,MAAtB;IACA,KAAKC,aAAL,GAAqBV,OAAO,CAACU,aAA7B;EACD;;AA7BqB;AAgCxB,OAAO,MAAMC,OAAN,CAAc;EAQnBZ,WAAW,CAACa,IAAD,EAAYC,GAAZ,EAAsB;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAC/B,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,GAAL,GAAWA,GAAX;;IACA,IAAI,CAAC,KAAKA,GAAV,EAAe;MACb,MAAM;QAAEC,OAAO,EAAE,6BAA6BF,IAAI,CAACX;MAA7C,CAAN;IACD;;IAED,KAAKc,QAAL,GAAgBH,IAAI,CAACG,QAArB;;IAEA,IAAIH,IAAI,CAACI,IAAT,EAAe;MACb,KAAKA,IAAL,GAAYJ,IAAI,CAACI,IAAjB;MACA,KAAKd,KAAL,GAAaW,GAAG,CAACX,KAAJ,GAAY,GAAZ,GAAkBU,IAAI,CAACI,IAApC;IACD,CAHD,MAGO;MACL,KAAKA,IAAL,GAAY,EAAZ;MACA,KAAKd,KAAL,GAAaW,GAAG,CAACX,KAAjB;IACD;;IAEDU,IAAI,CAACH,MAAL,GAAcG,IAAI,CAACH,MAAL,IAAeZ,KAAK,CAAC,KAAKgB,GAAL,CAASH,aAAV,CAAlC;IACA,KAAKD,MAAL,GAAcG,IAAI,CAACH,MAAnB;EACD;;EAEDQ,WAAW,CAACC,QAAD,EAAmBC,KAAnB,EAAkC;IAC3C;IACA,IAAID,QAAQ,KAAK,EAAb,IAAmB,KAAKL,GAAL,CAASJ,MAAT,CAAgBU,KAAhB,EAAuBC,QAA9C,EAAwD;MACtD,KAAKX,MAAL,CAAYY,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;IACD,CAFD,MAEO;MACL,KAAKV,MAAL,CAAYU,KAAZ,IAAqBD,QAArB;IACD;;IAED,KAAKN,IAAL,CAAUH,MAAV,GAAmB,KAAKA,MAAxB;EACD;;AAtCkB"},"metadata":{},"sourceType":"module"}