{"ast":null,"code":"export let LokiResultType;\n\n(function (LokiResultType) {\n  LokiResultType[\"Stream\"] = \"streams\";\n  LokiResultType[\"Vector\"] = \"vector\";\n  LokiResultType[\"Matrix\"] = \"matrix\";\n})(LokiResultType || (LokiResultType = {}));\n\nexport let LokiQueryType;\n\n(function (LokiQueryType) {\n  LokiQueryType[\"Range\"] = \"range\";\n  LokiQueryType[\"Instant\"] = \"instant\";\n  LokiQueryType[\"Stream\"] = \"stream\";\n})(LokiQueryType || (LokiQueryType = {}));\n\nexport let LokiQueryDirection;\n\n(function (LokiQueryDirection) {\n  LokiQueryDirection[\"Backward\"] = \"backward\";\n  LokiQueryDirection[\"Forward\"] = \"forward\";\n})(LokiQueryDirection || (LokiQueryDirection = {}));","map":{"version":3,"names":["LokiResultType","LokiQueryType","LokiQueryDirection"],"sources":["/home/soula/grafana/public/app/plugins/datasource/loki/types.ts"],"sourcesContent":["import { DataQuery, DataSourceJsonData, QueryResultMeta, ScopedVars } from '@grafana/data';\n\nimport { QueryEditorMode } from '../prometheus/querybuilder/shared/types';\n\nexport interface LokiInstantQueryRequest {\n  query: string;\n  limit?: number;\n  time?: string;\n  direction?: 'BACKWARD' | 'FORWARD';\n}\n\nexport interface LokiRangeQueryRequest {\n  query: string;\n  limit?: number;\n  start?: number;\n  end?: number;\n  step?: number;\n  direction?: 'BACKWARD' | 'FORWARD';\n}\n\nexport enum LokiResultType {\n  Stream = 'streams',\n  Vector = 'vector',\n  Matrix = 'matrix',\n}\n\nexport enum LokiQueryType {\n  Range = 'range',\n  Instant = 'instant',\n  Stream = 'stream',\n}\n\nexport enum LokiQueryDirection {\n  Backward = 'backward',\n  Forward = 'forward',\n}\n\nexport interface LokiQuery extends DataQuery {\n  queryType?: LokiQueryType;\n  expr: string;\n  direction?: LokiQueryDirection;\n  legendFormat?: string;\n  maxLines?: number;\n  resolution?: number;\n  /** Used in range queries */\n  volumeQuery?: boolean;\n  /* @deprecated now use queryType */\n  range?: boolean;\n  /* @deprecated now use queryType */\n  instant?: boolean;\n  editorMode?: QueryEditorMode;\n}\n\nexport interface LokiOptions extends DataSourceJsonData {\n  maxLines?: string;\n  derivedFields?: DerivedFieldConfig[];\n  alertmanager?: string;\n  keepCookies?: string[];\n}\n\nexport interface LokiStats {\n  [component: string]: {\n    [label: string]: number;\n  };\n}\n\nexport interface LokiVectorResult {\n  metric: { [label: string]: string };\n  value: [number, string];\n}\n\nexport interface LokiVectorResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Vector;\n    result: LokiVectorResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiMatrixResult {\n  metric: Record<string, string>;\n  values: Array<[number, string]>;\n}\n\nexport interface LokiMatrixResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Matrix;\n    result: LokiMatrixResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiStreamResult {\n  stream: Record<string, string>;\n  values: Array<[string, string]>;\n}\n\nexport interface LokiStreamResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Stream;\n    result: LokiStreamResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiTailResponse {\n  streams: LokiStreamResult[];\n  dropped_entries?: Array<{\n    labels: Record<string, string>;\n    timestamp: string;\n  }> | null;\n}\n\nexport type LokiResult = LokiVectorResult | LokiMatrixResult | LokiStreamResult;\nexport type LokiResponse = LokiVectorResponse | LokiMatrixResponse | LokiStreamResponse;\n\nexport interface LokiLogsStreamEntry {\n  line: string;\n  ts: string;\n}\n\nexport interface LokiExpression {\n  regexp: string;\n  query: string;\n}\n\nexport type DerivedFieldConfig = {\n  matcherRegex: string;\n  name: string;\n  url?: string;\n  urlDisplayLabel?: string;\n  datasourceUid?: string;\n};\n\nexport interface TransformerOptions {\n  legendFormat?: string;\n  query: string;\n  refId: string;\n  scopedVars: ScopedVars;\n  meta?: QueryResultMeta;\n}\n"],"mappings":"AAoBA,WAAYA,cAAZ;;WAAYA,c;EAAAA,c;EAAAA,c;EAAAA,c;GAAAA,c,KAAAA,c;;AAMZ,WAAYC,aAAZ;;WAAYA,a;EAAAA,a;EAAAA,a;EAAAA,a;GAAAA,a,KAAAA,a;;AAMZ,WAAYC,kBAAZ;;WAAYA,kB;EAAAA,kB;EAAAA,kB;GAAAA,kB,KAAAA,kB"},"metadata":{},"sourceType":"module"}