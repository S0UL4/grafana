{"ast":null,"code":"import { attachDebugger, createLogger } from '@grafana/ui';\n/**\n * Returns an opaque identifier for a user, for reporting purposes.\n * Because this is for use when reporting across multiple Grafana installations\n * It cannot simply be user.id because that's not unique across two installations.\n */\n\nexport function getUserIdentifier(user) {\n  if (user.externalUserId.length) {\n    return user.externalUserId;\n  }\n\n  return user.email;\n}\n/** @internal */\n\nexport const echoLogger = createLogger('EchoSrv');\nexport const echoLog = echoLogger.logger;\nattachDebugger('echo', undefined, echoLogger);","map":{"version":3,"names":["attachDebugger","createLogger","getUserIdentifier","user","externalUserId","length","email","echoLogger","echoLog","logger","undefined"],"sources":["/home/soula/grafana/public/app/core/services/echo/utils.ts"],"sourcesContent":["import { CurrentUserDTO } from '@grafana/data';\nimport { attachDebugger, createLogger } from '@grafana/ui';\n\n/**\n * Returns an opaque identifier for a user, for reporting purposes.\n * Because this is for use when reporting across multiple Grafana installations\n * It cannot simply be user.id because that's not unique across two installations.\n */\nexport function getUserIdentifier(user: CurrentUserDTO) {\n  if (user.externalUserId.length) {\n    return user.externalUserId;\n  }\n\n  return user.email;\n}\n\n/** @internal */\nexport const echoLogger = createLogger('EchoSrv');\nexport const echoLog = echoLogger.logger;\n\nattachDebugger('echo', undefined, echoLogger);\n"],"mappings":"AACA,SAASA,cAAT,EAAyBC,YAAzB,QAA6C,aAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiD;EACtD,IAAIA,IAAI,CAACC,cAAL,CAAoBC,MAAxB,EAAgC;IAC9B,OAAOF,IAAI,CAACC,cAAZ;EACD;;EAED,OAAOD,IAAI,CAACG,KAAZ;AACD;AAED;;AACA,OAAO,MAAMC,UAAU,GAAGN,YAAY,CAAC,SAAD,CAA/B;AACP,OAAO,MAAMO,OAAO,GAAGD,UAAU,CAACE,MAA3B;AAEPT,cAAc,CAAC,MAAD,EAASU,SAAT,EAAoBH,UAApB,CAAd"},"metadata":{},"sourceType":"module"}