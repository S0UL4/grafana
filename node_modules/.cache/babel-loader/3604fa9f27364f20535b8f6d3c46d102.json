{"ast":null,"code":"var _div;\n\nimport React, { useCallback, useState } from 'react';\nimport { ValueMatcherID } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport { convertToType } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function rangeMatcherEditor(config) {\n  return function RangeMatcherEditor({\n    options,\n    onChange,\n    field\n  }) {\n    const {\n      validator\n    } = config;\n    const [isInvalid, setInvalid] = useState({\n      from: !validator(options.from),\n      to: !validator(options.to)\n    });\n    const onChangeValue = useCallback((event, prop) => {\n      setInvalid(Object.assign({}, isInvalid, {\n        [prop]: !validator(event.currentTarget.value)\n      }));\n    }, [setInvalid, validator, isInvalid]);\n    const onChangeOptions = useCallback((event, prop) => {\n      if (isInvalid[prop]) {\n        return;\n      }\n\n      const {\n        value\n      } = event.currentTarget;\n      onChange(Object.assign({}, options, {\n        [prop]: convertToType(value, field)\n      }));\n    }, [options, onChange, isInvalid, field]);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Input, {\n        className: \"flex-grow-1 gf-form-spacing\",\n        invalid: isInvalid['from'],\n        defaultValue: String(options.from),\n        placeholder: \"From\",\n        onChange: event => onChangeValue(event, 'from'),\n        onBlur: event => onChangeOptions(event, 'from')\n      }), _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n        className: \"gf-form-label\",\n        children: \"and\"\n      })), /*#__PURE__*/_jsx(Input, {\n        className: \"flex-grow-1\",\n        invalid: isInvalid['to'],\n        defaultValue: String(options.to),\n        placeholder: \"To\",\n        onChange: event => onChangeValue(event, 'to'),\n        onBlur: event => onChangeOptions(event, 'to')\n      })]\n    });\n  };\n}\nexport const getRangeValueMatchersUI = () => {\n  return [{\n    name: 'Is between',\n    id: ValueMatcherID.between,\n    component: rangeMatcherEditor({\n      validator: value => {\n        return !isNaN(value);\n      }\n    })\n  }];\n};","map":{"version":3,"names":["React","useCallback","useState","ValueMatcherID","Input","convertToType","rangeMatcherEditor","config","RangeMatcherEditor","options","onChange","field","validator","isInvalid","setInvalid","from","to","onChangeValue","event","prop","currentTarget","value","onChangeOptions","String","getRangeValueMatchersUI","name","id","between","component","isNaN"],"sources":["/home/soula/grafana/public/app/features/transformers/FilterByValueTransformer/ValueMatchers/RangeMatcherEditor.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { ValueMatcherID, RangeValueMatcherOptions } from '@grafana/data';\nimport { Input } from '@grafana/ui';\n\nimport { ValueMatcherEditorConfig, ValueMatcherUIProps, ValueMatcherUIRegistryItem } from './types';\nimport { convertToType } from './utils';\n\ntype PropNames = 'from' | 'to';\n\nexport function rangeMatcherEditor<T = any>(\n  config: ValueMatcherEditorConfig\n): React.FC<ValueMatcherUIProps<RangeValueMatcherOptions<T>>> {\n  return function RangeMatcherEditor({ options, onChange, field }) {\n    const { validator } = config;\n    const [isInvalid, setInvalid] = useState({\n      from: !validator(options.from),\n      to: !validator(options.to),\n    });\n\n    const onChangeValue = useCallback(\n      (event: React.FormEvent<HTMLInputElement>, prop: PropNames) => {\n        setInvalid({\n          ...isInvalid,\n          [prop]: !validator(event.currentTarget.value),\n        });\n      },\n      [setInvalid, validator, isInvalid]\n    );\n\n    const onChangeOptions = useCallback(\n      (event: React.FocusEvent<HTMLInputElement>, prop: PropNames) => {\n        if (isInvalid[prop]) {\n          return;\n        }\n\n        const { value } = event.currentTarget;\n\n        onChange({\n          ...options,\n          [prop]: convertToType(value, field),\n        });\n      },\n      [options, onChange, isInvalid, field]\n    );\n\n    return (\n      <>\n        <Input\n          className=\"flex-grow-1 gf-form-spacing\"\n          invalid={isInvalid['from']}\n          defaultValue={String(options.from)}\n          placeholder=\"From\"\n          onChange={(event) => onChangeValue(event, 'from')}\n          onBlur={(event) => onChangeOptions(event, 'from')}\n        />\n        <div className=\"gf-form-label\">and</div>\n        <Input\n          className=\"flex-grow-1\"\n          invalid={isInvalid['to']}\n          defaultValue={String(options.to)}\n          placeholder=\"To\"\n          onChange={(event) => onChangeValue(event, 'to')}\n          onBlur={(event) => onChangeOptions(event, 'to')}\n        />\n      </>\n    );\n  };\n}\n\nexport const getRangeValueMatchersUI = (): Array<ValueMatcherUIRegistryItem<RangeValueMatcherOptions>> => {\n  return [\n    {\n      name: 'Is between',\n      id: ValueMatcherID.between,\n      component: rangeMatcherEditor<number>({\n        validator: (value) => {\n          return !isNaN(value);\n        },\n      }),\n    },\n  ];\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,cAAT,QAAyD,eAAzD;AACA,SAASC,KAAT,QAAsB,aAAtB;AAGA,SAASC,aAAT,QAA8B,SAA9B;;;;AAIA,OAAO,SAASC,kBAAT,CACLC,MADK,EAEuD;EAC5D,OAAO,SAASC,kBAAT,CAA4B;IAAEC,OAAF;IAAWC,QAAX;IAAqBC;EAArB,CAA5B,EAA0D;IAC/D,MAAM;MAAEC;IAAF,IAAgBL,MAAtB;IACA,MAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BZ,QAAQ,CAAC;MACvCa,IAAI,EAAE,CAACH,SAAS,CAACH,OAAO,CAACM,IAAT,CADuB;MAEvCC,EAAE,EAAE,CAACJ,SAAS,CAACH,OAAO,CAACO,EAAT;IAFyB,CAAD,CAAxC;IAKA,MAAMC,aAAa,GAAGhB,WAAW,CAC/B,CAACiB,KAAD,EAA2CC,IAA3C,KAA+D;MAC7DL,UAAU,mBACLD,SADK;QAER,CAACM,IAAD,GAAQ,CAACP,SAAS,CAACM,KAAK,CAACE,aAAN,CAAoBC,KAArB;MAFV,GAAV;IAID,CAN8B,EAO/B,CAACP,UAAD,EAAaF,SAAb,EAAwBC,SAAxB,CAP+B,CAAjC;IAUA,MAAMS,eAAe,GAAGrB,WAAW,CACjC,CAACiB,KAAD,EAA4CC,IAA5C,KAAgE;MAC9D,IAAIN,SAAS,CAACM,IAAD,CAAb,EAAqB;QACnB;MACD;;MAED,MAAM;QAAEE;MAAF,IAAYH,KAAK,CAACE,aAAxB;MAEAV,QAAQ,mBACHD,OADG;QAEN,CAACU,IAAD,GAAQd,aAAa,CAACgB,KAAD,EAAQV,KAAR;MAFf,GAAR;IAID,CAZgC,EAajC,CAACF,OAAD,EAAUC,QAAV,EAAoBG,SAApB,EAA+BF,KAA/B,CAbiC,CAAnC;IAgBA,oBACE;MAAA,wBACE,KAAC,KAAD;QACE,SAAS,EAAC,6BADZ;QAEE,OAAO,EAAEE,SAAS,CAAC,MAAD,CAFpB;QAGE,YAAY,EAAEU,MAAM,CAACd,OAAO,CAACM,IAAT,CAHtB;QAIE,WAAW,EAAC,MAJd;QAKE,QAAQ,EAAGG,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQ,MAAR,CALpC;QAME,MAAM,EAAGA,KAAD,IAAWI,eAAe,CAACJ,KAAD,EAAQ,MAAR;MANpC,EADF,+BASE;QAAK,SAAS,EAAC,eAAf;QAAA;MAAA,EATF,gBAUE,KAAC,KAAD;QACE,SAAS,EAAC,aADZ;QAEE,OAAO,EAAEL,SAAS,CAAC,IAAD,CAFpB;QAGE,YAAY,EAAEU,MAAM,CAACd,OAAO,CAACO,EAAT,CAHtB;QAIE,WAAW,EAAC,IAJd;QAKE,QAAQ,EAAGE,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQ,IAAR,CALpC;QAME,MAAM,EAAGA,KAAD,IAAWI,eAAe,CAACJ,KAAD,EAAQ,IAAR;MANpC,EAVF;IAAA,EADF;EAqBD,CAtDD;AAuDD;AAED,OAAO,MAAMM,uBAAuB,GAAG,MAAmE;EACxG,OAAO,CACL;IACEC,IAAI,EAAE,YADR;IAEEC,EAAE,EAAEvB,cAAc,CAACwB,OAFrB;IAGEC,SAAS,EAAEtB,kBAAkB,CAAS;MACpCM,SAAS,EAAGS,KAAD,IAAW;QACpB,OAAO,CAACQ,KAAK,CAACR,KAAD,CAAb;MACD;IAHmC,CAAT;EAH/B,CADK,CAAP;AAWD,CAZM"},"metadata":{},"sourceType":"module"}