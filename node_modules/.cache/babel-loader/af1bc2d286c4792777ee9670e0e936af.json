{"ast":null,"code":"var _VariableSectionHeade;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, InlineFieldRow, VerticalGroup } from '@grafana/ui';\nimport { VariableSectionHeader } from '../editor/VariableSectionHeader';\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { initialVariableEditorState } from '../editor/reducer';\nimport { getAdhocVariableEditorState } from '../editor/selectors';\nimport { getVariablesState } from '../state/selectors';\nimport { toKeyedVariableIdentifier } from '../utils';\nimport { changeVariableDatasource, initAdHocVariableEditor } from './actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    rootStateKey\n  } = ownProps.variable;\n\n  if (!rootStateKey) {\n    console.error('AdHocVariableEditor: variable has no rootStateKey');\n    return {\n      extended: getAdhocVariableEditorState(initialVariableEditorState)\n    };\n  }\n\n  const {\n    editor\n  } = getVariablesState(rootStateKey, state);\n  return {\n    extended: getAdhocVariableEditorState(editor)\n  };\n};\n\nconst mapDispatchToProps = {\n  initAdHocVariableEditor,\n  changeVariableDatasource\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport class AdHocVariableEditorUnConnected extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onDatasourceChanged\", option => {\n      this.props.changeVariableDatasource(toKeyedVariableIdentifier(this.props.variable), option.value);\n    });\n  }\n\n  componentDidMount() {\n    const {\n      rootStateKey\n    } = this.props.variable;\n\n    if (!rootStateKey) {\n      console.error('AdHocVariableEditor: variable has no rootStateKey');\n      return;\n    }\n\n    this.props.initAdHocVariableEditor(rootStateKey);\n  }\n\n  render() {\n    var _extended$dataSources, _extended$infoText, _options$find;\n\n    const {\n      variable,\n      extended\n    } = this.props;\n    const dataSources = (_extended$dataSources = extended === null || extended === void 0 ? void 0 : extended.dataSources) !== null && _extended$dataSources !== void 0 ? _extended$dataSources : [];\n    const infoText = (_extended$infoText = extended === null || extended === void 0 ? void 0 : extended.infoText) !== null && _extended$infoText !== void 0 ? _extended$infoText : null;\n    const options = dataSources.map(ds => ({\n      label: ds.text,\n      value: ds.value\n    }));\n    const value = (_options$find = options.find(o => {\n      var _o$value, _variable$datasource;\n\n      return ((_o$value = o.value) === null || _o$value === void 0 ? void 0 : _o$value.uid) === ((_variable$datasource = variable.datasource) === null || _variable$datasource === void 0 ? void 0 : _variable$datasource.uid);\n    })) !== null && _options$find !== void 0 ? _options$find : options[0];\n    return /*#__PURE__*/_jsxs(VerticalGroup, {\n      spacing: \"xs\",\n      children: [_VariableSectionHeade || (_VariableSectionHeade = /*#__PURE__*/_jsx(VariableSectionHeader, {\n        name: \"Options\"\n      })), /*#__PURE__*/_jsxs(VerticalGroup, {\n        spacing: \"sm\",\n        children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n          children: /*#__PURE__*/_jsx(VariableSelectField, {\n            name: \"Data source\",\n            value: value,\n            options: options,\n            onChange: this.onDatasourceChanged,\n            labelWidth: 10\n          })\n        }), infoText ? /*#__PURE__*/_jsx(Alert, {\n          title: infoText,\n          severity: \"info\"\n        }) : null]\n      })]\n    });\n  }\n\n}\nexport const AdHocVariableEditor = connector(AdHocVariableEditorUnConnected);","map":{"version":3,"names":["React","PureComponent","connect","Alert","InlineFieldRow","VerticalGroup","VariableSectionHeader","VariableSelectField","initialVariableEditorState","getAdhocVariableEditorState","getVariablesState","toKeyedVariableIdentifier","changeVariableDatasource","initAdHocVariableEditor","mapStateToProps","state","ownProps","rootStateKey","variable","console","error","extended","editor","mapDispatchToProps","connector","AdHocVariableEditorUnConnected","option","props","value","componentDidMount","render","dataSources","infoText","options","map","ds","label","text","find","o","uid","datasource","onDatasourceChanged","AdHocVariableEditor"],"sources":["/home/soula/grafana/public/app/features/variables/adhoc/AdHocVariableEditor.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { DataSourceRef, SelectableValue } from '@grafana/data';\nimport { Alert, InlineFieldRow, VerticalGroup } from '@grafana/ui';\nimport { StoreState } from 'app/types';\n\nimport { VariableSectionHeader } from '../editor/VariableSectionHeader';\nimport { VariableSelectField } from '../editor/VariableSelectField';\nimport { initialVariableEditorState } from '../editor/reducer';\nimport { getAdhocVariableEditorState } from '../editor/selectors';\nimport { VariableEditorProps } from '../editor/types';\nimport { getVariablesState } from '../state/selectors';\nimport { AdHocVariableModel } from '../types';\nimport { toKeyedVariableIdentifier } from '../utils';\n\nimport { changeVariableDatasource, initAdHocVariableEditor } from './actions';\n\nconst mapStateToProps = (state: StoreState, ownProps: OwnProps) => {\n  const { rootStateKey } = ownProps.variable;\n\n  if (!rootStateKey) {\n    console.error('AdHocVariableEditor: variable has no rootStateKey');\n    return {\n      extended: getAdhocVariableEditorState(initialVariableEditorState),\n    };\n  }\n\n  const { editor } = getVariablesState(rootStateKey, state);\n\n  return {\n    extended: getAdhocVariableEditorState(editor),\n  };\n};\n\nconst mapDispatchToProps = {\n  initAdHocVariableEditor,\n  changeVariableDatasource,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport interface OwnProps extends VariableEditorProps<AdHocVariableModel> {}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport class AdHocVariableEditorUnConnected extends PureComponent<Props> {\n  componentDidMount() {\n    const { rootStateKey } = this.props.variable;\n    if (!rootStateKey) {\n      console.error('AdHocVariableEditor: variable has no rootStateKey');\n      return;\n    }\n\n    this.props.initAdHocVariableEditor(rootStateKey);\n  }\n\n  onDatasourceChanged = (option: SelectableValue<DataSourceRef>) => {\n    this.props.changeVariableDatasource(toKeyedVariableIdentifier(this.props.variable), option.value);\n  };\n\n  render() {\n    const { variable, extended } = this.props;\n    const dataSources = extended?.dataSources ?? [];\n    const infoText = extended?.infoText ?? null;\n    const options = dataSources.map((ds) => ({ label: ds.text, value: ds.value }));\n    const value = options.find((o) => o.value?.uid === variable.datasource?.uid) ?? options[0];\n\n    return (\n      <VerticalGroup spacing=\"xs\">\n        <VariableSectionHeader name=\"Options\" />\n        <VerticalGroup spacing=\"sm\">\n          <InlineFieldRow>\n            <VariableSelectField\n              name=\"Data source\"\n              value={value}\n              options={options}\n              onChange={this.onDatasourceChanged}\n              labelWidth={10}\n            />\n          </InlineFieldRow>\n\n          {infoText ? <Alert title={infoText} severity=\"info\" /> : null}\n        </VerticalGroup>\n      </VerticalGroup>\n    );\n  }\n}\n\nexport const AdHocVariableEditor = connector(AdHocVariableEditorUnConnected);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}