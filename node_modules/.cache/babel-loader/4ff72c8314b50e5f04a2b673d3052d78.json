{"ast":null,"code":"var _h, _h2;\n\nimport React, { useMemo, useState } from 'react';\nimport { config } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input } from '@grafana/ui';\nimport { KnownAzureClouds } from './AzureCredentials';\nimport { getCredentials, updateCredentials } from './AzureCredentialsConfig';\nimport { AzureCredentialsForm } from './AzureCredentialsForm';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const AzureAuthSettings = props => {\n  const {\n    dataSourceConfig,\n    onChange\n  } = props;\n  const [overrideAudienceAllowed] = useState(config.featureToggles.prometheusAzureOverrideAudience || !!dataSourceConfig.jsonData.azureEndpointResourceId);\n  const [overrideAudienceChecked, setOverrideAudienceChecked] = useState(!!dataSourceConfig.jsonData.azureEndpointResourceId);\n  const credentials = useMemo(() => getCredentials(dataSourceConfig), [dataSourceConfig]);\n\n  const onCredentialsChange = credentials => {\n    onChange(updateCredentials(dataSourceConfig, credentials));\n  };\n\n  const onOverrideAudienceChange = ev => {\n    setOverrideAudienceChecked(ev.currentTarget.checked);\n\n    if (!ev.currentTarget.checked) {\n      onChange(Object.assign({}, dataSourceConfig, {\n        jsonData: Object.assign({}, dataSourceConfig.jsonData, {\n          azureEndpointResourceId: undefined\n        })\n      }));\n    }\n  };\n\n  const onResourceIdChange = ev => {\n    if (overrideAudienceChecked) {\n      onChange(Object.assign({}, dataSourceConfig, {\n        jsonData: Object.assign({}, dataSourceConfig.jsonData, {\n          azureEndpointResourceId: ev.currentTarget.value\n        })\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [_h || (_h = /*#__PURE__*/_jsx(\"h6\", {\n      children: \"Azure Authentication\"\n    })), /*#__PURE__*/_jsx(AzureCredentialsForm, {\n      managedIdentityEnabled: config.azure.managedIdentityEnabled,\n      credentials: credentials,\n      azureCloudOptions: KnownAzureClouds,\n      onCredentialsChange: onCredentialsChange\n    }), overrideAudienceAllowed && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [_h2 || (_h2 = /*#__PURE__*/_jsx(\"h6\", {\n        children: \"Azure Configuration\"\n      })), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"gf-form-group\",\n        children: [/*#__PURE__*/_jsx(InlineFieldRow, {\n          children: /*#__PURE__*/_jsx(InlineField, {\n            labelWidth: 26,\n            label: \"Override AAD audience\",\n            children: /*#__PURE__*/_jsx(InlineSwitch, {\n              value: overrideAudienceChecked,\n              onChange: onOverrideAudienceChange\n            })\n          })\n        }), overrideAudienceChecked && /*#__PURE__*/_jsx(InlineFieldRow, {\n          children: /*#__PURE__*/_jsx(InlineField, {\n            labelWidth: 26,\n            label: \"Resource ID\",\n            children: /*#__PURE__*/_jsx(Input, {\n              className: \"width-30\",\n              value: dataSourceConfig.jsonData.azureEndpointResourceId || '',\n              onChange: onResourceIdChange\n            })\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default AzureAuthSettings;","map":{"version":3,"names":["React","useMemo","useState","config","InlineField","InlineFieldRow","InlineSwitch","Input","KnownAzureClouds","getCredentials","updateCredentials","AzureCredentialsForm","AzureAuthSettings","props","dataSourceConfig","onChange","overrideAudienceAllowed","featureToggles","prometheusAzureOverrideAudience","jsonData","azureEndpointResourceId","overrideAudienceChecked","setOverrideAudienceChecked","credentials","onCredentialsChange","onOverrideAudienceChange","ev","currentTarget","checked","undefined","onResourceIdChange","value","azure","managedIdentityEnabled"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/configuration/AzureAuthSettings.tsx"],"sourcesContent":["import React, { FunctionComponent, FormEvent, useMemo, useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input } from '@grafana/ui';\nimport { HttpSettingsBaseProps } from '@grafana/ui/src/components/DataSourceSettings/types';\n\nimport { KnownAzureClouds, AzureCredentials } from './AzureCredentials';\nimport { getCredentials, updateCredentials } from './AzureCredentialsConfig';\nimport { AzureCredentialsForm } from './AzureCredentialsForm';\n\nexport const AzureAuthSettings: FunctionComponent<HttpSettingsBaseProps> = (props: HttpSettingsBaseProps) => {\n  const { dataSourceConfig, onChange } = props;\n\n  const [overrideAudienceAllowed] = useState<boolean>(\n    config.featureToggles.prometheusAzureOverrideAudience || !!dataSourceConfig.jsonData.azureEndpointResourceId\n  );\n  const [overrideAudienceChecked, setOverrideAudienceChecked] = useState<boolean>(\n    !!dataSourceConfig.jsonData.azureEndpointResourceId\n  );\n\n  const credentials = useMemo(() => getCredentials(dataSourceConfig), [dataSourceConfig]);\n\n  const onCredentialsChange = (credentials: AzureCredentials): void => {\n    onChange(updateCredentials(dataSourceConfig, credentials));\n  };\n\n  const onOverrideAudienceChange = (ev: FormEvent<HTMLInputElement>): void => {\n    setOverrideAudienceChecked(ev.currentTarget.checked);\n    if (!ev.currentTarget.checked) {\n      onChange({\n        ...dataSourceConfig,\n        jsonData: { ...dataSourceConfig.jsonData, azureEndpointResourceId: undefined },\n      });\n    }\n  };\n\n  const onResourceIdChange = (ev: FormEvent<HTMLInputElement>): void => {\n    if (overrideAudienceChecked) {\n      onChange({\n        ...dataSourceConfig,\n        jsonData: { ...dataSourceConfig.jsonData, azureEndpointResourceId: ev.currentTarget.value },\n      });\n    }\n  };\n\n  return (\n    <>\n      <h6>Azure Authentication</h6>\n      <AzureCredentialsForm\n        managedIdentityEnabled={config.azure.managedIdentityEnabled}\n        credentials={credentials}\n        azureCloudOptions={KnownAzureClouds}\n        onCredentialsChange={onCredentialsChange}\n      />\n      {overrideAudienceAllowed && (\n        <>\n          <h6>Azure Configuration</h6>\n          <div className=\"gf-form-group\">\n            <InlineFieldRow>\n              <InlineField labelWidth={26} label=\"Override AAD audience\">\n                <InlineSwitch value={overrideAudienceChecked} onChange={onOverrideAudienceChange} />\n              </InlineField>\n            </InlineFieldRow>\n            {overrideAudienceChecked && (\n              <InlineFieldRow>\n                <InlineField labelWidth={26} label=\"Resource ID\">\n                  <Input\n                    className=\"width-30\"\n                    value={dataSourceConfig.jsonData.azureEndpointResourceId || ''}\n                    onChange={onResourceIdChange}\n                  />\n                </InlineField>\n              </InlineFieldRow>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AzureAuthSettings;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAA8CC,OAA9C,EAAuDC,QAAvD,QAAuE,OAAvE;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,EAAoDC,KAApD,QAAiE,aAAjE;AAGA,SAASC,gBAAT,QAAmD,oBAAnD;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,0BAAlD;AACA,SAASC,oBAAT,QAAqC,wBAArC;;;;AAEA,OAAO,MAAMC,iBAA2D,GAAIC,KAAD,IAAkC;EAC3G,MAAM;IAAEC,gBAAF;IAAoBC;EAApB,IAAiCF,KAAvC;EAEA,MAAM,CAACG,uBAAD,IAA4Bd,QAAQ,CACxCC,MAAM,CAACc,cAAP,CAAsBC,+BAAtB,IAAyD,CAAC,CAACJ,gBAAgB,CAACK,QAAjB,CAA0BC,uBAD7C,CAA1C;EAGA,MAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDpB,QAAQ,CACpE,CAAC,CAACY,gBAAgB,CAACK,QAAjB,CAA0BC,uBADwC,CAAtE;EAIA,MAAMG,WAAW,GAAGtB,OAAO,CAAC,MAAMQ,cAAc,CAACK,gBAAD,CAArB,EAAyC,CAACA,gBAAD,CAAzC,CAA3B;;EAEA,MAAMU,mBAAmB,GAAID,WAAD,IAAyC;IACnER,QAAQ,CAACL,iBAAiB,CAACI,gBAAD,EAAmBS,WAAnB,CAAlB,CAAR;EACD,CAFD;;EAIA,MAAME,wBAAwB,GAAIC,EAAD,IAA2C;IAC1EJ,0BAA0B,CAACI,EAAE,CAACC,aAAH,CAAiBC,OAAlB,CAA1B;;IACA,IAAI,CAACF,EAAE,CAACC,aAAH,CAAiBC,OAAtB,EAA+B;MAC7Bb,QAAQ,mBACHD,gBADG;QAENK,QAAQ,oBAAOL,gBAAgB,CAACK,QAAxB;UAAkCC,uBAAuB,EAAES;QAA3D;MAFF,GAAR;IAID;EACF,CARD;;EAUA,MAAMC,kBAAkB,GAAIJ,EAAD,IAA2C;IACpE,IAAIL,uBAAJ,EAA6B;MAC3BN,QAAQ,mBACHD,gBADG;QAENK,QAAQ,oBAAOL,gBAAgB,CAACK,QAAxB;UAAkCC,uBAAuB,EAAEM,EAAE,CAACC,aAAH,CAAiBI;QAA5E;MAFF,GAAR;IAID;EACF,CAPD;;EASA,oBACE;IAAA,oCACE;MAAA;IAAA,EADF,gBAEE,KAAC,oBAAD;MACE,sBAAsB,EAAE5B,MAAM,CAAC6B,KAAP,CAAaC,sBADvC;MAEE,WAAW,EAAEV,WAFf;MAGE,iBAAiB,EAAEf,gBAHrB;MAIE,mBAAmB,EAAEgB;IAJvB,EAFF,EAQGR,uBAAuB,iBACtB;MAAA,sCACE;QAAA;MAAA,EADF,gBAEE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE,KAAC,cAAD;UAAA,uBACE,KAAC,WAAD;YAAa,UAAU,EAAE,EAAzB;YAA6B,KAAK,EAAC,uBAAnC;YAAA,uBACE,KAAC,YAAD;cAAc,KAAK,EAAEK,uBAArB;cAA8C,QAAQ,EAAEI;YAAxD;UADF;QADF,EADF,EAMGJ,uBAAuB,iBACtB,KAAC,cAAD;UAAA,uBACE,KAAC,WAAD;YAAa,UAAU,EAAE,EAAzB;YAA6B,KAAK,EAAC,aAAnC;YAAA,uBACE,KAAC,KAAD;cACE,SAAS,EAAC,UADZ;cAEE,KAAK,EAAEP,gBAAgB,CAACK,QAAjB,CAA0BC,uBAA1B,IAAqD,EAF9D;cAGE,QAAQ,EAAEU;YAHZ;UADF;QADF,EAPJ;MAAA,EAFF;IAAA,EATJ;EAAA,EADF;AAkCD,CArEM;AAuEP,eAAelB,iBAAf"},"metadata":{},"sourceType":"module"}