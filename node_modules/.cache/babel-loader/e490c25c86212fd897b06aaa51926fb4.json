{"ast":null,"code":"import { uniqBy } from 'lodash';\nimport React, { useState } from 'react';\nimport { toOption } from '@grafana/data';\nimport { AccessoryButton, InputGroup } from '@grafana/experimental';\nimport { Select } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LabelFilterItem({\n  item,\n  defaultOp,\n  onChange,\n  onDelete,\n  onGetLabelNames,\n  onGetLabelValues\n}) {\n  var _item$op2;\n\n  const [state, setState] = useState({});\n\n  const isMultiSelect = () => {\n    return item.op === operators[0].label;\n  };\n\n  const getSelectOptionsFromString = item => {\n    if (item) {\n      if (item.indexOf('|') > 0) {\n        return item.split('|');\n      }\n\n      return [item];\n    }\n\n    return [];\n  };\n\n  const getOptions = () => {\n    const labelValues = state.labelValues ? [...state.labelValues] : [];\n    const selectedOptions = getSelectOptionsFromString(item === null || item === void 0 ? void 0 : item.value).map(toOption); // Remove possible duplicated values\n\n    return uniqBy([...selectedOptions, ...labelValues], 'value');\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": \"prometheus-dimensions-filter-item\",\n    children: /*#__PURE__*/_jsxs(InputGroup, {\n      children: [/*#__PURE__*/_jsx(Select, {\n        inputId: \"prometheus-dimensions-filter-item-key\",\n        width: \"auto\",\n        value: item.label ? toOption(item.label) : null,\n        allowCustomValue: true,\n        onOpenMenu: async () => {\n          setState({\n            isLoadingLabelNames: true\n          });\n          const labelNames = await onGetLabelNames(item);\n          setState({\n            labelNames,\n            isLoadingLabelNames: undefined\n          });\n        },\n        isLoading: state.isLoadingLabelNames,\n        options: state.labelNames,\n        onChange: change => {\n          if (change.label) {\n            var _item$op;\n\n            onChange(Object.assign({}, item, {\n              op: (_item$op = item.op) !== null && _item$op !== void 0 ? _item$op : defaultOp,\n              label: change.label\n            }));\n          }\n        }\n      }), /*#__PURE__*/_jsx(Select, {\n        value: toOption((_item$op2 = item.op) !== null && _item$op2 !== void 0 ? _item$op2 : defaultOp),\n        options: operators,\n        width: \"auto\",\n        onChange: change => {\n          if (change.value != null) {\n            onChange(Object.assign({}, item, {\n              op: change.value\n            }));\n          }\n        }\n      }), /*#__PURE__*/_jsx(Select, {\n        inputId: \"prometheus-dimensions-filter-item-value\",\n        width: \"auto\",\n        value: isMultiSelect() ? getSelectOptionsFromString(item === null || item === void 0 ? void 0 : item.value).map(toOption) : getSelectOptionsFromString(item === null || item === void 0 ? void 0 : item.value).map(toOption)[0],\n        allowCustomValue: true,\n        onOpenMenu: async () => {\n          setState({\n            isLoadingLabelValues: true\n          });\n          const labelValues = await onGetLabelValues(item);\n          setState(Object.assign({}, state, {\n            labelValues,\n            isLoadingLabelValues: undefined\n          }));\n        },\n        isMulti: isMultiSelect(),\n        isLoading: state.isLoadingLabelValues,\n        options: getOptions(),\n        onChange: change => {\n          if (change.value) {\n            var _item$op3;\n\n            onChange(Object.assign({}, item, {\n              value: change.value,\n              op: (_item$op3 = item.op) !== null && _item$op3 !== void 0 ? _item$op3 : defaultOp\n            }));\n          } else {\n            var _item$op4;\n\n            const changes = change.map(change => {\n              return change.label;\n            }).join('|');\n            onChange(Object.assign({}, item, {\n              value: changes,\n              op: (_item$op4 = item.op) !== null && _item$op4 !== void 0 ? _item$op4 : defaultOp\n            }));\n          }\n        }\n      }), /*#__PURE__*/_jsx(AccessoryButton, {\n        \"aria-label\": \"remove\",\n        icon: \"times\",\n        variant: \"secondary\",\n        onClick: onDelete\n      })]\n    })\n  });\n}\nconst operators = [{\n  label: '=~',\n  value: '=~'\n}, {\n  label: '=',\n  value: '='\n}, {\n  label: '!=',\n  value: '!='\n}, {\n  label: '!~',\n  value: '!~'\n}];","map":{"version":3,"names":["uniqBy","React","useState","toOption","AccessoryButton","InputGroup","Select","LabelFilterItem","item","defaultOp","onChange","onDelete","onGetLabelNames","onGetLabelValues","state","setState","isMultiSelect","op","operators","label","getSelectOptionsFromString","indexOf","split","getOptions","labelValues","selectedOptions","value","map","isLoadingLabelNames","labelNames","undefined","change","isLoadingLabelValues","changes","join"],"sources":["/home/soula/grafana/public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilterItem.tsx"],"sourcesContent":["import { uniqBy } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { AccessoryButton, InputGroup } from '@grafana/experimental';\nimport { Select } from '@grafana/ui';\n\nimport { QueryBuilderLabelFilter } from './types';\n\nexport interface Props {\n  defaultOp: string;\n  item: Partial<QueryBuilderLabelFilter>;\n  onChange: (value: QueryBuilderLabelFilter) => void;\n  onGetLabelNames: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<SelectableValue[]>;\n  onGetLabelValues: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<SelectableValue[]>;\n  onDelete: () => void;\n}\n\nexport function LabelFilterItem({ item, defaultOp, onChange, onDelete, onGetLabelNames, onGetLabelValues }: Props) {\n  const [state, setState] = useState<{\n    labelNames?: SelectableValue[];\n    labelValues?: SelectableValue[];\n    isLoadingLabelNames?: boolean;\n    isLoadingLabelValues?: boolean;\n  }>({});\n\n  const isMultiSelect = () => {\n    return item.op === operators[0].label;\n  };\n\n  const getSelectOptionsFromString = (item?: string): string[] => {\n    if (item) {\n      if (item.indexOf('|') > 0) {\n        return item.split('|');\n      }\n      return [item];\n    }\n    return [];\n  };\n\n  const getOptions = (): SelectableValue[] => {\n    const labelValues = state.labelValues ? [...state.labelValues] : [];\n    const selectedOptions = getSelectOptionsFromString(item?.value).map(toOption);\n\n    // Remove possible duplicated values\n    return uniqBy([...selectedOptions, ...labelValues], 'value');\n  };\n\n  return (\n    <div data-testid=\"prometheus-dimensions-filter-item\">\n      <InputGroup>\n        <Select\n          inputId=\"prometheus-dimensions-filter-item-key\"\n          width=\"auto\"\n          value={item.label ? toOption(item.label) : null}\n          allowCustomValue\n          onOpenMenu={async () => {\n            setState({ isLoadingLabelNames: true });\n            const labelNames = await onGetLabelNames(item);\n            setState({ labelNames, isLoadingLabelNames: undefined });\n          }}\n          isLoading={state.isLoadingLabelNames}\n          options={state.labelNames}\n          onChange={(change) => {\n            if (change.label) {\n              onChange({\n                ...item,\n                op: item.op ?? defaultOp,\n                label: change.label,\n              } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n\n        <Select\n          value={toOption(item.op ?? defaultOp)}\n          options={operators}\n          width=\"auto\"\n          onChange={(change) => {\n            if (change.value != null) {\n              onChange({ ...item, op: change.value } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n\n        <Select\n          inputId=\"prometheus-dimensions-filter-item-value\"\n          width=\"auto\"\n          value={\n            isMultiSelect()\n              ? getSelectOptionsFromString(item?.value).map(toOption)\n              : getSelectOptionsFromString(item?.value).map(toOption)[0]\n          }\n          allowCustomValue\n          onOpenMenu={async () => {\n            setState({ isLoadingLabelValues: true });\n            const labelValues = await onGetLabelValues(item);\n            setState({\n              ...state,\n              labelValues,\n              isLoadingLabelValues: undefined,\n            });\n          }}\n          isMulti={isMultiSelect()}\n          isLoading={state.isLoadingLabelValues}\n          options={getOptions()}\n          onChange={(change) => {\n            if (change.value) {\n              onChange({ ...item, value: change.value, op: item.op ?? defaultOp } as any as QueryBuilderLabelFilter);\n            } else {\n              const changes = change\n                .map((change: any) => {\n                  return change.label;\n                })\n                .join('|');\n              onChange({ ...item, value: changes, op: item.op ?? defaultOp } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n        <AccessoryButton aria-label=\"remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} />\n      </InputGroup>\n    </div>\n  );\n}\n\nconst operators = [\n  { label: '=~', value: '=~' },\n  { label: '=', value: '=' },\n  { label: '!=', value: '!=' },\n  { label: '!~', value: '!~' },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}