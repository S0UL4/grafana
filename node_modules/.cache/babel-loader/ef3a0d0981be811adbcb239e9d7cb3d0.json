{"ast":null,"code":"import { css } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\nimport { useTheme2 } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GRADIENT_STOPS = 10;\nexport const ColorScale = ({\n  colorPalette,\n  min,\n  max,\n  display,\n  hoverValue,\n  useStopsPercentage\n}) => {\n  const [colors, setColors] = useState([]);\n  const [scaleHover, setScaleHover] = useState({\n    isShown: false,\n    value: 0\n  });\n  const [percent, setPercent] = useState(null); // 0-100 for CSS percentage\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, colors);\n  useEffect(() => {\n    setColors(getGradientStops({\n      colorArray: colorPalette,\n      stops: GRADIENT_STOPS,\n      useStopsPercentage\n    }));\n  }, [colorPalette, useStopsPercentage]);\n\n  const onScaleMouseMove = event => {\n    const divOffset = event.nativeEvent.offsetX;\n    const offsetWidth = event.target.offsetWidth;\n    const normPercentage = Math.floor(divOffset * 100 / offsetWidth + 1);\n    const scaleValue = Math.floor((max - min) * normPercentage / 100 + min);\n    setScaleHover({\n      isShown: true,\n      value: scaleValue\n    });\n    setPercent(normPercentage);\n  };\n\n  const onScaleMouseLeave = () => {\n    setScaleHover({\n      isShown: false,\n      value: 0\n    });\n  };\n\n  useEffect(() => {\n    setPercent(hoverValue == null ? null : clampPercent100((hoverValue - min) / (max - min)));\n  }, [hoverValue, min, max]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.scaleWrapper,\n    onMouseMove: onScaleMouseMove,\n    onMouseLeave: onScaleMouseLeave,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.scaleGradient,\n      children: display && (scaleHover.isShown || hoverValue !== undefined) && /*#__PURE__*/_jsx(\"div\", {\n        className: styles.followerContainer,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.follower,\n          style: {\n            left: `${percent}%`\n          }\n        })\n      })\n    }), display && /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.followerContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.legendValues,\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: display(min)\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: display(max)\n        })]\n      }), percent != null && (scaleHover.isShown || hoverValue !== undefined) && /*#__PURE__*/_jsx(\"span\", {\n        className: styles.hoverValue,\n        style: {\n          left: `${percent}%`\n        },\n        children: display(hoverValue !== null && hoverValue !== void 0 ? hoverValue : scaleHover.value)\n      })]\n    })]\n  });\n};\n\nconst getGradientStops = ({\n  colorArray,\n  stops,\n  useStopsPercentage = true\n}) => {\n  const colorCount = colorArray.length;\n\n  if (useStopsPercentage && colorCount <= 20) {\n    const incr = 1 / colorCount * 100;\n    let per = 0;\n    const stops = [];\n\n    for (const color of colorArray) {\n      if (per > 0) {\n        stops.push(`${color} ${per}%`);\n      } else {\n        stops.push(color);\n      }\n\n      per += incr;\n      stops.push(`${color} ${per}%`);\n    }\n\n    return stops;\n  }\n\n  const gradientEnd = colorArray[colorCount - 1];\n  const skip = Math.ceil(colorCount / stops);\n  const gradientStops = new Set();\n\n  for (let i = 0; i < colorCount; i += skip) {\n    gradientStops.add(colorArray[i]);\n  }\n\n  gradientStops.add(gradientEnd);\n  return [...gradientStops];\n};\n\nfunction clampPercent100(v) {\n  if (v > 1) {\n    return 100;\n  }\n\n  if (v < 0) {\n    return 0;\n  }\n\n  return v * 100;\n}\n\nconst getStyles = (theme, colors) => ({\n  scaleWrapper: css`\n    width: 100%;\n    font-size: 11px;\n    opacity: 1;\n  `,\n  scaleGradient: css`\n    background: linear-gradient(90deg, ${colors.join()});\n    height: 10px;\n    pointer-events: none;\n  `,\n  legendValues: css`\n    display: flex;\n    justify-content: space-between;\n    pointer-events: none;\n  `,\n  hoverValue: css`\n    position: absolute;\n    margin-top: -14px;\n    padding: 3px 15px;\n    background: ${theme.colors.background.primary};\n    transform: translateX(-50%);\n  `,\n  followerContainer: css`\n    position: relative;\n    pointer-events: none;\n    white-space: nowrap;\n    height: 10px;\n  `,\n  follower: css`\n    position: absolute;\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    border: 2px solid ${theme.colors.text.primary};\n    margin-top: 5px;\n  `\n});","map":{"version":3,"names":["css","React","useState","useEffect","useTheme2","GRADIENT_STOPS","ColorScale","colorPalette","min","max","display","hoverValue","useStopsPercentage","colors","setColors","scaleHover","setScaleHover","isShown","value","percent","setPercent","theme","styles","getStyles","getGradientStops","colorArray","stops","onScaleMouseMove","event","divOffset","nativeEvent","offsetX","offsetWidth","target","normPercentage","Math","floor","scaleValue","onScaleMouseLeave","clampPercent100","scaleWrapper","scaleGradient","undefined","followerContainer","follower","left","legendValues","colorCount","length","incr","per","color","push","gradientEnd","skip","ceil","gradientStops","Set","i","add","v","join","background","primary","text"],"sources":["/home/soula/grafana/public/app/core/components/ColorScale/ColorScale.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  colorPalette: string[];\n  min: number;\n  max: number;\n\n  // Show a value as string -- when not defined, the raw values will not be shown\n  display?: (v: number) => string;\n  hoverValue?: number;\n  useStopsPercentage?: boolean;\n};\n\ntype HoverState = {\n  isShown: boolean;\n  value: number;\n};\n\nconst GRADIENT_STOPS = 10;\n\nexport const ColorScale = ({ colorPalette, min, max, display, hoverValue, useStopsPercentage }: Props) => {\n  const [colors, setColors] = useState<string[]>([]);\n  const [scaleHover, setScaleHover] = useState<HoverState>({ isShown: false, value: 0 });\n  const [percent, setPercent] = useState<number | null>(null); // 0-100 for CSS percentage\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, colors);\n\n  useEffect(() => {\n    setColors(getGradientStops({ colorArray: colorPalette, stops: GRADIENT_STOPS, useStopsPercentage }));\n  }, [colorPalette, useStopsPercentage]);\n\n  const onScaleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    const divOffset = event.nativeEvent.offsetX;\n    const offsetWidth = (event.target as any).offsetWidth as number;\n    const normPercentage = Math.floor((divOffset * 100) / offsetWidth + 1);\n    const scaleValue = Math.floor(((max - min) * normPercentage) / 100 + min);\n\n    setScaleHover({ isShown: true, value: scaleValue });\n    setPercent(normPercentage);\n  };\n\n  const onScaleMouseLeave = () => {\n    setScaleHover({ isShown: false, value: 0 });\n  };\n\n  useEffect(() => {\n    setPercent(hoverValue == null ? null : clampPercent100((hoverValue - min) / (max - min)));\n  }, [hoverValue, min, max]);\n\n  return (\n    <div className={styles.scaleWrapper} onMouseMove={onScaleMouseMove} onMouseLeave={onScaleMouseLeave}>\n      <div className={styles.scaleGradient}>\n        {display && (scaleHover.isShown || hoverValue !== undefined) && (\n          <div className={styles.followerContainer}>\n            <div className={styles.follower} style={{ left: `${percent}%` }} />\n          </div>\n        )}\n      </div>\n      {display && (\n        <div className={styles.followerContainer}>\n          <div className={styles.legendValues}>\n            <span>{display(min)}</span>\n            <span>{display(max)}</span>\n          </div>\n          {percent != null && (scaleHover.isShown || hoverValue !== undefined) && (\n            <span className={styles.hoverValue} style={{ left: `${percent}%` }}>\n              {display(hoverValue ?? scaleHover.value)}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getGradientStops = ({\n  colorArray,\n  stops,\n  useStopsPercentage = true,\n}: {\n  colorArray: string[];\n  stops: number;\n  useStopsPercentage?: boolean;\n}): string[] => {\n  const colorCount = colorArray.length;\n  if (useStopsPercentage && colorCount <= 20) {\n    const incr = (1 / colorCount) * 100;\n    let per = 0;\n    const stops: string[] = [];\n    for (const color of colorArray) {\n      if (per > 0) {\n        stops.push(`${color} ${per}%`);\n      } else {\n        stops.push(color);\n      }\n      per += incr;\n      stops.push(`${color} ${per}%`);\n    }\n    return stops;\n  }\n\n  const gradientEnd = colorArray[colorCount - 1];\n  const skip = Math.ceil(colorCount / stops);\n  const gradientStops = new Set<string>();\n\n  for (let i = 0; i < colorCount; i += skip) {\n    gradientStops.add(colorArray[i]);\n  }\n\n  gradientStops.add(gradientEnd);\n\n  return [...gradientStops];\n};\n\nfunction clampPercent100(v: number) {\n  if (v > 1) {\n    return 100;\n  }\n  if (v < 0) {\n    return 0;\n  }\n  return v * 100;\n}\n\nconst getStyles = (theme: GrafanaTheme2, colors: string[]) => ({\n  scaleWrapper: css`\n    width: 100%;\n    font-size: 11px;\n    opacity: 1;\n  `,\n  scaleGradient: css`\n    background: linear-gradient(90deg, ${colors.join()});\n    height: 10px;\n    pointer-events: none;\n  `,\n  legendValues: css`\n    display: flex;\n    justify-content: space-between;\n    pointer-events: none;\n  `,\n  hoverValue: css`\n    position: absolute;\n    margin-top: -14px;\n    padding: 3px 15px;\n    background: ${theme.colors.background.primary};\n    transform: translateX(-50%);\n  `,\n  followerContainer: css`\n    position: relative;\n    pointer-events: none;\n    white-space: nowrap;\n    height: 10px;\n  `,\n  follower: css`\n    position: absolute;\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    border: 2px solid ${theme.colors.text.primary};\n    margin-top: 5px;\n  `,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}