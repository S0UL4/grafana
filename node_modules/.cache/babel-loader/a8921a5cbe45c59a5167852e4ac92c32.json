{"ast":null,"code":"var _Icon, _Icon2, _cite;\n\nimport { css } from '@emotion/css';\nimport { noop } from 'lodash';\nimport React from 'react';\nimport { Icon, useStyles } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VersionHistoryHeader = ({\n  isComparing = false,\n  onClick = noop,\n  baseVersion = 0,\n  newVersion = 0,\n  isNewLatest = false\n}) => {\n  const styles = useStyles(getStyles);\n  return /*#__PURE__*/_jsxs(\"h3\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      onClick: onClick,\n      className: isComparing ? 'pointer' : '',\n      children: \"Versions\"\n    }), isComparing && /*#__PURE__*/_jsxs(\"span\", {\n      children: [_Icon || (_Icon = /*#__PURE__*/_jsx(Icon, {\n        name: \"angle-right\"\n      })), \" Comparing \", baseVersion, \" \", _Icon2 || (_Icon2 = /*#__PURE__*/_jsx(Icon, {\n        name: \"arrows-h\"\n      })), \" \", newVersion, ' ', isNewLatest && (_cite || (_cite = /*#__PURE__*/_jsx(\"cite\", {\n        className: \"muted\",\n        children: \"(Latest)\"\n      })))]\n    })]\n  });\n};\n\nconst getStyles = theme => ({\n  header: css`\n    font-size: ${theme.typography.heading.h3};\n    margin-bottom: ${theme.spacing.lg};\n  `\n});","map":{"version":3,"names":["css","noop","React","Icon","useStyles","VersionHistoryHeader","isComparing","onClick","baseVersion","newVersion","isNewLatest","styles","getStyles","header","theme","typography","heading","h3","spacing","lg"],"sources":["/home/soula/grafana/public/app/features/dashboard/components/VersionHistory/VersionHistoryHeader.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { noop } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme } from '@grafana/data';\nimport { Icon, useStyles } from '@grafana/ui';\n\ntype VersionHistoryHeaderProps = {\n  isComparing?: boolean;\n  onClick?: () => void;\n  baseVersion?: number;\n  newVersion?: number;\n  isNewLatest?: boolean;\n};\n\nexport const VersionHistoryHeader: React.FC<VersionHistoryHeaderProps> = ({\n  isComparing = false,\n  onClick = noop,\n  baseVersion = 0,\n  newVersion = 0,\n  isNewLatest = false,\n}) => {\n  const styles = useStyles(getStyles);\n\n  return (\n    <h3 className={styles.header}>\n      <span onClick={onClick} className={isComparing ? 'pointer' : ''}>\n        Versions\n      </span>\n      {isComparing && (\n        <span>\n          <Icon name=\"angle-right\" /> Comparing {baseVersion} <Icon name=\"arrows-h\" /> {newVersion}{' '}\n          {isNewLatest && <cite className=\"muted\">(Latest)</cite>}\n        </span>\n      )}\n    </h3>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  header: css`\n    font-size: ${theme.typography.heading.h3};\n    margin-bottom: ${theme.spacing.lg};\n  `,\n});\n"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,IAAT,EAAeC,SAAf,QAAgC,aAAhC;;;AAUA,OAAO,MAAMC,oBAAyD,GAAG,CAAC;EACxEC,WAAW,GAAG,KAD0D;EAExEC,OAAO,GAAGN,IAF8D;EAGxEO,WAAW,GAAG,CAH0D;EAIxEC,UAAU,GAAG,CAJ2D;EAKxEC,WAAW,GAAG;AAL0D,CAAD,KAMnE;EACJ,MAAMC,MAAM,GAAGP,SAAS,CAACQ,SAAD,CAAxB;EAEA,oBACE;IAAI,SAAS,EAAED,MAAM,CAACE,MAAtB;IAAA,wBACE;MAAM,OAAO,EAAEN,OAAf;MAAwB,SAAS,EAAED,WAAW,GAAG,SAAH,GAAe,EAA7D;MAAA;IAAA,EADF,EAIGA,WAAW,iBACV;MAAA,0CACE,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EADF,kBACyCE,WADzC,wCACsD,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX,EADtD,QACgFC,UADhF,EAC4F,GAD5F,EAEGC,WAAW,oCAAI;QAAM,SAAS,EAAC,OAAhB;QAAA;MAAA,EAAJ,EAFd;IAAA,EALJ;EAAA,EADF;AAaD,CAtBM;;AAwBP,MAAME,SAAS,GAAIE,KAAD,KAA0B;EAC1CD,MAAM,EAAEb,GAAI;AACd,iBAAiBc,KAAK,CAACC,UAAN,CAAiBC,OAAjB,CAAyBC,EAAG;AAC7C,qBAAqBH,KAAK,CAACI,OAAN,CAAcC,EAAG;AACtC;AAJ4C,CAA1B,CAAlB"},"metadata":{},"sourceType":"module"}