{"ast":null,"code":"var _div;\n\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { useLinks } from '../../../features/explore/utils/links';\nimport { NodeGraph } from './NodeGraph';\nimport { getNodeGraphDataFrames } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const NodeGraphPanel = ({\n  width,\n  height,\n  data,\n  options\n}) => {\n  const getLinks = useLinks(data.timeRange);\n\n  if (!data || !data.series.length) {\n    return _div || (_div = /*#__PURE__*/_jsx(\"div\", {\n      className: \"panel-empty\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: \"No data found in response\"\n      })\n    }));\n  }\n\n  const memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      width,\n      height\n    },\n    children: /*#__PURE__*/_jsx(NodeGraph, {\n      dataFrames: memoizedGetNodeGraphDataFrames(data.series, options),\n      getLinks: getLinks\n    })\n  });\n};","map":{"version":3,"names":["memoizeOne","React","useLinks","NodeGraph","getNodeGraphDataFrames","NodeGraphPanel","width","height","data","options","getLinks","timeRange","series","length","memoizedGetNodeGraphDataFrames"],"sources":["/home/soula/grafana/public/app/plugins/panel/nodeGraph/NodeGraphPanel.tsx"],"sourcesContent":["import memoizeOne from 'memoize-one';\nimport React from 'react';\n\nimport { PanelProps } from '@grafana/data';\n\nimport { useLinks } from '../../../features/explore/utils/links';\n\nimport { NodeGraph } from './NodeGraph';\nimport { NodeGraphOptions } from './types';\nimport { getNodeGraphDataFrames } from './utils';\n\nexport const NodeGraphPanel: React.FunctionComponent<PanelProps<NodeGraphOptions>> = ({\n  width,\n  height,\n  data,\n  options,\n}) => {\n  const getLinks = useLinks(data.timeRange);\n  if (!data || !data.series.length) {\n    return (\n      <div className=\"panel-empty\">\n        <p>No data found in response</p>\n      </div>\n    );\n  }\n\n  const memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n  return (\n    <div style={{ width, height }}>\n      <NodeGraph dataFrames={memoizedGetNodeGraphDataFrames(data.series, options)} getLinks={getLinks} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,SAASC,QAAT,QAAyB,uCAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,sBAAT,QAAuC,SAAvC;;AAEA,OAAO,MAAMC,cAAqE,GAAG,CAAC;EACpFC,KADoF;EAEpFC,MAFoF;EAGpFC,IAHoF;EAIpFC;AAJoF,CAAD,KAK/E;EACJ,MAAMC,QAAQ,GAAGR,QAAQ,CAACM,IAAI,CAACG,SAAN,CAAzB;;EACA,IAAI,CAACH,IAAD,IAAS,CAACA,IAAI,CAACI,MAAL,CAAYC,MAA1B,EAAkC;IAChC,oCACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA;MAAA;IADF,EADF;EAKD;;EAED,MAAMC,8BAA8B,GAAGd,UAAU,CAACI,sBAAD,CAAjD;EACA,oBACE;IAAK,KAAK,EAAE;MAAEE,KAAF;MAASC;IAAT,CAAZ;IAAA,uBACE,KAAC,SAAD;MAAW,UAAU,EAAEO,8BAA8B,CAACN,IAAI,CAACI,MAAN,EAAcH,OAAd,CAArD;MAA6E,QAAQ,EAAEC;IAAvF;EADF,EADF;AAKD,CArBM"},"metadata":{},"sourceType":"module"}