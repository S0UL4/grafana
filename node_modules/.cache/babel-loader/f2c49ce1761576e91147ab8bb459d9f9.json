{"ast":null,"code":"import { SqlPartDef, SqlPart } from 'app/angular/components/sql_part/sql_part';\nconst index = [];\n\nfunction createPart(part) {\n  const def = index[part.type];\n\n  if (!def) {\n    return null;\n  }\n\n  return new SqlPart(part, def);\n}\n\nfunction register(options) {\n  index[options.type] = new SqlPartDef(options);\n}\n\nregister({\n  type: 'column',\n  style: 'label',\n  params: [{\n    type: 'column',\n    dynamicLookup: true\n  }],\n  defaultParams: ['value']\n});\nregister({\n  type: 'expression',\n  style: 'expression',\n  label: 'Expr:',\n  params: [{\n    name: 'left',\n    type: 'string',\n    dynamicLookup: true\n  }, {\n    name: 'op',\n    type: 'string',\n    dynamicLookup: true\n  }, {\n    name: 'right',\n    type: 'string',\n    dynamicLookup: true\n  }],\n  defaultParams: ['value', '=', 'value']\n});\nregister({\n  type: 'macro',\n  style: 'label',\n  label: 'Macro:',\n  params: [],\n  defaultParams: []\n});\nregister({\n  type: 'aggregate',\n  style: 'label',\n  params: [{\n    name: 'name',\n    type: 'string',\n    options: ['avg', 'count', 'min', 'max', 'sum', 'stddev', 'variance']\n  }],\n  defaultParams: ['avg']\n});\nregister({\n  type: 'alias',\n  style: 'label',\n  params: [{\n    name: 'name',\n    type: 'string',\n    quote: 'double'\n  }],\n  defaultParams: ['alias']\n});\nregister({\n  type: 'time',\n  style: 'function',\n  label: 'time',\n  params: [{\n    name: 'interval',\n    type: 'interval',\n    options: ['$__interval', '1s', '10s', '1m', '5m', '10m', '15m', '1h']\n  }, {\n    name: 'fill',\n    type: 'string',\n    options: ['none', 'NULL', 'previous', '0']\n  }],\n  defaultParams: ['$__interval', 'none']\n});\nexport default {\n  create: createPart\n};","map":{"version":3,"names":["SqlPartDef","SqlPart","index","createPart","part","def","type","register","options","style","params","dynamicLookup","defaultParams","label","name","quote","create"],"sources":["/home/soula/grafana/public/app/plugins/datasource/mysql/sql_part.ts"],"sourcesContent":["import { SqlPartDef, SqlPart } from 'app/angular/components/sql_part/sql_part';\n\nconst index: any[] = [];\n\nfunction createPart(part: any): any {\n  const def = index[part.type];\n  if (!def) {\n    return null;\n  }\n\n  return new SqlPart(part, def);\n}\n\nfunction register(options: any) {\n  index[options.type] = new SqlPartDef(options);\n}\n\nregister({\n  type: 'column',\n  style: 'label',\n  params: [{ type: 'column', dynamicLookup: true }],\n  defaultParams: ['value'],\n});\n\nregister({\n  type: 'expression',\n  style: 'expression',\n  label: 'Expr:',\n  params: [\n    { name: 'left', type: 'string', dynamicLookup: true },\n    { name: 'op', type: 'string', dynamicLookup: true },\n    { name: 'right', type: 'string', dynamicLookup: true },\n  ],\n  defaultParams: ['value', '=', 'value'],\n});\n\nregister({\n  type: 'macro',\n  style: 'label',\n  label: 'Macro:',\n  params: [],\n  defaultParams: [],\n});\n\nregister({\n  type: 'aggregate',\n  style: 'label',\n  params: [\n    {\n      name: 'name',\n      type: 'string',\n      options: ['avg', 'count', 'min', 'max', 'sum', 'stddev', 'variance'],\n    },\n  ],\n  defaultParams: ['avg'],\n});\n\nregister({\n  type: 'alias',\n  style: 'label',\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n});\n\nregister({\n  type: 'time',\n  style: 'function',\n  label: 'time',\n  params: [\n    {\n      name: 'interval',\n      type: 'interval',\n      options: ['$__interval', '1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n    {\n      name: 'fill',\n      type: 'string',\n      options: ['none', 'NULL', 'previous', '0'],\n    },\n  ],\n  defaultParams: ['$__interval', 'none'],\n});\n\nexport default {\n  create: createPart,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}