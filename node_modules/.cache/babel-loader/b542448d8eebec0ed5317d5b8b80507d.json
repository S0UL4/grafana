{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { MultiSelect } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * MultiSelect for options UI\n * @alpha\n */\nexport class MultiSelectValueEditor extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLoading: true,\n      options: []\n    });\n\n    _defineProperty(this, \"updateOptions\", async () => {\n      var _item$settings;\n\n      const {\n        item\n      } = this.props;\n      const {\n        settings\n      } = item;\n      let options = ((_item$settings = item.settings) === null || _item$settings === void 0 ? void 0 : _item$settings.options) || [];\n\n      if (settings !== null && settings !== void 0 && settings.getOptions) {\n        options = await settings.getOptions(this.props.context);\n      }\n\n      if (this.state.options !== options) {\n        this.setState({\n          isLoading: false,\n          options\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.updateOptions();\n  }\n\n  componentDidUpdate(oldProps) {\n    var _oldProps$item, _this$props$item;\n\n    const old = (_oldProps$item = oldProps.item) === null || _oldProps$item === void 0 ? void 0 : _oldProps$item.settings;\n    const now = (_this$props$item = this.props.item) === null || _this$props$item === void 0 ? void 0 : _this$props$item.settings;\n\n    if (old !== now) {\n      this.updateOptions();\n    } else if (now !== null && now !== void 0 && now.getOptions) {\n      var _oldProps$context, _this$props$context;\n\n      const old = (_oldProps$context = oldProps.context) === null || _oldProps$context === void 0 ? void 0 : _oldProps$context.data;\n      const now = (_this$props$context = this.props.context) === null || _this$props$context === void 0 ? void 0 : _this$props$context.data;\n\n      if (old !== now) {\n        this.updateOptions();\n      }\n    }\n  }\n\n  render() {\n    const {\n      options,\n      isLoading\n    } = this.state;\n    const {\n      value,\n      onChange,\n      item\n    } = this.props;\n    const {\n      settings\n    } = item;\n    return /*#__PURE__*/_jsx(MultiSelect, {\n      isLoading: isLoading,\n      value: value,\n      defaultValue: value,\n      allowCustomValue: settings === null || settings === void 0 ? void 0 : settings.allowCustomValue,\n      onChange: e => {\n        onChange(e.map(v => v.value).flatMap(v => v !== undefined ? [v] : []));\n      },\n      options: options\n    });\n  }\n\n}","map":{"version":3,"names":["React","MultiSelect","MultiSelectValueEditor","PureComponent","isLoading","options","item","props","settings","getOptions","context","state","setState","componentDidMount","updateOptions","componentDidUpdate","oldProps","old","now","data","render","value","onChange","allowCustomValue","e","map","v","flatMap","undefined"],"sources":["/home/soula/grafana/public/app/core/components/OptionsUI/multiSelect.tsx"],"sourcesContent":["import React from 'react';\n\nimport { FieldConfigEditorProps, SelectFieldConfigSettings, SelectableValue } from '@grafana/data';\nimport { MultiSelect } from '@grafana/ui';\n\ninterface State<T> {\n  isLoading: boolean;\n  options: Array<SelectableValue<T>>;\n}\n\ntype Props<T> = FieldConfigEditorProps<T[], SelectFieldConfigSettings<T>>;\n\n/**\n * MultiSelect for options UI\n * @alpha\n */\nexport class MultiSelectValueEditor<T> extends React.PureComponent<Props<T>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    options: [],\n  };\n\n  componentDidMount() {\n    this.updateOptions();\n  }\n\n  componentDidUpdate(oldProps: Props<T>) {\n    const old = oldProps.item?.settings;\n    const now = this.props.item?.settings;\n    if (old !== now) {\n      this.updateOptions();\n    } else if (now?.getOptions) {\n      const old = oldProps.context?.data;\n      const now = this.props.context?.data;\n      if (old !== now) {\n        this.updateOptions();\n      }\n    }\n  }\n\n  updateOptions = async () => {\n    const { item } = this.props;\n    const { settings } = item;\n    let options: Array<SelectableValue<T>> = item.settings?.options || [];\n    if (settings?.getOptions) {\n      options = await settings.getOptions(this.props.context);\n    }\n    if (this.state.options !== options) {\n      this.setState({\n        isLoading: false,\n        options,\n      });\n    }\n  };\n\n  render() {\n    const { options, isLoading } = this.state;\n    const { value, onChange, item } = this.props;\n\n    const { settings } = item;\n    return (\n      <MultiSelect<T>\n        isLoading={isLoading}\n        value={value}\n        defaultValue={value}\n        allowCustomValue={settings?.allowCustomValue}\n        onChange={(e) => {\n          onChange(e.map((v) => v.value).flatMap((v) => (v !== undefined ? [v] : [])));\n        }}\n        options={options}\n      />\n    );\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,WAAT,QAA4B,aAA5B;;;AASA;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAN,SAAwCF,KAAK,CAACG,aAA9C,CAAgF;EAAA;IAAA;;IAAA,+BACnE;MAChBC,SAAS,EAAE,IADK;MAEhBC,OAAO,EAAE;IAFO,CADmE;;IAAA,uCAwBrE,YAAY;MAAA;;MAC1B,MAAM;QAAEC;MAAF,IAAW,KAAKC,KAAtB;MACA,MAAM;QAAEC;MAAF,IAAeF,IAArB;MACA,IAAID,OAAkC,GAAG,mBAAAC,IAAI,CAACE,QAAL,kEAAeH,OAAf,KAA0B,EAAnE;;MACA,IAAIG,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEC,UAAd,EAA0B;QACxBJ,OAAO,GAAG,MAAMG,QAAQ,CAACC,UAAT,CAAoB,KAAKF,KAAL,CAAWG,OAA/B,CAAhB;MACD;;MACD,IAAI,KAAKC,KAAL,CAAWN,OAAX,KAAuBA,OAA3B,EAAoC;QAClC,KAAKO,QAAL,CAAc;UACZR,SAAS,EAAE,KADC;UAEZC;QAFY,CAAd;MAID;IACF,CArCoF;EAAA;;EAMrFQ,iBAAiB,GAAG;IAClB,KAAKC,aAAL;EACD;;EAEDC,kBAAkB,CAACC,QAAD,EAAqB;IAAA;;IACrC,MAAMC,GAAG,qBAAGD,QAAQ,CAACV,IAAZ,mDAAG,eAAeE,QAA3B;IACA,MAAMU,GAAG,uBAAG,KAAKX,KAAL,CAAWD,IAAd,qDAAG,iBAAiBE,QAA7B;;IACA,IAAIS,GAAG,KAAKC,GAAZ,EAAiB;MACf,KAAKJ,aAAL;IACD,CAFD,MAEO,IAAII,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAET,UAAT,EAAqB;MAAA;;MAC1B,MAAMQ,GAAG,wBAAGD,QAAQ,CAACN,OAAZ,sDAAG,kBAAkBS,IAA9B;MACA,MAAMD,GAAG,0BAAG,KAAKX,KAAL,CAAWG,OAAd,wDAAG,oBAAoBS,IAAhC;;MACA,IAAIF,GAAG,KAAKC,GAAZ,EAAiB;QACf,KAAKJ,aAAL;MACD;IACF;EACF;;EAiBDM,MAAM,GAAG;IACP,MAAM;MAAEf,OAAF;MAAWD;IAAX,IAAyB,KAAKO,KAApC;IACA,MAAM;MAAEU,KAAF;MAASC,QAAT;MAAmBhB;IAAnB,IAA4B,KAAKC,KAAvC;IAEA,MAAM;MAAEC;IAAF,IAAeF,IAArB;IACA,oBACE,KAAC,WAAD;MACE,SAAS,EAAEF,SADb;MAEE,KAAK,EAAEiB,KAFT;MAGE,YAAY,EAAEA,KAHhB;MAIE,gBAAgB,EAAEb,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEe,gBAJ9B;MAKE,QAAQ,EAAGC,CAAD,IAAO;QACfF,QAAQ,CAACE,CAAC,CAACC,GAAF,CAAOC,CAAD,IAAOA,CAAC,CAACL,KAAf,EAAsBM,OAAtB,CAA+BD,CAAD,IAAQA,CAAC,KAAKE,SAAN,GAAkB,CAACF,CAAD,CAAlB,GAAwB,EAA9D,CAAD,CAAR;MACD,CAPH;MAQE,OAAO,EAAErB;IARX,EADF;EAYD;;AAxDoF"},"metadata":{},"sourceType":"module"}