{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { indexOf } from 'lodash';\nexport class QueryCtrl {\n  constructor($scope, $injector) {\n    var _this$panelCtrl, _this$target, _this$datasource, _this$panelCtrl$panel, _this$panelCtrl2;\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"datasource\", void 0);\n\n    _defineProperty(this, \"panelCtrl\", void 0);\n\n    _defineProperty(this, \"panel\", void 0);\n\n    _defineProperty(this, \"hasRawMode\", void 0);\n\n    _defineProperty(this, \"error\", void 0);\n\n    _defineProperty(this, \"isLastQuery\", void 0);\n\n    this.$scope = $scope;\n    this.$injector = $injector;\n    this.panelCtrl = (_this$panelCtrl = this.panelCtrl) !== null && _this$panelCtrl !== void 0 ? _this$panelCtrl : $scope.ctrl.panelCtrl;\n    this.target = (_this$target = this.target) !== null && _this$target !== void 0 ? _this$target : $scope.ctrl.target;\n    this.datasource = (_this$datasource = this.datasource) !== null && _this$datasource !== void 0 ? _this$datasource : $scope.ctrl.datasource;\n    this.panel = (_this$panelCtrl$panel = (_this$panelCtrl2 = this.panelCtrl) === null || _this$panelCtrl2 === void 0 ? void 0 : _this$panelCtrl2.panel) !== null && _this$panelCtrl$panel !== void 0 ? _this$panelCtrl$panel : $scope.ctrl.panelCtrl.panel;\n    this.isLastQuery = indexOf(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n\n}","map":{"version":3,"names":["indexOf","QueryCtrl","constructor","$scope","$injector","panelCtrl","ctrl","target","datasource","panel","isLastQuery","targets","length","refresh"],"sources":["/home/soula/grafana/public/app/angular/panel/query_ctrl.ts"],"sourcesContent":["import { auto } from 'angular';\nimport { indexOf } from 'lodash';\n\nexport class QueryCtrl<T = any> {\n  target!: T;\n  datasource!: any;\n  panelCtrl!: any;\n  panel: any;\n  hasRawMode!: boolean;\n  error?: string | null;\n  isLastQuery: boolean;\n\n  constructor(public $scope: any, public $injector: auto.IInjectorService) {\n    this.panelCtrl = this.panelCtrl ?? $scope.ctrl.panelCtrl;\n    this.target = this.target ?? $scope.ctrl.target;\n    this.datasource = this.datasource ?? $scope.ctrl.datasource;\n    this.panel = this.panelCtrl?.panel ?? $scope.ctrl.panelCtrl.panel;\n    this.isLastQuery = indexOf(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n}\n"],"mappings":";;AACA,SAASA,OAAT,QAAwB,QAAxB;AAEA,OAAO,MAAMC,SAAN,CAAyB;EAS9BC,WAAW,CAAQC,MAAR,EAA4BC,SAA5B,EAA8D;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA,KAAtDD,MAAsD,GAAtDA,MAAsD;IAAA,KAAlCC,SAAkC,GAAlCA,SAAkC;IACvE,KAAKC,SAAL,sBAAiB,KAAKA,SAAtB,6DAAmCF,MAAM,CAACG,IAAP,CAAYD,SAA/C;IACA,KAAKE,MAAL,mBAAc,KAAKA,MAAnB,uDAA6BJ,MAAM,CAACG,IAAP,CAAYC,MAAzC;IACA,KAAKC,UAAL,uBAAkB,KAAKA,UAAvB,+DAAqCL,MAAM,CAACG,IAAP,CAAYE,UAAjD;IACA,KAAKC,KAAL,gDAAa,KAAKJ,SAAlB,qDAAa,iBAAgBI,KAA7B,yEAAsCN,MAAM,CAACG,IAAP,CAAYD,SAAZ,CAAsBI,KAA5D;IACA,KAAKC,WAAL,GAAmBV,OAAO,CAAC,KAAKS,KAAL,CAAWE,OAAZ,EAAqB,KAAKJ,MAA1B,CAAP,KAA6C,KAAKE,KAAL,CAAWE,OAAX,CAAmBC,MAAnB,GAA4B,CAA5F;EACD;;EAEDC,OAAO,GAAG;IACR,KAAKR,SAAL,CAAeQ,OAAf;EACD;;AAnB6B"},"metadata":{},"sourceType":"module"}