{"ast":null,"code":"autofillEventFix.$inject = [\"$compile\"];\nimport coreModule from './core_module';\n/** @ngInject */\n\nexport function autofillEventFix($compile) {\n  return {\n    link: ($scope, elem) => {\n      const input = elem[0];\n\n      const dispatchChangeEvent = () => {\n        const event = new Event('change');\n        return input.dispatchEvent(event);\n      };\n\n      const onAnimationStart = ({\n        animationName\n      }) => {\n        switch (animationName) {\n          case 'onAutoFillStart':\n            return dispatchChangeEvent();\n\n          case 'onAutoFillCancel':\n            return dispatchChangeEvent();\n        }\n\n        return null;\n      }; // const onChange = (evt: Event) => console.log(evt);\n\n\n      input.addEventListener('animationstart', onAnimationStart); // input.addEventListener('change', onChange);\n\n      $scope.$on('$destroy', () => {\n        input.removeEventListener('animationstart', onAnimationStart); // input.removeEventListener('change', onChange);\n      });\n    }\n  };\n}\ncoreModule.directive('autofillEventFix', autofillEventFix);","map":{"version":3,"names":["coreModule","autofillEventFix","$compile","link","$scope","elem","input","dispatchChangeEvent","event","Event","dispatchEvent","onAnimationStart","animationName","addEventListener","$on","removeEventListener","directive"],"sources":["/home/soula/grafana/public/app/angular/autofill_event_fix.ts"],"sourcesContent":["import coreModule from './core_module';\n\n/** @ngInject */\nexport function autofillEventFix($compile: any) {\n  return {\n    link: ($scope: any, elem: any) => {\n      const input = elem[0];\n      const dispatchChangeEvent = () => {\n        const event = new Event('change');\n        return input.dispatchEvent(event);\n      };\n      const onAnimationStart = ({ animationName }: AnimationEvent) => {\n        switch (animationName) {\n          case 'onAutoFillStart':\n            return dispatchChangeEvent();\n          case 'onAutoFillCancel':\n            return dispatchChangeEvent();\n        }\n        return null;\n      };\n\n      // const onChange = (evt: Event) => console.log(evt);\n\n      input.addEventListener('animationstart', onAnimationStart);\n      // input.addEventListener('change', onChange);\n\n      $scope.$on('$destroy', () => {\n        input.removeEventListener('animationstart', onAnimationStart);\n        // input.removeEventListener('change', onChange);\n      });\n    },\n  };\n}\n\ncoreModule.directive('autofillEventFix', autofillEventFix);\n"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAyC;EAC9C,OAAO;IACLC,IAAI,EAAE,CAACC,MAAD,EAAcC,IAAd,KAA4B;MAChC,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;;MACA,MAAME,mBAAmB,GAAG,MAAM;QAChC,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,QAAV,CAAd;QACA,OAAOH,KAAK,CAACI,aAAN,CAAoBF,KAApB,CAAP;MACD,CAHD;;MAIA,MAAMG,gBAAgB,GAAG,CAAC;QAAEC;MAAF,CAAD,KAAuC;QAC9D,QAAQA,aAAR;UACE,KAAK,iBAAL;YACE,OAAOL,mBAAmB,EAA1B;;UACF,KAAK,kBAAL;YACE,OAAOA,mBAAmB,EAA1B;QAJJ;;QAMA,OAAO,IAAP;MACD,CARD,CANgC,CAgBhC;;;MAEAD,KAAK,CAACO,gBAAN,CAAuB,gBAAvB,EAAyCF,gBAAzC,EAlBgC,CAmBhC;;MAEAP,MAAM,CAACU,GAAP,CAAW,UAAX,EAAuB,MAAM;QAC3BR,KAAK,CAACS,mBAAN,CAA0B,gBAA1B,EAA4CJ,gBAA5C,EAD2B,CAE3B;MACD,CAHD;IAID;EA1BI,CAAP;AA4BD;AAEDX,UAAU,CAACgB,SAAX,CAAqB,kBAArB,EAAyCf,gBAAzC"},"metadata":{},"sourceType":"module"}