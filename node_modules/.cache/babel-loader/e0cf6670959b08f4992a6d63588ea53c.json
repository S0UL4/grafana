{"ast":null,"code":"import { css, cx } from '@emotion/css';\nimport { useLingui } from '@lingui/react';\nimport { Item } from '@react-stately/collections';\nimport React from 'react';\nimport { locationUtil, NavMenuItemType } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\nimport { NavBarItemMenu } from './NavBarItemMenu';\nimport { NavBarItemMenuTrigger } from './NavBarItemMenuTrigger';\nimport { getNavBarItemWithoutMenuStyles } from './NavBarItemWithoutMenu';\nimport { NavBarMenuItem } from './NavBarMenuItem';\nimport { useNavBarContext } from './context';\nimport menuItemTranslations from './navBarItem-translations';\nimport { getNavModelItemKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst NavBarItem = ({\n  isActive = false,\n  className,\n  reverseMenuDirection = false,\n  link\n}) => {\n  var _link$children;\n\n  const {\n    i18n\n  } = useLingui();\n  const theme = useTheme2();\n  const menuItems = (_link$children = link.children) !== null && _link$children !== void 0 ? _link$children : [];\n  const {\n    menuIdOpen\n  } = useNavBarContext(); // Spreading `menuItems` here as otherwise we'd be mutating props\n\n  const menuItemsSorted = reverseMenuDirection ? [...menuItems].reverse() : menuItems;\n  const filteredItems = menuItemsSorted.filter(item => !item.hideFromMenu).map(i => Object.assign({}, i, {\n    menuItemType: NavMenuItemType.Item\n  }));\n  const adjustHeightForBorder = filteredItems.length === 0;\n  const styles = getStyles(theme, adjustHeightForBorder, isActive);\n  const section = Object.assign({}, link, {\n    children: filteredItems,\n    menuItemType: NavMenuItemType.Section\n  });\n  const items = [section].concat(filteredItems);\n\n  const onNavigate = item => {\n    const {\n      url,\n      target,\n      onClick\n    } = item;\n    onClick === null || onClick === void 0 ? void 0 : onClick();\n\n    if (url) {\n      if (!target && url.startsWith('/')) {\n        locationService.push(locationUtil.stripBaseFromUrl(url));\n      } else {\n        window.open(url, target);\n      }\n    }\n  };\n\n  const translationKey = link.id && menuItemTranslations[link.id];\n  const linkText = translationKey ? i18n._(translationKey) : link.text;\n  return /*#__PURE__*/_jsx(\"li\", {\n    className: cx(styles.container, {\n      [styles.containerHover]: section.id === menuIdOpen\n    }, className),\n    children: /*#__PURE__*/_jsx(NavBarItemMenuTrigger, {\n      item: section,\n      isActive: isActive,\n      label: linkText,\n      reverseMenuDirection: reverseMenuDirection,\n      children: /*#__PURE__*/_jsx(NavBarItemMenu, {\n        items: items,\n        reverseMenuDirection: reverseMenuDirection,\n        adjustHeightForBorder: adjustHeightForBorder,\n        disabledKeys: ['divider', 'subtitle'],\n        \"aria-label\": section.text,\n        onNavigate: onNavigate,\n        children: item => {\n          const translationKey = item.id && menuItemTranslations[item.id];\n          const itemText = translationKey ? i18n._(translationKey) : item.text;\n          const isSection = item.menuItemType === NavMenuItemType.Section;\n          const icon = item.showIconInNavbar && !isSection ? item.icon : undefined;\n          return /*#__PURE__*/_jsx(Item, {\n            textValue: item.text,\n            children: /*#__PURE__*/_jsx(NavBarMenuItem, {\n              isDivider: !isSection && item.divider,\n              icon: icon,\n              target: item.target,\n              text: itemText,\n              url: item.url,\n              onClick: item.onClick,\n              styleOverrides: cx(styles.primaryText, {\n                [styles.header]: isSection\n              })\n            })\n          }, getNavModelItemKey(item));\n        }\n      })\n    })\n  });\n};\n\nexport default NavBarItem;\n\nconst getStyles = (theme, adjustHeightForBorder, isActive) => Object.assign({}, getNavBarItemWithoutMenuStyles(theme, isActive), {\n  containerHover: css({\n    backgroundColor: theme.colors.action.hover,\n    color: theme.colors.text.primary\n  }),\n  primaryText: css({\n    color: theme.colors.text.primary\n  }),\n  header: css({\n    height: `calc(${theme.spacing(6)} - ${adjustHeightForBorder ? 2 : 1}px)`,\n    fontSize: theme.typography.h4.fontSize,\n    fontWeight: theme.typography.h4.fontWeight,\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    whiteSpace: 'nowrap',\n    width: '100%'\n  })\n});","map":{"version":3,"names":["css","cx","useLingui","Item","React","locationUtil","NavMenuItemType","locationService","useTheme2","NavBarItemMenu","NavBarItemMenuTrigger","getNavBarItemWithoutMenuStyles","NavBarMenuItem","useNavBarContext","menuItemTranslations","getNavModelItemKey","NavBarItem","isActive","className","reverseMenuDirection","link","i18n","theme","menuItems","children","menuIdOpen","menuItemsSorted","reverse","filteredItems","filter","item","hideFromMenu","map","i","menuItemType","adjustHeightForBorder","length","styles","getStyles","section","Section","items","concat","onNavigate","url","target","onClick","startsWith","push","stripBaseFromUrl","window","open","translationKey","id","linkText","_","text","container","containerHover","itemText","isSection","icon","showIconInNavbar","undefined","divider","primaryText","header","backgroundColor","colors","action","hover","color","primary","height","spacing","fontSize","typography","h4","fontWeight","padding","whiteSpace","width"],"sources":["/home/soula/grafana/public/app/core/components/NavBar/NavBarItem.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useLingui } from '@lingui/react';\nimport { Item } from '@react-stately/collections';\nimport React from 'react';\n\nimport { GrafanaTheme2, locationUtil, NavMenuItemType, NavModelItem } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { IconName, useTheme2 } from '@grafana/ui';\n\nimport { NavBarItemMenu } from './NavBarItemMenu';\nimport { NavBarItemMenuTrigger } from './NavBarItemMenuTrigger';\nimport { getNavBarItemWithoutMenuStyles } from './NavBarItemWithoutMenu';\nimport { NavBarMenuItem } from './NavBarMenuItem';\nimport { useNavBarContext } from './context';\nimport menuItemTranslations from './navBarItem-translations';\nimport { getNavModelItemKey } from './utils';\n\nexport interface Props {\n  isActive?: boolean;\n  className?: string;\n  reverseMenuDirection?: boolean;\n  link: NavModelItem;\n}\n\nconst NavBarItem = ({ isActive = false, className, reverseMenuDirection = false, link }: Props) => {\n  const { i18n } = useLingui();\n  const theme = useTheme2();\n  const menuItems = link.children ?? [];\n  const { menuIdOpen } = useNavBarContext();\n\n  // Spreading `menuItems` here as otherwise we'd be mutating props\n  const menuItemsSorted = reverseMenuDirection ? [...menuItems].reverse() : menuItems;\n  const filteredItems = menuItemsSorted\n    .filter((item) => !item.hideFromMenu)\n    .map((i) => ({ ...i, menuItemType: NavMenuItemType.Item }));\n  const adjustHeightForBorder = filteredItems.length === 0;\n  const styles = getStyles(theme, adjustHeightForBorder, isActive);\n  const section: NavModelItem = {\n    ...link,\n    children: filteredItems,\n    menuItemType: NavMenuItemType.Section,\n  };\n  const items: NavModelItem[] = [section].concat(filteredItems);\n\n  const onNavigate = (item: NavModelItem) => {\n    const { url, target, onClick } = item;\n    onClick?.();\n\n    if (url) {\n      if (!target && url.startsWith('/')) {\n        locationService.push(locationUtil.stripBaseFromUrl(url));\n      } else {\n        window.open(url, target);\n      }\n    }\n  };\n\n  const translationKey = link.id && menuItemTranslations[link.id];\n  const linkText = translationKey ? i18n._(translationKey) : link.text;\n\n  return (\n    <li className={cx(styles.container, { [styles.containerHover]: section.id === menuIdOpen }, className)}>\n      <NavBarItemMenuTrigger\n        item={section}\n        isActive={isActive}\n        label={linkText}\n        reverseMenuDirection={reverseMenuDirection}\n      >\n        <NavBarItemMenu\n          items={items}\n          reverseMenuDirection={reverseMenuDirection}\n          adjustHeightForBorder={adjustHeightForBorder}\n          disabledKeys={['divider', 'subtitle']}\n          aria-label={section.text}\n          onNavigate={onNavigate}\n        >\n          {(item: NavModelItem) => {\n            const translationKey = item.id && menuItemTranslations[item.id];\n            const itemText = translationKey ? i18n._(translationKey) : item.text;\n            const isSection = item.menuItemType === NavMenuItemType.Section;\n            const icon = item.showIconInNavbar && !isSection ? (item.icon as IconName) : undefined;\n\n            return (\n              <Item key={getNavModelItemKey(item)} textValue={item.text}>\n                <NavBarMenuItem\n                  isDivider={!isSection && item.divider}\n                  icon={icon}\n                  target={item.target}\n                  text={itemText}\n                  url={item.url}\n                  onClick={item.onClick}\n                  styleOverrides={cx(styles.primaryText, { [styles.header]: isSection })}\n                />\n              </Item>\n            );\n          }}\n        </NavBarItemMenu>\n      </NavBarItemMenuTrigger>\n    </li>\n  );\n};\n\nexport default NavBarItem;\n\nconst getStyles = (theme: GrafanaTheme2, adjustHeightForBorder: boolean, isActive?: boolean) => ({\n  ...getNavBarItemWithoutMenuStyles(theme, isActive),\n  containerHover: css({\n    backgroundColor: theme.colors.action.hover,\n    color: theme.colors.text.primary,\n  }),\n  primaryText: css({\n    color: theme.colors.text.primary,\n  }),\n  header: css({\n    height: `calc(${theme.spacing(6)} - ${adjustHeightForBorder ? 2 : 1}px)`,\n    fontSize: theme.typography.h4.fontSize,\n    fontWeight: theme.typography.h4.fontWeight,\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    whiteSpace: 'nowrap',\n    width: '100%',\n  }),\n});\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAwBC,YAAxB,EAAsCC,eAAtC,QAA2E,eAA3E;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAAmBC,SAAnB,QAAoC,aAApC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,8BAAT,QAA+C,yBAA/C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,SAASC,kBAAT,QAAmC,SAAnC;;;AASA,MAAMC,UAAU,GAAG,CAAC;EAAEC,QAAQ,GAAG,KAAb;EAAoBC,SAApB;EAA+BC,oBAAoB,GAAG,KAAtD;EAA6DC;AAA7D,CAAD,KAAgF;EAAA;;EACjG,MAAM;IAAEC;EAAF,IAAWnB,SAAS,EAA1B;EACA,MAAMoB,KAAK,GAAGd,SAAS,EAAvB;EACA,MAAMe,SAAS,qBAAGH,IAAI,CAACI,QAAR,2DAAoB,EAAnC;EACA,MAAM;IAAEC;EAAF,IAAiBZ,gBAAgB,EAAvC,CAJiG,CAMjG;;EACA,MAAMa,eAAe,GAAGP,oBAAoB,GAAG,CAAC,GAAGI,SAAJ,EAAeI,OAAf,EAAH,GAA8BJ,SAA1E;EACA,MAAMK,aAAa,GAAGF,eAAe,CAClCG,MADmB,CACXC,IAAD,IAAU,CAACA,IAAI,CAACC,YADJ,EAEnBC,GAFmB,CAEdC,CAAD,sBAAaA,CAAb;IAAgBC,YAAY,EAAE5B,eAAe,CAACH;EAA9C,EAFe,CAAtB;EAGA,MAAMgC,qBAAqB,GAAGP,aAAa,CAACQ,MAAd,KAAyB,CAAvD;EACA,MAAMC,MAAM,GAAGC,SAAS,CAAChB,KAAD,EAAQa,qBAAR,EAA+BlB,QAA/B,CAAxB;EACA,MAAMsB,OAAqB,qBACtBnB,IADsB;IAEzBI,QAAQ,EAAEI,aAFe;IAGzBM,YAAY,EAAE5B,eAAe,CAACkC;EAHL,EAA3B;EAKA,MAAMC,KAAqB,GAAG,CAACF,OAAD,EAAUG,MAAV,CAAiBd,aAAjB,CAA9B;;EAEA,MAAMe,UAAU,GAAIb,IAAD,IAAwB;IACzC,MAAM;MAAEc,GAAF;MAAOC,MAAP;MAAeC;IAAf,IAA2BhB,IAAjC;IACAgB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;;IAEP,IAAIF,GAAJ,EAAS;MACP,IAAI,CAACC,MAAD,IAAWD,GAAG,CAACG,UAAJ,CAAe,GAAf,CAAf,EAAoC;QAClCxC,eAAe,CAACyC,IAAhB,CAAqB3C,YAAY,CAAC4C,gBAAb,CAA8BL,GAA9B,CAArB;MACD,CAFD,MAEO;QACLM,MAAM,CAACC,IAAP,CAAYP,GAAZ,EAAiBC,MAAjB;MACD;IACF;EACF,CAXD;;EAaA,MAAMO,cAAc,GAAGhC,IAAI,CAACiC,EAAL,IAAWvC,oBAAoB,CAACM,IAAI,CAACiC,EAAN,CAAtD;EACA,MAAMC,QAAQ,GAAGF,cAAc,GAAG/B,IAAI,CAACkC,CAAL,CAAOH,cAAP,CAAH,GAA4BhC,IAAI,CAACoC,IAAhE;EAEA,oBACE;IAAI,SAAS,EAAEvD,EAAE,CAACoC,MAAM,CAACoB,SAAR,EAAmB;MAAE,CAACpB,MAAM,CAACqB,cAAR,GAAyBnB,OAAO,CAACc,EAAR,KAAe5B;IAA1C,CAAnB,EAA2EP,SAA3E,CAAjB;IAAA,uBACE,KAAC,qBAAD;MACE,IAAI,EAAEqB,OADR;MAEE,QAAQ,EAAEtB,QAFZ;MAGE,KAAK,EAAEqC,QAHT;MAIE,oBAAoB,EAAEnC,oBAJxB;MAAA,uBAME,KAAC,cAAD;QACE,KAAK,EAAEsB,KADT;QAEE,oBAAoB,EAAEtB,oBAFxB;QAGE,qBAAqB,EAAEgB,qBAHzB;QAIE,YAAY,EAAE,CAAC,SAAD,EAAY,UAAZ,CAJhB;QAKE,cAAYI,OAAO,CAACiB,IALtB;QAME,UAAU,EAAEb,UANd;QAAA,UAQIb,IAAD,IAAwB;UACvB,MAAMsB,cAAc,GAAGtB,IAAI,CAACuB,EAAL,IAAWvC,oBAAoB,CAACgB,IAAI,CAACuB,EAAN,CAAtD;UACA,MAAMM,QAAQ,GAAGP,cAAc,GAAG/B,IAAI,CAACkC,CAAL,CAAOH,cAAP,CAAH,GAA4BtB,IAAI,CAAC0B,IAAhE;UACA,MAAMI,SAAS,GAAG9B,IAAI,CAACI,YAAL,KAAsB5B,eAAe,CAACkC,OAAxD;UACA,MAAMqB,IAAI,GAAG/B,IAAI,CAACgC,gBAAL,IAAyB,CAACF,SAA1B,GAAuC9B,IAAI,CAAC+B,IAA5C,GAAgEE,SAA7E;UAEA,oBACE,KAAC,IAAD;YAAqC,SAAS,EAAEjC,IAAI,CAAC0B,IAArD;YAAA,uBACE,KAAC,cAAD;cACE,SAAS,EAAE,CAACI,SAAD,IAAc9B,IAAI,CAACkC,OADhC;cAEE,IAAI,EAAEH,IAFR;cAGE,MAAM,EAAE/B,IAAI,CAACe,MAHf;cAIE,IAAI,EAAEc,QAJR;cAKE,GAAG,EAAE7B,IAAI,CAACc,GALZ;cAME,OAAO,EAAEd,IAAI,CAACgB,OANhB;cAOE,cAAc,EAAE7C,EAAE,CAACoC,MAAM,CAAC4B,WAAR,EAAqB;gBAAE,CAAC5B,MAAM,CAAC6B,MAAR,GAAiBN;cAAnB,CAArB;YAPpB;UADF,GAAW7C,kBAAkB,CAACe,IAAD,CAA7B,CADF;QAaD;MA3BH;IANF;EADF,EADF;AAwCD,CA5ED;;AA8EA,eAAed,UAAf;;AAEA,MAAMsB,SAAS,GAAG,CAAChB,KAAD,EAAuBa,qBAAvB,EAAuDlB,QAAvD,uBACbN,8BAA8B,CAACW,KAAD,EAAQL,QAAR,CADjB;EAEhByC,cAAc,EAAE1D,GAAG,CAAC;IAClBmE,eAAe,EAAE7C,KAAK,CAAC8C,MAAN,CAAaC,MAAb,CAAoBC,KADnB;IAElBC,KAAK,EAAEjD,KAAK,CAAC8C,MAAN,CAAaZ,IAAb,CAAkBgB;EAFP,CAAD,CAFH;EAMhBP,WAAW,EAAEjE,GAAG,CAAC;IACfuE,KAAK,EAAEjD,KAAK,CAAC8C,MAAN,CAAaZ,IAAb,CAAkBgB;EADV,CAAD,CANA;EAShBN,MAAM,EAAElE,GAAG,CAAC;IACVyE,MAAM,EAAG,QAAOnD,KAAK,CAACoD,OAAN,CAAc,CAAd,CAAiB,MAAKvC,qBAAqB,GAAG,CAAH,GAAO,CAAE,KAD1D;IAEVwC,QAAQ,EAAErD,KAAK,CAACsD,UAAN,CAAiBC,EAAjB,CAAoBF,QAFpB;IAGVG,UAAU,EAAExD,KAAK,CAACsD,UAAN,CAAiBC,EAAjB,CAAoBC,UAHtB;IAIVC,OAAO,EAAG,GAAEzD,KAAK,CAACoD,OAAN,CAAc,CAAd,CAAiB,IAAGpD,KAAK,CAACoD,OAAN,CAAc,CAAd,CAAiB,EAJvC;IAKVM,UAAU,EAAE,QALF;IAMVC,KAAK,EAAE;EANG,CAAD;AATK,EAAlB"},"metadata":{},"sourceType":"module"}