{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { Modal } from '@grafana/ui';\nimport { NetworkGraph } from './NetworkGraph';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function NetworkGraphModal({\n  edges,\n  nodes,\n  show: propsShow,\n  title,\n  children\n}) {\n  const [show, setShow] = useState(propsShow);\n  const showModal = useCallback(() => setShow(true), [setShow]);\n  const onClose = useCallback(() => setShow(false), [setShow]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Modal, {\n      isOpen: show,\n      title: title,\n      icon: \"info-circle\",\n      iconTooltip: \"The graph can be moved, zoomed in, and zoomed out.\",\n      onClickBackdrop: onClose,\n      onDismiss: onClose,\n      children: /*#__PURE__*/_jsx(NetworkGraph, {\n        nodes: nodes,\n        edges: edges\n      })\n    }), children({\n      showModal\n    })]\n  });\n}","map":{"version":3,"names":["React","useCallback","useState","Modal","NetworkGraph","NetworkGraphModal","edges","nodes","show","propsShow","title","children","setShow","showModal","onClose"],"sources":["/home/soula/grafana/public/app/features/variables/inspect/NetworkGraphModal.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { Modal } from '@grafana/ui';\n\nimport { NetworkGraph, Props as NetWorkGraphProps } from './NetworkGraph';\nimport { GraphEdge, GraphNode } from './utils';\n\ninterface NetworkGraphModalApi {\n  showModal: () => void;\n}\n\ninterface OwnProps extends Pick<NetWorkGraphProps, 'direction'> {\n  show: boolean;\n  title: string;\n  nodes: GraphNode[];\n  edges: GraphEdge[];\n  children: (api: NetworkGraphModalApi) => JSX.Element;\n}\n\ninterface ConnectedProps {}\n\ninterface DispatchProps {}\n\ntype Props = OwnProps & ConnectedProps & DispatchProps;\n\nexport function NetworkGraphModal({ edges, nodes, show: propsShow, title, children }: Props): JSX.Element {\n  const [show, setShow] = useState(propsShow);\n  const showModal = useCallback(() => setShow(true), [setShow]);\n  const onClose = useCallback(() => setShow(false), [setShow]);\n\n  return (\n    <>\n      <Modal\n        isOpen={show}\n        title={title}\n        icon=\"info-circle\"\n        iconTooltip=\"The graph can be moved, zoomed in, and zoomed out.\"\n        onClickBackdrop={onClose}\n        onDismiss={onClose}\n      >\n        <NetworkGraph nodes={nodes} edges={edges} />\n      </Modal>\n      {children({ showModal })}\n    </>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,YAAT,QAAyD,gBAAzD;;;;AAqBA,OAAO,SAASC,iBAAT,CAA2B;EAAEC,KAAF;EAASC,KAAT;EAAgBC,IAAI,EAAEC,SAAtB;EAAiCC,KAAjC;EAAwCC;AAAxC,CAA3B,EAAmG;EACxG,MAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,CAACO,SAAD,CAAhC;EACA,MAAMI,SAAS,GAAGZ,WAAW,CAAC,MAAMW,OAAO,CAAC,IAAD,CAAd,EAAsB,CAACA,OAAD,CAAtB,CAA7B;EACA,MAAME,OAAO,GAAGb,WAAW,CAAC,MAAMW,OAAO,CAAC,KAAD,CAAd,EAAuB,CAACA,OAAD,CAAvB,CAA3B;EAEA,oBACE;IAAA,wBACE,KAAC,KAAD;MACE,MAAM,EAAEJ,IADV;MAEE,KAAK,EAAEE,KAFT;MAGE,IAAI,EAAC,aAHP;MAIE,WAAW,EAAC,oDAJd;MAKE,eAAe,EAAEI,OALnB;MAME,SAAS,EAAEA,OANb;MAAA,uBAQE,KAAC,YAAD;QAAc,KAAK,EAAEP,KAArB;QAA4B,KAAK,EAAED;MAAnC;IARF,EADF,EAWGK,QAAQ,CAAC;MAAEE;IAAF,CAAD,CAXX;EAAA,EADF;AAeD"},"metadata":{},"sourceType":"module"}