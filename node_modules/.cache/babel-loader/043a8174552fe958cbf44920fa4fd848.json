{"ast":null,"code":"var _span, _i;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Icon, ConfirmButton, Button } from '@grafana/ui';\nimport alertDef from './state/alertDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nclass StateHistory extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      stateHistoryItems: []\n    });\n\n    _defineProperty(this, \"clearHistory\", async () => {\n      const {\n        dashboard,\n        panelId,\n        onRefresh\n      } = this.props;\n      await getBackendSrv().post('/api/annotations/mass-delete', {\n        dashboardId: dashboard.id,\n        panelId: panelId\n      });\n      this.setState({\n        stateHistoryItems: []\n      });\n      onRefresh();\n    });\n  }\n\n  componentDidMount() {\n    const {\n      dashboard,\n      panelId\n    } = this.props;\n    getBackendSrv().get(`/api/annotations?dashboardId=${dashboard.id}&panelId=${panelId}&limit=50&type=alert`, {}, `state-history-${dashboard.id}-${panelId}`).then(data => {\n      const items = data.map(item => {\n        return {\n          stateModel: alertDef.getStateDisplayModel(item.newState),\n          time: dashboard.formatDate(item.time, 'MMM D, YYYY HH:mm:ss'),\n          info: alertDef.getAlertAnnotationInfo(item)\n        };\n      });\n      this.setState({\n        stateHistoryItems: items\n      });\n    });\n  }\n\n  render() {\n    const {\n      stateHistoryItems\n    } = this.state;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [stateHistoryItems.length > 0 && /*#__PURE__*/_jsxs(\"div\", {\n        className: \"p-b-1\",\n        children: [_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"muted\",\n          children: \"Last 50 state changes\"\n        })), /*#__PURE__*/_jsx(ConfirmButton, {\n          onConfirm: this.clearHistory,\n          confirmVariant: \"destructive\",\n          confirmText: \"Clear\",\n          children: /*#__PURE__*/_jsx(Button, {\n            className: css`\n                  direction: ltr;\n                `,\n            variant: \"destructive\",\n            icon: \"trash-alt\",\n            children: \"Clear history\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"ol\", {\n        className: \"alert-rule-list\",\n        children: stateHistoryItems.length > 0 ? stateHistoryItems.map((item, index) => {\n          return /*#__PURE__*/_jsxs(\"li\", {\n            className: \"alert-rule-item\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: `alert-rule-item__icon ${item.stateModel.stateClass}`,\n              children: /*#__PURE__*/_jsx(Icon, {\n                name: item.stateModel.iconClass,\n                size: \"xl\"\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"alert-rule-item__body\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"alert-rule-item__header\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: \"alert-rule-item__name\",\n                  children: item.alertName\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"alert-rule-item__text\",\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    className: `${item.stateModel.stateClass}`,\n                    children: item.stateModel.text\n                  })\n                })]\n              }), item.info]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert-rule-item__time\",\n              children: item.time\n            })]\n          }, `${item.time}-${index}`);\n        }) : _i || (_i = /*#__PURE__*/_jsx(\"i\", {\n          children: \"No state changes recorded\"\n        }))\n      })]\n    });\n  }\n\n}\n\nexport default StateHistory;","map":{"version":3,"names":["css","React","PureComponent","getBackendSrv","Icon","ConfirmButton","Button","alertDef","StateHistory","stateHistoryItems","dashboard","panelId","onRefresh","props","post","dashboardId","id","setState","componentDidMount","get","then","data","items","map","item","stateModel","getStateDisplayModel","newState","time","formatDate","info","getAlertAnnotationInfo","render","state","length","clearHistory","index","stateClass","iconClass","alertName","text"],"sources":["/home/soula/grafana/public/app/features/alerting/StateHistory.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Icon, ConfirmButton, Button } from '@grafana/ui';\n\nimport { DashboardModel } from '../dashboard/state/DashboardModel';\n\nimport alertDef from './state/alertDef';\n\ninterface Props {\n  dashboard: DashboardModel;\n  panelId: number;\n  onRefresh: () => void;\n}\n\ninterface State {\n  stateHistoryItems: any[];\n}\n\nclass StateHistory extends PureComponent<Props, State> {\n  state: State = {\n    stateHistoryItems: [],\n  };\n\n  componentDidMount(): void {\n    const { dashboard, panelId } = this.props;\n\n    getBackendSrv()\n      .get(\n        `/api/annotations?dashboardId=${dashboard.id}&panelId=${panelId}&limit=50&type=alert`,\n        {},\n        `state-history-${dashboard.id}-${panelId}`\n      )\n      .then((data) => {\n        const items = data.map((item: any) => {\n          return {\n            stateModel: alertDef.getStateDisplayModel(item.newState),\n            time: dashboard.formatDate(item.time, 'MMM D, YYYY HH:mm:ss'),\n            info: alertDef.getAlertAnnotationInfo(item),\n          };\n        });\n\n        this.setState({\n          stateHistoryItems: items,\n        });\n      });\n  }\n\n  clearHistory = async () => {\n    const { dashboard, panelId, onRefresh } = this.props;\n\n    await getBackendSrv().post('/api/annotations/mass-delete', {\n      dashboardId: dashboard.id,\n      panelId: panelId,\n    });\n\n    this.setState({ stateHistoryItems: [] });\n    onRefresh();\n  };\n\n  render() {\n    const { stateHistoryItems } = this.state;\n\n    return (\n      <div>\n        {stateHistoryItems.length > 0 && (\n          <div className=\"p-b-1\">\n            <span className=\"muted\">Last 50 state changes</span>\n            <ConfirmButton onConfirm={this.clearHistory} confirmVariant=\"destructive\" confirmText=\"Clear\">\n              <Button\n                className={css`\n                  direction: ltr;\n                `}\n                variant=\"destructive\"\n                icon=\"trash-alt\"\n              >\n                Clear history\n              </Button>\n            </ConfirmButton>\n          </div>\n        )}\n        <ol className=\"alert-rule-list\">\n          {stateHistoryItems.length > 0 ? (\n            stateHistoryItems.map((item, index) => {\n              return (\n                <li className=\"alert-rule-item\" key={`${item.time}-${index}`}>\n                  <div className={`alert-rule-item__icon ${item.stateModel.stateClass}`}>\n                    <Icon name={item.stateModel.iconClass} size=\"xl\" />\n                  </div>\n                  <div className=\"alert-rule-item__body\">\n                    <div className=\"alert-rule-item__header\">\n                      <p className=\"alert-rule-item__name\">{item.alertName}</p>\n                      <div className=\"alert-rule-item__text\">\n                        <span className={`${item.stateModel.stateClass}`}>{item.stateModel.text}</span>\n                      </div>\n                    </div>\n                    {item.info}\n                  </div>\n                  <div className=\"alert-rule-item__time\">{item.time}</div>\n                </li>\n              );\n            })\n          ) : (\n            <i>No state changes recorded</i>\n          )}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default StateHistory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}