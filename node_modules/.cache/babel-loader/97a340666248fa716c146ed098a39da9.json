{"ast":null,"code":"var _p, _a;\n\nimport React from 'react';\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({\n  className,\n  plugin\n}) {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n  const isDisabled = plugin.isDisabled && isDisabledDueTooSignatureError(plugin.error); // The basic information is already available in the header\n\n  if (isSignatureValid || isCore || isDisabled) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(Alert, {\n    severity: \"warning\",\n    title: \"Invalid plugin signature\",\n    \"aria-label\": selectors.pages.PluginPage.signatureInfo,\n    className: className,\n    children: [_p || (_p = /*#__PURE__*/_jsx(\"p\", {\n      children: \"Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs can\\u2019t guarantee the integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\"\n    })), _a || (_a = /*#__PURE__*/_jsx(\"a\", {\n      href: \"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\",\n      className: \"external-link\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Read more about plugins signing.\"\n    }))]\n  });\n}\n\nfunction isDisabledDueTooSignatureError(error) {\n  // If the plugin is disabled due to signature error we rely on the disabled\n  // error message instad of the warning about the signature.\n  switch (error) {\n    case PluginErrorCode.invalidSignature:\n    case PluginErrorCode.missingSignature:\n    case PluginErrorCode.modifiedSignature:\n      return true;\n\n    default:\n      return false;\n  }\n}","map":{"version":3,"names":["React","PluginErrorCode","PluginSignatureStatus","selectors","Alert","PluginDetailsSignature","className","plugin","isSignatureValid","signature","valid","isCore","internal","isDisabled","isDisabledDueTooSignatureError","error","pages","PluginPage","signatureInfo","invalidSignature","missingSignature","modifiedSignature"],"sources":["/home/soula/grafana/public/app/features/plugins/admin/components/PluginDetailsSignature.tsx"],"sourcesContent":["import React from 'react';\n\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({ className, plugin }: Props): React.ReactElement | null {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n  const isDisabled = plugin.isDisabled && isDisabledDueTooSignatureError(plugin.error);\n\n  // The basic information is already available in the header\n  if (isSignatureValid || isCore || isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"warning\"\n      title=\"Invalid plugin signature\"\n      aria-label={selectors.pages.PluginPage.signatureInfo}\n      className={className}\n    >\n      <p>\n        Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification\n        is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs canâ€™t guarantee the\n        integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\n      </p>\n\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about plugins signing.\n      </a>\n    </Alert>\n  );\n}\n\nfunction isDisabledDueTooSignatureError(error: PluginErrorCode | undefined) {\n  // If the plugin is disabled due to signature error we rely on the disabled\n  // error message instad of the warning about the signature.\n\n  switch (error) {\n    case PluginErrorCode.invalidSignature:\n    case PluginErrorCode.missingSignature:\n    case PluginErrorCode.modifiedSignature:\n      return true;\n\n    default:\n      return false;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,eAAvD;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,KAAT,QAAsB,aAAtB;;;AASA;AACA,OAAO,SAASC,sBAAT,CAAgC;EAAEC,SAAF;EAAaC;AAAb,CAAhC,EAAyF;EAC9F,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,SAAP,KAAqBP,qBAAqB,CAACQ,KAApE;EACA,MAAMC,MAAM,GAAGJ,MAAM,CAACE,SAAP,KAAqBP,qBAAqB,CAACU,QAA1D;EACA,MAAMC,UAAU,GAAGN,MAAM,CAACM,UAAP,IAAqBC,8BAA8B,CAACP,MAAM,CAACQ,KAAR,CAAtE,CAH8F,CAK9F;;EACA,IAAIP,gBAAgB,IAAIG,MAApB,IAA8BE,UAAlC,EAA8C;IAC5C,OAAO,IAAP;EACD;;EAED,oBACE,MAAC,KAAD;IACE,QAAQ,EAAC,SADX;IAEE,KAAK,EAAC,0BAFR;IAGE,cAAYV,SAAS,CAACa,KAAV,CAAgBC,UAAhB,CAA2BC,aAHzC;IAIE,SAAS,EAAEZ,SAJb;IAAA,oCAME;MAAA;IAAA,EANF,4BAYE;MACE,IAAI,EAAC,oEADP;MAEE,SAAS,EAAC,eAFZ;MAGE,MAAM,EAAC,QAHT;MAIE,GAAG,EAAC,YAJN;MAAA;IAAA,EAZF;EAAA,EADF;AAuBD;;AAED,SAASQ,8BAAT,CAAwCC,KAAxC,EAA4E;EAC1E;EACA;EAEA,QAAQA,KAAR;IACE,KAAKd,eAAe,CAACkB,gBAArB;IACA,KAAKlB,eAAe,CAACmB,gBAArB;IACA,KAAKnB,eAAe,CAACoB,iBAArB;MACE,OAAO,IAAP;;IAEF;MACE,OAAO,KAAP;EAPJ;AASD"},"metadata":{},"sourceType":"module"}