{"ast":null,"code":"import { ComparisonOperation } from '../types';\n/**\n * Check whether feature has property value that matches rule\n * @param rule - style rule with an operation, property, and value\n * @param feature - feature with properties and values\n * @returns boolean\n */\n\nexport const checkFeatureMatchesStyleRule = (rule, feature) => {\n  const val = feature.get(rule.property);\n\n  switch (rule.operation) {\n    case ComparisonOperation.EQ:\n      return `${val}` === `${rule.value}`;\n\n    case ComparisonOperation.NEQ:\n      return val !== rule.value;\n\n    case ComparisonOperation.GT:\n      return val > rule.value;\n\n    case ComparisonOperation.GTE:\n      return val >= rule.value;\n\n    case ComparisonOperation.LT:\n      return val < rule.value;\n\n    case ComparisonOperation.LTE:\n      return val <= rule.value;\n\n    default:\n      return false;\n  }\n};","map":{"version":3,"names":["ComparisonOperation","checkFeatureMatchesStyleRule","rule","feature","val","get","property","operation","EQ","value","NEQ","GT","GTE","LT","LTE"],"sources":["/home/soula/grafana/public/app/plugins/panel/geomap/utils/checkFeatureMatchesStyleRule.ts"],"sourcesContent":["import { FeatureLike } from 'ol/Feature';\n\nimport { FeatureRuleConfig, ComparisonOperation } from '../types';\n\n/**\n * Check whether feature has property value that matches rule\n * @param rule - style rule with an operation, property, and value\n * @param feature - feature with properties and values\n * @returns boolean\n */\nexport const checkFeatureMatchesStyleRule = (rule: FeatureRuleConfig, feature: FeatureLike) => {\n  const val = feature.get(rule.property);\n  switch (rule.operation) {\n    case ComparisonOperation.EQ:\n      return `${val}` === `${rule.value}`;\n    case ComparisonOperation.NEQ:\n      return val !== rule.value;\n    case ComparisonOperation.GT:\n      return val > rule.value;\n    case ComparisonOperation.GTE:\n      return val >= rule.value;\n    case ComparisonOperation.LT:\n      return val < rule.value;\n    case ComparisonOperation.LTE:\n      return val <= rule.value;\n    default:\n      return false;\n  }\n};\n"],"mappings":"AAEA,SAA4BA,mBAA5B,QAAuD,UAAvD;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,4BAA4B,GAAG,CAACC,IAAD,EAA0BC,OAA1B,KAAmD;EAC7F,MAAMC,GAAG,GAAGD,OAAO,CAACE,GAAR,CAAYH,IAAI,CAACI,QAAjB,CAAZ;;EACA,QAAQJ,IAAI,CAACK,SAAb;IACE,KAAKP,mBAAmB,CAACQ,EAAzB;MACE,OAAQ,GAAEJ,GAAI,EAAP,KAAc,GAAEF,IAAI,CAACO,KAAM,EAAlC;;IACF,KAAKT,mBAAmB,CAACU,GAAzB;MACE,OAAON,GAAG,KAAKF,IAAI,CAACO,KAApB;;IACF,KAAKT,mBAAmB,CAACW,EAAzB;MACE,OAAOP,GAAG,GAAGF,IAAI,CAACO,KAAlB;;IACF,KAAKT,mBAAmB,CAACY,GAAzB;MACE,OAAOR,GAAG,IAAIF,IAAI,CAACO,KAAnB;;IACF,KAAKT,mBAAmB,CAACa,EAAzB;MACE,OAAOT,GAAG,GAAGF,IAAI,CAACO,KAAlB;;IACF,KAAKT,mBAAmB,CAACc,GAAzB;MACE,OAAOV,GAAG,IAAIF,IAAI,CAACO,KAAnB;;IACF;MACE,OAAO,KAAP;EAdJ;AAgBD,CAlBM"},"metadata":{},"sourceType":"module"}