{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is empty for now, as I think it's not going to be necessary.\n// This replaces Angular RouteParamsProvider implementation with a dummy one to keep the ball rolling\nimport { navigationLogger } from '@grafana/runtime';\nexport class RouteParamsProvider {\n  constructor() {\n    _defineProperty(this, \"$get\", () => {// throw new Error('TODO: Refactor $routeParams');\n    });\n\n    navigationLogger('Patch angular', false, 'RouteParamsProvider');\n  }\n\n}","map":{"version":3,"names":["navigationLogger","RouteParamsProvider","constructor"],"sources":["/home/soula/grafana/public/app/core/navigation/patch/RouteParamsProvider.ts"],"sourcesContent":["// This is empty for now, as I think it's not going to be necessary.\n// This replaces Angular RouteParamsProvider implementation with a dummy one to keep the ball rolling\n\nimport { navigationLogger } from '@grafana/runtime';\n\nexport class RouteParamsProvider {\n  constructor() {\n    navigationLogger('Patch angular', false, 'RouteParamsProvider');\n  }\n  $get = () => {\n    // throw new Error('TODO: Refactor $routeParams');\n  };\n}\n"],"mappings":";;AAAA;AACA;AAEA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,mBAAN,CAA0B;EAC/BC,WAAW,GAAG;IAAA,8BAGP,MAAM,CACX;IACD,CALa;;IACZF,gBAAgB,CAAC,eAAD,EAAkB,KAAlB,EAAyB,qBAAzB,CAAhB;EACD;;AAH8B"},"metadata":{},"sourceType":"module"}