{"ast":null,"code":"import React, { memo } from 'react';\nimport { Checkbox } from '@grafana/ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SearchCheckbox = /*#__PURE__*/memo(({\n  onClick,\n  className,\n  checked = false,\n  editable = false,\n  'aria-label': ariaLabel\n}) => {\n  return editable ? /*#__PURE__*/_jsx(\"div\", {\n    onClick: onClick,\n    className: className,\n    children: /*#__PURE__*/_jsx(Checkbox, {\n      value: checked,\n      \"aria-label\": ariaLabel\n    })\n  }) : null;\n});\nSearchCheckbox.displayName = 'SearchCheckbox';","map":{"version":3,"names":["React","memo","Checkbox","SearchCheckbox","onClick","className","checked","editable","ariaLabel","displayName"],"sources":["/home/soula/grafana/public/app/features/search/components/SearchCheckbox.tsx"],"sourcesContent":["import React, { FC, memo } from 'react';\n\nimport { Checkbox } from '@grafana/ui';\n\ninterface Props {\n  checked?: boolean;\n  onClick?: React.MouseEventHandler<HTMLInputElement>;\n  className?: string;\n  editable?: boolean;\n  'aria-label'?: string;\n}\n\nexport const SearchCheckbox: FC<Props> = memo(\n  ({ onClick, className, checked = false, editable = false, 'aria-label': ariaLabel }) => {\n    return editable ? (\n      <div onClick={onClick} className={className}>\n        <Checkbox value={checked} aria-label={ariaLabel} />\n      </div>\n    ) : null;\n  }\n);\n\nSearchCheckbox.displayName = 'SearchCheckbox';\n"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,IAApB,QAAgC,OAAhC;AAEA,SAASC,QAAT,QAAyB,aAAzB;;AAUA,OAAO,MAAMC,cAAyB,gBAAGF,IAAI,CAC3C,CAAC;EAAEG,OAAF;EAAWC,SAAX;EAAsBC,OAAO,GAAG,KAAhC;EAAuCC,QAAQ,GAAG,KAAlD;EAAyD,cAAcC;AAAvE,CAAD,KAAwF;EACtF,OAAOD,QAAQ,gBACb;IAAK,OAAO,EAAEH,OAAd;IAAuB,SAAS,EAAEC,SAAlC;IAAA,uBACE,KAAC,QAAD;MAAU,KAAK,EAAEC,OAAjB;MAA0B,cAAYE;IAAtC;EADF,EADa,GAIX,IAJJ;AAKD,CAP0C,CAAtC;AAUPL,cAAc,CAACM,WAAf,GAA6B,gBAA7B"},"metadata":{},"sourceType":"module"}